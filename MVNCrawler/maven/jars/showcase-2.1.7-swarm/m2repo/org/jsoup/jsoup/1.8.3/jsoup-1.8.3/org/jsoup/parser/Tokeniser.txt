Compiled from "Tokeniser.java"
final class org.jsoup.parser.Tokeniser {
  static final char replacementChar;

  private static final char[] notCharRefCharsSorted;

  private org.jsoup.parser.CharacterReader reader;

  private org.jsoup.parser.ParseErrorList errors;

  private org.jsoup.parser.TokeniserState state;

  private org.jsoup.parser.Token emitPending;

  private boolean isEmitPending;

  private java.lang.String charsString;

  private java.lang.StringBuilder charsBuilder;

  java.lang.StringBuilder dataBuffer;

  org.jsoup.parser.Token$Tag tagPending;

  org.jsoup.parser.Token$StartTag startPending;

  org.jsoup.parser.Token$EndTag endPending;

  org.jsoup.parser.Token$Character charPending;

  org.jsoup.parser.Token$Doctype doctypePending;

  org.jsoup.parser.Token$Comment commentPending;

  private java.lang.String lastStartTag;

  private boolean selfClosingFlagAcknowledged;

  private final char[] charRefHolder;

  org.jsoup.parser.Tokeniser(org.jsoup.parser.CharacterReader, org.jsoup.parser.ParseErrorList);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/jsoup/parser/TokeniserState.Data:Lorg/jsoup/parser/TokeniserState;
       8: putfield      #3                  // Field state:Lorg/jsoup/parser/TokeniserState;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field isEmitPending:Z
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field charsString:Ljava/lang/String;
      21: aload_0
      22: new           #6                  // class java/lang/StringBuilder
      25: dup
      26: sipush        1024
      29: invokespecial #7                  // Method java/lang/StringBuilder."<init>":(I)V
      32: putfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      35: aload_0
      36: new           #6                  // class java/lang/StringBuilder
      39: dup
      40: sipush        1024
      43: invokespecial #7                  // Method java/lang/StringBuilder."<init>":(I)V
      46: putfield      #9                  // Field dataBuffer:Ljava/lang/StringBuilder;
      49: aload_0
      50: new           #10                 // class org/jsoup/parser/Token$StartTag
      53: dup
      54: invokespecial #11                 // Method org/jsoup/parser/Token$StartTag."<init>":()V
      57: putfield      #12                 // Field startPending:Lorg/jsoup/parser/Token$StartTag;
      60: aload_0
      61: new           #13                 // class org/jsoup/parser/Token$EndTag
      64: dup
      65: invokespecial #14                 // Method org/jsoup/parser/Token$EndTag."<init>":()V
      68: putfield      #15                 // Field endPending:Lorg/jsoup/parser/Token$EndTag;
      71: aload_0
      72: new           #16                 // class org/jsoup/parser/Token$Character
      75: dup
      76: invokespecial #17                 // Method org/jsoup/parser/Token$Character."<init>":()V
      79: putfield      #18                 // Field charPending:Lorg/jsoup/parser/Token$Character;
      82: aload_0
      83: new           #19                 // class org/jsoup/parser/Token$Doctype
      86: dup
      87: invokespecial #20                 // Method org/jsoup/parser/Token$Doctype."<init>":()V
      90: putfield      #21                 // Field doctypePending:Lorg/jsoup/parser/Token$Doctype;
      93: aload_0
      94: new           #22                 // class org/jsoup/parser/Token$Comment
      97: dup
      98: invokespecial #23                 // Method org/jsoup/parser/Token$Comment."<init>":()V
     101: putfield      #24                 // Field commentPending:Lorg/jsoup/parser/Token$Comment;
     104: aload_0
     105: iconst_1
     106: putfield      #25                 // Field selfClosingFlagAcknowledged:Z
     109: aload_0
     110: iconst_1
     111: newarray       char
     113: putfield      #26                 // Field charRefHolder:[C
     116: aload_0
     117: aload_1
     118: putfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     121: aload_0
     122: aload_2
     123: putfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
     126: return

  org.jsoup.parser.Token read();
    Code:
       0: aload_0
       1: getfield      #25                 // Field selfClosingFlagAcknowledged:Z
       4: ifne          18
       7: aload_0
       8: ldc           #29                 // String Self closing flag not acknowledged
      10: invokespecial #30                 // Method error:(Ljava/lang/String;)V
      13: aload_0
      14: iconst_1
      15: putfield      #25                 // Field selfClosingFlagAcknowledged:Z
      18: aload_0
      19: getfield      #4                  // Field isEmitPending:Z
      22: ifne          40
      25: aload_0
      26: getfield      #3                  // Field state:Lorg/jsoup/parser/TokeniserState;
      29: aload_0
      30: aload_0
      31: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      34: invokevirtual #31                 // Method org/jsoup/parser/TokeniserState.read:(Lorg/jsoup/parser/Tokeniser;Lorg/jsoup/parser/CharacterReader;)V
      37: goto          18
      40: aload_0
      41: getfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      44: invokevirtual #32                 // Method java/lang/StringBuilder.length:()I
      47: ifle          88
      50: aload_0
      51: getfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      54: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: astore_1
      58: aload_0
      59: getfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      62: iconst_0
      63: aload_0
      64: getfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      67: invokevirtual #32                 // Method java/lang/StringBuilder.length:()I
      70: invokevirtual #34                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      73: pop
      74: aload_0
      75: aconst_null
      76: putfield      #5                  // Field charsString:Ljava/lang/String;
      79: aload_0
      80: getfield      #18                 // Field charPending:Lorg/jsoup/parser/Token$Character;
      83: aload_1
      84: invokevirtual #35                 // Method org/jsoup/parser/Token$Character.data:(Ljava/lang/String;)Lorg/jsoup/parser/Token$Character;
      87: areturn
      88: aload_0
      89: getfield      #5                  // Field charsString:Ljava/lang/String;
      92: ifnull        114
      95: aload_0
      96: getfield      #18                 // Field charPending:Lorg/jsoup/parser/Token$Character;
      99: aload_0
     100: getfield      #5                  // Field charsString:Ljava/lang/String;
     103: invokevirtual #35                 // Method org/jsoup/parser/Token$Character.data:(Ljava/lang/String;)Lorg/jsoup/parser/Token$Character;
     106: astore_1
     107: aload_0
     108: aconst_null
     109: putfield      #5                  // Field charsString:Ljava/lang/String;
     112: aload_1
     113: areturn
     114: aload_0
     115: iconst_0
     116: putfield      #4                  // Field isEmitPending:Z
     119: aload_0
     120: getfield      #36                 // Field emitPending:Lorg/jsoup/parser/Token;
     123: areturn

  void emit(org.jsoup.parser.Token);
    Code:
       0: aload_0
       1: getfield      #4                  // Field isEmitPending:Z
       4: ldc           #37                 // String There is an unread token pending!
       6: invokestatic  #38                 // Method org/jsoup/helper/Validate.isFalse:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_1
      11: putfield      #36                 // Field emitPending:Lorg/jsoup/parser/Token;
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field isEmitPending:Z
      19: aload_1
      20: getfield      #39                 // Field org/jsoup/parser/Token.type:Lorg/jsoup/parser/Token$TokenType;
      23: getstatic     #40                 // Field org/jsoup/parser/Token$TokenType.StartTag:Lorg/jsoup/parser/Token$TokenType;
      26: if_acmpne     57
      29: aload_1
      30: checkcast     #10                 // class org/jsoup/parser/Token$StartTag
      33: astore_2
      34: aload_0
      35: aload_2
      36: getfield      #41                 // Field org/jsoup/parser/Token$StartTag.tagName:Ljava/lang/String;
      39: putfield      #42                 // Field lastStartTag:Ljava/lang/String;
      42: aload_2
      43: getfield      #43                 // Field org/jsoup/parser/Token$StartTag.selfClosing:Z
      46: ifeq          54
      49: aload_0
      50: iconst_0
      51: putfield      #25                 // Field selfClosingFlagAcknowledged:Z
      54: goto          85
      57: aload_1
      58: getfield      #39                 // Field org/jsoup/parser/Token.type:Lorg/jsoup/parser/Token$TokenType;
      61: getstatic     #44                 // Field org/jsoup/parser/Token$TokenType.EndTag:Lorg/jsoup/parser/Token$TokenType;
      64: if_acmpne     85
      67: aload_1
      68: checkcast     #13                 // class org/jsoup/parser/Token$EndTag
      71: astore_2
      72: aload_2
      73: getfield      #45                 // Field org/jsoup/parser/Token$EndTag.attributes:Lorg/jsoup/nodes/Attributes;
      76: ifnull        85
      79: aload_0
      80: ldc           #46                 // String Attributes incorrectly present on end tag
      82: invokespecial #30                 // Method error:(Ljava/lang/String;)V
      85: return

  void emit(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field charsString:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #5                  // Field charsString:Ljava/lang/String;
      12: goto          46
      15: aload_0
      16: getfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      19: invokevirtual #32                 // Method java/lang/StringBuilder.length:()I
      22: ifne          37
      25: aload_0
      26: getfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #5                  // Field charsString:Ljava/lang/String;
      33: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_0
      38: getfield      #8                  // Field charsBuilder:Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: return

  void emit(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method java/lang/String.valueOf:([C)Ljava/lang/String;
       5: invokevirtual #49                 // Method emit:(Ljava/lang/String;)V
       8: return

  void emit(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #50                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       5: invokevirtual #49                 // Method emit:(Ljava/lang/String;)V
       8: return

  org.jsoup.parser.TokeniserState getState();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lorg/jsoup/parser/TokeniserState;
       4: areturn

  void transition(org.jsoup.parser.TokeniserState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field state:Lorg/jsoup/parser/TokeniserState;
       5: return

  void advanceTransition(org.jsoup.parser.TokeniserState);
    Code:
       0: aload_0
       1: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
       4: invokevirtual #51                 // Method org/jsoup/parser/CharacterReader.advance:()V
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field state:Lorg/jsoup/parser/TokeniserState;
      12: return

  void acknowledgeSelfClosingFlag();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #25                 // Field selfClosingFlagAcknowledged:Z
       5: return

  char[] consumeCharacterReference(java.lang.Character, boolean);
    Code:
       0: aload_0
       1: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
       4: invokevirtual #52                 // Method org/jsoup/parser/CharacterReader.isEmpty:()Z
       7: ifeq          12
      10: aconst_null
      11: areturn
      12: aload_1
      13: ifnull        32
      16: aload_1
      17: invokevirtual #53                 // Method java/lang/Character.charValue:()C
      20: aload_0
      21: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      24: invokevirtual #54                 // Method org/jsoup/parser/CharacterReader.current:()C
      27: if_icmpne     32
      30: aconst_null
      31: areturn
      32: aload_0
      33: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      36: getstatic     #55                 // Field notCharRefCharsSorted:[C
      39: invokevirtual #56                 // Method org/jsoup/parser/CharacterReader.matchesAnySorted:([C)Z
      42: ifeq          47
      45: aconst_null
      46: areturn
      47: aload_0
      48: getfield      #26                 // Field charRefHolder:[C
      51: astore_3
      52: aload_0
      53: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      56: invokevirtual #57                 // Method org/jsoup/parser/CharacterReader.mark:()V
      59: aload_0
      60: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      63: ldc           #58                 // String #
      65: invokevirtual #59                 // Method org/jsoup/parser/CharacterReader.matchConsume:(Ljava/lang/String;)Z
      68: ifeq          242
      71: aload_0
      72: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      75: ldc           #60                 // String X
      77: invokevirtual #61                 // Method org/jsoup/parser/CharacterReader.matchConsumeIgnoreCase:(Ljava/lang/String;)Z
      80: istore        4
      82: iload         4
      84: ifeq          97
      87: aload_0
      88: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      91: invokevirtual #62                 // Method org/jsoup/parser/CharacterReader.consumeHexSequence:()Ljava/lang/String;
      94: goto          104
      97: aload_0
      98: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     101: invokevirtual #63                 // Method org/jsoup/parser/CharacterReader.consumeDigitSequence:()Ljava/lang/String;
     104: astore        5
     106: aload         5
     108: invokevirtual #64                 // Method java/lang/String.length:()I
     111: ifne          129
     114: aload_0
     115: ldc           #65                 // String numeric reference with no numerals
     117: invokespecial #66                 // Method characterReferenceError:(Ljava/lang/String;)V
     120: aload_0
     121: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     124: invokevirtual #67                 // Method org/jsoup/parser/CharacterReader.rewindToMark:()V
     127: aconst_null
     128: areturn
     129: aload_0
     130: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     133: ldc           #68                 // String ;
     135: invokevirtual #59                 // Method org/jsoup/parser/CharacterReader.matchConsume:(Ljava/lang/String;)Z
     138: ifne          147
     141: aload_0
     142: ldc           #69                 // String missing semicolon
     144: invokespecial #66                 // Method characterReferenceError:(Ljava/lang/String;)V
     147: iconst_m1
     148: istore        6
     150: iload         4
     152: ifeq          160
     155: bipush        16
     157: goto          162
     160: bipush        10
     162: istore        7
     164: aload         5
     166: iload         7
     168: invokestatic  #70                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;I)Ljava/lang/Integer;
     171: invokevirtual #71                 // Method java/lang/Integer.intValue:()I
     174: istore        6
     176: goto          181
     179: astore        7
     181: iload         6
     183: iconst_m1
     184: if_icmpeq     208
     187: iload         6
     189: ldc           #73                 // int 55296
     191: if_icmplt     201
     194: iload         6
     196: ldc           #74                 // int 57343
     198: if_icmple     208
     201: iload         6
     203: ldc           #75                 // int 1114111
     205: if_icmple     221
     208: aload_0
     209: ldc           #76                 // String character outside of valid range
     211: invokespecial #66                 // Method characterReferenceError:(Ljava/lang/String;)V
     214: aload_3
     215: iconst_0
     216: ldc           #78                 // int 65533
     218: castore
     219: aload_3
     220: areturn
     221: iload         6
     223: ldc           #80                 // int 65536
     225: if_icmpge     236
     228: aload_3
     229: iconst_0
     230: iload         6
     232: i2c
     233: castore
     234: aload_3
     235: areturn
     236: iload         6
     238: invokestatic  #81                 // Method java/lang/Character.toChars:(I)[C
     241: areturn
     242: aload_0
     243: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     246: invokevirtual #82                 // Method org/jsoup/parser/CharacterReader.consumeLetterThenDigitSequence:()Ljava/lang/String;
     249: astore        4
     251: aload_0
     252: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     255: bipush        59
     257: invokevirtual #83                 // Method org/jsoup/parser/CharacterReader.matches:(C)Z
     260: istore        5
     262: aload         4
     264: invokestatic  #84                 // Method org/jsoup/nodes/Entities.isBaseNamedEntity:(Ljava/lang/String;)Z
     267: ifne          283
     270: aload         4
     272: invokestatic  #85                 // Method org/jsoup/nodes/Entities.isNamedEntity:(Ljava/lang/String;)Z
     275: ifeq          287
     278: iload         5
     280: ifeq          287
     283: iconst_1
     284: goto          288
     287: iconst_0
     288: istore        6
     290: iload         6
     292: ifne          327
     295: aload_0
     296: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     299: invokevirtual #67                 // Method org/jsoup/parser/CharacterReader.rewindToMark:()V
     302: iload         5
     304: ifeq          325
     307: aload_0
     308: ldc           #86                 // String invalid named referenece \'%s\'
     310: iconst_1
     311: anewarray     #87                 // class java/lang/Object
     314: dup
     315: iconst_0
     316: aload         4
     318: aastore
     319: invokestatic  #88                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     322: invokespecial #66                 // Method characterReferenceError:(Ljava/lang/String;)V
     325: aconst_null
     326: areturn
     327: iload_2
     328: ifeq          388
     331: aload_0
     332: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     335: invokevirtual #89                 // Method org/jsoup/parser/CharacterReader.matchesLetter:()Z
     338: ifne          379
     341: aload_0
     342: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     345: invokevirtual #90                 // Method org/jsoup/parser/CharacterReader.matchesDigit:()Z
     348: ifne          379
     351: aload_0
     352: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     355: iconst_3
     356: newarray       char
     358: dup
     359: iconst_0
     360: bipush        61
     362: castore
     363: dup
     364: iconst_1
     365: bipush        45
     367: castore
     368: dup
     369: iconst_2
     370: bipush        95
     372: castore
     373: invokevirtual #91                 // Method org/jsoup/parser/CharacterReader.matchesAny:([C)Z
     376: ifeq          388
     379: aload_0
     380: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     383: invokevirtual #67                 // Method org/jsoup/parser/CharacterReader.rewindToMark:()V
     386: aconst_null
     387: areturn
     388: aload_0
     389: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
     392: ldc           #68                 // String ;
     394: invokevirtual #59                 // Method org/jsoup/parser/CharacterReader.matchConsume:(Ljava/lang/String;)Z
     397: ifne          406
     400: aload_0
     401: ldc           #69                 // String missing semicolon
     403: invokespecial #66                 // Method characterReferenceError:(Ljava/lang/String;)V
     406: aload_3
     407: iconst_0
     408: aload         4
     410: invokestatic  #92                 // Method org/jsoup/nodes/Entities.getCharacterByName:(Ljava/lang/String;)Ljava/lang/Character;
     413: invokevirtual #53                 // Method java/lang/Character.charValue:()C
     416: castore
     417: aload_3
     418: areturn
    Exception table:
       from    to  target type
         150   176   179   Class java/lang/NumberFormatException

  org.jsoup.parser.Token$Tag createTagPending(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          15
       5: aload_0
       6: getfield      #12                 // Field startPending:Lorg/jsoup/parser/Token$StartTag;
       9: invokevirtual #93                 // Method org/jsoup/parser/Token$StartTag.reset:()Lorg/jsoup/parser/Token$Tag;
      12: goto          22
      15: aload_0
      16: getfield      #15                 // Field endPending:Lorg/jsoup/parser/Token$EndTag;
      19: invokevirtual #94                 // Method org/jsoup/parser/Token$EndTag.reset:()Lorg/jsoup/parser/Token$Tag;
      22: putfield      #95                 // Field tagPending:Lorg/jsoup/parser/Token$Tag;
      25: aload_0
      26: getfield      #95                 // Field tagPending:Lorg/jsoup/parser/Token$Tag;
      29: areturn

  void emitTagPending();
    Code:
       0: aload_0
       1: getfield      #95                 // Field tagPending:Lorg/jsoup/parser/Token$Tag;
       4: invokevirtual #96                 // Method org/jsoup/parser/Token$Tag.finaliseTag:()V
       7: aload_0
       8: aload_0
       9: getfield      #95                 // Field tagPending:Lorg/jsoup/parser/Token$Tag;
      12: invokevirtual #97                 // Method emit:(Lorg/jsoup/parser/Token;)V
      15: return

  void createCommentPending();
    Code:
       0: aload_0
       1: getfield      #24                 // Field commentPending:Lorg/jsoup/parser/Token$Comment;
       4: invokevirtual #98                 // Method org/jsoup/parser/Token$Comment.reset:()Lorg/jsoup/parser/Token;
       7: pop
       8: return

  void emitCommentPending();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #24                 // Field commentPending:Lorg/jsoup/parser/Token$Comment;
       5: invokevirtual #97                 // Method emit:(Lorg/jsoup/parser/Token;)V
       8: return

  void createDoctypePending();
    Code:
       0: aload_0
       1: getfield      #21                 // Field doctypePending:Lorg/jsoup/parser/Token$Doctype;
       4: invokevirtual #99                 // Method org/jsoup/parser/Token$Doctype.reset:()Lorg/jsoup/parser/Token;
       7: pop
       8: return

  void emitDoctypePending();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #21                 // Field doctypePending:Lorg/jsoup/parser/Token$Doctype;
       5: invokevirtual #97                 // Method emit:(Lorg/jsoup/parser/Token;)V
       8: return

  void createTempBuffer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field dataBuffer:Ljava/lang/StringBuilder;
       4: invokestatic  #100                // Method org/jsoup/parser/Token.reset:(Ljava/lang/StringBuilder;)V
       7: return

  boolean isAppropriateEndTagToken();
    Code:
       0: aload_0
       1: getfield      #42                 // Field lastStartTag:Ljava/lang/String;
       4: ifnull        28
       7: aload_0
       8: getfield      #95                 // Field tagPending:Lorg/jsoup/parser/Token$Tag;
      11: getfield      #101                // Field org/jsoup/parser/Token$Tag.tagName:Ljava/lang/String;
      14: aload_0
      15: getfield      #42                 // Field lastStartTag:Ljava/lang/String;
      18: invokevirtual #102                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  java.lang.String appropriateEndTagName();
    Code:
       0: aload_0
       1: getfield      #42                 // Field lastStartTag:Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #42                 // Field lastStartTag:Ljava/lang/String;
      13: areturn

  void error(org.jsoup.parser.TokeniserState);
    Code:
       0: aload_0
       1: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
       4: invokevirtual #103                // Method org/jsoup/parser/ParseErrorList.canAddError:()Z
       7: ifeq          55
      10: aload_0
      11: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
      14: new           #104                // class org/jsoup/parser/ParseError
      17: dup
      18: aload_0
      19: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      22: invokevirtual #105                // Method org/jsoup/parser/CharacterReader.pos:()I
      25: ldc           #106                // String Unexpected character \'%s\' in input state [%s]
      27: iconst_2
      28: anewarray     #87                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_0
      34: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      37: invokevirtual #54                 // Method org/jsoup/parser/CharacterReader.current:()C
      40: invokestatic  #107                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      43: aastore
      44: dup
      45: iconst_1
      46: aload_1
      47: aastore
      48: invokespecial #108                // Method org/jsoup/parser/ParseError."<init>":(ILjava/lang/String;[Ljava/lang/Object;)V
      51: invokevirtual #109                // Method org/jsoup/parser/ParseErrorList.add:(Ljava/lang/Object;)Z
      54: pop
      55: return

  void eofError(org.jsoup.parser.TokeniserState);
    Code:
       0: aload_0
       1: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
       4: invokevirtual #103                // Method org/jsoup/parser/ParseErrorList.canAddError:()Z
       7: ifeq          42
      10: aload_0
      11: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
      14: new           #104                // class org/jsoup/parser/ParseError
      17: dup
      18: aload_0
      19: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      22: invokevirtual #105                // Method org/jsoup/parser/CharacterReader.pos:()I
      25: ldc           #110                // String Unexpectedly reached end of file (EOF) in input state [%s]
      27: iconst_1
      28: anewarray     #87                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_1
      34: aastore
      35: invokespecial #108                // Method org/jsoup/parser/ParseError."<init>":(ILjava/lang/String;[Ljava/lang/Object;)V
      38: invokevirtual #109                // Method org/jsoup/parser/ParseErrorList.add:(Ljava/lang/Object;)Z
      41: pop
      42: return

  private void characterReferenceError(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
       4: invokevirtual #103                // Method org/jsoup/parser/ParseErrorList.canAddError:()Z
       7: ifeq          42
      10: aload_0
      11: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
      14: new           #104                // class org/jsoup/parser/ParseError
      17: dup
      18: aload_0
      19: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      22: invokevirtual #105                // Method org/jsoup/parser/CharacterReader.pos:()I
      25: ldc           #111                // String Invalid character reference: %s
      27: iconst_1
      28: anewarray     #87                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_1
      34: aastore
      35: invokespecial #108                // Method org/jsoup/parser/ParseError."<init>":(ILjava/lang/String;[Ljava/lang/Object;)V
      38: invokevirtual #109                // Method org/jsoup/parser/ParseErrorList.add:(Ljava/lang/Object;)Z
      41: pop
      42: return

  private void error(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
       4: invokevirtual #103                // Method org/jsoup/parser/ParseErrorList.canAddError:()Z
       7: ifeq          33
      10: aload_0
      11: getfield      #28                 // Field errors:Lorg/jsoup/parser/ParseErrorList;
      14: new           #104                // class org/jsoup/parser/ParseError
      17: dup
      18: aload_0
      19: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      22: invokevirtual #105                // Method org/jsoup/parser/CharacterReader.pos:()I
      25: aload_1
      26: invokespecial #112                // Method org/jsoup/parser/ParseError."<init>":(ILjava/lang/String;)V
      29: invokevirtual #109                // Method org/jsoup/parser/ParseErrorList.add:(Ljava/lang/Object;)Z
      32: pop
      33: return

  boolean currentNodeInHtmlNS();
    Code:
       0: iconst_1
       1: ireturn

  java.lang.String unescapeEntities(boolean);
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      12: invokevirtual #52                 // Method org/jsoup/parser/CharacterReader.isEmpty:()Z
      15: ifne          87
      18: aload_2
      19: aload_0
      20: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      23: bipush        38
      25: invokevirtual #114                // Method org/jsoup/parser/CharacterReader.consumeTo:(C)Ljava/lang/String;
      28: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_0
      33: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      36: bipush        38
      38: invokevirtual #83                 // Method org/jsoup/parser/CharacterReader.matches:(C)Z
      41: ifeq          8
      44: aload_0
      45: getfield      #27                 // Field reader:Lorg/jsoup/parser/CharacterReader;
      48: invokevirtual #115                // Method org/jsoup/parser/CharacterReader.consume:()C
      51: pop
      52: aload_0
      53: aconst_null
      54: iload_1
      55: invokevirtual #116                // Method consumeCharacterReference:(Ljava/lang/Character;Z)[C
      58: astore_3
      59: aload_3
      60: ifnull        68
      63: aload_3
      64: arraylength
      65: ifne          78
      68: aload_2
      69: bipush        38
      71: invokevirtual #117                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: pop
      75: goto          84
      78: aload_2
      79: aload_3
      80: invokevirtual #118                // Method java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;
      83: pop
      84: goto          8
      87: aload_2
      88: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: areturn

  static {};
    Code:
       0: bipush        7
       2: newarray       char
       4: dup
       5: iconst_0
       6: bipush        9
       8: castore
       9: dup
      10: iconst_1
      11: bipush        10
      13: castore
      14: dup
      15: iconst_2
      16: bipush        13
      18: castore
      19: dup
      20: iconst_3
      21: bipush        12
      23: castore
      24: dup
      25: iconst_4
      26: bipush        32
      28: castore
      29: dup
      30: iconst_5
      31: bipush        60
      33: castore
      34: dup
      35: bipush        6
      37: bipush        38
      39: castore
      40: putstatic     #55                 // Field notCharRefCharsSorted:[C
      43: getstatic     #55                 // Field notCharRefCharsSorted:[C
      46: invokestatic  #119                // Method java/util/Arrays.sort:([C)V
      49: return
}
