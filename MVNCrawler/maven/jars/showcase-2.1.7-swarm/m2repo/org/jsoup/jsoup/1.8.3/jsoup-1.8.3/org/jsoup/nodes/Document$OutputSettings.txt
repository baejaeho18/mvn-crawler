Compiled from "Document.java"
public class org.jsoup.nodes.Document$OutputSettings implements java.lang.Cloneable {
  private org.jsoup.nodes.Entities$EscapeMode escapeMode;

  private java.nio.charset.Charset charset;

  private java.nio.charset.CharsetEncoder charsetEncoder;

  private boolean prettyPrint;

  private boolean outline;

  private int indentAmount;

  private org.jsoup.nodes.Document$OutputSettings$Syntax syntax;

  public org.jsoup.nodes.Document$OutputSettings();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/jsoup/nodes/Entities$EscapeMode.base:Lorg/jsoup/nodes/Entities$EscapeMode;
       8: putfield      #3                  // Field escapeMode:Lorg/jsoup/nodes/Entities$EscapeMode;
      11: aload_0
      12: ldc           #4                  // String UTF-8
      14: invokestatic  #5                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      17: putfield      #6                  // Field charset:Ljava/nio/charset/Charset;
      20: aload_0
      21: aload_0
      22: getfield      #6                  // Field charset:Ljava/nio/charset/Charset;
      25: invokevirtual #7                  // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      28: putfield      #8                  // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      31: aload_0
      32: iconst_1
      33: putfield      #9                  // Field prettyPrint:Z
      36: aload_0
      37: iconst_0
      38: putfield      #10                 // Field outline:Z
      41: aload_0
      42: iconst_1
      43: putfield      #11                 // Field indentAmount:I
      46: aload_0
      47: getstatic     #12                 // Field org/jsoup/nodes/Document$OutputSettings$Syntax.html:Lorg/jsoup/nodes/Document$OutputSettings$Syntax;
      50: putfield      #13                 // Field syntax:Lorg/jsoup/nodes/Document$OutputSettings$Syntax;
      53: return

  public org.jsoup.nodes.Entities$EscapeMode escapeMode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field escapeMode:Lorg/jsoup/nodes/Entities$EscapeMode;
       4: areturn

  public org.jsoup.nodes.Document$OutputSettings escapeMode(org.jsoup.nodes.Entities$EscapeMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field escapeMode:Lorg/jsoup/nodes/Entities$EscapeMode;
       5: aload_0
       6: areturn

  public java.nio.charset.Charset charset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field charset:Ljava/nio/charset/Charset;
       4: areturn

  public org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field charset:Ljava/nio/charset/Charset;
       5: aload_0
       6: aload_1
       7: invokevirtual #7                  // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      10: putfield      #8                  // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
      13: aload_0
      14: areturn

  public org.jsoup.nodes.Document$OutputSettings charset(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: invokevirtual #14                 // Method charset:(Ljava/nio/charset/Charset;)Lorg/jsoup/nodes/Document$OutputSettings;
       8: pop
       9: aload_0
      10: areturn

  java.nio.charset.CharsetEncoder encoder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;
       4: areturn

  public org.jsoup.nodes.Document$OutputSettings$Syntax syntax();
    Code:
       0: aload_0
       1: getfield      #13                 // Field syntax:Lorg/jsoup/nodes/Document$OutputSettings$Syntax;
       4: areturn

  public org.jsoup.nodes.Document$OutputSettings syntax(org.jsoup.nodes.Document$OutputSettings$Syntax);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field syntax:Lorg/jsoup/nodes/Document$OutputSettings$Syntax;
       5: aload_0
       6: areturn

  public boolean prettyPrint();
    Code:
       0: aload_0
       1: getfield      #9                  // Field prettyPrint:Z
       4: ireturn

  public org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field prettyPrint:Z
       5: aload_0
       6: areturn

  public boolean outline();
    Code:
       0: aload_0
       1: getfield      #10                 // Field outline:Z
       4: ireturn

  public org.jsoup.nodes.Document$OutputSettings outline(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field outline:Z
       5: aload_0
       6: areturn

  public int indentAmount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field indentAmount:I
       4: ireturn

  public org.jsoup.nodes.Document$OutputSettings indentAmount(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #15                 // Method org/jsoup/helper/Validate.isTrue:(Z)V
      12: aload_0
      13: iload_1
      14: putfield      #11                 // Field indentAmount:I
      17: aload_0
      18: areturn

  public org.jsoup.nodes.Document$OutputSettings clone();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #17                 // class org/jsoup/nodes/Document$OutputSettings
       7: astore_1
       8: goto          21
      11: astore_2
      12: new           #19                 // class java/lang/RuntimeException
      15: dup
      16: aload_2
      17: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_1
      22: aload_0
      23: getfield      #6                  // Field charset:Ljava/nio/charset/Charset;
      26: invokevirtual #21                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      29: invokevirtual #22                 // Method charset:(Ljava/lang/String;)Lorg/jsoup/nodes/Document$OutputSettings;
      32: pop
      33: aload_1
      34: aload_0
      35: getfield      #3                  // Field escapeMode:Lorg/jsoup/nodes/Entities$EscapeMode;
      38: invokevirtual #23                 // Method org/jsoup/nodes/Entities$EscapeMode.name:()Ljava/lang/String;
      41: invokestatic  #24                 // Method org/jsoup/nodes/Entities$EscapeMode.valueOf:(Ljava/lang/String;)Lorg/jsoup/nodes/Entities$EscapeMode;
      44: putfield      #3                  // Field escapeMode:Lorg/jsoup/nodes/Entities$EscapeMode;
      47: aload_1
      48: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method clone:()Lorg/jsoup/nodes/Document$OutputSettings;
       4: areturn
}
