Compiled from "SPathFilter.java"
public class org.apache.taglibs.standard.extra.spath.SPathFilter extends org.xml.sax.helpers.XMLFilterImpl {
  protected java.util.List steps;

  private int depth;

  private java.util.Stack acceptedDepths;

  private int excludedDepth;

  private static final boolean DEBUG;

  public org.apache.taglibs.standard.extra.spath.SPathFilter(org.apache.taglibs.standard.extra.spath.Path);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xml/sax/helpers/XMLFilterImpl."<init>":()V
       4: aload_0
       5: invokespecial #2                  // Method init:()V
       8: aload_0
       9: aload_1
      10: invokevirtual #3                  // Method org/apache/taglibs/standard/extra/spath/Path.getSteps:()Ljava/util/List;
      13: putfield      #4                  // Field steps:Ljava/util/List;
      16: return

  private void init();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field depth:I
       5: aload_0
       6: iconst_m1
       7: putfield      #6                  // Field excludedDepth:I
      10: aload_0
      11: new           #7                  // class java/util/Stack
      14: dup
      15: invokespecial #8                  // Method java/util/Stack."<init>":()V
      18: putfield      #9                  // Field acceptedDepths:Ljava/util/Stack;
      21: return

  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field depth:I
       5: iconst_1
       6: iadd
       7: putfield      #5                  // Field depth:I
      10: aload_0
      11: invokespecial #10                 // Method isAccepted:()Z
      14: ifeq          32
      17: aload_0
      18: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      21: aload_1
      22: aload_2
      23: aload_3
      24: aload         4
      26: invokeinterface #12,  5           // InterfaceMethod org/xml/sax/ContentHandler.startElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
      31: return
      32: aload_0
      33: invokespecial #13                 // Method isExcluded:()Z
      36: ifeq          40
      39: return
      40: aload_0
      41: getfield      #4                  // Field steps:Ljava/util/List;
      44: aload_0
      45: getfield      #9                  // Field acceptedDepths:Ljava/util/Stack;
      48: invokevirtual #14                 // Method java/util/Stack.size:()I
      51: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      56: checkcast     #16                 // class org/apache/taglibs/standard/extra/spath/Step
      59: astore        5
      61: aload         5
      63: aload_1
      64: aload_2
      65: aload_3
      66: aload         4
      68: invokestatic  #17                 // Method nodeMatchesStep:(Lorg/apache/taglibs/standard/extra/spath/Step;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)Z
      71: ifeq          115
      74: aload_0
      75: getfield      #9                  // Field acceptedDepths:Ljava/util/Stack;
      78: aload_0
      79: getfield      #5                  // Field depth:I
      82: iconst_1
      83: isub
      84: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: invokevirtual #19                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: aload_0
      92: invokespecial #10                 // Method isAccepted:()Z
      95: ifeq          133
      98: aload_0
      99: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
     102: aload_1
     103: aload_2
     104: aload_3
     105: aload         4
     107: invokeinterface #12,  5           // InterfaceMethod org/xml/sax/ContentHandler.startElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
     112: goto          133
     115: aload         5
     117: invokevirtual #20                 // Method org/apache/taglibs/standard/extra/spath/Step.isDepthUnlimited:()Z
     120: ifne          133
     123: aload_0
     124: aload_0
     125: getfield      #5                  // Field depth:I
     128: iconst_1
     129: isub
     130: putfield      #6                  // Field excludedDepth:I
     133: return

  public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field depth:I
       5: iconst_1
       6: isub
       7: putfield      #5                  // Field depth:I
      10: aload_0
      11: invokespecial #13                 // Method isExcluded:()Z
      14: ifeq          34
      17: aload_0
      18: getfield      #6                  // Field excludedDepth:I
      21: aload_0
      22: getfield      #5                  // Field depth:I
      25: if_icmpne     33
      28: aload_0
      29: iconst_m1
      30: putfield      #6                  // Field excludedDepth:I
      33: return
      34: aload_0
      35: invokespecial #10                 // Method isAccepted:()Z
      38: ifeq          53
      41: aload_0
      42: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      45: aload_1
      46: aload_2
      47: aload_3
      48: invokeinterface #21,  4           // InterfaceMethod org/xml/sax/ContentHandler.endElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      53: aload_0
      54: getfield      #9                  // Field acceptedDepths:Ljava/util/Stack;
      57: invokevirtual #14                 // Method java/util/Stack.size:()I
      60: ifle          91
      63: aload_0
      64: getfield      #9                  // Field acceptedDepths:Ljava/util/Stack;
      67: invokevirtual #22                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      70: checkcast     #23                 // class java/lang/Integer
      73: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      76: aload_0
      77: getfield      #5                  // Field depth:I
      80: if_icmpne     91
      83: aload_0
      84: getfield      #9                  // Field acceptedDepths:Ljava/util/Stack;
      87: invokevirtual #25                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      90: pop
      91: return

  public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method isAccepted:()Z
       4: ifeq          19
       7: aload_0
       8: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokeinterface #26,  4           // InterfaceMethod org/xml/sax/ContentHandler.ignorableWhitespace:([CII)V
      19: return

  public void characters(char[], int, int) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method isAccepted:()Z
       4: ifeq          19
       7: aload_0
       8: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokeinterface #27,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
      19: return

  public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method isAccepted:()Z
       4: ifeq          18
       7: aload_0
       8: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      11: aload_1
      12: aload_2
      13: invokeinterface #28,  3           // InterfaceMethod org/xml/sax/ContentHandler.startPrefixMapping:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method isAccepted:()Z
       4: ifeq          17
       7: aload_0
       8: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      11: aload_1
      12: invokeinterface #29,  2           // InterfaceMethod org/xml/sax/ContentHandler.endPrefixMapping:(Ljava/lang/String;)V
      17: return

  public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method isAccepted:()Z
       4: ifeq          18
       7: aload_0
       8: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      11: aload_1
      12: aload_2
      13: invokeinterface #30,  3           // InterfaceMethod org/xml/sax/ContentHandler.processingInstruction:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method isAccepted:()Z
       4: ifeq          17
       7: aload_0
       8: invokevirtual #11                 // Method getContentHandler:()Lorg/xml/sax/ContentHandler;
      11: aload_1
      12: invokeinterface #31,  2           // InterfaceMethod org/xml/sax/ContentHandler.skippedEntity:(Ljava/lang/String;)V
      17: return

  public void startDocument();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method init:()V
       4: return

  public static boolean nodeMatchesStep(org.apache.taglibs.standard.extra.spath.Step, java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #32                 // Method org/apache/taglibs/standard/extra/spath/Step.isMatchingName:(Ljava/lang/String;Ljava/lang/String;)Z
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: invokevirtual #33                 // Method org/apache/taglibs/standard/extra/spath/Step.getPredicates:()Ljava/util/List;
      15: astore        5
      17: iconst_0
      18: istore        6
      20: aload         5
      22: ifnull        90
      25: iload         6
      27: aload         5
      29: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
      34: if_icmpge     90
      37: aload         5
      39: iload         6
      41: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      46: checkcast     #35                 // class org/apache/taglibs/standard/extra/spath/Predicate
      49: astore        7
      51: aload         7
      53: instanceof    #36                 // class org/apache/taglibs/standard/extra/spath/AttributePredicate
      56: ifne          69
      59: new           #37                 // class java/lang/UnsupportedOperationException
      62: dup
      63: ldc           #38                 // String only attribute predicates are supported by filter
      65: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload         7
      71: checkcast     #36                 // class org/apache/taglibs/standard/extra/spath/AttributePredicate
      74: aload         4
      76: invokevirtual #40                 // Method org/apache/taglibs/standard/extra/spath/AttributePredicate.isMatchingAttribute:(Lorg/xml/sax/Attributes;)Z
      79: ifne          84
      82: iconst_0
      83: ireturn
      84: iinc          6, 1
      87: goto          20
      90: iconst_1
      91: ireturn

  private boolean isAccepted();
    Code:
       0: aload_0
       1: getfield      #9                  // Field acceptedDepths:Ljava/util/Stack;
       4: invokevirtual #14                 // Method java/util/Stack.size:()I
       7: aload_0
       8: getfield      #4                  // Field steps:Ljava/util/List;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
      16: if_icmplt     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private boolean isExcluded();
    Code:
       0: aload_0
       1: getfield      #6                  // Field excludedDepth:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
}
