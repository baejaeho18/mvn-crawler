Compiled from "Functions.java"
public class org.apache.taglibs.standard.functions.Functions {
  public org.apache.taglibs.standard.functions.Functions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String toUpperCase(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
       4: areturn

  public static java.lang.String toLowerCase(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: areturn

  public static int indexOf(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       5: ireturn

  public static boolean contains(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       5: ireturn

  public static boolean containsIgnoreCase(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #2                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
       8: invokestatic  #6                  // Method contains:(Ljava/lang/String;Ljava/lang/String;)Z
      11: ireturn

  public static boolean startsWith(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       5: ireturn

  public static boolean endsWith(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       5: ireturn

  public static java.lang.String substring(java.lang.String, int, int);
    Code:
       0: iload_1
       1: ifge          6
       4: iconst_0
       5: istore_1
       6: iload_2
       7: iflt          18
      10: iload_2
      11: aload_0
      12: invokevirtual #9                  // Method java/lang/String.length:()I
      15: if_icmple     23
      18: aload_0
      19: invokevirtual #9                  // Method java/lang/String.length:()I
      22: istore_2
      23: iload_2
      24: iload_1
      25: if_icmpge     31
      28: ldc           #10                 // String
      30: areturn
      31: aload_0
      32: iload_1
      33: iload_2
      34: invokevirtual #11                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: areturn

  public static java.lang.String substringAfter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     14
      11: ldc           #10                 // String
      13: areturn
      14: aload_0
      15: iload_2
      16: aload_1
      17: invokevirtual #9                  // Method java/lang/String.length:()I
      20: iadd
      21: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      24: areturn

  public static java.lang.String substringBefore(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     14
      11: ldc           #10                 // String
      13: areturn
      14: aload_0
      15: iconst_0
      16: iload_2
      17: invokevirtual #11                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: areturn

  public static java.lang.String escapeXml(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method org/apache/taglibs/standard/util/EscapeXML.escape:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  public static java.lang.String trim(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: areturn

  public static java.lang.String replace(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/lang/String.length:()I
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #15                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      15: areturn

  public static java.lang.String[] split(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method java/lang/String.length:()I
       4: ifeq          14
       7: aload_1
       8: invokevirtual #9                  // Method java/lang/String.length:()I
      11: ifne          23
      14: iconst_1
      15: anewarray     #16                 // class java/lang/String
      18: dup
      19: iconst_0
      20: aload_0
      21: aastore
      22: areturn
      23: new           #17                 // class java/util/StringTokenizer
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #18                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      32: astore_2
      33: aload_2
      34: invokevirtual #19                 // Method java/util/StringTokenizer.countTokens:()I
      37: anewarray     #16                 // class java/lang/String
      40: astore_3
      41: iconst_0
      42: istore        4
      44: aload_2
      45: invokevirtual #20                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      48: ifeq          65
      51: aload_3
      52: iload         4
      54: iinc          4, 1
      57: aload_2
      58: invokevirtual #21                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      61: aastore
      62: goto          44
      65: aload_3
      66: areturn

  public static java.lang.String join(java.lang.String[], java.lang.String);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: arraylength
       6: ifne          12
       9: ldc           #10                 // String
      11: areturn
      12: aload_0
      13: arraylength
      14: iconst_1
      15: if_icmpne     33
      18: aload_0
      19: iconst_0
      20: aaload
      21: ifnonnull     29
      24: ldc           #22                 // String null
      26: goto          32
      29: aload_0
      30: iconst_0
      31: aaload
      32: areturn
      33: new           #23                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      40: astore_2
      41: aload_2
      42: aload_0
      43: iconst_0
      44: aaload
      45: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: iconst_1
      50: istore_3
      51: iload_3
      52: aload_0
      53: arraylength
      54: if_icmpge     75
      57: aload_2
      58: aload_1
      59: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: iload_3
      64: aaload
      65: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: iinc          3, 1
      72: goto          51
      75: aload_2
      76: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn

  public static int length(java.lang.Object) throws javax.servlet.jsp.JspTagException;
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: instanceof    #16                 // class java/lang/String
      10: ifeq          21
      13: aload_0
      14: checkcast     #16                 // class java/lang/String
      17: invokevirtual #9                  // Method java/lang/String.length:()I
      20: ireturn
      21: aload_0
      22: instanceof    #27                 // class java/util/Collection
      25: ifeq          38
      28: aload_0
      29: checkcast     #27                 // class java/util/Collection
      32: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.size:()I
      37: ireturn
      38: aload_0
      39: instanceof    #29                 // class java/util/Map
      42: ifeq          55
      45: aload_0
      46: checkcast     #29                 // class java/util/Map
      49: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
      54: ireturn
      55: aload_0
      56: instanceof    #31                 // class java/util/Iterator
      59: ifeq          93
      62: iconst_0
      63: istore_1
      64: aload_0
      65: checkcast     #31                 // class java/util/Iterator
      68: astore_2
      69: aload_2
      70: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          91
      78: iinc          1, 1
      81: aload_2
      82: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: pop
      88: goto          69
      91: iload_1
      92: ireturn
      93: aload_0
      94: instanceof    #34                 // class java/util/Enumeration
      97: ifeq          131
     100: aload_0
     101: checkcast     #34                 // class java/util/Enumeration
     104: astore_1
     105: iconst_0
     106: istore_2
     107: aload_1
     108: invokeinterface #35,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     113: ifeq          129
     116: iinc          2, 1
     119: aload_1
     120: invokeinterface #36,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     125: pop
     126: goto          107
     129: iload_2
     130: ireturn
     131: aload_0
     132: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     135: invokevirtual #38                 // Method java/lang/Class.isArray:()Z
     138: ifeq          146
     141: aload_0
     142: invokestatic  #39                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
     145: ireturn
     146: new           #40                 // class javax/servlet/jsp/JspTagException
     149: dup
     150: ldc           #41                 // String PARAM_BAD_VALUE
     152: invokestatic  #42                 // Method org/apache/taglibs/standard/resources/Resources.getMessage:(Ljava/lang/String;)Ljava/lang/String;
     155: invokespecial #43                 // Method javax/servlet/jsp/JspTagException."<init>":(Ljava/lang/String;)V
     158: athrow
}
