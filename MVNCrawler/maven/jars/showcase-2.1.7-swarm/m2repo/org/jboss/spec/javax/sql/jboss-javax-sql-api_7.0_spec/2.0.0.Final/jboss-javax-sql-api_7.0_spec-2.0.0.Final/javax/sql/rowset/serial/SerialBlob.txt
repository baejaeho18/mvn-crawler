Compiled from "SerialBlob.java"
public class javax.sql.rowset.serial.SerialBlob implements java.sql.Blob,java.io.Serializable,java.lang.Cloneable {
  private byte[] buf;

  private java.sql.Blob blob;

  private long len;

  private long origLen;

  static final long serialVersionUID;

  public javax.sql.rowset.serial.SerialBlob(byte[]) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: arraylength
       7: i2l
       8: putfield      #2                  // Field len:J
      11: aload_0
      12: aload_0
      13: getfield      #2                  // Field len:J
      16: l2i
      17: newarray       byte
      19: putfield      #3                  // Field buf:[B
      22: iconst_0
      23: istore_2
      24: iload_2
      25: i2l
      26: aload_0
      27: getfield      #2                  // Field len:J
      30: lcmp
      31: ifge          49
      34: aload_0
      35: getfield      #3                  // Field buf:[B
      38: iload_2
      39: aload_1
      40: iload_2
      41: baload
      42: bastore
      43: iinc          2, 1
      46: goto          24
      49: aload_0
      50: aload_0
      51: getfield      #2                  // Field len:J
      54: putfield      #4                  // Field origLen:J
      57: return

  public javax.sql.rowset.serial.SerialBlob(java.sql.Blob) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #5                  // class java/sql/SQLException
      11: dup
      12: ldc           #6                  // String Cannot instantiate a SerialBlob object with a null Blob object
      14: invokespecial #7                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokeinterface #8,  1            // InterfaceMethod java/sql/Blob.length:()J
      25: putfield      #2                  // Field len:J
      28: aload_0
      29: aload_1
      30: lconst_1
      31: aload_0
      32: getfield      #2                  // Field len:J
      35: l2i
      36: invokeinterface #9,  4            // InterfaceMethod java/sql/Blob.getBytes:(JI)[B
      41: putfield      #3                  // Field buf:[B
      44: aload_0
      45: aload_1
      46: putfield      #10                 // Field blob:Ljava/sql/Blob;
      49: aload_0
      50: aload_0
      51: getfield      #2                  // Field len:J
      54: putfield      #4                  // Field origLen:J
      57: return

  public byte[] getBytes(long, int) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: iload_3
       5: i2l
       6: aload_0
       7: getfield      #2                  // Field len:J
      10: lcmp
      11: ifle          20
      14: aload_0
      15: getfield      #2                  // Field len:J
      18: l2i
      19: istore_3
      20: lload_1
      21: lconst_1
      22: lcmp
      23: iflt          37
      26: aload_0
      27: getfield      #2                  // Field len:J
      30: lload_1
      31: lsub
      32: lconst_0
      33: lcmp
      34: ifge          47
      37: new           #12                 // class javax/sql/rowset/serial/SerialException
      40: dup
      41: ldc           #13                 // String Invalid arguments: position cannot be less than 1 or greater than the length of the SerialBlob
      43: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: lload_1
      48: lconst_1
      49: lsub
      50: lstore_1
      51: iload_3
      52: newarray       byte
      54: astore        4
      56: iconst_0
      57: istore        5
      59: iload         5
      61: iload_3
      62: if_icmpge     87
      65: aload         4
      67: iload         5
      69: aload_0
      70: getfield      #3                  // Field buf:[B
      73: lload_1
      74: l2i
      75: baload
      76: bastore
      77: lload_1
      78: lconst_1
      79: ladd
      80: lstore_1
      81: iinc          5, 1
      84: goto          59
      87: aload         4
      89: areturn

  public long length() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: aload_0
       5: getfield      #2                  // Field len:J
       8: lreturn

  public java.io.InputStream getBinaryStream() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: new           #15                 // class java/io/ByteArrayInputStream
       7: dup
       8: aload_0
       9: getfield      #3                  // Field buf:[B
      12: invokespecial #16                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      15: astore_1
      16: aload_1
      17: areturn

  public long position(byte[], long) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: lload_2
       5: lconst_1
       6: lcmp
       7: iflt          19
      10: lload_2
      11: aload_0
      12: getfield      #2                  // Field len:J
      15: lcmp
      16: ifle          23
      19: ldc2_w        #17                 // long -1l
      22: lreturn
      23: lload_2
      24: l2i
      25: iconst_1
      26: isub
      27: istore        4
      29: iconst_0
      30: istore        5
      32: aload_1
      33: arraylength
      34: i2l
      35: lstore        6
      37: iload         4
      39: i2l
      40: aload_0
      41: getfield      #2                  // Field len:J
      44: lcmp
      45: ifge          113
      48: aload_1
      49: iload         5
      51: baload
      52: aload_0
      53: getfield      #3                  // Field buf:[B
      56: iload         4
      58: baload
      59: if_icmpne     93
      62: iload         5
      64: iconst_1
      65: iadd
      66: i2l
      67: lload         6
      69: lcmp
      70: ifne          84
      73: iload         4
      75: iconst_1
      76: iadd
      77: i2l
      78: lload         6
      80: lconst_1
      81: lsub
      82: lsub
      83: lreturn
      84: iinc          5, 1
      87: iinc          4, 1
      90: goto          37
      93: aload_1
      94: iload         5
      96: baload
      97: aload_0
      98: getfield      #3                  // Field buf:[B
     101: iload         4
     103: baload
     104: if_icmpeq     37
     107: iinc          4, 1
     110: goto          37
     113: ldc2_w        #17                 // long -1l
     116: lreturn

  public long position(java.sql.Blob, long) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: aload_0
       5: aload_1
       6: lconst_1
       7: aload_1
       8: invokeinterface #8,  1            // InterfaceMethod java/sql/Blob.length:()J
      13: l2i
      14: invokeinterface #9,  4            // InterfaceMethod java/sql/Blob.getBytes:(JI)[B
      19: lload_2
      20: invokevirtual #19                 // Method position:([BJ)J
      23: lreturn

  public int setBytes(long, byte[]) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iconst_0
       4: aload_3
       5: arraylength
       6: invokevirtual #20                 // Method setBytes:(J[BII)I
       9: ireturn

  public int setBytes(long, byte[], int, int) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: iload         4
       6: iflt          16
       9: iload         4
      11: aload_3
      12: arraylength
      13: if_icmple     26
      16: new           #12                 // class javax/sql/rowset/serial/SerialException
      19: dup
      20: ldc           #21                 // String Invalid offset in byte array set
      22: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: lload_1
      27: lconst_1
      28: lcmp
      29: iflt          41
      32: lload_1
      33: aload_0
      34: invokevirtual #22                 // Method length:()J
      37: lcmp
      38: ifle          51
      41: new           #12                 // class javax/sql/rowset/serial/SerialException
      44: dup
      45: ldc           #23                 // String Invalid position in BLOB object set
      47: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload         5
      53: i2l
      54: aload_0
      55: getfield      #4                  // Field origLen:J
      58: lcmp
      59: ifle          72
      62: new           #12                 // class javax/sql/rowset/serial/SerialException
      65: dup
      66: ldc           #24                 // String Buffer is not sufficient to hold the value
      68: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: iload         5
      74: iload         4
      76: iadd
      77: aload_3
      78: arraylength
      79: if_icmple     92
      82: new           #12                 // class javax/sql/rowset/serial/SerialException
      85: dup
      86: ldc           #25                 // String Invalid OffSet. Cannot have combined offset and length that is greater that the Blob buffer
      88: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: iconst_0
      93: istore        6
      95: lload_1
      96: lconst_1
      97: lsub
      98: lstore_1
      99: iload         6
     101: iload         5
     103: if_icmplt     121
     106: iload         4
     108: iload         6
     110: iadd
     111: iconst_1
     112: iadd
     113: aload_3
     114: arraylength
     115: iload         4
     117: isub
     118: if_icmpge     144
     121: aload_0
     122: getfield      #3                  // Field buf:[B
     125: lload_1
     126: l2i
     127: iload         6
     129: iadd
     130: aload_3
     131: iload         4
     133: iload         6
     135: iadd
     136: baload
     137: bastore
     138: iinc          6, 1
     141: goto          99
     144: iload         6
     146: ireturn

  public java.io.OutputStream setBinaryStream(long) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: aload_0
       5: getfield      #10                 // Field blob:Ljava/sql/Blob;
       8: ifnull        22
      11: aload_0
      12: getfield      #10                 // Field blob:Ljava/sql/Blob;
      15: lload_1
      16: invokeinterface #26,  3           // InterfaceMethod java/sql/Blob.setBinaryStream:(J)Ljava/io/OutputStream;
      21: areturn
      22: new           #12                 // class javax/sql/rowset/serial/SerialException
      25: dup
      26: ldc           #27                 // String Unsupported operation. SerialBlob cannot return a writable binary stream, unless instantiated with a Blob object that provides a setBinaryStream() implementation
      28: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      31: athrow

  public void truncate(long) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: lload_1
       5: aload_0
       6: getfield      #2                  // Field len:J
       9: lcmp
      10: ifle          23
      13: new           #12                 // class javax/sql/rowset/serial/SerialException
      16: dup
      17: ldc           #28                 // String Length more than what can be truncated
      19: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: lload_1
      24: l2i
      25: ifne          43
      28: aload_0
      29: iconst_0
      30: newarray       byte
      32: putfield      #3                  // Field buf:[B
      35: aload_0
      36: lload_1
      37: putfield      #2                  // Field len:J
      40: goto          62
      43: aload_0
      44: lload_1
      45: putfield      #2                  // Field len:J
      48: aload_0
      49: aload_0
      50: lconst_1
      51: aload_0
      52: getfield      #2                  // Field len:J
      55: l2i
      56: invokevirtual #29                 // Method getBytes:(JI)[B
      59: putfield      #3                  // Field buf:[B
      62: return

  public java.io.InputStream getBinaryStream(long, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isValid:()V
       4: lload_1
       5: lconst_1
       6: lcmp
       7: iflt          19
      10: lload_1
      11: aload_0
      12: invokevirtual #22                 // Method length:()J
      15: lcmp
      16: ifle          29
      19: new           #12                 // class javax/sql/rowset/serial/SerialException
      22: dup
      23: ldc           #23                 // String Invalid position in BLOB object set
      25: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: lload_3
      30: lconst_1
      31: lcmp
      32: iflt          48
      35: lload_3
      36: aload_0
      37: getfield      #2                  // Field len:J
      40: lload_1
      41: lsub
      42: lconst_1
      43: ladd
      44: lcmp
      45: ifle          58
      48: new           #12                 // class javax/sql/rowset/serial/SerialException
      51: dup
      52: ldc           #30                 // String length is < 1 or pos + length >total number of bytes
      54: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: new           #15                 // class java/io/ByteArrayInputStream
      61: dup
      62: aload_0
      63: getfield      #3                  // Field buf:[B
      66: lload_1
      67: l2i
      68: iconst_1
      69: isub
      70: lload_3
      71: l2i
      72: invokespecial #31                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      75: areturn

  public void free() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[B
       4: ifnull        33
       7: aload_0
       8: aconst_null
       9: putfield      #3                  // Field buf:[B
      12: aload_0
      13: getfield      #10                 // Field blob:Ljava/sql/Blob;
      16: ifnull        28
      19: aload_0
      20: getfield      #10                 // Field blob:Ljava/sql/Blob;
      23: invokeinterface #32,  1           // InterfaceMethod java/sql/Blob.free:()V
      28: aload_0
      29: aconst_null
      30: putfield      #10                 // Field blob:Ljava/sql/Blob;
      33: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #33                 // class javax/sql/rowset/serial/SerialBlob
      11: ifeq          43
      14: aload_1
      15: checkcast     #33                 // class javax/sql/rowset/serial/SerialBlob
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field len:J
      23: aload_2
      24: getfield      #2                  // Field len:J
      27: lcmp
      28: ifne          43
      31: aload_0
      32: getfield      #3                  // Field buf:[B
      35: aload_2
      36: getfield      #3                  // Field buf:[B
      39: invokestatic  #34                 // Method java/util/Arrays.equals:([B[B)Z
      42: ireturn
      43: iconst_0
      44: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: aload_0
       3: getfield      #3                  // Field buf:[B
       6: invokestatic  #35                 // Method java/util/Arrays.hashCode:([B)I
       9: iadd
      10: bipush        31
      12: imul
      13: aload_0
      14: getfield      #2                  // Field len:J
      17: l2i
      18: iadd
      19: bipush        31
      21: imul
      22: aload_0
      23: getfield      #4                  // Field origLen:J
      26: l2i
      27: iadd
      28: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #33                 // class javax/sql/rowset/serial/SerialBlob
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field buf:[B
      13: ifnull        31
      16: aload_0
      17: getfield      #3                  // Field buf:[B
      20: aload_0
      21: getfield      #2                  // Field len:J
      24: l2i
      25: invokestatic  #37                 // Method java/util/Arrays.copyOf:([BI)[B
      28: goto          32
      31: aconst_null
      32: putfield      #3                  // Field buf:[B
      35: aload_1
      36: aconst_null
      37: putfield      #10                 // Field blob:Ljava/sql/Blob;
      40: aload_1
      41: areturn
      42: astore_1
      43: new           #39                 // class java/lang/InternalError
      46: dup
      47: invokespecial #40                 // Method java/lang/InternalError."<init>":()V
      50: athrow
    Exception table:
       from    to  target type
           0    41    42   Class java/lang/CloneNotSupportedException

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method java/io/ObjectInputStream.readFields:()Ljava/io/ObjectInputStream$GetField;
       4: astore_2
       5: aload_2
       6: ldc           #42                 // String buf
       8: aconst_null
       9: invokevirtual #43                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #44                 // class "[B"
      15: checkcast     #44                 // class "[B"
      18: astore_3
      19: aload_3
      20: ifnonnull     33
      23: new           #45                 // class java/io/InvalidObjectException
      26: dup
      27: ldc           #46                 // String buf is null and should not be!
      29: invokespecial #47                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: aload_3
      35: invokevirtual #48                 // Method "[B".clone:()Ljava/lang/Object;
      38: checkcast     #44                 // class "[B"
      41: putfield      #3                  // Field buf:[B
      44: aload_0
      45: aload_2
      46: ldc           #49                 // String len
      48: lconst_0
      49: invokevirtual #50                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;J)J
      52: putfield      #2                  // Field len:J
      55: aload_0
      56: getfield      #3                  // Field buf:[B
      59: arraylength
      60: i2l
      61: aload_0
      62: getfield      #2                  // Field len:J
      65: lcmp
      66: ifeq          79
      69: new           #45                 // class java/io/InvalidObjectException
      72: dup
      73: ldc           #51                 // String buf is not the expected size
      75: invokespecial #47                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: aload_2
      81: ldc           #52                 // String origLen
      83: lconst_0
      84: invokevirtual #50                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;J)J
      87: putfield      #4                  // Field origLen:J
      90: aload_0
      91: aload_2
      92: ldc           #53                 // String blob
      94: aconst_null
      95: invokevirtual #43                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #54                 // class java/sql/Blob
     101: putfield      #10                 // Field blob:Ljava/sql/Blob;
     104: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method java/io/ObjectOutputStream.putFields:()Ljava/io/ObjectOutputStream$PutField;
       4: astore_2
       5: aload_2
       6: ldc           #42                 // String buf
       8: aload_0
       9: getfield      #3                  // Field buf:[B
      12: invokevirtual #56                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_2
      16: ldc           #49                 // String len
      18: aload_0
      19: getfield      #2                  // Field len:J
      22: invokevirtual #57                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;J)V
      25: aload_2
      26: ldc           #52                 // String origLen
      28: aload_0
      29: getfield      #4                  // Field origLen:J
      32: invokevirtual #57                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;J)V
      35: aload_2
      36: ldc           #53                 // String blob
      38: aload_0
      39: getfield      #10                 // Field blob:Ljava/sql/Blob;
      42: instanceof    #58                 // class java/io/Serializable
      45: ifeq          55
      48: aload_0
      49: getfield      #10                 // Field blob:Ljava/sql/Blob;
      52: goto          56
      55: aconst_null
      56: invokevirtual #56                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      59: aload_1
      60: invokevirtual #59                 // Method java/io/ObjectOutputStream.writeFields:()V
      63: return

  private void isValid() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[B
       4: ifnonnull     17
       7: new           #12                 // class javax/sql/rowset/serial/SerialException
      10: dup
      11: ldc           #60                 // String Error: You cannot call a method on a SerialBlob instance once free() has been called.
      13: invokespecial #14                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return
}
