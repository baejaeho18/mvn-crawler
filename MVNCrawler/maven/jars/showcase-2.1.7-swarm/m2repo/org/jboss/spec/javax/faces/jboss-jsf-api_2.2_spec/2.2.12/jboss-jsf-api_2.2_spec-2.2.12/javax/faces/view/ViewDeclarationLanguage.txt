Compiled from "ViewDeclarationLanguage.java"
public abstract class javax.faces.view.ViewDeclarationLanguage {
  public static final java.lang.String JSP_VIEW_DECLARATION_LANGUAGE_ID;

  public static final java.lang.String FACELETS_VIEW_DECLARATION_LANGUAGE_ID;

  private static final java.util.logging.Logger LOGGER;

  public javax.faces.view.ViewDeclarationLanguage();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract java.beans.BeanInfo getComponentMetadata(javax.faces.context.FacesContext, javax.faces.application.Resource);

  public abstract javax.faces.view.ViewMetadata getViewMetadata(javax.faces.context.FacesContext, java.lang.String);

  public abstract javax.faces.application.Resource getScriptComponentResource(javax.faces.context.FacesContext, javax.faces.application.Resource);

  public abstract javax.faces.component.UIViewRoot createView(javax.faces.context.FacesContext, java.lang.String);

  public javax.faces.component.UIComponent createComponent(javax.faces.context.FacesContext, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aconst_null
       1: areturn

  public abstract javax.faces.component.UIViewRoot restoreView(javax.faces.context.FacesContext, java.lang.String);

  public void retargetAttachedObjects(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.util.List<javax.faces.view.AttachedObjectHandler>);
    Code:
       0: return

  public void retargetMethodExpressions(javax.faces.context.FacesContext, javax.faces.component.UIComponent);
    Code:
       0: return

  public java.util.List<java.lang.String> calculateResourceLibraryContracts(javax.faces.context.FacesContext, java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public abstract void buildView(javax.faces.context.FacesContext, javax.faces.component.UIViewRoot) throws java.io.IOException;

  public abstract void renderView(javax.faces.context.FacesContext, javax.faces.component.UIViewRoot) throws java.io.IOException;

  public abstract javax.faces.view.StateManagementStrategy getStateManagementStrategy(javax.faces.context.FacesContext, java.lang.String);

  public boolean viewExists(javax.faces.context.FacesContext, java.lang.String);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokevirtual #2                  // Method javax/faces/context/FacesContext.getApplication:()Ljavax/faces/application/Application;
       6: invokevirtual #3                  // Method javax/faces/application/Application.getResourceHandler:()Ljavax/faces/application/ResourceHandler;
       9: astore        4
      11: aconst_null
      12: aload         4
      14: aload_1
      15: aload_2
      16: invokevirtual #4                  // Method javax/faces/application/ResourceHandler.createViewResource:(Ljavax/faces/context/FacesContext;Ljava/lang/String;)Ljavax/faces/application/ViewResource;
      19: if_acmpeq     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore_3
      28: iload_3
      29: ireturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: ldc           #7                  // String javax.faces.view
       2: ldc           #8                  // String javax.faces.LogStrings
       4: invokestatic  #9                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;
       7: putstatic     #10                 // Field LOGGER:Ljava/util/logging/Logger;
      10: return
}
