Compiled from "AbstractMultivaluedMap.java"
public abstract class javax.ws.rs.core.AbstractMultivaluedMap<K, V> implements javax.ws.rs.core.MultivaluedMap<K, V> {
  protected final java.util.Map<K, java.util.List<V>> store;

  public javax.ws.rs.core.AbstractMultivaluedMap(java.util.Map<K, java.util.List<V>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #3                  // String Underlying store must not be \'null\'.
      14: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field store:Ljava/util/Map;
      23: return

  public final void putSingle(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method getValues:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: invokeinterface #7,  1            // InterfaceMethod java/util/List.clear:()V
      12: aload_2
      13: ifnull        27
      16: aload_3
      17: aload_2
      18: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: goto          32
      27: aload_0
      28: aload_3
      29: invokevirtual #9                  // Method addNull:(Ljava/util/List;)V
      32: return

  protected void addNull(java.util.List<V>);
    Code:
       0: return

  protected void addFirstNull(java.util.List<V>);
    Code:
       0: return

  public final void add(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method getValues:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_2
       7: ifnull        21
      10: aload_3
      11: aload_2
      12: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: goto          26
      21: aload_0
      22: aload_3
      23: invokevirtual #9                  // Method addNull:(Ljava/util/List;)V
      26: return

  public final void addAll(K, V...);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #10                 // String Supplied array of values must not be null.
      10: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: arraylength
      16: ifne          20
      19: return
      20: aload_0
      21: aload_1
      22: invokevirtual #6                  // Method getValues:(Ljava/lang/Object;)Ljava/util/List;
      25: astore_3
      26: aload_2
      27: astore        4
      29: aload         4
      31: arraylength
      32: istore        5
      34: iconst_0
      35: istore        6
      37: iload         6
      39: iload         5
      41: if_icmpge     79
      44: aload         4
      46: iload         6
      48: aaload
      49: astore        7
      51: aload         7
      53: ifnull        68
      56: aload_3
      57: aload         7
      59: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          73
      68: aload_0
      69: aload_3
      70: invokevirtual #9                  // Method addNull:(Ljava/util/List;)V
      73: iinc          6, 1
      76: goto          37
      79: return

  public final void addAll(K, java.util.List<V>);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #11                 // String Supplied list of values must not be null.
      10: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      20: ifeq          24
      23: return
      24: aload_0
      25: aload_1
      26: invokevirtual #6                  // Method getValues:(Ljava/lang/Object;)Ljava/util/List;
      29: astore_3
      30: aload_2
      31: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          82
      48: aload         4
      50: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: astore        5
      57: aload         5
      59: ifnull        74
      62: aload_3
      63: aload         5
      65: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          79
      74: aload_0
      75: aload_3
      76: invokevirtual #9                  // Method addNull:(Ljava/util/List;)V
      79: goto          38
      82: return

  public final V getFirst(K);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        35
      18: aload_2
      19: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      24: ifle          35
      27: aload_2
      28: iconst_0
      29: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: areturn
      35: aconst_null
      36: areturn

  public final void addFirst(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method getValues:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_2
       7: ifnull        21
      10: aload_3
      11: iconst_0
      12: aload_2
      13: invokeinterface #20,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      18: goto          26
      21: aload_0
      22: aload_3
      23: invokevirtual #21                 // Method addFirstNull:(Ljava/util/List;)V
      26: return

  protected final java.util.List<V> getValues(K);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnonnull     38
      18: new           #22                 // class java/util/LinkedList
      21: dup
      22: invokespecial #23                 // Method java/util/LinkedList."<init>":()V
      25: astore_2
      26: aload_0
      27: getfield      #5                  // Field store:Ljava/util/Map;
      30: aload_1
      31: aload_2
      32: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokevirtual #25                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Collection<java.util.List<V>> values();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.List<V> remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class java/util/List
      13: areturn

  public void putAll(java.util.Map<? extends K, ? extends java.util.List<V>>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public java.util.List<V> put(K, java.util.List<V>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #17                 // class java/util/List
      14: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.List<V> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class java/util/List
      13: areturn

  public java.util.Set<java.util.Map$Entry<K, java.util.List<V>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field store:Ljava/util/Map;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean equalsIgnoreValueOrder(javax.ws.rs.core.MultivaluedMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokevirtual #38                 // Method keySet:()Ljava/util/Set;
      11: aload_1
      12: invokeinterface #39,  1           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.keySet:()Ljava/util/Set;
      17: invokeinterface #40,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: invokevirtual #41                 // Method entrySet:()Ljava/util/Set;
      31: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore_2
      37: aload_2
      38: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          154
      46: aload_2
      47: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #43                 // class java/util/Map$Entry
      55: astore_3
      56: aload_1
      57: aload_3
      58: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: invokeinterface #45,  2           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #17                 // class java/util/List
      71: astore        4
      73: aload_3
      74: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      79: checkcast     #17                 // class java/util/List
      82: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      87: aload         4
      89: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      94: if_icmpeq     99
      97: iconst_0
      98: ireturn
      99: aload_3
     100: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     105: checkcast     #17                 // class java/util/List
     108: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     113: astore        5
     115: aload         5
     117: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     122: ifeq          151
     125: aload         5
     127: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: astore        6
     134: aload         4
     136: aload         6
     138: invokeinterface #47,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     143: ifne          148
     146: iconst_0
     147: ireturn
     148: goto          115
     151: goto          37
     154: iconst_1
     155: ireturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #17                 // class java/util/List
       6: invokevirtual #49                 // Method put:(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn
}
