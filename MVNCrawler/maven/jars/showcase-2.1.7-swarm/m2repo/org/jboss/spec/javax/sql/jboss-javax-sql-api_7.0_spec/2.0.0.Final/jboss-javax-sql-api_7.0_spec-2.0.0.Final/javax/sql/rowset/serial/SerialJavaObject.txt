Compiled from "SerialJavaObject.java"
public class javax.sql.rowset.serial.SerialJavaObject implements java.io.Serializable,java.lang.Cloneable {
  private java.lang.Object obj;

  private transient java.lang.reflect.Field[] fields;

  static final long serialVersionUID;

  java.util.Vector<javax.sql.rowset.RowSetWarning> chain;

  public javax.sql.rowset.serial.SerialJavaObject(java.lang.Object) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: astore_2
       9: aload_1
      10: instanceof    #3                  // class java/io/Serializable
      13: ifne          29
      16: aload_0
      17: new           #4                  // class javax/sql/rowset/RowSetWarning
      20: dup
      21: ldc           #5                  // String Warning, the object passed to the constructor does not implement Serializable
      23: invokespecial #6                  // Method javax/sql/rowset/RowSetWarning."<init>":(Ljava/lang/String;)V
      26: invokespecial #7                  // Method setWarning:(Ljavax/sql/rowset/RowSetWarning;)V
      29: aload_0
      30: aload_2
      31: invokevirtual #8                  // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
      34: putfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
      37: aload_0
      38: getfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
      41: invokestatic  #10                 // Method hasStaticFields:([Ljava/lang/reflect/Field;)Z
      44: ifeq          57
      47: new           #11                 // class javax/sql/rowset/serial/SerialException
      50: dup
      51: ldc           #12                 // String Located static fields in object instance. Cannot serialize
      53: invokespecial #13                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: aload_1
      59: putfield      #14                 // Field obj:Ljava/lang/Object;
      62: return

  public java.lang.Object getObject() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field obj:Ljava/lang/Object;
       4: areturn

  public java.lang.reflect.Field[] getFields() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
       4: ifnull        50
       7: aload_0
       8: getfield      #14                 // Field obj:Ljava/lang/Object;
      11: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: astore_1
      15: invokestatic  #15                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      18: astore_2
      19: aload_2
      20: ifnull        45
      23: invokestatic  #16                 // Method sun/reflect/Reflection.getCallerClass:()Ljava/lang/Class;
      26: astore_3
      27: aload_3
      28: invokevirtual #17                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      31: aload_1
      32: invokevirtual #17                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      35: invokestatic  #18                 // Method sun/reflect/misc/ReflectUtil.needsPackageAccessCheck:(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z
      38: ifeq          45
      41: aload_1
      42: invokestatic  #19                 // Method sun/reflect/misc/ReflectUtil.checkPackageAccess:(Ljava/lang/Class;)V
      45: aload_1
      46: invokevirtual #8                  // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
      49: areturn
      50: new           #11                 // class javax/sql/rowset/serial/SerialException
      53: dup
      54: ldc           #20                 // String SerialJavaObject does not contain a serialized object instance
      56: invokespecial #13                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      59: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #21                 // class javax/sql/rowset/serial/SerialJavaObject
      11: ifeq          31
      14: aload_1
      15: checkcast     #21                 // class javax/sql/rowset/serial/SerialJavaObject
      18: astore_2
      19: aload_0
      20: getfield      #14                 // Field obj:Ljava/lang/Object;
      23: aload_2
      24: getfield      #14                 // Field obj:Ljava/lang/Object;
      27: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      30: ireturn
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: aload_0
       3: getfield      #14                 // Field obj:Ljava/lang/Object;
       6: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
       9: iadd
      10: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #21                 // class javax/sql/rowset/serial/SerialJavaObject
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
      13: aload_0
      14: getfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
      17: arraylength
      18: invokestatic  #25                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      21: checkcast     #26                 // class "[Ljava/lang/reflect/Field;"
      24: putfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
      27: aload_0
      28: getfield      #27                 // Field chain:Ljava/util/Vector;
      31: ifnull        49
      34: aload_1
      35: new           #28                 // class java/util/Vector
      38: dup
      39: aload_0
      40: getfield      #27                 // Field chain:Ljava/util/Vector;
      43: invokespecial #29                 // Method java/util/Vector."<init>":(Ljava/util/Collection;)V
      46: putfield      #27                 // Field chain:Ljava/util/Vector;
      49: aload_1
      50: areturn
      51: astore_1
      52: new           #31                 // class java/lang/InternalError
      55: dup
      56: invokespecial #32                 // Method java/lang/InternalError."<init>":()V
      59: athrow
    Exception table:
       from    to  target type
           0    50    51   Class java/lang/CloneNotSupportedException

  private void setWarning(javax.sql.rowset.RowSetWarning);
    Code:
       0: aload_0
       1: getfield      #27                 // Field chain:Ljava/util/Vector;
       4: ifnonnull     18
       7: aload_0
       8: new           #28                 // class java/util/Vector
      11: dup
      12: invokespecial #33                 // Method java/util/Vector."<init>":()V
      15: putfield      #27                 // Field chain:Ljava/util/Vector;
      18: aload_0
      19: getfield      #27                 // Field chain:Ljava/util/Vector;
      22: aload_1
      23: invokevirtual #34                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method java/io/ObjectInputStream.readFields:()Ljava/io/ObjectInputStream$GetField;
       4: astore_2
       5: aload_2
       6: ldc           #36                 // String chain
       8: aconst_null
       9: invokevirtual #37                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #28                 // class java/util/Vector
      15: astore_3
      16: aload_3
      17: ifnull        32
      20: aload_0
      21: new           #28                 // class java/util/Vector
      24: dup
      25: aload_3
      26: invokespecial #29                 // Method java/util/Vector."<init>":(Ljava/util/Collection;)V
      29: putfield      #27                 // Field chain:Ljava/util/Vector;
      32: aload_0
      33: aload_2
      34: ldc           #38                 // String obj
      36: aconst_null
      37: invokevirtual #37                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      40: putfield      #14                 // Field obj:Ljava/lang/Object;
      43: aload_0
      44: getfield      #14                 // Field obj:Ljava/lang/Object;
      47: ifnull        84
      50: aload_0
      51: aload_0
      52: getfield      #14                 // Field obj:Ljava/lang/Object;
      55: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: invokevirtual #8                  // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
      61: putfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
      64: aload_0
      65: getfield      #9                  // Field fields:[Ljava/lang/reflect/Field;
      68: invokestatic  #10                 // Method hasStaticFields:([Ljava/lang/reflect/Field;)Z
      71: ifeq          94
      74: new           #39                 // class java/io/IOException
      77: dup
      78: ldc           #12                 // String Located static fields in object instance. Cannot serialize
      80: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: new           #39                 // class java/io/IOException
      87: dup
      88: ldc           #41                 // String Object cannot be null!
      90: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method java/io/ObjectOutputStream.putFields:()Ljava/io/ObjectOutputStream$PutField;
       4: astore_2
       5: aload_2
       6: ldc           #38                 // String obj
       8: aload_0
       9: getfield      #14                 // Field obj:Ljava/lang/Object;
      12: invokevirtual #43                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_2
      16: ldc           #36                 // String chain
      18: aload_0
      19: getfield      #27                 // Field chain:Ljava/util/Vector;
      22: invokevirtual #43                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_1
      26: invokevirtual #44                 // Method java/io/ObjectOutputStream.writeFields:()V
      29: return

  private static boolean hasStaticFields(java.lang.reflect.Field[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     35
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: invokevirtual #45                 // Method java/lang/reflect/Field.getModifiers:()I
      22: bipush        8
      24: if_icmpne     29
      27: iconst_1
      28: ireturn
      29: iinc          3, 1
      32: goto          7
      35: iconst_0
      36: ireturn
}
