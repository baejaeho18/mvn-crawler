Compiled from "ScriptFreeTLV.java"
public class javax.servlet.jsp.jstl.tlv.ScriptFreeTLV extends javax.servlet.jsp.tagext.TagLibraryValidator {
  private boolean allowDeclarations;

  private boolean allowScriptlets;

  private boolean allowExpressions;

  private boolean allowRTExpressions;

  private javax.xml.parsers.SAXParserFactory factory;

  public javax.servlet.jsp.jstl.tlv.ScriptFreeTLV();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method javax/servlet/jsp/tagext/TagLibraryValidator."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field allowDeclarations:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field allowScriptlets:Z
      14: aload_0
      15: iconst_0
      16: putfield      #3                  // Field allowExpressions:Z
      19: aload_0
      20: iconst_0
      21: putfield      #2                  // Field allowRTExpressions:Z
      24: aload_0
      25: invokestatic  #7                  // Method org/apache/taglibs/standard/tag/common/xml/ModularUtil.createSAXParserFactory:()Ljavax/xml/parsers/SAXParserFactory;
      28: putfield      #8                  // Field factory:Ljavax/xml/parsers/SAXParserFactory;
      31: aload_0
      32: getfield      #8                  // Field factory:Ljavax/xml/parsers/SAXParserFactory;
      35: iconst_0
      36: invokevirtual #9                  // Method javax/xml/parsers/SAXParserFactory.setValidating:(Z)V
      39: aload_0
      40: getfield      #8                  // Field factory:Ljavax/xml/parsers/SAXParserFactory;
      43: iconst_1
      44: invokevirtual #10                 // Method javax/xml/parsers/SAXParserFactory.setNamespaceAware:(Z)V
      47: return

  public void setInitParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method javax/servlet/jsp/tagext/TagLibraryValidator.setInitParameters:(Ljava/util/Map;)V
       5: aload_1
       6: ldc           #12                 // String allowDeclarations
       8: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #14                 // class java/lang/String
      16: astore_2
      17: aload_1
      18: ldc           #15                 // String allowScriptlets
      20: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #14                 // class java/lang/String
      28: astore_3
      29: aload_1
      30: ldc           #16                 // String allowExpressions
      32: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #14                 // class java/lang/String
      40: astore        4
      42: aload_1
      43: ldc           #17                 // String allowRTExpressions
      45: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #14                 // class java/lang/String
      53: astore        5
      55: aload_0
      56: ldc           #18                 // String true
      58: aload_2
      59: invokevirtual #19                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      62: putfield      #5                  // Field allowDeclarations:Z
      65: aload_0
      66: ldc           #18                 // String true
      68: aload_3
      69: invokevirtual #19                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      72: putfield      #4                  // Field allowScriptlets:Z
      75: aload_0
      76: ldc           #18                 // String true
      78: aload         4
      80: invokevirtual #19                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      83: putfield      #3                  // Field allowExpressions:Z
      86: aload_0
      87: ldc           #18                 // String true
      89: aload         5
      91: invokevirtual #19                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      94: putfield      #2                  // Field allowRTExpressions:Z
      97: return

  public javax.servlet.jsp.tagext.ValidationMessage[] validate(java.lang.String, java.lang.String, javax.servlet.jsp.tagext.PageData);
    Code:
       0: aconst_null
       1: astore        4
       3: new           #20                 // class javax/servlet/jsp/jstl/tlv/ScriptFreeTLV$MyContentHandler
       6: dup
       7: aload_0
       8: aconst_null
       9: invokespecial #21                 // Method javax/servlet/jsp/jstl/tlv/ScriptFreeTLV$MyContentHandler."<init>":(Ljavax/servlet/jsp/jstl/tlv/ScriptFreeTLV;Ljavax/servlet/jsp/jstl/tlv/ScriptFreeTLV$1;)V
      12: astore        6
      14: aload_0
      15: getfield      #8                  // Field factory:Ljavax/xml/parsers/SAXParserFactory;
      18: dup
      19: astore        7
      21: monitorenter
      22: aload_0
      23: getfield      #8                  // Field factory:Ljavax/xml/parsers/SAXParserFactory;
      26: invokevirtual #22                 // Method javax/xml/parsers/SAXParserFactory.newSAXParser:()Ljavax/xml/parsers/SAXParser;
      29: astore        5
      31: aload         7
      33: monitorexit
      34: goto          45
      37: astore        8
      39: aload         7
      41: monitorexit
      42: aload         8
      44: athrow
      45: aload_3
      46: invokevirtual #23                 // Method javax/servlet/jsp/tagext/PageData.getInputStream:()Ljava/io/InputStream;
      49: astore        4
      51: aload         5
      53: aload         4
      55: aload         6
      57: invokevirtual #24                 // Method javax/xml/parsers/SAXParser.parse:(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;)V
      60: aload         4
      62: ifnull        188
      65: aload         4
      67: invokevirtual #25                 // Method java/io/InputStream.close:()V
      70: goto          188
      73: astore        7
      75: goto          188
      78: astore        7
      80: aload         7
      82: invokevirtual #28                 // Method javax/xml/parsers/ParserConfigurationException.toString:()Ljava/lang/String;
      85: invokestatic  #1                  // Method vmFromString:(Ljava/lang/String;)[Ljavax/servlet/jsp/tagext/ValidationMessage;
      88: astore        8
      90: aload         4
      92: ifnull        105
      95: aload         4
      97: invokevirtual #25                 // Method java/io/InputStream.close:()V
     100: goto          105
     103: astore        9
     105: aload         8
     107: areturn
     108: astore        7
     110: aload         7
     112: invokevirtual #30                 // Method org/xml/sax/SAXException.toString:()Ljava/lang/String;
     115: invokestatic  #1                  // Method vmFromString:(Ljava/lang/String;)[Ljavax/servlet/jsp/tagext/ValidationMessage;
     118: astore        8
     120: aload         4
     122: ifnull        135
     125: aload         4
     127: invokevirtual #25                 // Method java/io/InputStream.close:()V
     130: goto          135
     133: astore        9
     135: aload         8
     137: areturn
     138: astore        7
     140: aload         7
     142: invokevirtual #31                 // Method java/io/IOException.toString:()Ljava/lang/String;
     145: invokestatic  #1                  // Method vmFromString:(Ljava/lang/String;)[Ljavax/servlet/jsp/tagext/ValidationMessage;
     148: astore        8
     150: aload         4
     152: ifnull        165
     155: aload         4
     157: invokevirtual #25                 // Method java/io/InputStream.close:()V
     160: goto          165
     163: astore        9
     165: aload         8
     167: areturn
     168: astore        10
     170: aload         4
     172: ifnull        185
     175: aload         4
     177: invokevirtual #25                 // Method java/io/InputStream.close:()V
     180: goto          185
     183: astore        11
     185: aload         10
     187: athrow
     188: aload         6
     190: invokevirtual #32                 // Method javax/servlet/jsp/jstl/tlv/ScriptFreeTLV$MyContentHandler.reportResults:()[Ljavax/servlet/jsp/tagext/ValidationMessage;
     193: areturn
    Exception table:
       from    to  target type
          22    34    37   any
          37    42    37   any
          65    70    73   Class java/io/IOException
          14    60    78   Class javax/xml/parsers/ParserConfigurationException
          95   100   103   Class java/io/IOException
          14    60   108   Class org/xml/sax/SAXException
         125   130   133   Class java/io/IOException
          14    60   138   Class java/io/IOException
         155   160   163   Class java/io/IOException
          14    60   168   any
          78    90   168   any
         108   120   168   any
         138   150   168   any
         175   180   183   Class java/io/IOException
         168   170   168   any

  private static javax.servlet.jsp.tagext.ValidationMessage[] vmFromString(java.lang.String);
    Code:
       0: iconst_1
       1: anewarray     #33                 // class javax/servlet/jsp/tagext/ValidationMessage
       4: dup
       5: iconst_0
       6: new           #33                 // class javax/servlet/jsp/tagext/ValidationMessage
       9: dup
      10: aconst_null
      11: aload_0
      12: invokespecial #34                 // Method javax/servlet/jsp/tagext/ValidationMessage."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: aastore
      16: areturn

  static boolean access$100(javax.servlet.jsp.jstl.tlv.ScriptFreeTLV);
    Code:
       0: aload_0
       1: getfield      #5                  // Field allowDeclarations:Z
       4: ireturn

  static boolean access$200(javax.servlet.jsp.jstl.tlv.ScriptFreeTLV);
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowScriptlets:Z
       4: ireturn

  static boolean access$300(javax.servlet.jsp.jstl.tlv.ScriptFreeTLV);
    Code:
       0: aload_0
       1: getfield      #3                  // Field allowExpressions:Z
       4: ireturn

  static boolean access$400(javax.servlet.jsp.jstl.tlv.ScriptFreeTLV);
    Code:
       0: aload_0
       1: getfield      #2                  // Field allowRTExpressions:Z
       4: ireturn

  static javax.servlet.jsp.tagext.ValidationMessage[] access$500(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method vmFromString:(Ljava/lang/String;)[Ljavax/servlet/jsp/tagext/ValidationMessage;
       4: areturn
}
