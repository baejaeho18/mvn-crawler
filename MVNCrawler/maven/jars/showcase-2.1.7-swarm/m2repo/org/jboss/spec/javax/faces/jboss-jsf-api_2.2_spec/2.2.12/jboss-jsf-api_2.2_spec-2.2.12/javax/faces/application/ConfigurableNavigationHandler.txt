Compiled from "ConfigurableNavigationHandler.java"
public abstract class javax.faces.application.ConfigurableNavigationHandler extends javax.faces.application.NavigationHandler {
  public javax.faces.application.ConfigurableNavigationHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/faces/application/NavigationHandler."<init>":()V
       4: return

  public abstract javax.faces.application.NavigationCase getNavigationCase(javax.faces.context.FacesContext, java.lang.String, java.lang.String);

  public javax.faces.application.NavigationCase getNavigationCase(javax.faces.context.FacesContext, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #2                  // Method getNavigationCase:(Ljavax/faces/context/FacesContext;Ljava/lang/String;Ljava/lang/String;)Ljavax/faces/application/NavigationCase;
       7: areturn

  public abstract java.util.Map<java.lang.String, java.util.Set<javax.faces.application.NavigationCase>> getNavigationCases();

  public void performNavigation(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
       4: aconst_null
       5: aload_1
       6: invokevirtual #4                  // Method handleNavigation:(Ljavax/faces/context/FacesContext;Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void inspectFlow(javax.faces.context.FacesContext, javax.faces.flow.Flow);
    Code:
       0: return
}
