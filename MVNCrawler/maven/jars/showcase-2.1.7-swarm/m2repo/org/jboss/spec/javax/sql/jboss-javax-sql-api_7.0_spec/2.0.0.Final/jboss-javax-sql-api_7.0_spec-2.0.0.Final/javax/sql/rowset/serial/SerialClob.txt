Compiled from "SerialClob.java"
public class javax.sql.rowset.serial.SerialClob implements java.sql.Clob,java.io.Serializable,java.lang.Cloneable {
  private char[] buf;

  private java.sql.Clob clob;

  private long len;

  private long origLen;

  static final long serialVersionUID;

  public javax.sql.rowset.serial.SerialClob(char[]) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: arraylength
       7: i2l
       8: putfield      #2                  // Field len:J
      11: aload_0
      12: aload_0
      13: getfield      #2                  // Field len:J
      16: l2i
      17: newarray       char
      19: putfield      #3                  // Field buf:[C
      22: iconst_0
      23: istore_2
      24: iload_2
      25: i2l
      26: aload_0
      27: getfield      #2                  // Field len:J
      30: lcmp
      31: ifge          49
      34: aload_0
      35: getfield      #3                  // Field buf:[C
      38: iload_2
      39: aload_1
      40: iload_2
      41: caload
      42: castore
      43: iinc          2, 1
      46: goto          24
      49: aload_0
      50: aload_0
      51: getfield      #2                  // Field len:J
      54: putfield      #4                  // Field origLen:J
      57: aload_0
      58: aconst_null
      59: putfield      #5                  // Field clob:Ljava/sql/Clob;
      62: return

  public javax.sql.rowset.serial.SerialClob(java.sql.Clob) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #6                  // class java/sql/SQLException
      11: dup
      12: ldc           #7                  // String Cannot instantiate a SerialClob object with a null Clob object
      14: invokespecial #8                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod java/sql/Clob.length:()J
      25: putfield      #2                  // Field len:J
      28: aload_0
      29: aload_1
      30: putfield      #5                  // Field clob:Ljava/sql/Clob;
      33: aload_0
      34: aload_0
      35: getfield      #2                  // Field len:J
      38: l2i
      39: newarray       char
      41: putfield      #3                  // Field buf:[C
      44: iconst_0
      45: istore_2
      46: iconst_0
      47: istore_3
      48: aload_1
      49: invokeinterface #10,  1           // InterfaceMethod java/sql/Clob.getCharacterStream:()Ljava/io/Reader;
      54: astore        4
      56: aconst_null
      57: astore        5
      59: aload         4
      61: ifnonnull     74
      64: new           #6                  // class java/sql/SQLException
      67: dup
      68: ldc           #11                 // String Invalid Clob object. The call to getCharacterStream returned null which cannot be serialized.
      70: invokespecial #8                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_1
      75: invokeinterface #12,  1           // InterfaceMethod java/sql/Clob.getAsciiStream:()Ljava/io/InputStream;
      80: astore        6
      82: aconst_null
      83: astore        7
      85: aload         6
      87: ifnonnull     100
      90: new           #6                  // class java/sql/SQLException
      93: dup
      94: ldc           #13                 // String Invalid Clob object. The call to getAsciiStream returned null which cannot be serialized.
      96: invokespecial #8                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload         6
     102: ifnull        187
     105: aload         7
     107: ifnull        130
     110: aload         6
     112: invokevirtual #14                 // Method java/io/InputStream.close:()V
     115: goto          187
     118: astore        8
     120: aload         7
     122: aload         8
     124: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     127: goto          187
     130: aload         6
     132: invokevirtual #14                 // Method java/io/InputStream.close:()V
     135: goto          187
     138: astore        8
     140: aload         8
     142: astore        7
     144: aload         8
     146: athrow
     147: astore        9
     149: aload         6
     151: ifnull        184
     154: aload         7
     156: ifnull        179
     159: aload         6
     161: invokevirtual #14                 // Method java/io/InputStream.close:()V
     164: goto          184
     167: astore        10
     169: aload         7
     171: aload         10
     173: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     176: goto          184
     179: aload         6
     181: invokevirtual #14                 // Method java/io/InputStream.close:()V
     184: aload         9
     186: athrow
     187: new           #17                 // class java/io/BufferedReader
     190: dup
     191: aload         4
     193: invokespecial #18                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
     196: astore        6
     198: aconst_null
     199: astore        7
     201: aload         6
     203: aload_0
     204: getfield      #3                  // Field buf:[C
     207: iload_3
     208: aload_0
     209: getfield      #2                  // Field len:J
     212: iload_3
     213: i2l
     214: lsub
     215: l2i
     216: invokevirtual #19                 // Method java/io/Reader.read:([CII)I
     219: istore_2
     220: iload_3
     221: iload_2
     222: iadd
     223: istore_3
     224: iload_2
     225: ifgt          201
     228: aload         6
     230: ifnull        315
     233: aload         7
     235: ifnull        258
     238: aload         6
     240: invokevirtual #20                 // Method java/io/Reader.close:()V
     243: goto          315
     246: astore        8
     248: aload         7
     250: aload         8
     252: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     255: goto          315
     258: aload         6
     260: invokevirtual #20                 // Method java/io/Reader.close:()V
     263: goto          315
     266: astore        8
     268: aload         8
     270: astore        7
     272: aload         8
     274: athrow
     275: astore        11
     277: aload         6
     279: ifnull        312
     282: aload         7
     284: ifnull        307
     287: aload         6
     289: invokevirtual #20                 // Method java/io/Reader.close:()V
     292: goto          312
     295: astore        12
     297: aload         7
     299: aload         12
     301: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     304: goto          312
     307: aload         6
     309: invokevirtual #20                 // Method java/io/Reader.close:()V
     312: aload         11
     314: athrow
     315: aload         4
     317: ifnull        402
     320: aload         5
     322: ifnull        345
     325: aload         4
     327: invokevirtual #20                 // Method java/io/Reader.close:()V
     330: goto          402
     333: astore        6
     335: aload         5
     337: aload         6
     339: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     342: goto          402
     345: aload         4
     347: invokevirtual #20                 // Method java/io/Reader.close:()V
     350: goto          402
     353: astore        6
     355: aload         6
     357: astore        5
     359: aload         6
     361: athrow
     362: astore        13
     364: aload         4
     366: ifnull        399
     369: aload         5
     371: ifnull        394
     374: aload         4
     376: invokevirtual #20                 // Method java/io/Reader.close:()V
     379: goto          399
     382: astore        14
     384: aload         5
     386: aload         14
     388: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     391: goto          399
     394: aload         4
     396: invokevirtual #20                 // Method java/io/Reader.close:()V
     399: aload         13
     401: athrow
     402: goto          438
     405: astore        4
     407: new           #22                 // class javax/sql/rowset/serial/SerialException
     410: dup
     411: new           #23                 // class java/lang/StringBuilder
     414: dup
     415: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     418: ldc           #25                 // String SerialClob:
     420: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     423: aload         4
     425: invokevirtual #27                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     428: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     431: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     434: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
     437: athrow
     438: aload_0
     439: aload_0
     440: getfield      #2                  // Field len:J
     443: putfield      #4                  // Field origLen:J
     446: return
    Exception table:
       from    to  target type
         110   115   118   Class java/lang/Throwable
          85   100   138   Class java/lang/Throwable
          85   100   147   any
         159   164   167   Class java/lang/Throwable
         138   149   147   any
         238   243   246   Class java/lang/Throwable
         201   228   266   Class java/lang/Throwable
         201   228   275   any
         287   292   295   Class java/lang/Throwable
         266   277   275   any
         325   330   333   Class java/lang/Throwable
          59   315   353   Class java/lang/Throwable
          59   315   362   any
         374   379   382   Class java/lang/Throwable
         353   364   362   any
          48   402   405   Class java/io/IOException

  public long length() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: aload_0
       5: getfield      #2                  // Field len:J
       8: lreturn

  public java.io.Reader getCharacterStream() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: new           #31                 // class java/io/CharArrayReader
       7: dup
       8: aload_0
       9: getfield      #3                  // Field buf:[C
      12: invokespecial #32                 // Method java/io/CharArrayReader."<init>":([C)V
      15: areturn

  public java.io.InputStream getAsciiStream() throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: aload_0
       5: getfield      #5                  // Field clob:Ljava/sql/Clob;
       8: ifnull        21
      11: aload_0
      12: getfield      #5                  // Field clob:Ljava/sql/Clob;
      15: invokeinterface #12,  1           // InterfaceMethod java/sql/Clob.getAsciiStream:()Ljava/io/InputStream;
      20: areturn
      21: new           #22                 // class javax/sql/rowset/serial/SerialException
      24: dup
      25: ldc           #33                 // String Unsupported operation. SerialClob cannot return a the CLOB value as an ascii stream, unless instantiated with a fully implemented Clob object.
      27: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      30: athrow

  public java.lang.String getSubString(long, int) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: lload_1
       5: lconst_1
       6: lcmp
       7: iflt          19
      10: lload_1
      11: aload_0
      12: invokevirtual #34                 // Method length:()J
      15: lcmp
      16: ifle          29
      19: new           #22                 // class javax/sql/rowset/serial/SerialException
      22: dup
      23: ldc           #35                 // String Invalid position in SerialClob object set
      25: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: lload_1
      30: lconst_1
      31: lsub
      32: iload_3
      33: i2l
      34: ladd
      35: aload_0
      36: invokevirtual #34                 // Method length:()J
      39: lcmp
      40: ifle          53
      43: new           #22                 // class javax/sql/rowset/serial/SerialException
      46: dup
      47: ldc           #36                 // String Invalid position and substring length
      49: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: new           #37                 // class java/lang/String
      56: dup
      57: aload_0
      58: getfield      #3                  // Field buf:[C
      61: lload_1
      62: l2i
      63: iconst_1
      64: isub
      65: iload_3
      66: invokespecial #38                 // Method java/lang/String."<init>":([CII)V
      69: areturn
      70: astore        4
      72: new           #22                 // class javax/sql/rowset/serial/SerialException
      75: dup
      76: new           #23                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #40                 // String StringIndexOutOfBoundsException:
      85: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload         4
      90: invokevirtual #41                 // Method java/lang/StringIndexOutOfBoundsException.getMessage:()Ljava/lang/String;
      93: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
     102: athrow
    Exception table:
       from    to  target type
          53    69    70   Class java/lang/StringIndexOutOfBoundsException

  public long position(java.lang.String, long) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: lload_2
       5: lconst_1
       6: lcmp
       7: iflt          19
      10: lload_2
      11: aload_0
      12: getfield      #2                  // Field len:J
      15: lcmp
      16: ifle          23
      19: ldc2_w        #42                 // long -1l
      22: lreturn
      23: aload_1
      24: invokevirtual #44                 // Method java/lang/String.toCharArray:()[C
      27: astore        4
      29: lload_2
      30: l2i
      31: iconst_1
      32: isub
      33: istore        5
      35: iconst_0
      36: istore        6
      38: aload         4
      40: arraylength
      41: i2l
      42: lstore        7
      44: iload         5
      46: i2l
      47: aload_0
      48: getfield      #2                  // Field len:J
      51: lcmp
      52: ifge          122
      55: aload         4
      57: iload         6
      59: caload
      60: aload_0
      61: getfield      #3                  // Field buf:[C
      64: iload         5
      66: caload
      67: if_icmpne     101
      70: iload         6
      72: iconst_1
      73: iadd
      74: i2l
      75: lload         7
      77: lcmp
      78: ifne          92
      81: iload         5
      83: iconst_1
      84: iadd
      85: i2l
      86: lload         7
      88: lconst_1
      89: lsub
      90: lsub
      91: lreturn
      92: iinc          6, 1
      95: iinc          5, 1
      98: goto          44
     101: aload         4
     103: iload         6
     105: caload
     106: aload_0
     107: getfield      #3                  // Field buf:[C
     110: iload         5
     112: caload
     113: if_icmpeq     44
     116: iinc          5, 1
     119: goto          44
     122: ldc2_w        #42                 // long -1l
     125: lreturn

  public long position(java.sql.Clob, long) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: aload_0
       5: aload_1
       6: lconst_1
       7: aload_1
       8: invokeinterface #9,  1            // InterfaceMethod java/sql/Clob.length:()J
      13: l2i
      14: invokeinterface #45,  4           // InterfaceMethod java/sql/Clob.getSubString:(JI)Ljava/lang/String;
      19: lload_2
      20: invokevirtual #46                 // Method position:(Ljava/lang/String;J)J
      23: lreturn

  public int setString(long, java.lang.String) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iconst_0
       4: aload_3
       5: invokevirtual #47                 // Method java/lang/String.length:()I
       8: invokevirtual #48                 // Method setString:(JLjava/lang/String;II)I
      11: ireturn

  public int setString(long, java.lang.String, int, int) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: aload_3
       5: iload         4
       7: invokevirtual #49                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      10: astore        6
      12: aload         6
      14: invokevirtual #44                 // Method java/lang/String.toCharArray:()[C
      17: astore        7
      19: iload         4
      21: iflt          33
      24: iload         4
      26: aload_3
      27: invokevirtual #47                 // Method java/lang/String.length:()I
      30: if_icmple     43
      33: new           #22                 // class javax/sql/rowset/serial/SerialException
      36: dup
      37: ldc           #50                 // String Invalid offset in byte array set
      39: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: lload_1
      44: lconst_1
      45: lcmp
      46: iflt          58
      49: lload_1
      50: aload_0
      51: invokevirtual #34                 // Method length:()J
      54: lcmp
      55: ifle          68
      58: new           #22                 // class javax/sql/rowset/serial/SerialException
      61: dup
      62: ldc           #51                 // String Invalid position in Clob object set
      64: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iload         5
      70: i2l
      71: aload_0
      72: getfield      #4                  // Field origLen:J
      75: lcmp
      76: ifle          89
      79: new           #22                 // class javax/sql/rowset/serial/SerialException
      82: dup
      83: ldc           #52                 // String Buffer is not sufficient to hold the value
      85: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: iload         5
      91: iload         4
      93: iadd
      94: aload_3
      95: invokevirtual #47                 // Method java/lang/String.length:()I
      98: if_icmple     111
     101: new           #22                 // class javax/sql/rowset/serial/SerialException
     104: dup
     105: ldc           #53                 // String Invalid OffSet. Cannot have combined offset  and length that is greater that the Blob buffer
     107: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: iconst_0
     112: istore        8
     114: lload_1
     115: lconst_1
     116: lsub
     117: lstore_1
     118: iload         8
     120: iload         5
     122: if_icmplt     142
     125: iload         4
     127: iload         8
     129: iadd
     130: iconst_1
     131: iadd
     132: aload_3
     133: invokevirtual #47                 // Method java/lang/String.length:()I
     136: iload         4
     138: isub
     139: if_icmpge     166
     142: aload_0
     143: getfield      #3                  // Field buf:[C
     146: lload_1
     147: l2i
     148: iload         8
     150: iadd
     151: aload         7
     153: iload         4
     155: iload         8
     157: iadd
     158: caload
     159: castore
     160: iinc          8, 1
     163: goto          118
     166: iload         8
     168: ireturn

  public java.io.OutputStream setAsciiStream(long) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: aload_0
       5: getfield      #5                  // Field clob:Ljava/sql/Clob;
       8: ifnull        22
      11: aload_0
      12: getfield      #5                  // Field clob:Ljava/sql/Clob;
      15: lload_1
      16: invokeinterface #54,  3           // InterfaceMethod java/sql/Clob.setAsciiStream:(J)Ljava/io/OutputStream;
      21: areturn
      22: new           #22                 // class javax/sql/rowset/serial/SerialException
      25: dup
      26: ldc           #55                 // String Unsupported operation. SerialClob cannot return a writable ascii stream\n unless instantiated with a Clob object that has a setAsciiStream() implementation
      28: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      31: athrow

  public java.io.Writer setCharacterStream(long) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: aload_0
       5: getfield      #5                  // Field clob:Ljava/sql/Clob;
       8: ifnull        22
      11: aload_0
      12: getfield      #5                  // Field clob:Ljava/sql/Clob;
      15: lload_1
      16: invokeinterface #56,  3           // InterfaceMethod java/sql/Clob.setCharacterStream:(J)Ljava/io/Writer;
      21: areturn
      22: new           #22                 // class javax/sql/rowset/serial/SerialException
      25: dup
      26: ldc           #57                 // String Unsupported operation. SerialClob cannot return a writable character stream\n unless instantiated with a Clob object that has a setCharacterStream implementation
      28: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      31: athrow

  public void truncate(long) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: lload_1
       5: aload_0
       6: getfield      #2                  // Field len:J
       9: lcmp
      10: ifle          23
      13: new           #22                 // class javax/sql/rowset/serial/SerialException
      16: dup
      17: ldc           #58                 // String Length more than what can be truncated
      19: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: lload_1
      25: putfield      #2                  // Field len:J
      28: aload_0
      29: getfield      #2                  // Field len:J
      32: lconst_0
      33: lcmp
      34: ifne          47
      37: aload_0
      38: iconst_0
      39: newarray       char
      41: putfield      #3                  // Field buf:[C
      44: goto          64
      47: aload_0
      48: aload_0
      49: lconst_1
      50: aload_0
      51: getfield      #2                  // Field len:J
      54: l2i
      55: invokevirtual #59                 // Method getSubString:(JI)Ljava/lang/String;
      58: invokevirtual #44                 // Method java/lang/String.toCharArray:()[C
      61: putfield      #3                  // Field buf:[C
      64: return

  public java.io.Reader getCharacterStream(long, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method isValid:()V
       4: lload_1
       5: lconst_1
       6: lcmp
       7: iflt          19
      10: lload_1
      11: aload_0
      12: getfield      #2                  // Field len:J
      15: lcmp
      16: ifle          29
      19: new           #22                 // class javax/sql/rowset/serial/SerialException
      22: dup
      23: ldc           #51                 // String Invalid position in Clob object set
      25: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: lload_1
      30: lconst_1
      31: lsub
      32: lload_3
      33: ladd
      34: aload_0
      35: getfield      #2                  // Field len:J
      38: lcmp
      39: ifle          52
      42: new           #22                 // class javax/sql/rowset/serial/SerialException
      45: dup
      46: ldc           #36                 // String Invalid position and substring length
      48: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: lload_3
      53: lconst_0
      54: lcmp
      55: ifgt          68
      58: new           #22                 // class javax/sql/rowset/serial/SerialException
      61: dup
      62: ldc           #60                 // String Invalid length specified
      64: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: new           #31                 // class java/io/CharArrayReader
      71: dup
      72: aload_0
      73: getfield      #3                  // Field buf:[C
      76: lload_1
      77: l2i
      78: lload_3
      79: l2i
      80: invokespecial #61                 // Method java/io/CharArrayReader."<init>":([CII)V
      83: areturn

  public void free() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[C
       4: ifnull        33
       7: aload_0
       8: aconst_null
       9: putfield      #3                  // Field buf:[C
      12: aload_0
      13: getfield      #5                  // Field clob:Ljava/sql/Clob;
      16: ifnull        28
      19: aload_0
      20: getfield      #5                  // Field clob:Ljava/sql/Clob;
      23: invokeinterface #62,  1           // InterfaceMethod java/sql/Clob.free:()V
      28: aload_0
      29: aconst_null
      30: putfield      #5                  // Field clob:Ljava/sql/Clob;
      33: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #63                 // class javax/sql/rowset/serial/SerialClob
      11: ifeq          43
      14: aload_1
      15: checkcast     #63                 // class javax/sql/rowset/serial/SerialClob
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field len:J
      23: aload_2
      24: getfield      #2                  // Field len:J
      27: lcmp
      28: ifne          43
      31: aload_0
      32: getfield      #3                  // Field buf:[C
      35: aload_2
      36: getfield      #3                  // Field buf:[C
      39: invokestatic  #64                 // Method java/util/Arrays.equals:([C[C)Z
      42: ireturn
      43: iconst_0
      44: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: aload_0
       3: getfield      #3                  // Field buf:[C
       6: invokestatic  #65                 // Method java/util/Arrays.hashCode:([C)I
       9: iadd
      10: bipush        31
      12: imul
      13: aload_0
      14: getfield      #2                  // Field len:J
      17: l2i
      18: iadd
      19: bipush        31
      21: imul
      22: aload_0
      23: getfield      #4                  // Field origLen:J
      26: l2i
      27: iadd
      28: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #63                 // class javax/sql/rowset/serial/SerialClob
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field buf:[C
      13: ifnull        31
      16: aload_0
      17: getfield      #3                  // Field buf:[C
      20: aload_0
      21: getfield      #2                  // Field len:J
      24: l2i
      25: invokestatic  #67                 // Method java/util/Arrays.copyOf:([CI)[C
      28: goto          32
      31: aconst_null
      32: putfield      #3                  // Field buf:[C
      35: aload_1
      36: aconst_null
      37: putfield      #5                  // Field clob:Ljava/sql/Clob;
      40: aload_1
      41: areturn
      42: astore_1
      43: new           #69                 // class java/lang/InternalError
      46: dup
      47: invokespecial #70                 // Method java/lang/InternalError."<init>":()V
      50: athrow
    Exception table:
       from    to  target type
           0    41    42   Class java/lang/CloneNotSupportedException

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #71                 // Method java/io/ObjectInputStream.readFields:()Ljava/io/ObjectInputStream$GetField;
       4: astore_2
       5: aload_2
       6: ldc           #72                 // String buf
       8: aconst_null
       9: invokevirtual #73                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #74                 // class "[C"
      15: checkcast     #74                 // class "[C"
      18: astore_3
      19: aload_3
      20: ifnonnull     33
      23: new           #75                 // class java/io/InvalidObjectException
      26: dup
      27: ldc           #76                 // String buf is null and should not be!
      29: invokespecial #77                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: aload_3
      35: invokevirtual #78                 // Method "[C".clone:()Ljava/lang/Object;
      38: checkcast     #74                 // class "[C"
      41: putfield      #3                  // Field buf:[C
      44: aload_0
      45: aload_2
      46: ldc           #79                 // String len
      48: lconst_0
      49: invokevirtual #80                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;J)J
      52: putfield      #2                  // Field len:J
      55: aload_0
      56: getfield      #3                  // Field buf:[C
      59: arraylength
      60: i2l
      61: aload_0
      62: getfield      #2                  // Field len:J
      65: lcmp
      66: ifeq          79
      69: new           #75                 // class java/io/InvalidObjectException
      72: dup
      73: ldc           #81                 // String buf is not the expected size
      75: invokespecial #77                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: aload_2
      81: ldc           #82                 // String origLen
      83: lconst_0
      84: invokevirtual #80                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;J)J
      87: putfield      #4                  // Field origLen:J
      90: aload_0
      91: aload_2
      92: ldc           #83                 // String clob
      94: aconst_null
      95: invokevirtual #73                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #84                 // class java/sql/Clob
     101: putfield      #5                  // Field clob:Ljava/sql/Clob;
     104: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #85                 // Method java/io/ObjectOutputStream.putFields:()Ljava/io/ObjectOutputStream$PutField;
       4: astore_2
       5: aload_2
       6: ldc           #72                 // String buf
       8: aload_0
       9: getfield      #3                  // Field buf:[C
      12: invokevirtual #86                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_2
      16: ldc           #79                 // String len
      18: aload_0
      19: getfield      #2                  // Field len:J
      22: invokevirtual #87                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;J)V
      25: aload_2
      26: ldc           #82                 // String origLen
      28: aload_0
      29: getfield      #4                  // Field origLen:J
      32: invokevirtual #87                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;J)V
      35: aload_2
      36: ldc           #83                 // String clob
      38: aload_0
      39: getfield      #5                  // Field clob:Ljava/sql/Clob;
      42: instanceof    #88                 // class java/io/Serializable
      45: ifeq          55
      48: aload_0
      49: getfield      #5                  // Field clob:Ljava/sql/Clob;
      52: goto          56
      55: aconst_null
      56: invokevirtual #86                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      59: aload_1
      60: invokevirtual #89                 // Method java/io/ObjectOutputStream.writeFields:()V
      63: return

  private void isValid() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[C
       4: ifnonnull     17
       7: new           #22                 // class javax/sql/rowset/serial/SerialException
      10: dup
      11: ldc           #90                 // String Error: You cannot call a method on a SerialClob instance once free() has been called.
      13: invokespecial #29                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return
}
