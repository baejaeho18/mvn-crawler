Compiled from "PrimitiveObjects.java"
class org.apache.taglibs.standard.lang.jstl.PrimitiveObjects {
  static int BYTE_LOWER_BOUND;

  static int BYTE_UPPER_BOUND;

  static int CHARACTER_LOWER_BOUND;

  static int CHARACTER_UPPER_BOUND;

  static int SHORT_LOWER_BOUND;

  static int SHORT_UPPER_BOUND;

  static int INTEGER_LOWER_BOUND;

  static int INTEGER_UPPER_BOUND;

  static int LONG_LOWER_BOUND;

  static int LONG_UPPER_BOUND;

  static java.lang.Byte[] mBytes;

  static java.lang.Character[] mCharacters;

  static java.lang.Short[] mShorts;

  static java.lang.Integer[] mIntegers;

  static java.lang.Long[] mLongs;

  org.apache.taglibs.standard.lang.jstl.PrimitiveObjects();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.Boolean getBoolean(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: getstatic     #2                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       7: goto          13
      10: getstatic     #3                  // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      13: areturn

  public static java.lang.Byte getByte(byte);
    Code:
       0: iload_0
       1: getstatic     #4                  // Field BYTE_LOWER_BOUND:I
       4: if_icmplt     24
       7: iload_0
       8: getstatic     #5                  // Field BYTE_UPPER_BOUND:I
      11: if_icmpgt     24
      14: getstatic     #6                  // Field mBytes:[Ljava/lang/Byte;
      17: iload_0
      18: getstatic     #4                  // Field BYTE_LOWER_BOUND:I
      21: isub
      22: aaload
      23: areturn
      24: new           #7                  // class java/lang/Byte
      27: dup
      28: iload_0
      29: invokespecial #8                  // Method java/lang/Byte."<init>":(B)V
      32: areturn

  public static java.lang.Character getCharacter(char);
    Code:
       0: iload_0
       1: getstatic     #9                  // Field CHARACTER_LOWER_BOUND:I
       4: if_icmplt     24
       7: iload_0
       8: getstatic     #10                 // Field CHARACTER_UPPER_BOUND:I
      11: if_icmpgt     24
      14: getstatic     #11                 // Field mCharacters:[Ljava/lang/Character;
      17: iload_0
      18: getstatic     #9                  // Field CHARACTER_LOWER_BOUND:I
      21: isub
      22: aaload
      23: areturn
      24: new           #12                 // class java/lang/Character
      27: dup
      28: iload_0
      29: invokespecial #13                 // Method java/lang/Character."<init>":(C)V
      32: areturn

  public static java.lang.Short getShort(short);
    Code:
       0: iload_0
       1: getstatic     #14                 // Field SHORT_LOWER_BOUND:I
       4: if_icmplt     24
       7: iload_0
       8: getstatic     #15                 // Field SHORT_UPPER_BOUND:I
      11: if_icmpgt     24
      14: getstatic     #16                 // Field mShorts:[Ljava/lang/Short;
      17: iload_0
      18: getstatic     #14                 // Field SHORT_LOWER_BOUND:I
      21: isub
      22: aaload
      23: areturn
      24: new           #17                 // class java/lang/Short
      27: dup
      28: iload_0
      29: invokespecial #18                 // Method java/lang/Short."<init>":(S)V
      32: areturn

  public static java.lang.Integer getInteger(int);
    Code:
       0: iload_0
       1: getstatic     #19                 // Field INTEGER_LOWER_BOUND:I
       4: if_icmplt     24
       7: iload_0
       8: getstatic     #20                 // Field INTEGER_UPPER_BOUND:I
      11: if_icmpgt     24
      14: getstatic     #21                 // Field mIntegers:[Ljava/lang/Integer;
      17: iload_0
      18: getstatic     #19                 // Field INTEGER_LOWER_BOUND:I
      21: isub
      22: aaload
      23: areturn
      24: new           #22                 // class java/lang/Integer
      27: dup
      28: iload_0
      29: invokespecial #23                 // Method java/lang/Integer."<init>":(I)V
      32: areturn

  public static java.lang.Long getLong(long);
    Code:
       0: lload_0
       1: getstatic     #24                 // Field LONG_LOWER_BOUND:I
       4: i2l
       5: lcmp
       6: iflt          29
       9: lload_0
      10: getstatic     #25                 // Field LONG_UPPER_BOUND:I
      13: i2l
      14: lcmp
      15: ifgt          29
      18: getstatic     #26                 // Field mLongs:[Ljava/lang/Long;
      21: lload_0
      22: l2i
      23: getstatic     #24                 // Field LONG_LOWER_BOUND:I
      26: isub
      27: aaload
      28: areturn
      29: new           #27                 // class java/lang/Long
      32: dup
      33: lload_0
      34: invokespecial #28                 // Method java/lang/Long."<init>":(J)V
      37: areturn

  public static java.lang.Float getFloat(float);
    Code:
       0: new           #29                 // class java/lang/Float
       3: dup
       4: fload_0
       5: invokespecial #30                 // Method java/lang/Float."<init>":(F)V
       8: areturn

  public static java.lang.Double getDouble(double);
    Code:
       0: new           #31                 // class java/lang/Double
       3: dup
       4: dload_0
       5: invokespecial #32                 // Method java/lang/Double."<init>":(D)V
       8: areturn

  public static java.lang.Class getPrimitiveObjectClass(java.lang.Class);
    Code:
       0: aload_0
       1: getstatic     #33                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
       4: if_acmpne     11
       7: ldc_w         #34                 // class java/lang/Boolean
      10: areturn
      11: aload_0
      12: getstatic     #35                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      15: if_acmpne     22
      18: ldc_w         #7                  // class java/lang/Byte
      21: areturn
      22: aload_0
      23: getstatic     #36                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      26: if_acmpne     33
      29: ldc_w         #17                 // class java/lang/Short
      32: areturn
      33: aload_0
      34: getstatic     #37                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      37: if_acmpne     44
      40: ldc_w         #12                 // class java/lang/Character
      43: areturn
      44: aload_0
      45: getstatic     #38                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      48: if_acmpne     55
      51: ldc_w         #22                 // class java/lang/Integer
      54: areturn
      55: aload_0
      56: getstatic     #39                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      59: if_acmpne     66
      62: ldc_w         #27                 // class java/lang/Long
      65: areturn
      66: aload_0
      67: getstatic     #40                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      70: if_acmpne     77
      73: ldc_w         #29                 // class java/lang/Float
      76: areturn
      77: aload_0
      78: getstatic     #41                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      81: if_acmpne     88
      84: ldc_w         #31                 // class java/lang/Double
      87: areturn
      88: aload_0
      89: areturn

  static java.lang.Byte[] createBytes();
    Code:
       0: getstatic     #5                  // Field BYTE_UPPER_BOUND:I
       3: getstatic     #4                  // Field BYTE_LOWER_BOUND:I
       6: isub
       7: iconst_1
       8: iadd
       9: istore_0
      10: iload_0
      11: anewarray     #7                  // class java/lang/Byte
      14: astore_1
      15: getstatic     #4                  // Field BYTE_LOWER_BOUND:I
      18: i2b
      19: istore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: iload_0
      24: if_icmpge     49
      27: aload_1
      28: iload_3
      29: new           #7                  // class java/lang/Byte
      32: dup
      33: iload_2
      34: invokespecial #8                  // Method java/lang/Byte."<init>":(B)V
      37: aastore
      38: iinc          3, 1
      41: iload_2
      42: iconst_1
      43: iadd
      44: i2b
      45: istore_2
      46: goto          22
      49: aload_1
      50: areturn

  static java.lang.Character[] createCharacters();
    Code:
       0: getstatic     #10                 // Field CHARACTER_UPPER_BOUND:I
       3: getstatic     #9                  // Field CHARACTER_LOWER_BOUND:I
       6: isub
       7: iconst_1
       8: iadd
       9: istore_0
      10: iload_0
      11: anewarray     #12                 // class java/lang/Character
      14: astore_1
      15: getstatic     #9                  // Field CHARACTER_LOWER_BOUND:I
      18: i2c
      19: istore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: iload_0
      24: if_icmpge     49
      27: aload_1
      28: iload_3
      29: new           #12                 // class java/lang/Character
      32: dup
      33: iload_2
      34: invokespecial #13                 // Method java/lang/Character."<init>":(C)V
      37: aastore
      38: iinc          3, 1
      41: iload_2
      42: iconst_1
      43: iadd
      44: i2c
      45: istore_2
      46: goto          22
      49: aload_1
      50: areturn

  static java.lang.Short[] createShorts();
    Code:
       0: getstatic     #15                 // Field SHORT_UPPER_BOUND:I
       3: getstatic     #14                 // Field SHORT_LOWER_BOUND:I
       6: isub
       7: iconst_1
       8: iadd
       9: istore_0
      10: iload_0
      11: anewarray     #17                 // class java/lang/Short
      14: astore_1
      15: getstatic     #14                 // Field SHORT_LOWER_BOUND:I
      18: i2s
      19: istore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: iload_0
      24: if_icmpge     49
      27: aload_1
      28: iload_3
      29: new           #17                 // class java/lang/Short
      32: dup
      33: iload_2
      34: invokespecial #18                 // Method java/lang/Short."<init>":(S)V
      37: aastore
      38: iinc          3, 1
      41: iload_2
      42: iconst_1
      43: iadd
      44: i2s
      45: istore_2
      46: goto          22
      49: aload_1
      50: areturn

  static java.lang.Integer[] createIntegers();
    Code:
       0: getstatic     #20                 // Field INTEGER_UPPER_BOUND:I
       3: getstatic     #19                 // Field INTEGER_LOWER_BOUND:I
       6: isub
       7: iconst_1
       8: iadd
       9: istore_0
      10: iload_0
      11: anewarray     #22                 // class java/lang/Integer
      14: astore_1
      15: getstatic     #19                 // Field INTEGER_LOWER_BOUND:I
      18: istore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: iload_0
      23: if_icmpge     46
      26: aload_1
      27: iload_3
      28: new           #22                 // class java/lang/Integer
      31: dup
      32: iload_2
      33: invokespecial #23                 // Method java/lang/Integer."<init>":(I)V
      36: aastore
      37: iinc          3, 1
      40: iinc          2, 1
      43: goto          21
      46: aload_1
      47: areturn

  static java.lang.Long[] createLongs();
    Code:
       0: getstatic     #25                 // Field LONG_UPPER_BOUND:I
       3: getstatic     #24                 // Field LONG_LOWER_BOUND:I
       6: isub
       7: iconst_1
       8: iadd
       9: istore_0
      10: iload_0
      11: anewarray     #27                 // class java/lang/Long
      14: astore_1
      15: getstatic     #24                 // Field LONG_LOWER_BOUND:I
      18: i2l
      19: lstore_2
      20: iconst_0
      21: istore        4
      23: iload         4
      25: iload_0
      26: if_icmpge     51
      29: aload_1
      30: iload         4
      32: new           #27                 // class java/lang/Long
      35: dup
      36: lload_2
      37: invokespecial #28                 // Method java/lang/Long."<init>":(J)V
      40: aastore
      41: iinc          4, 1
      44: lload_2
      45: lconst_1
      46: ladd
      47: lstore_2
      48: goto          23
      51: aload_1
      52: areturn

  static {};
    Code:
       0: iconst_0
       1: putstatic     #4                  // Field BYTE_LOWER_BOUND:I
       4: sipush        255
       7: putstatic     #5                  // Field BYTE_UPPER_BOUND:I
      10: iconst_0
      11: putstatic     #9                  // Field CHARACTER_LOWER_BOUND:I
      14: sipush        255
      17: putstatic     #10                 // Field CHARACTER_UPPER_BOUND:I
      20: sipush        -1000
      23: putstatic     #14                 // Field SHORT_LOWER_BOUND:I
      26: sipush        1000
      29: putstatic     #15                 // Field SHORT_UPPER_BOUND:I
      32: sipush        -1000
      35: putstatic     #19                 // Field INTEGER_LOWER_BOUND:I
      38: sipush        1000
      41: putstatic     #20                 // Field INTEGER_UPPER_BOUND:I
      44: sipush        -1000
      47: putstatic     #24                 // Field LONG_LOWER_BOUND:I
      50: sipush        1000
      53: putstatic     #25                 // Field LONG_UPPER_BOUND:I
      56: invokestatic  #42                 // Method createBytes:()[Ljava/lang/Byte;
      59: putstatic     #6                  // Field mBytes:[Ljava/lang/Byte;
      62: invokestatic  #43                 // Method createCharacters:()[Ljava/lang/Character;
      65: putstatic     #11                 // Field mCharacters:[Ljava/lang/Character;
      68: invokestatic  #44                 // Method createShorts:()[Ljava/lang/Short;
      71: putstatic     #16                 // Field mShorts:[Ljava/lang/Short;
      74: invokestatic  #45                 // Method createIntegers:()[Ljava/lang/Integer;
      77: putstatic     #21                 // Field mIntegers:[Ljava/lang/Integer;
      80: invokestatic  #46                 // Method createLongs:()[Ljava/lang/Long;
      83: putstatic     #26                 // Field mLongs:[Ljava/lang/Long;
      86: return
}
