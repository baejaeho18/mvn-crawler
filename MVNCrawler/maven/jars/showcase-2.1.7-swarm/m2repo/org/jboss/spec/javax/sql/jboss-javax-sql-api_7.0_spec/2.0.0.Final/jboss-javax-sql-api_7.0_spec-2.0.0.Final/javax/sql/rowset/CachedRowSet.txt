Compiled from "CachedRowSet.java"
public interface javax.sql.rowset.CachedRowSet extends javax.sql.RowSet,javax.sql.rowset.Joinable {
  public static final boolean COMMIT_ON_ACCEPT_CHANGES;

  public abstract void populate(java.sql.ResultSet) throws java.sql.SQLException;

  public abstract void execute(java.sql.Connection) throws java.sql.SQLException;

  public abstract void acceptChanges() throws javax.sql.rowset.spi.SyncProviderException;

  public abstract void acceptChanges(java.sql.Connection) throws javax.sql.rowset.spi.SyncProviderException;

  public abstract void restoreOriginal() throws java.sql.SQLException;

  public abstract void release() throws java.sql.SQLException;

  public abstract void undoDelete() throws java.sql.SQLException;

  public abstract void undoInsert() throws java.sql.SQLException;

  public abstract void undoUpdate() throws java.sql.SQLException;

  public abstract boolean columnUpdated(int) throws java.sql.SQLException;

  public abstract boolean columnUpdated(java.lang.String) throws java.sql.SQLException;

  public abstract java.util.Collection<?> toCollection() throws java.sql.SQLException;

  public abstract java.util.Collection<?> toCollection(int) throws java.sql.SQLException;

  public abstract java.util.Collection<?> toCollection(java.lang.String) throws java.sql.SQLException;

  public abstract javax.sql.rowset.spi.SyncProvider getSyncProvider() throws java.sql.SQLException;

  public abstract void setSyncProvider(java.lang.String) throws java.sql.SQLException;

  public abstract int size();

  public abstract void setMetaData(javax.sql.RowSetMetaData) throws java.sql.SQLException;

  public abstract java.sql.ResultSet getOriginal() throws java.sql.SQLException;

  public abstract java.sql.ResultSet getOriginalRow() throws java.sql.SQLException;

  public abstract void setOriginalRow() throws java.sql.SQLException;

  public abstract java.lang.String getTableName() throws java.sql.SQLException;

  public abstract void setTableName(java.lang.String) throws java.sql.SQLException;

  public abstract int[] getKeyColumns() throws java.sql.SQLException;

  public abstract void setKeyColumns(int[]) throws java.sql.SQLException;

  public abstract javax.sql.RowSet createShared() throws java.sql.SQLException;

  public abstract javax.sql.rowset.CachedRowSet createCopy() throws java.sql.SQLException;

  public abstract javax.sql.rowset.CachedRowSet createCopySchema() throws java.sql.SQLException;

  public abstract javax.sql.rowset.CachedRowSet createCopyNoConstraints() throws java.sql.SQLException;

  public abstract javax.sql.rowset.RowSetWarning getRowSetWarnings() throws java.sql.SQLException;

  public abstract boolean getShowDeleted() throws java.sql.SQLException;

  public abstract void setShowDeleted(boolean) throws java.sql.SQLException;

  public abstract void commit() throws java.sql.SQLException;

  public abstract void rollback() throws java.sql.SQLException;

  public abstract void rollback(java.sql.Savepoint) throws java.sql.SQLException;

  public abstract void rowSetPopulated(javax.sql.RowSetEvent, int) throws java.sql.SQLException;

  public abstract void populate(java.sql.ResultSet, int) throws java.sql.SQLException;

  public abstract void setPageSize(int) throws java.sql.SQLException;

  public abstract int getPageSize();

  public abstract boolean nextPage() throws java.sql.SQLException;

  public abstract boolean previousPage() throws java.sql.SQLException;
}
