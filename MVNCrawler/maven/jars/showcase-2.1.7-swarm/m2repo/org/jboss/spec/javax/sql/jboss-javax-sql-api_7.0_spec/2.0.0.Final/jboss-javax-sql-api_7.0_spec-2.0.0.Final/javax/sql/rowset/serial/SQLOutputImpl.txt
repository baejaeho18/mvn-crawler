Compiled from "SQLOutputImpl.java"
public class javax.sql.rowset.serial.SQLOutputImpl implements java.sql.SQLOutput {
  private java.util.Vector attribs;

  private java.util.Map map;

  public javax.sql.rowset.serial.SQLOutputImpl(java.util.Vector<?>, java.util.Map<java.lang.String, ?>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     22
      12: new           #2                  // class java/sql/SQLException
      15: dup
      16: ldc           #3                  // String Cannot instantiate a SQLOutputImpl instance with null parameters
      18: invokespecial #4                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #5                  // Field attribs:Ljava/util/Vector;
      27: aload_0
      28: aload_2
      29: putfield      #6                  // Field map:Ljava/util/Map;
      32: return

  public void writeString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeBoolean(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: iload_1
       5: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void writeByte(byte) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: iload_1
       5: invokestatic  #9                  // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       8: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void writeShort(short) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: iload_1
       5: invokestatic  #10                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       8: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void writeInt(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: iload_1
       5: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void writeLong(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: lload_1
       5: invokestatic  #12                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void writeFloat(float) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: fload_1
       5: invokestatic  #13                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       8: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void writeDouble(double) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: dload_1
       5: invokestatic  #14                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       8: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public void writeBigDecimal(java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeBytes(byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeDate(java.sql.Date) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeTime(java.sql.Time) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeTimestamp(java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeCharacterStream(java.io.Reader) throws java.sql.SQLException;
    Code:
       0: new           #15                 // class java/io/BufferedReader
       3: dup
       4: aload_1
       5: invokespecial #16                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
       8: astore_2
       9: aload_2
      10: invokevirtual #17                 // Method java/io/BufferedReader.read:()I
      13: dup
      14: istore_3
      15: iconst_m1
      16: if_icmpeq     71
      19: iload_3
      20: i2c
      21: istore        4
      23: new           #18                 // class java/lang/StringBuffer
      26: dup
      27: invokespecial #19                 // Method java/lang/StringBuffer."<init>":()V
      30: astore        5
      32: aload         5
      34: iload         4
      36: invokevirtual #20                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      39: pop
      40: new           #21                 // class java/lang/String
      43: dup
      44: aload         5
      46: invokespecial #22                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
      49: astore        6
      51: aload_2
      52: invokevirtual #23                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      55: astore        7
      57: aload_0
      58: aload         6
      60: aload         7
      62: invokevirtual #24                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      65: invokevirtual #25                 // Method writeString:(Ljava/lang/String;)V
      68: goto          9
      71: goto          75
      74: astore_3
      75: return
    Exception table:
       from    to  target type
           9    71    74   Class java/io/IOException

  public void writeAsciiStream(java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: new           #15                 // class java/io/BufferedReader
       3: dup
       4: new           #27                 // class java/io/InputStreamReader
       7: dup
       8: aload_1
       9: invokespecial #28                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      12: invokespecial #16                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      15: astore_2
      16: aload_2
      17: invokevirtual #17                 // Method java/io/BufferedReader.read:()I
      20: dup
      21: istore_3
      22: iconst_m1
      23: if_icmpeq     78
      26: iload_3
      27: i2c
      28: istore        4
      30: new           #18                 // class java/lang/StringBuffer
      33: dup
      34: invokespecial #19                 // Method java/lang/StringBuffer."<init>":()V
      37: astore        5
      39: aload         5
      41: iload         4
      43: invokevirtual #20                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      46: pop
      47: new           #21                 // class java/lang/String
      50: dup
      51: aload         5
      53: invokespecial #22                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
      56: astore        6
      58: aload_2
      59: invokevirtual #23                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      62: astore        7
      64: aload_0
      65: aload         6
      67: aload         7
      69: invokevirtual #24                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      72: invokevirtual #25                 // Method writeString:(Ljava/lang/String;)V
      75: goto          16
      78: goto          94
      81: astore_3
      82: new           #2                  // class java/sql/SQLException
      85: dup
      86: aload_3
      87: invokevirtual #29                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      90: invokespecial #4                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: return
    Exception table:
       from    to  target type
          16    78    81   Class java/io/IOException

  public void writeBinaryStream(java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: new           #15                 // class java/io/BufferedReader
       3: dup
       4: new           #27                 // class java/io/InputStreamReader
       7: dup
       8: aload_1
       9: invokespecial #28                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      12: invokespecial #16                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      15: astore_2
      16: aload_2
      17: invokevirtual #17                 // Method java/io/BufferedReader.read:()I
      20: dup
      21: istore_3
      22: iconst_m1
      23: if_icmpeq     78
      26: iload_3
      27: i2c
      28: istore        4
      30: new           #18                 // class java/lang/StringBuffer
      33: dup
      34: invokespecial #19                 // Method java/lang/StringBuffer."<init>":()V
      37: astore        5
      39: aload         5
      41: iload         4
      43: invokevirtual #20                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      46: pop
      47: new           #21                 // class java/lang/String
      50: dup
      51: aload         5
      53: invokespecial #22                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
      56: astore        6
      58: aload_2
      59: invokevirtual #23                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      62: astore        7
      64: aload_0
      65: aload         6
      67: aload         7
      69: invokevirtual #24                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      72: invokevirtual #25                 // Method writeString:(Ljava/lang/String;)V
      75: goto          16
      78: goto          94
      81: astore_3
      82: new           #2                  // class java/sql/SQLException
      85: dup
      86: aload_3
      87: invokevirtual #29                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      90: invokespecial #4                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: return
    Exception table:
       from    to  target type
          16    78    81   Class java/io/IOException

  public void writeObject(java.sql.SQLData) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     16
       4: aload_0
       5: getfield      #5                  // Field attribs:Ljava/util/Vector;
       8: aconst_null
       9: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      12: pop
      13: goto          36
      16: aload_0
      17: getfield      #5                  // Field attribs:Ljava/util/Vector;
      20: new           #30                 // class javax/sql/rowset/serial/SerialStruct
      23: dup
      24: aload_1
      25: aload_0
      26: getfield      #6                  // Field map:Ljava/util/Map;
      29: invokespecial #31                 // Method javax/sql/rowset/serial/SerialStruct."<init>":(Ljava/sql/SQLData;Ljava/util/Map;)V
      32: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      35: pop
      36: return

  public void writeRef(java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     16
       4: aload_0
       5: getfield      #5                  // Field attribs:Ljava/util/Vector;
       8: aconst_null
       9: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      12: pop
      13: goto          32
      16: aload_0
      17: getfield      #5                  // Field attribs:Ljava/util/Vector;
      20: new           #32                 // class javax/sql/rowset/serial/SerialRef
      23: dup
      24: aload_1
      25: invokespecial #33                 // Method javax/sql/rowset/serial/SerialRef."<init>":(Ljava/sql/Ref;)V
      28: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  public void writeBlob(java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     16
       4: aload_0
       5: getfield      #5                  // Field attribs:Ljava/util/Vector;
       8: aconst_null
       9: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      12: pop
      13: goto          32
      16: aload_0
      17: getfield      #5                  // Field attribs:Ljava/util/Vector;
      20: new           #34                 // class javax/sql/rowset/serial/SerialBlob
      23: dup
      24: aload_1
      25: invokespecial #35                 // Method javax/sql/rowset/serial/SerialBlob."<init>":(Ljava/sql/Blob;)V
      28: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  public void writeClob(java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     16
       4: aload_0
       5: getfield      #5                  // Field attribs:Ljava/util/Vector;
       8: aconst_null
       9: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      12: pop
      13: goto          32
      16: aload_0
      17: getfield      #5                  // Field attribs:Ljava/util/Vector;
      20: new           #36                 // class javax/sql/rowset/serial/SerialClob
      23: dup
      24: aload_1
      25: invokespecial #37                 // Method javax/sql/rowset/serial/SerialClob."<init>":(Ljava/sql/Clob;)V
      28: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  public void writeStruct(java.sql.Struct) throws java.sql.SQLException;
    Code:
       0: new           #30                 // class javax/sql/rowset/serial/SerialStruct
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #6                  // Field map:Ljava/util/Map;
       9: invokespecial #38                 // Method javax/sql/rowset/serial/SerialStruct."<init>":(Ljava/sql/Struct;Ljava/util/Map;)V
      12: astore_2
      13: aload_0
      14: getfield      #5                  // Field attribs:Ljava/util/Vector;
      17: aload_2
      18: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public void writeArray(java.sql.Array) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     16
       4: aload_0
       5: getfield      #5                  // Field attribs:Ljava/util/Vector;
       8: aconst_null
       9: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      12: pop
      13: goto          36
      16: aload_0
      17: getfield      #5                  // Field attribs:Ljava/util/Vector;
      20: new           #39                 // class javax/sql/rowset/serial/SerialArray
      23: dup
      24: aload_1
      25: aload_0
      26: getfield      #6                  // Field map:Ljava/util/Map;
      29: invokespecial #40                 // Method javax/sql/rowset/serial/SerialArray."<init>":(Ljava/sql/Array;Ljava/util/Map;)V
      32: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      35: pop
      36: return

  public void writeURL(java.net.URL) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     16
       4: aload_0
       5: getfield      #5                  // Field attribs:Ljava/util/Vector;
       8: aconst_null
       9: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      12: pop
      13: goto          32
      16: aload_0
      17: getfield      #5                  // Field attribs:Ljava/util/Vector;
      20: new           #41                 // class javax/sql/rowset/serial/SerialDatalink
      23: dup
      24: aload_1
      25: invokespecial #42                 // Method javax/sql/rowset/serial/SerialDatalink."<init>":(Ljava/net/URL;)V
      28: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  public void writeNString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeNClob(java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeRowId(java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void writeSQLXML(java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field attribs:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Vector.add:(Ljava/lang/Object;)Z
       8: pop
       9: return
}
