Compiled from "CurrentThreadToServletContext.java"
final class javax.faces.CurrentThreadToServletContext {
  java.util.concurrent.ConcurrentMap<javax.faces.CurrentThreadToServletContext$FactoryManagerCacheKey, javax.faces.FactoryFinderInstance> applicationMap;

  private java.util.concurrent.atomic.AtomicBoolean logNullFacesContext;

  private java.util.concurrent.atomic.AtomicBoolean logNonNullFacesContext;

  private final javax.faces.ServletContextFacesContextFactory servletContextFacesContextFactory;

  private static final java.util.logging.Logger LOGGER;

  javax.faces.CurrentThreadToServletContext();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #8                  // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      31: dup
      32: iconst_0
      33: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      36: putfield      #9                  // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: aload_0
      40: new           #10                 // class javax/faces/ServletContextFacesContextFactory
      43: dup
      44: invokespecial #11                 // Method javax/faces/ServletContextFacesContextFactory."<init>":()V
      47: putfield      #12                 // Field servletContextFacesContextFactory:Ljavax/faces/ServletContextFacesContextFactory;
      50: return

  java.lang.Object getFallbackFactory(javax.faces.FactoryFinderInstance, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: invokespecial #13                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       6: astore        4
       8: aload_0
       9: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          110
      34: aload         5
      36: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #18                 // class java/util/Map$Entry
      44: astore        6
      46: aload         6
      48: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: checkcast     #20                 // class javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey
      56: invokevirtual #21                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey.getClassLoader:()Ljava/lang/ClassLoader;
      59: aload         4
      61: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      64: ifeq          107
      67: aload         6
      69: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #24                 // class javax/faces/FactoryFinderInstance
      77: aload_1
      78: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      81: ifne          107
      84: aload         6
      86: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      91: checkcast     #24                 // class javax/faces/FactoryFinderInstance
      94: aload_2
      95: invokevirtual #25                 // Method javax/faces/FactoryFinderInstance.getFactory:(Ljava/lang/String;)Ljava/lang/Object;
      98: astore_3
      99: aconst_null
     100: aload_3
     101: if_acmpeq     107
     104: goto          110
     107: goto          24
     110: aload_3
     111: areturn

  javax.faces.FactoryFinderInstance getApplicationFactoryManager();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_1
       8: invokespecial #26                 // Method getApplicationFactoryManager:(Ljava/lang/ClassLoader;Z)Ljavax/faces/FactoryFinderInstance;
      11: astore_2
      12: aload_2
      13: areturn

  javax.faces.FactoryFinderInstance getApplicationFactoryManager(boolean);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       4: astore_2
       5: aload_0
       6: aload_2
       7: iload_1
       8: invokespecial #26                 // Method getApplicationFactoryManager:(Ljava/lang/ClassLoader;Z)Ljavax/faces/FactoryFinderInstance;
      11: astore_3
      12: aload_3
      13: areturn

  private javax.faces.FactoryFinderInstance getApplicationFactoryManager(java.lang.ClassLoader, boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field servletContextFacesContextFactory:Ljavax/faces/ServletContextFacesContextFactory;
       4: invokevirtual #27                 // Method javax/faces/ServletContextFacesContextFactory.getFacesContextWithoutServletContextLookup:()Ljavax/faces/context/FacesContext;
       7: astore_3
       8: aload_0
       9: aload_3
      10: invokespecial #28                 // Method detectSpecialInitializationCase:(Ljavax/faces/context/FacesContext;)Z
      13: istore        4
      15: new           #20                 // class javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey
      18: dup
      19: aload_3
      20: aload_1
      21: aload_0
      22: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      25: invokespecial #29                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey."<init>":(Ljavax/faces/context/FacesContext;Ljava/lang/ClassLoader;Ljava/util/Map;)V
      28: astore        5
      30: aload_0
      31: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      34: aload         5
      36: invokeinterface #30,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #24                 // class javax/faces/FactoryFinderInstance
      44: astore        6
      46: aconst_null
      47: astore        7
      49: aload         6
      51: ifnonnull     303
      54: iload_2
      55: ifeq          303
      58: iconst_0
      59: istore        8
      61: iload         4
      63: ifeq          233
      66: iconst_0
      67: istore        10
      69: iconst_1
      70: istore        11
      72: aload_0
      73: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      76: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      81: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      86: astore        12
      88: aload         12
      90: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          207
      98: aload         12
     100: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #18                 // class java/util/Map$Entry
     108: astore        13
     110: aload         13
     112: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     117: checkcast     #20                 // class javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey
     120: astore        9
     122: aload         9
     124: invokevirtual #21                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey.getClassLoader:()Ljava/lang/ClassLoader;
     127: aload_1
     128: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     131: ifeq          204
     134: iconst_0
     135: istore        11
     137: aconst_null
     138: aload         5
     140: invokevirtual #31                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     143: if_acmpeq     189
     146: aconst_null
     147: aload         9
     149: invokevirtual #31                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     152: if_acmpeq     189
     155: aload         5
     157: invokevirtual #31                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     160: aload         9
     162: invokevirtual #31                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     165: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     168: ifne          189
     171: iconst_1
     172: istore        10
     174: aload         13
     176: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     181: checkcast     #24                 // class javax/faces/FactoryFinderInstance
     184: astore        7
     186: goto          207
     189: aload         13
     191: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     196: checkcast     #24                 // class javax/faces/FactoryFinderInstance
     199: astore        6
     201: goto          207
     204: goto          88
     207: iload         11
     209: ifne          223
     212: aconst_null
     213: aload         6
     215: if_acmpne     227
     218: iload         10
     220: ifeq          227
     223: iconst_1
     224: goto          228
     227: iconst_0
     228: istore        8
     230: goto          236
     233: iconst_1
     234: istore        8
     236: iload         8
     238: ifeq          303
     241: aconst_null
     242: aload         7
     244: if_acmpeq     261
     247: new           #24                 // class javax/faces/FactoryFinderInstance
     250: dup
     251: aload         7
     253: invokespecial #32                 // Method javax/faces/FactoryFinderInstance."<init>":(Ljavax/faces/FactoryFinderInstance;)V
     256: astore        9
     258: goto          270
     261: new           #24                 // class javax/faces/FactoryFinderInstance
     264: dup
     265: invokespecial #33                 // Method javax/faces/FactoryFinderInstance."<init>":()V
     268: astore        9
     270: aload_0
     271: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
     274: aload         5
     276: aload         9
     278: invokeinterface #34,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     283: checkcast     #24                 // class javax/faces/FactoryFinderInstance
     286: astore        6
     288: aconst_null
     289: aload         6
     291: if_acmpeq     299
     294: aload         6
     296: goto          301
     299: aload         9
     301: astore        6
     303: aload         6
     305: areturn

  java.lang.Object getServletContextForCurrentClassLoader();
    Code:
       0: new           #20                 // class javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey
       3: dup
       4: aconst_null
       5: aload_0
       6: invokespecial #13                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       9: aload_0
      10: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      13: invokespecial #29                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey."<init>":(Ljavax/faces/context/FacesContext;Ljava/lang/ClassLoader;Ljava/util/Map;)V
      16: astore_2
      17: aload_2
      18: invokevirtual #31                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
      21: astore_1
      22: aload_1
      23: areturn

  private boolean detectSpecialInitializationCase(javax.faces.context.FacesContext);
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: aload_1
       4: if_acmpne     20
       7: aload_0
       8: getfield      #8                  // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_0
      12: iconst_1
      13: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      16: pop
      17: goto          30
      20: aload_0
      21: getfield      #9                  // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: iconst_0
      25: iconst_1
      26: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      29: pop
      30: aload_0
      31: getfield      #8                  // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      34: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      37: ifeq          54
      40: aload_0
      41: getfield      #9                  // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore_2
      56: iload_2
      57: ireturn

  void removeApplicationFactoryManager();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokespecial #26                 // Method getApplicationFactoryManager:(Ljava/lang/ClassLoader;Z)Ljavax/faces/FactoryFinderInstance;
      11: astore_2
      12: aconst_null
      13: aload_2
      14: if_acmpeq     21
      17: aload_2
      18: invokevirtual #37                 // Method javax/faces/FactoryFinderInstance.clearInjectionProvider:()V
      21: aload_0
      22: getfield      #12                 // Field servletContextFacesContextFactory:Ljavax/faces/ServletContextFacesContextFactory;
      25: invokevirtual #27                 // Method javax/faces/ServletContextFacesContextFactory.getFacesContextWithoutServletContextLookup:()Ljavax/faces/context/FacesContext;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokespecial #28                 // Method detectSpecialInitializationCase:(Ljavax/faces/context/FacesContext;)Z
      34: istore        4
      36: new           #20                 // class javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey
      39: dup
      40: aload_3
      41: aload_1
      42: aload_0
      43: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      46: invokespecial #29                 // Method javax/faces/CurrentThreadToServletContext$FactoryManagerCacheKey."<init>":(Ljavax/faces/context/FacesContext;Ljava/lang/ClassLoader;Ljava/util/Map;)V
      49: astore        5
      51: aload_0
      52: getfield      #5                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      55: aload         5
      57: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: iload         4
      65: ifeq          84
      68: aload_0
      69: getfield      #8                  // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      72: iconst_0
      73: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      76: aload_0
      77: getfield      #9                  // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      80: iconst_0
      81: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      84: return

  void resetSpecialInitializationCaseFlags();
    Code:
       0: aload_0
       1: getfield      #8                  // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #9                  // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: iconst_0
      13: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      16: return

  private java.lang.ClassLoader getClassLoader() throws javax.faces.FacesException;
    Code:
       0: invokestatic  #40                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #41                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_1
       7: aload_1
       8: ifnonnull     21
      11: new           #42                 // class javax/faces/FacesException
      14: dup
      15: ldc           #43                 // String getContextClassLoader
      17: invokespecial #44                 // Method javax/faces/FacesException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: areturn

  static java.util.logging.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOGGER:Ljava/util/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #45                 // String javax.faces
       2: ldc           #46                 // String javax.faces.LogStrings
       4: invokestatic  #47                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;
       7: putstatic     #1                  // Field LOGGER:Ljava/util/logging/Logger;
      10: return
}
