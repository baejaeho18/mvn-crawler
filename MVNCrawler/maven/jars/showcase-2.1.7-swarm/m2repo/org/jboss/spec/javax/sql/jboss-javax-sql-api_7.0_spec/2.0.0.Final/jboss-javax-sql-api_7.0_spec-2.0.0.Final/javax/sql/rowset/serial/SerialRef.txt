Compiled from "SerialRef.java"
public class javax.sql.rowset.serial.SerialRef implements java.sql.Ref,java.io.Serializable,java.lang.Cloneable {
  private java.lang.String baseTypeName;

  private java.lang.Object object;

  private java.sql.Ref reference;

  static final long serialVersionUID;

  public javax.sql.rowset.serial.SerialRef(java.sql.Ref) throws javax.sql.rowset.serial.SerialException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/sql/SQLException
      11: dup
      12: ldc           #3                  // String Cannot instantiate a SerialRef object with a null Ref object
      14: invokespecial #4                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field reference:Ljava/sql/Ref;
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field object:Ljava/lang/Object;
      28: aload_1
      29: invokeinterface #7,  1            // InterfaceMethod java/sql/Ref.getBaseTypeName:()Ljava/lang/String;
      34: ifnonnull     47
      37: new           #2                  // class java/sql/SQLException
      40: dup
      41: ldc           #8                  // String Cannot instantiate a SerialRef object that returns a null base type name
      43: invokespecial #4                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: aload_1
      49: invokeinterface #7,  1            // InterfaceMethod java/sql/Ref.getBaseTypeName:()Ljava/lang/String;
      54: putfield      #9                  // Field baseTypeName:Ljava/lang/String;
      57: return

  public java.lang.String getBaseTypeName() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field baseTypeName:Ljava/lang/String;
       4: areturn

  public java.lang.Object getObject(java.util.Map<java.lang.String, java.lang.Class<?>>) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: new           #10                 // class java/util/Hashtable
       3: dup
       4: aload_1
       5: invokespecial #11                 // Method java/util/Hashtable."<init>":(Ljava/util/Map;)V
       8: astore_1
       9: aload_0
      10: getfield      #6                  // Field object:Ljava/lang/Object;
      13: ifnull        27
      16: aload_1
      17: aload_0
      18: getfield      #6                  // Field object:Ljava/lang/Object;
      21: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn
      27: new           #13                 // class javax/sql/rowset/serial/SerialException
      30: dup
      31: ldc           #14                 // String The object is not set
      33: invokespecial #15                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      36: athrow

  public java.lang.Object getObject() throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reference:Ljava/sql/Ref;
       4: ifnull        48
       7: aload_0
       8: getfield      #5                  // Field reference:Ljava/sql/Ref;
      11: invokeinterface #16,  1           // InterfaceMethod java/sql/Ref.getObject:()Ljava/lang/Object;
      16: areturn
      17: astore_1
      18: new           #13                 // class javax/sql/rowset/serial/SerialException
      21: dup
      22: new           #17                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #19                 // String SQLException:
      31: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #21                 // Method java/sql/SQLException.getMessage:()Ljava/lang/String;
      38: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #15                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #6                  // Field object:Ljava/lang/Object;
      52: ifnull        60
      55: aload_0
      56: getfield      #6                  // Field object:Ljava/lang/Object;
      59: areturn
      60: new           #13                 // class javax/sql/rowset/serial/SerialException
      63: dup
      64: ldc           #14                 // String The object is not set
      66: invokespecial #15                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      69: athrow
    Exception table:
       from    to  target type
           7    16    17   Class java/sql/SQLException

  public void setObject(java.lang.Object) throws javax.sql.rowset.serial.SerialException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reference:Ljava/sql/Ref;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/sql/Ref.setObject:(Ljava/lang/Object;)V
      10: goto          44
      13: astore_2
      14: new           #13                 // class javax/sql/rowset/serial/SerialException
      17: dup
      18: new           #17                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #19                 // String SQLException:
      27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #21                 // Method java/sql/SQLException.getMessage:()Ljava/lang/String;
      34: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #15                 // Method javax/sql/rowset/serial/SerialException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: aload_1
      46: putfield      #6                  // Field object:Ljava/lang/Object;
      49: return
    Exception table:
       from    to  target type
           0    10    13   Class java/sql/SQLException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #24                 // class javax/sql/rowset/serial/SerialRef
      11: ifeq          53
      14: aload_1
      15: checkcast     #24                 // class javax/sql/rowset/serial/SerialRef
      18: astore_2
      19: aload_0
      20: getfield      #9                  // Field baseTypeName:Ljava/lang/String;
      23: aload_2
      24: getfield      #9                  // Field baseTypeName:Ljava/lang/String;
      27: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          51
      33: aload_0
      34: getfield      #6                  // Field object:Ljava/lang/Object;
      37: aload_2
      38: getfield      #6                  // Field object:Ljava/lang/Object;
      41: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn
      53: iconst_0
      54: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: aload_0
       3: getfield      #6                  // Field object:Ljava/lang/Object;
       6: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
       9: iadd
      10: bipush        31
      12: imul
      13: aload_0
      14: getfield      #9                  // Field baseTypeName:Ljava/lang/String;
      17: invokevirtual #28                 // Method java/lang/String.hashCode:()I
      20: iadd
      21: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #24                 // class javax/sql/rowset/serial/SerialRef
       7: astore_1
       8: aload_1
       9: aconst_null
      10: putfield      #5                  // Field reference:Ljava/sql/Ref;
      13: aload_1
      14: areturn
      15: astore_1
      16: new           #31                 // class java/lang/InternalError
      19: dup
      20: invokespecial #32                 // Method java/lang/InternalError."<init>":()V
      23: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/CloneNotSupportedException

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method java/io/ObjectInputStream.readFields:()Ljava/io/ObjectInputStream$GetField;
       4: astore_2
       5: aload_0
       6: aload_2
       7: ldc           #34                 // String object
       9: aconst_null
      10: invokevirtual #35                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: putfield      #6                  // Field object:Ljava/lang/Object;
      16: aload_0
      17: aload_2
      18: ldc           #36                 // String baseTypeName
      20: aconst_null
      21: invokevirtual #35                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #37                 // class java/lang/String
      27: putfield      #9                  // Field baseTypeName:Ljava/lang/String;
      30: aload_0
      31: aload_2
      32: ldc           #38                 // String reference
      34: aconst_null
      35: invokevirtual #35                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #39                 // class java/sql/Ref
      41: putfield      #5                  // Field reference:Ljava/sql/Ref;
      44: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/io/ObjectOutputStream.putFields:()Ljava/io/ObjectOutputStream$PutField;
       4: astore_2
       5: aload_2
       6: ldc           #36                 // String baseTypeName
       8: aload_0
       9: getfield      #9                  // Field baseTypeName:Ljava/lang/String;
      12: invokevirtual #41                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_2
      16: ldc           #34                 // String object
      18: aload_0
      19: getfield      #6                  // Field object:Ljava/lang/Object;
      22: invokevirtual #41                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_2
      26: ldc           #38                 // String reference
      28: aload_0
      29: getfield      #5                  // Field reference:Ljava/sql/Ref;
      32: instanceof    #42                 // class java/io/Serializable
      35: ifeq          45
      38: aload_0
      39: getfield      #5                  // Field reference:Ljava/sql/Ref;
      42: goto          46
      45: aconst_null
      46: invokevirtual #41                 // Method java/io/ObjectOutputStream$PutField.put:(Ljava/lang/String;Ljava/lang/Object;)V
      49: aload_1
      50: invokevirtual #43                 // Method java/io/ObjectOutputStream.writeFields:()V
      53: return
}
