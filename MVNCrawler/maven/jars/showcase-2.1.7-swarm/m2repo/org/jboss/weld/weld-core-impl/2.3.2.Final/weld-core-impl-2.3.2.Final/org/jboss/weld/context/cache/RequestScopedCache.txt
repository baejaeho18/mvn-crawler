Compiled from "RequestScopedCache.java"
public class org.jboss.weld.context.cache.RequestScopedCache {
  private static final java.lang.ThreadLocal<java.util.List<org.jboss.weld.context.cache.RequestScopedItem>> CACHE;

  private org.jboss.weld.context.cache.RequestScopedCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isActive();
    Code:
       0: getstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static void checkCacheForAdding(java.util.List<org.jboss.weld.context.cache.RequestScopedItem>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #4                  // class java/lang/IllegalStateException
       7: dup
       8: ldc           #5                  // String Unable to add request scoped cache item when request cache is not active
      10: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  public static void addItem(org.jboss.weld.context.cache.RequestScopedItem);
    Code:
       0: getstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #7                  // class java/util/List
       9: astore_1
      10: aload_1
      11: invokestatic  #8                  // Method checkCacheForAdding:(Ljava/util/List;)V
      14: aload_1
      15: aload_0
      16: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public static boolean addItemIfActive(org.jboss.weld.context.cache.RequestScopedItem);
    Code:
       0: getstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #7                  // class java/util/List
       9: astore_1
      10: aload_1
      11: ifnull        24
      14: aload_1
      15: aload_0
      16: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: iconst_1
      23: ireturn
      24: iconst_0
      25: ireturn

  public static boolean addItemIfActive(java.lang.ThreadLocal<?>);
    Code:
       0: getstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #7                  // class java/util/List
       9: astore_1
      10: aload_1
      11: ifnull        31
      14: aload_1
      15: new           #10                 // class org/jboss/weld/context/cache/RequestScopedCache$1
      18: dup
      19: aload_0
      20: invokespecial #11                 // Method org/jboss/weld/context/cache/RequestScopedCache$1."<init>":(Ljava/lang/ThreadLocal;)V
      23: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public static void beginRequest();
    Code:
       0: invokestatic  #12                 // Method endRequest:()V
       3: getstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
       6: new           #13                 // class java/util/LinkedList
       9: dup
      10: invokespecial #14                 // Method java/util/LinkedList."<init>":()V
      13: invokevirtual #15                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      16: return

  public static void endRequest();
    Code:
       0: getstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #7                  // class java/util/List
       9: astore_0
      10: aload_0
      11: ifnull        55
      14: getstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
      17: invokevirtual #16                 // Method java/lang/ThreadLocal.remove:()V
      20: aload_0
      21: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_1
      27: aload_1
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          55
      36: aload_1
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #20                 // class org/jboss/weld/context/cache/RequestScopedItem
      45: astore_2
      46: aload_2
      47: invokeinterface #21,  1           // InterfaceMethod org/jboss/weld/context/cache/RequestScopedItem.invalidate:()V
      52: goto          27
      55: return

  public static void invalidate();
    Code:
       0: invokestatic  #22                 // Method isActive:()Z
       3: ifeq          12
       6: invokestatic  #12                 // Method endRequest:()V
       9: invokestatic  #23                 // Method beginRequest:()V
      12: return

  static {};
    Code:
       0: new           #24                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #25                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #2                  // Field CACHE:Ljava/lang/ThreadLocal;
      10: return
}
