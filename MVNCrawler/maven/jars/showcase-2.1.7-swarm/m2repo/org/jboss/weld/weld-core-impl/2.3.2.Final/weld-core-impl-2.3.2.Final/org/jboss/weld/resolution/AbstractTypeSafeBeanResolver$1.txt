Compiled from "AbstractTypeSafeBeanResolver.java"
class org.jboss.weld.resolution.AbstractTypeSafeBeanResolver$1 extends org.jboss.weld.util.LazyValueHolder<java.util.Map<java.lang.reflect.Type, java.util.ArrayList<T>>> {
  final java.lang.Iterable val$beans;

  final org.jboss.weld.resolution.AbstractTypeSafeBeanResolver this$0;

  org.jboss.weld.resolution.AbstractTypeSafeBeanResolver$1(org.jboss.weld.resolution.AbstractTypeSafeBeanResolver, java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jboss/weld/resolution/AbstractTypeSafeBeanResolver;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$beans:Ljava/lang/Iterable;
      10: aload_0
      11: invokespecial #3                  // Method org/jboss/weld/util/LazyValueHolder."<init>":()V
      14: return

  protected java.util.Map<java.lang.reflect.Type, java.util.ArrayList<T>> computeValue();
    Code:
       0: new           #4                  // class java/util/HashMap
       3: dup
       4: invokespecial #5                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field val$beans:Ljava/lang/Iterable;
      12: invokeinterface #6,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          46
      27: aload_2
      28: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #9                  // class javax/enterprise/inject/spi/Bean
      36: astore_3
      37: aload_0
      38: aload_1
      39: aload_3
      40: invokespecial #10                 // Method mapBean:(Ljava/util/Map;Ljavax/enterprise/inject/spi/Bean;)V
      43: goto          18
      46: aload_0
      47: aload_1
      48: invokespecial #11                 // Method trimArrayListsToSize:(Ljava/util/Map;)V
      51: aload_1
      52: invokestatic  #12                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      55: areturn

  private void mapBean(java.util.Map<java.lang.reflect.Type, java.util.ArrayList<T>>, T);
    Code:
       0: aload_2
       1: invokeinterface #13,  1           // InterfaceMethod javax/enterprise/inject/spi/Bean.getTypes:()Ljava/util/Set;
       6: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          112
      21: aload_3
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #15                 // class java/lang/reflect/Type
      30: astore        4
      32: aload_0
      33: aload_1
      34: aload         4
      36: aload_2
      37: invokespecial #16                 // Method mapTypeToBean:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljavax/enterprise/inject/spi/Bean;)V
      40: aload         4
      42: instanceof    #17                 // class java/lang/reflect/ParameterizedType
      45: ifeq          71
      48: aload         4
      50: checkcast     #17                 // class java/lang/reflect/ParameterizedType
      53: invokeinterface #18,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      58: astore        5
      60: aload_0
      61: aload_1
      62: aload         5
      64: aload_2
      65: invokespecial #16                 // Method mapTypeToBean:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljavax/enterprise/inject/spi/Bean;)V
      68: goto          109
      71: aload         4
      73: instanceof    #19                 // class java/lang/Class
      76: ifeq          109
      79: aload         4
      81: checkcast     #19                 // class java/lang/Class
      84: astore        5
      86: aload         5
      88: invokevirtual #20                 // Method java/lang/Class.isPrimitive:()Z
      91: ifeq          109
      94: aload         5
      96: invokestatic  #21                 // Method com/google/common/primitives/Primitives.wrap:(Ljava/lang/Class;)Ljava/lang/Class;
      99: astore        6
     101: aload_0
     102: aload_1
     103: aload         6
     105: aload_2
     106: invokespecial #16                 // Method mapTypeToBean:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljavax/enterprise/inject/spi/Bean;)V
     109: goto          12
     112: return

  private void mapTypeToBean(java.util.Map<java.lang.reflect.Type, java.util.ArrayList<T>>, java.lang.reflect.Type, T);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       7: ifne          25
      10: aload_1
      11: aload_2
      12: new           #23                 // class java/util/ArrayList
      15: dup
      16: invokespecial #24                 // Method java/util/ArrayList."<init>":()V
      19: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_1
      26: aload_2
      27: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #23                 // class java/util/ArrayList
      35: aload_3
      36: invokevirtual #27                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      39: pop
      40: return

  private void trimArrayListsToSize(java.util.Map<java.lang.reflect.Type, java.util.ArrayList<T>>);
    Code:
       0: aload_1
       1: invokeinterface #28,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          46
      21: aload_2
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #29                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: checkcast     #23                 // class java/util/ArrayList
      40: invokevirtual #31                 // Method java/util/ArrayList.trimToSize:()V
      43: goto          12
      46: return

  protected java.lang.Object computeValue();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method computeValue:()Ljava/util/Map;
       4: areturn
}
