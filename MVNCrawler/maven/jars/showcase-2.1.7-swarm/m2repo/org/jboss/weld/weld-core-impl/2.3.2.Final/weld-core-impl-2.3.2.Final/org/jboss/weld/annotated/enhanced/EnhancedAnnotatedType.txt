Compiled from "EnhancedAnnotatedType.java"
public interface org.jboss.weld.annotated.enhanced.EnhancedAnnotatedType<T> extends org.jboss.weld.annotated.enhanced.EnhancedAnnotated<T, java.lang.Class<T>>, javax.enterprise.inject.spi.AnnotatedType<T> {
  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedField<?, ? super T>> getEnhancedFields();

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ? super T>> getEnhancedMethods();

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ? super T>> getDeclaredEnhancedMethods();

  public abstract <F> org.jboss.weld.annotated.enhanced.EnhancedAnnotatedField<F, ?> getDeclaredEnhancedField(java.lang.String);

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedField<?, ?>> getEnhancedFields(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedField<?, ? super T>> getDeclaredEnhancedFields();

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedField<?, ? super T>> getDeclaredEnhancedFields(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedConstructor<T>> getEnhancedConstructors();

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedConstructor<T>> getEnhancedConstructors(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract org.jboss.weld.annotated.enhanced.EnhancedAnnotatedConstructor<T> getNoArgsEnhancedConstructor();

  public abstract org.jboss.weld.annotated.enhanced.EnhancedAnnotatedConstructor<T> getDeclaredEnhancedConstructor(org.jboss.weld.annotated.enhanced.ConstructorSignature);

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ? super T>> getEnhancedMethods(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ? super T>> getDeclaredEnhancedMethods(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ?> getEnhancedMethod(java.lang.reflect.Method);

  public abstract <M> org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<M, ?> getDeclaredEnhancedMethod(org.jboss.weld.annotated.enhanced.MethodSignature);

  public abstract <M> org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<M, ?> getEnhancedMethod(org.jboss.weld.annotated.enhanced.MethodSignature);

  public abstract org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ?> getDeclaredEnhancedMethod(java.lang.reflect.Method);

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ? super T>> getDeclaredEnhancedMethodsWithAnnotatedParameters(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract java.util.Collection<org.jboss.weld.annotated.enhanced.EnhancedAnnotatedMethod<?, ? super T>> getEnhancedMethodsWithAnnotatedParameters(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract org.jboss.weld.annotated.enhanced.EnhancedAnnotatedType<? super T> getEnhancedSuperclass();

  public abstract boolean isParameterizedType();

  public abstract boolean isAbstract();

  public abstract boolean isEnum();

  public abstract boolean isMemberClass();

  public abstract boolean isLocalClass();

  public abstract boolean isAnonymousClass();

  public abstract boolean isSerializable();

  public abstract boolean isDiscovered();

  public abstract <S> S cast(java.lang.Object);

  public abstract <U> org.jboss.weld.annotated.enhanced.EnhancedAnnotatedType<? extends U> asEnhancedSubclass(org.jboss.weld.annotated.enhanced.EnhancedAnnotatedType<U>);

  public abstract boolean isEquivalent(java.lang.Class<?>);

  public abstract java.lang.String getSimpleName();

  public abstract java.util.Collection<java.lang.annotation.Annotation> getDeclaredMetaAnnotations(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract org.jboss.weld.annotated.slim.SlimAnnotatedType<T> slim();
}
