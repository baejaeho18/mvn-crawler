Compiled from "BootstrapLogger_$logger.java"
public class org.jboss.weld.logging.BootstrapLogger_$logger extends org.jboss.logging.DelegatingBasicLogger implements java.io.Serializable,org.jboss.logging.BasicLogger,org.jboss.weld.logging.BootstrapLogger,org.jboss.weld.logging.WeldLogger {
  private static final long serialVersionUID;

  private static final java.lang.String FQCN;

  private static final java.lang.String enabledInterceptors;

  private static final java.lang.String beanIsBothInterceptorAndDecorator;

  private static final java.lang.String foundBean;

  private static final java.lang.String callingBootstrapMethodAfterContainerHasBeenInitialized;

  private static final java.lang.String exceptionWhileLoadingClass;

  private static final java.lang.String annotatedTypeJavaClassMismatch;

  private static final java.lang.String decoratorWithNonCdiConstructor;

  private static final java.lang.String threadsInUse;

  private static final java.lang.String containerLifecycleEventMethodInvokedOutsideObserver;

  private static final java.lang.String legacyDeploymentMetadataProvided;

  private static final java.lang.String exceptionThrownDuringBeforeShutdownObserver;

  private static final java.lang.String jtaUnavailable;

  private static final java.lang.String invalidThreadPoolType;

  private static final java.lang.String managerNotInitialized;

  private static final java.lang.String beanTypeNotEjb;

  private static final java.lang.String errorLoadingBeansXmlEntry;

  private static final java.lang.String deploymentRequired;

  private static final java.lang.String patFastResolver;

  private static final java.lang.String enabledDecorators;

  private static final java.lang.String annotationTypeNull;

  private static final java.lang.String beanIdentifierIndexBuilt;

  private static final java.lang.String foundInterceptor;

  private static final java.lang.String errorWhileLoadingClass;

  private static final java.lang.String cdiApiVersionMismatch;

  private static final java.lang.String invalidThreadPoolSize;

  private static final java.lang.String timeoutShuttingDownThreadPool;

  private static final java.lang.String patSkipped;

  private static final java.lang.String deploymentArchiveNull;

  private static final java.lang.String foundDisabledAlternative;

  private static final java.lang.String catchingDebug;

  private static final java.lang.String foundProducerOfSpecializedBean;

  private static final java.lang.String unspecifiedRequiredService;

  private static final java.lang.String foundObserverMethod;

  private static final java.lang.String validatingBeans;

  private static final java.lang.String invalidPropertyValue;

  private static final java.lang.String foundDecorator;

  private static final java.lang.String exceptionLoadingAnnotatedType;

  private static final java.lang.String foundSpecializedBean;

  private static final java.lang.String notUsingFastResolver;

  private static final java.lang.String enabledAlternatives;

  private static final java.lang.String passivatingNonNormalScopeIllegal;

  private static final java.lang.String ignoringExtensionClassDueToLoadingError;

  private static final java.lang.String patDefaultResolver;

  private static final java.lang.String ignoringClassDueToLoadingError;

  public org.jboss.weld.logging.BootstrapLogger_$logger(org.jboss.logging.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/DelegatingBasicLogger."<init>":(Lorg/jboss/logging/Logger;)V
       5: return

  public final void enabledInterceptors(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #5                  // Method enabledInterceptors$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String enabledInterceptors$str();
    Code:
       0: ldc           #8                  // String WELD-000105: Enabled interceptor types for {0}: {1}
       2: areturn

  public final org.jboss.weld.exceptions.DefinitionException beanIsBothInterceptorAndDecorator(java.lang.Object);
    Code:
       0: new           #9                  // class org/jboss/weld/exceptions/DefinitionException
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method beanIsBothInterceptorAndDecorator$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #13                 // Method org/jboss/weld/exceptions/DefinitionException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #14                 // Method org/jboss/weld/exceptions/DefinitionException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #17                 // Method org/jboss/weld/exceptions/DefinitionException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String beanIsBothInterceptorAndDecorator$str();
    Code:
       0: ldc           #18                 // String WELD-000112: Class {0} has both @Interceptor and @Decorator annotations
       2: areturn

  public final void foundBean(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #19                 // Method foundBean$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String foundBean$str();
    Code:
       0: ldc           #21                 // String WELD-000106: Bean: {0}
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException callingBootstrapMethodAfterContainerHasBeenInitialized();
    Code:
       0: new           #22                 // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #23                 // Method callingBootstrapMethodAfterContainerHasBeenInitialized$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #11                 // class java/lang/Object
      12: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #25                 // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #26                 // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #27                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String callingBootstrapMethodAfterContainerHasBeenInitialized$str();
    Code:
       0: ldc           #28                 // String WELD-000140: Calling Bootstrap method after container has already been initialized. For correct order, see CDI11Bootstrap\'s documentation.
       2: areturn

  public final void exceptionWhileLoadingClass(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #29                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #30                 // Method exceptionWhileLoadingClass$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String exceptionWhileLoadingClass$str();
    Code:
       0: ldc           #31                 // String WELD-000137: Exception while loading class \'{0}\' : {1}
       2: areturn

  public final org.jboss.weld.exceptions.IllegalArgumentException annotatedTypeJavaClassMismatch(java.lang.Object, java.lang.Object);
    Code:
       0: new           #32                 // class org/jboss/weld/exceptions/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #33                 // Method annotatedTypeJavaClassMismatch$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #34                 // Method org/jboss/weld/exceptions/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #35                 // Method org/jboss/weld/exceptions/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #36                 // Method org/jboss/weld/exceptions/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String annotatedTypeJavaClassMismatch$str();
    Code:
       0: ldc           #37                 // String WELD-000130: Cannot replace AnnotatedType for {0} with AnnotatedType for {1}
       2: areturn

  public final void decoratorWithNonCdiConstructor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #38                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #39                 // Method decoratorWithNonCdiConstructor$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String decoratorWithNonCdiConstructor$str();
    Code:
       0: ldc           #40                 // String WELD-000146: Decorator {0} declares inappropriate constructor therefore will not available as a managed bean!
       2: areturn

  public final void threadsInUse(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #41                 // Method threadsInUse$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String threadsInUse$str();
    Code:
       0: ldc           #42                 // String WELD-000124: Using {0} threads for bootstrap
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException containerLifecycleEventMethodInvokedOutsideObserver();
    Code:
       0: new           #22                 // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #43                 // Method containerLifecycleEventMethodInvokedOutsideObserver$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #11                 // class java/lang/Object
      12: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #25                 // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #26                 // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #27                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String containerLifecycleEventMethodInvokedOutsideObserver$str();
    Code:
       0: ldc           #44                 // String WELD-000143: Container lifecycle event method invoked outside of extension observer method invocation.
       2: areturn

  public final void legacyDeploymentMetadataProvided();
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #38                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #45                 // Method legacyDeploymentMetadataProvided$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #11                 // class java/lang/Object
      19: invokevirtual #46                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String legacyDeploymentMetadataProvided$str();
    Code:
       0: ldc           #47                 // String WELD-000135: Legacy deployment metadata provided by the integrator. Certain functionality will not be available.
       2: areturn

  public final void exceptionThrownDuringBeforeShutdownObserver();
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #48                 // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #49                 // Method exceptionThrownDuringBeforeShutdownObserver$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #11                 // class java/lang/Object
      19: invokevirtual #46                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String exceptionThrownDuringBeforeShutdownObserver$str();
    Code:
       0: ldc           #50                 // String WELD-000136: Exception(s) thrown during observer of BeforeShutdown:
       2: areturn

  public final void jtaUnavailable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #51                 // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #52                 // Method jtaUnavailable$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #11                 // class java/lang/Object
      19: invokevirtual #46                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String jtaUnavailable$str();
    Code:
       0: ldc           #53                 // String WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
       2: areturn

  public final org.jboss.weld.exceptions.DeploymentException invalidThreadPoolType(java.lang.Object);
    Code:
       0: new           #54                 // class org/jboss/weld/exceptions/DeploymentException
       3: dup
       4: aload_0
       5: invokevirtual #55                 // Method invalidThreadPoolType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #56                 // Method org/jboss/weld/exceptions/DeploymentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #57                 // Method org/jboss/weld/exceptions/DeploymentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #58                 // Method org/jboss/weld/exceptions/DeploymentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidThreadPoolType$str();
    Code:
       0: ldc           #59                 // String WELD-000127: Invalid thread pool type: {0}
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException managerNotInitialized();
    Code:
       0: new           #22                 // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #60                 // Method managerNotInitialized$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #11                 // class java/lang/Object
      12: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #25                 // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #26                 // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #27                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String managerNotInitialized$str();
    Code:
       0: ldc           #61                 // String WELD-000116: Manager has not been initialized
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException beanTypeNotEjb(java.lang.Object);
    Code:
       0: new           #22                 // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #62                 // Method beanTypeNotEjb$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #25                 // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #26                 // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #27                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String beanTypeNotEjb$str();
    Code:
       0: ldc           #63                 // String WELD-000111: Bean type is not STATELESS, STATEFUL or SINGLETON:  {0}
       2: areturn

  public final org.jboss.weld.exceptions.DeploymentException errorLoadingBeansXmlEntry(java.lang.Object, java.lang.Object, java.lang.Throwable);
    Code:
       0: new           #54                 // class org/jboss/weld/exceptions/DeploymentException
       3: dup
       4: aload_0
       5: invokevirtual #64                 // Method errorLoadingBeansXmlEntry$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: aload_3
      24: invokespecial #65                 // Method org/jboss/weld/exceptions/DeploymentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: astore        4
      29: aload         4
      31: invokevirtual #57                 // Method org/jboss/weld/exceptions/DeploymentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      34: astore        5
      36: aload         4
      38: aload         5
      40: iconst_1
      41: aload         5
      43: arraylength
      44: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      47: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      50: invokevirtual #58                 // Method org/jboss/weld/exceptions/DeploymentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      53: aload         4
      55: areturn

  protected java.lang.String errorLoadingBeansXmlEntry$str();
    Code:
       0: ldc           #66                 // String WELD-000123: Error loading {0} defined in {1}
       2: areturn

  public final org.jboss.weld.exceptions.IllegalArgumentException deploymentRequired();
    Code:
       0: new           #32                 // class org/jboss/weld/exceptions/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #67                 // Method deploymentRequired$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #11                 // class java/lang/Object
      12: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #34                 // Method org/jboss/weld/exceptions/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #35                 // Method org/jboss/weld/exceptions/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #36                 // Method org/jboss/weld/exceptions/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String deploymentRequired$str();
    Code:
       0: ldc           #68                 // String WELD-000114: Must start the container with a deployment
       2: areturn

  public final void patFastResolver(org.jboss.weld.annotated.slim.SlimAnnotatedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #29                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #69                 // Method patFastResolver$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String patFastResolver$str();
    Code:
       0: ldc           #70                 // String Sending PAT using the fast event resolver: {0}
       2: areturn

  public final void enabledDecorators(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #71                 // Method enabledDecorators$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String enabledDecorators$str();
    Code:
       0: ldc           #72                 // String WELD-000104: Enabled decorator types for {0}: {1}
       2: areturn

  public final org.jboss.weld.exceptions.IllegalArgumentException annotationTypeNull(java.lang.Object);
    Code:
       0: new           #32                 // class org/jboss/weld/exceptions/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #73                 // Method annotationTypeNull$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #34                 // Method org/jboss/weld/exceptions/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #35                 // Method org/jboss/weld/exceptions/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #36                 // Method org/jboss/weld/exceptions/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String annotationTypeNull$str();
    Code:
       0: ldc           #74                 // String WELD-000110: Cannot set the annotation type to null (if you want to stop the type being used, call veto()):  {0}
       2: areturn

  public final void beanIdentifierIndexBuilt(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #75                 // Method beanIdentifierIndexBuilt$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String beanIdentifierIndexBuilt$str();
    Code:
       0: ldc           #76                 // String WELD-000145: Bean identifier index built:\n  {0}
       2: areturn

  public final void foundInterceptor(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #77                 // Method foundInterceptor$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String foundInterceptor$str();
    Code:
       0: ldc           #78                 // String WELD-000107: Interceptor: {0}
       2: areturn

  public final void errorWhileLoadingClass(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #29                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #79                 // Method errorWhileLoadingClass$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String errorWhileLoadingClass$str();
    Code:
       0: ldc           #80                 // String WELD-000138: Error while loading class \'{0}\' : {1}
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException cdiApiVersionMismatch();
    Code:
       0: new           #22                 // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #81                 // Method cdiApiVersionMismatch$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #11                 // class java/lang/Object
      12: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #25                 // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #26                 // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #27                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String cdiApiVersionMismatch$str();
    Code:
       0: ldc           #82                 // String WELD-000144: CDI API version mismatch. CDI 1.0 API detected on classpath. Weld requires version 1.1 or better.
       2: areturn

  public final org.jboss.weld.exceptions.DeploymentException invalidThreadPoolSize(java.lang.Object);
    Code:
       0: new           #54                 // class org/jboss/weld/exceptions/DeploymentException
       3: dup
       4: aload_0
       5: invokevirtual #83                 // Method invalidThreadPoolSize$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #56                 // Method org/jboss/weld/exceptions/DeploymentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #57                 // Method org/jboss/weld/exceptions/DeploymentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #58                 // Method org/jboss/weld/exceptions/DeploymentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidThreadPoolSize$str();
    Code:
       0: ldc           #84                 // String WELD-000125: Invalid thread pool size: {0}
       2: areturn

  public final void timeoutShuttingDownThreadPool(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #38                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #85                 // Method timeoutShuttingDownThreadPool$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String timeoutShuttingDownThreadPool$str();
    Code:
       0: ldc           #86                 // String WELD-000126: Timeout shutting down thread pool {0} at {1}
       2: areturn

  public final void patSkipped(org.jboss.weld.annotated.slim.SlimAnnotatedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #29                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #87                 // Method patSkipped$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String patSkipped$str();
    Code:
       0: ldc           #88                 // String No PAT observers resolved for {0}. Skipping.
       2: areturn

  public final org.jboss.weld.exceptions.IllegalArgumentException deploymentArchiveNull(java.lang.Object);
    Code:
       0: new           #32                 // class org/jboss/weld/exceptions/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #89                 // Method deploymentArchiveNull$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #34                 // Method org/jboss/weld/exceptions/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #35                 // Method org/jboss/weld/exceptions/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #36                 // Method org/jboss/weld/exceptions/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String deploymentArchiveNull$str();
    Code:
       0: ldc           #90                 // String WELD-000113: BeanDeploymentArchive must not be null:  {0}
       2: areturn

  public final void foundDisabledAlternative(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #91                 // Method foundDisabledAlternative$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String foundDisabledAlternative$str();
    Code:
       0: ldc           #92                 // String WELD-000132: Disabled alternative (ignored): {0}
       2: areturn

  public final void catchingDebug(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #93                 // Method catchingDebug$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #11                 // class java/lang/Object
      19: invokevirtual #46                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String catchingDebug$str();
    Code:
       0: ldc           #94                 // String Catching
       2: areturn

  public final void foundProducerOfSpecializedBean(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #95                 // Method foundProducerOfSpecializedBean$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String foundProducerOfSpecializedBean$str();
    Code:
       0: ldc           #96                 // String WELD-000134: Producer (method or field) of specialized bean (ignored): {0}
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException unspecifiedRequiredService(java.lang.Object);
    Code:
       0: new           #22                 // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #97                 // Method unspecifiedRequiredService$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #25                 // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #26                 // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #27                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String unspecifiedRequiredService$str();
    Code:
       0: ldc           #98                 // String WELD-000117: Required service {0} has not been specified
       2: areturn

  public final void foundObserverMethod(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #99                 // Method foundObserverMethod$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String foundObserverMethod$str();
    Code:
       0: ldc           #100                // String WELD-000109: ObserverMethod: {0}
       2: areturn

  public final void validatingBeans();
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #101                // Method validatingBeans$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #11                 // class java/lang/Object
      19: invokevirtual #46                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String validatingBeans$str();
    Code:
       0: ldc           #102                // String WELD-000100: Weld initialized. Validating beans
       2: areturn

  public final org.jboss.weld.exceptions.DeploymentException invalidPropertyValue(java.lang.Object, java.lang.Object);
    Code:
       0: new           #54                 // class org/jboss/weld/exceptions/DeploymentException
       3: dup
       4: aload_0
       5: invokevirtual #103                // Method invalidPropertyValue$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #56                 // Method org/jboss/weld/exceptions/DeploymentException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #57                 // Method org/jboss/weld/exceptions/DeploymentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #58                 // Method org/jboss/weld/exceptions/DeploymentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String invalidPropertyValue$str();
    Code:
       0: ldc           #104                // String WELD-000128: Invalid value for property {0}: {1}
       2: areturn

  public final void foundDecorator(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #105                // Method foundDecorator$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String foundDecorator$str();
    Code:
       0: ldc           #106                // String WELD-000108: Decorator: {0}
       2: areturn

  public final void exceptionLoadingAnnotatedType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #107                // Method exceptionLoadingAnnotatedType$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String exceptionLoadingAnnotatedType$str();
    Code:
       0: ldc           #108                // String WELD-000142: Exception loading annotated type using ClassFileServices. Falling back to the default implementation. {0}
       2: areturn

  public final void foundSpecializedBean(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #109                // Method foundSpecializedBean$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String foundSpecializedBean$str();
    Code:
       0: ldc           #110                // String WELD-000133: Specialized bean (ignored): {0}
       2: areturn

  public final void notUsingFastResolver(javax.enterprise.inject.spi.ObserverMethod);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #51                 // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #111                // Method notUsingFastResolver$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String notUsingFastResolver$str();
    Code:
       0: ldc           #112                // String WELD-000141: Falling back to the default observer method resolver due to {0}
       2: areturn

  public final void enabledAlternatives(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #113                // Method enabledAlternatives$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String enabledAlternatives$str();
    Code:
       0: ldc           #114                // String WELD-000103: Enabled alternatives for {0}: {1}
       2: areturn

  public final org.jboss.weld.exceptions.DefinitionException passivatingNonNormalScopeIllegal(java.lang.Object);
    Code:
       0: new           #9                  // class org/jboss/weld/exceptions/DefinitionException
       3: dup
       4: aload_0
       5: invokevirtual #115                // Method passivatingNonNormalScopeIllegal$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #11                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #12                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #13                 // Method org/jboss/weld/exceptions/DefinitionException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #14                 // Method org/jboss/weld/exceptions/DefinitionException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #16                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #17                 // Method org/jboss/weld/exceptions/DefinitionException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String passivatingNonNormalScopeIllegal$str();
    Code:
       0: ldc           #116                // String WELD-000118: Only normal scopes can be passivating. Scope {0}
       2: areturn

  public final void ignoringExtensionClassDueToLoadingError(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #38                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #117                // Method ignoringExtensionClassDueToLoadingError$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String ignoringExtensionClassDueToLoadingError$str();
    Code:
       0: ldc           #118                // String WELD-000139: Ignoring portable extension class {0} because of underlying class loading error: Type {1} not found. Enable DEBUG logging level to see the full error.
       2: areturn

  public final void patDefaultResolver(org.jboss.weld.annotated.slim.SlimAnnotatedType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #29                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #119                // Method patDefaultResolver$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #20                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String patDefaultResolver$str();
    Code:
       0: ldc           #120                // String Sending PAT using the default event resolver: {0}
       2: areturn

  public final void ignoringClassDueToLoadingError(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #51                 // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #121                // Method ignoringClassDueToLoadingError$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String ignoringClassDueToLoadingError$str();
    Code:
       0: ldc           #122                // String WELD-000119: Not generating any bean definitions from {0} because of underlying class loading error: Type {1} not found.  If this is unexpected, enable DEBUG logging to see the full error.
       2: areturn

  static {};
    Code:
       0: ldc           #7                  // class org/jboss/weld/logging/BootstrapLogger_$logger
       2: invokevirtual #123                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #3                  // Field FQCN:Ljava/lang/String;
       8: return
}
