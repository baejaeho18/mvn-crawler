Compiled from "Reflections.java"
public class org.jboss.weld.util.reflection.Reflections {
  public static final java.lang.reflect.Type[] EMPTY_TYPES;

  public static final java.lang.annotation.Annotation[] EMPTY_ANNOTATIONS;

  public static final java.lang.Class<?>[] EMPTY_CLASSES;

  private org.jboss.weld.util.reflection.Reflections();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<java.lang.Class<?>, java.lang.reflect.Type> buildTypeMap(java.util.Set<java.lang.reflect.Type>);
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_2
      25: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #7                  // class java/lang/reflect/Type
      33: astore_3
      34: aload_3
      35: invokestatic  #8                  // Method getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
      38: astore        4
      40: aload         4
      42: ifnull        55
      45: aload_1
      46: aload         4
      48: aload_3
      49: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: goto          15
      58: aload_1
      59: areturn

  public static boolean isCacheable(java.util.Collection<java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: aload_1
       8: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          43
      16: aload_1
      17: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #11                 // class java/lang/annotation/Annotation
      25: astore_2
      26: aload_2
      27: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: astore_3
      31: aload_3
      32: invokestatic  #13                 // Method isTopLevelOrStaticNestedClass:(Ljava/lang/Class;)Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: goto          7
      43: iconst_1
      44: ireturn

  public static boolean isCacheable(java.lang.annotation.Annotation[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     40
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: astore        5
      24: aload         5
      26: invokestatic  #13                 // Method isTopLevelOrStaticNestedClass:(Ljava/lang/Class;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: iinc          3, 1
      37: goto          7
      40: iconst_1
      41: ireturn

  public static <T> T cast(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static java.lang.String getPropertyName(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: astore_1
       5: ldc           #15                 // String get
       7: astore_2
       8: ldc           #16                 // String is
      10: astore_3
      11: aload_1
      12: ldc           #15                 // String get
      14: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifeq          33
      20: aload_1
      21: ldc           #15                 // String get
      23: invokevirtual #18                 // Method java/lang/String.length:()I
      26: invokevirtual #19                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      29: invokestatic  #20                 // Method java/beans/Introspector.decapitalize:(Ljava/lang/String;)Ljava/lang/String;
      32: areturn
      33: aload_1
      34: ldc           #16                 // String is
      36: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      39: ifeq          55
      42: aload_1
      43: ldc           #16                 // String is
      45: invokevirtual #18                 // Method java/lang/String.length:()I
      48: invokevirtual #19                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      51: invokestatic  #20                 // Method java/beans/Introspector.decapitalize:(Ljava/lang/String;)Ljava/lang/String;
      54: areturn
      55: aconst_null
      56: areturn

  public static boolean isFinal(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #22                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       7: ireturn

  public static int getNesting(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method java/lang/Class.isMemberClass:()Z
       4: ifeq          24
       7: aload_0
       8: invokestatic  #24                 // Method isStatic:(Ljava/lang/Class;)Z
      11: ifne          24
      14: iconst_1
      15: aload_0
      16: invokevirtual #25                 // Method java/lang/Class.getDeclaringClass:()Ljava/lang/Class;
      19: invokestatic  #26                 // Method getNesting:(Ljava/lang/Class;)I
      22: iadd
      23: ireturn
      24: iconst_0
      25: ireturn

  public static boolean isFinal(java.lang.reflect.Member);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod java/lang/reflect/Member.getModifiers:()I
       6: invokestatic  #22                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       9: ireturn

  public static boolean isPrivate(java.lang.reflect.Member);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod java/lang/reflect/Member.getModifiers:()I
       6: invokestatic  #28                 // Method java/lang/reflect/Modifier.isPrivate:(I)Z
       9: ireturn

  public static boolean isTypeOrAnyMethodFinal(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method getNonPrivateFinalMethodOrType:(Ljava/lang/Class;)Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static java.lang.Object getNonPrivateFinalMethodOrType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method isFinal:(Ljava/lang/Class;)Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: astore_1
      11: aload_1
      12: ifnull        95
      15: aload_1
      16: ldc           #31                 // class java/lang/Object
      18: if_acmpeq     95
      21: new           #32                 // class org/jboss/weld/security/GetDeclaredMethodsAction
      24: dup
      25: aload_1
      26: invokespecial #33                 // Method org/jboss/weld/security/GetDeclaredMethodsAction."<init>":(Ljava/lang/Class;)V
      29: invokestatic  #34                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      32: checkcast     #35                 // class "[Ljava/lang/reflect/Method;"
      35: astore_2
      36: aload_2
      37: arraylength
      38: istore_3
      39: iconst_0
      40: istore        4
      42: iload         4
      44: iload_3
      45: if_icmpge     87
      48: aload_2
      49: iload         4
      51: aaload
      52: astore        5
      54: aload         5
      56: invokestatic  #36                 // Method isFinal:(Ljava/lang/reflect/Member;)Z
      59: ifeq          81
      62: aload         5
      64: invokestatic  #37                 // Method isPrivate:(Ljava/lang/reflect/Member;)Z
      67: ifne          81
      70: aload         5
      72: invokestatic  #38                 // Method isStatic:(Ljava/lang/reflect/Member;)Z
      75: ifne          81
      78: aload         5
      80: areturn
      81: iinc          4, 1
      84: goto          42
      87: aload_1
      88: invokevirtual #39                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      91: astore_1
      92: goto          11
      95: aconst_null
      96: areturn

  public static boolean isPackagePrivate(int);
    Code:
       0: iload_0
       1: invokestatic  #28                 // Method java/lang/reflect/Modifier.isPrivate:(I)Z
       4: ifne          25
       7: iload_0
       8: invokestatic  #40                 // Method java/lang/reflect/Modifier.isProtected:(I)Z
      11: ifne          25
      14: iload_0
      15: invokestatic  #41                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public static boolean isStatic(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #42                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       7: ireturn

  public static boolean isStatic(java.lang.reflect.Member);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod java/lang/reflect/Member.getModifiers:()I
       6: invokestatic  #42                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       9: ireturn

  public static boolean isTransient(java.lang.reflect.Member);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod java/lang/reflect/Member.getModifiers:()I
       6: invokestatic  #43                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
       9: ireturn

  public static boolean isAbstract(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #45                 // Method java/lang/reflect/Modifier.isAbstract:(I)Z
       7: ireturn

  public static boolean isAbstract(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #45                 // Method java/lang/reflect/Modifier.isAbstract:(I)Z
       7: ireturn

  public static java.lang.reflect.Type[] getActualTypeArguments(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method org/jboss/weld/util/Types.getCanonicalType:(Ljava/lang/Class;)Ljava/lang/reflect/Type;
       4: astore_1
       5: aload_1
       6: instanceof    #47                 // class java/lang/reflect/ParameterizedType
       9: ifeq          22
      12: aload_1
      13: checkcast     #47                 // class java/lang/reflect/ParameterizedType
      16: invokeinterface #48,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      21: areturn
      22: getstatic     #49                 // Field EMPTY_TYPES:[Ljava/lang/reflect/Type;
      25: areturn

  public static java.lang.reflect.Type[] getActualTypeArguments(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: invokestatic  #50                 // Method org/jboss/weld/util/Types.getCanonicalType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
       4: astore_1
       5: aload_1
       6: instanceof    #47                 // class java/lang/reflect/ParameterizedType
       9: ifeq          22
      12: aload_1
      13: checkcast     #47                 // class java/lang/reflect/ParameterizedType
      16: invokeinterface #48,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      21: areturn
      22: getstatic     #49                 // Field EMPTY_TYPES:[Ljava/lang/reflect/Type;
      25: areturn

  public static boolean isArrayType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method java/lang/Class.isArray:()Z
       4: ireturn

  public static boolean isParameterizedType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method java/lang/Class.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;
       4: arraylength
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isParameterizedTypeWithWildcard(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method isParameterizedType:(Ljava/lang/Class;)Z
       4: ifeq          21
       7: aload_0
       8: invokevirtual #52                 // Method java/lang/Class.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;
      11: invokestatic  #54                 // Method containsWildcards:([Ljava/lang/reflect/Type;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public static boolean containsWildcards(java.lang.reflect.Type[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     33
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: instanceof    #55                 // class java/lang/reflect/WildcardType
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: iinc          3, 1
      30: goto          7
      33: iconst_0
      34: ireturn

  public static boolean isBindings(java.lang.annotation.Annotation);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokeinterface #56,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
       8: ldc           #57                 // class javax/inject/Qualifier
      10: invokevirtual #58                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      13: ifeq          60
      16: aload_0
      17: invokeinterface #56,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      22: ldc           #59                 // class java/lang/annotation/Retention
      24: invokevirtual #58                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      27: ifeq          60
      30: aload_0
      31: invokeinterface #56,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      36: ldc           #59                 // class java/lang/annotation/Retention
      38: invokevirtual #60                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      41: checkcast     #59                 // class java/lang/annotation/Retention
      44: invokeinterface #61,  1           // InterfaceMethod java/lang/annotation/Retention.value:()Ljava/lang/annotation/RetentionPolicy;
      49: getstatic     #62                 // Field java/lang/annotation/RetentionPolicy.RUNTIME:Ljava/lang/annotation/RetentionPolicy;
      52: invokevirtual #63                 // Method java/lang/annotation/RetentionPolicy.equals:(Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_1
      59: istore_1
      60: iload_1
      61: ireturn

  public static boolean isSerializable(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method java/lang/Class.isPrimitive:()Z
       4: ifne          16
       7: ldc           #65                 // class java/io/Serializable
       9: aload_0
      10: invokevirtual #66                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean isPrimitive(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #64                 // Method java/lang/Class.isPrimitive:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static <T> java.lang.Class<T> getRawType(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: instanceof    #67                 // class java/lang/Class
       4: ifeq          12
       7: aload_0
       8: checkcast     #67                 // class java/lang/Class
      11: areturn
      12: aload_0
      13: instanceof    #47                 // class java/lang/reflect/ParameterizedType
      16: ifeq          47
      19: aload_0
      20: checkcast     #47                 // class java/lang/reflect/ParameterizedType
      23: invokeinterface #68,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      28: instanceof    #67                 // class java/lang/Class
      31: ifeq          47
      34: aload_0
      35: checkcast     #47                 // class java/lang/reflect/ParameterizedType
      38: invokeinterface #68,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      43: checkcast     #67                 // class java/lang/Class
      46: areturn
      47: aload_0
      48: instanceof    #69                 // class java/lang/reflect/TypeVariable
      51: ifeq          71
      54: aload_0
      55: checkcast     #69                 // class java/lang/reflect/TypeVariable
      58: astore_1
      59: aload_1
      60: invokeinterface #70,  1           // InterfaceMethod java/lang/reflect/TypeVariable.getBounds:()[Ljava/lang/reflect/Type;
      65: astore_2
      66: aload_2
      67: invokestatic  #71                 // Method getBound:([Ljava/lang/reflect/Type;)Ljava/lang/Class;
      70: areturn
      71: aload_0
      72: instanceof    #55                 // class java/lang/reflect/WildcardType
      75: ifeq          93
      78: aload_0
      79: checkcast     #55                 // class java/lang/reflect/WildcardType
      82: astore_1
      83: aload_1
      84: invokeinterface #72,  1           // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
      89: invokestatic  #71                 // Method getBound:([Ljava/lang/reflect/Type;)Ljava/lang/Class;
      92: areturn
      93: aload_0
      94: instanceof    #73                 // class java/lang/reflect/GenericArrayType
      97: ifeq          128
     100: aload_0
     101: checkcast     #73                 // class java/lang/reflect/GenericArrayType
     104: astore_1
     105: aload_1
     106: invokeinterface #74,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
     111: invokestatic  #8                  // Method getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
     114: astore_2
     115: aload_2
     116: ifnull        128
     119: aload_2
     120: iconst_0
     121: invokestatic  #75                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
     124: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     127: areturn
     128: aconst_null
     129: areturn

  private static <T> java.lang.Class<T> getBound(java.lang.reflect.Type[]);
    Code:
       0: aload_0
       1: arraylength
       2: ifne          8
       5: ldc           #31                 // class java/lang/Object
       7: areturn
       8: aload_0
       9: iconst_0
      10: aaload
      11: invokestatic  #8                  // Method getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
      14: areturn

  public static boolean isClassLoadable(java.lang.String, org.jboss.weld.resources.spi.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // Method loadClass:(Ljava/lang/String;Lorg/jboss/weld/resources/spi/ResourceLoader;)Ljava/lang/Class;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static <T> java.lang.Class<T> loadClass(java.lang.String, org.jboss.weld.resources.spi.ResourceLoader);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #77,  2           // InterfaceMethod org/jboss/weld/resources/spi/ResourceLoader.classForName:(Ljava/lang/String;)Ljava/lang/Class;
       7: invokestatic  #78                 // Method cast:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #67                 // class java/lang/Class
      13: areturn
      14: astore_2
      15: aconst_null
      16: areturn
      17: astore_2
      18: aconst_null
      19: areturn
    Exception table:
       from    to  target type
           0    13    14   Class org/jboss/weld/resources/spi/ResourceLoadingException
           0    13    17   Class java/lang/SecurityException

  public static boolean isUnboundedWildcard(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: instanceof    #55                 // class java/lang/reflect/WildcardType
       4: ifeq          42
       7: aload_0
       8: checkcast     #55                 // class java/lang/reflect/WildcardType
      11: astore_1
      12: aload_1
      13: invokeinterface #72,  1           // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
      18: invokestatic  #81                 // Method isEmptyBoundArray:([Ljava/lang/reflect/Type;)Z
      21: ifeq          40
      24: aload_1
      25: invokeinterface #82,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
      30: invokestatic  #81                 // Method isEmptyBoundArray:([Ljava/lang/reflect/Type;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn
      42: iconst_0
      43: ireturn

  public static boolean isUnboundedTypeVariable(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: instanceof    #69                 // class java/lang/reflect/TypeVariable
       4: ifeq          22
       7: aload_0
       8: checkcast     #69                 // class java/lang/reflect/TypeVariable
      11: astore_1
      12: aload_1
      13: invokeinterface #70,  1           // InterfaceMethod java/lang/reflect/TypeVariable.getBounds:()[Ljava/lang/reflect/Type;
      18: invokestatic  #81                 // Method isEmptyBoundArray:([Ljava/lang/reflect/Type;)Z
      21: ireturn
      22: iconst_0
      23: ireturn

  static boolean isEmptyBoundArray(java.lang.reflect.Type[]);
    Code:
       0: aload_0
       1: ifnull        26
       4: aload_0
       5: arraylength
       6: ifeq          26
       9: aload_0
      10: arraylength
      11: iconst_1
      12: if_icmpne     30
      15: ldc           #31                 // class java/lang/Object
      17: aload_0
      18: iconst_0
      19: aaload
      20: invokevirtual #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static boolean isStaticNestedClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method java/lang/Class.getEnclosingConstructor:()Ljava/lang/reflect/Constructor;
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #85                 // Method java/lang/Class.getEnclosingMethod:()Ljava/lang/reflect/Method;
      11: ifnull        16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #86                 // Method java/lang/Class.getEnclosingClass:()Ljava/lang/Class;
      20: ifnull        37
      23: aload_0
      24: invokevirtual #87                 // Method java/lang/Class.isAnonymousClass:()Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokestatic  #24                 // Method isStatic:(Ljava/lang/Class;)Z
      36: ireturn
      37: iconst_0
      38: ireturn

  public static boolean isTopLevelOrStaticNestedClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method java/lang/Class.getEnclosingClass:()Ljava/lang/Class;
       4: ifnull        14
       7: aload_0
       8: invokestatic  #88                 // Method isStaticNestedClass:(Ljava/lang/Class;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static <T> T invokeAndUnwrap(java.lang.Object, java.lang.reflect.Method, java.lang.Object...) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #89                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
       6: invokestatic  #78                 // Method cast:(Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
      10: astore_3
      11: getstatic     #91                 // Field org/jboss/weld/logging/ReflectionLogger.LOG:Lorg/jboss/weld/logging/ReflectionLogger;
      14: aload_0
      15: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokestatic  #92                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      24: aload_3
      25: invokeinterface #93,  6           // InterfaceMethod org/jboss/weld/logging/ReflectionLogger.illegalArgumentExceptionOnReflectionInvocation:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Lorg/jboss/weld/exceptions/WeldException;
      30: athrow
      31: astore_3
      32: new           #95                 // class org/jboss/weld/exceptions/WeldException
      35: dup
      36: aload_3
      37: invokespecial #96                 // Method org/jboss/weld/exceptions/WeldException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
      41: astore_3
      42: aload_3
      43: invokevirtual #98                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      46: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/IllegalArgumentException
           0     9    31   Class java/lang/IllegalAccessException
           0     9    41   Class java/lang/reflect/InvocationTargetException

  public static java.lang.Exception unwrapInvocationTargetException(java.lang.reflect.InvocationTargetException) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
       4: astore_1
       5: aload_1
       6: instanceof    #99                 // class java/lang/Error
       9: ifeq          17
      12: aload_1
      13: checkcast     #99                 // class java/lang/Error
      16: athrow
      17: aload_1
      18: instanceof    #100                // class java/lang/Exception
      21: ifeq          29
      24: aload_1
      25: checkcast     #100                // class java/lang/Exception
      28: athrow
      29: new           #95                 // class org/jboss/weld/exceptions/WeldException
      32: dup
      33: aload_1
      34: invokespecial #96                 // Method org/jboss/weld/exceptions/WeldException."<init>":(Ljava/lang/Throwable;)V
      37: athrow

  public static java.util.Set<java.lang.Class<?>> getInterfaceClosure(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #101                // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: arraylength
       7: ifne          14
      10: invokestatic  #102                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      13: areturn
      14: new           #103                // class java/util/HashSet
      17: dup
      18: invokespecial #104                // Method java/util/HashSet."<init>":()V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokestatic  #105                // Method addInterfaces:(Ljava/lang/Class;Ljava/util/Set;)V
      27: aload_2
      28: areturn

  private static void addInterfaces(java.lang.Class<?>, java.util.Set<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokevirtual #101                // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: arraylength
       7: ifne          11
      10: return
      11: aload_1
      12: aload_2
      13: invokestatic  #106                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      16: pop
      17: aload_2
      18: astore_3
      19: aload_3
      20: arraylength
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload         4
      30: if_icmpge     51
      33: aload_3
      34: iload         5
      36: aaload
      37: astore        6
      39: aload         6
      41: aload_1
      42: invokestatic  #105                // Method addInterfaces:(Ljava/lang/Class;Ljava/util/Set;)V
      45: iinc          5, 1
      48: goto          26
      51: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #7                  // class java/lang/reflect/Type
       4: putstatic     #49                 // Field EMPTY_TYPES:[Ljava/lang/reflect/Type;
       7: iconst_0
       8: anewarray     #11                 // class java/lang/annotation/Annotation
      11: putstatic     #107                // Field EMPTY_ANNOTATIONS:[Ljava/lang/annotation/Annotation;
      14: iconst_0
      15: anewarray     #67                 // class java/lang/Class
      18: putstatic     #108                // Field EMPTY_CLASSES:[Ljava/lang/Class;
      21: return
}
