Compiled from "AbstractContainerEvent.java"
public abstract class org.jboss.weld.bootstrap.events.AbstractContainerEvent extends org.jboss.weld.bootstrap.events.ContainerEvent {
  private final java.util.List<java.lang.Throwable> errors;

  private final org.jboss.weld.manager.BeanManagerImpl beanManager;

  private final java.lang.reflect.Type[] actualTypeArguments;

  private final java.lang.reflect.Type rawType;

  protected org.jboss.weld.bootstrap.events.AbstractContainerEvent(org.jboss.weld.manager.BeanManagerImpl, java.lang.reflect.Type, java.lang.reflect.Type[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/weld/bootstrap/events/ContainerEvent."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field errors:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field beanManager:Lorg/jboss/weld/manager/BeanManagerImpl;
      20: aload_0
      21: aload_3
      22: putfield      #6                  // Field actualTypeArguments:[Ljava/lang/reflect/Type;
      25: aload_0
      26: aload_2
      27: putfield      #7                  // Field rawType:Ljava/lang/reflect/Type;
      30: return

  protected java.util.List<java.lang.Throwable> getErrors();
    Code:
       0: aload_0
       1: getfield      #4                  // Field errors:Ljava/util/List;
       4: areturn

  protected org.jboss.weld.manager.BeanManagerImpl getBeanManager();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanManager:Lorg/jboss/weld/manager/BeanManagerImpl;
       4: areturn

  public void fire();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanManager:Lorg/jboss/weld/manager/BeanManagerImpl;
       4: invokevirtual #8                  // Method org/jboss/weld/manager/BeanManagerImpl.getGlobalLenientObserverNotifier:()Lorg/jboss/weld/event/ObserverNotifier;
       7: aload_0
       8: invokevirtual #9                  // Method getEventType:()Ljava/lang/reflect/Type;
      11: aload_0
      12: iconst_0
      13: anewarray     #10                 // class java/lang/annotation/Annotation
      16: invokevirtual #11                 // Method org/jboss/weld/event/ObserverNotifier.fireEvent:(Ljava/lang/reflect/Type;Ljava/lang/Object;[Ljava/lang/annotation/Annotation;)V
      19: goto          34
      22: astore_1
      23: aload_0
      24: invokevirtual #13                 // Method getErrors:()Ljava/util/List;
      27: aload_1
      28: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Exception

  protected java.lang.reflect.Type getRawType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rawType:Ljava/lang/reflect/Type;
       4: areturn

  protected java.lang.reflect.Type[] getActualTypeArguments();
    Code:
       0: aload_0
       1: getfield      #6                  // Field actualTypeArguments:[Ljava/lang/reflect/Type;
       4: areturn

  public java.lang.reflect.Type getEventType();
    Code:
       0: new           #15                 // class org/jboss/weld/util/reflection/ParameterizedTypeImpl
       3: dup
       4: aload_0
       5: invokevirtual #16                 // Method getRawType:()Ljava/lang/reflect/Type;
       8: aload_0
       9: invokevirtual #17                 // Method getActualTypeArguments:()[Ljava/lang/reflect/Type;
      12: aconst_null
      13: invokespecial #18                 // Method org/jboss/weld/util/reflection/ParameterizedTypeImpl."<init>":(Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
      16: areturn
}
