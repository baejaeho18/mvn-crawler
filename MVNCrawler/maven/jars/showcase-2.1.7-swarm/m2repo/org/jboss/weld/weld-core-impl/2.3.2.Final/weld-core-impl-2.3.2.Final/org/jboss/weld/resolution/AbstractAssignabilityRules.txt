Compiled from "AbstractAssignabilityRules.java"
public abstract class org.jboss.weld.resolution.AbstractAssignabilityRules implements org.jboss.weld.resolution.AssignabilityRules {
  public org.jboss.weld.resolution.AbstractAssignabilityRules();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean matches(java.util.Set<java.lang.reflect.Type>, java.util.Set<java.lang.reflect.Type>);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_3
      17: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #5                  // class java/lang/reflect/Type
      25: astore        4
      27: aload_0
      28: aload         4
      30: aload_2
      31: invokevirtual #6                  // Method matches:(Ljava/lang/reflect/Type;Ljava/util/Set;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: goto          7
      42: iconst_0
      43: ireturn

  public boolean matches(java.lang.reflect.Type, java.util.Set<? extends java.lang.reflect.Type>);
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_3
      17: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #5                  // class java/lang/reflect/Type
      25: astore        4
      27: aload_0
      28: aload_1
      29: aload         4
      31: invokevirtual #7                  // Method matches:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: goto          7
      42: iconst_0
      43: ireturn

  protected java.lang.reflect.Type[] getUppermostTypeVariableBounds(java.lang.reflect.TypeVariable<?>);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod java/lang/reflect/TypeVariable.getBounds:()[Ljava/lang/reflect/Type;
       6: iconst_0
       7: aaload
       8: instanceof    #9                  // class java/lang/reflect/TypeVariable
      11: ifeq          30
      14: aload_0
      15: aload_1
      16: invokeinterface #8,  1            // InterfaceMethod java/lang/reflect/TypeVariable.getBounds:()[Ljava/lang/reflect/Type;
      21: iconst_0
      22: aaload
      23: checkcast     #9                  // class java/lang/reflect/TypeVariable
      26: invokevirtual #10                 // Method getUppermostTypeVariableBounds:(Ljava/lang/reflect/TypeVariable;)[Ljava/lang/reflect/Type;
      29: areturn
      30: aload_1
      31: invokeinterface #8,  1            // InterfaceMethod java/lang/reflect/TypeVariable.getBounds:()[Ljava/lang/reflect/Type;
      36: areturn

  private java.lang.reflect.Type[] getUppermostBounds(java.lang.reflect.Type[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aaload
       3: instanceof    #9                  // class java/lang/reflect/TypeVariable
       6: ifeq          20
       9: aload_0
      10: aload_1
      11: iconst_0
      12: aaload
      13: checkcast     #9                  // class java/lang/reflect/TypeVariable
      16: invokevirtual #10                 // Method getUppermostTypeVariableBounds:(Ljava/lang/reflect/TypeVariable;)[Ljava/lang/reflect/Type;
      19: areturn
      20: aload_1
      21: areturn

  protected boolean boundsMatch(java.lang.reflect.Type[], java.lang.reflect.Type[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method getUppermostBounds:([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
       5: astore_1
       6: aload_0
       7: aload_2
       8: invokespecial #11                 // Method getUppermostBounds:([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
      11: astore_2
      12: aload_1
      13: astore_3
      14: aload_3
      15: arraylength
      16: istore        4
      18: iconst_0
      19: istore        5
      21: iload         5
      23: iload         4
      25: if_icmpge     51
      28: aload_3
      29: iload         5
      31: aaload
      32: astore        6
      34: aload         6
      36: aload_2
      37: invokestatic  #12                 // Method org/jboss/weld/resolution/CovariantTypes.isAssignableFromAtLeastOne:(Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: iinc          5, 1
      48: goto          21
      51: iconst_1
      52: ireturn

  protected boolean lowerBoundsOfWildcardMatch(java.lang.reflect.Type, java.lang.reflect.WildcardType);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #5                  // class java/lang/reflect/Type
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: aload_2
      10: invokevirtual #13                 // Method lowerBoundsOfWildcardMatch:([Ljava/lang/reflect/Type;Ljava/lang/reflect/WildcardType;)Z
      13: ireturn

  protected boolean lowerBoundsOfWildcardMatch(java.lang.reflect.Type[], java.lang.reflect.WildcardType);
    Code:
       0: aload_2
       1: invokeinterface #14,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
       6: arraylength
       7: ifle          28
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
      16: astore_3
      17: aload_0
      18: aload_1
      19: aload_3
      20: invokevirtual #15                 // Method boundsMatch:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Z
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: iconst_1
      29: ireturn

  protected boolean upperBoundsOfWildcardMatch(java.lang.reflect.WildcardType, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #16,  1           // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
       7: iconst_1
       8: anewarray     #5                  // class java/lang/reflect/Type
      11: dup
      12: iconst_0
      13: aload_2
      14: aastore
      15: invokevirtual #15                 // Method boundsMatch:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Z
      18: ireturn
}
