Compiled from "BeanHolder.java"
public class org.jboss.weld.serialization.BeanHolder<T> extends org.jboss.weld.serialization.AbstractSerializableHolder<javax.enterprise.inject.spi.Bean<T>> {
  private static final long serialVersionUID;

  private final java.lang.String contextId;

  private final org.jboss.weld.serialization.spi.BeanIdentifier beanId;

  public static <T> org.jboss.weld.serialization.BeanHolder<T> of(java.lang.String, javax.enterprise.inject.spi.Bean<T>);
    Code:
       0: new           #1                  // class org/jboss/weld/serialization/BeanHolder
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljavax/enterprise/inject/spi/Bean;)V
       9: areturn

  public org.jboss.weld.serialization.BeanHolder(java.lang.String, javax.enterprise.inject.spi.Bean<T>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method org/jboss/weld/serialization/AbstractSerializableHolder."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: putfield      #4                  // Field contextId:Ljava/lang/String;
      10: aload_2
      11: ifnonnull     22
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field beanId:Lorg/jboss/weld/serialization/spi/BeanIdentifier;
      19: goto          49
      22: aload_0
      23: aload_1
      24: invokestatic  #6                  // Method org/jboss/weld/Container.instance:(Ljava/lang/String;)Lorg/jboss/weld/Container;
      27: invokevirtual #7                  // Method org/jboss/weld/Container.services:()Lorg/jboss/weld/bootstrap/api/ServiceRegistry;
      30: ldc           #8                  // class org/jboss/weld/serialization/spi/ContextualStore
      32: invokeinterface #9,  2            // InterfaceMethod org/jboss/weld/bootstrap/api/ServiceRegistry.get:(Ljava/lang/Class;)Lorg/jboss/weld/bootstrap/api/Service;
      37: checkcast     #8                  // class org/jboss/weld/serialization/spi/ContextualStore
      40: aload_2
      41: invokeinterface #10,  2           // InterfaceMethod org/jboss/weld/serialization/spi/ContextualStore.putIfAbsent:(Ljavax/enterprise/context/spi/Contextual;)Lorg/jboss/weld/serialization/spi/BeanIdentifier;
      46: putfield      #5                  // Field beanId:Lorg/jboss/weld/serialization/spi/BeanIdentifier;
      49: return

  protected javax.enterprise.inject.spi.Bean<T> initialize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanId:Lorg/jboss/weld/serialization/spi/BeanIdentifier;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field contextId:Ljava/lang/String;
      13: invokestatic  #6                  // Method org/jboss/weld/Container.instance:(Ljava/lang/String;)Lorg/jboss/weld/Container;
      16: invokevirtual #7                  // Method org/jboss/weld/Container.services:()Lorg/jboss/weld/bootstrap/api/ServiceRegistry;
      19: ldc           #8                  // class org/jboss/weld/serialization/spi/ContextualStore
      21: invokeinterface #9,  2            // InterfaceMethod org/jboss/weld/bootstrap/api/ServiceRegistry.get:(Ljava/lang/Class;)Lorg/jboss/weld/bootstrap/api/Service;
      26: checkcast     #8                  // class org/jboss/weld/serialization/spi/ContextualStore
      29: aload_0
      30: getfield      #5                  // Field beanId:Lorg/jboss/weld/serialization/spi/BeanIdentifier;
      33: invokeinterface #11,  2           // InterfaceMethod org/jboss/weld/serialization/spi/ContextualStore.getContextual:(Lorg/jboss/weld/serialization/spi/BeanIdentifier;)Ljavax/enterprise/context/spi/Contextual;
      38: checkcast     #12                 // class javax/enterprise/inject/spi/Bean
      41: areturn

  protected java.lang.Object initialize();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method initialize:()Ljavax/enterprise/inject/spi/Bean;
       4: areturn
}
