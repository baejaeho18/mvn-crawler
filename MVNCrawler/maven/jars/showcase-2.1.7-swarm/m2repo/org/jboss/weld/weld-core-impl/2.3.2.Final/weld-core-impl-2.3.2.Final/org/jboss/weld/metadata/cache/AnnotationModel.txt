Compiled from "AnnotationModel.java"
public abstract class org.jboss.weld.metadata.cache.AnnotationModel<T extends java.lang.annotation.Annotation> {
  private final javax.enterprise.inject.spi.AnnotatedType<T> annotatedAnnotation;

  protected boolean valid;

  public org.jboss.weld.metadata.cache.AnnotationModel(org.jboss.weld.annotated.enhanced.EnhancedAnnotation<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod org/jboss/weld/annotated/enhanced/EnhancedAnnotation.slim:()Lorg/jboss/weld/annotated/slim/SlimAnnotatedType;
      11: putfield      #3                  // Field annotatedAnnotation:Ljavax/enterprise/inject/spi/AnnotatedType;
      14: aload_0
      15: aload_1
      16: invokevirtual #4                  // Method init:(Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotation;)V
      19: return

  protected void init(org.jboss.weld.annotated.enhanced.EnhancedAnnotation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method initType:(Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotation;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #6                  // Method initValid:(Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotation;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #7                  // Method check:(Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotation;)V
      15: return

  protected void initType(org.jboss.weld.annotated.enhanced.EnhancedAnnotation<T>);
    Code:
       0: ldc           #8                  // class java/lang/annotation/Annotation
       2: aload_0
       3: invokevirtual #9                  // Method getRawType:()Ljava/lang/Class;
       6: invokevirtual #10                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifne          29
      12: getstatic     #11                 // Field org/jboss/weld/logging/MetadataLogger.LOG:Lorg/jboss/weld/logging/MetadataLogger;
      15: aload_0
      16: invokevirtual #12                 // Method getMetaAnnotationTypes:()Ljava/util/Set;
      19: aload_0
      20: invokevirtual #9                  // Method getRawType:()Ljava/lang/Class;
      23: invokeinterface #13,  3           // InterfaceMethod org/jboss/weld/logging/MetadataLogger.metaAnnotationOnWrongType:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jboss/weld/exceptions/DefinitionException;
      28: athrow
      29: return

  protected void initValid(org.jboss.weld.annotated.enhanced.EnhancedAnnotation<T>);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #14                 // Field valid:Z
       5: aload_0
       6: invokevirtual #12                 // Method getMetaAnnotationTypes:()Ljava/util/Set;
       9: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          52
      24: aload_2
      25: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #18                 // class java/lang/Class
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #19,  2           // InterfaceMethod org/jboss/weld/annotated/enhanced/EnhancedAnnotation.isAnnotationPresent:(Ljava/lang/Class;)Z
      41: ifeq          49
      44: aload_0
      45: iconst_1
      46: putfield      #14                 // Field valid:Z
      49: goto          15
      52: return

  protected void check(org.jboss.weld.annotated.enhanced.EnhancedAnnotation<T>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field valid:Z
       4: ifeq          68
       7: aload_1
       8: ldc           #20                 // class java/lang/annotation/Retention
      10: invokeinterface #19,  2           // InterfaceMethod org/jboss/weld/annotated/enhanced/EnhancedAnnotation.isAnnotationPresent:(Ljava/lang/Class;)Z
      15: ifeq          54
      18: aload_1
      19: ldc           #20                 // class java/lang/annotation/Retention
      21: invokeinterface #19,  2           // InterfaceMethod org/jboss/weld/annotated/enhanced/EnhancedAnnotation.isAnnotationPresent:(Ljava/lang/Class;)Z
      26: ifeq          68
      29: aload_1
      30: ldc           #20                 // class java/lang/annotation/Retention
      32: invokeinterface #21,  2           // InterfaceMethod org/jboss/weld/annotated/enhanced/EnhancedAnnotation.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      37: checkcast     #20                 // class java/lang/annotation/Retention
      40: invokeinterface #22,  1           // InterfaceMethod java/lang/annotation/Retention.value:()Ljava/lang/annotation/RetentionPolicy;
      45: getstatic     #23                 // Field java/lang/annotation/RetentionPolicy.RUNTIME:Ljava/lang/annotation/RetentionPolicy;
      48: invokevirtual #24                 // Method java/lang/annotation/RetentionPolicy.equals:(Ljava/lang/Object;)Z
      51: ifne          68
      54: aload_0
      55: iconst_0
      56: putfield      #14                 // Field valid:Z
      59: getstatic     #25                 // Field org/jboss/weld/logging/ReflectionLogger.LOG:Lorg/jboss/weld/logging/ReflectionLogger;
      62: aload_1
      63: invokeinterface #26,  2           // InterfaceMethod org/jboss/weld/logging/ReflectionLogger.missingRetention:(Ljava/lang/Object;)V
      68: return

  public java.lang.Class<T> getRawType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field annotatedAnnotation:Ljavax/enterprise/inject/spi/AnnotatedType;
       4: invokeinterface #27,  1           // InterfaceMethod javax/enterprise/inject/spi/AnnotatedType.getJavaClass:()Ljava/lang/Class;
       9: areturn

  protected abstract java.util.Set<java.lang.Class<? extends java.lang.annotation.Annotation>> getMetaAnnotationTypes();

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #14                 // Field valid:Z
       4: ireturn

  public javax.enterprise.inject.spi.AnnotatedType<T> getAnnotatedAnnotation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field annotatedAnnotation:Ljavax/enterprise/inject/spi/AnnotatedType;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #30                 // Method isValid:()Z
      11: ifeq          19
      14: ldc           #31                 // String Valid
      16: goto          21
      19: ldc           #32                 // String Invalid
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #34                 // String  annotation model for
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #9                  // Method getRawType:()Ljava/lang/Class;
      33: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
