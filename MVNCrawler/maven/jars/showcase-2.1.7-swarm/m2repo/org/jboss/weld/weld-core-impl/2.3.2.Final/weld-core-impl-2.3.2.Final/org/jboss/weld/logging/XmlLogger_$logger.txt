Compiled from "XmlLogger_$logger.java"
public class org.jboss.weld.logging.XmlLogger_$logger extends org.jboss.logging.DelegatingBasicLogger implements java.io.Serializable,org.jboss.logging.BasicLogger,org.jboss.weld.logging.WeldLogger,org.jboss.weld.logging.XmlLogger {
  private static final long serialVersionUID;

  private static final java.lang.String FQCN;

  private static final java.lang.String configurationError;

  private static final java.lang.String loadError;

  private static final java.lang.String multipleAlternatives;

  private static final java.lang.String multipleDecorators;

  private static final java.lang.String multipleInterceptors;

  private static final java.lang.String multipleScanning;

  private static final java.lang.String xsdValidationWarning;

  private static final java.lang.String xsdValidationError;

  private static final java.lang.String catchingDebug;

  private static final java.lang.String parsingError;

  public org.jboss.weld.logging.XmlLogger_$logger(org.jboss.logging.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/DelegatingBasicLogger."<init>":(Lorg/jboss/logging/Logger;)V
       5: return

  public final org.jboss.weld.exceptions.IllegalStateException configurationError(java.lang.Throwable);
    Code:
       0: new           #2                  // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method configurationError$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #4                  // class java/lang/Object
      12: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: aload_1
      16: invokespecial #6                  // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #7                  // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      24: astore_3
      25: aload_2
      26: aload_3
      27: iconst_1
      28: aload_3
      29: arraylength
      30: invokestatic  #8                  // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      33: checkcast     #9                  // class "[Ljava/lang/StackTraceElement;"
      36: invokevirtual #10                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      39: aload_2
      40: areturn

  protected java.lang.String configurationError$str();
    Code:
       0: ldc           #12                 // String WELD-001200: Error configuring XML parser
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException loadError(java.lang.Object, java.lang.Throwable);
    Code:
       0: new           #2                  // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #13                 // Method loadError$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #4                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #14                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: aload_2
      20: invokespecial #6                  // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: astore_3
      24: aload_3
      25: invokevirtual #7                  // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      28: astore        4
      30: aload_3
      31: aload         4
      33: iconst_1
      34: aload         4
      36: arraylength
      37: invokestatic  #8                  // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      40: checkcast     #9                  // class "[Ljava/lang/StackTraceElement;"
      43: invokevirtual #10                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      46: aload_3
      47: areturn

  protected java.lang.String loadError$str();
    Code:
       0: ldc           #15                 // String WELD-001201: Error loading beans.xml {0}
       2: areturn

  public final org.jboss.weld.exceptions.DefinitionException multipleAlternatives(java.lang.Object);
    Code:
       0: new           #16                 // class org/jboss/weld/exceptions/DefinitionException
       3: dup
       4: aload_0
       5: invokevirtual #17                 // Method multipleAlternatives$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #4                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #14                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #18                 // Method org/jboss/weld/exceptions/DefinitionException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #19                 // Method org/jboss/weld/exceptions/DefinitionException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #8                  // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #9                  // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #20                 // Method org/jboss/weld/exceptions/DefinitionException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String multipleAlternatives$str();
    Code:
       0: ldc           #21                 // String WELD-001203: <alternatives> can only be specified once, but appears multiple times:  {0}
       2: areturn

  public final org.jboss.weld.exceptions.DefinitionException multipleDecorators(java.lang.Object);
    Code:
       0: new           #16                 // class org/jboss/weld/exceptions/DefinitionException
       3: dup
       4: aload_0
       5: invokevirtual #22                 // Method multipleDecorators$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #4                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #14                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #18                 // Method org/jboss/weld/exceptions/DefinitionException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #19                 // Method org/jboss/weld/exceptions/DefinitionException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #8                  // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #9                  // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #20                 // Method org/jboss/weld/exceptions/DefinitionException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String multipleDecorators$str();
    Code:
       0: ldc           #23                 // String WELD-001204: <decorators> can only be specified once, but is specified multiple times:  {0}
       2: areturn

  public final org.jboss.weld.exceptions.DefinitionException multipleInterceptors(java.lang.Object);
    Code:
       0: new           #16                 // class org/jboss/weld/exceptions/DefinitionException
       3: dup
       4: aload_0
       5: invokevirtual #24                 // Method multipleInterceptors$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #4                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #14                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #18                 // Method org/jboss/weld/exceptions/DefinitionException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #19                 // Method org/jboss/weld/exceptions/DefinitionException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #8                  // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #9                  // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #20                 // Method org/jboss/weld/exceptions/DefinitionException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String multipleInterceptors$str();
    Code:
       0: ldc           #25                 // String WELD-001205: <interceptors> can only be specified once, but it is specified multiple times:  {0}
       2: areturn

  public final org.jboss.weld.exceptions.DefinitionException multipleScanning(java.lang.Object);
    Code:
       0: new           #16                 // class org/jboss/weld/exceptions/DefinitionException
       3: dup
       4: aload_0
       5: invokevirtual #26                 // Method multipleScanning$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #4                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #14                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #18                 // Method org/jboss/weld/exceptions/DefinitionException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #19                 // Method org/jboss/weld/exceptions/DefinitionException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #8                  // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #9                  // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #20                 // Method org/jboss/weld/exceptions/DefinitionException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String multipleScanning$str();
    Code:
       0: ldc           #27                 // String WELD-001207: <scan> can only be specified once, but it is specified multiple times:  {0}
       2: areturn

  public final void xsdValidationWarning(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #28                 // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #29                 // Field FQCN:Ljava/lang/String;
       7: getstatic     #30                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #31                 // Method xsdValidationWarning$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #32                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String xsdValidationWarning$str();
    Code:
       0: ldc           #33                 // String WELD-001210: Warning when validating {0}@{1} against xsd. {2}
       2: areturn

  public final void xsdValidationError(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #28                 // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #29                 // Field FQCN:Ljava/lang/String;
       7: getstatic     #30                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #34                 // Method xsdValidationError$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #32                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String xsdValidationError$str();
    Code:
       0: ldc           #35                 // String WELD-001208: Error when validating {0}@{1} against xsd. {2}
       2: areturn

  public final void catchingDebug(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #28                 // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #29                 // Field FQCN:Ljava/lang/String;
       7: getstatic     #36                 // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #37                 // Method catchingDebug$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #4                  // class java/lang/Object
      19: invokevirtual #38                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String catchingDebug$str();
    Code:
       0: ldc           #39                 // String Catching
       2: areturn

  public final org.jboss.weld.exceptions.IllegalStateException parsingError(java.lang.Object, java.lang.Throwable);
    Code:
       0: new           #2                  // class org/jboss/weld/exceptions/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #40                 // Method parsingError$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #4                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #14                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: aload_2
      20: invokespecial #6                  // Method org/jboss/weld/exceptions/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: astore_3
      24: aload_3
      25: invokevirtual #7                  // Method org/jboss/weld/exceptions/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      28: astore        4
      30: aload_3
      31: aload         4
      33: iconst_1
      34: aload         4
      36: arraylength
      37: invokestatic  #8                  // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      40: checkcast     #9                  // class "[Ljava/lang/StackTraceElement;"
      43: invokevirtual #10                 // Method org/jboss/weld/exceptions/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      46: aload_3
      47: areturn

  protected java.lang.String parsingError$str();
    Code:
       0: ldc           #41                 // String WELD-001202: Error parsing {0}
       2: areturn

  static {};
    Code:
       0: ldc           #11                 // class org/jboss/weld/logging/XmlLogger_$logger
       2: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #29                 // Field FQCN:Ljava/lang/String;
       8: return
}
