Compiled from "RunWithinInterceptionDecorationContextGenerator.java"
abstract class org.jboss.weld.bean.proxy.RunWithinInterceptionDecorationContextGenerator {
  static final java.lang.String INTERCEPTION_DECORATION_CONTEXT_CLASS_NAME;

  static final java.lang.String START_INTERCEPTOR_CONTEXT_IF_NOT_EMPTY_METHOD_NAME;

  static final java.lang.String START_INTERCEPTOR_CONTEXT_IF_NOT_ON_TOP_METHOD_NAME;

  static final java.lang.String END_INTERCEPTOR_CONTEXT_METHOD_NAME;

  private static final java.lang.String STACK_DESCRIPTOR;

  private static final java.lang.String EMPTY_PARENTHESES;

  private static final java.lang.String RETURNS_STACK_DESCRIPTOR;

  static final java.lang.String START_INTERCEPTOR_CONTEXT_IF_NOT_ON_TOP_METHOD_SIGNATURE;

  private final org.jboss.classfilewriter.ClassMethod classMethod;

  private final org.jboss.classfilewriter.code.CodeAttribute b;

  private final org.jboss.weld.bean.proxy.ProxyFactory<?> factory;

  org.jboss.weld.bean.proxy.RunWithinInterceptionDecorationContextGenerator(org.jboss.classfilewriter.ClassMethod, org.jboss.weld.bean.proxy.ProxyFactory<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field classMethod:Lorg/jboss/classfilewriter/ClassMethod;
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method org/jboss/classfilewriter/ClassMethod.getCodeAttribute:()Lorg/jboss/classfilewriter/code/CodeAttribute;
      14: putfield      #5                  // Field b:Lorg/jboss/classfilewriter/code/CodeAttribute;
      17: aload_0
      18: aload_2
      19: putfield      #6                  // Field factory:Lorg/jboss/weld/bean/proxy/ProxyFactory;
      22: return

  abstract void doWork(org.jboss.classfilewriter.code.CodeAttribute, org.jboss.classfilewriter.ClassMethod);

  abstract void doReturn(org.jboss.classfilewriter.code.CodeAttribute, org.jboss.classfilewriter.ClassMethod);

  void startIfNotEmpty(org.jboss.classfilewriter.code.CodeAttribute, org.jboss.classfilewriter.ClassMethod);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field INTERCEPTION_DECORATION_CONTEXT_CLASS_NAME:Ljava/lang/String;
       4: ldc           #9                  // String startIfNotEmpty
       6: getstatic     #10                 // Field RETURNS_STACK_DESCRIPTOR:Ljava/lang/String;
       9: invokevirtual #11                 // Method org/jboss/classfilewriter/code/CodeAttribute.invokestatic:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: aload_0
      13: iconst_0
      14: invokevirtual #12                 // Method storeToLocalVariable:(I)V
      17: return

  void startIfNotOnTop(org.jboss.classfilewriter.code.CodeAttribute, org.jboss.classfilewriter.ClassMethod);
    Code:
       0: aload_1
       1: iconst_0
       2: invokevirtual #13                 // Method org/jboss/classfilewriter/code/CodeAttribute.aload:(I)V
       5: aload_0
       6: getfield      #6                  // Field factory:Lorg/jboss/weld/bean/proxy/ProxyFactory;
       9: aload_2
      10: invokevirtual #14                 // Method org/jboss/classfilewriter/ClassMethod.getClassFile:()Lorg/jboss/classfilewriter/ClassFile;
      13: aload_1
      14: invokevirtual #15                 // Method org/jboss/weld/bean/proxy/ProxyFactory.getMethodHandlerField:(Lorg/jboss/classfilewriter/ClassFile;Lorg/jboss/classfilewriter/code/CodeAttribute;)V
      17: aload_1
      18: invokevirtual #16                 // Method org/jboss/classfilewriter/code/CodeAttribute.dup:()V
      21: aload_1
      22: invokevirtual #17                 // Method org/jboss/classfilewriter/code/CodeAttribute.ifnull:()Lorg/jboss/classfilewriter/code/BranchEnd;
      25: astore_3
      26: aload_1
      27: getstatic     #7                  // Field INTERCEPTION_DECORATION_CONTEXT_CLASS_NAME:Ljava/lang/String;
      30: ldc           #18                 // String startIfNotOnTop
      32: getstatic     #19                 // Field START_INTERCEPTOR_CONTEXT_IF_NOT_ON_TOP_METHOD_SIGNATURE:Ljava/lang/String;
      35: invokevirtual #11                 // Method org/jboss/classfilewriter/code/CodeAttribute.invokestatic:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      38: aload_1
      39: invokevirtual #20                 // Method org/jboss/classfilewriter/code/CodeAttribute.gotoInstruction:()Lorg/jboss/classfilewriter/code/BranchEnd;
      42: astore        4
      44: aload_1
      45: aload_3
      46: invokevirtual #21                 // Method org/jboss/classfilewriter/code/CodeAttribute.branchEnd:(Lorg/jboss/classfilewriter/code/BranchEnd;)V
      49: aload_1
      50: aload         4
      52: invokevirtual #21                 // Method org/jboss/classfilewriter/code/CodeAttribute.branchEnd:(Lorg/jboss/classfilewriter/code/BranchEnd;)V
      55: aload_0
      56: iconst_0
      57: invokevirtual #12                 // Method storeToLocalVariable:(I)V
      60: return

  void withinCatchBlock(org.jboss.classfilewriter.code.CodeAttribute, org.jboss.classfilewriter.ClassMethod);
    Code:
       0: aload_1
       1: ldc           #22                 // class java/lang/Throwable
       3: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #24                 // Method org/jboss/classfilewriter/code/CodeAttribute.exceptionBlockStart:(Ljava/lang/String;)Lorg/jboss/classfilewriter/code/ExceptionHandler;
       9: astore_3
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #25                 // Method doWork:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #26                 // Method endIfStarted:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      22: aload_1
      23: invokevirtual #20                 // Method org/jboss/classfilewriter/code/CodeAttribute.gotoInstruction:()Lorg/jboss/classfilewriter/code/BranchEnd;
      26: astore        4
      28: aload_1
      29: aload_3
      30: invokevirtual #27                 // Method org/jboss/classfilewriter/code/CodeAttribute.exceptionBlockEnd:(Lorg/jboss/classfilewriter/code/ExceptionHandler;)V
      33: aload_1
      34: aload_3
      35: invokevirtual #28                 // Method org/jboss/classfilewriter/code/CodeAttribute.exceptionHandlerStart:(Lorg/jboss/classfilewriter/code/ExceptionHandler;)V
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokevirtual #26                 // Method endIfStarted:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      44: aload_1
      45: invokevirtual #29                 // Method org/jboss/classfilewriter/code/CodeAttribute.athrow:()V
      48: aload_1
      49: aload         4
      51: invokevirtual #21                 // Method org/jboss/classfilewriter/code/CodeAttribute.branchEnd:(Lorg/jboss/classfilewriter/code/BranchEnd;)V
      54: aload_0
      55: aload_1
      56: aload_2
      57: invokevirtual #30                 // Method doReturn:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      60: return

  void endIfStarted(org.jboss.classfilewriter.code.CodeAttribute, org.jboss.classfilewriter.ClassMethod);
    Code:
       0: aload_1
       1: aload_0
       2: iconst_0
       3: invokespecial #31                 // Method getLocalVariableIndex:(I)I
       6: invokevirtual #13                 // Method org/jboss/classfilewriter/code/CodeAttribute.aload:(I)V
       9: aload_1
      10: invokevirtual #16                 // Method org/jboss/classfilewriter/code/CodeAttribute.dup:()V
      13: aload_1
      14: invokevirtual #17                 // Method org/jboss/classfilewriter/code/CodeAttribute.ifnull:()Lorg/jboss/classfilewriter/code/BranchEnd;
      17: astore_3
      18: aload_1
      19: ldc           #32                 // class org/jboss/weld/bean/proxy/InterceptionDecorationContext$Stack
      21: invokevirtual #33                 // Method org/jboss/classfilewriter/code/CodeAttribute.checkcast:(Ljava/lang/Class;)V
      24: aload_1
      25: ldc           #32                 // class org/jboss/weld/bean/proxy/InterceptionDecorationContext$Stack
      27: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: ldc           #34                 // String end
      32: ldc           #35                 // String ()V
      34: invokevirtual #36                 // Method org/jboss/classfilewriter/code/CodeAttribute.invokevirtual:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      37: aload_1
      38: invokevirtual #20                 // Method org/jboss/classfilewriter/code/CodeAttribute.gotoInstruction:()Lorg/jboss/classfilewriter/code/BranchEnd;
      41: astore        4
      43: aload_1
      44: aload_3
      45: invokevirtual #21                 // Method org/jboss/classfilewriter/code/CodeAttribute.branchEnd:(Lorg/jboss/classfilewriter/code/BranchEnd;)V
      48: aload_1
      49: invokevirtual #37                 // Method org/jboss/classfilewriter/code/CodeAttribute.pop:()V
      52: aload_1
      53: aload         4
      55: invokevirtual #21                 // Method org/jboss/classfilewriter/code/CodeAttribute.branchEnd:(Lorg/jboss/classfilewriter/code/BranchEnd;)V
      58: return

  void runStartIfNotEmpty();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field b:Lorg/jboss/classfilewriter/code/CodeAttribute;
       5: aload_0
       6: getfield      #3                  // Field classMethod:Lorg/jboss/classfilewriter/ClassMethod;
       9: invokevirtual #38                 // Method startIfNotEmpty:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      12: aload_0
      13: aload_0
      14: getfield      #5                  // Field b:Lorg/jboss/classfilewriter/code/CodeAttribute;
      17: aload_0
      18: getfield      #3                  // Field classMethod:Lorg/jboss/classfilewriter/ClassMethod;
      21: invokevirtual #39                 // Method withinCatchBlock:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      24: return

  void runStartIfNotOnTop();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field b:Lorg/jboss/classfilewriter/code/CodeAttribute;
       5: aload_0
       6: getfield      #3                  // Field classMethod:Lorg/jboss/classfilewriter/ClassMethod;
       9: invokevirtual #40                 // Method startIfNotOnTop:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      12: aload_0
      13: aload_0
      14: getfield      #5                  // Field b:Lorg/jboss/classfilewriter/code/CodeAttribute;
      17: aload_0
      18: getfield      #3                  // Field classMethod:Lorg/jboss/classfilewriter/ClassMethod;
      21: invokevirtual #39                 // Method withinCatchBlock:(Lorg/jboss/classfilewriter/code/CodeAttribute;Lorg/jboss/classfilewriter/ClassMethod;)V
      24: return

  void storeToLocalVariable(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field b:Lorg/jboss/classfilewriter/code/CodeAttribute;
       4: aload_0
       5: iconst_0
       6: invokespecial #31                 // Method getLocalVariableIndex:(I)I
       9: invokevirtual #41                 // Method org/jboss/classfilewriter/code/CodeAttribute.astore:(I)V
      12: return

  private int getLocalVariableIndex(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field classMethod:Lorg/jboss/classfilewriter/ClassMethod;
       4: invokevirtual #42                 // Method org/jboss/classfilewriter/ClassMethod.isStatic:()Z
       7: ifeq          14
      10: iconst_0
      11: goto          15
      14: iconst_1
      15: istore_2
      16: aload_0
      17: getfield      #3                  // Field classMethod:Lorg/jboss/classfilewriter/ClassMethod;
      20: invokevirtual #43                 // Method org/jboss/classfilewriter/ClassMethod.getParameters:()[Ljava/lang/String;
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     79
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: aload         6
      46: ldc           #44                 // String D
      48: invokevirtual #45                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifne          64
      54: aload         6
      56: ldc           #46                 // String J
      58: invokevirtual #45                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifeq          70
      64: iinc          2, 2
      67: goto          73
      70: iinc          2, 1
      73: iinc          5, 1
      76: goto          31
      79: iload_2
      80: iload_1
      81: iadd
      82: ireturn

  static {};
    Code:
       0: ldc           #47                 // class org/jboss/weld/bean/proxy/InterceptionDecorationContext
       2: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #7                  // Field INTERCEPTION_DECORATION_CONTEXT_CLASS_NAME:Ljava/lang/String;
       8: ldc           #32                 // class org/jboss/weld/bean/proxy/InterceptionDecorationContext$Stack
      10: invokestatic  #48                 // Method org/jboss/classfilewriter/util/DescriptorUtils.makeDescriptor:(Ljava/lang/Class;)Ljava/lang/String;
      13: putstatic     #49                 // Field STACK_DESCRIPTOR:Ljava/lang/String;
      16: new           #50                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #52                 // String ()
      25: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: getstatic     #49                 // Field STACK_DESCRIPTOR:Ljava/lang/String;
      31: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: putstatic     #10                 // Field RETURNS_STACK_DESCRIPTOR:Ljava/lang/String;
      40: iconst_1
      41: anewarray     #55                 // class java/lang/String
      44: dup
      45: iconst_0
      46: ldc           #56                 // class org/jboss/weld/bean/proxy/CombinedInterceptorAndDecoratorStackMethodHandler
      48: invokestatic  #48                 // Method org/jboss/classfilewriter/util/DescriptorUtils.makeDescriptor:(Ljava/lang/Class;)Ljava/lang/String;
      51: aastore
      52: getstatic     #49                 // Field STACK_DESCRIPTOR:Ljava/lang/String;
      55: invokestatic  #57                 // Method org/jboss/classfilewriter/util/DescriptorUtils.methodDescriptor:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      58: putstatic     #19                 // Field START_INTERCEPTOR_CONTEXT_IF_NOT_ON_TOP_METHOD_SIGNATURE:Ljava/lang/String;
      61: return
}
