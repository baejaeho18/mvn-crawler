Compiled from "WeldManager.java"
public interface org.jboss.weld.manager.api.WeldManager extends javax.enterprise.inject.spi.BeanManager,java.io.Serializable {
  public abstract org.jboss.weld.manager.api.WeldManager createActivity();

  public abstract org.jboss.weld.manager.api.WeldManager setCurrent(java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract <T> javax.enterprise.inject.spi.InjectionTarget<T> createInjectionTarget(org.jboss.weld.ejb.spi.EjbDescriptor<T>);

  public abstract <T> javax.enterprise.inject.spi.Bean<T> getBean(org.jboss.weld.ejb.spi.EjbDescriptor<T>);

  public abstract <T> org.jboss.weld.ejb.spi.EjbDescriptor<T> getEjbDescriptor(java.lang.String);

  public abstract org.jboss.weld.bootstrap.api.ServiceRegistry getServices();

  public abstract org.jboss.weld.manager.api.WeldManager getCurrent();

  public abstract <X> javax.enterprise.inject.spi.InjectionTarget<X> fireProcessInjectionTarget(javax.enterprise.inject.spi.AnnotatedType<X>);

  public abstract <X> javax.enterprise.inject.spi.InjectionTarget<X> fireProcessInjectionTarget(javax.enterprise.inject.spi.AnnotatedType<X>, javax.enterprise.inject.spi.InjectionTarget<X>);

  public abstract java.lang.String getId();

  public abstract javax.enterprise.inject.Instance<java.lang.Object> instance();

  public abstract <T> org.jboss.weld.manager.api.WeldInjectionTargetFactory<T> getInjectionTargetFactory(javax.enterprise.inject.spi.AnnotatedType<T>);

  public abstract <T> org.jboss.weld.construction.api.WeldCreationalContext<T> createCreationalContext(javax.enterprise.context.spi.Contextual<T>);

  public abstract javax.enterprise.inject.spi.Bean<?> getPassivationCapableBean(org.jboss.weld.serialization.spi.BeanIdentifier);

  public abstract <T> org.jboss.weld.manager.api.WeldInjectionTargetBuilder<T> createInjectionTargetBuilder(javax.enterprise.inject.spi.AnnotatedType<T>);

  public abstract org.jboss.weld.manager.api.WeldManager unwrap();
}
