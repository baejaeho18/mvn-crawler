Compiled from "ForwardingValueExpression.java"
public abstract class org.jboss.weld.util.el.ForwardingValueExpression extends javax.el.ValueExpression {
  private static final long serialVersionUID;

  public org.jboss.weld.util.el.ForwardingValueExpression();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/el/ValueExpression."<init>":()V
       4: return

  protected abstract javax.el.ValueExpression delegate();

  public java.lang.Class getExpectedType();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: invokevirtual #3                  // Method javax/el/ValueExpression.getExpectedType:()Ljava/lang/Class;
       7: areturn

  public java.lang.Class getType(javax.el.ELContext);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: aload_1
       5: invokevirtual #4                  // Method javax/el/ValueExpression.getType:(Ljavax/el/ELContext;)Ljava/lang/Class;
       8: areturn

  public java.lang.Object getValue(javax.el.ELContext);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: aload_1
       5: invokevirtual #5                  // Method javax/el/ValueExpression.getValue:(Ljavax/el/ELContext;)Ljava/lang/Object;
       8: areturn

  public boolean isReadOnly(javax.el.ELContext);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: aload_1
       5: invokevirtual #6                  // Method javax/el/ValueExpression.isReadOnly:(Ljavax/el/ELContext;)Z
       8: ireturn

  public void setValue(javax.el.ELContext, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: aload_1
       5: aload_2
       6: invokevirtual #7                  // Method javax/el/ValueExpression.setValue:(Ljavax/el/ELContext;Ljava/lang/Object;)V
       9: return

  public java.lang.String getExpressionString();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: invokevirtual #8                  // Method javax/el/ValueExpression.getExpressionString:()Ljava/lang/String;
       7: areturn

  public boolean isLiteralText();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: invokevirtual #9                  // Method javax/el/ValueExpression.isLiteralText:()Z
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     16
       5: aload_0
       6: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       9: aload_1
      10: invokevirtual #10                 // Method javax/el/ValueExpression.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: invokevirtual #11                 // Method javax/el/ValueExpression.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public javax.el.ValueReference getValueReference(javax.el.ELContext);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljavax/el/ValueExpression;
       4: aload_1
       5: invokevirtual #13                 // Method javax/el/ValueExpression.getValueReference:(Ljavax/el/ELContext;)Ljavax/el/ValueReference;
       8: areturn
}
