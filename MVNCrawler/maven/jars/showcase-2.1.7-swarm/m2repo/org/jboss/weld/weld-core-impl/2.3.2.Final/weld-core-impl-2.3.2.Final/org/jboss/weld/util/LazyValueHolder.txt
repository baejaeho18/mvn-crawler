Compiled from "LazyValueHolder.java"
public abstract class org.jboss.weld.util.LazyValueHolder<T> implements org.jboss.weld.util.ValueHolder<T> {
  private volatile transient T value;

  public org.jboss.weld.util.LazyValueHolder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public T get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: aload_0
      12: dup
      13: astore_2
      14: monitorenter
      15: aload_0
      16: getfield      #2                  // Field value:Ljava/lang/Object;
      19: ifnonnull     30
      22: aload_0
      23: aload_0
      24: invokevirtual #3                  // Method computeValue:()Ljava/lang/Object;
      27: putfield      #2                  // Field value:Ljava/lang/Object;
      30: aload_0
      31: getfield      #2                  // Field value:Ljava/lang/Object;
      34: aload_2
      35: monitorexit
      36: areturn
      37: astore_3
      38: aload_2
      39: monitorexit
      40: aload_3
      41: athrow
    Exception table:
       from    to  target type
          15    36    37   any
          37    40    37   any

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field value:Ljava/lang/Object;
       9: aload_1
      10: monitorexit
      11: goto          19
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
      19: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  protected abstract T computeValue();
}
