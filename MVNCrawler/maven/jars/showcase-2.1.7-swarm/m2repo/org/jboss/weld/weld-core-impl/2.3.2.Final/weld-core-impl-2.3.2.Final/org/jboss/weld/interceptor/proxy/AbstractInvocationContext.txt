Compiled from "AbstractInvocationContext.java"
abstract class org.jboss.weld.interceptor.proxy.AbstractInvocationContext implements javax.interceptor.InvocationContext {
  protected java.util.Map<java.lang.String, java.lang.Object> contextData;

  protected final java.lang.reflect.Method method;

  protected java.lang.Object[] parameters;

  protected final java.lang.Object target;

  protected final java.lang.Object timer;

  protected final java.lang.reflect.Constructor<?> constructor;

  protected final java.lang.reflect.Method proceed;

  private static final java.util.Map<java.lang.Class<?>, java.util.Set<java.lang.Class<?>>> WIDENING_TABLE;

  protected org.jboss.weld.interceptor.proxy.AbstractInvocationContext(java.lang.Object, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object[], java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aload         4
       7: aconst_null
       8: aload         5
      10: invokespecial #1                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;)V
      13: return

  protected org.jboss.weld.interceptor.proxy.AbstractInvocationContext(java.lang.Object, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.reflect.Constructor<?>, java.lang.Object[], java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field target:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field method:Ljava/lang/reflect/Method;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field proceed:Ljava/lang/reflect/Method;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field constructor:Ljava/lang/reflect/Constructor;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field parameters:[Ljava/lang/Object;
      31: aload_0
      32: aload         6
      34: putfield      #8                  // Field timer:Ljava/lang/Object;
      37: aload_0
      38: aload         7
      40: putfield      #9                  // Field contextData:Ljava/util/Map;
      43: return

  public java.util.Map<java.lang.String, java.lang.Object> getContextData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field contextData:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #10                 // class java/util/HashMap
      11: dup
      12: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      15: putfield      #9                  // Field contextData:Ljava/util/Map;
      18: aload_0
      19: getfield      #9                  // Field contextData:Ljava/util/Map;
      22: areturn

  public java.lang.reflect.Method getMethod();
    Code:
       0: aload_0
       1: getfield      #4                  // Field method:Ljava/lang/reflect/Method;
       4: areturn

  public java.lang.Object[] getParameters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field method:Ljava/lang/reflect/Method;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #6                  // Field constructor:Ljava/lang/reflect/Constructor;
      11: ifnull        19
      14: aload_0
      15: getfield      #7                  // Field parameters:[Ljava/lang/Object;
      18: areturn
      19: new           #12                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #13                 // String Illegal invocation to getParameters() during lifecycle invocation
      25: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow

  public java.lang.Object getTarget();
    Code:
       0: aload_0
       1: getfield      #3                  // Field target:Ljava/lang/Object;
       4: areturn

  private static boolean isWideningPrimitive(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: getstatic     #15                 // Field WIDENING_TABLE:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       9: ifeq          37
      12: getstatic     #15                 // Field WIDENING_TABLE:Ljava/util/Map;
      15: aload_0
      16: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #18                 // class java/util/Set
      24: aload_1
      25: invokeinterface #19,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public void setParameters(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field method:Ljava/lang/reflect/Method;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #6                  // Field constructor:Ljava/lang/reflect/Constructor;
      11: ifnull        356
      14: aload_1
      15: ifnonnull     22
      18: iconst_0
      19: goto          24
      22: aload_1
      23: arraylength
      24: istore_2
      25: aconst_null
      26: astore_3
      27: aload_0
      28: getfield      #4                  // Field method:Ljava/lang/reflect/Method;
      31: ifnull        45
      34: aload_0
      35: getfield      #4                  // Field method:Ljava/lang/reflect/Method;
      38: invokevirtual #20                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      41: astore_3
      42: goto          53
      45: aload_0
      46: getfield      #6                  // Field constructor:Ljava/lang/reflect/Constructor;
      49: invokevirtual #21                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
      52: astore_3
      53: aload_3
      54: arraylength
      55: iload_2
      56: if_icmpeq     110
      59: new           #22                 // class java/lang/IllegalArgumentException
      62: dup
      63: new           #23                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #25                 // String Wrong number of parameters: method has
      72: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_3
      76: arraylength
      77: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #28                 // String , attempting to set
      82: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iload_2
      86: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      89: aload_1
      90: ifnull        98
      93: ldc           #29                 // String
      95: goto          100
      98: ldc           #30                 // String  (argument was null)
     100: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload_1
     111: ifnull        353
     114: iconst_0
     115: istore        4
     117: iload         4
     119: aload_1
     120: arraylength
     121: if_icmpge     348
     124: aload_3
     125: iload         4
     127: aaload
     128: astore        5
     130: aload_1
     131: iload         4
     133: aaload
     134: ifnull        299
     137: aload_1
     138: iload         4
     140: aaload
     141: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     144: astore        6
     146: aload         6
     148: aload         5
     150: invokevirtual #34                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     153: ifeq          159
     156: goto          348
     159: aload         6
     161: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
     164: ifeq          228
     167: aload         5
     169: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
     172: ifeq          198
     175: aload         6
     177: aload         5
     179: invokestatic  #36                 // Method isWideningPrimitive:(Ljava/lang/Class;Ljava/lang/Class;)Z
     182: ifne          296
     185: aload_0
     186: iload         4
     188: aload         5
     190: aload         6
     192: invokespecial #37                 // Method throwIAE:(ILjava/lang/Class;Ljava/lang/Class;)V
     195: goto          296
     198: aload         6
     200: invokestatic  #38                 // Method com/google/common/primitives/Primitives.wrap:(Ljava/lang/Class;)Ljava/lang/Class;
     203: astore        7
     205: aload         5
     207: aload         7
     209: invokevirtual #39                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     212: ifne          225
     215: aload_0
     216: iload         4
     218: aload         5
     220: aload         6
     222: invokespecial #37                 // Method throwIAE:(ILjava/lang/Class;Ljava/lang/Class;)V
     225: goto          296
     228: aload         5
     230: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
     233: ifeq          276
     236: aload         6
     238: invokestatic  #40                 // Method com/google/common/primitives/Primitives.unwrap:(Ljava/lang/Class;)Ljava/lang/Class;
     241: astore        7
     243: aload         7
     245: aload         5
     247: invokevirtual #34                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     250: ifne          273
     253: aload         7
     255: aload         5
     257: invokestatic  #36                 // Method isWideningPrimitive:(Ljava/lang/Class;Ljava/lang/Class;)Z
     260: ifne          273
     263: aload_0
     264: iload         4
     266: aload         5
     268: aload         6
     270: invokespecial #37                 // Method throwIAE:(ILjava/lang/Class;Ljava/lang/Class;)V
     273: goto          296
     276: aload         5
     278: aload         6
     280: invokevirtual #39                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     283: ifne          296
     286: aload_0
     287: iload         4
     289: aload         5
     291: aload         6
     293: invokespecial #37                 // Method throwIAE:(ILjava/lang/Class;Ljava/lang/Class;)V
     296: goto          342
     299: aload_3
     300: iload         4
     302: aaload
     303: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
     306: ifeq          342
     309: new           #22                 // class java/lang/IllegalArgumentException
     312: dup
     313: new           #23                 // class java/lang/StringBuilder
     316: dup
     317: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     320: ldc           #41                 // String Trying to set a null value on a
     322: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     325: aload_3
     326: iload         4
     328: aaload
     329: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
     332: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     335: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     338: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     341: athrow
     342: iinc          4, 1
     345: goto          117
     348: aload_0
     349: aload_1
     350: putfield      #7                  // Field parameters:[Ljava/lang/Object;
     353: goto          366
     356: new           #12                 // class java/lang/IllegalStateException
     359: dup
     360: ldc           #43                 // String Illegal invocation to setParameters() during lifecycle invocation
     362: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     365: athrow
     366: return

  private void throwIAE(int, java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: new           #22                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #23                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #44                 // String Incompatible parameter type on position:
      13: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #45                 // String  :
      22: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_3
      26: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #47                 // String  (expected type was
      31: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #48                 // String )
      43: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow

  public java.lang.Object getTimer();
    Code:
       0: aload_0
       1: getfield      #8                  // Field timer:Ljava/lang/Object;
       4: areturn

  public java.lang.reflect.Constructor<?> getConstructor();
    Code:
       0: aload_0
       1: getfield      #6                  // Field constructor:Ljava/lang/reflect/Constructor;
       4: areturn

  protected java.lang.reflect.Method getProceed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field proceed:Ljava/lang/reflect/Method;
       4: areturn

  static {};
    Code:
       0: new           #10                 // class java/util/HashMap
       3: dup
       4: invokespecial #11                 // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #49                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      12: getstatic     #50                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      15: getstatic     #51                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      18: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      21: getstatic     #53                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      24: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      27: invokestatic  #55                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      30: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_0
      37: getstatic     #50                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      40: getstatic     #51                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      43: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      46: getstatic     #53                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      49: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      52: invokestatic  #57                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      55: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_0
      62: getstatic     #58                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      65: getstatic     #51                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      68: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      71: getstatic     #53                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      74: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      77: invokestatic  #57                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      80: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload_0
      87: getstatic     #51                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      90: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      93: getstatic     #53                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      96: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      99: invokestatic  #59                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
     102: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: aload_0
     109: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     112: getstatic     #53                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     115: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     118: invokestatic  #60                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
     121: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: aload_0
     128: getstatic     #53                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     131: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     134: invokestatic  #61                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
     137: invokeinterface #56,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     142: pop
     143: aload_0
     144: invokestatic  #62                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     147: putstatic     #15                 // Field WIDENING_TABLE:Ljava/util/Map;
     150: return
}
