Compiled from "AbstractClassBean.java"
public abstract class org.jboss.weld.bean.AbstractClassBean<T> extends org.jboss.weld.bean.AbstractBean<T, java.lang.Class<T>> implements org.jboss.weld.bean.DecorableBean<T> {
  protected final org.jboss.weld.annotated.slim.SlimAnnotatedType<T> annotatedType;

  protected volatile org.jboss.weld.annotated.enhanced.EnhancedAnnotatedType<T> enhancedAnnotatedItem;

  private javax.enterprise.inject.spi.InjectionTarget<T> producer;

  protected org.jboss.weld.bean.AbstractClassBean(javax.enterprise.inject.spi.BeanAttributes<T>, org.jboss.weld.annotated.enhanced.EnhancedAnnotatedType<T>, org.jboss.weld.serialization.spi.BeanIdentifier, org.jboss.weld.manager.BeanManagerImpl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: invokespecial #1                  // Method org/jboss/weld/bean/AbstractBean."<init>":(Ljavax/enterprise/inject/spi/BeanAttributes;Lorg/jboss/weld/serialization/spi/BeanIdentifier;Lorg/jboss/weld/manager/BeanManagerImpl;)V
       8: aload_0
       9: aload_2
      10: putfield      #2                  // Field enhancedAnnotatedItem:Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotatedType;
      13: aload_0
      14: aload_2
      15: invokeinterface #3,  1            // InterfaceMethod org/jboss/weld/annotated/enhanced/EnhancedAnnotatedType.slim:()Lorg/jboss/weld/annotated/slim/SlimAnnotatedType;
      20: putfield      #4                  // Field annotatedType:Lorg/jboss/weld/annotated/slim/SlimAnnotatedType;
      23: aload_0
      24: invokevirtual #5                  // Method initType:()V
      27: return

  public void internalInitialize(org.jboss.weld.bootstrap.BeanDeployerEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/jboss/weld/bean/AbstractBean.internalInitialize:(Lorg/jboss/weld/bootstrap/BeanDeployerEnvironment;)V
       5: aload_0
       6: invokevirtual #7                  // Method checkBeanImplementation:()V
       9: return

  public boolean hasDecorators();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getDecorators:()Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.List<javax.enterprise.inject.spi.Decorator<?>> getDecorators();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isInterceptionCandidate:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #11                 // Field beanManager:Lorg/jboss/weld/manager/BeanManagerImpl;
      11: aload_0
      12: invokevirtual #12                 // Method getTypes:()Ljava/util/Set;
      15: aload_0
      16: invokevirtual #13                 // Method getQualifiers:()Ljava/util/Set;
      19: invokevirtual #14                 // Method org/jboss/weld/manager/BeanManagerImpl.resolveDecorators:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/List;
      22: areturn
      23: invokestatic  #15                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      26: areturn

  protected void initType();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getEnhancedAnnotated:()Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotatedType;
       5: invokeinterface #17,  1           // InterfaceMethod org/jboss/weld/annotated/enhanced/EnhancedAnnotatedType.getJavaClass:()Ljava/lang/Class;
      10: putfield      #18                 // Field type:Ljava/lang/Class;
      13: return

  protected void checkBeanImplementation();
    Code:
       0: return

  protected void preSpecialize();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/jboss/weld/bean/AbstractBean.preSpecialize:()V
       4: aload_0
       5: invokevirtual #20                 // Method getAnnotated:()Lorg/jboss/weld/annotated/slim/SlimAnnotatedType;
       8: invokeinterface #21,  1           // InterfaceMethod org/jboss/weld/annotated/slim/SlimAnnotatedType.getJavaClass:()Ljava/lang/Class;
      13: invokevirtual #22                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      16: astore_1
      17: aload_1
      18: ifnull        30
      21: aload_1
      22: ldc           #23                 // class java/lang/Object
      24: invokevirtual #24                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          40
      30: getstatic     #25                 // Field org/jboss/weld/logging/BeanLogger.LOG:Lorg/jboss/weld/logging/BeanLogger;
      33: aload_0
      34: invokeinterface #26,  2           // InterfaceMethod org/jboss/weld/logging/BeanLogger.specializingBeanMustExtendABean:(Ljava/lang/Object;)Lorg/jboss/weld/exceptions/DefinitionException;
      39: athrow
      40: return

  public org.jboss.weld.annotated.slim.SlimAnnotatedType<T> getAnnotated();
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotatedType:Lorg/jboss/weld/annotated/slim/SlimAnnotatedType;
       4: areturn

  public org.jboss.weld.annotated.enhanced.EnhancedAnnotatedType<T> getEnhancedAnnotated();
    Code:
       0: aload_0
       1: getfield      #2                  // Field enhancedAnnotatedItem:Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotatedType;
       4: invokestatic  #27                 // Method org/jboss/weld/util/Beans.checkEnhancedAnnotatedAvailable:(Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotated;)Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotated;
       7: checkcast     #28                 // class org/jboss/weld/annotated/enhanced/EnhancedAnnotatedType
      10: areturn

  public void cleanupAfterBoot();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field enhancedAnnotatedItem:Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotatedType;
       5: return

  protected abstract boolean isInterceptionCandidate();

  public java.util.Set<javax.enterprise.inject.spi.InjectionPoint> getInjectionPoints();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getProducer:()Ljavax/enterprise/inject/spi/InjectionTarget;
       4: invokeinterface #30,  1           // InterfaceMethod javax/enterprise/inject/spi/InjectionTarget.getInjectionPoints:()Ljava/util/Set;
       9: areturn

  public org.jboss.weld.interceptor.spi.model.InterceptionModel getInterceptors();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isInterceptionCandidate:()Z
       4: ifeq          27
       7: aload_0
       8: getfield      #11                 // Field beanManager:Lorg/jboss/weld/manager/BeanManagerImpl;
      11: invokevirtual #31                 // Method org/jboss/weld/manager/BeanManagerImpl.getInterceptorModelRegistry:()Ljava/util/concurrent/ConcurrentMap;
      14: aload_0
      15: invokevirtual #20                 // Method getAnnotated:()Lorg/jboss/weld/annotated/slim/SlimAnnotatedType;
      18: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #33                 // class org/jboss/weld/interceptor/spi/model/InterceptionModel
      26: areturn
      27: aconst_null
      28: areturn

  public boolean hasInterceptors();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getInterceptors:()Lorg/jboss/weld/interceptor/spi/model/InterceptionModel;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public javax.enterprise.inject.spi.InjectionTarget<T> getProducer();
    Code:
       0: aload_0
       1: getfield      #35                 // Field producer:Ljavax/enterprise/inject/spi/InjectionTarget;
       4: areturn

  public void setProducer(javax.enterprise.inject.spi.InjectionTarget<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field producer:Ljavax/enterprise/inject/spi/InjectionTarget;
       5: return

  public javax.enterprise.inject.spi.InjectionTarget<T> getInjectionTarget();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getProducer:()Ljavax/enterprise/inject/spi/InjectionTarget;
       4: areturn

  public void setInjectionTarget(javax.enterprise.inject.spi.InjectionTarget<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method setProducer:(Ljavax/enterprise/inject/spi/InjectionTarget;)V
       5: return

  public void setProducer(javax.enterprise.inject.spi.Producer<T>);
    Code:
       0: new           #37                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #38                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #40                 // String Class bean
      13: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #43                 // String  requires an InjectionTarget but a Producer was provided instead
      22: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow

  public javax.enterprise.inject.spi.Producer getProducer();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getProducer:()Ljavax/enterprise/inject/spi/InjectionTarget;
       4: areturn

  public org.jboss.weld.annotated.enhanced.EnhancedAnnotated getEnhancedAnnotated();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getEnhancedAnnotated:()Lorg/jboss/weld/annotated/enhanced/EnhancedAnnotatedType;
       4: areturn

  public javax.enterprise.inject.spi.Annotated getAnnotated();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getAnnotated:()Lorg/jboss/weld/annotated/slim/SlimAnnotatedType;
       4: areturn
}
