Compiled from "WriterOutputStream.java"
public class org.jboss.stdio.WriterOutputStream extends java.io.OutputStream {
  private final java.io.Writer writer;

  private final java.nio.charset.CharsetDecoder decoder;

  private final java.nio.ByteBuffer inputBuffer;

  private final java.nio.CharBuffer outputBuffer;

  public org.jboss.stdio.WriterOutputStream(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: invokespecial #2                  // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;)V
       8: return

  public org.jboss.stdio.WriterOutputStream(java.io.Writer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: invokespecial #2                  // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;)V
       9: return

  public org.jboss.stdio.WriterOutputStream(java.io.Writer, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #4                  // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
       6: invokespecial #5                  // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V
       9: return

  public org.jboss.stdio.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field writer:Ljava/io/Writer;
       9: aload_0
      10: aload_2
      11: putfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      14: aload_2
      15: getstatic     #9                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      18: invokevirtual #10                 // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      21: pop
      22: aload_2
      23: getstatic     #9                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
      26: invokevirtual #11                 // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      29: pop
      30: aload_2
      31: ldc           #12                 // String ?
      33: invokevirtual #13                 // Method java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;
      36: pop
      37: aload_0
      38: sipush        256
      41: invokestatic  #14                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      44: putfield      #15                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      47: aload_0
      48: sipush        256
      51: invokestatic  #16                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      54: putfield      #17                 // Field outputBuffer:Ljava/nio/CharBuffer;
      57: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
       4: invokestatic  #18                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: getfield      #15                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      22: astore_3
      23: aload_3
      24: invokevirtual #19                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      27: ifne          34
      30: aload_0
      31: invokespecial #20                 // Method finish:()V
      34: aload_3
      35: iload_1
      36: i2b
      37: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      40: pop
      41: aload_2
      42: monitorexit
      43: goto          53
      46: astore        4
      48: aload_2
      49: monitorexit
      50: aload         4
      52: athrow
      53: return
    Exception table:
       from    to  target type
          18    43    46   any
          46    50    46   any

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
       4: invokestatic  #18                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      15: dup
      16: astore        4
      18: monitorenter
      19: aload_0
      20: getfield      #15                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      23: invokevirtual #19                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      26: ifne          33
      29: aload_0
      30: invokespecial #20                 // Method finish:()V
      33: aload_0
      34: getfield      #15                 // Field inputBuffer:Ljava/nio/ByteBuffer;
      37: astore        5
      39: aload         5
      41: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      44: istore        6
      46: iload         6
      48: iload_3
      49: if_icmpgt     57
      52: iload         6
      54: goto          58
      57: iload_3
      58: istore        7
      60: aload         5
      62: aload_1
      63: iload_2
      64: iload         7
      66: invokevirtual #23                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      69: pop
      70: iload_3
      71: iload         7
      73: isub
      74: istore_3
      75: iload_2
      76: iload         7
      78: iadd
      79: istore_2
      80: iload_3
      81: ifne          88
      84: aload         4
      86: monitorexit
      87: return
      88: aload_0
      89: invokespecial #20                 // Method finish:()V
      92: goto          33
      95: astore        8
      97: aload         4
      99: monitorexit
     100: aload         8
     102: athrow
    Exception table:
       from    to  target type
          19    87    95   any
          88   100    95   any

  private void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field outputBuffer:Ljava/nio/CharBuffer;
       4: astore_1
       5: aload_0
       6: getfield      #15                 // Field inputBuffer:Ljava/nio/ByteBuffer;
       9: astore_2
      10: aload_2
      11: invokevirtual #24                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      14: pop
      15: aload_2
      16: invokevirtual #19                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifeq          132
      22: aload_0
      23: getfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      26: aload_2
      27: aload_1
      28: iconst_0
      29: invokevirtual #25                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
      32: astore_3
      33: aload_3
      34: invokevirtual #26                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
      37: ifeq          53
      40: aload_1
      41: invokevirtual #27                 // Method java/nio/CharBuffer.position:()I
      44: ifne          53
      47: aload_2
      48: invokevirtual #28                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      51: pop
      52: return
      53: aload_1
      54: invokevirtual #29                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      57: pop
      58: iconst_0
      59: istore        4
      61: aload_0
      62: getfield      #7                  // Field writer:Ljava/io/Writer;
      65: aload_1
      66: invokevirtual #30                 // Method java/nio/CharBuffer.array:()[C
      69: aload_1
      70: invokevirtual #31                 // Method java/nio/CharBuffer.arrayOffset:()I
      73: aload_1
      74: invokevirtual #32                 // Method java/nio/CharBuffer.remaining:()I
      77: invokevirtual #33                 // Method java/io/Writer.write:([CII)V
      80: iconst_1
      81: istore        4
      83: iload         4
      85: ifne          111
      88: aload_2
      89: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      92: pop
      93: goto          111
      96: astore        5
      98: iload         4
     100: ifne          108
     103: aload_2
     104: invokevirtual #34                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     107: pop
     108: aload         5
     110: athrow
     111: aload_1
     112: invokevirtual #35                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
     115: pop
     116: goto          129
     119: astore        6
     121: aload_1
     122: invokevirtual #35                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
     125: pop
     126: aload         6
     128: athrow
     129: goto          15
     132: aload_2
     133: invokevirtual #28                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     136: pop
     137: goto          150
     140: astore        7
     142: aload_2
     143: invokevirtual #28                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     146: pop
     147: aload         7
     149: athrow
     150: return
    Exception table:
       from    to  target type
          61    83    96   any
          96    98    96   any
          58   111   119   any
         119   121   119   any
          15    47   140   any
          53   132   140   any
         140   142   140   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
       4: invokestatic  #18                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #8                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: invokespecial #20                 // Method finish:()V
      22: aload_0
      23: getfield      #7                  // Field writer:Ljava/io/Writer;
      26: invokevirtual #36                 // Method java/io/Writer.flush:()V
      29: aload_1
      30: monitorexit
      31: goto          39
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
      39: return
    Exception table:
       from    to  target type
          18    31    34   any
          34    37    34   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method flush:()V
       4: return
}
