Compiled from "RecoveryOnlyEJBXAResource.java"
class org.jboss.ejb.client.RecoveryOnlyEJBXAResource implements javax.transaction.xa.XAResource {
  private final org.jboss.ejb.client.EJBReceiverContext receiverContext;

  private final java.lang.String transactionOriginNodeIdentifier;

  org.jboss.ejb.client.RecoveryOnlyEJBXAResource(java.lang.String, org.jboss.ejb.client.EJBReceiverContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field transactionOriginNodeIdentifier:Ljava/lang/String;
      14: return

  public void commit(javax.transaction.xa.Xid, boolean) throws javax.transaction.xa.XAException;
    Code:
       0: new           #4                  // class org/jboss/ejb/client/XidTransactionID
       3: dup
       4: aload_1
       5: invokespecial #5                  // Method org/jboss/ejb/client/XidTransactionID."<init>":(Ljavax/transaction/xa/Xid;)V
       8: astore_3
       9: aload_0
      10: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      13: invokevirtual #6                  // Method org/jboss/ejb/client/EJBReceiverContext.getReceiver:()Lorg/jboss/ejb/client/EJBReceiver;
      16: astore        4
      18: getstatic     #7                  // Field org/jboss/ejb/client/Logs.TXN:Lorg/jboss/ejb/client/Logs;
      21: ldc           #8                  // String Sending commit request for Xid %s to EJB receiver with node name %s during recovery. One phase? %s
      23: aload_1
      24: aload         4
      26: invokevirtual #9                  // Method org/jboss/ejb/client/EJBReceiver.getNodeName:()Ljava/lang/String;
      29: iload_2
      30: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      33: invokeinterface #11,  5           // InterfaceMethod org/jboss/ejb/client/Logs.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload         4
      40: aload_0
      41: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      44: aload_3
      45: iload_2
      46: invokevirtual #12                 // Method org/jboss/ejb/client/EJBReceiver.sendCommit:(Lorg/jboss/ejb/client/EJBReceiverContext;Lorg/jboss/ejb/client/TransactionID;Z)V
      49: return

  public void end(javax.transaction.xa.Xid, int) throws javax.transaction.xa.XAException;
    Code:
       0: getstatic     #7                  // Field org/jboss/ejb/client/Logs.TXN:Lorg/jboss/ejb/client/Logs;
       3: ldc           #13                 // String Ignoring end request on XAResource %s since this XAResource is only meant for transaction recovery
       5: aload_0
       6: invokeinterface #14,  3           // InterfaceMethod org/jboss/ejb/client/Logs.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      11: return

  public void forget(javax.transaction.xa.Xid) throws javax.transaction.xa.XAException;
    Code:
       0: new           #4                  // class org/jboss/ejb/client/XidTransactionID
       3: dup
       4: aload_1
       5: invokespecial #5                  // Method org/jboss/ejb/client/XidTransactionID."<init>":(Ljavax/transaction/xa/Xid;)V
       8: astore_2
       9: aload_0
      10: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      13: invokevirtual #6                  // Method org/jboss/ejb/client/EJBReceiverContext.getReceiver:()Lorg/jboss/ejb/client/EJBReceiver;
      16: astore_3
      17: getstatic     #7                  // Field org/jboss/ejb/client/Logs.TXN:Lorg/jboss/ejb/client/Logs;
      20: ldc           #15                 // String Sending forget request for Xid %s to EJB receiver with node name %s during recovery
      22: aload_1
      23: aload_3
      24: invokevirtual #9                  // Method org/jboss/ejb/client/EJBReceiver.getNodeName:()Ljava/lang/String;
      27: invokeinterface #16,  4           // InterfaceMethod org/jboss/ejb/client/Logs.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_3
      33: aload_0
      34: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      37: aload_2
      38: invokevirtual #17                 // Method org/jboss/ejb/client/EJBReceiver.sendForget:(Lorg/jboss/ejb/client/EJBReceiverContext;Lorg/jboss/ejb/client/TransactionID;)V
      41: return

  public int getTransactionTimeout() throws javax.transaction.xa.XAException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isSameRM(javax.transaction.xa.XAResource) throws javax.transaction.xa.XAException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      13: invokestatic  #20                 // Method org/jboss/ejb/client/EJBClientManagedTransactionContext.isEJBXAResourceClass:(Ljava/lang/String;)Z
      16: istore_2
      17: iload_2
      18: ifeq          67
      21: aload_1
      22: instanceof    #21                 // class org/jboss/ejb/client/RecoveryOnlyEJBXAResource
      25: istore_2
      26: iload_2
      27: ifeq          67
      30: aload_0
      31: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      34: invokevirtual #6                  // Method org/jboss/ejb/client/EJBReceiverContext.getReceiver:()Lorg/jboss/ejb/client/EJBReceiver;
      37: astore_3
      38: aload_1
      39: checkcast     #21                 // class org/jboss/ejb/client/RecoveryOnlyEJBXAResource
      42: astore        4
      44: aload         4
      46: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      49: invokevirtual #6                  // Method org/jboss/ejb/client/EJBReceiverContext.getReceiver:()Lorg/jboss/ejb/client/EJBReceiver;
      52: astore        5
      54: aload_3
      55: invokevirtual #9                  // Method org/jboss/ejb/client/EJBReceiver.getNodeName:()Ljava/lang/String;
      58: aload         5
      60: invokevirtual #9                  // Method org/jboss/ejb/client/EJBReceiver.getNodeName:()Ljava/lang/String;
      63: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: istore_2
      67: iload_2
      68: ireturn

  public int prepare(javax.transaction.xa.Xid) throws javax.transaction.xa.XAException;
    Code:
       0: getstatic     #7                  // Field org/jboss/ejb/client/Logs.TXN:Lorg/jboss/ejb/client/Logs;
       3: ldc           #23                 // String Called prepare on recovery-only resource for xid %s
       5: aload_0
       6: aload_1
       7: invokeinterface #16,  4           // InterfaceMethod org/jboss/ejb/client/Logs.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: new           #24                 // class javax/transaction/xa/XAException
      15: dup
      16: bipush        -3
      18: invokespecial #25                 // Method javax/transaction/xa/XAException."<init>":(I)V
      21: athrow

  public javax.transaction.xa.Xid[] recover(int) throws javax.transaction.xa.XAException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
       4: invokevirtual #6                  // Method org/jboss/ejb/client/EJBReceiverContext.getReceiver:()Lorg/jboss/ejb/client/EJBReceiver;
       7: astore_2
       8: getstatic     #7                  // Field org/jboss/ejb/client/Logs.TXN:Lorg/jboss/ejb/client/Logs;
      11: ldc           #26                 // String Send recover request for transaction origin node identifier %s to EJB receiver with node name %s
      13: aload_0
      14: getfield      #3                  // Field transactionOriginNodeIdentifier:Ljava/lang/String;
      17: aload_2
      18: invokevirtual #9                  // Method org/jboss/ejb/client/EJBReceiver.getNodeName:()Ljava/lang/String;
      21: invokeinterface #16,  4           // InterfaceMethod org/jboss/ejb/client/Logs.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      26: aload_2
      27: aload_0
      28: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      31: aload_0
      32: getfield      #3                  // Field transactionOriginNodeIdentifier:Ljava/lang/String;
      35: iload_1
      36: invokevirtual #27                 // Method org/jboss/ejb/client/EJBReceiver.sendRecover:(Lorg/jboss/ejb/client/EJBReceiverContext;Ljava/lang/String;I)[Ljavax/transaction/xa/Xid;
      39: areturn

  public void rollback(javax.transaction.xa.Xid) throws javax.transaction.xa.XAException;
    Code:
       0: new           #4                  // class org/jboss/ejb/client/XidTransactionID
       3: dup
       4: aload_1
       5: invokespecial #5                  // Method org/jboss/ejb/client/XidTransactionID."<init>":(Ljavax/transaction/xa/Xid;)V
       8: astore_2
       9: aload_0
      10: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      13: invokevirtual #6                  // Method org/jboss/ejb/client/EJBReceiverContext.getReceiver:()Lorg/jboss/ejb/client/EJBReceiver;
      16: astore_3
      17: getstatic     #7                  // Field org/jboss/ejb/client/Logs.TXN:Lorg/jboss/ejb/client/Logs;
      20: ldc           #28                 // String Sending rollback request for Xid %s to EJB receiver with node name %s during recovery
      22: aload_1
      23: aload_3
      24: invokevirtual #9                  // Method org/jboss/ejb/client/EJBReceiver.getNodeName:()Ljava/lang/String;
      27: invokeinterface #16,  4           // InterfaceMethod org/jboss/ejb/client/Logs.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_3
      33: aload_0
      34: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      37: aload_2
      38: invokevirtual #29                 // Method org/jboss/ejb/client/EJBReceiver.sendRollback:(Lorg/jboss/ejb/client/EJBReceiverContext;Lorg/jboss/ejb/client/TransactionID;)V
      41: return

  public boolean setTransactionTimeout(int) throws javax.transaction.xa.XAException;
    Code:
       0: iconst_0
       1: ireturn

  public void start(javax.transaction.xa.Xid, int) throws javax.transaction.xa.XAException;
    Code:
       0: getstatic     #7                  // Field org/jboss/ejb/client/Logs.TXN:Lorg/jboss/ejb/client/Logs;
       3: ldc           #30                 // String Ignoring start request on XAResource %s since this XAResource is only meant for transaction recovery
       5: aload_0
       6: invokeinterface #14,  3           // InterfaceMethod org/jboss/ejb/client/Logs.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      11: return

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #33                 // String RecoveryOnlyEJBXAResource
      11: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: ldc           #35                 // String {receiverContext=
      18: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #2                  // Field receiverContext:Lorg/jboss/ejb/client/EJBReceiverContext;
      25: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: ldc           #37                 // String , transactionOriginNodeIdentifier=\'
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #3                  // Field transactionOriginNodeIdentifier:Ljava/lang/String;
      39: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: bipush        39
      44: invokevirtual #38                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      47: pop
      48: aload_1
      49: bipush        125
      51: invokevirtual #38                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn
}
