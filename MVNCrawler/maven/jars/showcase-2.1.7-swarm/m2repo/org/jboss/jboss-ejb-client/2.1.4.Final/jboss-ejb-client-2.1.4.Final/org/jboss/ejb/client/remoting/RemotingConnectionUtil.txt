Compiled from "RemotingConnectionUtil.java"
public class org.jboss.ejb.client.remoting.RemotingConnectionUtil {
  private static final java.lang.String JBOSS_SASL_LOCAL_USER_QUIET_AUTH_PROP;

  public org.jboss.ejb.client.remoting.RemotingConnectionUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.xnio.OptionMap addSilentLocalAuthOptionsIfApplicable(javax.security.auth.callback.CallbackHandler, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: instanceof    #2                  // class org/jboss/ejb/client/DefaultCallbackHandler
       4: ifne          9
       7: aload_1
       8: areturn
       9: aload_1
      10: getstatic     #3                  // Field org/xnio/Options.SASL_PROPERTIES:Lorg/xnio/Option;
      13: invokevirtual #4                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      16: checkcast     #5                  // class org/xnio/Sequence
      19: astore_2
      20: aload_2
      21: ifnull        81
      24: aload_2
      25: invokevirtual #6                  // Method org/xnio/Sequence.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          67
      38: aload_3
      39: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #9                  // class org/xnio/Property
      47: astore        4
      49: aload         4
      51: invokevirtual #10                 // Method org/xnio/Property.getKey:()Ljava/lang/String;
      54: ldc           #11                 // String jboss.sasl.local-user.quiet-auth
      56: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifeq          64
      62: aload_1
      63: areturn
      64: goto          29
      67: aload_2
      68: ldc           #11                 // String jboss.sasl.local-user.quiet-auth
      70: ldc           #13                 // String true
      72: invokestatic  #14                 // Method org/xnio/Property.of:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/Property;
      75: invokevirtual #15                 // Method org/xnio/Sequence.add:(Ljava/lang/Object;)Z
      78: pop
      79: aload_1
      80: areturn
      81: invokestatic  #16                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      84: aload_1
      85: invokevirtual #17                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
      88: astore_3
      89: aload_3
      90: getstatic     #3                  // Field org/xnio/Options.SASL_PROPERTIES:Lorg/xnio/Option;
      93: iconst_1
      94: anewarray     #9                  // class org/xnio/Property
      97: dup
      98: iconst_0
      99: ldc           #11                 // String jboss.sasl.local-user.quiet-auth
     101: ldc           #13                 // String true
     103: invokestatic  #14                 // Method org/xnio/Property.of:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/Property;
     106: aastore
     107: invokestatic  #18                 // Method org/xnio/Sequence.of:([Ljava/lang/Object;)Lorg/xnio/Sequence;
     110: invokevirtual #19                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
     113: pop
     114: aload_3
     115: invokevirtual #20                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     118: areturn
}
