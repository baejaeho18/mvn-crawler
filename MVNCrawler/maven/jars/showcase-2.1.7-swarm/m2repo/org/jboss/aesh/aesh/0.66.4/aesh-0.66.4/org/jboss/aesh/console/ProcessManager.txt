Compiled from "ProcessManager.java"
public class org.jboss.aesh.console.ProcessManager {
  private org.jboss.aesh.console.Console console;

  private volatile java.util.Map<java.lang.Integer, org.jboss.aesh.console.Process> processes;

  private java.util.concurrent.ExecutorService executorService;

  private boolean doLogging;

  private int pidCounter;

  private int foregroundProcess;

  private java.util.Stack<org.jboss.aesh.console.Process> backgroundStack;

  private static final java.util.logging.Logger LOGGER;

  public org.jboss.aesh.console.ProcessManager(org.jboss.aesh.console.Console, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field pidCounter:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field foregroundProcess:I
      14: aload_0
      15: new           #4                  // class java/util/Stack
      18: dup
      19: invokespecial #5                  // Method java/util/Stack."<init>":()V
      22: putfield      #6                  // Field backgroundStack:Ljava/util/Stack;
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field console:Lorg/jboss/aesh/console/Console;
      30: aload_0
      31: iload_2
      32: putfield      #8                  // Field doLogging:Z
      35: aload_0
      36: new           #9                  // class java/util/HashMap
      39: dup
      40: bipush        20
      42: invokespecial #10                 // Method java/util/HashMap."<init>":(I)V
      45: putfield      #11                 // Field processes:Ljava/util/Map;
      48: aload_0
      49: invokestatic  #12                 // Method java/util/concurrent/Executors.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;
      52: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      55: return

  public void startNewProcess(org.jboss.aesh.console.ConsoleCallback, org.jboss.aesh.console.ConsoleOperation);
    Code:
       0: new           #14                 // class org/jboss/aesh/console/AeshProcess
       3: dup
       4: aload_0
       5: dup
       6: getfield      #2                  // Field pidCounter:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #2                  // Field pidCounter:I
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #15                 // Method org/jboss/aesh/console/AeshProcess."<init>":(ILorg/jboss/aesh/console/ProcessManager;Lorg/jboss/aesh/console/ConsoleCallback;Lorg/jboss/aesh/console/ConsoleOperation;)V
      21: astore_3
      22: aload_0
      23: getfield      #8                  // Field doLogging:Z
      26: ifeq          63
      29: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      32: new           #17                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #19                 // String starting a new process:
      41: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_3
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #22                 // String , consoleOperation:
      50: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokevirtual #24                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
      63: aload_0
      64: invokespecial #25                 // Method getCurrentForegroundProcess:()I
      67: istore        4
      69: iload         4
      71: ifle          112
      74: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      77: new           #17                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #26                 // String Cannot start new process since process:
      86: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: iload         4
      92: invokespecial #27                 // Method getProcessByPid:(I)Lorg/jboss/aesh/console/Process;
      95: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: ldc           #28                 // String  is running in the foreground.
     100: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokevirtual #29                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
     109: goto          148
     112: aload_0
     113: getfield      #11                 // Field processes:Ljava/util/Map;
     116: aload_3
     117: invokevirtual #30                 // Method org/jboss/aesh/console/AeshProcess.getPID:()I
     120: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     123: aload_3
     124: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_0
     131: aload_3
     132: invokevirtual #30                 // Method org/jboss/aesh/console/AeshProcess.getPID:()I
     135: putfield      #3                  // Field foregroundProcess:I
     138: aload_0
     139: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     142: aload_3
     143: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     148: return

  private int getCurrentForegroundProcess();
    Code:
       0: aload_0
       1: getfield      #3                  // Field foregroundProcess:I
       4: ireturn

  private org.jboss.aesh.console.Process getProcessByPid(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field processes:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #35                 // class org/jboss/aesh/console/Process
      16: areturn

  public org.jboss.aesh.console.command.CommandOperation getInput(int) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field foregroundProcess:I
       4: iload_1
       5: if_icmpne     16
       8: aload_0
       9: getfield      #7                  // Field console:Lorg/jboss/aesh/console/Console;
      12: invokevirtual #36                 // Method org/jboss/aesh/console/Console.getInput:()Lorg/jboss/aesh/console/command/CommandOperation;
      15: areturn
      16: new           #37                 // class org/jboss/aesh/console/command/CommandOperation
      19: dup
      20: getstatic     #38                 // Field org/jboss/aesh/terminal/Key.UNKNOWN:Lorg/jboss/aesh/terminal/Key;
      23: iconst_0
      24: newarray       int
      26: invokespecial #39                 // Method org/jboss/aesh/console/command/CommandOperation."<init>":(Lorg/jboss/aesh/terminal/Key;[I)V
      29: areturn

  public java.lang.String getInputLine(int) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field foregroundProcess:I
       4: iload_1
       5: if_icmpne     16
       8: aload_0
       9: getfield      #7                  // Field console:Lorg/jboss/aesh/console/Console;
      12: invokevirtual #40                 // Method org/jboss/aesh/console/Console.getInputLine:()Ljava/lang/String;
      15: areturn
      16: ldc           #41                 // String
      18: areturn

  public void putProcessInBackground(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field foregroundProcess:I
       4: iload_1
       5: if_icmpne     53
       8: aload_0
       9: getfield      #8                  // Field doLogging:Z
      12: ifeq          45
      15: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      18: new           #17                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #42                 // String Putting process:
      27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #44                 // String  into the background.
      36: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #24                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
      45: aload_0
      46: iconst_m1
      47: putfield      #3                  // Field foregroundProcess:I
      50: goto          125
      53: aload_0
      54: iload_1
      55: invokespecial #27                 // Method getProcessByPid:(I)Lorg/jboss/aesh/console/Process;
      58: ifnull        125
      61: aload_0
      62: iload_1
      63: invokespecial #27                 // Method getProcessByPid:(I)Lorg/jboss/aesh/console/Process;
      66: astore_2
      67: aload_2
      68: invokeinterface #45,  1           // InterfaceMethod org/jboss/aesh/console/Process.getStatus:()Lorg/jboss/aesh/console/Process$Status;
      73: getstatic     #46                 // Field org/jboss/aesh/console/Process$Status.FOREGROUND:Lorg/jboss/aesh/console/Process$Status;
      76: if_acmpne     125
      79: aload_0
      80: getfield      #8                  // Field doLogging:Z
      83: ifeq          116
      86: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      89: new           #17                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #47                 // String We have another process in the foreground:
      98: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_2
     102: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: ldc           #48                 // String , this should not happen!
     107: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokevirtual #29                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
     116: aload_2
     117: getstatic     #49                 // Field org/jboss/aesh/console/Process$Status.BACKGROUND:Lorg/jboss/aesh/console/Process$Status;
     120: invokeinterface #50,  2           // InterfaceMethod org/jboss/aesh/console/Process.updateStatus:(Lorg/jboss/aesh/console/Process$Status;)V
     125: return

  public void putProcessInForeground(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field foregroundProcess:I
       4: iconst_m1
       5: if_icmpne     40
       8: aload_0
       9: iload_1
      10: invokespecial #27                 // Method getProcessByPid:(I)Lorg/jboss/aesh/console/Process;
      13: astore_2
      14: aload_2
      15: ifnull        37
      18: aload_2
      19: getstatic     #46                 // Field org/jboss/aesh/console/Process$Status.FOREGROUND:Lorg/jboss/aesh/console/Process$Status;
      22: invokeinterface #50,  2           // InterfaceMethod org/jboss/aesh/console/Process.updateStatus:(Lorg/jboss/aesh/console/Process$Status;)V
      27: aload_0
      28: aload_2
      29: invokeinterface #51,  1           // InterfaceMethod org/jboss/aesh/console/Process.getPID:()I
      34: putfield      #3                  // Field foregroundProcess:I
      37: goto          117
      40: aload_0
      41: iload_1
      42: invokespecial #27                 // Method getProcessByPid:(I)Lorg/jboss/aesh/console/Process;
      45: astore_2
      46: aload_2
      47: ifnull        63
      50: aload_0
      51: getfield      #6                  // Field backgroundStack:Ljava/util/Stack;
      54: aload_0
      55: iload_1
      56: invokespecial #27                 // Method getProcessByPid:(I)Lorg/jboss/aesh/console/Process;
      59: invokevirtual #52                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: getfield      #8                  // Field doLogging:Z
      67: ifeq          117
      70: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      73: new           #17                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #53                 // String We already have a process in the foreground:
      82: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: getfield      #3                  // Field foregroundProcess:I
      89: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: ldc           #54                 // String , pushing:
      94: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: iload_1
      98: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     101: ldc           #55                 // String  to background stack.
     103: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: ldc           #56                 // String Will be pulled when current process ends.
     108: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokevirtual #24                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
     117: return

  public org.jboss.aesh.console.Process getCurrentProcess();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field foregroundProcess:I
       5: invokespecial #27                 // Method getProcessByPid:(I)Lorg/jboss/aesh/console/Process;
       8: areturn

  public boolean hasForegroundProcess();
    Code:
       0: aload_0
       1: getfield      #3                  // Field foregroundProcess:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasProcesses();
    Code:
       0: aload_0
       1: getfield      #11                 // Field processes:Ljava/util/Map;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void processHaveFinished(org.jboss.aesh.console.Process);
    Code:
       0: aload_0
       1: getfield      #8                  // Field doLogging:Z
       4: ifeq          32
       7: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      10: new           #17                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #58                 // String process has finished:
      19: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #24                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
      32: aload_0
      33: getfield      #11                 // Field processes:Ljava/util/Map;
      36: aload_1
      37: invokeinterface #51,  1           // InterfaceMethod org/jboss/aesh/console/Process.getPID:()I
      42: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: invokeinterface #59,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_1
      52: invokeinterface #45,  1           // InterfaceMethod org/jboss/aesh/console/Process.getStatus:()Lorg/jboss/aesh/console/Process$Status;
      57: getstatic     #46                 // Field org/jboss/aesh/console/Process$Status.FOREGROUND:Lorg/jboss/aesh/console/Process$Status;
      60: if_acmpne     100
      63: aload_0
      64: getfield      #6                  // Field backgroundStack:Ljava/util/Stack;
      67: invokevirtual #60                 // Method java/util/Stack.isEmpty:()Z
      70: ifeq          81
      73: aload_0
      74: iconst_m1
      75: putfield      #3                  // Field foregroundProcess:I
      78: goto          100
      81: aload_0
      82: aload_0
      83: getfield      #6                  // Field backgroundStack:Ljava/util/Stack;
      86: invokevirtual #61                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      89: checkcast     #35                 // class org/jboss/aesh/console/Process
      92: invokeinterface #51,  1           // InterfaceMethod org/jboss/aesh/console/Process.getPID:()I
      97: putfield      #3                  // Field foregroundProcess:I
     100: aload_0
     101: getfield      #7                  // Field console:Lorg/jboss/aesh/console/Console;
     104: aload_1
     105: invokevirtual #62                 // Method org/jboss/aesh/console/Console.currentProcessFinished:(Lorg/jboss/aesh/console/Process;)V
     108: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field doLogging:Z
       4: ifeq          40
       7: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      10: new           #17                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #63                 // String number of processes in list:
      19: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #11                 // Field processes:Ljava/util/Map;
      26: invokeinterface #64,  1           // InterfaceMethod java/util/Map.size:()I
      31: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #24                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #11                 // Field processes:Ljava/util/Map;
      44: invokeinterface #65,  1           // InterfaceMethod java/util/Map.clear:()V
      49: aload_0
      50: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      53: invokeinterface #66,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      58: aload_0
      59: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      62: ldc2_w        #67                 // long 5l
      65: getstatic     #69                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      68: invokeinterface #70,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      73: pop
      74: aload_0
      75: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      78: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
      83: ifeq          101
      86: aload_0
      87: getfield      #8                  // Field doLogging:Z
      90: ifeq          101
      93: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      96: ldc           #72                 // String Processes are cleaned up and finished...
      98: invokevirtual #24                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
     101: aload_0
     102: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
     105: invokeinterface #73,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
     110: ifeq          128
     113: aload_0
     114: getfield      #8                  // Field doLogging:Z
     117: ifeq          128
     120: getstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
     123: ldc           #74                 // String Executor isShutdown..
     125: invokevirtual #24                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
     128: goto          136
     131: astore_1
     132: aload_1
     133: invokevirtual #76                 // Method java/lang/InterruptedException.printStackTrace:()V
     136: return
    Exception table:
       from    to  target type
           0   128   131   Class java/lang/InterruptedException

  static {};
    Code:
       0: ldc           #77                 // class org/jboss/aesh/console/ProcessManager
       2: invokevirtual #78                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #79                 // Method org/jboss/aesh/util/LoggerUtil.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #16                 // Field LOGGER:Ljava/util/logging/Logger;
      11: return
}
