Compiled from "ClientExecutorManager.java"
class org.jboss.remotingjmx.protocol.v2.ClientExecutorManager {
  private static final java.lang.String REMOTING_JMX;

  private static final java.lang.String CLIENT_THREAD;

  private boolean manageExecutor;

  private final java.util.concurrent.Executor executor;

  org.jboss.remotingjmx.protocol.v2.ClientExecutorManager(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field manageExecutor:Z
       9: aload_1
      10: ifnull        50
      13: aload_1
      14: ldc_w         #3                  // class java/util/concurrent/Executor
      17: invokevirtual #4                  // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokeinterface #5,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      25: ifeq          50
      28: aload_0
      29: aload_1
      30: ldc_w         #3                  // class java/util/concurrent/Executor
      33: invokevirtual #4                  // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #3                  // class java/util/concurrent/Executor
      44: putfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
      47: goto          70
      50: aload_0
      51: new           #8                  // class org/jboss/remotingjmx/protocol/v2/ClientExecutorManager$1
      54: dup
      55: aload_0
      56: invokespecial #9                  // Method org/jboss/remotingjmx/protocol/v2/ClientExecutorManager$1."<init>":(Lorg/jboss/remotingjmx/protocol/v2/ClientExecutorManager;)V
      59: invokestatic  #10                 // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      62: putfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
      65: aload_0
      66: iconst_1
      67: putfield      #2                  // Field manageExecutor:Z
      70: return

  void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      10: return

  void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field manageExecutor:Z
       4: ifeq          29
       7: aload_0
       8: getfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
      11: instanceof    #12                 // class java/util/concurrent/ExecutorService
      14: ifeq          29
      17: aload_0
      18: getfield      #7                  // Field executor:Ljava/util/concurrent/Executor;
      21: checkcast     #12                 // class java/util/concurrent/ExecutorService
      24: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      29: return
}
