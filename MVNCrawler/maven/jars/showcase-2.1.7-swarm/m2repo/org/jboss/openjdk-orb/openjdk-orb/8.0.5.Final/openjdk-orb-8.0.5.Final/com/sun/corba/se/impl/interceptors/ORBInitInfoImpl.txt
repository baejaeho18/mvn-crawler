Compiled from "ORBInitInfoImpl.java"
public final class com.sun.corba.se.impl.interceptors.ORBInitInfoImpl extends org.omg.CORBA.LocalObject implements org.omg.PortableInterceptor.ORBInitInfo,com.sun.corba.se.spi.legacy.interceptor.ORBInitInfoExt {
  private com.sun.corba.se.spi.orb.ORB orb;

  private com.sun.corba.se.impl.logging.InterceptorsSystemException wrapper;

  private com.sun.corba.se.impl.logging.ORBUtilSystemException orbutilWrapper;

  private com.sun.corba.se.impl.logging.OMGSystemException omgWrapper;

  private java.lang.String[] args;

  private java.lang.String orbId;

  private org.omg.IOP.CodecFactory codecFactory;

  private int stage;

  public static final int STAGE_PRE_INIT;

  public static final int STAGE_POST_INIT;

  public static final int STAGE_CLOSED;

  private static final java.lang.String MESSAGE_ORBINITINFO_INVALID;

  com.sun.corba.se.impl.interceptors.ORBInitInfoImpl(com.sun.corba.se.spi.orb.ORB, java.lang.String[], java.lang.String, org.omg.IOP.CodecFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/omg/CORBA/LocalObject."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field stage:I
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      14: aload_0
      15: aload_1
      16: ldc           #6                  // String rpc.protocol
      18: invokestatic  #7                  // Method com/sun/corba/se/impl/logging/InterceptorsSystemException.get:(Lcom/sun/corba/se/spi/orb/ORB;Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/InterceptorsSystemException;
      21: putfield      #8                  // Field wrapper:Lcom/sun/corba/se/impl/logging/InterceptorsSystemException;
      24: aload_0
      25: aload_1
      26: ldc           #6                  // String rpc.protocol
      28: invokestatic  #9                  // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.get:(Lcom/sun/corba/se/spi/orb/ORB;Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      31: putfield      #10                 // Field orbutilWrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      34: aload_0
      35: aload_1
      36: ldc           #6                  // String rpc.protocol
      38: invokestatic  #11                 // Method com/sun/corba/se/impl/logging/OMGSystemException.get:(Lcom/sun/corba/se/spi/orb/ORB;Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/OMGSystemException;
      41: putfield      #12                 // Field omgWrapper:Lcom/sun/corba/se/impl/logging/OMGSystemException;
      44: aload_0
      45: aload_2
      46: putfield      #13                 // Field args:[Ljava/lang/String;
      49: aload_0
      50: aload_3
      51: putfield      #14                 // Field orbId:Ljava/lang/String;
      54: aload_0
      55: aload         4
      57: putfield      #15                 // Field codecFactory:Lorg/omg/IOP/CodecFactory;
      60: return

  public com.sun.corba.se.spi.orb.ORB getORB();
    Code:
       0: aload_0
       1: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
       4: areturn

  void setStage(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field stage:I
       5: return

  private void checkStage();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stage:I
       4: iconst_2
       5: if_icmpne     16
       8: aload_0
       9: getfield      #8                  // Field wrapper:Lcom/sun/corba/se/impl/logging/InterceptorsSystemException;
      12: invokevirtual #16                 // Method com/sun/corba/se/impl/logging/InterceptorsSystemException.orbinitinfoInvalid:()Lorg/omg/CORBA/OBJECT_NOT_EXIST;
      15: athrow
      16: return

  public java.lang.String[] arguments();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_0
       5: getfield      #13                 // Field args:[Ljava/lang/String;
       8: areturn

  public java.lang.String orb_id();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_0
       5: getfield      #14                 // Field orbId:Ljava/lang/String;
       8: areturn

  public org.omg.IOP.CodecFactory codec_factory();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_0
       5: getfield      #15                 // Field codecFactory:Lorg/omg/IOP/CodecFactory;
       8: areturn

  public void register_initial_reference(java.lang.String, org.omg.CORBA.Object) throws org.omg.PortableInterceptor.ORBInitInfoPackage.InvalidName;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_1
       5: ifnonnull     12
       8: aload_0
       9: invokespecial #18                 // Method nullParam:()V
      12: aload_2
      13: ifnonnull     24
      16: aload_0
      17: getfield      #12                 // Field omgWrapper:Lcom/sun/corba/se/impl/logging/OMGSystemException;
      20: invokevirtual #19                 // Method com/sun/corba/se/impl/logging/OMGSystemException.rirWithNullObject:()Lorg/omg/CORBA/BAD_PARAM;
      23: athrow
      24: aload_0
      25: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      28: aload_1
      29: aload_2
      30: invokevirtual #20                 // Method com/sun/corba/se/spi/orb/ORB.register_initial_reference:(Ljava/lang/String;Lorg/omg/CORBA/Object;)V
      33: goto          60
      36: astore_3
      37: new           #22                 // class org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName
      40: dup
      41: aload_3
      42: invokevirtual #23                 // Method org/omg/CORBA/ORBPackage/InvalidName.getMessage:()Ljava/lang/String;
      45: invokespecial #24                 // Method org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName."<init>":(Ljava/lang/String;)V
      48: astore        4
      50: aload         4
      52: aload_3
      53: invokevirtual #25                 // Method org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      56: pop
      57: aload         4
      59: athrow
      60: return
    Exception table:
       from    to  target type
          24    33    36   Class org/omg/CORBA/ORBPackage/InvalidName

  public org.omg.CORBA.Object resolve_initial_references(java.lang.String) throws org.omg.PortableInterceptor.ORBInitInfoPackage.InvalidName;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_1
       5: ifnonnull     12
       8: aload_0
       9: invokespecial #18                 // Method nullParam:()V
      12: aload_0
      13: getfield      #3                  // Field stage:I
      16: ifne          27
      19: aload_0
      20: getfield      #8                  // Field wrapper:Lcom/sun/corba/se/impl/logging/InterceptorsSystemException;
      23: invokevirtual #26                 // Method com/sun/corba/se/impl/logging/InterceptorsSystemException.rirInvalidPreInit:()Lorg/omg/CORBA/BAD_INV_ORDER;
      26: athrow
      27: aconst_null
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      33: aload_1
      34: invokevirtual #27                 // Method com/sun/corba/se/spi/orb/ORB.resolve_initial_references:(Ljava/lang/String;)Lorg/omg/CORBA/Object;
      37: astore_2
      38: goto          50
      41: astore_3
      42: new           #22                 // class org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName
      45: dup
      46: invokespecial #28                 // Method org/omg/PortableInterceptor/ORBInitInfoPackage/InvalidName."<init>":()V
      49: athrow
      50: aload_2
      51: areturn
    Exception table:
       from    to  target type
          29    38    41   Class org/omg/CORBA/ORBPackage/InvalidName

  public void add_client_request_interceptor_with_policy(org.omg.PortableInterceptor.ClientRequestInterceptor, org.omg.CORBA.Policy[]) throws org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method add_client_request_interceptor:(Lorg/omg/PortableInterceptor/ClientRequestInterceptor;)V
       5: return

  public void add_client_request_interceptor(org.omg.PortableInterceptor.ClientRequestInterceptor) throws org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_1
       5: ifnonnull     12
       8: aload_0
       9: invokespecial #18                 // Method nullParam:()V
      12: aload_0
      13: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      16: invokevirtual #30                 // Method com/sun/corba/se/spi/orb/ORB.getPIHandler:()Lcom/sun/corba/se/spi/protocol/PIHandler;
      19: aload_1
      20: iconst_0
      21: invokeinterface #32,  3           // InterfaceMethod com/sun/corba/se/spi/protocol/PIHandler.register_interceptor:(Lorg/omg/PortableInterceptor/Interceptor;I)V
      26: return

  public void add_server_request_interceptor_with_policy(org.omg.PortableInterceptor.ServerRequestInterceptor, org.omg.CORBA.Policy[]) throws org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName, org.omg.CORBA.PolicyError;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method add_server_request_interceptor:(Lorg/omg/PortableInterceptor/ServerRequestInterceptor;)V
       5: return

  public void add_server_request_interceptor(org.omg.PortableInterceptor.ServerRequestInterceptor) throws org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_1
       5: ifnonnull     12
       8: aload_0
       9: invokespecial #18                 // Method nullParam:()V
      12: aload_0
      13: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      16: invokevirtual #30                 // Method com/sun/corba/se/spi/orb/ORB.getPIHandler:()Lcom/sun/corba/se/spi/protocol/PIHandler;
      19: aload_1
      20: iconst_1
      21: invokeinterface #32,  3           // InterfaceMethod com/sun/corba/se/spi/protocol/PIHandler.register_interceptor:(Lorg/omg/PortableInterceptor/Interceptor;I)V
      26: return

  public void add_ior_interceptor_with_policy(org.omg.PortableInterceptor.IORInterceptor, org.omg.CORBA.Policy[]) throws org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName, org.omg.CORBA.PolicyError;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method add_ior_interceptor:(Lorg/omg/PortableInterceptor/IORInterceptor;)V
       5: return

  public void add_ior_interceptor(org.omg.PortableInterceptor.IORInterceptor) throws org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_1
       5: ifnonnull     12
       8: aload_0
       9: invokespecial #18                 // Method nullParam:()V
      12: aload_0
      13: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      16: invokevirtual #30                 // Method com/sun/corba/se/spi/orb/ORB.getPIHandler:()Lcom/sun/corba/se/spi/protocol/PIHandler;
      19: aload_1
      20: iconst_2
      21: invokeinterface #32,  3           // InterfaceMethod com/sun/corba/se/spi/protocol/PIHandler.register_interceptor:(Lorg/omg/PortableInterceptor/Interceptor;I)V
      26: return

  public int allocate_slot_id();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_0
       5: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
       8: invokevirtual #30                 // Method com/sun/corba/se/spi/orb/ORB.getPIHandler:()Lcom/sun/corba/se/spi/protocol/PIHandler;
      11: invokeinterface #35,  1           // InterfaceMethod com/sun/corba/se/spi/protocol/PIHandler.getPICurrent:()Lorg/omg/PortableInterceptor/Current;
      16: checkcast     #36                 // class com/sun/corba/se/impl/interceptors/PICurrent
      19: invokevirtual #37                 // Method com/sun/corba/se/impl/interceptors/PICurrent.allocateSlotId:()I
      22: ireturn

  public void register_policy_factory(int, org.omg.PortableInterceptor.PolicyFactory);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method checkStage:()V
       4: aload_2
       5: ifnonnull     12
       8: aload_0
       9: invokespecial #18                 // Method nullParam:()V
      12: aload_0
      13: getfield      #4                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      16: invokevirtual #30                 // Method com/sun/corba/se/spi/orb/ORB.getPIHandler:()Lcom/sun/corba/se/spi/protocol/PIHandler;
      19: iload_1
      20: aload_2
      21: invokeinterface #38,  3           // InterfaceMethod com/sun/corba/se/spi/protocol/PIHandler.registerPolicyFactory:(ILorg/omg/PortableInterceptor/PolicyFactory;)V
      26: return

  private void nullParam() throws org.omg.CORBA.BAD_PARAM;
    Code:
       0: aload_0
       1: getfield      #10                 // Field orbutilWrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
       4: invokevirtual #39                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.nullParam:()Lorg/omg/CORBA/BAD_PARAM;
       7: athrow
}
