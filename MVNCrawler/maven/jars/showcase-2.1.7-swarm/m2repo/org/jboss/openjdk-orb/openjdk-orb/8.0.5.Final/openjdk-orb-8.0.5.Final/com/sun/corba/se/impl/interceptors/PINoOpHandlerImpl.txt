Compiled from "PINoOpHandlerImpl.java"
public class com.sun.corba.se.impl.interceptors.PINoOpHandlerImpl implements com.sun.corba.se.spi.protocol.PIHandler {
  public com.sun.corba.se.impl.interceptors.PINoOpHandlerImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void close();
    Code:
       0: return

  public void initialize();
    Code:
       0: return

  public void destroyInterceptors();
    Code:
       0: return

  public void objectAdapterCreated(com.sun.corba.se.spi.oa.ObjectAdapter);
    Code:
       0: return

  public void adapterManagerStateChanged(int, short);
    Code:
       0: return

  public void adapterStateChanged(org.omg.PortableInterceptor.ObjectReferenceTemplate[], short);
    Code:
       0: return

  public void disableInterceptorsThisThread();
    Code:
       0: return

  public void enableInterceptorsThisThread();
    Code:
       0: return

  public void invokeClientPIStartingPoint() throws org.omg.CORBA.portable.RemarshalException;
    Code:
       0: return

  public java.lang.Exception invokeClientPIEndingPoint(int, java.lang.Exception);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Exception makeCompletedClientRequest(int, java.lang.Exception);
    Code:
       0: aconst_null
       1: areturn

  public void initiateClientPIRequest(boolean);
    Code:
       0: return

  public void cleanupClientPIRequest();
    Code:
       0: return

  public void setClientPIInfo(com.sun.corba.se.spi.protocol.CorbaMessageMediator);
    Code:
       0: return

  public void setClientPIInfo(com.sun.corba.se.impl.corba.RequestImpl);
    Code:
       0: return

  public final void sendCancelRequestIfFinalFragmentNotSent();
    Code:
       0: return

  public void invokeServerPIStartingPoint();
    Code:
       0: return

  public void invokeServerPIIntermediatePoint();
    Code:
       0: return

  public void invokeServerPIEndingPoint(com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage);
    Code:
       0: return

  public void setServerPIInfo(java.lang.Exception);
    Code:
       0: return

  public void setServerPIInfo(org.omg.CORBA.NVList);
    Code:
       0: return

  public void setServerPIExceptionInfo(org.omg.CORBA.Any);
    Code:
       0: return

  public void setServerPIInfo(org.omg.CORBA.Any);
    Code:
       0: return

  public void initializeServerPIInfo(com.sun.corba.se.spi.protocol.CorbaMessageMediator, com.sun.corba.se.spi.oa.ObjectAdapter, byte[], com.sun.corba.se.spi.ior.ObjectKeyTemplate);
    Code:
       0: return

  public void setServerPIInfo(java.lang.Object, java.lang.String);
    Code:
       0: return

  public void cleanupServerPIRequest();
    Code:
       0: return

  public void register_interceptor(org.omg.PortableInterceptor.Interceptor, int) throws org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName;
    Code:
       0: return

  public org.omg.PortableInterceptor.Current getPICurrent();
    Code:
       0: aconst_null
       1: areturn

  public org.omg.CORBA.Policy create_policy(int, org.omg.CORBA.Any) throws org.omg.CORBA.PolicyError;
    Code:
       0: aconst_null
       1: areturn

  public void registerPolicyFactory(int, org.omg.PortableInterceptor.PolicyFactory);
    Code:
       0: return

  public int allocateServerRequestId();
    Code:
       0: iconst_0
       1: ireturn
}
