Compiled from "CDROutputStream_1_2.java"
public class com.sun.corba.se.impl.encoding.CDROutputStream_1_2 extends com.sun.corba.se.impl.encoding.CDROutputStream_1_1 {
  protected boolean primitiveAcrossFragmentedChunk;

  protected boolean specialChunk;

  private boolean headerPadding;

  public com.sun.corba.se.impl.encoding.CDROutputStream_1_2();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/corba/se/impl/encoding/CDROutputStream_1_1."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field primitiveAcrossFragmentedChunk:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field specialChunk:Z
      14: return

  protected void handleSpecialChunkBegin(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inBlock:Z
       4: ifeq          72
       7: iload_1
       8: aload_0
       9: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      12: invokevirtual #6                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:()I
      15: iadd
      16: aload_0
      17: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      20: getfield      #7                  // Field com/sun/corba/se/impl/encoding/ByteBufferWithInfo.buflen:I
      23: if_icmple     72
      26: aload_0
      27: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      30: invokevirtual #6                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:()I
      33: istore_2
      34: aload_0
      35: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      38: aload_0
      39: getfield      #8                  // Field blockSizeIndex:I
      42: iconst_4
      43: isub
      44: invokevirtual #9                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:(I)V
      47: aload_0
      48: iload_2
      49: aload_0
      50: getfield      #8                  // Field blockSizeIndex:I
      53: isub
      54: iload_1
      55: iadd
      56: invokevirtual #10                 // Method writeLongWithoutAlign:(I)V
      59: aload_0
      60: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      63: iload_2
      64: invokevirtual #9                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:(I)V
      67: aload_0
      68: iconst_1
      69: putfield      #3                  // Field specialChunk:Z
      72: return

  protected void handleSpecialChunkEnd();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inBlock:Z
       4: ifeq          38
       7: aload_0
       8: getfield      #3                  // Field specialChunk:Z
      11: ifeq          38
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field inBlock:Z
      19: aload_0
      20: iconst_m1
      21: putfield      #8                  // Field blockSizeIndex:I
      24: aload_0
      25: iconst_m1
      26: putfield      #11                 // Field blockSizePosition:I
      29: aload_0
      30: invokevirtual #12                 // Method start_block:()V
      33: aload_0
      34: iconst_0
      35: putfield      #3                  // Field specialChunk:Z
      38: return

  private void checkPrimitiveAcrossFragmentedChunk();
    Code:
       0: aload_0
       1: getfield      #2                  // Field primitiveAcrossFragmentedChunk:Z
       4: ifeq          31
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field primitiveAcrossFragmentedChunk:Z
      12: aload_0
      13: iconst_0
      14: putfield      #4                  // Field inBlock:Z
      17: aload_0
      18: iconst_m1
      19: putfield      #8                  // Field blockSizeIndex:I
      22: aload_0
      23: iconst_m1
      24: putfield      #11                 // Field blockSizePosition:I
      27: aload_0
      28: invokevirtual #12                 // Method start_block:()V
      31: return

  public void write_octet(byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #13                 // Method com/sun/corba/se/impl/encoding/CDROutputStream_1_1.write_octet:(B)V
       5: aload_0
       6: invokespecial #14                 // Method checkPrimitiveAcrossFragmentedChunk:()V
       9: return

  public void write_short(short);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method com/sun/corba/se/impl/encoding/CDROutputStream_1_1.write_short:(S)V
       5: aload_0
       6: invokespecial #14                 // Method checkPrimitiveAcrossFragmentedChunk:()V
       9: return

  public void write_long(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #16                 // Method com/sun/corba/se/impl/encoding/CDROutputStream_1_1.write_long:(I)V
       5: aload_0
       6: invokespecial #14                 // Method checkPrimitiveAcrossFragmentedChunk:()V
       9: return

  public void write_longlong(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #17                 // Method com/sun/corba/se/impl/encoding/CDROutputStream_1_1.write_longlong:(J)V
       5: aload_0
       6: invokespecial #14                 // Method checkPrimitiveAcrossFragmentedChunk:()V
       9: return

  void setHeaderPadding(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field headerPadding:Z
       5: return

  protected void alignAndReserve(int, int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field headerPadding:Z
       4: iconst_1
       5: if_icmpne     19
       8: aload_0
       9: iconst_0
      10: putfield      #18                 // Field headerPadding:Z
      13: aload_0
      14: bipush        8
      16: invokevirtual #20                 // Method alignOnBoundary:(I)V
      19: aload_0
      20: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      23: aload_0
      24: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      27: invokevirtual #6                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:()I
      30: aload_0
      31: iload_1
      32: invokevirtual #21                 // Method computeAlignment:(I)I
      35: iadd
      36: invokevirtual #9                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:(I)V
      39: aload_0
      40: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      43: invokevirtual #6                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:()I
      46: iload_2
      47: iadd
      48: aload_0
      49: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      52: getfield      #7                  // Field com/sun/corba/se/impl/encoding/ByteBufferWithInfo.buflen:I
      55: if_icmple     64
      58: aload_0
      59: iload_1
      60: iload_2
      61: invokevirtual #22                 // Method grow:(II)V
      64: return

  protected void grow(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
       4: invokevirtual #6                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:()I
       7: istore_3
       8: aload_0
       9: getfield      #4                  // Field inBlock:Z
      12: ifeq          26
      15: aload_0
      16: getfield      #3                  // Field specialChunk:Z
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore        4
      29: iload         4
      31: ifeq          78
      34: aload_0
      35: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      38: invokevirtual #6                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:()I
      41: istore        5
      43: aload_0
      44: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      47: aload_0
      48: getfield      #8                  // Field blockSizeIndex:I
      51: iconst_4
      52: isub
      53: invokevirtual #9                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:(I)V
      56: aload_0
      57: iload         5
      59: aload_0
      60: getfield      #8                  // Field blockSizeIndex:I
      63: isub
      64: iload_2
      65: iadd
      66: invokevirtual #10                 // Method writeLongWithoutAlign:(I)V
      69: aload_0
      70: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      73: iload         5
      75: invokevirtual #9                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:(I)V
      78: aload_0
      79: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      82: iload_2
      83: putfield      #23                 // Field com/sun/corba/se/impl/encoding/ByteBufferWithInfo.needed:I
      86: aload_0
      87: getfield      #24                 // Field bufferManagerWrite:Lcom/sun/corba/se/impl/encoding/BufferManagerWrite;
      90: aload_0
      91: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
      94: invokevirtual #25                 // Method com/sun/corba/se/impl/encoding/BufferManagerWrite.overflow:(Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;)V
      97: aload_0
      98: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
     101: getfield      #26                 // Field com/sun/corba/se/impl/encoding/ByteBufferWithInfo.fragmented:Z
     104: ifeq          143
     107: aload_0
     108: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
     111: iconst_0
     112: putfield      #26                 // Field com/sun/corba/se/impl/encoding/ByteBufferWithInfo.fragmented:Z
     115: aload_0
     116: dup
     117: getfield      #27                 // Field fragmentOffset:I
     120: iload_3
     121: aload_0
     122: getfield      #5                  // Field bbwi:Lcom/sun/corba/se/impl/encoding/ByteBufferWithInfo;
     125: invokevirtual #6                  // Method com/sun/corba/se/impl/encoding/ByteBufferWithInfo.position:()I
     128: isub
     129: iadd
     130: putfield      #27                 // Field fragmentOffset:I
     133: iload         4
     135: ifeq          143
     138: aload_0
     139: iconst_1
     140: putfield      #2                  // Field primitiveAcrossFragmentedChunk:Z
     143: return

  public com.sun.corba.se.spi.ior.iiop.GIOPVersion getGIOPVersion();
    Code:
       0: getstatic     #28                 // Field com/sun/corba/se/spi/ior/iiop/GIOPVersion.V1_2:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
       3: areturn

  public void write_wchar(char);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getWCharConverter:()Lcom/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter;
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokevirtual #30                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.convert:(C)V
      10: aload_0
      11: iconst_1
      12: aload_2
      13: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      16: iadd
      17: invokevirtual #32                 // Method handleSpecialChunkBegin:(I)V
      20: aload_0
      21: aload_2
      22: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      25: i2b
      26: invokevirtual #33                 // Method write_octet:(B)V
      29: aload_2
      30: invokevirtual #34                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getBytes:()[B
      33: astore_3
      34: aload_0
      35: aload_3
      36: iconst_0
      37: aload_2
      38: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      41: invokevirtual #35                 // Method internalWriteOctetArray:([BII)V
      44: aload_0
      45: invokevirtual #36                 // Method handleSpecialChunkEnd:()V
      48: return

  public void write_wchar_array(char[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: getfield      #37                 // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
       8: getstatic     #38                 // Field org/omg/CORBA/CompletionStatus.COMPLETED_MAYBE:Lorg/omg/CORBA/CompletionStatus;
      11: invokevirtual #39                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.nullParam:(Lorg/omg/CORBA/CompletionStatus;)Lorg/omg/CORBA/BAD_PARAM;
      14: athrow
      15: aload_0
      16: invokevirtual #29                 // Method getWCharConverter:()Lcom/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter;
      19: astore        4
      21: iconst_0
      22: istore        5
      24: aload         4
      26: invokevirtual #40                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getMaxBytesPerChar:()F
      29: iload_3
      30: i2f
      31: fmul
      32: f2d
      33: invokestatic  #41                 // Method java/lang/Math.ceil:(D)D
      36: d2i
      37: istore        6
      39: iload         6
      41: iload_3
      42: iadd
      43: newarray       byte
      45: astore        7
      47: iconst_0
      48: istore        8
      50: iload         8
      52: iload_3
      53: if_icmpge     115
      56: aload         4
      58: aload_1
      59: iload_2
      60: iload         8
      62: iadd
      63: caload
      64: invokevirtual #30                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.convert:(C)V
      67: aload         7
      69: iload         5
      71: iinc          5, 1
      74: aload         4
      76: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      79: i2b
      80: bastore
      81: aload         4
      83: invokevirtual #34                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getBytes:()[B
      86: iconst_0
      87: aload         7
      89: iload         5
      91: aload         4
      93: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      96: invokestatic  #42                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: iload         5
     101: aload         4
     103: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
     106: iadd
     107: istore        5
     109: iinc          8, 1
     112: goto          50
     115: aload_0
     116: iload         5
     118: invokevirtual #32                 // Method handleSpecialChunkBegin:(I)V
     121: aload_0
     122: aload         7
     124: iconst_0
     125: iload         5
     127: invokevirtual #35                 // Method internalWriteOctetArray:([BII)V
     130: aload_0
     131: invokevirtual #36                 // Method handleSpecialChunkEnd:()V
     134: return

  public void write_wstring(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: getfield      #37                 // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
       8: getstatic     #38                 // Field org/omg/CORBA/CompletionStatus.COMPLETED_MAYBE:Lorg/omg/CORBA/CompletionStatus;
      11: invokevirtual #39                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.nullParam:(Lorg/omg/CORBA/CompletionStatus;)Lorg/omg/CORBA/BAD_PARAM;
      14: athrow
      15: aload_1
      16: invokevirtual #43                 // Method java/lang/String.length:()I
      19: ifne          28
      22: aload_0
      23: iconst_0
      24: invokevirtual #44                 // Method write_long:(I)V
      27: return
      28: aload_0
      29: invokevirtual #29                 // Method getWCharConverter:()Lcom/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter;
      32: astore_2
      33: aload_2
      34: aload_1
      35: invokevirtual #45                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.convert:(Ljava/lang/String;)V
      38: aload_0
      39: aload_0
      40: iconst_4
      41: invokevirtual #21                 // Method computeAlignment:(I)I
      44: iconst_4
      45: iadd
      46: aload_2
      47: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      50: iadd
      51: invokevirtual #32                 // Method handleSpecialChunkBegin:(I)V
      54: aload_0
      55: aload_2
      56: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      59: invokevirtual #44                 // Method write_long:(I)V
      62: aload_0
      63: aload_2
      64: invokevirtual #34                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getBytes:()[B
      67: iconst_0
      68: aload_2
      69: invokevirtual #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion$CTBConverter.getNumBytes:()I
      72: invokevirtual #35                 // Method internalWriteOctetArray:([BII)V
      75: aload_0
      76: invokevirtual #36                 // Method handleSpecialChunkEnd:()V
      79: return
}
