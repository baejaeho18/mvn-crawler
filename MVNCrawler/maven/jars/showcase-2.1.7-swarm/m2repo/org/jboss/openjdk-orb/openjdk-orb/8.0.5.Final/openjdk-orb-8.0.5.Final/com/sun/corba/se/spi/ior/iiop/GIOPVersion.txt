Compiled from "GIOPVersion.java"
public class com.sun.corba.se.spi.ior.iiop.GIOPVersion {
  public static final com.sun.corba.se.spi.ior.iiop.GIOPVersion V1_0;

  public static final com.sun.corba.se.spi.ior.iiop.GIOPVersion V1_1;

  public static final com.sun.corba.se.spi.ior.iiop.GIOPVersion V1_2;

  public static final com.sun.corba.se.spi.ior.iiop.GIOPVersion V1_3;

  public static final com.sun.corba.se.spi.ior.iiop.GIOPVersion V13_XX;

  public static final com.sun.corba.se.spi.ior.iiop.GIOPVersion DEFAULT_VERSION;

  public static final int VERSION_1_0;

  public static final int VERSION_1_1;

  public static final int VERSION_1_2;

  public static final int VERSION_1_3;

  public static final int VERSION_13_XX;

  private byte major;

  private byte minor;

  public com.sun.corba.se.spi.ior.iiop.GIOPVersion();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field major:B
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field minor:B
      14: return

  public com.sun.corba.se.spi.ior.iiop.GIOPVersion(byte, byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field major:B
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field minor:B
      14: aload_0
      15: iload_1
      16: putfield      #2                  // Field major:B
      19: aload_0
      20: iload_2
      21: putfield      #3                  // Field minor:B
      24: return

  public com.sun.corba.se.spi.ior.iiop.GIOPVersion(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field major:B
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field minor:B
      14: aload_0
      15: iload_1
      16: i2b
      17: putfield      #2                  // Field major:B
      20: aload_0
      21: iload_2
      22: i2b
      23: putfield      #3                  // Field minor:B
      26: return

  public byte getMajor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field major:B
       4: ireturn

  public byte getMinor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minor:B
       4: ireturn

  public boolean equals(com.sun.corba.se.spi.ior.iiop.GIOPVersion);
    Code:
       0: aload_1
       1: getfield      #2                  // Field major:B
       4: aload_0
       5: getfield      #2                  // Field major:B
       8: if_icmpne     26
      11: aload_1
      12: getfield      #3                  // Field minor:B
      15: aload_0
      16: getfield      #3                  // Field minor:B
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_1
       5: instanceof    #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
       8: ifeq          20
      11: aload_0
      12: aload_1
      13: checkcast     #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
      16: invokevirtual #5                  // Method equals:(Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;)Z
      19: ireturn
      20: iconst_0
      21: ireturn

  public int hashCode();
    Code:
       0: bipush        37
       2: aload_0
       3: getfield      #2                  // Field major:B
       6: imul
       7: aload_0
       8: getfield      #3                  // Field minor:B
      11: iadd
      12: ireturn

  public boolean lessThan(com.sun.corba.se.spi.ior.iiop.GIOPVersion);
    Code:
       0: aload_0
       1: getfield      #2                  // Field major:B
       4: aload_1
       5: getfield      #2                  // Field major:B
       8: if_icmpge     13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #2                  // Field major:B
      17: aload_1
      18: getfield      #2                  // Field major:B
      21: if_icmpne     37
      24: aload_0
      25: getfield      #3                  // Field minor:B
      28: aload_1
      29: getfield      #3                  // Field minor:B
      32: if_icmpge     37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field major:B
       4: bipush        8
       6: ishl
       7: aload_0
       8: getfield      #3                  // Field minor:B
      11: ior
      12: ireturn

  public java.lang.String toString();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field major:B
      11: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      14: ldc           #9                  // String .
      16: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field minor:B
      23: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public static com.sun.corba.se.spi.ior.iiop.GIOPVersion getInstance(byte, byte);
    Code:
       0: iload_0
       1: bipush        8
       3: ishl
       4: iload_1
       5: ior
       6: lookupswitch  { // 5
                   256: 56
                   257: 60
                   258: 64
                   259: 68
                  3329: 72
               default: 76
          }
      56: getstatic     #12                 // Field V1_0:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      59: areturn
      60: getstatic     #13                 // Field V1_1:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      63: areturn
      64: getstatic     #14                 // Field V1_2:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      67: areturn
      68: getstatic     #15                 // Field V1_3:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      71: areturn
      72: getstatic     #16                 // Field V13_XX:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      75: areturn
      76: new           #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
      79: dup
      80: iload_0
      81: iload_1
      82: invokespecial #17                 // Method "<init>":(BB)V
      85: areturn

  public static com.sun.corba.se.spi.ior.iiop.GIOPVersion parseVersion(java.lang.String);
    Code:
       0: aload_0
       1: bipush        46
       3: invokevirtual #18                 // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: iconst_1
       9: if_icmplt     22
      12: iload_1
      13: aload_0
      14: invokevirtual #19                 // Method java/lang/String.length:()I
      17: iconst_1
      18: isub
      19: if_icmpne     49
      22: new           #20                 // class java/lang/NumberFormatException
      25: dup
      26: new           #6                  // class java/lang/StringBuilder
      29: dup
      30: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #21                 // String GIOP major, minor, and decimal point required:
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: iconst_0
      51: iload_1
      52: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      55: invokestatic  #24                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      58: istore_2
      59: aload_0
      60: iload_1
      61: iconst_1
      62: iadd
      63: aload_0
      64: invokevirtual #19                 // Method java/lang/String.length:()I
      67: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      70: invokestatic  #24                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      73: istore_3
      74: iload_2
      75: i2b
      76: iload_3
      77: i2b
      78: invokestatic  #25                 // Method getInstance:(BB)Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      81: areturn

  public static com.sun.corba.se.spi.ior.iiop.GIOPVersion chooseRequestVersion(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.spi.ior.IOR);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method com/sun/corba/se/spi/orb/ORB.getORBData:()Lcom/sun/corba/se/spi/orb/ORBData;
       4: invokeinterface #27,  1           // InterfaceMethod com/sun/corba/se/spi/orb/ORBData.getGIOPVersion:()Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
       9: astore_2
      10: aload_1
      11: invokeinterface #28,  1           // InterfaceMethod com/sun/corba/se/spi/ior/IOR.getProfile:()Lcom/sun/corba/se/spi/ior/iiop/IIOPProfile;
      16: astore_3
      17: aload_3
      18: invokeinterface #29,  1           // InterfaceMethod com/sun/corba/se/spi/ior/iiop/IIOPProfile.getGIOPVersion:()Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      23: astore        4
      25: aload_3
      26: invokeinterface #30,  1           // InterfaceMethod com/sun/corba/se/spi/ior/iiop/IIOPProfile.getORBVersion:()Lcom/sun/corba/se/spi/orb/ORBVersion;
      31: astore        5
      33: aload         5
      35: invokestatic  #31                 // Method com/sun/corba/se/spi/orb/ORBVersionFactory.getFOREIGN:()Lcom/sun/corba/se/spi/orb/ORBVersion;
      38: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifne          61
      44: aload         5
      46: invokestatic  #33                 // Method com/sun/corba/se/spi/orb/ORBVersionFactory.getNEWER:()Lcom/sun/corba/se/spi/orb/ORBVersion;
      49: invokeinterface #34,  2           // InterfaceMethod com/sun/corba/se/spi/orb/ORBVersion.lessThan:(Lcom/sun/corba/se/spi/orb/ORBVersion;)Z
      54: ifeq          61
      57: getstatic     #12                 // Field V1_0:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      60: areturn
      61: aload         4
      63: invokevirtual #35                 // Method getMajor:()B
      66: istore        6
      68: aload         4
      70: invokevirtual #36                 // Method getMinor:()B
      73: istore        7
      75: aload_2
      76: invokevirtual #35                 // Method getMajor:()B
      79: istore        8
      81: aload_2
      82: invokevirtual #36                 // Method getMinor:()B
      85: istore        9
      87: iload         8
      89: iload         6
      91: if_icmpge     96
      94: aload_2
      95: areturn
      96: iload         8
      98: iload         6
     100: if_icmple     106
     103: aload         4
     105: areturn
     106: iload         9
     108: iload         7
     110: if_icmpgt     115
     113: aload_2
     114: areturn
     115: aload         4
     117: areturn

  public boolean supportsIORIIOPProfileComponents();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getMinor:()B
       4: ifgt          15
       7: aload_0
       8: invokevirtual #35                 // Method getMajor:()B
      11: iconst_1
      12: if_icmple     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public void read(org.omg.CORBA.portable.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method org/omg/CORBA/portable/InputStream.read_octet:()B
       5: putfield      #2                  // Field major:B
       8: aload_0
       9: aload_1
      10: invokevirtual #37                 // Method org/omg/CORBA/portable/InputStream.read_octet:()B
      13: putfield      #3                  // Field minor:B
      16: return

  public void write(org.omg.CORBA.portable.OutputStream);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field major:B
       5: invokevirtual #38                 // Method org/omg/CORBA/portable/OutputStream.write_octet:(B)V
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field minor:B
      13: invokevirtual #38                 // Method org/omg/CORBA/portable/OutputStream.write_octet:(B)V
      16: return

  static {};
    Code:
       0: new           #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
       3: dup
       4: iconst_1
       5: iconst_0
       6: invokespecial #17                 // Method "<init>":(BB)V
       9: putstatic     #12                 // Field V1_0:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      12: new           #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
      15: dup
      16: iconst_1
      17: iconst_1
      18: invokespecial #17                 // Method "<init>":(BB)V
      21: putstatic     #13                 // Field V1_1:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      24: new           #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
      27: dup
      28: iconst_1
      29: iconst_2
      30: invokespecial #17                 // Method "<init>":(BB)V
      33: putstatic     #14                 // Field V1_2:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      36: new           #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
      39: dup
      40: iconst_1
      41: iconst_3
      42: invokespecial #17                 // Method "<init>":(BB)V
      45: putstatic     #15                 // Field V1_3:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      48: new           #4                  // class com/sun/corba/se/spi/ior/iiop/GIOPVersion
      51: dup
      52: bipush        13
      54: iconst_1
      55: invokespecial #17                 // Method "<init>":(BB)V
      58: putstatic     #16                 // Field V13_XX:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      61: getstatic     #14                 // Field V1_2:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      64: putstatic     #40                 // Field DEFAULT_VERSION:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      67: return
}
