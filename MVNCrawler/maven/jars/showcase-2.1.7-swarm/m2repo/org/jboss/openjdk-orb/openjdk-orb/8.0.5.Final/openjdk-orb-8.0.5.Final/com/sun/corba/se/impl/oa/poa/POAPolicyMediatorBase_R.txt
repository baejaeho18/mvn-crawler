Compiled from "POAPolicyMediatorBase_R.java"
public abstract class com.sun.corba.se.impl.oa.poa.POAPolicyMediatorBase_R extends com.sun.corba.se.impl.oa.poa.POAPolicyMediatorBase {
  protected com.sun.corba.se.impl.oa.poa.ActiveObjectMap activeObjectMap;

  com.sun.corba.se.impl.oa.poa.POAPolicyMediatorBase_R(com.sun.corba.se.impl.oa.poa.Policies, com.sun.corba.se.impl.oa.poa.POAImpl);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/sun/corba/se/impl/oa/poa/POAPolicyMediatorBase."<init>":(Lcom/sun/corba/se/impl/oa/poa/Policies;Lcom/sun/corba/se/impl/oa/poa/POAImpl;)V
       6: aload_1
       7: invokevirtual #2                  // Method com/sun/corba/se/impl/oa/poa/Policies.retainServants:()Z
      10: ifne          21
      13: aload_2
      14: invokevirtual #3                  // Method com/sun/corba/se/impl/oa/poa/POAImpl.invocationWrapper:()Lcom/sun/corba/se/impl/logging/POASystemException;
      17: invokevirtual #4                  // Method com/sun/corba/se/impl/logging/POASystemException.policyMediatorBadPolicyInFactory:()Lorg/omg/CORBA/INTERNAL;
      20: athrow
      21: aload_0
      22: aload_2
      23: aload_0
      24: getfield      #5                  // Field isUnique:Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: invokestatic  #6                  // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.create:(Lcom/sun/corba/se/impl/oa/poa/POAImpl;Z)Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      38: putfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      41: return

  public void returnServant();
    Code:
       0: return

  public void clearAOM();
    Code:
       0: aload_0
       1: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
       4: invokevirtual #8                  // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.clear:()V
       7: aload_0
       8: aconst_null
       9: putfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      12: return

  protected org.omg.PortableServer.Servant internalKeyToServant(com.sun.corba.se.impl.oa.poa.ActiveObjectMap$Key);
    Code:
       0: aload_0
       1: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
       4: aload_1
       5: invokevirtual #9                  // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.get:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;)Lcom/sun/corba/se/impl/oa/poa/AOMEntry;
       8: astore_2
       9: aload_2
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_0
      16: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      19: aload_2
      20: invokevirtual #10                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.getServant:(Lcom/sun/corba/se/impl/oa/poa/AOMEntry;)Lorg/omg/PortableServer/Servant;
      23: areturn

  protected org.omg.PortableServer.Servant internalIdToServant(byte[]);
    Code:
       0: new           #11                 // class com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key
       3: dup
       4: aload_1
       5: invokespecial #12                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key."<init>":([B)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #13                 // Method internalKeyToServant:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;)Lorg/omg/PortableServer/Servant;
      14: areturn

  protected void activateServant(com.sun.corba.se.impl.oa.poa.ActiveObjectMap$Key, com.sun.corba.se.impl.oa.poa.AOMEntry, org.omg.PortableServer.Servant);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: getfield      #14                 // Field com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key.id:[B
       6: invokevirtual #15                 // Method setDelegate:(Lorg/omg/PortableServer/Servant;[B)V
       9: aload_0
      10: getfield      #16                 // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      13: getfield      #17                 // Field com/sun/corba/se/spi/orb/ORB.shutdownDebugFlag:Z
      16: ifeq          56
      19: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
      22: new           #19                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #21                 // String Activating object
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_3
      35: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #24                 // String  with POA
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      47: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #27                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      56: aload_0
      57: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      60: aload_3
      61: aload_2
      62: invokevirtual #28                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.putServant:(Lorg/omg/PortableServer/Servant;Lcom/sun/corba/se/impl/oa/poa/AOMEntry;)V
      65: invokestatic  #29                 // Method com/sun/corba/se/impl/javax/rmi/CORBA/Util.isInstanceDefined:()Z
      68: ifeq          100
      71: aload_0
      72: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      75: invokevirtual #30                 // Method com/sun/corba/se/impl/oa/poa/POAImpl.the_POAManager:()Lorg/omg/PortableServer/POAManager;
      78: checkcast     #31                 // class com/sun/corba/se/impl/oa/poa/POAManagerImpl
      81: astore        4
      83: aload         4
      85: invokevirtual #32                 // Method com/sun/corba/se/impl/oa/poa/POAManagerImpl.getFactory:()Lcom/sun/corba/se/impl/oa/poa/POAFactory;
      88: astore        5
      90: aload         5
      92: aload_0
      93: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      96: aload_3
      97: invokevirtual #33                 // Method com/sun/corba/se/impl/oa/poa/POAFactory.registerPOAForServant:(Lorg/omg/PortableServer/POA;Lorg/omg/PortableServer/Servant;)V
     100: return

  public final void activateObject(byte[], org.omg.PortableServer.Servant) throws org.omg.PortableServer.POAPackage.WrongPolicy, org.omg.PortableServer.POAPackage.ServantAlreadyActive, org.omg.PortableServer.POAPackage.ObjectAlreadyActive;
    Code:
       0: aload_0
       1: getfield      #5                  // Field isUnique:Z
       4: ifeq          26
       7: aload_0
       8: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      11: aload_2
      12: invokevirtual #34                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.contains:(Lorg/omg/PortableServer/Servant;)Z
      15: ifeq          26
      18: new           #35                 // class org/omg/PortableServer/POAPackage/ServantAlreadyActive
      21: dup
      22: invokespecial #36                 // Method org/omg/PortableServer/POAPackage/ServantAlreadyActive."<init>":()V
      25: athrow
      26: new           #11                 // class com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key
      29: dup
      30: aload_1
      31: invokespecial #12                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key."<init>":([B)V
      34: astore_3
      35: aload_0
      36: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      39: aload_3
      40: invokevirtual #9                  // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.get:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;)Lcom/sun/corba/se/impl/oa/poa/AOMEntry;
      43: astore        4
      45: aload         4
      47: invokevirtual #37                 // Method com/sun/corba/se/impl/oa/poa/AOMEntry.activateObject:()V
      50: aload_0
      51: aload_3
      52: aload         4
      54: aload_2
      55: invokevirtual #38                 // Method activateServant:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;Lcom/sun/corba/se/impl/oa/poa/AOMEntry;Lorg/omg/PortableServer/Servant;)V
      58: return

  public org.omg.PortableServer.Servant deactivateObject(byte[]) throws org.omg.PortableServer.POAPackage.ObjectNotActive, org.omg.PortableServer.POAPackage.WrongPolicy;
    Code:
       0: new           #11                 // class com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key
       3: dup
       4: aload_1
       5: invokespecial #12                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key."<init>":([B)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #39                 // Method deactivateObject:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;)Lorg/omg/PortableServer/Servant;
      14: areturn

  protected void deactivateHelper(com.sun.corba.se.impl.oa.poa.ActiveObjectMap$Key, com.sun.corba.se.impl.oa.poa.AOMEntry, org.omg.PortableServer.Servant) throws org.omg.PortableServer.POAPackage.ObjectNotActive, org.omg.PortableServer.POAPackage.WrongPolicy;
    Code:
       0: aload_0
       1: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
       4: aload_1
       5: invokevirtual #40                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.remove:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;)V
       8: invokestatic  #29                 // Method com/sun/corba/se/impl/javax/rmi/CORBA/Util.isInstanceDefined:()Z
      11: ifeq          43
      14: aload_0
      15: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      18: invokevirtual #30                 // Method com/sun/corba/se/impl/oa/poa/POAImpl.the_POAManager:()Lorg/omg/PortableServer/POAManager;
      21: checkcast     #31                 // class com/sun/corba/se/impl/oa/poa/POAManagerImpl
      24: astore        4
      26: aload         4
      28: invokevirtual #32                 // Method com/sun/corba/se/impl/oa/poa/POAManagerImpl.getFactory:()Lcom/sun/corba/se/impl/oa/poa/POAFactory;
      31: astore        5
      33: aload         5
      35: aload_0
      36: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      39: aload_3
      40: invokevirtual #41                 // Method com/sun/corba/se/impl/oa/poa/POAFactory.unregisterPOAForServant:(Lorg/omg/PortableServer/POA;Lorg/omg/PortableServer/Servant;)V
      43: return

  public org.omg.PortableServer.Servant deactivateObject(com.sun.corba.se.impl.oa.poa.ActiveObjectMap$Key) throws org.omg.PortableServer.POAPackage.ObjectNotActive, org.omg.PortableServer.POAPackage.WrongPolicy;
    Code:
       0: aload_0
       1: getfield      #16                 // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
       4: getfield      #42                 // Field com/sun/corba/se/spi/orb/ORB.poaDebugFlag:Z
       7: ifeq          33
      10: aload_0
      11: new           #19                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #43                 // String Calling deactivateObject for key
      20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokestatic  #44                 // Method com/sun/corba/se/impl/orbutil/ORBUtility.dprint:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload_0
      34: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      37: aload_1
      38: invokevirtual #9                  // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.get:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;)Lcom/sun/corba/se/impl/oa/poa/AOMEntry;
      41: astore_2
      42: aload_2
      43: ifnonnull     54
      46: new           #45                 // class org/omg/PortableServer/POAPackage/ObjectNotActive
      49: dup
      50: invokespecial #46                 // Method org/omg/PortableServer/POAPackage/ObjectNotActive."<init>":()V
      53: athrow
      54: aload_0
      55: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      58: aload_2
      59: invokevirtual #10                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.getServant:(Lcom/sun/corba/se/impl/oa/poa/AOMEntry;)Lorg/omg/PortableServer/Servant;
      62: astore_3
      63: aload_3
      64: ifnonnull     75
      67: new           #45                 // class org/omg/PortableServer/POAPackage/ObjectNotActive
      70: dup
      71: invokespecial #46                 // Method org/omg/PortableServer/POAPackage/ObjectNotActive."<init>":()V
      74: athrow
      75: aload_0
      76: getfield      #16                 // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      79: getfield      #42                 // Field com/sun/corba/se/spi/orb/ORB.poaDebugFlag:Z
      82: ifeq          122
      85: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
      88: new           #19                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #47                 // String Deactivating object
      97: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_3
     101: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     104: ldc           #24                 // String  with POA
     106: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
     113: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     116: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokevirtual #27                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     122: aload_0
     123: aload_1
     124: aload_2
     125: aload_3
     126: invokevirtual #48                 // Method deactivateHelper:(Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;Lcom/sun/corba/se/impl/oa/poa/AOMEntry;Lorg/omg/PortableServer/Servant;)V
     129: aload_3
     130: astore        4
     132: aload_0
     133: getfield      #16                 // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
     136: getfield      #42                 // Field com/sun/corba/se/spi/orb/ORB.poaDebugFlag:Z
     139: ifeq          148
     142: aload_0
     143: ldc           #49                 // String Exiting deactivateObject
     145: invokestatic  #44                 // Method com/sun/corba/se/impl/orbutil/ORBUtility.dprint:(Ljava/lang/Object;Ljava/lang/String;)V
     148: aload         4
     150: areturn
     151: astore        5
     153: aload_0
     154: getfield      #16                 // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
     157: getfield      #42                 // Field com/sun/corba/se/spi/orb/ORB.poaDebugFlag:Z
     160: ifeq          169
     163: aload_0
     164: ldc           #49                 // String Exiting deactivateObject
     166: invokestatic  #44                 // Method com/sun/corba/se/impl/orbutil/ORBUtility.dprint:(Ljava/lang/Object;Ljava/lang/String;)V
     169: aload         5
     171: athrow
    Exception table:
       from    to  target type
          33   132   151   any
         151   153   151   any

  public byte[] servantToId(org.omg.PortableServer.Servant) throws org.omg.PortableServer.POAPackage.ServantNotActive, org.omg.PortableServer.POAPackage.WrongPolicy;
    Code:
       0: aload_0
       1: getfield      #5                  // Field isUnique:Z
       4: ifne          22
       7: aload_0
       8: getfield      #50                 // Field isImplicit:Z
      11: ifne          22
      14: new           #51                 // class org/omg/PortableServer/POAPackage/WrongPolicy
      17: dup
      18: invokespecial #52                 // Method org/omg/PortableServer/POAPackage/WrongPolicy."<init>":()V
      21: athrow
      22: aload_0
      23: getfield      #5                  // Field isUnique:Z
      26: ifeq          47
      29: aload_0
      30: getfield      #7                  // Field activeObjectMap:Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap;
      33: aload_1
      34: invokevirtual #53                 // Method com/sun/corba/se/impl/oa/poa/ActiveObjectMap.getKey:(Lorg/omg/PortableServer/Servant;)Lcom/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key;
      37: astore_2
      38: aload_2
      39: ifnull        47
      42: aload_2
      43: getfield      #14                 // Field com/sun/corba/se/impl/oa/poa/ActiveObjectMap$Key.id:[B
      46: areturn
      47: aload_0
      48: getfield      #50                 // Field isImplicit:Z
      51: ifeq          106
      54: aload_0
      55: invokevirtual #54                 // Method newSystemId:()[B
      58: astore_2
      59: aload_0
      60: aload_2
      61: aload_1
      62: invokevirtual #55                 // Method activateObject:([BLorg/omg/PortableServer/Servant;)V
      65: aload_2
      66: areturn
      67: astore_2
      68: aload_0
      69: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      72: invokevirtual #3                  // Method com/sun/corba/se/impl/oa/poa/POAImpl.invocationWrapper:()Lcom/sun/corba/se/impl/logging/POASystemException;
      75: aload_2
      76: invokevirtual #57                 // Method com/sun/corba/se/impl/logging/POASystemException.servantToIdOaa:(Ljava/lang/Throwable;)Lorg/omg/CORBA/INTERNAL;
      79: athrow
      80: astore_2
      81: aload_0
      82: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      85: invokevirtual #3                  // Method com/sun/corba/se/impl/oa/poa/POAImpl.invocationWrapper:()Lcom/sun/corba/se/impl/logging/POASystemException;
      88: aload_2
      89: invokevirtual #58                 // Method com/sun/corba/se/impl/logging/POASystemException.servantToIdSaa:(Ljava/lang/Throwable;)Lorg/omg/CORBA/INTERNAL;
      92: athrow
      93: astore_2
      94: aload_0
      95: getfield      #25                 // Field poa:Lcom/sun/corba/se/impl/oa/poa/POAImpl;
      98: invokevirtual #3                  // Method com/sun/corba/se/impl/oa/poa/POAImpl.invocationWrapper:()Lcom/sun/corba/se/impl/logging/POASystemException;
     101: aload_2
     102: invokevirtual #59                 // Method com/sun/corba/se/impl/logging/POASystemException.servantToIdWp:(Ljava/lang/Throwable;)Lorg/omg/CORBA/INTERNAL;
     105: athrow
     106: new           #60                 // class org/omg/PortableServer/POAPackage/ServantNotActive
     109: dup
     110: invokespecial #61                 // Method org/omg/PortableServer/POAPackage/ServantNotActive."<init>":()V
     113: athrow
    Exception table:
       from    to  target type
          54    66    67   Class org/omg/PortableServer/POAPackage/ObjectAlreadyActive
          54    66    80   Class org/omg/PortableServer/POAPackage/ServantAlreadyActive
          54    66    93   Class org/omg/PortableServer/POAPackage/WrongPolicy
}
