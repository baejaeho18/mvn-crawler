Compiled from "LogWrapperBase.java"
public abstract class com.sun.corba.se.spi.logging.LogWrapperBase {
  protected java.util.logging.Logger logger;

  protected java.lang.String loggerName;

  protected com.sun.corba.se.spi.logging.LogWrapperBase(java.util.logging.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field logger:Ljava/util/logging/Logger;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/util/logging/Logger.getName:()Ljava/lang/String;
      14: putfield      #4                  // Field loggerName:Ljava/lang/String;
      17: return

  protected void doLog(java.util.logging.Level, java.lang.String, java.lang.Object[], java.lang.Class, java.lang.Throwable);
    Code:
       0: new           #5                  // class java/util/logging/LogRecord
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
       9: astore        6
      11: aload_3
      12: ifnull        21
      15: aload         6
      17: aload_3
      18: invokevirtual #7                  // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      21: aload_0
      22: aload         4
      24: aload         6
      26: invokespecial #8                  // Method inferCaller:(Ljava/lang/Class;Ljava/util/logging/LogRecord;)V
      29: aload         6
      31: aload         5
      33: invokevirtual #9                  // Method java/util/logging/LogRecord.setThrown:(Ljava/lang/Throwable;)V
      36: aload         6
      38: aload_0
      39: getfield      #4                  // Field loggerName:Ljava/lang/String;
      42: invokevirtual #10                 // Method java/util/logging/LogRecord.setLoggerName:(Ljava/lang/String;)V
      45: aload         6
      47: aload_0
      48: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      51: invokevirtual #11                 // Method java/util/logging/Logger.getResourceBundle:()Ljava/util/ResourceBundle;
      54: invokevirtual #12                 // Method java/util/logging/LogRecord.setResourceBundle:(Ljava/util/ResourceBundle;)V
      57: aload_0
      58: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      61: aload         6
      63: invokevirtual #13                 // Method java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V
      66: return

  private void inferCaller(java.lang.Class, java.util.logging.LogRecord);
    Code:
       0: new           #14                 // class java/lang/Throwable
       3: dup
       4: invokespecial #15                 // Method java/lang/Throwable."<init>":()V
       7: invokevirtual #16                 // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      10: astore_3
      11: aconst_null
      12: astore        4
      14: aload_1
      15: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      18: astore        5
      20: ldc           #18                 // class com/sun/corba/se/spi/logging/LogWrapperBase
      22: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      25: astore        6
      27: iconst_0
      28: istore        7
      30: iload         7
      32: aload_3
      33: arraylength
      34: if_icmpge     79
      37: aload_3
      38: iload         7
      40: aaload
      41: astore        4
      43: aload         4
      45: invokevirtual #19                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      48: astore        8
      50: aload         8
      52: aload         5
      54: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifne          73
      60: aload         8
      62: aload         6
      64: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          73
      70: goto          79
      73: iinc          7, 1
      76: goto          30
      79: iload         7
      81: aload_3
      82: arraylength
      83: if_icmpge     104
      86: aload_2
      87: aload         4
      89: invokevirtual #19                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      92: invokevirtual #21                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      95: aload_2
      96: aload         4
      98: invokevirtual #22                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
     101: invokevirtual #23                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
     104: return

  protected void doLog(java.util.logging.Level, java.lang.String, java.lang.Class, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: aload         4
       7: invokevirtual #24                 // Method doLog:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Throwable;)V
      10: return
}
