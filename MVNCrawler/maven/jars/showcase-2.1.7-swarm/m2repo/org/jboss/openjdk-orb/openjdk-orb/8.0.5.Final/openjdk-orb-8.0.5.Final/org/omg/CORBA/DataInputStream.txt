Compiled from "DataInputStream.java"
public interface org.omg.CORBA.DataInputStream extends org.omg.CORBA.portable.ValueBase {
  public abstract org.omg.CORBA.Any read_any();

  public abstract boolean read_boolean();

  public abstract char read_char();

  public abstract char read_wchar();

  public abstract byte read_octet();

  public abstract short read_short();

  public abstract short read_ushort();

  public abstract int read_long();

  public abstract int read_ulong();

  public abstract long read_longlong();

  public abstract long read_ulonglong();

  public abstract float read_float();

  public abstract double read_double();

  public abstract java.lang.String read_string();

  public abstract java.lang.String read_wstring();

  public abstract org.omg.CORBA.Object read_Object();

  public abstract java.lang.Object read_Abstract();

  public abstract java.io.Serializable read_Value();

  public abstract org.omg.CORBA.TypeCode read_TypeCode();

  public abstract void read_any_array(org.omg.CORBA.AnySeqHolder, int, int);

  public abstract void read_boolean_array(org.omg.CORBA.BooleanSeqHolder, int, int);

  public abstract void read_char_array(org.omg.CORBA.CharSeqHolder, int, int);

  public abstract void read_wchar_array(org.omg.CORBA.WCharSeqHolder, int, int);

  public abstract void read_octet_array(org.omg.CORBA.OctetSeqHolder, int, int);

  public abstract void read_short_array(org.omg.CORBA.ShortSeqHolder, int, int);

  public abstract void read_ushort_array(org.omg.CORBA.UShortSeqHolder, int, int);

  public abstract void read_long_array(org.omg.CORBA.LongSeqHolder, int, int);

  public abstract void read_ulong_array(org.omg.CORBA.ULongSeqHolder, int, int);

  public abstract void read_ulonglong_array(org.omg.CORBA.ULongLongSeqHolder, int, int);

  public abstract void read_longlong_array(org.omg.CORBA.LongLongSeqHolder, int, int);

  public abstract void read_float_array(org.omg.CORBA.FloatSeqHolder, int, int);

  public abstract void read_double_array(org.omg.CORBA.DoubleSeqHolder, int, int);
}
