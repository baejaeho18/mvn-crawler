Compiled from "ByteBufferPoolImpl.java"
public class com.sun.corba.se.impl.transport.ByteBufferPoolImpl implements com.sun.corba.se.pept.transport.ByteBufferPool {
  private com.sun.corba.se.spi.orb.ORB itsOrb;

  private int itsByteBufferSize;

  private java.util.ArrayList itsPool;

  private int itsObjectCounter;

  private boolean debug;

  public com.sun.corba.se.impl.transport.ByteBufferPoolImpl(com.sun.corba.se.spi.orb.ORB);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field itsObjectCounter:I
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method com/sun/corba/se/spi/orb/ORB.getORBData:()Lcom/sun/corba/se/spi/orb/ORBData;
      14: invokeinterface #4,  1            // InterfaceMethod com/sun/corba/se/spi/orb/ORBData.getGIOPFragmentSize:()I
      19: putfield      #5                  // Field itsByteBufferSize:I
      22: aload_0
      23: new           #6                  // class java/util/ArrayList
      26: dup
      27: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      30: putfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      33: aload_0
      34: aload_1
      35: putfield      #9                  // Field itsOrb:Lcom/sun/corba/se/spi/orb/ORB;
      38: aload_0
      39: aload_1
      40: getfield      #10                 // Field com/sun/corba/se/spi/orb/ORB.transportDebugFlag:Z
      43: putfield      #11                 // Field debug:Z
      46: return

  public java.nio.ByteBuffer getByteBuffer(int);
    Code:
       0: aconst_null
       1: astore_2
       2: iload_1
       3: aload_0
       4: getfield      #5                  // Field itsByteBufferSize:I
       7: if_icmpgt     103
      10: aload_0
      11: getfield      #9                  // Field itsOrb:Lcom/sun/corba/se/spi/orb/ORB;
      14: invokevirtual #3                  // Method com/sun/corba/se/spi/orb/ORB.getORBData:()Lcom/sun/corba/se/spi/orb/ORBData;
      17: invokeinterface #12,  1           // InterfaceMethod com/sun/corba/se/spi/orb/ORBData.disableDirectByteBufferUse:()Z
      22: ifne          103
      25: aload_0
      26: getfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      29: dup
      30: astore        4
      32: monitorenter
      33: aload_0
      34: getfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      37: invokevirtual #13                 // Method java/util/ArrayList.size:()I
      40: istore_3
      41: iload_3
      42: ifle          64
      45: aload_0
      46: getfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      49: iload_3
      50: iconst_1
      51: isub
      52: invokevirtual #14                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      55: checkcast     #15                 // class java/nio/ByteBuffer
      58: astore_2
      59: aload_2
      60: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      63: pop
      64: aload         4
      66: monitorexit
      67: goto          78
      70: astore        5
      72: aload         4
      74: monitorexit
      75: aload         5
      77: athrow
      78: iload_3
      79: ifgt          90
      82: aload_0
      83: getfield      #5                  // Field itsByteBufferSize:I
      86: invokestatic  #17                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      89: astore_2
      90: aload_0
      91: dup
      92: getfield      #2                  // Field itsObjectCounter:I
      95: iconst_1
      96: iadd
      97: putfield      #2                  // Field itsObjectCounter:I
     100: goto          108
     103: iload_1
     104: invokestatic  #18                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     107: astore_2
     108: aload_2
     109: areturn
    Exception table:
       from    to  target type
          33    67    70   any
          70    75    70   any

  public void releaseByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method java/nio/ByteBuffer.isDirect:()Z
       4: ifeq          182
       7: aload_0
       8: getfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      11: dup
      12: astore_2
      13: monitorenter
      14: iconst_0
      15: istore_3
      16: iconst_0
      17: istore        4
      19: aload_0
      20: getfield      #11                 // Field debug:Z
      23: ifeq          79
      26: iconst_0
      27: istore        5
      29: iload         5
      31: aload_0
      32: getfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      35: invokevirtual #13                 // Method java/util/ArrayList.size:()I
      38: if_icmpge     79
      41: iload_3
      42: ifne          79
      45: aload_0
      46: getfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      49: iload         5
      51: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      54: checkcast     #15                 // class java/nio/ByteBuffer
      57: astore        6
      59: aload_1
      60: aload         6
      62: if_acmpne     73
      65: iconst_1
      66: istore_3
      67: aload_1
      68: invokestatic  #21                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      71: istore        4
      73: iinc          5, 1
      76: goto          29
      79: iload_3
      80: ifeq          90
      83: aload_0
      84: getfield      #11                 // Field debug:Z
      87: ifne          102
      90: aload_0
      91: getfield      #8                  // Field itsPool:Ljava/util/ArrayList;
      94: aload_1
      95: invokevirtual #22                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      98: pop
      99: goto          157
     102: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     105: invokevirtual #24                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     108: astore        5
     110: new           #25                 // class java/lang/Throwable
     113: dup
     114: new           #26                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     121: aload         5
     123: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #29                 // String : Duplicate ByteBuffer reference (
     128: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: iload         4
     133: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: ldc           #31                 // String )
     138: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #33                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
     147: astore        6
     149: aload         6
     151: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
     154: invokevirtual #35                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
     157: aload_2
     158: monitorexit
     159: goto          169
     162: astore        7
     164: aload_2
     165: monitorexit
     166: aload         7
     168: athrow
     169: aload_0
     170: dup
     171: getfield      #2                  // Field itsObjectCounter:I
     174: iconst_1
     175: isub
     176: putfield      #2                  // Field itsObjectCounter:I
     179: goto          184
     182: aconst_null
     183: astore_1
     184: return
    Exception table:
       from    to  target type
          14   159   162   any
         162   166   162   any

  public int activeCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field itsObjectCounter:I
       4: ireturn
}
