Compiled from "PICurrent.java"
public class com.sun.corba.se.impl.interceptors.PICurrent extends org.omg.CORBA.LocalObject implements org.omg.PortableInterceptor.Current {
  private int slotCounter;

  private com.sun.corba.se.spi.orb.ORB myORB;

  private com.sun.corba.se.impl.logging.OMGSystemException wrapper;

  private boolean orbInitializing;

  private java.lang.ThreadLocal threadLocalSlotTable;

  com.sun.corba.se.impl.interceptors.PICurrent(com.sun.corba.se.spi.orb.ORB);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/omg/CORBA/LocalObject."<init>":()V
       4: aload_0
       5: new           #4                  // class com/sun/corba/se/impl/interceptors/PICurrent$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method com/sun/corba/se/impl/interceptors/PICurrent$1."<init>":(Lcom/sun/corba/se/impl/interceptors/PICurrent;)V
      13: putfield      #6                  // Field threadLocalSlotTable:Ljava/lang/ThreadLocal;
      16: aload_0
      17: aload_1
      18: putfield      #2                  // Field myORB:Lcom/sun/corba/se/spi/orb/ORB;
      21: aload_0
      22: aload_1
      23: ldc           #8                  // String rpc.protocol
      25: invokestatic  #9                  // Method com/sun/corba/se/impl/logging/OMGSystemException.get:(Lcom/sun/corba/se/spi/orb/ORB;Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/OMGSystemException;
      28: putfield      #10                 // Field wrapper:Lcom/sun/corba/se/impl/logging/OMGSystemException;
      31: aload_0
      32: iconst_1
      33: putfield      #11                 // Field orbInitializing:Z
      36: aload_0
      37: iconst_0
      38: putfield      #1                  // Field slotCounter:I
      41: return

  int allocateSlotId();
    Code:
       0: aload_0
       1: getfield      #1                  // Field slotCounter:I
       4: istore_1
       5: aload_0
       6: aload_0
       7: getfield      #1                  // Field slotCounter:I
      10: iconst_1
      11: iadd
      12: putfield      #1                  // Field slotCounter:I
      15: iload_1
      16: ireturn

  com.sun.corba.se.impl.interceptors.SlotTable getSlotTable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field threadLocalSlotTable:Ljava/lang/ThreadLocal;
       4: invokevirtual #12                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #13                 // class com/sun/corba/se/impl/interceptors/SlotTableStack
      10: invokevirtual #14                 // Method com/sun/corba/se/impl/interceptors/SlotTableStack.peekSlotTable:()Lcom/sun/corba/se/impl/interceptors/SlotTable;
      13: astore_1
      14: aload_1
      15: areturn

  void pushSlotTable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field threadLocalSlotTable:Ljava/lang/ThreadLocal;
       4: invokevirtual #12                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #13                 // class com/sun/corba/se/impl/interceptors/SlotTableStack
      10: astore_1
      11: aload_1
      12: invokevirtual #15                 // Method com/sun/corba/se/impl/interceptors/SlotTableStack.pushSlotTable:()V
      15: return

  void popSlotTable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field threadLocalSlotTable:Ljava/lang/ThreadLocal;
       4: invokevirtual #12                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #13                 // class com/sun/corba/se/impl/interceptors/SlotTableStack
      10: astore_1
      11: aload_1
      12: invokevirtual #16                 // Method com/sun/corba/se/impl/interceptors/SlotTableStack.popSlotTable:()V
      15: return

  public void set_slot(int, org.omg.CORBA.Any) throws org.omg.PortableInterceptor.InvalidSlot;
    Code:
       0: aload_0
       1: getfield      #11                 // Field orbInitializing:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #10                 // Field wrapper:Lcom/sun/corba/se/impl/logging/OMGSystemException;
      11: invokevirtual #17                 // Method com/sun/corba/se/impl/logging/OMGSystemException.invalidPiCall3:()Lorg/omg/CORBA/BAD_INV_ORDER;
      14: athrow
      15: aload_0
      16: invokevirtual #18                 // Method getSlotTable:()Lcom/sun/corba/se/impl/interceptors/SlotTable;
      19: iload_1
      20: aload_2
      21: invokevirtual #19                 // Method com/sun/corba/se/impl/interceptors/SlotTable.set_slot:(ILorg/omg/CORBA/Any;)V
      24: return

  public org.omg.CORBA.Any get_slot(int) throws org.omg.PortableInterceptor.InvalidSlot;
    Code:
       0: aload_0
       1: getfield      #11                 // Field orbInitializing:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #10                 // Field wrapper:Lcom/sun/corba/se/impl/logging/OMGSystemException;
      11: invokevirtual #20                 // Method com/sun/corba/se/impl/logging/OMGSystemException.invalidPiCall4:()Lorg/omg/CORBA/BAD_INV_ORDER;
      14: athrow
      15: aload_0
      16: invokevirtual #18                 // Method getSlotTable:()Lcom/sun/corba/se/impl/interceptors/SlotTable;
      19: iload_1
      20: invokevirtual #21                 // Method com/sun/corba/se/impl/interceptors/SlotTable.get_slot:(I)Lorg/omg/CORBA/Any;
      23: areturn

  void resetSlotTable();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getSlotTable:()Lcom/sun/corba/se/impl/interceptors/SlotTable;
       4: invokevirtual #22                 // Method com/sun/corba/se/impl/interceptors/SlotTable.resetSlots:()V
       7: return

  void setORBInitializing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field orbInitializing:Z
       5: return

  static com.sun.corba.se.spi.orb.ORB access$000(com.sun.corba.se.impl.interceptors.PICurrent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myORB:Lcom/sun/corba/se/spi/orb/ORB;
       4: areturn

  static int access$100(com.sun.corba.se.impl.interceptors.PICurrent);
    Code:
       0: aload_0
       1: getfield      #1                  // Field slotCounter:I
       4: ireturn
}
