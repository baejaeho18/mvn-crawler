Compiled from "CodeSetConversion.java"
class com.sun.corba.se.impl.encoding.CodeSetConversion$JavaBTCConverter extends com.sun.corba.se.impl.encoding.CodeSetConversion$BTCConverter {
  private com.sun.corba.se.impl.logging.ORBUtilSystemException wrapper;

  private com.sun.corba.se.impl.logging.OMGSystemException omgWrapper;

  protected java.nio.charset.CharsetDecoder btc;

  private char[] buffer;

  private int resultingNumChars;

  private com.sun.corba.se.impl.encoding.OSFCodeSetRegistry$Entry codeset;

  final com.sun.corba.se.impl.encoding.CodeSetConversion this$0;

  public com.sun.corba.se.impl.encoding.CodeSetConversion$JavaBTCConverter(com.sun.corba.se.impl.encoding.CodeSetConversion, com.sun.corba.se.impl.encoding.OSFCodeSetRegistry$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/sun/corba/se/impl/encoding/CodeSetConversion;
       5: aload_0
       6: invokespecial #2                  // Method com/sun/corba/se/impl/encoding/CodeSetConversion$BTCConverter."<init>":()V
       9: aload_0
      10: ldc           #4                  // String rpc.encoding
      12: invokestatic  #5                  // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.get:(Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      15: putfield      #6                  // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      18: aload_0
      19: ldc           #4                  // String rpc.encoding
      21: invokestatic  #7                  // Method com/sun/corba/se/impl/logging/OMGSystemException.get:(Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/OMGSystemException;
      24: putfield      #8                  // Field omgWrapper:Lcom/sun/corba/se/impl/logging/OMGSystemException;
      27: aload_0
      28: aload_0
      29: aload_2
      30: invokevirtual #9                  // Method com/sun/corba/se/impl/encoding/OSFCodeSetRegistry$Entry.getName:()Ljava/lang/String;
      33: invokevirtual #10                 // Method getConverter:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;
      36: putfield      #11                 // Field btc:Ljava/nio/charset/CharsetDecoder;
      39: aload_0
      40: aload_2
      41: putfield      #12                 // Field codeset:Lcom/sun/corba/se/impl/encoding/OSFCodeSetRegistry$Entry;
      44: return

  public final boolean isFixedWidthEncoding();
    Code:
       0: aload_0
       1: getfield      #12                 // Field codeset:Lcom/sun/corba/se/impl/encoding/OSFCodeSetRegistry$Entry;
       4: invokevirtual #13                 // Method com/sun/corba/se/impl/encoding/OSFCodeSetRegistry$Entry.isFixedWidth:()Z
       7: ireturn

  public final int getFixedCharWidth();
    Code:
       0: aload_0
       1: getfield      #12                 // Field codeset:Lcom/sun/corba/se/impl/encoding/OSFCodeSetRegistry$Entry;
       4: invokevirtual #14                 // Method com/sun/corba/se/impl/encoding/OSFCodeSetRegistry$Entry.getMaxBytesPerChar:()I
       7: ireturn

  public final int getNumChars();
    Code:
       0: aload_0
       1: getfield      #15                 // Field resultingNumChars:I
       4: ireturn

  public char[] getChars(byte[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #16                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
       6: astore        4
       8: aload_0
       9: getfield      #11                 // Field btc:Ljava/nio/charset/CharsetDecoder;
      12: aload         4
      14: invokevirtual #17                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      17: astore        5
      19: aload_0
      20: aload         5
      22: invokevirtual #18                 // Method java/nio/CharBuffer.limit:()I
      25: putfield      #15                 // Field resultingNumChars:I
      28: aload         5
      30: invokevirtual #18                 // Method java/nio/CharBuffer.limit:()I
      33: aload         5
      35: invokevirtual #19                 // Method java/nio/CharBuffer.capacity:()I
      38: if_icmpne     53
      41: aload_0
      42: aload         5
      44: invokevirtual #20                 // Method java/nio/CharBuffer.array:()[C
      47: putfield      #21                 // Field buffer:[C
      50: goto          84
      53: aload_0
      54: aload         5
      56: invokevirtual #18                 // Method java/nio/CharBuffer.limit:()I
      59: newarray       char
      61: putfield      #21                 // Field buffer:[C
      64: aload         5
      66: aload_0
      67: getfield      #21                 // Field buffer:[C
      70: iconst_0
      71: aload         5
      73: invokevirtual #18                 // Method java/nio/CharBuffer.limit:()I
      76: invokevirtual #22                 // Method java/nio/CharBuffer.get:([CII)Ljava/nio/CharBuffer;
      79: iconst_0
      80: invokevirtual #23                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      83: pop
      84: aload_0
      85: getfield      #21                 // Field buffer:[C
      88: areturn
      89: astore        4
      91: aload_0
      92: getfield      #6                  // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      95: aload         4
      97: invokevirtual #25                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.btcConverterFailure:(Ljava/lang/Throwable;)Lorg/omg/CORBA/INTERNAL;
     100: athrow
     101: astore        4
     103: aload_0
     104: getfield      #6                  // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
     107: aload         4
     109: invokevirtual #27                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.badUnicodePair:(Ljava/lang/Throwable;)Lorg/omg/CORBA/DATA_CONVERSION;
     112: athrow
     113: astore        4
     115: aload_0
     116: getfield      #8                  // Field omgWrapper:Lcom/sun/corba/se/impl/logging/OMGSystemException;
     119: aload         4
     121: invokevirtual #29                 // Method com/sun/corba/se/impl/logging/OMGSystemException.charNotInCodeset:(Ljava/lang/Throwable;)Lorg/omg/CORBA/DATA_CONVERSION;
     124: athrow
     125: astore        4
     127: aload_0
     128: getfield      #6                  // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
     131: aload         4
     133: invokevirtual #25                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.btcConverterFailure:(Ljava/lang/Throwable;)Lorg/omg/CORBA/INTERNAL;
     136: athrow
    Exception table:
       from    to  target type
           0    88    89   Class java/lang/IllegalStateException
           0    88   101   Class java/nio/charset/MalformedInputException
           0    88   113   Class java/nio/charset/UnmappableCharacterException
           0    88   125   Class java/nio/charset/CharacterCodingException

  protected java.nio.charset.CharsetDecoder getConverter(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #1                  // Field this$0:Lcom/sun/corba/se/impl/encoding/CodeSetConversion;
       6: invokestatic  #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion.access$000:(Lcom/sun/corba/se/impl/encoding/CodeSetConversion;)Lcom/sun/corba/se/impl/encoding/CodeSetCache;
       9: aload_1
      10: invokevirtual #32                 // Method com/sun/corba/se/impl/encoding/CodeSetCache.getByteToCharConverter:(Ljava/lang/Object;)Ljava/nio/charset/CharsetDecoder;
      13: astore_2
      14: aload_2
      15: ifnonnull     41
      18: aload_1
      19: invokestatic  #33                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      22: astore_3
      23: aload_3
      24: invokevirtual #34                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      27: astore_2
      28: aload_0
      29: getfield      #1                  // Field this$0:Lcom/sun/corba/se/impl/encoding/CodeSetConversion;
      32: invokestatic  #31                 // Method com/sun/corba/se/impl/encoding/CodeSetConversion.access$000:(Lcom/sun/corba/se/impl/encoding/CodeSetConversion;)Lcom/sun/corba/se/impl/encoding/CodeSetCache;
      35: aload_1
      36: aload_2
      37: invokevirtual #35                 // Method com/sun/corba/se/impl/encoding/CodeSetCache.setConverter:(Ljava/lang/Object;Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;
      40: pop
      41: goto          55
      44: astore_3
      45: aload_0
      46: getfield      #6                  // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      49: aload_3
      50: aload_1
      51: invokevirtual #37                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.invalidBtcConverterName:(Ljava/lang/Throwable;Ljava/lang/Object;)Lorg/omg/CORBA/INTERNAL;
      54: athrow
      55: aload_2
      56: areturn
    Exception table:
       from    to  target type
           2    41    44   Class java/nio/charset/IllegalCharsetNameException
}
