Compiled from "ORBDataParserImpl.java"
public class com.sun.corba.se.impl.orb.ORBDataParserImpl extends com.sun.corba.se.spi.orb.ParserImplTableBase implements com.sun.corba.se.spi.orb.ORBData {
  private com.sun.corba.se.spi.orb.ORB orb;

  private com.sun.corba.se.impl.logging.ORBUtilSystemException wrapper;

  private java.lang.String ORBInitialHost;

  private java.lang.Integer ORBInitialPort;

  private java.lang.String ORBServerHost;

  private int ORBServerPort;

  private boolean listenOnAllInterfaces;

  private com.sun.corba.se.spi.legacy.connection.ORBSocketFactory legacySocketFactory;

  private com.sun.corba.se.spi.transport.ORBSocketFactory socketFactory;

  private com.sun.corba.se.impl.legacy.connection.USLPort[] userSpecifiedListenPorts;

  private com.sun.corba.se.spi.transport.IORToSocketInfo iorToSocketInfo;

  private com.sun.corba.se.spi.transport.IIOPPrimaryToContactInfo iiopPrimaryToContactInfo;

  private java.lang.String orbId;

  private boolean orbServerIdPropertySpecified;

  private java.net.URL servicesURL;

  private java.lang.String propertyInitRef;

  private boolean allowLocalOptimization;

  private com.sun.corba.se.spi.ior.iiop.GIOPVersion giopVersion;

  private int highWaterMark;

  private int lowWaterMark;

  private int numberToReclaim;

  private int giopFragmentSize;

  private int giopBufferSize;

  private int giop11BuffMgr;

  private int giop12BuffMgr;

  private short giopTargetAddressPreference;

  private short giopAddressDisposition;

  private boolean useByteOrderMarkers;

  private boolean useByteOrderMarkersInEncaps;

  private boolean alwaysSendCodeSetCtx;

  private boolean persistentPortInitialized;

  private int persistentServerPort;

  private boolean persistentServerIdInitialized;

  private int persistentServerId;

  private boolean serverIsORBActivated;

  private java.lang.Class badServerIdHandlerClass;

  private com.sun.corba.se.impl.encoding.CodeSetComponentInfo$CodeSetComponent charData;

  private com.sun.corba.se.impl.encoding.CodeSetComponentInfo$CodeSetComponent wcharData;

  private org.omg.PortableInterceptor.ORBInitializer[] orbInitializers;

  private com.sun.corba.se.spi.orb.StringPair[] orbInitialReferences;

  private java.lang.String defaultInitRef;

  private java.lang.String[] debugFlags;

  private com.sun.corba.se.pept.transport.Acceptor[] acceptors;

  private com.sun.corba.se.spi.transport.CorbaContactInfoListFactory corbaContactInfoListFactory;

  private java.lang.String acceptorSocketType;

  private boolean acceptorSocketUseSelectThreadToWait;

  private boolean acceptorSocketUseWorkerThreadForEvent;

  private java.lang.String connectionSocketType;

  private boolean connectionSocketUseSelectThreadToWait;

  private boolean connectionSocketUseWorkerThreadForEvent;

  private com.sun.corba.se.spi.transport.ReadTimeouts readTimeouts;

  private boolean disableDirectByteBufferUse;

  private boolean enableJavaSerialization;

  private boolean useRepId;

  private com.sun.corba.se.impl.encoding.CodeSetComponentInfo codesets;

  public java.lang.String getORBInitialHost();
    Code:
       0: aload_0
       1: getfield      #1                  // Field ORBInitialHost:Ljava/lang/String;
       4: areturn

  public java.lang.Integer getORBInitialPort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ORBInitialPort:Ljava/lang/Integer;
       4: areturn

  public java.lang.String getORBServerHost();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ORBServerHost:Ljava/lang/String;
       4: areturn

  public boolean getListenOnAllInterfaces();
    Code:
       0: aload_0
       1: getfield      #4                  // Field listenOnAllInterfaces:Z
       4: ireturn

  public int getORBServerPort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ORBServerPort:I
       4: ireturn

  public com.sun.corba.se.spi.legacy.connection.ORBSocketFactory getLegacySocketFactory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field legacySocketFactory:Lcom/sun/corba/se/spi/legacy/connection/ORBSocketFactory;
       4: areturn

  public com.sun.corba.se.spi.transport.ORBSocketFactory getSocketFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field socketFactory:Lcom/sun/corba/se/spi/transport/ORBSocketFactory;
       4: areturn

  public com.sun.corba.se.impl.legacy.connection.USLPort[] getUserSpecifiedListenPorts();
    Code:
       0: aload_0
       1: getfield      #8                  // Field userSpecifiedListenPorts:[Lcom/sun/corba/se/impl/legacy/connection/USLPort;
       4: areturn

  public com.sun.corba.se.spi.transport.IORToSocketInfo getIORToSocketInfo();
    Code:
       0: aload_0
       1: getfield      #9                  // Field iorToSocketInfo:Lcom/sun/corba/se/spi/transport/IORToSocketInfo;
       4: areturn

  public com.sun.corba.se.spi.transport.IIOPPrimaryToContactInfo getIIOPPrimaryToContactInfo();
    Code:
       0: aload_0
       1: getfield      #10                 // Field iiopPrimaryToContactInfo:Lcom/sun/corba/se/spi/transport/IIOPPrimaryToContactInfo;
       4: areturn

  public java.lang.String getORBId();
    Code:
       0: aload_0
       1: getfield      #11                 // Field orbId:Ljava/lang/String;
       4: areturn

  public boolean getORBServerIdPropertySpecified();
    Code:
       0: aload_0
       1: getfield      #12                 // Field orbServerIdPropertySpecified:Z
       4: ireturn

  public boolean isLocalOptimizationAllowed();
    Code:
       0: aload_0
       1: getfield      #13                 // Field allowLocalOptimization:Z
       4: ireturn

  public com.sun.corba.se.spi.ior.iiop.GIOPVersion getGIOPVersion();
    Code:
       0: aload_0
       1: getfield      #14                 // Field giopVersion:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
       4: areturn

  public int getHighWaterMark();
    Code:
       0: aload_0
       1: getfield      #15                 // Field highWaterMark:I
       4: ireturn

  public int getLowWaterMark();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lowWaterMark:I
       4: ireturn

  public int getNumberToReclaim();
    Code:
       0: aload_0
       1: getfield      #17                 // Field numberToReclaim:I
       4: ireturn

  public int getGIOPFragmentSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field giopFragmentSize:I
       4: ireturn

  public int getGIOPBufferSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field giopBufferSize:I
       4: ireturn

  public int getGIOPBuffMgrStrategy(com.sun.corba.se.spi.ior.iiop.GIOPVersion);
    Code:
       0: aload_1
       1: ifnull        46
       4: aload_1
       5: getstatic     #20                 // Field com/sun/corba/se/spi/ior/iiop/GIOPVersion.V1_0:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
       8: invokevirtual #21                 // Method com/sun/corba/se/spi/ior/iiop/GIOPVersion.equals:(Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;)Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: getstatic     #22                 // Field com/sun/corba/se/spi/ior/iiop/GIOPVersion.V1_1:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      20: invokevirtual #21                 // Method com/sun/corba/se/spi/ior/iiop/GIOPVersion.equals:(Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;)Z
      23: ifeq          31
      26: aload_0
      27: getfield      #23                 // Field giop11BuffMgr:I
      30: ireturn
      31: aload_1
      32: getstatic     #24                 // Field com/sun/corba/se/spi/ior/iiop/GIOPVersion.V1_2:Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;
      35: invokevirtual #21                 // Method com/sun/corba/se/spi/ior/iiop/GIOPVersion.equals:(Lcom/sun/corba/se/spi/ior/iiop/GIOPVersion;)Z
      38: ifeq          46
      41: aload_0
      42: getfield      #25                 // Field giop12BuffMgr:I
      45: ireturn
      46: iconst_0
      47: ireturn

  public short getGIOPTargetAddressPreference();
    Code:
       0: aload_0
       1: getfield      #26                 // Field giopTargetAddressPreference:S
       4: ireturn

  public short getGIOPAddressDisposition();
    Code:
       0: aload_0
       1: getfield      #27                 // Field giopAddressDisposition:S
       4: ireturn

  public boolean useByteOrderMarkers();
    Code:
       0: aload_0
       1: getfield      #28                 // Field useByteOrderMarkers:Z
       4: ireturn

  public boolean useByteOrderMarkersInEncapsulations();
    Code:
       0: aload_0
       1: getfield      #29                 // Field useByteOrderMarkersInEncaps:Z
       4: ireturn

  public boolean alwaysSendCodeSetServiceContext();
    Code:
       0: aload_0
       1: getfield      #30                 // Field alwaysSendCodeSetCtx:Z
       4: ireturn

  public boolean getPersistentPortInitialized();
    Code:
       0: aload_0
       1: getfield      #31                 // Field persistentPortInitialized:Z
       4: ireturn

  public int getPersistentServerPort();
    Code:
       0: aload_0
       1: getfield      #31                 // Field persistentPortInitialized:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #32                 // Field persistentServerPort:I
      11: ireturn
      12: aload_0
      13: getfield      #33                 // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      16: getstatic     #34                 // Field org/omg/CORBA/CompletionStatus.COMPLETED_MAYBE:Lorg/omg/CORBA/CompletionStatus;
      19: invokevirtual #35                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.persistentServerportNotSet:(Lorg/omg/CORBA/CompletionStatus;)Lorg/omg/CORBA/INITIALIZE;
      22: athrow

  public boolean getPersistentServerIdInitialized();
    Code:
       0: aload_0
       1: getfield      #36                 // Field persistentServerIdInitialized:Z
       4: ireturn

  public int getPersistentServerId();
    Code:
       0: aload_0
       1: getfield      #36                 // Field persistentServerIdInitialized:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #37                 // Field persistentServerId:I
      11: ireturn
      12: aload_0
      13: getfield      #33                 // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      16: getstatic     #34                 // Field org/omg/CORBA/CompletionStatus.COMPLETED_MAYBE:Lorg/omg/CORBA/CompletionStatus;
      19: invokevirtual #38                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.persistentServeridNotSet:(Lorg/omg/CORBA/CompletionStatus;)Lorg/omg/CORBA/INITIALIZE;
      22: athrow

  public boolean getServerIsORBActivated();
    Code:
       0: aload_0
       1: getfield      #39                 // Field serverIsORBActivated:Z
       4: ireturn

  public java.lang.Class getBadServerIdHandler();
    Code:
       0: aload_0
       1: getfield      #40                 // Field badServerIdHandlerClass:Ljava/lang/Class;
       4: areturn

  public com.sun.corba.se.impl.encoding.CodeSetComponentInfo getCodeSetComponentInfo();
    Code:
       0: aload_0
       1: getfield      #41                 // Field codesets:Lcom/sun/corba/se/impl/encoding/CodeSetComponentInfo;
       4: areturn

  public org.omg.PortableInterceptor.ORBInitializer[] getORBInitializers();
    Code:
       0: aload_0
       1: getfield      #42                 // Field orbInitializers:[Lorg/omg/PortableInterceptor/ORBInitializer;
       4: areturn

  public com.sun.corba.se.spi.orb.StringPair[] getORBInitialReferences();
    Code:
       0: aload_0
       1: getfield      #43                 // Field orbInitialReferences:[Lcom/sun/corba/se/spi/orb/StringPair;
       4: areturn

  public java.lang.String getORBDefaultInitialReference();
    Code:
       0: aload_0
       1: getfield      #44                 // Field defaultInitRef:Ljava/lang/String;
       4: areturn

  public java.lang.String[] getORBDebugFlags();
    Code:
       0: aload_0
       1: getfield      #45                 // Field debugFlags:[Ljava/lang/String;
       4: areturn

  public com.sun.corba.se.pept.transport.Acceptor[] getAcceptors();
    Code:
       0: aload_0
       1: getfield      #46                 // Field acceptors:[Lcom/sun/corba/se/pept/transport/Acceptor;
       4: areturn

  public com.sun.corba.se.spi.transport.CorbaContactInfoListFactory getCorbaContactInfoListFactory();
    Code:
       0: aload_0
       1: getfield      #47                 // Field corbaContactInfoListFactory:Lcom/sun/corba/se/spi/transport/CorbaContactInfoListFactory;
       4: areturn

  public java.lang.String acceptorSocketType();
    Code:
       0: aload_0
       1: getfield      #48                 // Field acceptorSocketType:Ljava/lang/String;
       4: areturn

  public boolean acceptorSocketUseSelectThreadToWait();
    Code:
       0: aload_0
       1: getfield      #49                 // Field acceptorSocketUseSelectThreadToWait:Z
       4: ireturn

  public boolean acceptorSocketUseWorkerThreadForEvent();
    Code:
       0: aload_0
       1: getfield      #50                 // Field acceptorSocketUseWorkerThreadForEvent:Z
       4: ireturn

  public java.lang.String connectionSocketType();
    Code:
       0: aload_0
       1: getfield      #51                 // Field connectionSocketType:Ljava/lang/String;
       4: areturn

  public boolean connectionSocketUseSelectThreadToWait();
    Code:
       0: aload_0
       1: getfield      #52                 // Field connectionSocketUseSelectThreadToWait:Z
       4: ireturn

  public boolean connectionSocketUseWorkerThreadForEvent();
    Code:
       0: aload_0
       1: getfield      #53                 // Field connectionSocketUseWorkerThreadForEvent:Z
       4: ireturn

  public boolean isJavaSerializationEnabled();
    Code:
       0: aload_0
       1: getfield      #54                 // Field enableJavaSerialization:Z
       4: ireturn

  public com.sun.corba.se.spi.transport.ReadTimeouts getTransportTCPReadTimeouts();
    Code:
       0: aload_0
       1: getfield      #55                 // Field readTimeouts:Lcom/sun/corba/se/spi/transport/ReadTimeouts;
       4: areturn

  public boolean disableDirectByteBufferUse();
    Code:
       0: aload_0
       1: getfield      #56                 // Field disableDirectByteBufferUse:Z
       4: ireturn

  public boolean useRepId();
    Code:
       0: aload_0
       1: getfield      #57                 // Field useRepId:Z
       4: ireturn

  public com.sun.corba.se.impl.orb.ORBDataParserImpl(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.spi.orb.DataCollector);
    Code:
       0: aload_0
       1: invokestatic  #58                 // Method com/sun/corba/se/impl/orb/ParserTable.get:()Lcom/sun/corba/se/impl/orb/ParserTable;
       4: invokevirtual #59                 // Method com/sun/corba/se/impl/orb/ParserTable.getParserData:()[Lcom/sun/corba/se/spi/orb/ParserData;
       7: invokespecial #60                 // Method com/sun/corba/se/spi/orb/ParserImplTableBase."<init>":([Lcom/sun/corba/se/spi/orb/ParserData;)V
      10: aload_0
      11: aload_1
      12: putfield      #61                 // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      15: aload_0
      16: aload_1
      17: ldc           #63                 // String orb.lifecycle
      19: invokestatic  #64                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.get:(Lcom/sun/corba/se/spi/orb/ORB;Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      22: putfield      #33                 // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      25: aload_0
      26: aload_2
      27: invokevirtual #65                 // Method init:(Lcom/sun/corba/se/spi/orb/DataCollector;)V
      30: aload_0
      31: invokevirtual #66                 // Method complete:()V
      34: return

  public void complete();
    Code:
       0: aload_0
       1: new           #67                 // class com/sun/corba/se/impl/encoding/CodeSetComponentInfo
       4: dup
       5: aload_0
       6: getfield      #68                 // Field charData:Lcom/sun/corba/se/impl/encoding/CodeSetComponentInfo$CodeSetComponent;
       9: aload_0
      10: getfield      #69                 // Field wcharData:Lcom/sun/corba/se/impl/encoding/CodeSetComponentInfo$CodeSetComponent;
      13: invokespecial #70                 // Method com/sun/corba/se/impl/encoding/CodeSetComponentInfo."<init>":(Lcom/sun/corba/se/impl/encoding/CodeSetComponentInfo$CodeSetComponent;Lcom/sun/corba/se/impl/encoding/CodeSetComponentInfo$CodeSetComponent;)V
      16: putfield      #41                 // Field codesets:Lcom/sun/corba/se/impl/encoding/CodeSetComponentInfo;
      19: return
}
