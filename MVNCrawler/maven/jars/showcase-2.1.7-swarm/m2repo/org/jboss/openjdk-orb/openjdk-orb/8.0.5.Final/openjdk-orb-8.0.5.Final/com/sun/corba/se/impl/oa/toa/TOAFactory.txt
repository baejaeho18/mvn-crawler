Compiled from "TOAFactory.java"
public class com.sun.corba.se.impl.oa.toa.TOAFactory implements com.sun.corba.se.spi.oa.ObjectAdapterFactory {
  private com.sun.corba.se.spi.orb.ORB orb;

  private com.sun.corba.se.impl.logging.ORBUtilSystemException wrapper;

  private com.sun.corba.se.impl.oa.toa.TOAImpl toa;

  private java.util.Map codebaseToTOA;

  private com.sun.corba.se.impl.oa.toa.TransientObjectManager tom;

  public com.sun.corba.se.impl.oa.toa.TOAFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.sun.corba.se.spi.oa.ObjectAdapter find(com.sun.corba.se.spi.ior.ObjectAdapterId);
    Code:
       0: aload_1
       1: getstatic     #2                  // Field com/sun/corba/se/impl/ior/ObjectKeyTemplateBase.JIDL_OAID:Lcom/sun/corba/se/spi/ior/ObjectAdapterId;
       4: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #4                  // Method getTOA:()Lcom/sun/corba/se/impl/oa/toa/TOA;
      14: areturn
      15: aload_0
      16: getfield      #5                  // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      19: invokevirtual #6                  // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.badToaOaid:()Lorg/omg/CORBA/MARSHAL;
      22: athrow

  public void init(com.sun.corba.se.spi.orb.ORB);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
       5: aload_0
       6: aload_1
       7: ldc           #9                  // String oa.lifecycle
       9: invokestatic  #10                 // Method com/sun/corba/se/impl/logging/ORBUtilSystemException.get:(Lcom/sun/corba/se/spi/orb/ORB;Ljava/lang/String;)Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      12: putfield      #5                  // Field wrapper:Lcom/sun/corba/se/impl/logging/ORBUtilSystemException;
      15: aload_0
      16: new           #11                 // class com/sun/corba/se/impl/oa/toa/TransientObjectManager
      19: dup
      20: aload_1
      21: invokespecial #12                 // Method com/sun/corba/se/impl/oa/toa/TransientObjectManager."<init>":(Lcom/sun/corba/se/spi/orb/ORB;)V
      24: putfield      #13                 // Field tom:Lcom/sun/corba/se/impl/oa/toa/TransientObjectManager;
      27: aload_0
      28: new           #14                 // class java/util/HashMap
      31: dup
      32: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      35: putfield      #16                 // Field codebaseToTOA:Ljava/util/Map;
      38: return

  public void shutdown(boolean);
    Code:
       0: invokestatic  #17                 // Method com/sun/corba/se/impl/javax/rmi/CORBA/Util.isInstanceDefined:()Z
       3: ifeq          16
       6: invokestatic  #18                 // Method com/sun/corba/se/impl/javax/rmi/CORBA/Util.getInstance:()Lcom/sun/corba/se/impl/javax/rmi/CORBA/Util;
       9: aload_0
      10: getfield      #7                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      13: invokevirtual #19                 // Method com/sun/corba/se/impl/javax/rmi/CORBA/Util.unregisterTargetsForORB:(Lorg/omg/CORBA/ORB;)V
      16: return

  public synchronized com.sun.corba.se.impl.oa.toa.TOA getTOA(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field codebaseToTOA:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #21                 // class com/sun/corba/se/impl/oa/toa/TOA
      13: checkcast     #21                 // class com/sun/corba/se/impl/oa/toa/TOA
      16: astore_2
      17: aload_2
      18: ifnonnull     50
      21: new           #22                 // class com/sun/corba/se/impl/oa/toa/TOAImpl
      24: dup
      25: aload_0
      26: getfield      #7                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      29: aload_0
      30: getfield      #13                 // Field tom:Lcom/sun/corba/se/impl/oa/toa/TransientObjectManager;
      33: aload_1
      34: invokespecial #23                 // Method com/sun/corba/se/impl/oa/toa/TOAImpl."<init>":(Lcom/sun/corba/se/spi/orb/ORB;Lcom/sun/corba/se/impl/oa/toa/TransientObjectManager;Ljava/lang/String;)V
      37: astore_2
      38: aload_0
      39: getfield      #16                 // Field codebaseToTOA:Ljava/util/Map;
      42: aload_1
      43: aload_2
      44: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_2
      51: areturn

  public synchronized com.sun.corba.se.impl.oa.toa.TOA getTOA();
    Code:
       0: aload_0
       1: getfield      #25                 // Field toa:Lcom/sun/corba/se/impl/oa/toa/TOAImpl;
       4: ifnonnull     27
       7: aload_0
       8: new           #22                 // class com/sun/corba/se/impl/oa/toa/TOAImpl
      11: dup
      12: aload_0
      13: getfield      #7                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
      16: aload_0
      17: getfield      #13                 // Field tom:Lcom/sun/corba/se/impl/oa/toa/TransientObjectManager;
      20: aconst_null
      21: invokespecial #23                 // Method com/sun/corba/se/impl/oa/toa/TOAImpl."<init>":(Lcom/sun/corba/se/spi/orb/ORB;Lcom/sun/corba/se/impl/oa/toa/TransientObjectManager;Ljava/lang/String;)V
      24: putfield      #25                 // Field toa:Lcom/sun/corba/se/impl/oa/toa/TOAImpl;
      27: aload_0
      28: getfield      #25                 // Field toa:Lcom/sun/corba/se/impl/oa/toa/TOAImpl;
      31: areturn

  public com.sun.corba.se.spi.orb.ORB getORB();
    Code:
       0: aload_0
       1: getfield      #7                  // Field orb:Lcom/sun/corba/se/spi/orb/ORB;
       4: areturn
}
