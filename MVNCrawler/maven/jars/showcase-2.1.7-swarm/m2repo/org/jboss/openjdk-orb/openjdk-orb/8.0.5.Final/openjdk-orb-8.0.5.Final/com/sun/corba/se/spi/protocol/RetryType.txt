Compiled from "RetryType.java"
public final class com.sun.corba.se.spi.protocol.RetryType extends java.lang.Enum<com.sun.corba.se.spi.protocol.RetryType> {
  public static final com.sun.corba.se.spi.protocol.RetryType NONE;

  public static final com.sun.corba.se.spi.protocol.RetryType BEFORE_RESPONSE;

  public static final com.sun.corba.se.spi.protocol.RetryType AFTER_RESPONSE;

  private final boolean isRetry;

  private static final com.sun.corba.se.spi.protocol.RetryType[] $VALUES;

  public static com.sun.corba.se.spi.protocol.RetryType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lcom/sun/corba/se/spi/protocol/RetryType;
       3: invokevirtual #2                  // Method "[Lcom/sun/corba/se/spi/protocol/RetryType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lcom/sun/corba/se/spi/protocol/RetryType;"
       9: areturn

  public static com.sun.corba.se.spi.protocol.RetryType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class com/sun/corba/se/spi/protocol/RetryType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class com/sun/corba/se/spi/protocol/RetryType
       9: areturn

  private com.sun.corba.se.spi.protocol.RetryType(boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #7                  // Field isRetry:Z
      11: return

  public boolean isRetry();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isRetry:Z
       4: ireturn

  static {};
    Code:
       0: new           #4                  // class com/sun/corba/se/spi/protocol/RetryType
       3: dup
       4: ldc           #8                  // String NONE
       6: iconst_0
       7: iconst_0
       8: invokespecial #9                  // Method "<init>":(Ljava/lang/String;IZ)V
      11: putstatic     #10                 // Field NONE:Lcom/sun/corba/se/spi/protocol/RetryType;
      14: new           #4                  // class com/sun/corba/se/spi/protocol/RetryType
      17: dup
      18: ldc           #11                 // String BEFORE_RESPONSE
      20: iconst_1
      21: iconst_1
      22: invokespecial #9                  // Method "<init>":(Ljava/lang/String;IZ)V
      25: putstatic     #12                 // Field BEFORE_RESPONSE:Lcom/sun/corba/se/spi/protocol/RetryType;
      28: new           #4                  // class com/sun/corba/se/spi/protocol/RetryType
      31: dup
      32: ldc           #13                 // String AFTER_RESPONSE
      34: iconst_2
      35: iconst_1
      36: invokespecial #9                  // Method "<init>":(Ljava/lang/String;IZ)V
      39: putstatic     #14                 // Field AFTER_RESPONSE:Lcom/sun/corba/se/spi/protocol/RetryType;
      42: iconst_3
      43: anewarray     #4                  // class com/sun/corba/se/spi/protocol/RetryType
      46: dup
      47: iconst_0
      48: getstatic     #10                 // Field NONE:Lcom/sun/corba/se/spi/protocol/RetryType;
      51: aastore
      52: dup
      53: iconst_1
      54: getstatic     #12                 // Field BEFORE_RESPONSE:Lcom/sun/corba/se/spi/protocol/RetryType;
      57: aastore
      58: dup
      59: iconst_2
      60: getstatic     #14                 // Field AFTER_RESPONSE:Lcom/sun/corba/se/spi/protocol/RetryType;
      63: aastore
      64: putstatic     #1                  // Field $VALUES:[Lcom/sun/corba/se/spi/protocol/RetryType;
      67: return
}
