Compiled from "CorbaMessageMediator.java"
public interface com.sun.corba.se.spi.protocol.CorbaMessageMediator extends com.sun.corba.se.pept.protocol.MessageMediator,org.omg.CORBA.portable.ResponseHandler {
  public abstract void setReplyHeader(com.sun.corba.se.impl.protocol.giopmsgheaders.LocateReplyOrReplyMessage);

  public abstract com.sun.corba.se.impl.protocol.giopmsgheaders.LocateReplyMessage getLocateReplyHeader();

  public abstract com.sun.corba.se.impl.protocol.giopmsgheaders.ReplyMessage getReplyHeader();

  public abstract void setReplyExceptionDetailMessage(java.lang.String);

  public abstract com.sun.corba.se.impl.protocol.giopmsgheaders.RequestMessage getRequestHeader();

  public abstract com.sun.corba.se.spi.ior.iiop.GIOPVersion getGIOPVersion();

  public abstract byte getEncodingVersion();

  public abstract int getRequestId();

  public abstract java.lang.Integer getRequestIdInteger();

  public abstract boolean isOneWay();

  public abstract short getAddrDisposition();

  public abstract java.lang.String getOperationName();

  public abstract com.sun.corba.se.spi.servicecontext.ServiceContexts getRequestServiceContexts();

  public abstract com.sun.corba.se.spi.servicecontext.ServiceContexts getReplyServiceContexts();

  public abstract com.sun.corba.se.impl.protocol.giopmsgheaders.Message getDispatchHeader();

  public abstract void setDispatchHeader(com.sun.corba.se.impl.protocol.giopmsgheaders.Message);

  public abstract java.nio.ByteBuffer getDispatchBuffer();

  public abstract void setDispatchBuffer(java.nio.ByteBuffer);

  public abstract int getThreadPoolToUse();

  public abstract byte getStreamFormatVersion();

  public abstract byte getStreamFormatVersionForReply();

  public abstract void sendCancelRequestIfFinalFragmentNotSent();

  public abstract void setDIIInfo(org.omg.CORBA.Request);

  public abstract boolean isDIIRequest();

  public abstract java.lang.Exception unmarshalDIIUserException(java.lang.String, org.omg.CORBA_2_3.portable.InputStream);

  public abstract void setDIIException(java.lang.Exception);

  public abstract void handleDIIReply(org.omg.CORBA_2_3.portable.InputStream);

  public abstract boolean isSystemExceptionReply();

  public abstract boolean isUserExceptionReply();

  public abstract boolean isLocationForwardReply();

  public abstract boolean isDifferentAddrDispositionRequestedReply();

  public abstract short getAddrDispositionReply();

  public abstract com.sun.corba.se.spi.ior.IOR getForwardedIOR();

  public abstract org.omg.CORBA.SystemException getSystemExceptionReply();

  public abstract com.sun.corba.se.spi.ior.ObjectKey getObjectKey();

  public abstract void setProtocolHandler(com.sun.corba.se.spi.protocol.CorbaProtocolHandler);

  public abstract com.sun.corba.se.spi.protocol.CorbaProtocolHandler getProtocolHandler();

  public abstract org.omg.CORBA.portable.OutputStream createReply();

  public abstract org.omg.CORBA.portable.OutputStream createExceptionReply();

  public abstract boolean executeReturnServantInResponseConstructor();

  public abstract void setExecuteReturnServantInResponseConstructor(boolean);

  public abstract boolean executeRemoveThreadInfoInResponseConstructor();

  public abstract void setExecuteRemoveThreadInfoInResponseConstructor(boolean);

  public abstract boolean executePIInResponseConstructor();

  public abstract void setExecutePIInResponseConstructor(boolean);
}
