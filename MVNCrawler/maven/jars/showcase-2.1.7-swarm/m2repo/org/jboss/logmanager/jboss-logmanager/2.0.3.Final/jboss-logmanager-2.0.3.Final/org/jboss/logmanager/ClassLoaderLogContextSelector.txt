Compiled from "ClassLoaderLogContextSelector.java"
public final class org.jboss.logmanager.ClassLoaderLogContextSelector implements org.jboss.logmanager.LogContextSelector {
  private static final java.security.Permission REGISTER_LOG_CONTEXT_PERMISSION;

  private static final java.security.Permission UNREGISTER_LOG_CONTEXT_PERMISSION;

  private static final java.security.Permission LOG_API_PERMISSION;

  private static final org.jboss.logmanager.ClassLoaderLogContextSelector$Gateway GATEWAY;

  private final org.jboss.logmanager.LogContextSelector defaultSelector;

  private final java.util.concurrent.ConcurrentMap<java.lang.ClassLoader, org.jboss.logmanager.LogContext> contextMap;

  private final java.util.Set<java.lang.ClassLoader> logApiClassLoaders;

  private final boolean checkParentClassLoaders;

  private final java.security.PrivilegedAction<org.jboss.logmanager.LogContext> logContextAction;

  public org.jboss.logmanager.ClassLoaderLogContextSelector(org.jboss.logmanager.LogContextSelector);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #6                  // Method "<init>":(Lorg/jboss/logmanager/LogContextSelector;Z)V
       6: return

  public org.jboss.logmanager.ClassLoaderLogContextSelector(org.jboss.logmanager.LogContextSelector, boolean);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class org/jboss/logmanager/CopyOnWriteMap
       8: dup
       9: invokespecial #9                  // Method org/jboss/logmanager/CopyOnWriteMap."<init>":()V
      12: putfield      #2                  // Field contextMap:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #8                  // class org/jboss/logmanager/CopyOnWriteMap
      19: dup
      20: invokespecial #9                  // Method org/jboss/logmanager/CopyOnWriteMap."<init>":()V
      23: invokestatic  #10                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      26: putfield      #3                  // Field logApiClassLoaders:Ljava/util/Set;
      29: aload_0
      30: new           #11                 // class org/jboss/logmanager/ClassLoaderLogContextSelector$2
      33: dup
      34: aload_0
      35: invokespecial #12                 // Method org/jboss/logmanager/ClassLoaderLogContextSelector$2."<init>":(Lorg/jboss/logmanager/ClassLoaderLogContextSelector;)V
      38: putfield      #13                 // Field logContextAction:Ljava/security/PrivilegedAction;
      41: aload_0
      42: aload_1
      43: putfield      #4                  // Field defaultSelector:Lorg/jboss/logmanager/LogContextSelector;
      46: aload_0
      47: iload_2
      48: putfield      #1                  // Field checkParentClassLoaders:Z
      51: return

  public org.jboss.logmanager.ClassLoaderLogContextSelector();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #14                 // Method "<init>":(Z)V
       5: return

  public org.jboss.logmanager.ClassLoaderLogContextSelector(boolean);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/jboss/logmanager/LogContext.DEFAULT_LOG_CONTEXT_SELECTOR:Lorg/jboss/logmanager/LogContextSelector;
       4: iload_1
       5: invokespecial #6                  // Method "<init>":(Lorg/jboss/logmanager/LogContextSelector;Z)V
       8: return

  public org.jboss.logmanager.LogContext getLogContext();
    Code:
       0: aload_0
       1: getfield      #13                 // Field logContextAction:Ljava/security/PrivilegedAction;
       4: invokestatic  #16                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       7: checkcast     #17                 // class org/jboss/logmanager/LogContext
      10: areturn

  public boolean addLogApiClassLoader(java.lang.ClassLoader);
    Code:
       0: invokestatic  #18                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_2
       4: aload_2
       5: ifnull        15
       8: aload_2
       9: getstatic     #19                 // Field LOG_API_PERMISSION:Ljava/security/Permission;
      12: invokevirtual #20                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: aload_0
      16: getfield      #3                  // Field logApiClassLoaders:Ljava/util/Set;
      19: aload_1
      20: invokeinterface #21,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: ireturn

  public boolean removeLogApiClassLoader(java.lang.ClassLoader);
    Code:
       0: invokestatic  #18                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_2
       4: aload_2
       5: ifnull        15
       8: aload_2
       9: getstatic     #19                 // Field LOG_API_PERMISSION:Ljava/security/Permission;
      12: invokevirtual #20                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: aload_0
      16: getfield      #3                  // Field logApiClassLoaders:Ljava/util/Set;
      19: aload_1
      20: invokeinterface #22,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      25: ireturn

  public void registerLogContext(java.lang.ClassLoader, org.jboss.logmanager.LogContext) throws java.lang.IllegalArgumentException;
    Code:
       0: invokestatic  #18                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_3
       4: aload_3
       5: ifnull        15
       8: aload_3
       9: getstatic     #23                 // Field REGISTER_LOG_CONTEXT_PERMISSION:Ljava/security/Permission;
      12: invokevirtual #20                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: aload_0
      16: getfield      #2                  // Field contextMap:Ljava/util/concurrent/ConcurrentMap;
      19: aload_1
      20: aload_2
      21: invokeinterface #24,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: ifnull        61
      29: new           #25                 // class java/lang/IllegalArgumentException
      32: dup
      33: new           #26                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #28                 // String ClassLoader instance is already registered to a log context (
      42: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #31                 // String )
      51: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: return

  public boolean unregisterLogContext(java.lang.ClassLoader, org.jboss.logmanager.LogContext);
    Code:
       0: invokestatic  #18                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_3
       4: aload_3
       5: ifnull        15
       8: aload_3
       9: getstatic     #34                 // Field UNREGISTER_LOG_CONTEXT_PERMISSION:Ljava/security/Permission;
      12: invokevirtual #20                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: aload_0
      16: getfield      #2                  // Field contextMap:Ljava/util/concurrent/ConcurrentMap;
      19: aload_1
      20: aload_2
      21: invokeinterface #35,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ireturn

  static org.jboss.logmanager.ClassLoaderLogContextSelector$Gateway access$100();
    Code:
       0: getstatic     #5                  // Field GATEWAY:Lorg/jboss/logmanager/ClassLoaderLogContextSelector$Gateway;
       3: areturn

  static org.jboss.logmanager.LogContextSelector access$200(org.jboss.logmanager.ClassLoaderLogContextSelector);
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultSelector:Lorg/jboss/logmanager/LogContextSelector;
       4: areturn

  static java.util.Set access$300(org.jboss.logmanager.ClassLoaderLogContextSelector);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logApiClassLoaders:Ljava/util/Set;
       4: areturn

  static java.util.concurrent.ConcurrentMap access$400(org.jboss.logmanager.ClassLoaderLogContextSelector);
    Code:
       0: aload_0
       1: getfield      #2                  // Field contextMap:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static boolean access$500(org.jboss.logmanager.ClassLoaderLogContextSelector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field checkParentClassLoaders:Z
       4: ireturn

  static {};
    Code:
       0: new           #36                 // class java/lang/RuntimePermission
       3: dup
       4: ldc           #37                 // String registerLogContext
       6: aconst_null
       7: invokespecial #38                 // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: putstatic     #23                 // Field REGISTER_LOG_CONTEXT_PERMISSION:Ljava/security/Permission;
      13: new           #36                 // class java/lang/RuntimePermission
      16: dup
      17: ldc           #39                 // String unregisterLogContext
      19: aconst_null
      20: invokespecial #38                 // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      23: putstatic     #34                 // Field UNREGISTER_LOG_CONTEXT_PERMISSION:Ljava/security/Permission;
      26: new           #36                 // class java/lang/RuntimePermission
      29: dup
      30: ldc           #40                 // String logApiPermission
      32: aconst_null
      33: invokespecial #38                 // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      36: putstatic     #19                 // Field LOG_API_PERMISSION:Ljava/security/Permission;
      39: new           #41                 // class org/jboss/logmanager/ClassLoaderLogContextSelector$1
      42: dup
      43: invokespecial #42                 // Method org/jboss/logmanager/ClassLoaderLogContextSelector$1."<init>":()V
      46: invokestatic  #16                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      49: checkcast     #43                 // class org/jboss/logmanager/ClassLoaderLogContextSelector$Gateway
      52: putstatic     #5                  // Field GATEWAY:Lorg/jboss/logmanager/ClassLoaderLogContextSelector$Gateway;
      55: return
}
