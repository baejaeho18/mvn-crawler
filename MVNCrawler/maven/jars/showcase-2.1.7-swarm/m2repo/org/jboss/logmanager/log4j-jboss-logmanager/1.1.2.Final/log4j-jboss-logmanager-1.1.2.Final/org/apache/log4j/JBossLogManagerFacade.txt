Compiled from "JBossLogManagerFacade.java"
public class org.apache.log4j.JBossLogManagerFacade {
  public static final java.lang.String LOG4J_ROOT_NAME;

  public static final java.lang.String JBL_ROOT_NAME;

  private static final org.jboss.logmanager.Logger$AttachmentKey<org.apache.log4j.Logger> LOGGER_KEY;

  private static final org.jboss.logmanager.Logger$AttachmentKey<org.apache.log4j.Hierarchy> HIERARCHY_KEY;

  private static final org.jboss.logmanager.Logger$AttachmentKey<org.apache.log4j.JBossLogManagerFacade$LoggerNode> LOGGER_NODE_KEY;

  private static final java.security.PrivilegedAction<org.jboss.logmanager.LogContext> LOG_CONTEXT_ACTION;

  private org.apache.log4j.JBossLogManagerFacade();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  static org.jboss.logmanager.Logger getJBossLogger(java.lang.String);
    Code:
       0: invokestatic  #5                  // Method getLogContext:()Lorg/jboss/logmanager/LogContext;
       3: aload_0
       4: invokestatic  #6                  // Method getJBossLogger:(Lorg/jboss/logmanager/LogContext;Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
       7: areturn

  static org.jboss.logmanager.Logger getJBossLogger(org.jboss.logmanager.LogContext, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: ldc           #7                  // String root
       7: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          18
      13: ldc           #9                  // String
      15: goto          19
      18: aload_1
      19: astore_2
      20: aload_0
      21: aload_2
      22: invokevirtual #10                 // Method org/jboss/logmanager/LogContext.getLogger:(Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
      25: areturn

  static org.apache.log4j.spi.LoggerRepository getLoggerRepository();
    Code:
       0: aconst_null
       1: invokestatic  #11                 // Method getLoggerRepository:(Lorg/jboss/logmanager/LogContext;)Lorg/apache/log4j/spi/LoggerRepository;
       4: areturn

  public static org.apache.log4j.spi.LoggerRepository getLoggerRepository(org.jboss.logmanager.LogContext);
    Code:
       0: new           #12                 // class org/apache/log4j/JBossLogManagerFacade$2
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method org/apache/log4j/JBossLogManagerFacade$2."<init>":(Lorg/jboss/logmanager/LogContext;)V
       8: invokestatic  #14                 // Method doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      11: checkcast     #15                 // class org/apache/log4j/spi/LoggerRepository
      14: areturn

  static org.apache.log4j.Logger exists(java.lang.String);
    Code:
       0: invokestatic  #5                  // Method getLogContext:()Lorg/jboss/logmanager/LogContext;
       3: aload_0
       4: invokevirtual #16                 // Method org/jboss/logmanager/LogContext.getLoggerIfExists:(Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: invokestatic  #17                 // Method getLogger:(Lorg/jboss/logmanager/Logger;)Lorg/apache/log4j/Logger;
      20: areturn

  static org.apache.log4j.Logger getLogger(org.jboss.logmanager.Logger);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field LOGGER_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
       4: invokestatic  #18                 // Method getAttachment:(Lorg/jboss/logmanager/Logger;Lorg/jboss/logmanager/Logger$AttachmentKey;)Ljava/lang/Object;
       7: checkcast     #19                 // class org/apache/log4j/Logger
      10: areturn

  static org.apache.log4j.Logger getOrCreateLogger(org.apache.log4j.spi.LoggerRepository, java.lang.String, org.apache.log4j.spi.LoggerFactory);
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method getJBossLogger:(Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
       4: astore_3
       5: aload_3
       6: invokestatic  #17                 // Method getLogger:(Lorg/jboss/logmanager/Logger;)Lorg/apache/log4j/Logger;
       9: astore        4
      11: aload         4
      13: ifnonnull     104
      16: aload_2
      17: aload_1
      18: invokeinterface #21,  2           // InterfaceMethod org/apache/log4j/spi/LoggerFactory.makeNewLoggerInstance:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
      23: astore        4
      25: aload_3
      26: getstatic     #2                  // Field LOGGER_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
      29: aload         4
      31: invokestatic  #22                 // Method attachIfAbsent:(Lorg/jboss/logmanager/Logger;Lorg/jboss/logmanager/Logger$AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #19                 // class org/apache/log4j/Logger
      37: astore        5
      39: aload         5
      41: ifnull        48
      44: aload         5
      46: astore        4
      48: invokestatic  #23                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      51: ifnonnull     69
      54: aload_3
      55: getstatic     #1                  // Field LOGGER_NODE_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
      58: invokevirtual #24                 // Method org/jboss/logmanager/Logger.detach:(Lorg/jboss/logmanager/Logger$AttachmentKey;)Ljava/lang/Object;
      61: checkcast     #25                 // class org/apache/log4j/JBossLogManagerFacade$LoggerNode
      64: astore        6
      66: goto          85
      69: new           #26                 // class org/apache/log4j/JBossLogManagerFacade$3
      72: dup
      73: aload_3
      74: invokespecial #27                 // Method org/apache/log4j/JBossLogManagerFacade$3."<init>":(Lorg/jboss/logmanager/Logger;)V
      77: invokestatic  #28                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      80: checkcast     #25                 // class org/apache/log4j/JBossLogManagerFacade$LoggerNode
      83: astore        6
      85: aload         6
      87: ifnull        97
      90: aload         6
      92: aload         4
      94: invokestatic  #29                 // Method updateChildren:(Lorg/apache/log4j/JBossLogManagerFacade$LoggerNode;Lorg/apache/log4j/Logger;)V
      97: aload_0
      98: aload         4
     100: aload_3
     101: invokestatic  #30                 // Method updateParents:(Lorg/apache/log4j/spi/LoggerRepository;Lorg/apache/log4j/Logger;Lorg/jboss/logmanager/Logger;)V
     104: aload         4
     106: areturn

  static java.util.Collection<org.apache.log4j.Logger> getLoggers();
    Code:
       0: invokestatic  #5                  // Method getLogContext:()Lorg/jboss/logmanager/LogContext;
       3: astore_0
       4: aload_0
       5: invokevirtual #31                 // Method org/jboss/logmanager/LogContext.getLoggingMXBean:()Ljava/util/logging/LoggingMXBean;
       8: invokeinterface #32,  1           // InterfaceMethod java/util/logging/LoggingMXBean.getLoggerNames:()Ljava/util/List;
      13: astore_1
      14: new           #33                 // class java/util/ArrayList
      17: dup
      18: aload_1
      19: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
      24: invokespecial #35                 // Method java/util/ArrayList."<init>":(I)V
      27: astore_2
      28: aload_1
      29: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore_3
      35: aload_3
      36: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          92
      44: aload_3
      45: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #39                 // class java/lang/String
      53: astore        4
      55: aload_0
      56: aload         4
      58: invokevirtual #16                 // Method org/jboss/logmanager/LogContext.getLoggerIfExists:(Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
      61: astore        5
      63: aload         5
      65: ifnull        89
      68: aload         5
      70: invokestatic  #17                 // Method getLogger:(Lorg/jboss/logmanager/Logger;)Lorg/apache/log4j/Logger;
      73: astore        6
      75: aload         6
      77: ifnull        89
      80: aload_2
      81: aload         6
      83: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      88: pop
      89: goto          35
      92: aload_2
      93: areturn

  private static void updateParents(org.apache.log4j.spi.LoggerRepository, org.apache.log4j.Logger, org.jboss.logmanager.Logger);
    Code:
       0: aload_2
       1: invokevirtual #41                 // Method org/jboss/logmanager/Logger.getLogContext:()Lorg/jboss/logmanager/LogContext;
       4: astore_3
       5: aload_1
       6: invokevirtual #42                 // Method org/apache/log4j/Logger.getName:()Ljava/lang/String;
       9: astore        4
      11: aload         4
      13: invokevirtual #43                 // Method java/lang/String.length:()I
      16: istore        5
      18: iconst_1
      19: istore        6
      21: aload         4
      23: bipush        46
      25: iload         5
      27: iconst_1
      28: isub
      29: invokevirtual #44                 // Method java/lang/String.lastIndexOf:(II)I
      32: istore        7
      34: iload         7
      36: iflt          162
      39: aload         4
      41: iconst_0
      42: iload         7
      44: invokevirtual #45                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      47: astore        8
      49: aload_3
      50: aload         8
      52: invokevirtual #16                 // Method org/jboss/logmanager/LogContext.getLoggerIfExists:(Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
      55: astore        9
      57: aload         9
      59: ifnull        146
      62: aload_1
      63: aload         9
      65: invokestatic  #17                 // Method getLogger:(Lorg/jboss/logmanager/Logger;)Lorg/apache/log4j/Logger;
      68: putfield      #46                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      71: aload_1
      72: getfield      #46                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      75: ifnonnull     140
      78: aload         9
      80: getstatic     #1                  // Field LOGGER_NODE_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
      83: invokevirtual #47                 // Method org/jboss/logmanager/Logger.getAttachment:(Lorg/jboss/logmanager/Logger$AttachmentKey;)Ljava/lang/Object;
      86: checkcast     #25                 // class org/apache/log4j/JBossLogManagerFacade$LoggerNode
      89: astore        10
      91: aload         10
      93: ifnonnull     131
      96: aload         9
      98: getstatic     #1                  // Field LOGGER_NODE_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
     101: new           #25                 // class org/apache/log4j/JBossLogManagerFacade$LoggerNode
     104: dup
     105: aload_1
     106: invokespecial #48                 // Method org/apache/log4j/JBossLogManagerFacade$LoggerNode."<init>":(Lorg/apache/log4j/Logger;)V
     109: invokestatic  #22                 // Method attachIfAbsent:(Lorg/jboss/logmanager/Logger;Lorg/jboss/logmanager/Logger$AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #25                 // class org/apache/log4j/JBossLogManagerFacade$LoggerNode
     115: astore        11
     117: aload         11
     119: ifnull        128
     122: aload         11
     124: aload_1
     125: invokevirtual #49                 // Method org/apache/log4j/JBossLogManagerFacade$LoggerNode.add:(Lorg/apache/log4j/Logger;)V
     128: goto          137
     131: aload         10
     133: aload_1
     134: invokevirtual #49                 // Method org/apache/log4j/JBossLogManagerFacade$LoggerNode.add:(Lorg/apache/log4j/Logger;)V
     137: goto          146
     140: iconst_0
     141: istore        6
     143: goto          162
     146: aload         4
     148: bipush        46
     150: iload         7
     152: iconst_1
     153: isub
     154: invokevirtual #44                 // Method java/lang/String.lastIndexOf:(II)I
     157: istore        7
     159: goto          34
     162: iload         6
     164: ifeq          177
     167: aload_1
     168: aload_0
     169: invokeinterface #50,  1           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.getRootLogger:()Lorg/apache/log4j/Logger;
     174: putfield      #46                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
     177: return

  private static void updateChildren(org.apache.log4j.JBossLogManagerFacade$LoggerNode, org.apache.log4j.Logger);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method org/apache/log4j/JBossLogManagerFacade$LoggerNode.iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          57
      14: aload_2
      15: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #19                 // class org/apache/log4j/Logger
      23: astore_3
      24: aload_3
      25: getfield      #46                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      28: invokevirtual #52                 // Method org/apache/log4j/Category.getName:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #42                 // Method org/apache/log4j/Logger.getName:()Ljava/lang/String;
      35: invokevirtual #53                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      38: ifne          54
      41: aload_1
      42: aload_3
      43: getfield      #46                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      46: putfield      #46                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      49: aload_3
      50: aload_1
      51: putfield      #46                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      54: goto          5
      57: return

  private static org.jboss.logmanager.LogContext getLogContext();
    Code:
       0: getstatic     #54                 // Field LOG_CONTEXT_ACTION:Ljava/security/PrivilegedAction;
       3: invokestatic  #14                 // Method doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       6: checkcast     #55                 // class org/jboss/logmanager/LogContext
       9: areturn

  private static <T> T getAttachment(org.jboss.logmanager.Logger, org.jboss.logmanager.Logger$AttachmentKey<T>);
    Code:
       0: new           #56                 // class org/apache/log4j/JBossLogManagerFacade$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #57                 // Method org/apache/log4j/JBossLogManagerFacade$4."<init>":(Lorg/jboss/logmanager/Logger;Lorg/jboss/logmanager/Logger$AttachmentKey;)V
       9: invokestatic  #14                 // Method doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: areturn

  private static <T> T attachIfAbsent(org.jboss.logmanager.Logger, org.jboss.logmanager.Logger$AttachmentKey<T>, T);
    Code:
       0: new           #58                 // class org/apache/log4j/JBossLogManagerFacade$5
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #59                 // Method org/apache/log4j/JBossLogManagerFacade$5."<init>":(Lorg/jboss/logmanager/Logger;Lorg/jboss/logmanager/Logger$AttachmentKey;Ljava/lang/Object;)V
      10: invokestatic  #14                 // Method doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      13: areturn

  private static <T> T doPrivileged(java.security.PrivilegedAction<T>);
    Code:
       0: invokestatic  #23                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnonnull     13
       6: aload_0
       7: invokeinterface #60,  1           // InterfaceMethod java/security/PrivilegedAction.run:()Ljava/lang/Object;
      12: areturn
      13: aload_0
      14: invokestatic  #28                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      17: areturn

  static org.jboss.logmanager.Logger$AttachmentKey access$000();
    Code:
       0: getstatic     #3                  // Field HIERARCHY_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
       3: areturn

  static org.jboss.logmanager.Logger$AttachmentKey access$100();
    Code:
       0: getstatic     #2                  // Field LOGGER_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
       3: areturn

  static org.jboss.logmanager.Logger$AttachmentKey access$200();
    Code:
       0: getstatic     #1                  // Field LOGGER_NODE_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
       3: areturn

  static {};
    Code:
       0: new           #61                 // class org/jboss/logmanager/Logger$AttachmentKey
       3: dup
       4: invokespecial #62                 // Method org/jboss/logmanager/Logger$AttachmentKey."<init>":()V
       7: putstatic     #2                  // Field LOGGER_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
      10: new           #61                 // class org/jboss/logmanager/Logger$AttachmentKey
      13: dup
      14: invokespecial #62                 // Method org/jboss/logmanager/Logger$AttachmentKey."<init>":()V
      17: putstatic     #3                  // Field HIERARCHY_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
      20: new           #61                 // class org/jboss/logmanager/Logger$AttachmentKey
      23: dup
      24: invokespecial #62                 // Method org/jboss/logmanager/Logger$AttachmentKey."<init>":()V
      27: putstatic     #1                  // Field LOGGER_NODE_KEY:Lorg/jboss/logmanager/Logger$AttachmentKey;
      30: new           #63                 // class org/apache/log4j/JBossLogManagerFacade$1
      33: dup
      34: invokespecial #64                 // Method org/apache/log4j/JBossLogManagerFacade$1."<init>":()V
      37: putstatic     #54                 // Field LOG_CONTEXT_ACTION:Ljava/security/PrivilegedAction;
      40: return
}
