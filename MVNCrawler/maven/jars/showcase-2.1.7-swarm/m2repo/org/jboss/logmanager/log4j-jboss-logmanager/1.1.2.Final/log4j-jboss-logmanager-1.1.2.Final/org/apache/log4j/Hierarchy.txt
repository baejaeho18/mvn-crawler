Compiled from "Hierarchy.java"
public class org.apache.log4j.Hierarchy implements org.apache.log4j.spi.LoggerRepository,org.apache.log4j.spi.RendererSupport,org.apache.log4j.spi.ThrowableRendererSupport {
  private final org.apache.log4j.spi.LoggerFactory defaultFactory;

  private final org.jboss.logmanager.Logger jblmRootLogger;

  private final java.util.Set<org.apache.log4j.spi.HierarchyEventListener> listeners;

  private final org.apache.log4j.or.RendererMap rendererMap;

  private org.apache.log4j.spi.ThrowableRenderer throwableRenderer;

  public org.apache.log4j.Hierarchy(org.apache.log4j.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field throwableRenderer:Lorg/apache/log4j/spi/ThrowableRenderer;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/CopyOnWriteArraySet
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      17: putfield      #5                  // Field listeners:Ljava/util/Set;
      20: aload_0
      21: ldc           #6                  // String
      23: invokestatic  #7                  // Method org/apache/log4j/JBossLogManagerFacade.getJBossLogger:(Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
      26: putfield      #8                  // Field jblmRootLogger:Lorg/jboss/logmanager/Logger;
      29: aload_0
      30: getfield      #8                  // Field jblmRootLogger:Lorg/jboss/logmanager/Logger;
      33: aload_1
      34: invokevirtual #9                  // Method org/apache/log4j/Logger.getLevel:()Lorg/apache/log4j/Level;
      37: invokestatic  #10                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
      40: invokevirtual #11                 // Method org/jboss/logmanager/Logger.setLevel:(Ljava/util/logging/Level;)V
      43: aload_0
      44: new           #12                 // class org/apache/log4j/DefaultCategoryFactory
      47: dup
      48: invokespecial #13                 // Method org/apache/log4j/DefaultCategoryFactory."<init>":()V
      51: putfield      #14                 // Field defaultFactory:Lorg/apache/log4j/spi/LoggerFactory;
      54: aload_0
      55: new           #15                 // class org/apache/log4j/or/RendererMap
      58: dup
      59: invokespecial #16                 // Method org/apache/log4j/or/RendererMap."<init>":()V
      62: putfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
      65: return

  public void addRenderer(java.lang.Class, org.apache.log4j.or.ObjectRenderer);
    Code:
       0: aload_0
       1: getfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #18                 // Method org/apache/log4j/or/RendererMap.put:(Ljava/lang/Class;Lorg/apache/log4j/or/ObjectRenderer;)V
       9: return

  public void addHierarchyEventListener(org.apache.log4j.spi.HierarchyEventListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: ifne          18
      13: ldc           #20                 // String Ignoring attempt to add an existent listener.
      15: invokestatic  #21                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      18: return

  public void clear();
    Code:
       0: return

  public void emitNoAppenderWarning(org.apache.log4j.Category);
    Code:
       0: return

  public org.apache.log4j.Logger exists(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method org/apache/log4j/JBossLogManagerFacade.exists:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       4: areturn

  public void setThreshold(java.lang.String);
    Code:
       0: aload_1
       1: aconst_null
       2: invokestatic  #23                 // Method org/apache/log4j/Level.toLevel:(Ljava/lang/String;Lorg/apache/log4j/Level;)Lorg/apache/log4j/Level;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_0
      11: aload_2
      12: invokevirtual #24                 // Method setThreshold:(Lorg/apache/log4j/Level;)V
      15: goto          45
      18: new           #25                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #27                 // String Could not convert [
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #29                 // String ] to Level.
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokestatic  #21                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      45: return

  public void setThreshold(org.apache.log4j.Level);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #8                  // Field jblmRootLogger:Lorg/jboss/logmanager/Logger;
       8: aload_1
       9: invokestatic  #10                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
      12: invokevirtual #11                 // Method org/jboss/logmanager/Logger.setLevel:(Ljava/util/logging/Level;)V
      15: return

  public void fireAddAppenderEvent(org.apache.log4j.Category, org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/Set;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_3
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #34                 // class org/apache/log4j/spi/HierarchyEventListener
      28: astore        4
      30: aload         4
      32: aload_1
      33: aload_2
      34: invokeinterface #35,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.addAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      39: goto          10
      42: return

  void fireRemoveAppenderEvent(org.apache.log4j.Category, org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/Set;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_3
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #34                 // class org/apache/log4j/spi/HierarchyEventListener
      28: astore        4
      30: aload         4
      32: aload_1
      33: aload_2
      34: invokeinterface #36,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.removeAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      39: goto          10
      42: return

  public org.apache.log4j.Level getThreshold();
    Code:
       0: aload_0
       1: getfield      #8                  // Field jblmRootLogger:Lorg/jboss/logmanager/Logger;
       4: invokevirtual #37                 // Method org/jboss/logmanager/Logger.getLevel:()Ljava/util/logging/Level;
       7: invokestatic  #38                 // Method org/apache/log4j/JBossLevelMapping.getPriorityFor:(Ljava/util/logging/Level;)Lorg/apache/log4j/Level;
      10: areturn

  public org.apache.log4j.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #14                 // Field defaultFactory:Lorg/apache/log4j/spi/LoggerFactory;
       6: invokevirtual #39                 // Method getLogger:(Ljava/lang/String;Lorg/apache/log4j/spi/LoggerFactory;)Lorg/apache/log4j/Logger;
       9: areturn

  public org.apache.log4j.Logger getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // Method org/apache/log4j/JBossLogManagerFacade.getOrCreateLogger:(Lorg/apache/log4j/spi/LoggerRepository;Ljava/lang/String;Lorg/apache/log4j/spi/LoggerFactory;)Lorg/apache/log4j/Logger;
       6: areturn

  public java.util.Enumeration getCurrentLoggers();
    Code:
       0: invokestatic  #41                 // Method org/apache/log4j/JBossLogManagerFacade.getLoggers:()Ljava/util/Collection;
       3: invokestatic  #42                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
       6: areturn

  public java.util.Enumeration getCurrentCategories();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
       4: areturn

  public org.apache.log4j.or.RendererMap getRendererMap();
    Code:
       0: aload_0
       1: getfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: areturn

  public org.apache.log4j.Logger getRootLogger();
    Code:
       0: aload_0
       1: getfield      #8                  // Field jblmRootLogger:Lorg/jboss/logmanager/Logger;
       4: invokestatic  #44                 // Method org/apache/log4j/JBossLogManagerFacade.getLogger:(Lorg/jboss/logmanager/Logger;)Lorg/apache/log4j/Logger;
       7: areturn

  public boolean isDisabled(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field jblmRootLogger:Lorg/jboss/logmanager/Logger;
       4: invokevirtual #37                 // Method org/jboss/logmanager/Logger.getLevel:()Ljava/util/logging/Level;
       7: invokestatic  #38                 // Method org/apache/log4j/JBossLevelMapping.getPriorityFor:(Ljava/util/logging/Level;)Lorg/apache/log4j/Level;
      10: invokevirtual #45                 // Method org/apache/log4j/Level.toInt:()I
      13: iload_1
      14: if_icmple     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void overrideAsNeeded(java.lang.String);
    Code:
       0: return

  public void resetConfiguration();
    Code:
       0: return

  public void setDisableOverride(java.lang.String);
    Code:
       0: return

  public void setRenderer(java.lang.Class, org.apache.log4j.or.ObjectRenderer);
    Code:
       0: aload_0
       1: getfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #18                 // Method org/apache/log4j/or/RendererMap.put:(Ljava/lang/Class;Lorg/apache/log4j/or/ObjectRenderer;)V
       9: return

  public void setThrowableRenderer(org.apache.log4j.spi.ThrowableRenderer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field throwableRenderer:Lorg/apache/log4j/spi/ThrowableRenderer;
       5: return

  public org.apache.log4j.spi.ThrowableRenderer getThrowableRenderer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field throwableRenderer:Lorg/apache/log4j/spi/ThrowableRenderer;
       4: areturn

  public void shutdown();
    Code:
       0: return
}
