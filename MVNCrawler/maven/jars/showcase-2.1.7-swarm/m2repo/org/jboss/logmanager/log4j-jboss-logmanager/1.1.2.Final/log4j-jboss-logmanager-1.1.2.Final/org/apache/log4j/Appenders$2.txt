Compiled from "Appenders.java"
final class org.apache.log4j.Appenders$2 implements java.security.PrivilegedAction<java.util.concurrent.CopyOnWriteArrayList<org.apache.log4j.Appender>> {
  final org.jboss.logmanager.Logger val$logger;

  final java.util.concurrent.CopyOnWriteArrayList val$attachment;

  org.apache.log4j.Appenders$2(org.jboss.logmanager.Logger, java.util.concurrent.CopyOnWriteArrayList);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$logger:Lorg/jboss/logmanager/Logger;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$attachment:Ljava/util/concurrent/CopyOnWriteArrayList;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public java.util.concurrent.CopyOnWriteArrayList<org.apache.log4j.Appender> run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$logger:Lorg/jboss/logmanager/Logger;
       4: invokestatic  #4                  // Method org/apache/log4j/Appenders.access$000:()Lorg/jboss/logmanager/Logger$AttachmentKey;
       7: aload_0
       8: getfield      #2                  // Field val$attachment:Ljava/util/concurrent/CopyOnWriteArrayList;
      11: invokevirtual #5                  // Method org/jboss/logmanager/Logger.attachIfAbsent:(Lorg/jboss/logmanager/Logger$AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class java/util/concurrent/CopyOnWriteArrayList
      17: areturn

  public java.lang.Object run();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method run:()Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn
}
