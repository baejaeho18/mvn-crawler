Compiled from "AppenderSkeleton.java"
public abstract class org.apache.log4j.AppenderSkeleton implements org.apache.log4j.Appender,org.apache.log4j.spi.OptionHandler {
  protected org.apache.log4j.Layout layout;

  protected java.lang.String name;

  protected org.apache.log4j.Priority threshold;

  protected org.apache.log4j.spi.ErrorHandler errorHandler;

  protected org.apache.log4j.spi.Filter headFilter;

  protected org.apache.log4j.spi.Filter tailFilter;

  protected boolean closed;

  public org.apache.log4j.AppenderSkeleton();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/log4j/helpers/OnlyOnceErrorHandler
       8: dup
       9: invokespecial #3                  // Method org/apache/log4j/helpers/OnlyOnceErrorHandler."<init>":()V
      12: putfield      #4                  // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field closed:Z
      20: return

  protected org.apache.log4j.AppenderSkeleton(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/log4j/helpers/OnlyOnceErrorHandler
       8: dup
       9: invokespecial #3                  // Method org/apache/log4j/helpers/OnlyOnceErrorHandler."<init>":()V
      12: putfield      #4                  // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field closed:Z
      20: return

  public void activateOptions();
    Code:
       0: return

  public void addFilter(org.apache.log4j.spi.Filter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field headFilter:Lorg/apache/log4j/spi/Filter;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: aload_1
      10: dup_x1
      11: putfield      #7                  // Field tailFilter:Lorg/apache/log4j/spi/Filter;
      14: putfield      #6                  // Field headFilter:Lorg/apache/log4j/spi/Filter;
      17: goto          33
      20: aload_0
      21: getfield      #7                  // Field tailFilter:Lorg/apache/log4j/spi/Filter;
      24: aload_1
      25: invokevirtual #8                  // Method org/apache/log4j/spi/Filter.setNext:(Lorg/apache/log4j/spi/Filter;)V
      28: aload_0
      29: aload_1
      30: putfield      #7                  // Field tailFilter:Lorg/apache/log4j/spi/Filter;
      33: return

  protected abstract void append(org.apache.log4j.spi.LoggingEvent);

  public void clearFilters();
    Code:
       0: aload_0
       1: aload_0
       2: aconst_null
       3: dup_x1
       4: putfield      #7                  // Field tailFilter:Lorg/apache/log4j/spi/Filter;
       7: putfield      #6                  // Field headFilter:Lorg/apache/log4j/spi/Filter;
      10: return

  public void finalize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Z
       4: ifeq          8
       7: return
       8: new           #9                  // class java/lang/StringBuffer
      11: dup
      12: invokespecial #10                 // Method java/lang/StringBuffer."<init>":()V
      15: ldc           #11                 // String Finalizing appender named [
      17: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: aload_0
      21: getfield      #13                 // Field name:Ljava/lang/String;
      24: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: ldc           #14                 // String ].
      29: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      35: invokestatic  #16                 // Method org/apache/log4j/helpers/LogLog.debug:(Ljava/lang/String;)V
      38: aload_0
      39: invokeinterface #17,  1           // InterfaceMethod org/apache/log4j/Appender.close:()V
      44: return

  public org.apache.log4j.spi.ErrorHandler getErrorHandler();
    Code:
       0: aload_0
       1: getfield      #4                  // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
       4: areturn

  public org.apache.log4j.spi.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field headFilter:Lorg/apache/log4j/spi/Filter;
       4: areturn

  public final org.apache.log4j.spi.Filter getFirstFilter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field headFilter:Lorg/apache/log4j/spi/Filter;
       4: areturn

  public org.apache.log4j.Layout getLayout();
    Code:
       0: aload_0
       1: getfield      #18                 // Field layout:Lorg/apache/log4j/Layout;
       4: areturn

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.log4j.Priority getThreshold();
    Code:
       0: aload_0
       1: getfield      #19                 // Field threshold:Lorg/apache/log4j/Priority;
       4: areturn

  public boolean isAsSevereAsThreshold(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: getfield      #19                 // Field threshold:Lorg/apache/log4j/Priority;
       4: ifnull        18
       7: aload_1
       8: aload_0
       9: getfield      #19                 // Field threshold:Lorg/apache/log4j/Priority;
      12: invokevirtual #20                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public synchronized void doAppend(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Z
       4: ifeq          38
       7: new           #9                  // class java/lang/StringBuffer
      10: dup
      11: invokespecial #10                 // Method java/lang/StringBuffer."<init>":()V
      14: ldc           #21                 // String Attempted to append to closed appender named [
      16: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_0
      20: getfield      #13                 // Field name:Ljava/lang/String;
      23: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: ldc           #14                 // String ].
      28: invokevirtual #12                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: invokevirtual #15                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      34: invokestatic  #22                 // Method org/apache/log4j/helpers/LogLog.error:(Ljava/lang/String;)V
      37: return
      38: aload_0
      39: aload_1
      40: invokevirtual #23                 // Method org/apache/log4j/spi/LoggingEvent.getLevel:()Lorg/apache/log4j/Level;
      43: invokevirtual #24                 // Method isAsSevereAsThreshold:(Lorg/apache/log4j/Priority;)Z
      46: ifne          50
      49: return
      50: aload_0
      51: getfield      #6                  // Field headFilter:Lorg/apache/log4j/spi/Filter;
      54: astore_2
      55: aload_2
      56: ifnull        104
      59: aload_2
      60: aload_1
      61: invokevirtual #25                 // Method org/apache/log4j/spi/Filter.decide:(Lorg/apache/log4j/spi/LoggingEvent;)I
      64: tableswitch   { // -1 to 1
                    -1: 92
                     0: 96
                     1: 93
               default: 101
          }
      92: return
      93: goto          104
      96: aload_2
      97: invokevirtual #26                 // Method org/apache/log4j/spi/Filter.getNext:()Lorg/apache/log4j/spi/Filter;
     100: astore_2
     101: goto          55
     104: aload_0
     105: aload_1
     106: invokevirtual #27                 // Method append:(Lorg/apache/log4j/spi/LoggingEvent;)V
     109: return

  public synchronized void setErrorHandler(org.apache.log4j.spi.ErrorHandler);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: ldc           #28                 // String You have tried to set a null error-handler.
       6: invokestatic  #29                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
       9: goto          17
      12: aload_0
      13: aload_1
      14: putfield      #4                  // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      17: return

  public void setLayout(org.apache.log4j.Layout);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field layout:Lorg/apache/log4j/Layout;
       5: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field name:Ljava/lang/String;
       5: return

  public void setThreshold(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field threshold:Lorg/apache/log4j/Priority;
       5: return

  public abstract boolean requiresLayout();

  public abstract void close();
}
