Compiled from "NOPLogger.java"
public final class org.apache.log4j.spi.NOPLogger extends org.apache.log4j.Logger {
  private final org.apache.log4j.spi.LoggerRepository repo;

  public org.apache.log4j.spi.NOPLogger(org.apache.log4j.spi.NOPLoggerRepository, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/apache/log4j/Logger."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field repo:Lorg/apache/log4j/spi/LoggerRepository;
      10: aload_0
      11: getstatic     #3                  // Field org/apache/log4j/Level.OFF:Lorg/apache/log4j/Level;
      14: putfield      #4                  // Field level:Lorg/apache/log4j/Level;
      17: aload_0
      18: aload_0
      19: putfield      #5                  // Field parent:Lorg/apache/log4j/Category;
      22: return

  public void addAppender(org.apache.log4j.Appender);
    Code:
       0: return

  public void assertLog(boolean, java.lang.String);
    Code:
       0: return

  public void callAppenders(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: return

  void closeNestedAppenders();
    Code:
       0: return

  public void debug(java.lang.Object);
    Code:
       0: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public void error(java.lang.Object);
    Code:
       0: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public void fatal(java.lang.Object);
    Code:
       0: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public java.util.Enumeration getAllAppenders();
    Code:
       0: new           #6                  // class java/util/Vector
       3: dup
       4: invokespecial #7                  // Method java/util/Vector."<init>":()V
       7: invokevirtual #8                  // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      10: areturn

  public org.apache.log4j.Appender getAppender(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public org.apache.log4j.Level getEffectiveLevel();
    Code:
       0: getstatic     #3                  // Field org/apache/log4j/Level.OFF:Lorg/apache/log4j/Level;
       3: areturn

  public org.apache.log4j.Priority getChainedPriority();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
       4: areturn

  public java.util.ResourceBundle getResourceBundle();
    Code:
       0: aconst_null
       1: areturn

  public void info(java.lang.Object);
    Code:
       0: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public boolean isAttached(org.apache.log4j.Appender);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isDebugEnabled();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isEnabledFor(org.apache.log4j.Priority);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isInfoEnabled();
    Code:
       0: iconst_0
       1: ireturn

  public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Throwable);
    Code:
       0: return

  public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: return

  public void log(org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public void log(org.apache.log4j.Priority, java.lang.Object);
    Code:
       0: return

  public void log(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public void removeAllAppenders();
    Code:
       0: return

  public void removeAppender(org.apache.log4j.Appender);
    Code:
       0: return

  public void removeAppender(java.lang.String);
    Code:
       0: return

  public void setLevel(org.apache.log4j.Level);
    Code:
       0: return

  public void setPriority(org.apache.log4j.Priority);
    Code:
       0: return

  public void setResourceBundle(java.util.ResourceBundle);
    Code:
       0: return

  public void warn(java.lang.Object);
    Code:
       0: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public void trace(java.lang.Object);
    Code:
       0: return

  public void trace(java.lang.Object, java.lang.Throwable);
    Code:
       0: return

  public boolean isTraceEnabled();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.log4j.spi.LoggerRepository getHierarchy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field repo:Lorg/apache/log4j/spi/LoggerRepository;
       4: areturn

  public org.apache.log4j.spi.LoggerRepository getLoggerRepository();
    Code:
       0: aload_0
       1: getfield      #2                  // Field repo:Lorg/apache/log4j/spi/LoggerRepository;
       4: areturn
}
