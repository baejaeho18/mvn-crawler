Compiled from "Logger.java"
public final class org.jboss.logmanager.Logger extends java.util.logging.Logger implements java.io.Serializable {
  private static final long serialVersionUID;

  private final org.jboss.logmanager.LoggerNode loggerNode;

  private static final java.lang.String LOGGER_CLASS_NAME;

  static final int OFF_INT;

  static final int SEVERE_INT;

  static final int WARNING_INT;

  static final int INFO_INT;

  static final int CONFIG_INT;

  static final int FINE_INT;

  static final int FINER_INT;

  static final int FINEST_INT;

  public static org.jboss.logmanager.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       4: checkcast     #2                  // class org/jboss/logmanager/Logger
       7: areturn
       8: astore_1
       9: new           #4                  // class java/lang/IllegalStateException
      12: dup
      13: new           #5                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #7                  // String The LogManager was not properly installed (you must set the \"java.util.logging.manager\" system property to \"
      22: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc_w         #9                  // class org/jboss/logmanager/LogManager
      28: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #11                 // String \")
      36: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException

  public static org.jboss.logmanager.Logger getLogger(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;
       5: checkcast     #2                  // class org/jboss/logmanager/Logger
       8: areturn
       9: astore_2
      10: new           #4                  // class java/lang/IllegalStateException
      13: dup
      14: new           #5                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #7                  // String The LogManager was not properly installed (you must set the \"java.util.logging.manager\" system property to \"
      23: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc_w         #9                  // class org/jboss/logmanager/LogManager
      29: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      32: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #11                 // String \")
      37: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  org.jboss.logmanager.Logger(org.jboss.logmanager.LoggerNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aconst_null
       3: invokespecial #15                 // Method java/util/logging/Logger."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: getstatic     #16                 // Field java/util/logging/Level.ALL:Ljava/util/logging/Level;
      10: invokespecial #17                 // Method java/util/logging/Logger.setLevel:(Ljava/util/logging/Level;)V
      13: aload_0
      14: aload_1
      15: putfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      18: return

  protected final java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: new           #19                 // class org/jboss/logmanager/SerializedLogger
       3: dup
       4: aload_0
       5: invokevirtual #20                 // Method getName:()Ljava/lang/String;
       8: invokespecial #21                 // Method org/jboss/logmanager/SerializedLogger."<init>":(Ljava/lang/String;)V
      11: areturn

  public void setFilter(java.util.logging.Filter) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_0
      11: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      14: aload_1
      15: invokevirtual #24                 // Method org/jboss/logmanager/LoggerNode.setFilter:(Ljava/util/logging/Filter;)V
      18: return

  public java.util.logging.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #25                 // Method org/jboss/logmanager/LoggerNode.getFilter:()Ljava/util/logging/Filter;
       7: areturn

  public void setLevel(java.util.logging.Level) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_0
      11: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      14: aload_1
      15: invokevirtual #26                 // Method org/jboss/logmanager/LoggerNode.setLevel:(Ljava/util/logging/Level;)V
      18: return

  public void setLevelName(java.lang.String) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       5: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       8: aload_1
       9: invokevirtual #27                 // Method org/jboss/logmanager/LogContext.getLevelForName:(Ljava/lang/String;)Ljava/util/logging/Level;
      12: invokevirtual #28                 // Method setLevel:(Ljava/util/logging/Level;)V
      15: return

  public int getEffectiveLevel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
       7: ireturn

  public java.util.logging.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #30                 // Method org/jboss/logmanager/LoggerNode.getLevel:()Ljava/util/logging/Level;
       7: areturn

  public boolean isLoggable(java.util.logging.Level);
    Code:
       0: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       3: ifeq          14
       6: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
       9: ifnull        14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      18: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      21: istore_2
      22: aload_1
      23: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      26: iload_2
      27: if_icmplt     41
      30: iload_2
      31: getstatic     #34                 // Field OFF_INT:I
      34: if_icmpeq     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public <V> V getAttachment(org.jboss.logmanager.Logger$AttachmentKey<V>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: aload_1
       5: invokevirtual #35                 // Method org/jboss/logmanager/LoggerNode.getAttachment:(Lorg/jboss/logmanager/Logger$AttachmentKey;)Ljava/lang/Object;
       8: areturn

  public <V> V attach(org.jboss.logmanager.Logger$AttachmentKey<V>, V) throws java.lang.SecurityException;
    Code:
       0: invokestatic  #36                 // Method org/jboss/logmanager/LogContext.checkSecurityAccess:()V
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: aload_1
       8: aload_2
       9: invokevirtual #37                 // Method org/jboss/logmanager/LoggerNode.attach:(Lorg/jboss/logmanager/Logger$AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public <V> V attachIfAbsent(org.jboss.logmanager.Logger$AttachmentKey<V>, V) throws java.lang.SecurityException;
    Code:
       0: invokestatic  #36                 // Method org/jboss/logmanager/LogContext.checkSecurityAccess:()V
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: aload_1
       8: aload_2
       9: invokevirtual #38                 // Method org/jboss/logmanager/LoggerNode.attachIfAbsent:(Lorg/jboss/logmanager/Logger$AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public <V> V detach(org.jboss.logmanager.Logger$AttachmentKey<V>) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_0
      11: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      14: aload_1
      15: invokevirtual #39                 // Method org/jboss/logmanager/LoggerNode.detach:(Lorg/jboss/logmanager/Logger$AttachmentKey;)Ljava/lang/Object;
      18: areturn

  public void addHandler(java.util.logging.Handler) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_1
      11: ifnonnull     24
      14: new           #40                 // class java/lang/NullPointerException
      17: dup
      18: ldc           #41                 // String handler is null
      20: invokespecial #42                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      28: aload_1
      29: invokevirtual #43                 // Method org/jboss/logmanager/LoggerNode.addHandler:(Ljava/util/logging/Handler;)V
      32: return

  public void removeHandler(java.util.logging.Handler) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_1
      11: ifnonnull     15
      14: return
      15: aload_0
      16: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      19: aload_1
      20: invokevirtual #44                 // Method org/jboss/logmanager/LoggerNode.removeHandler:(Ljava/util/logging/Handler;)V
      23: return

  public java.util.logging.Handler[] getHandlers();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #45                 // Method org/jboss/logmanager/LoggerNode.getHandlers:()[Ljava/util/logging/Handler;
       7: astore_1
       8: aload_1
       9: arraylength
      10: ifle          23
      13: aload_1
      14: invokevirtual #46                 // Method "[Ljava/util/logging/Handler;".clone:()Ljava/lang/Object;
      17: checkcast     #47                 // class "[Ljava/util/logging/Handler;"
      20: goto          24
      23: aload_1
      24: areturn

  public void setHandlers(java.util.logging.Handler[]) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_1
      11: invokevirtual #48                 // Method "[Ljava/util/logging/Handler;".clone:()Ljava/lang/Object;
      14: checkcast     #47                 // class "[Ljava/util/logging/Handler;"
      17: astore_2
      18: aload_2
      19: astore_3
      20: aload_3
      21: arraylength
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload         4
      31: if_icmpge     61
      34: aload_3
      35: iload         5
      37: aaload
      38: astore        6
      40: aload         6
      42: ifnonnull     55
      45: new           #49                 // class java/lang/IllegalArgumentException
      48: dup
      49: ldc           #50                 // String A handler is null
      51: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: iinc          5, 1
      58: goto          27
      61: aload_0
      62: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      65: aload_2
      66: invokevirtual #52                 // Method org/jboss/logmanager/LoggerNode.setHandlers:([Ljava/util/logging/Handler;)[Ljava/util/logging/Handler;
      69: pop
      70: return

  public java.util.logging.Handler[] getAndSetHandlers(java.util.logging.Handler[]) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_1
      11: invokevirtual #53                 // Method "[Ljava/util/logging/Handler;".clone:()Ljava/lang/Object;
      14: checkcast     #47                 // class "[Ljava/util/logging/Handler;"
      17: astore_2
      18: aload_2
      19: astore_3
      20: aload_3
      21: arraylength
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload         4
      31: if_icmpge     61
      34: aload_3
      35: iload         5
      37: aaload
      38: astore        6
      40: aload         6
      42: ifnonnull     55
      45: new           #49                 // class java/lang/IllegalArgumentException
      48: dup
      49: ldc           #50                 // String A handler is null
      51: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: iinc          5, 1
      58: goto          27
      61: aload_0
      62: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      65: aload_2
      66: invokevirtual #52                 // Method org/jboss/logmanager/LoggerNode.setHandlers:([Ljava/util/logging/Handler;)[Ljava/util/logging/Handler;
      69: areturn

  public boolean compareAndSetHandlers(java.util.logging.Handler[], java.util.logging.Handler[]) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_1
      11: invokevirtual #54                 // Method "[Ljava/util/logging/Handler;".clone:()Ljava/lang/Object;
      14: checkcast     #47                 // class "[Ljava/util/logging/Handler;"
      17: astore_3
      18: aload_2
      19: invokevirtual #55                 // Method "[Ljava/util/logging/Handler;".clone:()Ljava/lang/Object;
      22: checkcast     #47                 // class "[Ljava/util/logging/Handler;"
      25: astore        4
      27: aload         4
      29: astore        5
      31: aload         5
      33: arraylength
      34: istore        6
      36: iconst_0
      37: istore        7
      39: iload         7
      41: iload         6
      43: if_icmpge     74
      46: aload         5
      48: iload         7
      50: aaload
      51: astore        8
      53: aload         8
      55: ifnonnull     68
      58: new           #49                 // class java/lang/IllegalArgumentException
      61: dup
      62: ldc           #50                 // String A handler is null
      64: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iinc          7, 1
      71: goto          39
      74: aload_0
      75: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      78: invokevirtual #45                 // Method org/jboss/logmanager/LoggerNode.getHandlers:()[Ljava/util/logging/Handler;
      81: astore        5
      83: aload         5
      85: aload_3
      86: invokestatic  #56                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      89: ifne          94
      92: iconst_0
      93: ireturn
      94: aload_0
      95: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      98: aload         5
     100: aload         4
     102: invokevirtual #57                 // Method org/jboss/logmanager/LoggerNode.compareAndSetHandlers:([Ljava/util/logging/Handler;[Ljava/util/logging/Handler;)Z
     105: ifeq          74
     108: iconst_1
     109: ireturn

  public java.util.logging.Handler[] clearHandlers() throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_0
      11: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      14: invokevirtual #58                 // Method org/jboss/logmanager/LoggerNode.clearHandlers:()[Ljava/util/logging/Handler;
      17: areturn

  public void setUseParentHandlers(boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_0
      11: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      14: iload_1
      15: invokevirtual #59                 // Method org/jboss/logmanager/LoggerNode.setUseParentHandlers:(Z)V
      18: return

  public boolean getUseParentHandlers();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #60                 // Method org/jboss/logmanager/LoggerNode.getUseParentHandlers:()Z
       7: ireturn

  public void setUseParentFilters(boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: invokestatic  #23                 // Method org/jboss/logmanager/LogContext.checkAccess:(Lorg/jboss/logmanager/LogContext;)V
      10: aload_0
      11: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      14: iload_1
      15: invokevirtual #61                 // Method org/jboss/logmanager/LoggerNode.setUseParentFilters:(Z)V
      18: return

  public boolean getUseParentFilters();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #62                 // Method org/jboss/logmanager/LoggerNode.getUseParentFilters:()Z
       7: ireturn

  public org.jboss.logmanager.Logger getParent();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #63                 // Method org/jboss/logmanager/LoggerNode.getParent:()Lorg/jboss/logmanager/LoggerNode;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: invokevirtual #64                 // Method org/jboss/logmanager/LoggerNode.createLogger:()Lorg/jboss/logmanager/Logger;
      20: areturn

  public void setParent(java.util.logging.Logger);
    Code:
       0: new           #65                 // class java/lang/SecurityException
       3: dup
       4: ldc           #66                 // String setParent() disallowed
       6: invokespecial #67                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.jboss.logmanager.LogContext getLogContext();
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
       7: areturn

  public void log(java.util.logging.LogRecord);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       6: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
       9: istore_3
      10: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      13: ifeq          24
      16: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      19: dup
      20: astore_2
      21: ifnonnull     43
      24: aload_1
      25: invokevirtual #68                 // Method java/util/logging/LogRecord.getLevel:()Ljava/util/logging/Level;
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload_3
      32: if_icmplt     42
      35: iload_3
      36: getstatic     #34                 // Field OFF_INT:I
      39: if_icmpne     43
      42: return
      43: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      46: ifeq          64
      49: aload_2
      50: ifnull        64
      53: aload_2
      54: aload_1
      55: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      60: ifne          64
      63: return
      64: aload_0
      65: aload_1
      66: invokevirtual #70                 // Method logRaw:(Ljava/util/logging/LogRecord;)V
      69: return

  public void entering(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       5: ifeq          16
       8: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      11: dup
      12: astore_3
      13: ifnonnull     30
      16: getstatic     #71                 // Field FINER_INT:I
      19: aload_0
      20: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      23: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      26: if_icmpge     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      37: ldc           #74                 // String ENTRY
      39: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      42: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      45: astore        4
      47: aload         4
      49: aload_1
      50: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      53: aload         4
      55: aload_2
      56: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      59: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      62: ifeq          81
      65: aload_3
      66: ifnull        81
      69: aload_3
      70: aload         4
      72: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      77: ifne          81
      80: return
      81: aload_0
      82: aload         4
      84: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      87: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aconst_null
       1: astore        4
       3: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       6: ifeq          18
       9: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      12: dup
      13: astore        4
      15: ifnonnull     32
      18: getstatic     #71                 // Field FINER_INT:I
      21: aload_0
      22: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      25: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      28: if_icmpge     32
      31: return
      32: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      35: dup
      36: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      39: ldc           #80                 // String ENTRY {0}
      41: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      44: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      47: astore        5
      49: aload         5
      51: aload_1
      52: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      55: aload         5
      57: aload_2
      58: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      61: aload         5
      63: iconst_1
      64: anewarray     #81                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_3
      70: aastore
      71: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      74: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      77: ifeq          98
      80: aload         4
      82: ifnull        98
      85: aload         4
      87: aload         5
      89: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      94: ifne          98
      97: return
      98: aload_0
      99: aload         5
     101: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     104: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aconst_null
       1: astore        4
       3: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       6: ifeq          18
       9: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      12: dup
      13: astore        4
      15: ifnonnull     32
      18: getstatic     #71                 // Field FINER_INT:I
      21: aload_0
      22: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      25: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      28: if_icmpge     32
      31: return
      32: new           #5                  // class java/lang/StringBuilder
      35: dup
      36: ldc           #74                 // String ENTRY
      38: invokespecial #83                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      41: astore        5
      43: aload_3
      44: ifnull        81
      47: iconst_0
      48: istore        6
      50: iload         6
      52: aload_3
      53: arraylength
      54: if_icmpge     81
      57: aload         5
      59: ldc           #84                 // String  {
      61: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: iload         6
      66: invokevirtual #85                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: bipush        125
      71: invokevirtual #86                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: pop
      75: iinc          6, 1
      78: goto          50
      81: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      84: dup
      85: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      88: aload         5
      90: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      96: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      99: astore        6
     101: aload         6
     103: aload_1
     104: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
     107: aload         6
     109: aload_2
     110: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
     113: aload_3
     114: ifnull        123
     117: aload         6
     119: aload_3
     120: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
     123: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
     126: ifeq          147
     129: aload         4
     131: ifnull        147
     134: aload         4
     136: aload         6
     138: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
     143: ifne          147
     146: return
     147: aload_0
     148: aload         6
     150: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     153: return

  public void exiting(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       5: ifeq          16
       8: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      11: dup
      12: astore_3
      13: ifnonnull     30
      16: getstatic     #71                 // Field FINER_INT:I
      19: aload_0
      20: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      23: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      26: if_icmpge     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      37: ldc           #87                 // String RETURN
      39: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      42: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      45: astore        4
      47: aload         4
      49: aload_1
      50: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      53: aload         4
      55: aload_2
      56: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      59: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      62: ifeq          81
      65: aload_3
      66: ifnull        81
      69: aload_3
      70: aload         4
      72: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      77: ifne          81
      80: return
      81: aload_0
      82: aload         4
      84: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      87: return

  public void exiting(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aconst_null
       1: astore        4
       3: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       6: ifeq          18
       9: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      12: dup
      13: astore        4
      15: ifnonnull     32
      18: getstatic     #71                 // Field FINER_INT:I
      21: aload_0
      22: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      25: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      28: if_icmpge     32
      31: return
      32: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      35: dup
      36: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      39: ldc           #88                 // String RETURN {0}
      41: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      44: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      47: astore        5
      49: aload         5
      51: aload_1
      52: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      55: aload         5
      57: aload_2
      58: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      61: aload         5
      63: iconst_1
      64: anewarray     #81                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_3
      70: aastore
      71: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      74: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      77: ifeq          98
      80: aload         4
      82: ifnull        98
      85: aload         4
      87: aload         5
      89: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      94: ifne          98
      97: return
      98: aload_0
      99: aload         5
     101: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     104: return

  public void throwing(java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aconst_null
       1: astore        4
       3: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       6: ifeq          18
       9: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      12: dup
      13: astore        4
      15: ifnonnull     32
      18: getstatic     #71                 // Field FINER_INT:I
      21: aload_0
      22: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      25: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      28: if_icmpge     32
      31: return
      32: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      35: dup
      36: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      39: ldc           #89                 // String THROW
      41: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      44: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      47: astore        5
      49: aload         5
      51: aload_1
      52: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      55: aload         5
      57: aload_2
      58: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      61: aload         5
      63: aload_3
      64: invokevirtual #90                 // Method org/jboss/logmanager/ExtLogRecord.setThrown:(Ljava/lang/Throwable;)V
      67: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      70: ifeq          91
      73: aload         4
      75: ifnull        91
      78: aload         4
      80: aload         5
      82: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      87: ifne          91
      90: return
      91: aload_0
      92: aload         5
      94: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      97: return

  public void severe(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       5: ifeq          16
       8: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      11: dup
      12: astore_2
      13: ifnonnull     30
      16: getstatic     #91                 // Field SEVERE_INT:I
      19: aload_0
      20: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      23: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      26: if_icmpge     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #92                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      37: aload_1
      38: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      41: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      44: astore_3
      45: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      48: ifeq          66
      51: aload_2
      52: ifnull        66
      55: aload_2
      56: aload_3
      57: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      62: ifne          66
      65: return
      66: aload_0
      67: aload_3
      68: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      71: return

  public void warning(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       5: ifeq          16
       8: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      11: dup
      12: astore_2
      13: ifnonnull     30
      16: getstatic     #93                 // Field WARNING_INT:I
      19: aload_0
      20: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      23: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      26: if_icmpge     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #94                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      37: aload_1
      38: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      41: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      44: astore_3
      45: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      48: ifeq          66
      51: aload_2
      52: ifnull        66
      55: aload_2
      56: aload_3
      57: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      62: ifne          66
      65: return
      66: aload_0
      67: aload_3
      68: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      71: return

  public void info(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       5: ifeq          16
       8: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      11: dup
      12: astore_2
      13: ifnonnull     30
      16: getstatic     #95                 // Field INFO_INT:I
      19: aload_0
      20: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      23: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      26: if_icmpge     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #96                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      37: aload_1
      38: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      41: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      44: astore_3
      45: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      48: ifeq          66
      51: aload_2
      52: ifnull        66
      55: aload_2
      56: aload_3
      57: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      62: ifne          66
      65: return
      66: aload_0
      67: aload_3
      68: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      71: return

  public void config(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       5: ifeq          16
       8: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      11: dup
      12: astore_2
      13: ifnonnull     30
      16: getstatic     #97                 // Field CONFIG_INT:I
      19: aload_0
      20: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      23: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      26: if_icmpge     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #98                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      37: aload_1
      38: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      41: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      44: astore_3
      45: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      48: ifeq          66
      51: aload_2
      52: ifnull        66
      55: aload_2
      56: aload_3
      57: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      62: ifne          66
      65: return
      66: aload_0
      67: aload_3
      68: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      71: return

  public void fine(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #99                 // Field FINE_INT:I
       5: aload_0
       6: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       9: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      12: if_icmpge     30
      15: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      18: ifeq          29
      21: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      24: dup
      25: astore_2
      26: ifnonnull     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #100                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      37: aload_1
      38: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      41: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      44: astore_3
      45: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      48: ifeq          66
      51: aload_2
      52: ifnull        66
      55: aload_2
      56: aload_3
      57: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      62: ifne          66
      65: return
      66: aload_0
      67: aload_3
      68: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      71: return

  public void finer(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #71                 // Field FINER_INT:I
       5: aload_0
       6: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       9: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      12: if_icmpge     30
      15: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      18: ifeq          29
      21: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      24: dup
      25: astore_2
      26: ifnonnull     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      37: aload_1
      38: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      41: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      44: astore_3
      45: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      48: ifeq          66
      51: aload_2
      52: ifnull        66
      55: aload_2
      56: aload_3
      57: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      62: ifne          66
      65: return
      66: aload_0
      67: aload_3
      68: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      71: return

  public void finest(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
       5: ifeq          16
       8: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      11: dup
      12: astore_2
      13: ifnonnull     30
      16: getstatic     #101                // Field FINEST_INT:I
      19: aload_0
      20: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      23: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      26: if_icmpge     30
      29: return
      30: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      33: dup
      34: getstatic     #102                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      37: aload_1
      38: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      41: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      44: astore_3
      45: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      48: ifeq          66
      51: aload_2
      52: ifnull        66
      55: aload_2
      56: aload_3
      57: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      62: ifne          66
      65: return
      66: aload_0
      67: aload_3
      68: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      71: return

  public void log(java.util.logging.Level, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       6: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
       9: istore        4
      11: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      14: ifeq          25
      17: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      20: dup
      21: astore_3
      22: ifnonnull     43
      25: aload_1
      26: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      29: iload         4
      31: if_icmplt     42
      34: iload         4
      36: getstatic     #34                 // Field OFF_INT:I
      39: if_icmpne     43
      42: return
      43: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      46: dup
      47: aload_1
      48: aload_2
      49: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      52: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      55: astore        5
      57: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      60: ifeq          79
      63: aload_3
      64: ifnull        79
      67: aload_3
      68: aload         5
      70: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      75: ifne          79
      78: return
      79: aload_0
      80: aload         5
      82: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      85: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Object);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        5
      12: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      15: ifeq          27
      18: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      21: dup
      22: astore        4
      24: ifnonnull     45
      27: aload_1
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload         5
      33: if_icmplt     44
      36: iload         5
      38: getstatic     #34                 // Field OFF_INT:I
      41: if_icmpne     45
      44: return
      45: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      48: dup
      49: aload_1
      50: aload_2
      51: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      54: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      57: astore        6
      59: aload         6
      61: iconst_1
      62: anewarray     #81                 // class java/lang/Object
      65: dup
      66: iconst_0
      67: aload_3
      68: aastore
      69: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      72: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      75: ifeq          96
      78: aload         4
      80: ifnull        96
      83: aload         4
      85: aload         6
      87: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      92: ifne          96
      95: return
      96: aload_0
      97: aload         6
      99: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     102: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Object[]);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        5
      12: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      15: ifeq          27
      18: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      21: dup
      22: astore        4
      24: ifnonnull     45
      27: aload_1
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload         5
      33: if_icmplt     44
      36: iload         5
      38: getstatic     #34                 // Field OFF_INT:I
      41: if_icmpne     45
      44: return
      45: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      48: dup
      49: aload_1
      50: aload_2
      51: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      54: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      57: astore        6
      59: aload_3
      60: ifnull        69
      63: aload         6
      65: aload_3
      66: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      69: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      72: ifeq          93
      75: aload         4
      77: ifnull        93
      80: aload         4
      82: aload         6
      84: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      89: ifne          93
      92: return
      93: aload_0
      94: aload         6
      96: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      99: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Throwable);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        5
      12: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      15: ifeq          27
      18: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      21: dup
      22: astore        4
      24: ifnonnull     45
      27: aload_1
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload         5
      33: if_icmplt     44
      36: iload         5
      38: getstatic     #34                 // Field OFF_INT:I
      41: if_icmpne     45
      44: return
      45: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      48: dup
      49: aload_1
      50: aload_2
      51: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      54: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      57: astore        6
      59: aload         6
      61: aload_3
      62: invokevirtual #90                 // Method org/jboss/logmanager/ExtLogRecord.setThrown:(Ljava/lang/Throwable;)V
      65: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      68: ifeq          89
      71: aload         4
      73: ifnull        89
      76: aload         4
      78: aload         6
      80: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      85: ifne          89
      88: return
      89: aload_0
      90: aload         6
      92: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      95: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore        5
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        6
      12: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      15: ifeq          27
      18: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      21: dup
      22: astore        5
      24: ifnonnull     45
      27: aload_1
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload         6
      33: if_icmplt     44
      36: iload         6
      38: getstatic     #34                 // Field OFF_INT:I
      41: if_icmpne     45
      44: return
      45: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      48: dup
      49: aload_1
      50: aload         4
      52: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      55: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      58: astore        7
      60: aload         7
      62: aload_2
      63: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      66: aload         7
      68: aload_3
      69: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      72: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      75: ifeq          96
      78: aload         5
      80: ifnull        96
      83: aload         5
      85: aload         7
      87: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      92: ifne          96
      95: return
      96: aload_0
      97: aload         7
      99: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     102: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        7
      12: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      15: ifeq          27
      18: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      21: dup
      22: astore        6
      24: ifnonnull     45
      27: aload_1
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload         7
      33: if_icmplt     44
      36: iload         7
      38: getstatic     #34                 // Field OFF_INT:I
      41: if_icmpne     45
      44: return
      45: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      48: dup
      49: aload_1
      50: aload         4
      52: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      55: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      58: astore        8
      60: aload         8
      62: aload_2
      63: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      66: aload         8
      68: aload_3
      69: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      72: aload         8
      74: iconst_1
      75: anewarray     #81                 // class java/lang/Object
      78: dup
      79: iconst_0
      80: aload         5
      82: aastore
      83: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      86: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      89: ifeq          110
      92: aload         6
      94: ifnull        110
      97: aload         6
      99: aload         8
     101: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
     106: ifne          110
     109: return
     110: aload_0
     111: aload         8
     113: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     116: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        7
      12: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      15: ifeq          27
      18: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      21: dup
      22: astore        6
      24: ifnonnull     45
      27: aload_1
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload         7
      33: if_icmplt     44
      36: iload         7
      38: getstatic     #34                 // Field OFF_INT:I
      41: if_icmpne     45
      44: return
      45: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      48: dup
      49: aload_1
      50: aload         4
      52: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      55: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      58: astore        8
      60: aload         8
      62: aload_2
      63: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      66: aload         8
      68: aload_3
      69: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      72: aload         5
      74: ifnull        84
      77: aload         8
      79: aload         5
      81: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      84: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      87: ifeq          108
      90: aload         6
      92: ifnull        108
      95: aload         6
      97: aload         8
      99: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
     104: ifne          108
     107: return
     108: aload_0
     109: aload         8
     111: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     114: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        7
      12: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      15: ifeq          27
      18: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      21: dup
      22: astore        6
      24: ifnonnull     45
      27: aload_1
      28: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      31: iload         7
      33: if_icmplt     44
      36: iload         7
      38: getstatic     #34                 // Field OFF_INT:I
      41: if_icmpne     45
      44: return
      45: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      48: dup
      49: aload_1
      50: aload         4
      52: getstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
      55: invokespecial #76                 // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;)V
      58: astore        8
      60: aload         8
      62: aload_2
      63: invokevirtual #77                 // Method org/jboss/logmanager/ExtLogRecord.setSourceClassName:(Ljava/lang/String;)V
      66: aload         8
      68: aload_3
      69: invokevirtual #78                 // Method org/jboss/logmanager/ExtLogRecord.setSourceMethodName:(Ljava/lang/String;)V
      72: aload         8
      74: aload         5
      76: invokevirtual #90                 // Method org/jboss/logmanager/ExtLogRecord.setThrown:(Ljava/lang/Throwable;)V
      79: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      82: ifeq          103
      85: aload         6
      87: ifnull        103
      90: aload         6
      92: aload         8
      94: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      99: ifne          103
     102: return
     103: aload_0
     104: aload         8
     106: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     109: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
       7: istore        6
       9: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      12: ifeq          21
      15: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      18: ifnonnull     39
      21: aload_1
      22: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      25: iload         6
      27: if_icmplt     38
      30: iload         6
      32: getstatic     #34                 // Field OFF_INT:I
      35: if_icmpne     39
      38: return
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: aload         4
      45: aload         5
      47: invokespecial #103                // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      50: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
       7: istore        7
       9: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      12: ifeq          21
      15: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      18: ifnonnull     39
      21: aload_1
      22: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      25: iload         7
      27: if_icmplt     38
      30: iload         7
      32: getstatic     #34                 // Field OFF_INT:I
      35: if_icmpne     39
      38: return
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: aload         4
      45: aload         5
      47: aload         6
      49: invokespecial #104                // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      52: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
       7: istore        7
       9: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      12: ifeq          21
      15: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      18: ifnonnull     39
      21: aload_1
      22: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      25: iload         7
      27: if_icmplt     38
      30: iload         7
      32: getstatic     #34                 // Field OFF_INT:I
      35: if_icmpne     39
      38: return
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: aload         4
      45: aload         5
      47: aload         6
      49: invokespecial #105                // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      52: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
       7: istore        7
       9: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      12: ifeq          21
      15: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      18: ifnonnull     39
      21: aload_1
      22: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      25: iload         7
      27: if_icmplt     38
      30: iload         7
      32: getstatic     #34                 // Field OFF_INT:I
      35: if_icmpne     39
      38: return
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: aload         4
      45: aload         5
      47: aload         6
      49: invokespecial #106                // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      52: return

  public void log(java.lang.String, java.util.logging.Level, java.lang.String, java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aconst_null
       1: astore        8
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        9
      12: aload_2
      13: ifnull        56
      16: aload_1
      17: ifnull        56
      20: aload_3
      21: ifnull        56
      24: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      27: ifeq          39
      30: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      33: dup
      34: astore        8
      36: ifnonnull     57
      39: aload_2
      40: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      43: iload         9
      45: if_icmplt     56
      48: iload         9
      50: getstatic     #34                 // Field OFF_INT:I
      53: if_icmpne     57
      56: return
      57: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      60: dup
      61: aload_2
      62: aload_3
      63: aload         5
      65: aload_1
      66: invokespecial #107                // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;Ljava/lang/String;)V
      69: astore        10
      71: aload         10
      73: aload         4
      75: invokevirtual #108                // Method org/jboss/logmanager/ExtLogRecord.setResourceBundleName:(Ljava/lang/String;)V
      78: aload         10
      80: aload         6
      82: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      85: aload         10
      87: aload         7
      89: invokevirtual #90                 // Method org/jboss/logmanager/ExtLogRecord.setThrown:(Ljava/lang/Throwable;)V
      92: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      95: ifeq          116
      98: aload         8
     100: ifnull        116
     103: aload         8
     105: aload         10
     107: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
     112: ifne          116
     115: return
     116: aload_0
     117: aload         10
     119: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     122: return

  public void log(java.lang.String, java.util.logging.Level, java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aconst_null
       1: astore        7
       3: aload_0
       4: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       7: invokevirtual #29                 // Method org/jboss/logmanager/LoggerNode.getEffectiveLevel:()I
      10: istore        8
      12: aload_2
      13: ifnull        56
      16: aload_1
      17: ifnull        56
      20: aload_3
      21: ifnull        56
      24: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      27: ifeq          39
      30: invokestatic  #32                 // Method org/jboss/logmanager/LogManager.getThreadLocalLogFilter:()Ljava/util/logging/Filter;
      33: dup
      34: astore        7
      36: ifnonnull     57
      39: aload_2
      40: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      43: iload         8
      45: if_icmplt     56
      48: iload         8
      50: getstatic     #34                 // Field OFF_INT:I
      53: if_icmpne     57
      56: return
      57: new           #72                 // class org/jboss/logmanager/ExtLogRecord
      60: dup
      61: aload_2
      62: aload_3
      63: aload         4
      65: aload_1
      66: invokespecial #107                // Method org/jboss/logmanager/ExtLogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;Ljava/lang/String;)V
      69: astore        9
      71: aload         9
      73: aload         5
      75: invokevirtual #82                 // Method org/jboss/logmanager/ExtLogRecord.setParameters:([Ljava/lang/Object;)V
      78: aload         9
      80: aload         6
      82: invokevirtual #90                 // Method org/jboss/logmanager/ExtLogRecord.setThrown:(Ljava/lang/Throwable;)V
      85: getstatic     #31                 // Field org/jboss/logmanager/LogManager.PER_THREAD_LOG_FILTER:Z
      88: ifeq          109
      91: aload         7
      93: ifnull        109
      96: aload         7
      98: aload         9
     100: invokeinterface #69,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
     105: ifne          109
     108: return
     109: aload_0
     110: aload         9
     112: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
     115: return

  public void log(java.lang.String, java.util.logging.Level, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #109                // Field org/jboss/logmanager/ExtLogRecord$FormatStyle.MESSAGE_FORMAT:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
       7: aconst_null
       8: aload         4
      10: invokevirtual #110                // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;[Ljava/lang/Object;Ljava/lang/Throwable;)V
      13: return

  public void logRaw(org.jboss.logmanager.ExtLogRecord);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #20                 // Method getName:()Ljava/lang/String;
       5: invokevirtual #111                // Method org/jboss/logmanager/ExtLogRecord.setLoggerName:(Ljava/lang/String;)V
       8: aconst_null
       9: astore_2
      10: aconst_null
      11: astore_3
      12: aload_0
      13: invokevirtual #112                // Method getResourceBundleName:()Ljava/lang/String;
      16: astore_2
      17: aload_0
      18: invokevirtual #113                // Method getResourceBundle:()Ljava/util/ResourceBundle;
      21: astore_3
      22: aload_2
      23: ifnull        40
      26: aload_3
      27: ifnull        40
      30: aload_1
      31: aload_2
      32: invokevirtual #108                // Method org/jboss/logmanager/ExtLogRecord.setResourceBundleName:(Ljava/lang/String;)V
      35: aload_1
      36: aload_3
      37: invokevirtual #114                // Method org/jboss/logmanager/ExtLogRecord.setResourceBundle:(Ljava/util/ResourceBundle;)V
      40: aload_0
      41: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      44: aload_1
      45: invokevirtual #115                // Method org/jboss/logmanager/LoggerNode.isLoggable:(Lorg/jboss/logmanager/ExtLogRecord;)Z
      48: ifne          52
      51: return
      52: goto          62
      55: astore        4
      57: aload         4
      59: athrow
      60: astore        4
      62: aload_0
      63: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      66: aload_1
      67: invokevirtual #118                // Method org/jboss/logmanager/LoggerNode.publish:(Lorg/jboss/logmanager/ExtLogRecord;)V
      70: return
    Exception table:
       from    to  target type
          40    51    55   Class java/lang/VirtualMachineError
          40    51    60   Class java/lang/Throwable

  public void logRaw(java.util.logging.LogRecord);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method org/jboss/logmanager/ExtLogRecord.wrap:(Ljava/util/logging/LogRecord;)Lorg/jboss/logmanager/ExtLogRecord;
       5: invokevirtual #79                 // Method logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
       8: return

  public java.lang.String toString();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #120                // String Logger \'
       9: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #20                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #121                // String \' in context
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
      28: invokevirtual #22                 // Method org/jboss/logmanager/LoggerNode.getContext:()Lorg/jboss/logmanager/LogContext;
      31: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #18                 // Field loggerNode:Lorg/jboss/logmanager/LoggerNode;
       4: invokevirtual #123                // Method org/jboss/logmanager/LoggerNode.decrementRef:()V
       7: aload_0
       8: invokespecial #124                // Method java/lang/Object.finalize:()V
      11: goto          21
      14: astore_1
      15: aload_0
      16: invokespecial #124                // Method java/lang/Object.finalize:()V
      19: aload_1
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     7    14   any
          14    15    14   any

  public java.util.logging.Logger getParent();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method getParent:()Lorg/jboss/logmanager/Logger;
       4: areturn

  static {};
    Code:
       0: ldc_w         #2                  // class org/jboss/logmanager/Logger
       3: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: putstatic     #75                 // Field LOGGER_CLASS_NAME:Ljava/lang/String;
       9: getstatic     #126                // Field java/util/logging/Level.OFF:Ljava/util/logging/Level;
      12: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      15: putstatic     #34                 // Field OFF_INT:I
      18: getstatic     #92                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      21: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      24: putstatic     #91                 // Field SEVERE_INT:I
      27: getstatic     #94                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      30: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      33: putstatic     #93                 // Field WARNING_INT:I
      36: getstatic     #96                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      39: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      42: putstatic     #95                 // Field INFO_INT:I
      45: getstatic     #98                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      48: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      51: putstatic     #97                 // Field CONFIG_INT:I
      54: getstatic     #100                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      57: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      60: putstatic     #99                 // Field FINE_INT:I
      63: getstatic     #73                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      66: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      69: putstatic     #71                 // Field FINER_INT:I
      72: getstatic     #102                // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      75: invokevirtual #33                 // Method java/util/logging/Level.intValue:()I
      78: putstatic     #101                // Field FINEST_INT:I
      81: return
}
