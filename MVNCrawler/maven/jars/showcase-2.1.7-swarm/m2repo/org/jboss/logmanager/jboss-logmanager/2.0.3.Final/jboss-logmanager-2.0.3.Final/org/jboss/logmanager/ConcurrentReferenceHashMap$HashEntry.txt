Compiled from "ConcurrentReferenceHashMap.java"
final class org.jboss.logmanager.ConcurrentReferenceHashMap$HashEntry<K, V> {
  final java.lang.Object keyRef;

  final int hash;

  volatile java.lang.Object valueRef;

  final org.jboss.logmanager.ConcurrentReferenceHashMap$HashEntry<K, V> next;

  org.jboss.logmanager.ConcurrentReferenceHashMap$HashEntry(K, int, org.jboss.logmanager.ConcurrentReferenceHashMap$HashEntry<K, V>, V, org.jboss.logmanager.ConcurrentReferenceHashMap$ReferenceType, org.jboss.logmanager.ConcurrentReferenceHashMap$ReferenceType, java.lang.ref.ReferenceQueue<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #2                  // Field hash:I
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field next:Lorg/jboss/logmanager/ConcurrentReferenceHashMap$HashEntry;
      14: aload_0
      15: aload_0
      16: aload_1
      17: aload         5
      19: aload         7
      21: invokevirtual #4                  // Method newKeyReference:(Ljava/lang/Object;Lorg/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
      24: putfield      #5                  // Field keyRef:Ljava/lang/Object;
      27: aload_0
      28: aload_0
      29: aload         4
      31: aload         6
      33: aload         7
      35: invokevirtual #6                  // Method newValueReference:(Ljava/lang/Object;Lorg/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
      38: putfield      #7                  // Field valueRef:Ljava/lang/Object;
      41: return

  final java.lang.Object newKeyReference(K, org.jboss.logmanager.ConcurrentReferenceHashMap$ReferenceType, java.lang.ref.ReferenceQueue<java.lang.Object>);
    Code:
       0: aload_2
       1: getstatic     #8                  // Field org/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lorg/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType;
       4: if_acmpne     21
       7: new           #9                  // class org/jboss/logmanager/ConcurrentReferenceHashMap$WeakKeyReference
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #2                  // Field hash:I
      16: aload_3
      17: invokespecial #10                 // Method org/jboss/logmanager/ConcurrentReferenceHashMap$WeakKeyReference."<init>":(Ljava/lang/Object;ILjava/lang/ref/ReferenceQueue;)V
      20: areturn
      21: aload_2
      22: getstatic     #11                 // Field org/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType.SOFT:Lorg/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType;
      25: if_acmpne     42
      28: new           #12                 // class org/jboss/logmanager/ConcurrentReferenceHashMap$SoftKeyReference
      31: dup
      32: aload_1
      33: aload_0
      34: getfield      #2                  // Field hash:I
      37: aload_3
      38: invokespecial #13                 // Method org/jboss/logmanager/ConcurrentReferenceHashMap$SoftKeyReference."<init>":(Ljava/lang/Object;ILjava/lang/ref/ReferenceQueue;)V
      41: areturn
      42: aload_1
      43: areturn

  final java.lang.Object newValueReference(V, org.jboss.logmanager.ConcurrentReferenceHashMap$ReferenceType, java.lang.ref.ReferenceQueue<java.lang.Object>);
    Code:
       0: aload_2
       1: getstatic     #8                  // Field org/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lorg/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType;
       4: if_acmpne     25
       7: new           #14                 // class org/jboss/logmanager/ConcurrentReferenceHashMap$WeakValueReference
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #5                  // Field keyRef:Ljava/lang/Object;
      16: aload_0
      17: getfield      #2                  // Field hash:I
      20: aload_3
      21: invokespecial #15                 // Method org/jboss/logmanager/ConcurrentReferenceHashMap$WeakValueReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/ref/ReferenceQueue;)V
      24: areturn
      25: aload_2
      26: getstatic     #11                 // Field org/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType.SOFT:Lorg/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType;
      29: if_acmpne     50
      32: new           #16                 // class org/jboss/logmanager/ConcurrentReferenceHashMap$SoftValueReference
      35: dup
      36: aload_1
      37: aload_0
      38: getfield      #5                  // Field keyRef:Ljava/lang/Object;
      41: aload_0
      42: getfield      #2                  // Field hash:I
      45: aload_3
      46: invokespecial #17                 // Method org/jboss/logmanager/ConcurrentReferenceHashMap$SoftValueReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/ref/ReferenceQueue;)V
      49: areturn
      50: aload_1
      51: areturn

  final K key();
    Code:
       0: aload_0
       1: getfield      #5                  // Field keyRef:Ljava/lang/Object;
       4: instanceof    #18                 // class org/jboss/logmanager/ConcurrentReferenceHashMap$KeyReference
       7: ifeq          21
      10: aload_0
      11: getfield      #5                  // Field keyRef:Ljava/lang/Object;
      14: checkcast     #19                 // class java/lang/ref/Reference
      17: invokevirtual #20                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      20: areturn
      21: aload_0
      22: getfield      #5                  // Field keyRef:Ljava/lang/Object;
      25: areturn

  final V value();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field valueRef:Ljava/lang/Object;
       5: invokevirtual #21                 // Method dereferenceValue:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  final V dereferenceValue(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #18                 // class org/jboss/logmanager/ConcurrentReferenceHashMap$KeyReference
       4: ifeq          15
       7: aload_1
       8: checkcast     #19                 // class java/lang/ref/Reference
      11: invokevirtual #20                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      14: areturn
      15: aload_1
      16: areturn

  final void setValue(V, org.jboss.logmanager.ConcurrentReferenceHashMap$ReferenceType, java.lang.ref.ReferenceQueue<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokevirtual #6                  // Method newValueReference:(Ljava/lang/Object;Lorg/jboss/logmanager/ConcurrentReferenceHashMap$ReferenceType;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/Object;
       8: putfield      #7                  // Field valueRef:Ljava/lang/Object;
      11: return

  static final <K, V> org.jboss.logmanager.ConcurrentReferenceHashMap$HashEntry<K, V>[] newArray(int);
    Code:
       0: iload_0
       1: anewarray     #22                 // class org/jboss/logmanager/ConcurrentReferenceHashMap$HashEntry
       4: areturn
}
