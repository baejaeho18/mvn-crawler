Compiled from "FileAppender.java"
public class org.apache.log4j.FileAppender extends org.apache.log4j.WriterAppender {
  protected boolean fileAppend;

  protected java.lang.String fileName;

  protected boolean bufferedIO;

  protected int bufferSize;

  public org.apache.log4j.FileAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/log4j/WriterAppender."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field fileAppend:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fileName:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field bufferedIO:Z
      19: aload_0
      20: sipush        8192
      23: putfield      #5                  // Field bufferSize:I
      26: return

  public org.apache.log4j.FileAppender(org.apache.log4j.Layout, java.lang.String, boolean, boolean, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/log4j/WriterAppender."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field fileAppend:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fileName:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field bufferedIO:Z
      19: aload_0
      20: sipush        8192
      23: putfield      #5                  // Field bufferSize:I
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field org/apache/log4j/AppenderSkeleton.layout:Lorg/apache/log4j/Layout;
      31: aload_0
      32: aload_2
      33: iload_3
      34: iload         4
      36: iload         5
      38: invokevirtual #7                  // Method setFile:(Ljava/lang/String;ZZI)V
      41: return

  public org.apache.log4j.FileAppender(org.apache.log4j.Layout, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/log4j/WriterAppender."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field fileAppend:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fileName:Ljava/lang/String;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field bufferedIO:Z
      19: aload_0
      20: sipush        8192
      23: putfield      #5                  // Field bufferSize:I
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field org/apache/log4j/AppenderSkeleton.layout:Lorg/apache/log4j/Layout;
      31: aload_0
      32: aload_2
      33: iload_3
      34: iconst_0
      35: aload_0
      36: getfield      #5                  // Field bufferSize:I
      39: invokevirtual #7                  // Method setFile:(Ljava/lang/String;ZZI)V
      42: return

  public org.apache.log4j.FileAppender(org.apache.log4j.Layout, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #8                  // Method "<init>":(Lorg/apache/log4j/Layout;Ljava/lang/String;Z)V
       7: return

  public void setFile(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field fileName:Ljava/lang/String;
      10: return

  public boolean getAppend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field fileAppend:Z
       4: ireturn

  public java.lang.String getFile();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: areturn

  public void activateOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fileName:Ljava/lang/String;
       4: ifnull        84
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field fileName:Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field fileAppend:Z
      16: aload_0
      17: getfield      #4                  // Field bufferedIO:Z
      20: aload_0
      21: getfield      #5                  // Field bufferSize:I
      24: invokevirtual #7                  // Method setFile:(Ljava/lang/String;ZZI)V
      27: goto          119
      30: astore_1
      31: aload_0
      32: getfield      #11                 // Field org/apache/log4j/AppenderSkeleton.errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      35: new           #12                 // class java/lang/StringBuffer
      38: dup
      39: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      42: ldc           #14                 // String setFile(
      44: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      47: aload_0
      48: getfield      #3                  // Field fileName:Ljava/lang/String;
      51: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      54: ldc           #16                 // String ,
      56: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      59: aload_0
      60: getfield      #2                  // Field fileAppend:Z
      63: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      66: ldc           #18                 // String ) call failed.
      68: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      71: invokevirtual #19                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      74: aload_1
      75: iconst_4
      76: invokeinterface #20,  4           // InterfaceMethod org/apache/log4j/spi/ErrorHandler.error:(Ljava/lang/String;Ljava/lang/Exception;I)V
      81: goto          119
      84: new           #12                 // class java/lang/StringBuffer
      87: dup
      88: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      91: ldc           #21                 // String File option not set for appender [
      93: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      96: aload_0
      97: getfield      #22                 // Field org/apache/log4j/AppenderSkeleton.name:Ljava/lang/String;
     100: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     103: ldc           #23                 // String ].
     105: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     108: invokevirtual #19                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     111: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
     114: ldc           #25                 // String Are you using FileAppender instead of ConsoleAppender?
     116: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
     119: return
    Exception table:
       from    to  target type
           7    27    30   Class java/io/IOException

  protected void closeFile();
    Code:
       0: aload_0
       1: getfield      #26                 // Field org/apache/log4j/WriterAppender.qw:Lorg/apache/log4j/helpers/QuietWriter;
       4: ifnull        57
       7: aload_0
       8: getfield      #26                 // Field org/apache/log4j/WriterAppender.qw:Lorg/apache/log4j/helpers/QuietWriter;
      11: invokevirtual #27                 // Method java/io/FilterWriter.close:()V
      14: goto          57
      17: astore_1
      18: aload_1
      19: instanceof    #28                 // class java/io/InterruptedIOException
      22: ifeq          31
      25: invokestatic  #29                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      28: invokevirtual #30                 // Method java/lang/Thread.interrupt:()V
      31: new           #12                 // class java/lang/StringBuffer
      34: dup
      35: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
      38: ldc           #31                 // String Could not close
      40: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: aload_0
      44: getfield      #26                 // Field org/apache/log4j/WriterAppender.qw:Lorg/apache/log4j/helpers/QuietWriter;
      47: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      50: invokevirtual #19                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      53: aload_1
      54: invokestatic  #33                 // Method org/apache/log4j/helpers/LogLog.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException

  public boolean getBufferedIO();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufferedIO:Z
       4: ireturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufferSize:I
       4: ireturn

  public void setAppend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field fileAppend:Z
       5: return

  public void setBufferedIO(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field bufferedIO:Z
       5: iload_1
       6: ifeq          14
       9: aload_0
      10: iconst_0
      11: putfield      #34                 // Field org/apache/log4j/WriterAppender.immediateFlush:Z
      14: return

  public void setBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field bufferSize:I
       5: return

  public synchronized void setFile(java.lang.String, boolean, boolean, int) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #35                 // String setFile called:
       9: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_1
      13: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: ldc           #36                 // String ,
      18: invokevirtual #15                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      21: iload_2
      22: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Z)Ljava/lang/StringBuffer;
      25: invokevirtual #19                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      28: invokestatic  #37                 // Method org/apache/log4j/helpers/LogLog.debug:(Ljava/lang/String;)V
      31: iload_3
      32: ifeq          40
      35: aload_0
      36: iconst_0
      37: invokevirtual #38                 // Method org/apache/log4j/WriterAppender.setImmediateFlush:(Z)V
      40: aload_0
      41: invokevirtual #39                 // Method reset:()V
      44: aconst_null
      45: astore        5
      47: new           #40                 // class java/io/FileOutputStream
      50: dup
      51: aload_1
      52: iload_2
      53: invokespecial #41                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
      56: astore        5
      58: goto          131
      61: astore        6
      63: new           #43                 // class java/io/File
      66: dup
      67: aload_1
      68: invokespecial #44                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      71: invokevirtual #45                 // Method java/io/File.getParent:()Ljava/lang/String;
      74: astore        7
      76: aload         7
      78: ifnull        128
      81: new           #43                 // class java/io/File
      84: dup
      85: aload         7
      87: invokespecial #44                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      90: astore        8
      92: aload         8
      94: invokevirtual #46                 // Method java/io/File.exists:()Z
      97: ifne          122
     100: aload         8
     102: invokevirtual #47                 // Method java/io/File.mkdirs:()Z
     105: ifeq          122
     108: new           #40                 // class java/io/FileOutputStream
     111: dup
     112: aload_1
     113: iload_2
     114: invokespecial #41                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
     117: astore        5
     119: goto          125
     122: aload         6
     124: athrow
     125: goto          131
     128: aload         6
     130: athrow
     131: aload_0
     132: aload         5
     134: invokevirtual #48                 // Method org/apache/log4j/WriterAppender.createWriter:(Ljava/io/OutputStream;)Ljava/io/OutputStreamWriter;
     137: astore        6
     139: iload_3
     140: ifeq          156
     143: new           #49                 // class java/io/BufferedWriter
     146: dup
     147: aload         6
     149: iload         4
     151: invokespecial #50                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;I)V
     154: astore        6
     156: aload_0
     157: aload         6
     159: invokevirtual #51                 // Method setQWForFiles:(Ljava/io/Writer;)V
     162: aload_0
     163: aload_1
     164: putfield      #3                  // Field fileName:Ljava/lang/String;
     167: aload_0
     168: iload_2
     169: putfield      #2                  // Field fileAppend:Z
     172: aload_0
     173: iload_3
     174: putfield      #4                  // Field bufferedIO:Z
     177: aload_0
     178: iload         4
     180: putfield      #5                  // Field bufferSize:I
     183: aload_0
     184: invokevirtual #52                 // Method org/apache/log4j/WriterAppender.writeHeader:()V
     187: ldc           #53                 // String setFile ended
     189: invokestatic  #37                 // Method org/apache/log4j/helpers/LogLog.debug:(Ljava/lang/String;)V
     192: return
    Exception table:
       from    to  target type
          47    58    61   Class java/io/FileNotFoundException

  protected void setQWForFiles(java.io.Writer);
    Code:
       0: aload_0
       1: new           #54                 // class org/apache/log4j/helpers/QuietWriter
       4: dup
       5: aload_1
       6: aload_0
       7: getfield      #11                 // Field org/apache/log4j/AppenderSkeleton.errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      10: invokespecial #55                 // Method org/apache/log4j/helpers/QuietWriter."<init>":(Ljava/io/Writer;Lorg/apache/log4j/spi/ErrorHandler;)V
      13: putfield      #26                 // Field org/apache/log4j/WriterAppender.qw:Lorg/apache/log4j/helpers/QuietWriter;
      16: return

  protected void reset();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method closeFile:()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field fileName:Ljava/lang/String;
       9: aload_0
      10: invokespecial #57                 // Method org/apache/log4j/WriterAppender.reset:()V
      13: return
}
