Compiled from "ExtLogRecord.java"
public class org.jboss.logmanager.ExtLogRecord extends java.util.logging.LogRecord {
  private static final long serialVersionUID;

  private final transient java.lang.String loggerClassName;

  private transient boolean calculateCaller;

  private java.lang.String ndc;

  private org.jboss.logmanager.ExtLogRecord$FormatStyle formatStyle;

  private org.jboss.logmanager.FastCopyHashMap<java.lang.String, java.lang.Object> mdcCopy;

  private int sourceLineNumber;

  private java.lang.String sourceFileName;

  private java.lang.String resourceKey;

  private java.lang.String formattedMessage;

  private java.lang.String threadName;

  public org.jboss.logmanager.ExtLogRecord(java.util.logging.Level, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #1                  // Field org/jboss/logmanager/ExtLogRecord$FormatStyle.MESSAGE_FORMAT:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
       6: aload_3
       7: invokespecial #2                  // Method "<init>":(Ljava/util/logging/Level;Ljava/lang/String;Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;Ljava/lang/String;)V
      10: return

  public org.jboss.logmanager.ExtLogRecord(java.util.logging.Level, java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
       6: aload_0
       7: iconst_1
       8: putfield      #4                  // Field calculateCaller:Z
      11: aload_0
      12: getstatic     #1                  // Field org/jboss/logmanager/ExtLogRecord$FormatStyle.MESSAGE_FORMAT:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      15: putfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      18: aload_0
      19: iconst_m1
      20: putfield      #6                  // Field sourceLineNumber:I
      23: aload_0
      24: aload_3
      25: ifnonnull     34
      28: getstatic     #1                  // Field org/jboss/logmanager/ExtLogRecord$FormatStyle.MESSAGE_FORMAT:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      31: goto          35
      34: aload_3
      35: putfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      38: aload_0
      39: aload         4
      41: putfield      #7                  // Field loggerClassName:Ljava/lang/String;
      44: aload_0
      45: invokestatic  #8                  // Method org/jboss/logmanager/NDC.get:()Ljava/lang/String;
      48: putfield      #9                  // Field ndc:Ljava/lang/String;
      51: aload_0
      52: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      55: invokevirtual #11                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      58: putfield      #12                 // Field threadName:Ljava/lang/String;
      61: return

  public org.jboss.logmanager.ExtLogRecord(org.jboss.logmanager.ExtLogRecord);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method getLevel:()Ljava/util/logging/Level;
       5: aload_1
       6: invokevirtual #14                 // Method getMessage:()Ljava/lang/String;
       9: invokespecial #3                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      12: aload_0
      13: iconst_1
      14: putfield      #4                  // Field calculateCaller:Z
      17: aload_0
      18: getstatic     #1                  // Field org/jboss/logmanager/ExtLogRecord$FormatStyle.MESSAGE_FORMAT:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      21: putfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      24: aload_0
      25: iconst_m1
      26: putfield      #6                  // Field sourceLineNumber:I
      29: aload_0
      30: aload_1
      31: invokevirtual #15                 // Method getLoggerName:()Ljava/lang/String;
      34: invokevirtual #16                 // Method setLoggerName:(Ljava/lang/String;)V
      37: aload_0
      38: aload_1
      39: invokevirtual #17                 // Method getMillis:()J
      42: invokevirtual #18                 // Method setMillis:(J)V
      45: aload_0
      46: aload_1
      47: invokevirtual #19                 // Method getParameters:()[Ljava/lang/Object;
      50: invokevirtual #20                 // Method setParameters:([Ljava/lang/Object;)V
      53: aload_0
      54: aload_1
      55: invokevirtual #21                 // Method getResourceBundle:()Ljava/util/ResourceBundle;
      58: invokevirtual #22                 // Method setResourceBundle:(Ljava/util/ResourceBundle;)V
      61: aload_0
      62: aload_1
      63: invokevirtual #23                 // Method getResourceBundleName:()Ljava/lang/String;
      66: invokevirtual #24                 // Method setResourceBundleName:(Ljava/lang/String;)V
      69: aload_0
      70: aload_1
      71: invokevirtual #25                 // Method getSequenceNumber:()J
      74: invokevirtual #26                 // Method setSequenceNumber:(J)V
      77: aload_0
      78: aload_1
      79: invokevirtual #27                 // Method getThreadID:()I
      82: invokevirtual #28                 // Method setThreadID:(I)V
      85: aload_0
      86: aload_1
      87: invokevirtual #29                 // Method getThrown:()Ljava/lang/Throwable;
      90: invokevirtual #30                 // Method setThrown:(Ljava/lang/Throwable;)V
      93: aload_1
      94: getfield      #4                  // Field calculateCaller:Z
      97: ifne          132
     100: aload_0
     101: aload_1
     102: invokevirtual #31                 // Method getSourceClassName:()Ljava/lang/String;
     105: invokevirtual #32                 // Method setSourceClassName:(Ljava/lang/String;)V
     108: aload_0
     109: aload_1
     110: invokevirtual #33                 // Method getSourceMethodName:()Ljava/lang/String;
     113: invokevirtual #34                 // Method setSourceMethodName:(Ljava/lang/String;)V
     116: aload_0
     117: aload_1
     118: getfield      #35                 // Field sourceFileName:Ljava/lang/String;
     121: putfield      #35                 // Field sourceFileName:Ljava/lang/String;
     124: aload_0
     125: aload_1
     126: getfield      #6                  // Field sourceLineNumber:I
     129: putfield      #6                  // Field sourceLineNumber:I
     132: aload_0
     133: aload_1
     134: getfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
     137: putfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
     140: aload_0
     141: aload_1
     142: getfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
     145: putfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
     148: aload_0
     149: aload_1
     150: getfield      #9                  // Field ndc:Ljava/lang/String;
     153: putfield      #9                  // Field ndc:Ljava/lang/String;
     156: aload_0
     157: aload_1
     158: getfield      #7                  // Field loggerClassName:Ljava/lang/String;
     161: putfield      #7                  // Field loggerClassName:Ljava/lang/String;
     164: aload_0
     165: aload_1
     166: getfield      #12                 // Field threadName:Ljava/lang/String;
     169: putfield      #12                 // Field threadName:Ljava/lang/String;
     172: aload_0
     173: aload_1
     174: getfield      #37                 // Field resourceKey:Ljava/lang/String;
     177: putfield      #37                 // Field resourceKey:Ljava/lang/String;
     180: aload_0
     181: aload_1
     182: getfield      #38                 // Field formattedMessage:Ljava/lang/String;
     185: putfield      #38                 // Field formattedMessage:Ljava/lang/String;
     188: return

  public static org.jboss.logmanager.ExtLogRecord wrap(java.util.logging.LogRecord);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #39                 // class org/jboss/logmanager/ExtLogRecord
      10: ifeq          18
      13: aload_0
      14: checkcast     #39                 // class org/jboss/logmanager/ExtLogRecord
      17: areturn
      18: new           #40                 // class org/jboss/logmanager/WrappedExtLogRecord
      21: dup
      22: aload_0
      23: invokespecial #41                 // Method org/jboss/logmanager/WrappedExtLogRecord."<init>":(Ljava/util/logging/LogRecord;)V
      26: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method copyAll:()V
       4: aload_1
       5: invokevirtual #43                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       8: return

  public void disableCallerCalculation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field calculateCaller:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #44                 // Method setUnknownCaller:()V
      11: return

  public void copyAll();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method copyMdc:()V
       4: aload_0
       5: invokespecial #46                 // Method calculateCaller:()V
       8: aload_0
       9: invokevirtual #47                 // Method getFormattedMessage:()Ljava/lang/String;
      12: pop
      13: return

  public void copyMdc();
    Code:
       0: aload_0
       1: getfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #48                 // Method org/jboss/logmanager/MDC.fastCopyObject:()Lorg/jboss/logmanager/FastCopyHashMap;
      11: putfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
      14: return

  public java.lang.String getMdc(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
       4: astore_2
       5: aload_2
       6: ifnonnull     14
       9: aload_1
      10: invokestatic  #49                 // Method org/jboss/logmanager/MDC.get:(Ljava/lang/String;)Ljava/lang/String;
      13: areturn
      14: aload_2
      15: aload_1
      16: invokeinterface #50,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_3
      22: aload_3
      23: ifnonnull     30
      26: aconst_null
      27: goto          34
      30: aload_3
      31: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      34: areturn

  public java.util.Map<java.lang.String, java.lang.String> getMdcCopy();
    Code:
       0: aload_0
       1: getfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #48                 // Method org/jboss/logmanager/MDC.fastCopyObject:()Lorg/jboss/logmanager/FastCopyHashMap;
      11: putfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
      14: new           #52                 // class org/jboss/logmanager/FastCopyHashMap
      17: dup
      18: invokespecial #53                 // Method org/jboss/logmanager/FastCopyHashMap."<init>":()V
      21: astore_1
      22: aload_0
      23: getfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
      26: invokevirtual #54                 // Method org/jboss/logmanager/FastCopyHashMap.entrySet:()Ljava/util/Set;
      29: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          97
      44: aload_2
      45: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #58                 // class java/util/Map$Entry
      53: astore_3
      54: aload_3
      55: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: checkcast     #60                 // class java/lang/String
      63: astore        4
      65: aload_3
      66: invokeinterface #61,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      71: astore        5
      73: aload_1
      74: aload         4
      76: aload         5
      78: ifnonnull     85
      81: aconst_null
      82: goto          90
      85: aload         5
      87: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      90: invokevirtual #62                 // Method org/jboss/logmanager/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: goto          35
      97: aload_1
      98: areturn

  public java.lang.String putMdc(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method copyMdc:()V
       4: aload_0
       5: getfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
       8: aload_1
       9: aload_2
      10: invokevirtual #62                 // Method org/jboss/logmanager/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_3
      14: aload_3
      15: ifnonnull     22
      18: aconst_null
      19: goto          26
      22: aload_3
      23: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: areturn

  public java.lang.String removeMdc(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method copyMdc:()V
       4: aload_0
       5: getfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
       8: aload_1
       9: invokevirtual #63                 // Method org/jboss/logmanager/FastCopyHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore_2
      13: aload_2
      14: ifnonnull     21
      17: aconst_null
      18: goto          25
      21: aload_2
      22: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      25: areturn

  public void setMdc(java.util.Map<?, ?>);
    Code:
       0: new           #52                 // class org/jboss/logmanager/FastCopyHashMap
       3: dup
       4: invokespecial #53                 // Method org/jboss/logmanager/FastCopyHashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #64,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          83
      29: aload_3
      30: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #58                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: astore        5
      49: aload         4
      51: invokeinterface #61,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: astore        6
      58: aload         5
      60: ifnull        80
      63: aload         6
      65: ifnull        80
      68: aload_2
      69: aload         5
      71: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      74: aload         6
      76: invokevirtual #62                 // Method org/jboss/logmanager/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          20
      83: aload_0
      84: aload_2
      85: putfield      #36                 // Field mdcCopy:Lorg/jboss/logmanager/FastCopyHashMap;
      88: return

  public java.lang.String getNdc();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ndc:Ljava/lang/String;
       4: areturn

  public void setNdc(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field ndc:Ljava/lang/String;
       5: return

  public java.lang.String getLoggerClassName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field loggerClassName:Ljava/lang/String;
       4: areturn

  public org.jboss.logmanager.ExtLogRecord$FormatStyle getFormatStyle();
    Code:
       0: aload_0
       1: getfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
       4: areturn

  private void calculateCaller();
    Code:
       0: aload_0
       1: getfield      #4                  // Field calculateCaller:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #4                  // Field calculateCaller:Z
      13: new           #65                 // class java/lang/Throwable
      16: dup
      17: invokespecial #66                 // Method java/lang/Throwable."<init>":()V
      20: invokevirtual #67                 // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_1
      24: iconst_0
      25: istore_2
      26: aload_1
      27: astore_3
      28: aload_3
      29: arraylength
      30: istore        4
      32: iconst_0
      33: istore        5
      35: iload         5
      37: iload         4
      39: if_icmpge     121
      42: aload_3
      43: iload         5
      45: aaload
      46: astore        6
      48: aload         6
      50: invokevirtual #68                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      53: astore        7
      55: iload_2
      56: ifeq          105
      59: aload_0
      60: getfield      #7                  // Field loggerClassName:Ljava/lang/String;
      63: aload         7
      65: invokevirtual #69                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifne          115
      71: aload_0
      72: aload         7
      74: invokevirtual #32                 // Method setSourceClassName:(Ljava/lang/String;)V
      77: aload_0
      78: aload         6
      80: invokevirtual #70                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      83: invokevirtual #34                 // Method setSourceMethodName:(Ljava/lang/String;)V
      86: aload_0
      87: aload         6
      89: invokevirtual #71                 // Method java/lang/StackTraceElement.getLineNumber:()I
      92: invokevirtual #72                 // Method setSourceLineNumber:(I)V
      95: aload_0
      96: aload         6
      98: invokevirtual #73                 // Method java/lang/StackTraceElement.getFileName:()Ljava/lang/String;
     101: invokevirtual #74                 // Method setSourceFileName:(Ljava/lang/String;)V
     104: return
     105: aload_0
     106: getfield      #7                  // Field loggerClassName:Ljava/lang/String;
     109: aload         7
     111: invokevirtual #69                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     114: istore_2
     115: iinc          5, 1
     118: goto          35
     121: aload_0
     122: invokespecial #44                 // Method setUnknownCaller:()V
     125: return

  private void setUnknownCaller();
    Code:
       0: aload_0
       1: ldc           #75                 // String <unknown>
       3: invokevirtual #32                 // Method setSourceClassName:(Ljava/lang/String;)V
       6: aload_0
       7: ldc           #75                 // String <unknown>
       9: invokevirtual #34                 // Method setSourceMethodName:(Ljava/lang/String;)V
      12: aload_0
      13: iconst_m1
      14: invokevirtual #72                 // Method setSourceLineNumber:(I)V
      17: aload_0
      18: ldc           #75                 // String <unknown>
      20: invokevirtual #74                 // Method setSourceFileName:(Ljava/lang/String;)V
      23: return

  public int getSourceLineNumber();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method calculateCaller:()V
       4: aload_0
       5: getfield      #6                  // Field sourceLineNumber:I
       8: ireturn

  public void setSourceLineNumber(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field calculateCaller:Z
       5: aload_0
       6: iload_1
       7: putfield      #6                  // Field sourceLineNumber:I
      10: return

  public java.lang.String getSourceFileName();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method calculateCaller:()V
       4: aload_0
       5: getfield      #35                 // Field sourceFileName:Ljava/lang/String;
       8: areturn

  public void setSourceFileName(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field calculateCaller:Z
       5: aload_0
       6: aload_1
       7: putfield      #35                 // Field sourceFileName:Ljava/lang/String;
      10: return

  public java.lang.String getSourceClassName();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method calculateCaller:()V
       4: aload_0
       5: invokespecial #76                 // Method java/util/logging/LogRecord.getSourceClassName:()Ljava/lang/String;
       8: areturn

  public void setSourceClassName(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field calculateCaller:Z
       5: aload_0
       6: aload_1
       7: invokespecial #77                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      10: return

  public java.lang.String getSourceMethodName();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method calculateCaller:()V
       4: aload_0
       5: invokespecial #78                 // Method java/util/logging/LogRecord.getSourceMethodName:()Ljava/lang/String;
       8: areturn

  public void setSourceMethodName(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field calculateCaller:Z
       5: aload_0
       6: aload_1
       7: invokespecial #79                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      10: return

  public java.lang.String getFormattedMessage();
    Code:
       0: aload_0
       1: getfield      #38                 // Field formattedMessage:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #80                 // Method formatRecord:()Ljava/lang/String;
      12: putfield      #38                 // Field formattedMessage:Ljava/lang/String;
      15: aload_0
      16: getfield      #38                 // Field formattedMessage:Ljava/lang/String;
      19: areturn

  public java.lang.String getResourceKey();
    Code:
       0: aload_0
       1: getfield      #38                 // Field formattedMessage:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: invokespecial #80                 // Method formatRecord:()Ljava/lang/String;
      11: pop
      12: aload_0
      13: getfield      #37                 // Field resourceKey:Ljava/lang/String;
      16: areturn

  private java.lang.String formatRecord();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getResourceBundle:()Ljava/util/ResourceBundle;
       4: astore_1
       5: aload_0
       6: invokevirtual #14                 // Method getMessage:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: ifnull        37
      20: aload_1
      21: aload_2
      22: invokevirtual #81                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      25: astore_3
      26: aload_0
      27: aload_2
      28: putfield      #37                 // Field resourceKey:Ljava/lang/String;
      31: aload_3
      32: astore_2
      33: goto          37
      36: astore_3
      37: aload_0
      38: invokevirtual #19                 // Method getParameters:()[Ljava/lang/Object;
      41: astore_3
      42: aload_3
      43: ifnull        51
      46: aload_3
      47: arraylength
      48: ifne          53
      51: aload_2
      52: areturn
      53: getstatic     #83                 // Field org/jboss/logmanager/ExtLogRecord$1.$SwitchMap$org$jboss$logmanager$ExtLogRecord$FormatStyle:[I
      56: aload_0
      57: getfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      60: invokevirtual #84                 // Method org/jboss/logmanager/ExtLogRecord$FormatStyle.ordinal:()I
      63: iaload
      64: lookupswitch  { // 2
                     1: 92
                     2: 98
               default: 117
          }
      92: aload_2
      93: aload_3
      94: invokestatic  #85                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      97: areturn
      98: aload_2
      99: bipush        123
     101: invokevirtual #86                 // Method java/lang/String.indexOf:(I)I
     104: iflt          115
     107: aload_2
     108: aload_3
     109: invokestatic  #87                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     112: goto          116
     115: aload_2
     116: areturn
     117: aload_2
     118: areturn
    Exception table:
       from    to  target type
          20    33    36   Class java/util/MissingResourceException

  public java.lang.String getThreadName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field threadName:Ljava/lang/String;
       4: areturn

  public void setThreadName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field threadName:Ljava/lang/String;
       5: return

  public void setMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/jboss/logmanager/ExtLogRecord$FormatStyle.MESSAGE_FORMAT:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
       5: invokevirtual #88                 // Method setMessage:(Ljava/lang/String;Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;)V
       8: return

  public void setMessage(java.lang.String, org.jboss.logmanager.ExtLogRecord$FormatStyle);
    Code:
       0: aload_0
       1: aload_2
       2: ifnonnull     11
       5: getstatic     #1                  // Field org/jboss/logmanager/ExtLogRecord$FormatStyle.MESSAGE_FORMAT:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
       8: goto          12
      11: aload_2
      12: putfield      #5                  // Field formatStyle:Lorg/jboss/logmanager/ExtLogRecord$FormatStyle;
      15: aload_0
      16: aconst_null
      17: putfield      #38                 // Field formattedMessage:Ljava/lang/String;
      20: aload_0
      21: aload_1
      22: invokespecial #89                 // Method java/util/logging/LogRecord.setMessage:(Ljava/lang/String;)V
      25: return

  public void setParameters(java.lang.Object[]);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #38                 // Field formattedMessage:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokespecial #90                 // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      10: return

  public void setResourceBundle(java.util.ResourceBundle);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #38                 // Field formattedMessage:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokespecial #91                 // Method java/util/logging/LogRecord.setResourceBundle:(Ljava/util/ResourceBundle;)V
      10: return

  public void setResourceBundleName(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #38                 // Field formattedMessage:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokespecial #92                 // Method java/util/logging/LogRecord.setResourceBundleName:(Ljava/lang/String;)V
      10: return
}
