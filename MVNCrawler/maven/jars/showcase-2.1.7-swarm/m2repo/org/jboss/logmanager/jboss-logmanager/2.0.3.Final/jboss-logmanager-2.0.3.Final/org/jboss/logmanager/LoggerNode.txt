Compiled from "LoggerNode.java"
final class org.jboss.logmanager.LoggerNode {
  private final org.jboss.logmanager.LogContext context;

  private final org.jboss.logmanager.LoggerNode parent;

  private final java.lang.String fullName;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.jboss.logmanager.LoggerNode> children;

  private volatile java.util.logging.Handler[] handlers;

  private volatile boolean useParentHandlers;

  private volatile java.util.logging.Filter filter;

  private volatile boolean useParentFilter;

  private volatile java.util.Map<org.jboss.logmanager.Logger$AttachmentKey, java.lang.Object> attachments;

  private static final org.jboss.logmanager.AtomicArray<org.jboss.logmanager.LoggerNode, java.util.logging.Handler> handlersUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.jboss.logmanager.LoggerNode, java.util.Map> attachmentsUpdater;

  private volatile java.util.logging.Level level;

  private volatile int effectiveLevel;

  org.jboss.logmanager.LoggerNode(org.jboss.logmanager.LogContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field useParentHandlers:Z
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field useParentFilter:Z
      14: aload_0
      15: invokestatic  #6                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      18: putfield      #7                  // Field attachments:Ljava/util/Map;
      21: aload_0
      22: getstatic     #8                  // Field org/jboss/logmanager/Logger.INFO_INT:I
      25: putfield      #9                  // Field effectiveLevel:I
      28: aload_0
      29: aconst_null
      30: putfield      #10                 // Field parent:Lorg/jboss/logmanager/LoggerNode;
      33: aload_0
      34: ldc           #11                 // String
      36: putfield      #2                  // Field fullName:Ljava/lang/String;
      39: getstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
      42: aload_0
      43: invokevirtual #13                 // Method org/jboss/logmanager/AtomicArray.clear:(Ljava/lang/Object;)V
      46: aload_0
      47: aload_1
      48: putfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
      51: aload_0
      52: aload_1
      53: invokevirtual #14                 // Method org/jboss/logmanager/LogContext.createChildMap:()Ljava/util/concurrent/ConcurrentMap;
      56: putfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
      59: return

  private org.jboss.logmanager.LoggerNode(org.jboss.logmanager.LogContext, org.jboss.logmanager.LoggerNode, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field useParentHandlers:Z
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field useParentFilter:Z
      14: aload_0
      15: invokestatic  #6                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      18: putfield      #7                  // Field attachments:Ljava/util/Map;
      21: aload_0
      22: getstatic     #8                  // Field org/jboss/logmanager/Logger.INFO_INT:I
      25: putfield      #9                  // Field effectiveLevel:I
      28: aload_3
      29: invokevirtual #16                 // Method java/lang/String.trim:()Ljava/lang/String;
      32: astore_3
      33: aload_3
      34: invokevirtual #17                 // Method java/lang/String.length:()I
      37: ifne          54
      40: aload_2
      41: ifnonnull     54
      44: new           #18                 // class java/lang/IllegalArgumentException
      47: dup
      48: ldc           #19                 // String nodeName is empty, or just whitespace and has no parent
      50: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: aload_2
      56: putfield      #10                 // Field parent:Lorg/jboss/logmanager/LoggerNode;
      59: getstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
      62: aload_0
      63: invokevirtual #13                 // Method org/jboss/logmanager/AtomicArray.clear:(Ljava/lang/Object;)V
      66: aload_2
      67: getfield      #10                 // Field parent:Lorg/jboss/logmanager/LoggerNode;
      70: ifnonnull     97
      73: aload_3
      74: invokevirtual #21                 // Method java/lang/String.isEmpty:()Z
      77: ifeq          89
      80: aload_0
      81: ldc           #22                 // String .
      83: putfield      #2                  // Field fullName:Ljava/lang/String;
      86: goto          127
      89: aload_0
      90: aload_3
      91: putfield      #2                  // Field fullName:Ljava/lang/String;
      94: goto          127
      97: aload_0
      98: new           #23                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     105: aload_2
     106: getfield      #2                  // Field fullName:Ljava/lang/String;
     109: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #22                 // String .
     114: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_3
     118: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: putfield      #2                  // Field fullName:Ljava/lang/String;
     127: aload_0
     128: aload_1
     129: putfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
     132: aload_0
     133: aload_2
     134: getfield      #9                  // Field effectiveLevel:I
     137: putfield      #9                  // Field effectiveLevel:I
     140: aload_0
     141: aload_1
     142: invokevirtual #14                 // Method org/jboss/logmanager/LogContext.createChildMap:()Ljava/util/concurrent/ConcurrentMap;
     145: putfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
     148: return

  org.jboss.logmanager.LoggerNode getOrCreate(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #17                 // Method java/lang/String.length:()I
       8: ifne          13
      11: aload_0
      12: areturn
      13: aload_1
      14: bipush        46
      16: invokevirtual #27                 // Method java/lang/String.indexOf:(I)I
      19: istore_2
      20: iload_2
      21: iconst_m1
      22: if_icmpne     29
      25: aload_1
      26: goto          35
      29: aload_1
      30: iconst_0
      31: iload_2
      32: invokevirtual #28                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      35: astore_3
      36: aload_0
      37: getfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
      40: aload_3
      41: invokeinterface #29,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #30                 // class org/jboss/logmanager/LoggerNode
      49: astore        4
      51: aload         4
      53: ifnonnull     97
      56: new           #30                 // class org/jboss/logmanager/LoggerNode
      59: dup
      60: aload_0
      61: getfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
      64: aload_0
      65: aload_3
      66: invokespecial #31                 // Method "<init>":(Lorg/jboss/logmanager/LogContext;Lorg/jboss/logmanager/LoggerNode;Ljava/lang/String;)V
      69: astore        4
      71: aload_0
      72: getfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
      75: aload_3
      76: aload         4
      78: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: checkcast     #30                 // class org/jboss/logmanager/LoggerNode
      86: astore        5
      88: aload         5
      90: ifnull        97
      93: aload         5
      95: astore        4
      97: iload_2
      98: iconst_m1
      99: if_icmpne     105
     102: aload         4
     104: areturn
     105: aload         4
     107: aload_1
     108: iload_2
     109: iconst_1
     110: iadd
     111: invokevirtual #33                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     114: invokevirtual #34                 // Method getOrCreate:(Ljava/lang/String;)Lorg/jboss/logmanager/LoggerNode;
     117: areturn

  org.jboss.logmanager.LoggerNode getIfExists(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #17                 // Method java/lang/String.length:()I
       8: ifne          13
      11: aload_0
      12: areturn
      13: aload_1
      14: bipush        46
      16: invokevirtual #27                 // Method java/lang/String.indexOf:(I)I
      19: istore_2
      20: iload_2
      21: iconst_m1
      22: if_icmpne     29
      25: aload_1
      26: goto          35
      29: aload_1
      30: iconst_0
      31: iload_2
      32: invokevirtual #28                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      35: astore_3
      36: aload_0
      37: getfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
      40: aload_3
      41: invokeinterface #29,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #30                 // class org/jboss/logmanager/LoggerNode
      49: astore        4
      51: aload         4
      53: ifnonnull     58
      56: aconst_null
      57: areturn
      58: iload_2
      59: iconst_m1
      60: if_icmpne     66
      63: aload         4
      65: areturn
      66: aload         4
      68: aload_1
      69: iload_2
      70: iconst_1
      71: iadd
      72: invokevirtual #33                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      75: invokevirtual #35                 // Method getIfExists:(Ljava/lang/String;)Lorg/jboss/logmanager/LoggerNode;
      78: areturn

  org.jboss.logmanager.Logger createLogger();
    Code:
       0: invokestatic  #36                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        23
       8: new           #37                 // class org/jboss/logmanager/LoggerNode$1
      11: dup
      12: aload_0
      13: invokespecial #38                 // Method org/jboss/logmanager/LoggerNode$1."<init>":(Lorg/jboss/logmanager/LoggerNode;)V
      16: invokestatic  #39                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      19: checkcast     #40                 // class org/jboss/logmanager/Logger
      22: areturn
      23: new           #40                 // class org/jboss/logmanager/Logger
      26: dup
      27: aload_0
      28: aload_0
      29: getfield      #2                  // Field fullName:Ljava/lang/String;
      32: invokespecial #41                 // Method org/jboss/logmanager/Logger."<init>":(Lorg/jboss/logmanager/LoggerNode;Ljava/lang/String;)V
      35: astore_2
      36: aload_0
      37: getfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
      40: aload_0
      41: getfield      #2                  // Field fullName:Ljava/lang/String;
      44: invokevirtual #42                 // Method org/jboss/logmanager/LogContext.incrementRef:(Ljava/lang/String;)V
      47: aload_2
      48: areturn

  void decrementRef();
    Code:
       0: aload_0
       1: getfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
       4: aload_0
       5: getfield      #2                  // Field fullName:Ljava/lang/String;
       8: invokevirtual #43                 // Method org/jboss/logmanager/LogContext.decrementRef:(Ljava/lang/String;)V
      11: return

  java.util.Collection<org.jboss.logmanager.LoggerNode> getChildren();
    Code:
       0: aload_0
       1: getfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: areturn

  org.jboss.logmanager.LogContext getContext();
    Code:
       0: aload_0
       1: getfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
       4: areturn

  void setEffectiveLevel(int);
    Code:
       0: aload_0
       1: getfield      #45                 // Field level:Ljava/util/logging/Level;
       4: ifnonnull     58
       7: aload_0
       8: iload_1
       9: putfield      #9                  // Field effectiveLevel:I
      12: aload_0
      13: getfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      21: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          58
      36: aload_2
      37: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #30                 // class org/jboss/logmanager/LoggerNode
      45: astore_3
      46: aload_3
      47: ifnull        55
      50: aload_3
      51: iload_1
      52: invokevirtual #49                 // Method setEffectiveLevel:(I)V
      55: goto          27
      58: return

  void setFilter(java.util.logging.Filter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field filter:Ljava/util/logging/Filter;
       5: return

  java.util.logging.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #50                 // Field filter:Ljava/util/logging/Filter;
       4: areturn

  boolean getUseParentFilters();
    Code:
       0: aload_0
       1: getfield      #5                  // Field useParentFilter:Z
       4: ireturn

  void setUseParentFilters(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field useParentFilter:Z
       5: return

  int getEffectiveLevel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field effectiveLevel:I
       4: ireturn

  java.util.logging.Handler[] getHandlers();
    Code:
       0: aload_0
       1: getfield      #51                 // Field handlers:[Ljava/util/logging/Handler;
       4: areturn

  java.util.logging.Handler[] clearHandlers();
    Code:
       0: aload_0
       1: getfield      #51                 // Field handlers:[Ljava/util/logging/Handler;
       4: astore_1
       5: getstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
       8: aload_0
       9: invokevirtual #13                 // Method org/jboss/logmanager/AtomicArray.clear:(Ljava/lang/Object;)V
      12: aload_1
      13: arraylength
      14: ifle          27
      17: aload_1
      18: invokevirtual #52                 // Method "[Ljava/util/logging/Handler;".clone:()Ljava/lang/Object;
      21: checkcast     #53                 // class "[Ljava/util/logging/Handler;"
      24: goto          28
      27: aload_1
      28: areturn

  void removeHandler(java.util.logging.Handler);
    Code:
       0: getstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
       3: aload_0
       4: aload_1
       5: iconst_1
       6: invokevirtual #54                 // Method org/jboss/logmanager/AtomicArray.remove:(Ljava/lang/Object;Ljava/lang/Object;Z)Z
       9: pop
      10: return

  void addHandler(java.util.logging.Handler);
    Code:
       0: getstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
       3: aload_0
       4: aload_1
       5: invokevirtual #55                 // Method org/jboss/logmanager/AtomicArray.add:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  java.util.logging.Handler[] setHandlers(java.util.logging.Handler[]);
    Code:
       0: getstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
       3: aload_0
       4: aload_1
       5: invokevirtual #56                 // Method org/jboss/logmanager/AtomicArray.getAndSet:(Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
       8: checkcast     #53                 // class "[Ljava/util/logging/Handler;"
      11: areturn

  boolean compareAndSetHandlers(java.util.logging.Handler[], java.util.logging.Handler[]);
    Code:
       0: getstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #57                 // Method org/jboss/logmanager/AtomicArray.compareAndSet:(Ljava/lang/Object;[Ljava/lang/Object;[Ljava/lang/Object;)Z
       9: ireturn

  boolean getUseParentHandlers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field useParentHandlers:Z
       4: ireturn

  void setUseParentHandlers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field useParentHandlers:Z
       5: return

  void publish(org.jboss.logmanager.ExtLogRecord);
    Code:
       0: aload_0
       1: getfield      #51                 // Field handlers:[Ljava/util/logging/Handler;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     45
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: aload_1
      26: invokevirtual #58                 // Method java/util/logging/Handler.publish:(Ljava/util/logging/LogRecord;)V
      29: goto          39
      32: astore        6
      34: aload         6
      36: athrow
      37: astore        6
      39: iinc          4, 1
      42: goto          11
      45: aload_0
      46: getfield      #4                  // Field useParentHandlers:Z
      49: ifeq          66
      52: aload_0
      53: getfield      #10                 // Field parent:Lorg/jboss/logmanager/LoggerNode;
      56: astore_2
      57: aload_2
      58: ifnull        66
      61: aload_2
      62: aload_1
      63: invokevirtual #61                 // Method publish:(Lorg/jboss/logmanager/ExtLogRecord;)V
      66: return
    Exception table:
       from    to  target type
          23    29    32   Class java/lang/VirtualMachineError
          23    29    37   Class java/lang/Throwable

  void setLevel(java.util.logging.Level);
    Code:
       0: aload_0
       1: getfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
       4: astore_2
       5: aload_2
       6: getfield      #62                 // Field org/jboss/logmanager/LogContext.treeLock:Ljava/lang/Object;
       9: astore_3
      10: aload_3
      11: dup
      12: astore        4
      14: monitorenter
      15: aload_0
      16: getfield      #9                  // Field effectiveLevel:I
      19: istore        5
      21: aload_1
      22: ifnull        39
      25: aload_0
      26: aload_1
      27: putfield      #45                 // Field level:Ljava/util/logging/Level;
      30: aload_1
      31: invokevirtual #63                 // Method java/util/logging/Level.intValue:()I
      34: istore        6
      36: goto          77
      39: aload_0
      40: getfield      #10                 // Field parent:Lorg/jboss/logmanager/LoggerNode;
      43: astore        7
      45: aload         7
      47: ifnonnull     65
      50: aload_0
      51: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      54: putfield      #45                 // Field level:Ljava/util/logging/Level;
      57: getstatic     #8                  // Field org/jboss/logmanager/Logger.INFO_INT:I
      60: istore        6
      62: goto          77
      65: aload_0
      66: aconst_null
      67: putfield      #45                 // Field level:Ljava/util/logging/Level;
      70: aload         7
      72: getfield      #9                  // Field effectiveLevel:I
      75: istore        6
      77: aload_0
      78: iload         6
      80: putfield      #9                  // Field effectiveLevel:I
      83: iload         5
      85: iload         6
      87: if_icmpeq     143
      90: aload_0
      91: getfield      #15                 // Field children:Ljava/util/concurrent/ConcurrentMap;
      94: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      99: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     104: astore        7
     106: aload         7
     108: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          143
     116: aload         7
     118: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #30                 // class org/jboss/logmanager/LoggerNode
     126: astore        8
     128: aload         8
     130: ifnull        140
     133: aload         8
     135: iload         6
     137: invokevirtual #49                 // Method setEffectiveLevel:(I)V
     140: goto          106
     143: aload         4
     145: monitorexit
     146: goto          157
     149: astore        9
     151: aload         4
     153: monitorexit
     154: aload         9
     156: athrow
     157: return
    Exception table:
       from    to  target type
          15   146   149   any
         149   154   149   any

  java.util.logging.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #45                 // Field level:Ljava/util/logging/Level;
       4: areturn

  <V> V getAttachment(org.jboss.logmanager.Logger$AttachmentKey<V>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #65                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #66                 // String key is null
      10: invokespecial #67                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #7                  // Field attachments:Ljava/util/Map;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn

  <V> V attach(org.jboss.logmanager.Logger$AttachmentKey<V>, V);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #65                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #66                 // String key is null
      10: invokespecial #67                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #65                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #69                 // String value is null
      24: invokespecial #67                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #7                  // Field attachments:Ljava/util/Map;
      32: astore_3
      33: aload_3
      34: invokeinterface #70,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      39: ifne          62
      42: aload_3
      43: invokeinterface #71,  1           // InterfaceMethod java/util/Map.size:()I
      48: iconst_1
      49: if_icmpne     81
      52: aload_3
      53: aload_1
      54: invokeinterface #72,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      59: ifeq          81
      62: aload_3
      63: aload_1
      64: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: astore        5
      71: aload_1
      72: aload_2
      73: invokestatic  #73                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      76: astore        4
      78: goto          102
      81: new           #74                 // class java/util/HashMap
      84: dup
      85: aload_3
      86: invokespecial #75                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      89: astore        4
      91: aload         4
      93: aload_1
      94: aload_2
      95: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: astore        5
     102: getstatic     #77                 // Field attachmentsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     105: aload_0
     106: aload_3
     107: aload         4
     109: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     112: ifeq          28
     115: aload         5
     117: areturn

  <V> V attachIfAbsent(org.jboss.logmanager.Logger$AttachmentKey<V>, V);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #65                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #66                 // String key is null
      10: invokespecial #67                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #65                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #69                 // String value is null
      24: invokespecial #67                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #7                  // Field attachments:Ljava/util/Map;
      32: astore_3
      33: aload_3
      34: invokeinterface #70,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      39: ifeq          52
      42: aload_1
      43: aload_2
      44: invokestatic  #73                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      47: astore        4
      49: goto          90
      52: aload_3
      53: aload_1
      54: invokeinterface #72,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      59: ifeq          70
      62: aload_3
      63: aload_1
      64: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn
      70: new           #74                 // class java/util/HashMap
      73: dup
      74: aload_3
      75: invokespecial #75                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      78: astore        4
      80: aload         4
      82: aload_1
      83: aload_2
      84: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: getstatic     #77                 // Field attachmentsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      93: aload_0
      94: aload_3
      95: aload         4
      97: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     100: ifeq          28
     103: aconst_null
     104: areturn

  public <V> V detach(org.jboss.logmanager.Logger$AttachmentKey<V>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #65                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #66                 // String key is null
      10: invokespecial #67                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #7                  // Field attachments:Ljava/util/Map;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: astore        4
      28: aload         4
      30: ifnonnull     35
      33: aconst_null
      34: areturn
      35: aload_2
      36: invokeinterface #71,  1           // InterfaceMethod java/util/Map.size:()I
      41: istore        5
      43: iload         5
      45: iconst_1
      46: if_icmpne     56
      49: invokestatic  #6                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      52: astore_3
      53: goto          140
      56: iload         5
      58: iconst_2
      59: if_icmpne     131
      62: aload_2
      63: invokeinterface #79,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      68: invokeinterface #80,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      73: astore        6
      75: aload         6
      77: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #81                 // class java/util/Map$Entry
      85: astore        7
      87: aload         7
      89: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      94: aload_1
      95: if_acmpne     110
      98: aload         6
     100: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #81                 // class java/util/Map$Entry
     108: astore        7
     110: aload         7
     112: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     117: aload         7
     119: invokeinterface #83,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     124: invokestatic  #73                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
     127: astore_3
     128: goto          140
     131: new           #74                 // class java/util/HashMap
     134: dup
     135: aload_2
     136: invokespecial #75                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     139: astore_3
     140: getstatic     #77                 // Field attachmentsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     143: aload_0
     144: aload_2
     145: aload_3
     146: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     149: ifeq          14
     152: aload         4
     154: areturn

  java.lang.String getFullName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field fullName:Ljava/lang/String;
       4: areturn

  org.jboss.logmanager.LoggerNode getParent();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parent:Lorg/jboss/logmanager/LoggerNode;
       4: areturn

  boolean isLoggable(org.jboss.logmanager.ExtLogRecord);
    Code:
       0: aload_0
       1: getfield      #5                  // Field useParentFilter:Z
       4: ifne          32
       7: aload_0
       8: getfield      #50                 // Field filter:Ljava/util/logging/Filter;
      11: astore_2
      12: aload_2
      13: ifnull        26
      16: aload_2
      17: aload_1
      18: invokeinterface #84,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn
      32: aload_0
      33: getfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
      36: astore_2
      37: aload_2
      38: getfield      #62                 // Field org/jboss/logmanager/LogContext.treeLock:Ljava/lang/Object;
      41: astore_3
      42: aload_3
      43: dup
      44: astore        4
      46: monitorenter
      47: aload_0
      48: aload_1
      49: invokestatic  #85                 // Method isLoggable:(Lorg/jboss/logmanager/LoggerNode;Lorg/jboss/logmanager/ExtLogRecord;)Z
      52: aload         4
      54: monitorexit
      55: ireturn
      56: astore        5
      58: aload         4
      60: monitorexit
      61: aload         5
      63: athrow
    Exception table:
       from    to  target type
          47    55    56   any
          56    61    56   any

  private static boolean isLoggable(org.jboss.logmanager.LoggerNode, org.jboss.logmanager.ExtLogRecord);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: getfield      #50                 // Field filter:Ljava/util/logging/Filter;
      10: astore_2
      11: aload_2
      12: ifnull        25
      15: aload_2
      16: aload_1
      17: invokeinterface #84,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      22: ifeq          47
      25: aload_0
      26: getfield      #5                  // Field useParentFilter:Z
      29: ifeq          43
      32: aload_0
      33: invokevirtual #86                 // Method getParent:()Lorg/jboss/logmanager/LoggerNode;
      36: aload_1
      37: invokestatic  #85                 // Method isLoggable:(Lorg/jboss/logmanager/LoggerNode;Lorg/jboss/logmanager/ExtLogRecord;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #87                 // Method setLevel:(Ljava/util/logging/Level;)V
       5: aload_0
       6: invokespecial #88                 // Method java/lang/Object.finalize:()V
       9: goto          19
      12: astore_1
      13: aload_0
      14: invokespecial #88                 // Method java/lang/Object.finalize:()V
      17: aload_1
      18: athrow
      19: return
    Exception table:
       from    to  target type
           0     5    12   any
          12    13    12   any

  static java.lang.String access$000(org.jboss.logmanager.LoggerNode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field fullName:Ljava/lang/String;
       4: areturn

  static org.jboss.logmanager.LogContext access$100(org.jboss.logmanager.LoggerNode);
    Code:
       0: aload_0
       1: getfield      #1                  // Field context:Lorg/jboss/logmanager/LogContext;
       4: areturn

  static {};
    Code:
       0: ldc_w         #30                 // class org/jboss/logmanager/LoggerNode
       3: ldc_w         #53                 // class "[Ljava/util/logging/Handler;"
       6: ldc           #89                 // String handlers
       8: invokestatic  #90                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      11: ldc_w         #91                 // class java/util/logging/Handler
      14: invokestatic  #92                 // Method org/jboss/logmanager/AtomicArray.create:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Class;)Lorg/jboss/logmanager/AtomicArray;
      17: putstatic     #12                 // Field handlersUpdater:Lorg/jboss/logmanager/AtomicArray;
      20: ldc_w         #30                 // class org/jboss/logmanager/LoggerNode
      23: ldc_w         #93                 // class java/util/Map
      26: ldc           #94                 // String attachments
      28: invokestatic  #90                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: putstatic     #77                 // Field attachmentsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      34: return
}
