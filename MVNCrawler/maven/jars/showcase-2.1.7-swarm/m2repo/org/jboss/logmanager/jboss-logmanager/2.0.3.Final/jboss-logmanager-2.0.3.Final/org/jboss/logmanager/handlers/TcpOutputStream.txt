Compiled from "TcpOutputStream.java"
public class org.jboss.logmanager.handlers.TcpOutputStream extends java.io.OutputStream implements org.jboss.logmanager.handlers.FlushableCloseable {
  private static final long retryTimeout;

  private static final long maxRetryTimeout;

  private static final int maxErrors;

  protected final java.lang.Object outputLock;

  private final javax.net.SocketFactory socketFactory;

  private final java.net.InetAddress address;

  private final int port;

  private final java.util.Deque<java.lang.Exception> errors;

  private java.lang.Thread reconnectThread;

  private boolean blockOnReconnect;

  private java.net.Socket socket;

  private boolean connected;

  public org.jboss.logmanager.handlers.TcpOutputStream(java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method javax/net/SocketFactory.getDefault:()Ljavax/net/SocketFactory;
       4: aload_1
       5: iload_2
       6: invokespecial #10                 // Method "<init>":(Ljavax/net/SocketFactory;Ljava/net/InetAddress;I)V
       9: return

  public org.jboss.logmanager.handlers.TcpOutputStream(java.net.InetAddress, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method javax/net/SocketFactory.getDefault:()Ljavax/net/SocketFactory;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokespecial #11                 // Method "<init>":(Ljavax/net/SocketFactory;Ljava/net/InetAddress;IZ)V
      10: return

  protected org.jboss.logmanager.handlers.TcpOutputStream(java.net.Socket);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: new           #13                 // class java/lang/Object
       8: dup
       9: invokespecial #14                 // Method java/lang/Object."<init>":()V
      12: putfield      #15                 // Field outputLock:Ljava/lang/Object;
      15: aload_0
      16: new           #16                 // class java/util/ArrayDeque
      19: dup
      20: bipush        10
      22: invokespecial #17                 // Method java/util/ArrayDeque."<init>":(I)V
      25: putfield      #18                 // Field errors:Ljava/util/Deque;
      28: aload_0
      29: aconst_null
      30: putfield      #8                  // Field socketFactory:Ljavax/net/SocketFactory;
      33: aload_0
      34: aconst_null
      35: putfield      #7                  // Field address:Ljava/net/InetAddress;
      38: aload_0
      39: iconst_m1
      40: putfield      #6                  // Field port:I
      43: aload_0
      44: aload_1
      45: putfield      #5                  // Field socket:Ljava/net/Socket;
      48: aload_0
      49: aconst_null
      50: putfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      53: aload_0
      54: iconst_1
      55: putfield      #4                  // Field connected:Z
      58: return

  protected org.jboss.logmanager.handlers.TcpOutputStream(javax.net.SocketFactory, java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #11                 // Method "<init>":(Ljavax/net/SocketFactory;Ljava/net/InetAddress;IZ)V
       8: return

  protected org.jboss.logmanager.handlers.TcpOutputStream(javax.net.SocketFactory, java.net.InetAddress, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: new           #13                 // class java/lang/Object
       8: dup
       9: invokespecial #14                 // Method java/lang/Object."<init>":()V
      12: putfield      #15                 // Field outputLock:Ljava/lang/Object;
      15: aload_0
      16: new           #16                 // class java/util/ArrayDeque
      19: dup
      20: bipush        10
      22: invokespecial #17                 // Method java/util/ArrayDeque."<init>":(I)V
      25: putfield      #18                 // Field errors:Ljava/util/Deque;
      28: aload_0
      29: aload_1
      30: putfield      #8                  // Field socketFactory:Ljavax/net/SocketFactory;
      33: aload_0
      34: aload_2
      35: putfield      #7                  // Field address:Ljava/net/InetAddress;
      38: aload_0
      39: iload_3
      40: putfield      #6                  // Field port:I
      43: aload_0
      44: iload         4
      46: putfield      #19                 // Field blockOnReconnect:Z
      49: aload_0
      50: aload_1
      51: aload_2
      52: iload_3
      53: invokevirtual #20                 // Method javax/net/SocketFactory.createSocket:(Ljava/net/InetAddress;I)Ljava/net/Socket;
      56: putfield      #5                  // Field socket:Ljava/net/Socket;
      59: aload_0
      60: iconst_1
      61: putfield      #4                  // Field connected:Z
      64: goto          74
      67: astore        5
      69: aload_0
      70: iconst_0
      71: putfield      #4                  // Field connected:Z
      74: return
    Exception table:
       from    to  target type
          49    64    67   Class java/io/IOException

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: iconst_0
      10: iconst_1
      11: invokevirtual #22                 // Method write:([BII)V
      14: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #22                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field outputLock:Ljava/lang/Object;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: invokespecial #23                 // Method checkReconnect:()V
      12: aload_0
      13: getfield      #4                  // Field connected:Z
      16: ifeq          32
      19: aload_0
      20: getfield      #5                  // Field socket:Ljava/net/Socket;
      23: invokevirtual #24                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      26: aload_1
      27: iload_2
      28: iload_3
      29: invokevirtual #25                 // Method java/io/OutputStream.write:([BII)V
      32: goto          107
      35: astore        5
      37: aload_0
      38: invokespecial #27                 // Method isReconnectAllowed:()Z
      41: ifeq          104
      44: aload_0
      45: getfield      #5                  // Field socket:Ljava/net/Socket;
      48: invokestatic  #1                  // Method safeClose:(Ljava/io/Closeable;)V
      51: aload_0
      52: iconst_0
      53: putfield      #4                  // Field connected:Z
      56: aload_0
      57: aload         5
      59: invokespecial #2                  // Method addError:(Ljava/lang/Exception;)V
      62: aload_0
      63: aload_0
      64: invokespecial #28                 // Method createThread:()Ljava/lang/Thread;
      67: putfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      70: aload_0
      71: getfield      #19                 // Field blockOnReconnect:Z
      74: ifeq          94
      77: aload_0
      78: getfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      81: invokevirtual #29                 // Method java/lang/Thread.run:()V
      84: aload_0
      85: aload_1
      86: iload_2
      87: iload_3
      88: invokevirtual #22                 // Method write:([BII)V
      91: goto          107
      94: aload_0
      95: getfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      98: invokevirtual #30                 // Method java/lang/Thread.start:()V
     101: goto          107
     104: aload         5
     106: athrow
     107: aload         4
     109: monitorexit
     110: goto          121
     113: astore        6
     115: aload         4
     117: monitorexit
     118: aload         6
     120: athrow
     121: return
    Exception table:
       from    to  target type
           8    32    35   Class java/net/SocketException
           8   110   113   any
         113   118   113   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field outputLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field socket:Ljava/net/Socket;
      11: invokevirtual #24                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      14: invokevirtual #31                 // Method java/io/OutputStream.flush:()V
      17: goto          50
      20: astore_2
      21: aload_0
      22: invokespecial #27                 // Method isReconnectAllowed:()Z
      25: ifeq          48
      28: aload_0
      29: getfield      #5                  // Field socket:Ljava/net/Socket;
      32: invokestatic  #1                  // Method safeClose:(Ljava/io/Closeable;)V
      35: aload_0
      36: iconst_0
      37: putfield      #4                  // Field connected:Z
      40: aload_0
      41: aload_2
      42: invokespecial #2                  // Method addError:(Ljava/lang/Exception;)V
      45: goto          50
      48: aload_2
      49: athrow
      50: aload_1
      51: monitorexit
      52: goto          60
      55: astore_3
      56: aload_1
      57: monitorexit
      58: aload_3
      59: athrow
      60: return
    Exception table:
       from    to  target type
           7    17    20   Class java/net/SocketException
           7    52    55   any
          55    58    55   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field outputLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      11: ifnull        21
      14: aload_0
      15: getfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      18: invokevirtual #32                 // Method java/lang/Thread.interrupt:()V
      21: aload_0
      22: getfield      #5                  // Field socket:Ljava/net/Socket;
      25: invokevirtual #33                 // Method java/net/Socket.close:()V
      28: aload_1
      29: monitorexit
      30: goto          38
      33: astore_2
      34: aload_1
      35: monitorexit
      36: aload_2
      37: athrow
      38: return
    Exception table:
       from    to  target type
           7    30    33   any
          33    36    33   any

  public boolean isBlockOnReconnect();
    Code:
       0: aload_0
       1: getfield      #15                 // Field outputLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #19                 // Field blockOnReconnect:Z
      11: aload_1
      12: monitorexit
      13: ireturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public void setBlockOnReconnect(boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field outputLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: iload_1
       9: putfield      #19                 // Field blockOnReconnect:Z
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: return
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #15                 // Field outputLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field connected:Z
      11: aload_1
      12: monitorexit
      13: ireturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public java.util.Collection<java.lang.Exception> getErrors();
    Code:
       0: aload_0
       1: getfield      #18                 // Field errors:Ljava/util/Deque;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #18                 // Field errors:Ljava/util/Deque;
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      16: ifne          44
      19: new           #35                 // class java/util/ArrayList
      22: dup
      23: aload_0
      24: getfield      #18                 // Field errors:Ljava/util/Deque;
      27: invokespecial #36                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      30: astore_2
      31: aload_0
      32: getfield      #18                 // Field errors:Ljava/util/Deque;
      35: invokeinterface #37,  1           // InterfaceMethod java/util/Deque.clear:()V
      40: aload_2
      41: aload_1
      42: monitorexit
      43: areturn
      44: aload_1
      45: monitorexit
      46: goto          54
      49: astore_3
      50: aload_1
      51: monitorexit
      52: aload_3
      53: athrow
      54: invokestatic  #38                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      57: areturn
    Exception table:
       from    to  target type
           7    43    49   any
          44    46    49   any
          49    52    49   any

  private void addError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #18                 // Field errors:Ljava/util/Deque;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #18                 // Field errors:Ljava/util/Deque;
      11: invokeinterface #39,  1           // InterfaceMethod java/util/Deque.size:()I
      16: bipush        10
      18: if_icmpge     31
      21: aload_0
      22: getfield      #18                 // Field errors:Ljava/util/Deque;
      25: aload_1
      26: invokeinterface #40,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      31: aload_2
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_2
      38: monitorexit
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    33    36   any
          36    39    36   any

  private boolean isReconnectAllowed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field socketFactory:Ljavax/net/SocketFactory;
       4: ifnull        18
       7: aload_0
       8: getfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void checkReconnect();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connected:Z
       4: ifne          46
       7: aload_0
       8: invokespecial #27                 // Method isReconnectAllowed:()Z
      11: ifeq          46
      14: aload_0
      15: aload_0
      16: invokespecial #28                 // Method createThread:()Ljava/lang/Thread;
      19: putfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      22: aload_0
      23: getfield      #19                 // Field blockOnReconnect:Z
      26: ifeq          39
      29: aload_0
      30: getfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      33: invokevirtual #29                 // Method java/lang/Thread.run:()V
      36: goto          46
      39: aload_0
      40: getfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
      43: invokevirtual #30                 // Method java/lang/Thread.start:()V
      46: return

  private java.lang.Thread createThread();
    Code:
       0: new           #41                 // class java/lang/Thread
       3: dup
       4: new           #42                 // class org/jboss/logmanager/handlers/TcpOutputStream$RetryConnector
       7: dup
       8: aload_0
       9: aconst_null
      10: invokespecial #43                 // Method org/jboss/logmanager/handlers/TcpOutputStream$RetryConnector."<init>":(Lorg/jboss/logmanager/handlers/TcpOutputStream;Lorg/jboss/logmanager/handlers/TcpOutputStream$1;)V
      13: invokespecial #44                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      16: astore_1
      17: aload_1
      18: iconst_1
      19: invokevirtual #45                 // Method java/lang/Thread.setDaemon:(Z)V
      22: aload_1
      23: ldc           #46                 // String LogManager Socket Reconnect Thread
      25: invokevirtual #47                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      28: aload_1
      29: areturn

  private static void safeClose(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #48,  1           // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_1
      14: return
    Exception table:
       from    to  target type
           4    10    13   Class java/lang/Exception

  static javax.net.SocketFactory access$100(org.jboss.logmanager.handlers.TcpOutputStream);
    Code:
       0: aload_0
       1: getfield      #8                  // Field socketFactory:Ljavax/net/SocketFactory;
       4: areturn

  static java.net.InetAddress access$200(org.jboss.logmanager.handlers.TcpOutputStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field address:Ljava/net/InetAddress;
       4: areturn

  static int access$300(org.jboss.logmanager.handlers.TcpOutputStream);
    Code:
       0: aload_0
       1: getfield      #6                  // Field port:I
       4: ireturn

  static java.net.Socket access$402(org.jboss.logmanager.handlers.TcpOutputStream, java.net.Socket);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field socket:Ljava/net/Socket;
       6: areturn

  static boolean access$502(org.jboss.logmanager.handlers.TcpOutputStream, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field connected:Z
       6: ireturn

  static java.lang.Thread access$602(org.jboss.logmanager.handlers.TcpOutputStream, java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field reconnectThread:Ljava/lang/Thread;
       6: areturn

  static void access$700(org.jboss.logmanager.handlers.TcpOutputStream, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method addError:(Ljava/lang/Exception;)V
       5: return

  static void access$800(java.io.Closeable);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method safeClose:(Ljava/io/Closeable;)V
       4: return
}
