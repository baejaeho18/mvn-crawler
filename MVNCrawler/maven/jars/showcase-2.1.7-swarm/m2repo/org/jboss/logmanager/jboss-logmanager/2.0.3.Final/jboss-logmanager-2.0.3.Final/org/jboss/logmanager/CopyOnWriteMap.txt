Compiled from "CopyOnWriteMap.java"
final class org.jboss.logmanager.CopyOnWriteMap<K, V> extends java.util.AbstractMap<K, V> implements java.util.concurrent.ConcurrentMap<K, V>, java.lang.Cloneable {
  private static final org.jboss.logmanager.FastCopyHashMap EMPTY;

  private volatile org.jboss.logmanager.FastCopyHashMap<K, V> map;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.jboss.logmanager.CopyOnWriteMap, org.jboss.logmanager.FastCopyHashMap> mapUpdater;

  org.jboss.logmanager.CopyOnWriteMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field EMPTY:Lorg/jboss/logmanager/FastCopyHashMap;
       8: putfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
      11: return

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: aload_1
       5: invokevirtual #4                  // Method org/jboss/logmanager/FastCopyHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: aload_1
       5: invokevirtual #5                  // Method org/jboss/logmanager/FastCopyHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: invokevirtual #6                  // Method org/jboss/logmanager/FastCopyHashMap.size:()I
       7: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: aload_1
       5: invokevirtual #7                  // Method org/jboss/logmanager/FastCopyHashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field EMPTY:Lorg/jboss/logmanager/FastCopyHashMap;
       4: putfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       7: return

  public V put(K, V);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: astore_3
       5: aload_3
       6: invokevirtual #8                  // Method org/jboss/logmanager/FastCopyHashMap.clone:()Lorg/jboss/logmanager/FastCopyHashMap;
       9: astore        4
      11: aload         4
      13: aload_1
      14: aload_2
      15: invokevirtual #9                  // Method org/jboss/logmanager/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: astore        5
      20: getstatic     #10                 // Field mapUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: aload_0
      24: aload_3
      25: aload         4
      27: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ifeq          0
      33: aload         5
      35: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #5                  // Method org/jboss/logmanager/FastCopyHashMap.containsKey:(Ljava/lang/Object;)Z
      10: ifne          15
      13: aconst_null
      14: areturn
      15: aload_2
      16: invokevirtual #8                  // Method org/jboss/logmanager/FastCopyHashMap.clone:()Lorg/jboss/logmanager/FastCopyHashMap;
      19: astore_3
      20: aload_3
      21: aload_1
      22: invokevirtual #12                 // Method org/jboss/logmanager/FastCopyHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore        4
      27: getstatic     #10                 // Field mapUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      30: aload_0
      31: aload_2
      32: aload_3
      33: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          0
      39: aload         4
      41: areturn

  public org.jboss.logmanager.CopyOnWriteMap<K, V> clone();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/util/AbstractMap.clone:()Ljava/lang/Object;
       4: checkcast     #14                 // class org/jboss/logmanager/CopyOnWriteMap
       7: areturn
       8: astore_1
       9: new           #16                 // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokevirtual #5                  // Method org/jboss/logmanager/FastCopyHashMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          19
      13: aload_3
      14: aload_1
      15: invokevirtual #4                  // Method org/jboss/logmanager/FastCopyHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
      19: aload_3
      20: invokevirtual #8                  // Method org/jboss/logmanager/FastCopyHashMap.clone:()Lorg/jboss/logmanager/FastCopyHashMap;
      23: astore        4
      25: aload         4
      27: aload_1
      28: aload_2
      29: invokevirtual #9                  // Method org/jboss/logmanager/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: getstatic     #10                 // Field mapUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      36: aload_0
      37: aload_3
      38: aload         4
      40: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          0
      46: aconst_null
      47: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: astore_3
       5: aload_2
       6: aload_3
       7: aload_1
       8: invokevirtual #4                  // Method org/jboss/logmanager/FastCopyHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: if_acmpne     58
      14: aload_2
      15: ifnonnull     26
      18: aload_3
      19: aload_1
      20: invokevirtual #5                  // Method org/jboss/logmanager/FastCopyHashMap.containsKey:(Ljava/lang/Object;)Z
      23: ifeq          58
      26: aload_3
      27: invokevirtual #6                  // Method org/jboss/logmanager/FastCopyHashMap.size:()I
      30: iconst_1
      31: if_icmpne     42
      34: getstatic     #2                  // Field EMPTY:Lorg/jboss/logmanager/FastCopyHashMap;
      37: astore        4
      39: goto          60
      42: aload_3
      43: invokevirtual #8                  // Method org/jboss/logmanager/FastCopyHashMap.clone:()Lorg/jboss/logmanager/FastCopyHashMap;
      46: astore        4
      48: aload         4
      50: aload_1
      51: invokevirtual #12                 // Method org/jboss/logmanager/FastCopyHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: goto          60
      58: iconst_0
      59: ireturn
      60: getstatic     #10                 // Field mapUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      63: aload_0
      64: aload_3
      65: aload         4
      67: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      70: ifeq          0
      73: iconst_1
      74: ireturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: astore        4
       6: aload_2
       7: aload         4
       9: aload_1
      10: invokevirtual #4                  // Method org/jboss/logmanager/FastCopyHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: if_acmpne     47
      16: aload_2
      17: ifnonnull     29
      20: aload         4
      22: aload_1
      23: invokevirtual #5                  // Method org/jboss/logmanager/FastCopyHashMap.containsKey:(Ljava/lang/Object;)Z
      26: ifeq          47
      29: aload         4
      31: invokevirtual #8                  // Method org/jboss/logmanager/FastCopyHashMap.clone:()Lorg/jboss/logmanager/FastCopyHashMap;
      34: astore        5
      36: aload         5
      38: aload_1
      39: aload_3
      40: invokevirtual #9                  // Method org/jboss/logmanager/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: goto          49
      47: iconst_0
      48: ireturn
      49: getstatic     #10                 // Field mapUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      52: aload_0
      53: aload         4
      55: aload         5
      57: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          0
      63: iconst_1
      64: ireturn

  public V replace(K, V);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: astore_3
       5: aload_2
       6: aload_3
       7: aload_1
       8: invokevirtual #4                  // Method org/jboss/logmanager/FastCopyHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: if_acmpne     44
      14: aload_2
      15: ifnonnull     26
      18: aload_3
      19: aload_1
      20: invokevirtual #5                  // Method org/jboss/logmanager/FastCopyHashMap.containsKey:(Ljava/lang/Object;)Z
      23: ifeq          44
      26: aload_3
      27: invokevirtual #8                  // Method org/jboss/logmanager/FastCopyHashMap.clone:()Lorg/jboss/logmanager/FastCopyHashMap;
      30: astore        4
      32: aload         4
      34: aload_1
      35: aload_2
      36: invokevirtual #9                  // Method org/jboss/logmanager/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: astore        5
      41: goto          46
      44: aconst_null
      45: areturn
      46: getstatic     #10                 // Field mapUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      49: aload_0
      50: aload_3
      51: aload         4
      53: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      56: ifeq          0
      59: aload         5
      61: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: invokevirtual #18                 // Method org/jboss/logmanager/FastCopyHashMap.keySet:()Ljava/util/Set;
       7: invokestatic  #19                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      10: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: invokevirtual #20                 // Method org/jboss/logmanager/FastCopyHashMap.values:()Ljava/util/Collection;
       7: invokestatic  #21                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      10: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/jboss/logmanager/FastCopyHashMap;
       4: invokevirtual #22                 // Method org/jboss/logmanager/FastCopyHashMap.entrySet:()Ljava/util/Set;
       7: invokestatic  #19                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      10: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method clone:()Lorg/jboss/logmanager/CopyOnWriteMap;
       4: areturn

  static {};
    Code:
       0: new           #24                 // class org/jboss/logmanager/FastCopyHashMap
       3: dup
       4: bipush        32
       6: ldc           #25                 // float 0.25f
       8: invokespecial #26                 // Method org/jboss/logmanager/FastCopyHashMap."<init>":(IF)V
      11: putstatic     #2                  // Field EMPTY:Lorg/jboss/logmanager/FastCopyHashMap;
      14: ldc_w         #14                 // class org/jboss/logmanager/CopyOnWriteMap
      17: ldc_w         #24                 // class org/jboss/logmanager/FastCopyHashMap
      20: ldc           #27                 // String map
      22: invokestatic  #28                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      25: putstatic     #10                 // Field mapUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      28: return
}
