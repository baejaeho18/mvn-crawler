Compiled from "Category.java"
public class org.apache.log4j.Category implements org.apache.log4j.spi.AppenderAttachable {
  private static final java.lang.Object LEVEL_LOCK;

  private static final java.lang.String FQCN;

  protected volatile org.apache.log4j.Level level;

  protected volatile org.apache.log4j.Category parent;

  final org.jboss.logmanager.Logger jblmLogger;

  protected org.apache.log4j.Category(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method org/apache/log4j/JBossLogManagerFacade.getJBossLogger:(Ljava/lang/String;)Lorg/jboss/logmanager/Logger;
       9: putfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
      12: return

  public void addAppender(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #4                  // Method org/apache/log4j/Appenders.attachAppender:(Lorg/jboss/logmanager/Logger;Lorg/apache/log4j/Appender;)V
       8: aload_0
       9: invokevirtual #5                  // Method getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
      12: aload_0
      13: aload_1
      14: invokeinterface #6,  3            // InterfaceMethod org/apache/log4j/spi/LoggerRepository.fireAddAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      19: return

  public void assertLog(boolean, java.lang.String);
    Code:
       0: iload_1
       1: ifne          9
       4: aload_0
       5: aload_2
       6: invokevirtual #7                  // Method error:(Ljava/lang/Object;)V
       9: return

  public void callAppenders(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokevirtual #8                  // Method org/apache/log4j/spi/LoggingEvent.getLogRecord:()Lorg/jboss/logmanager/ExtLogRecord;
       8: invokevirtual #9                  // Method org/jboss/logmanager/Logger.logRaw:(Lorg/jboss/logmanager/ExtLogRecord;)V
      11: return

  org.jboss.logmanager.Logger getJBossLogger();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: areturn

  void closeNestedAppenders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: invokestatic  #10                 // Method org/apache/log4j/Appenders.closeAppenders:(Lorg/jboss/logmanager/Logger;)V
       7: return

  public void debug(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #11                 // Field org/jboss/logmanager/Level.DEBUG:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #14                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      20: aload_1
      21: aconst_null
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #11                 // Field org/jboss/logmanager/Level.DEBUG:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #14                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      20: aload_1
      21: aload_2
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public void error(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #16                 // Field org/jboss/logmanager/Level.ERROR:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #17                 // Field org/apache/log4j/Level.ERROR:Lorg/apache/log4j/Level;
      20: aload_1
      21: aconst_null
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #16                 // Field org/jboss/logmanager/Level.ERROR:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #17                 // Field org/apache/log4j/Level.ERROR:Lorg/apache/log4j/Level;
      20: aload_1
      21: aload_2
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public static org.apache.log4j.Logger exists(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method org/apache/log4j/LogManager.exists:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       4: areturn

  public void fatal(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #19                 // Field org/jboss/logmanager/Level.FATAL:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #20                 // Field org/apache/log4j/Level.FATAL:Lorg/apache/log4j/Level;
      20: aload_1
      21: aconst_null
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #19                 // Field org/jboss/logmanager/Level.FATAL:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #20                 // Field org/apache/log4j/Level.FATAL:Lorg/apache/log4j/Level;
      20: aload_1
      21: aload_2
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  protected void forcedLog(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: new           #21                 // class org/apache/log4j/spi/LoggingEvent
       4: dup
       5: aload_1
       6: aload_0
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokespecial #22                 // Method org/apache/log4j/spi/LoggingEvent."<init>":(Ljava/lang/String;Lorg/apache/log4j/Category;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      14: invokevirtual #23                 // Method callAppenders:(Lorg/apache/log4j/spi/LoggingEvent;)V
      17: return

  public boolean getAdditivity();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: invokevirtual #24                 // Method org/jboss/logmanager/Logger.getUseParentHandlers:()Z
       7: ireturn

  public java.util.Enumeration getAllAppenders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: invokestatic  #25                 // Method org/apache/log4j/Appenders.getAppenders:(Lorg/jboss/logmanager/Logger;)Ljava/util/List;
       7: astore_1
       8: aload_1
       9: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifeq          21
      17: invokestatic  #27                 // Method org/apache/log4j/helpers/NullEnumeration.getInstance:()Lorg/apache/log4j/helpers/NullEnumeration;
      20: areturn
      21: aload_1
      22: invokestatic  #28                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      25: areturn

  public org.apache.log4j.Appender getAppender(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #29                 // Method org/apache/log4j/Appenders.getAppender:(Lorg/jboss/logmanager/Logger;Ljava/lang/String;)Lorg/apache/log4j/Appender;
       8: areturn

  public org.apache.log4j.Level getEffectiveLevel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: invokevirtual #30                 // Method org/jboss/logmanager/Logger.getEffectiveLevel:()I
       7: invokestatic  #31                 // Method org/apache/log4j/JBossLevelMapping.getPriorityFor:(I)Lorg/apache/log4j/Level;
      10: areturn

  public org.apache.log4j.Priority getChainedPriority();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
       4: areturn

  public static java.util.Enumeration getCurrentCategories();
    Code:
       0: invokestatic  #33                 // Method org/apache/log4j/LogManager.getCurrentLoggers:()Ljava/util/Enumeration;
       3: areturn

  public static org.apache.log4j.spi.LoggerRepository getDefaultHierarchy();
    Code:
       0: invokestatic  #34                 // Method org/apache/log4j/LogManager.getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
       3: areturn

  public org.apache.log4j.spi.LoggerRepository getHierarchy();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
       4: areturn

  public org.apache.log4j.spi.LoggerRepository getLoggerRepository();
    Code:
       0: invokestatic  #34                 // Method org/apache/log4j/LogManager.getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
       3: areturn

  public static org.apache.log4j.Category getInstance(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       4: areturn

  public static org.apache.log4j.Category getInstance(java.lang.Class);
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/Class;)Lorg/apache/log4j/Logger;
       4: areturn

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: invokevirtual #37                 // Method org/jboss/logmanager/Logger.getName:()Ljava/lang/String;
       7: areturn

  public final org.apache.log4j.Category getParent();
    Code:
       0: aload_0
       1: getfield      #38                 // Field parent:Lorg/apache/log4j/Category;
       4: areturn

  public final org.apache.log4j.Level getLevel();
    Code:
       0: getstatic     #39                 // Field LEVEL_LOCK:Ljava/lang/Object;
       3: dup
       4: astore_1
       5: monitorenter
       6: aload_0
       7: getfield      #40                 // Field level:Lorg/apache/log4j/Level;
      10: ifnull        73
      13: aload_0
      14: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
      17: invokevirtual #41                 // Method org/jboss/logmanager/Logger.getLevel:()Ljava/util/logging/Level;
      20: invokestatic  #42                 // Method org/apache/log4j/JBossLevelMapping.getPriorityFor:(Ljava/util/logging/Level;)Lorg/apache/log4j/Level;
      23: astore_2
      24: aload_2
      25: invokevirtual #43                 // Method org/apache/log4j/Level.toInt:()I
      28: aload_0
      29: getfield      #40                 // Field level:Lorg/apache/log4j/Level;
      32: invokevirtual #43                 // Method org/apache/log4j/Level.toInt:()I
      35: if_icmpeq     73
      38: invokestatic  #44                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      41: ifnonnull     61
      44: aload_0
      45: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
      48: aload_0
      49: getfield      #40                 // Field level:Lorg/apache/log4j/Level;
      52: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
      55: invokevirtual #46                 // Method org/jboss/logmanager/Logger.setLevel:(Ljava/util/logging/Level;)V
      58: goto          73
      61: new           #47                 // class org/apache/log4j/Category$1
      64: dup
      65: aload_0
      66: invokespecial #48                 // Method org/apache/log4j/Category$1."<init>":(Lorg/apache/log4j/Category;)V
      69: invokestatic  #49                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      72: pop
      73: aload_1
      74: monitorexit
      75: goto          83
      78: astore_3
      79: aload_1
      80: monitorexit
      81: aload_3
      82: athrow
      83: aload_0
      84: getfield      #40                 // Field level:Lorg/apache/log4j/Level;
      87: areturn
    Exception table:
       from    to  target type
           6    75    78   any
          78    81    78   any

  public final org.apache.log4j.Level getPriority();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getLevel:()Lorg/apache/log4j/Level;
       4: areturn

  public static org.apache.log4j.Category getRoot();
    Code:
       0: invokestatic  #51                 // Method org/apache/log4j/LogManager.getRootLogger:()Lorg/apache/log4j/Logger;
       3: areturn

  public java.util.ResourceBundle getResourceBundle();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: invokevirtual #52                 // Method org/jboss/logmanager/Logger.getResourceBundle:()Ljava/util/ResourceBundle;
       7: areturn

  protected java.lang.String getResourceBundleString(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getResourceBundle:()Ljava/util/ResourceBundle;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_2
      12: aload_1
      13: invokevirtual #54                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      16: areturn
      17: astore_3
      18: aload_0
      19: new           #56                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #58                 // String No resource is associated with key \"
      28: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #60                 // String \".
      37: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #7                  // Method error:(Ljava/lang/Object;)V
      46: aconst_null
      47: areturn
    Exception table:
       from    to  target type
          11    16    17   Class java/util/MissingResourceException

  public void info(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #62                 // Field org/jboss/logmanager/Level.INFO:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #63                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      20: aload_1
      21: aconst_null
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #62                 // Field org/jboss/logmanager/Level.INFO:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #63                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      20: aload_1
      21: aload_2
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public boolean isAttached(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #64                 // Method org/apache/log4j/Appenders.isAppenderAttached:(Lorg/jboss/logmanager/Logger;Lorg/apache/log4j/Appender;)Z
       8: ireturn

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #11                 // Field org/jboss/logmanager/Level.DEBUG:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public boolean isEnabledFor(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
       8: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ireturn

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #62                 // Field org/jboss/logmanager/Level.INFO:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
       8: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifeq          40
      14: aload_0
      15: aload_2
      16: invokevirtual #65                 // Method getResourceBundleString:(Ljava/lang/String;)Ljava/lang/String;
      19: astore        4
      21: aload         4
      23: ifnonnull     29
      26: aload_2
      27: astore        4
      29: aload_0
      30: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      33: aload_1
      34: aload         4
      36: aload_3
      37: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: return

  public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
       8: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifeq          52
      14: aload_0
      15: aload_2
      16: invokevirtual #65                 // Method getResourceBundleString:(Ljava/lang/String;)Ljava/lang/String;
      19: astore        5
      21: aload         5
      23: ifnonnull     32
      26: aload_2
      27: astore        6
      29: goto          40
      32: aload         5
      34: aload_3
      35: invokestatic  #66                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: astore        6
      40: aload_0
      41: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      44: aload_1
      45: aload         6
      47: aload         4
      49: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      52: return

  public void log(org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
       8: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifeq          24
      14: aload_0
      15: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      24: return

  public void log(org.apache.log4j.Priority, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_1
       5: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
       8: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifeq          24
      14: aload_0
      15: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      18: aload_1
      19: aload_2
      20: aconst_null
      21: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      24: return

  public void log(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: aload_2
       5: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
       8: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifeq          23
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         4
      20: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      23: return

  private void fireRemoveAppenderEvent(org.apache.log4j.spi.LoggerRepository, org.apache.log4j.Appender);
    Code:
       0: aload_2
       1: ifnull        41
       4: aload_1
       5: instanceof    #67                 // class org/apache/log4j/Hierarchy
       8: ifeq          23
      11: aload_1
      12: checkcast     #67                 // class org/apache/log4j/Hierarchy
      15: aload_0
      16: aload_2
      17: invokevirtual #68                 // Method org/apache/log4j/Hierarchy.fireRemoveAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      20: goto          41
      23: aload_1
      24: instanceof    #69                 // class org/apache/log4j/spi/HierarchyEventListener
      27: ifeq          41
      30: aload_1
      31: checkcast     #69                 // class org/apache/log4j/spi/HierarchyEventListener
      34: aload_0
      35: aload_2
      36: invokeinterface #70,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.removeAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      41: return

  public void removeAllAppenders();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: invokestatic  #71                 // Method org/apache/log4j/Appenders.removeAllAppenders:(Lorg/jboss/logmanager/Logger;)Ljava/util/List;
       7: astore_1
       8: aload_0
       9: invokevirtual #5                  // Method getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
      12: astore_2
      13: aload_1
      14: invokeinterface #72,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          50
      29: aload_3
      30: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #75                 // class org/apache/log4j/Appender
      38: astore        4
      40: aload_0
      41: aload_2
      42: aload         4
      44: invokespecial #76                 // Method fireRemoveAppenderEvent:(Lorg/apache/log4j/spi/LoggerRepository;Lorg/apache/log4j/Appender;)V
      47: goto          20
      50: return

  public void removeAppender(org.apache.log4j.Appender);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_0
       5: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       8: aload_1
       9: invokestatic  #77                 // Method org/apache/log4j/Appenders.removeAppender:(Lorg/jboss/logmanager/Logger;Lorg/apache/log4j/Appender;)Z
      12: ifeq          24
      15: aload_0
      16: aload_0
      17: invokevirtual #5                  // Method getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
      20: aload_1
      21: invokespecial #76                 // Method fireRemoveAppenderEvent:(Lorg/apache/log4j/spi/LoggerRepository;Lorg/apache/log4j/Appender;)V
      24: return

  public void removeAppender(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_0
       5: aload_0
       6: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       9: aload_1
      10: invokestatic  #29                 // Method org/apache/log4j/Appenders.getAppender:(Lorg/jboss/logmanager/Logger;Ljava/lang/String;)Lorg/apache/log4j/Appender;
      13: invokevirtual #78                 // Method removeAppender:(Lorg/apache/log4j/Appender;)V
      16: return

  public void setAdditivity(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: iload_1
       5: invokevirtual #79                 // Method org/jboss/logmanager/Logger.setUseParentHandlers:(Z)V
       8: return

  final void setHierarchy(org.apache.log4j.spi.LoggerRepository);
    Code:
       0: return

  public void setLevel(org.apache.log4j.Level);
    Code:
       0: getstatic     #39                 // Field LEVEL_LOCK:Ljava/lang/Object;
       3: dup
       4: astore_2
       5: monitorenter
       6: aload_0
       7: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
      10: aload_1
      11: invokestatic  #45                 // Method org/apache/log4j/JBossLevelMapping.getLevelFor:(Lorg/apache/log4j/Priority;)Ljava/util/logging/Level;
      14: invokevirtual #46                 // Method org/jboss/logmanager/Logger.setLevel:(Ljava/util/logging/Level;)V
      17: aload_0
      18: aload_1
      19: putfield      #40                 // Field level:Lorg/apache/log4j/Level;
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           6    24    27   any
          27    30    27   any

  public void setPriority(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class org/apache/log4j/Level
       5: invokevirtual #81                 // Method setLevel:(Lorg/apache/log4j/Level;)V
       8: return

  public void setResourceBundle(java.util.ResourceBundle);
    Code:
       0: return

  public static void shutdown();
    Code:
       0: invokestatic  #82                 // Method org/apache/log4j/LogManager.shutdown:()V
       3: return

  public void warn(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #83                 // Field org/jboss/logmanager/Level.WARN:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #84                 // Field org/apache/log4j/Level.WARN:Lorg/apache/log4j/Level;
      20: aload_1
      21: aconst_null
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field jblmLogger:Lorg/jboss/logmanager/Logger;
       4: getstatic     #83                 // Field org/jboss/logmanager/Level.WARN:Lorg/jboss/logmanager/Level;
       7: invokevirtual #12                 // Method org/jboss/logmanager/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #13                 // Field FQCN:Ljava/lang/String;
      17: getstatic     #84                 // Field org/apache/log4j/Level.WARN:Lorg/apache/log4j/Level;
      20: aload_1
      21: aload_2
      22: invokevirtual #15                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: return

  static {};
    Code:
       0: new           #85                 // class java/lang/Object
       3: dup
       4: invokespecial #1                  // Method java/lang/Object."<init>":()V
       7: putstatic     #39                 // Field LEVEL_LOCK:Ljava/lang/Object;
      10: ldc_w         #86                 // class org/apache/log4j/Category
      13: invokevirtual #87                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: putstatic     #13                 // Field FQCN:Ljava/lang/String;
      19: return
}
