Compiled from "AbstractPropertyConfiguration.java"
class org.jboss.logmanager.config.AbstractPropertyConfiguration$1 implements org.jboss.logmanager.config.ConfigAction<org.jboss.logmanager.config.ObjectProducer> {
  final java.lang.reflect.Method val$setter;

  final java.lang.String val$propertyName;

  final org.jboss.logmanager.config.ValueExpression val$expression;

  final boolean val$replacement;

  final org.jboss.logmanager.config.ValueExpression val$oldValue;

  final org.jboss.logmanager.config.AbstractPropertyConfiguration this$0;

  org.jboss.logmanager.config.AbstractPropertyConfiguration$1(org.jboss.logmanager.config.AbstractPropertyConfiguration, java.lang.reflect.Method, java.lang.String, org.jboss.logmanager.config.ValueExpression, boolean, org.jboss.logmanager.config.ValueExpression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$setter:Ljava/lang/reflect/Method;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$propertyName:Ljava/lang/String;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$expression:Lorg/jboss/logmanager/config/ValueExpression;
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field val$replacement:Z
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$oldValue:Lorg/jboss/logmanager/config/ValueExpression;
      33: aload_0
      34: invokespecial #7                  // Method java/lang/Object."<init>":()V
      37: return

  public org.jboss.logmanager.config.ObjectProducer validate() throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$setter:Ljava/lang/reflect/Method;
       4: ifnonnull     11
       7: getstatic     #8                  // Field org/jboss/logmanager/config/ObjectProducer.NULL_PRODUCER:Lorg/jboss/logmanager/config/SimpleObjectProducer;
      10: areturn
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      15: invokestatic  #9                  // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.access$100:(Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;)Ljava/lang/Class;
      18: aload_0
      19: getfield      #3                  // Field val$propertyName:Ljava/lang/String;
      22: invokestatic  #10                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.getPropertyType:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;
      25: astore_1
      26: aload_1
      27: ifnonnull     74
      30: new           #11                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #12                 // String No property \"%s\" type could be determined for %s \"%s\"
      36: iconst_3
      37: anewarray     #13                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_0
      43: getfield      #3                  // Field val$propertyName:Ljava/lang/String;
      46: aastore
      47: dup
      48: iconst_1
      49: aload_0
      50: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      53: invokevirtual #14                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.getDescription:()Ljava/lang/String;
      56: aastore
      57: dup
      58: iconst_2
      59: aload_0
      60: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      63: invokevirtual #15                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.getName:()Ljava/lang/String;
      66: aastore
      67: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      70: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      78: invokevirtual #18                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.getConfiguration:()Lorg/jboss/logmanager/config/LogContextConfigurationImpl;
      81: aload_0
      82: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      85: invokestatic  #9                  // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.access$100:(Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;)Ljava/lang/Class;
      88: aload_0
      89: getfield      #3                  // Field val$propertyName:Ljava/lang/String;
      92: aload_1
      93: aload_0
      94: getfield      #4                  // Field val$expression:Lorg/jboss/logmanager/config/ValueExpression;
      97: iconst_0
      98: invokevirtual #19                 // Method org/jboss/logmanager/config/LogContextConfigurationImpl.getValue:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;Lorg/jboss/logmanager/config/ValueExpression;Z)Lorg/jboss/logmanager/config/ObjectProducer;
     101: areturn

  public void applyPreCreate(org.jboss.logmanager.config.ObjectProducer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
       4: invokevirtual #20                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.addPostConfigurationActions:()V
       7: return

  public void applyPostCreate(org.jboss.logmanager.config.ObjectProducer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$setter:Ljava/lang/reflect/Method;
       4: ifnull        57
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      11: invokevirtual #21                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.getRefs:()Ljava/util/Map;
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      18: invokevirtual #15                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.getName:()Ljava/lang/String;
      21: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: astore_2
      27: aload_0
      28: getfield      #2                  // Field val$setter:Ljava/lang/reflect/Method;
      31: aload_2
      32: iconst_1
      33: anewarray     #13                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_1
      39: invokeinterface #23,  1           // InterfaceMethod org/jboss/logmanager/config/ObjectProducer.getObject:()Ljava/lang/Object;
      44: aastore
      45: invokevirtual #24                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: goto          57
      52: astore_3
      53: aload_3
      54: invokevirtual #26                 // Method java/lang/Throwable.printStackTrace:()V
      57: return
    Exception table:
       from    to  target type
          27    49    52   Class java/lang/Throwable

  public void rollback();
    Code:
       0: aload_0
       1: getfield      #5                  // Field val$replacement:Z
       4: ifeq          31
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      11: invokestatic  #27                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.access$300:(Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;)Ljava/util/Map;
      14: aload_0
      15: getfield      #3                  // Field val$propertyName:Ljava/lang/String;
      18: aload_0
      19: getfield      #6                  // Field val$oldValue:Lorg/jboss/logmanager/config/ValueExpression;
      22: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: goto          48
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;
      35: invokestatic  #27                 // Method org/jboss/logmanager/config/AbstractPropertyConfiguration.access$300:(Lorg/jboss/logmanager/config/AbstractPropertyConfiguration;)Ljava/util/Map;
      38: aload_0
      39: getfield      #3                  // Field val$propertyName:Ljava/lang/String;
      42: invokeinterface #29,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: return

  public void applyPostCreate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/jboss/logmanager/config/ObjectProducer
       5: invokevirtual #31                 // Method applyPostCreate:(Lorg/jboss/logmanager/config/ObjectProducer;)V
       8: return

  public void applyPreCreate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/jboss/logmanager/config/ObjectProducer
       5: invokevirtual #32                 // Method applyPreCreate:(Lorg/jboss/logmanager/config/ObjectProducer;)V
       8: return

  public java.lang.Object validate() throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method validate:()Lorg/jboss/logmanager/config/ObjectProducer;
       4: areturn
}
