Compiled from "AtomicArray.java"
final class org.jboss.logmanager.AtomicArray<T, V> {
  private final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, V[]> updater;

  private final java.lang.Class<V> componentType;

  private final V[] emptyArray;

  public org.jboss.logmanager.AtomicArray(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, V[]>, java.lang.Class<V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field componentType:Ljava/lang/Class;
      14: aload_0
      15: aload_2
      16: iconst_0
      17: invokestatic  #4                  // Method newInstance:(Ljava/lang/Class;I)[Ljava/lang/Object;
      20: putfield      #5                  // Field emptyArray:[Ljava/lang/Object;
      23: return

  public static <T, V> org.jboss.logmanager.AtomicArray<T, V> create(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, V[]>, java.lang.Class<V>);
    Code:
       0: new           #6                  // class org/jboss/logmanager/AtomicArray
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method "<init>":(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Class;)V
       9: areturn

  public void clear(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field emptyArray:[Ljava/lang/Object;
       9: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      12: return

  public void set(T, V[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  public V[] getAndSet(T, V[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #10                 // class "[Ljava/lang/Object;"
      12: areturn

  private static <V> V[] copyOf(java.lang.Class<V>, V[], int);
    Code:
       0: aload_0
       1: iload_2
       2: invokestatic  #4                  // Method newInstance:(Ljava/lang/Class;I)[Ljava/lang/Object;
       5: astore_3
       6: aload_1
       7: iconst_0
       8: aload_3
       9: iconst_0
      10: aload_1
      11: arraylength
      12: iload_2
      13: invokestatic  #11                 // Method java/lang/Math.min:(II)I
      16: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_3
      20: areturn

  public void add(T, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class "[Ljava/lang/Object;"
      13: astore        4
      15: aload         4
      17: arraylength
      18: istore        5
      20: aload_0
      21: getfield      #3                  // Field componentType:Ljava/lang/Class;
      24: aload         4
      26: iload         5
      28: iconst_1
      29: iadd
      30: invokestatic  #14                 // Method copyOf:(Ljava/lang/Class;[Ljava/lang/Object;I)[Ljava/lang/Object;
      33: astore        6
      35: aload         6
      37: iload         5
      39: aload_2
      40: aastore
      41: aload_3
      42: aload_1
      43: aload         4
      45: aload         6
      47: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifeq          54
      53: return
      54: goto          5

  public boolean addIfAbsent(T, V, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #10                 // class "[Ljava/lang/Object;"
      15: astore        5
      17: aload         5
      19: arraylength
      20: istore        6
      22: iload_3
      23: ifne          30
      26: aload_2
      27: ifnonnull     60
      30: iconst_0
      31: istore        7
      33: iload         7
      35: iload         6
      37: if_icmpge     57
      40: aload         5
      42: iload         7
      44: aaload
      45: aload_2
      46: if_acmpne     51
      49: iconst_0
      50: ireturn
      51: iinc          7, 1
      54: goto          33
      57: goto          90
      60: iconst_0
      61: istore        7
      63: iload         7
      65: iload         6
      67: if_icmpge     90
      70: aload_2
      71: aload         5
      73: iload         7
      75: aaload
      76: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      79: ifeq          84
      82: iconst_0
      83: ireturn
      84: iinc          7, 1
      87: goto          63
      90: aload_0
      91: getfield      #3                  // Field componentType:Ljava/lang/Class;
      94: aload         5
      96: iload         6
      98: iconst_1
      99: iadd
     100: invokestatic  #14                 // Method copyOf:(Ljava/lang/Class;[Ljava/lang/Object;I)[Ljava/lang/Object;
     103: astore        7
     105: aload         7
     107: iload         6
     109: aload_2
     110: aastore
     111: aload         4
     113: aload_1
     114: aload         5
     116: aload         7
     118: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     121: ifeq          126
     124: iconst_1
     125: ireturn
     126: goto          6

  public boolean remove(T, V, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #10                 // class "[Ljava/lang/Object;"
      15: astore        5
      17: aload         5
      19: arraylength
      20: istore        6
      22: iload         6
      24: ifne          29
      27: iconst_0
      28: ireturn
      29: iconst_m1
      30: istore        7
      32: iload_3
      33: ifne          40
      36: aload_2
      37: ifnonnull     75
      40: iconst_0
      41: istore        8
      43: iload         8
      45: iload         6
      47: if_icmpge     72
      50: aload         5
      52: iload         8
      54: aaload
      55: aload_2
      56: if_acmpne     66
      59: iload         8
      61: istore        7
      63: goto          72
      66: iinc          8, 1
      69: goto          43
      72: goto          110
      75: iconst_0
      76: istore        8
      78: iload         8
      80: iload         6
      82: if_icmpge     110
      85: aload_2
      86: aload         5
      88: iload         8
      90: aaload
      91: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      94: ifeq          104
      97: iload         8
      99: istore        7
     101: goto          110
     104: iinc          8, 1
     107: goto          78
     110: iload         7
     112: iconst_m1
     113: if_icmpne     118
     116: iconst_0
     117: ireturn
     118: aload_0
     119: getfield      #3                  // Field componentType:Ljava/lang/Class;
     122: iload         6
     124: iconst_1
     125: isub
     126: invokestatic  #4                  // Method newInstance:(Ljava/lang/Class;I)[Ljava/lang/Object;
     129: astore        8
     131: aload         5
     133: iconst_0
     134: aload         8
     136: iconst_0
     137: iload         7
     139: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     142: aload         5
     144: iload         7
     146: iconst_1
     147: iadd
     148: aload         8
     150: iload         7
     152: iload         6
     154: iload         7
     156: isub
     157: iconst_1
     158: isub
     159: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     162: aload         4
     164: aload_1
     165: aload         5
     167: aload         8
     169: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     172: ifeq          177
     175: iconst_1
     176: ireturn
     177: goto          6

  public int removeAll(T, V, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #10                 // class "[Ljava/lang/Object;"
      15: astore        5
      17: aload         5
      19: arraylength
      20: istore        6
      22: iload         6
      24: ifne          29
      27: iconst_0
      28: ireturn
      29: iload         6
      31: newarray       boolean
      33: astore        7
      35: iconst_0
      36: istore        8
      38: iload_3
      39: ifne          46
      42: aload_2
      43: ifnonnull     83
      46: iconst_0
      47: istore        9
      49: iload         9
      51: iload         6
      53: if_icmpge     80
      56: aload         5
      58: iload         9
      60: aaload
      61: aload_2
      62: if_acmpne     74
      65: aload         7
      67: iload         9
      69: iconst_1
      70: bastore
      71: iinc          8, 1
      74: iinc          9, 1
      77: goto          49
      80: goto          120
      83: iconst_0
      84: istore        9
      86: iload         9
      88: iload         6
      90: if_icmpge     120
      93: aload_2
      94: aload         5
      96: iload         9
      98: aaload
      99: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     102: ifeq          114
     105: aload         7
     107: iload         9
     109: iconst_1
     110: bastore
     111: iinc          8, 1
     114: iinc          9, 1
     117: goto          86
     120: iload         8
     122: ifne          127
     125: iconst_0
     126: ireturn
     127: iload         6
     129: iload         8
     131: isub
     132: istore        9
     134: iload         9
     136: ifne          148
     139: aload_0
     140: getfield      #5                  // Field emptyArray:[Ljava/lang/Object;
     143: astore        10
     145: goto          199
     148: aload_0
     149: getfield      #3                  // Field componentType:Ljava/lang/Class;
     152: iload         9
     154: invokestatic  #4                  // Method newInstance:(Ljava/lang/Class;I)[Ljava/lang/Object;
     157: astore        10
     159: iconst_0
     160: istore        11
     162: iconst_0
     163: istore        12
     165: iload         11
     167: iload         6
     169: if_icmpge     199
     172: aload         7
     174: iload         11
     176: baload
     177: ifne          193
     180: aload         10
     182: iload         12
     184: iinc          12, 1
     187: aload         5
     189: iload         11
     191: aaload
     192: aastore
     193: iinc          11, 1
     196: goto          165
     199: aload         4
     201: aload_1
     202: aload         5
     204: aload         10
     206: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     209: ifeq          215
     212: iload         8
     214: ireturn
     215: goto          6

  public void add(T, V, java.util.Comparator<? super V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #10                 // class "[Ljava/lang/Object;"
      15: astore        5
      17: aload         5
      19: arraylength
      20: istore        6
      22: aload         5
      24: aload_2
      25: aload_3
      26: invokestatic  #17                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
      29: invokestatic  #18                 // Method insertionPoint:(I)I
      32: istore        7
      34: aload_0
      35: getfield      #3                  // Field componentType:Ljava/lang/Class;
      38: iload         6
      40: iconst_1
      41: iadd
      42: invokestatic  #4                  // Method newInstance:(Ljava/lang/Class;I)[Ljava/lang/Object;
      45: astore        8
      47: aload         5
      49: iconst_0
      50: aload         8
      52: iconst_0
      53: iload         7
      55: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      58: aload         8
      60: iload         7
      62: aload_2
      63: aastore
      64: aload         5
      66: iload         7
      68: aload         8
      70: iload         7
      72: iconst_1
      73: iadd
      74: iload         6
      76: iload         7
      78: isub
      79: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: aload         4
      84: aload_1
      85: aload         5
      87: aload         8
      89: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      92: ifeq          96
      95: return
      96: goto          6

  public boolean addIfAbsent(T, V, java.util.Comparator<? super V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #10                 // class "[Ljava/lang/Object;"
      15: astore        5
      17: aload         5
      19: arraylength
      20: istore        6
      22: aload         5
      24: aload_2
      25: aload_3
      26: invokestatic  #17                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
      29: istore        7
      31: iload         7
      33: ifge          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #3                  // Field componentType:Ljava/lang/Class;
      42: iload         6
      44: iconst_1
      45: iadd
      46: invokestatic  #4                  // Method newInstance:(Ljava/lang/Class;I)[Ljava/lang/Object;
      49: astore        8
      51: aload         5
      53: iconst_0
      54: aload         8
      56: iconst_0
      57: iload         7
      59: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload         8
      64: iload         7
      66: aload_2
      67: aastore
      68: aload         5
      70: iload         7
      72: aload         8
      74: iload         7
      76: iconst_1
      77: iadd
      78: iload         6
      80: iload         7
      82: isub
      83: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      86: aload         4
      88: aload_1
      89: aload         5
      91: aload         8
      93: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifeq          101
      99: iconst_1
     100: ireturn
     101: goto          6

  public boolean remove(T, V, java.util.Comparator<? super V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #10                 // class "[Ljava/lang/Object;"
      15: astore        5
      17: aload         5
      19: arraylength
      20: istore        6
      22: iload         6
      24: ifne          29
      27: iconst_0
      28: ireturn
      29: aload         5
      31: aload_2
      32: aload_3
      33: invokestatic  #17                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I
      36: istore        7
      38: iload         7
      40: ifge          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #3                  // Field componentType:Ljava/lang/Class;
      49: iload         6
      51: iconst_1
      52: isub
      53: invokestatic  #4                  // Method newInstance:(Ljava/lang/Class;I)[Ljava/lang/Object;
      56: astore        8
      58: aload         5
      60: iconst_0
      61: aload         8
      63: iconst_0
      64: iload         7
      66: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: aload         5
      71: iload         7
      73: iconst_1
      74: iadd
      75: aload         8
      77: iload         7
      79: iload         6
      81: iload         7
      83: isub
      84: iconst_1
      85: isub
      86: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: aload         4
      91: aload_1
      92: aload         5
      94: aload         8
      96: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      99: ifeq          104
     102: iconst_1
     103: ireturn
     104: goto          6

  public void sort(T, java.util.Comparator<? super V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class "[Ljava/lang/Object;"
      13: astore        4
      15: aload         4
      17: arraylength
      18: ifne          22
      21: return
      22: aload         4
      24: invokevirtual #19                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      27: checkcast     #10                 // class "[Ljava/lang/Object;"
      30: astore        5
      32: aload         5
      34: aload_2
      35: invokestatic  #20                 // Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
      38: aload_3
      39: aload_1
      40: aload         4
      42: aload         5
      44: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      47: ifeq          51
      50: return
      51: goto          5

  private static int insertionPoint(int);
    Code:
       0: iload_0
       1: ifle          8
       4: iload_0
       5: goto          12
       8: iload_0
       9: iconst_1
      10: iadd
      11: ineg
      12: ireturn

  private static <V> V[] newInstance(java.lang.Class<V>, int);
    Code:
       0: aload_0
       1: ldc_w         #21                 // class java/util/logging/Handler
       4: if_acmpne     15
       7: iload_1
       8: anewarray     #21                 // class java/util/logging/Handler
      11: checkcast     #10                 // class "[Ljava/lang/Object;"
      14: areturn
      15: aload_0
      16: ldc_w         #22                 // class java/lang/Object
      19: if_acmpne     30
      22: iload_1
      23: anewarray     #22                 // class java/lang/Object
      26: checkcast     #10                 // class "[Ljava/lang/Object;"
      29: areturn
      30: aload_0
      31: iload_1
      32: invokestatic  #23                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      35: checkcast     #10                 // class "[Ljava/lang/Object;"
      38: checkcast     #10                 // class "[Ljava/lang/Object;"
      41: areturn

  public boolean compareAndSet(T, V[], V[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field updater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn
}
