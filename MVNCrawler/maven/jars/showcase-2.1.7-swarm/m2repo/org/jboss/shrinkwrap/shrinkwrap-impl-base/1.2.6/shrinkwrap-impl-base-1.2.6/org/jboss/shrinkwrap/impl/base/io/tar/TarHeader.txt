Compiled from "TarHeader.java"
public class org.jboss.shrinkwrap.impl.base.io.tar.TarHeader implements java.lang.Cloneable {
  public static final int NAMELEN;

  public static final int NAMEOFFSET;

  public static final int PREFIXLEN;

  public static final int PREFIXOFFSET;

  public static final int MODELEN;

  public static final int UIDLEN;

  public static final int GIDLEN;

  public static final int CHKSUMLEN;

  public static final int SIZELEN;

  public static final int MAGICLEN;

  public static final int MODTIMELEN;

  public static final int UNAMELEN;

  public static final int GNAMELEN;

  public static final int DEVLEN;

  public static final byte LF_OLDNORM;

  public static final byte LF_NORMAL;

  public static final byte LF_LINK;

  public static final byte LF_SYMLINK;

  public static final byte LF_CHR;

  public static final byte LF_BLK;

  public static final byte LF_DIR;

  public static final byte LF_FIFO;

  public static final byte LF_CONTIG;

  public static final java.lang.String TMAGIC;

  public static final java.lang.String GNU_TMAGIC;

  public java.lang.StringBuffer name;

  public int mode;

  public int userId;

  public int groupId;

  public long size;

  public long modTime;

  public int checkSum;

  public byte linkFlag;

  public java.lang.StringBuffer linkName;

  public java.lang.StringBuffer magic;

  public java.lang.StringBuffer userName;

  public java.lang.StringBuffer groupName;

  public int devMajor;

  public int devMinor;

  public org.jboss.shrinkwrap.impl.base.io.tar.TarHeader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuffer
       8: dup
       9: ldc           #4                  // String ustar
      11: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      14: putfield      #6                  // Field magic:Ljava/lang/StringBuffer;
      17: aload_0
      18: new           #2                  // class java/lang/StringBuffer
      21: dup
      22: invokespecial #7                  // Method java/lang/StringBuffer."<init>":()V
      25: putfield      #8                  // Field name:Ljava/lang/StringBuffer;
      28: aload_0
      29: new           #2                  // class java/lang/StringBuffer
      32: dup
      33: invokespecial #7                  // Method java/lang/StringBuffer."<init>":()V
      36: putfield      #9                  // Field linkName:Ljava/lang/StringBuffer;
      39: ldc           #10                 // String user.name
      41: ldc           #11                 // String
      43: invokestatic  #12                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      46: astore_1
      47: aload_1
      48: invokevirtual #13                 // Method java/lang/String.length:()I
      51: bipush        31
      53: if_icmple     64
      56: aload_1
      57: iconst_0
      58: bipush        31
      60: invokevirtual #14                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      63: astore_1
      64: aload_0
      65: iconst_0
      66: putfield      #15                 // Field userId:I
      69: aload_0
      70: iconst_0
      71: putfield      #16                 // Field groupId:I
      74: aload_0
      75: new           #2                  // class java/lang/StringBuffer
      78: dup
      79: aload_1
      80: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      83: putfield      #17                 // Field userName:Ljava/lang/StringBuffer;
      86: aload_0
      87: new           #2                  // class java/lang/StringBuffer
      90: dup
      91: ldc           #11                 // String
      93: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      96: putfield      #18                 // Field groupName:Ljava/lang/StringBuffer;
      99: return

  public java.lang.Object clone();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokespecial #19                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class org/jboss/shrinkwrap/impl/base/io/tar/TarHeader
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #8                  // Field name:Ljava/lang/StringBuffer;
      15: ifnonnull     22
      18: aconst_null
      19: goto          36
      22: new           #2                  // class java/lang/StringBuffer
      25: dup
      26: aload_0
      27: getfield      #8                  // Field name:Ljava/lang/StringBuffer;
      30: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      36: putfield      #8                  // Field name:Ljava/lang/StringBuffer;
      39: aload_1
      40: aload_0
      41: getfield      #21                 // Field mode:I
      44: putfield      #21                 // Field mode:I
      47: aload_1
      48: aload_0
      49: getfield      #15                 // Field userId:I
      52: putfield      #15                 // Field userId:I
      55: aload_1
      56: aload_0
      57: getfield      #16                 // Field groupId:I
      60: putfield      #16                 // Field groupId:I
      63: aload_1
      64: aload_0
      65: getfield      #22                 // Field size:J
      68: putfield      #22                 // Field size:J
      71: aload_1
      72: aload_0
      73: getfield      #23                 // Field modTime:J
      76: putfield      #23                 // Field modTime:J
      79: aload_1
      80: aload_0
      81: getfield      #24                 // Field checkSum:I
      84: putfield      #24                 // Field checkSum:I
      87: aload_1
      88: aload_0
      89: getfield      #25                 // Field linkFlag:B
      92: putfield      #25                 // Field linkFlag:B
      95: aload_1
      96: aload_0
      97: getfield      #9                  // Field linkName:Ljava/lang/StringBuffer;
     100: ifnonnull     107
     103: aconst_null
     104: goto          121
     107: new           #2                  // class java/lang/StringBuffer
     110: dup
     111: aload_0
     112: getfield      #9                  // Field linkName:Ljava/lang/StringBuffer;
     115: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     118: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     121: putfield      #9                  // Field linkName:Ljava/lang/StringBuffer;
     124: aload_1
     125: aload_0
     126: getfield      #6                  // Field magic:Ljava/lang/StringBuffer;
     129: ifnonnull     136
     132: aconst_null
     133: goto          150
     136: new           #2                  // class java/lang/StringBuffer
     139: dup
     140: aload_0
     141: getfield      #6                  // Field magic:Ljava/lang/StringBuffer;
     144: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     147: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     150: putfield      #6                  // Field magic:Ljava/lang/StringBuffer;
     153: aload_1
     154: aload_0
     155: getfield      #17                 // Field userName:Ljava/lang/StringBuffer;
     158: ifnonnull     165
     161: aconst_null
     162: goto          179
     165: new           #2                  // class java/lang/StringBuffer
     168: dup
     169: aload_0
     170: getfield      #17                 // Field userName:Ljava/lang/StringBuffer;
     173: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     176: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     179: putfield      #17                 // Field userName:Ljava/lang/StringBuffer;
     182: aload_1
     183: aload_0
     184: getfield      #18                 // Field groupName:Ljava/lang/StringBuffer;
     187: ifnonnull     194
     190: aconst_null
     191: goto          208
     194: new           #2                  // class java/lang/StringBuffer
     197: dup
     198: aload_0
     199: getfield      #18                 // Field groupName:Ljava/lang/StringBuffer;
     202: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     205: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     208: putfield      #18                 // Field groupName:Ljava/lang/StringBuffer;
     211: aload_1
     212: aload_0
     213: getfield      #26                 // Field devMajor:I
     216: putfield      #26                 // Field devMajor:I
     219: aload_1
     220: aload_0
     221: getfield      #27                 // Field devMinor:I
     224: putfield      #27                 // Field devMinor:I
     227: goto          238
     230: astore_2
     231: aload_2
     232: getstatic     #29                 // Field java/lang/System.err:Ljava/io/PrintStream;
     235: invokevirtual #30                 // Method java/lang/CloneNotSupportedException.printStackTrace:(Ljava/io/PrintStream;)V
     238: aload_1
     239: areturn
    Exception table:
       from    to  target type
           2   227   230   Class java/lang/CloneNotSupportedException

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/StringBuffer;
       4: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
       7: areturn

  public static long parseOctal(byte[], int, int) throws org.jboss.shrinkwrap.impl.base.io.tar.InvalidHeaderException;
    Code:
       0: lconst_0
       1: lstore_3
       2: iconst_1
       3: istore        5
       5: iload_1
       6: iload_2
       7: iadd
       8: istore        6
      10: iload_1
      11: istore        7
      13: iload         7
      15: iload         6
      17: if_icmpge     90
      20: aload_0
      21: iload         7
      23: baload
      24: ifne          30
      27: goto          90
      30: aload_0
      31: iload         7
      33: baload
      34: bipush        32
      36: if_icmpeq     48
      39: aload_0
      40: iload         7
      42: baload
      43: bipush        48
      45: if_icmpne     68
      48: iload         5
      50: ifeq          56
      53: goto          84
      56: aload_0
      57: iload         7
      59: baload
      60: bipush        32
      62: if_icmpne     68
      65: goto          90
      68: iconst_0
      69: istore        5
      71: lload_3
      72: iconst_3
      73: lshl
      74: aload_0
      75: iload         7
      77: baload
      78: bipush        48
      80: isub
      81: i2l
      82: ladd
      83: lstore_3
      84: iinc          7, 1
      87: goto          13
      90: lload_3
      91: lreturn

  public static java.lang.StringBuffer parseFileName(byte[]);
    Code:
       0: new           #2                  // class java/lang/StringBuffer
       3: dup
       4: sipush        256
       7: invokespecial #31                 // Method java/lang/StringBuffer."<init>":(I)V
      10: astore_1
      11: aload_0
      12: sipush        345
      15: baload
      16: ifeq          58
      19: sipush        345
      22: istore_2
      23: iload_2
      24: sipush        500
      27: if_icmpge     51
      30: aload_0
      31: iload_2
      32: baload
      33: ifeq          51
      36: aload_1
      37: aload_0
      38: iload_2
      39: baload
      40: i2c
      41: invokevirtual #32                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      44: pop
      45: iinc          2, 1
      48: goto          23
      51: aload_1
      52: ldc           #33                 // String /
      54: invokevirtual #34                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      57: pop
      58: iconst_0
      59: istore_2
      60: iload_2
      61: bipush        100
      63: if_icmpge     87
      66: aload_0
      67: iload_2
      68: baload
      69: ifeq          87
      72: aload_1
      73: aload_0
      74: iload_2
      75: baload
      76: i2c
      77: invokevirtual #32                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      80: pop
      81: iinc          2, 1
      84: goto          60
      87: aload_1
      88: areturn

  public static java.lang.StringBuffer parseName(byte[], int, int) throws org.jboss.shrinkwrap.impl.base.io.tar.InvalidHeaderException;
    Code:
       0: new           #2                  // class java/lang/StringBuffer
       3: dup
       4: iload_2
       5: invokespecial #31                 // Method java/lang/StringBuffer."<init>":(I)V
       8: astore_3
       9: iload_1
      10: iload_2
      11: iadd
      12: istore        4
      14: iload_1
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     50
      24: aload_0
      25: iload         5
      27: baload
      28: ifne          34
      31: goto          50
      34: aload_3
      35: aload_0
      36: iload         5
      38: baload
      39: i2c
      40: invokevirtual #32                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      43: pop
      44: iinc          5, 1
      47: goto          17
      50: aload_3
      51: areturn

  public static int getFileNameBytes(java.lang.String, byte[]) throws org.jboss.shrinkwrap.impl.base.io.tar.InvalidHeaderException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method java/lang/String.length:()I
       4: bipush        100
       6: if_icmple     131
       9: aload_0
      10: ldc           #33                 // String /
      12: aload_0
      13: invokevirtual #13                 // Method java/lang/String.length:()I
      16: bipush        100
      18: isub
      19: invokevirtual #35                 // Method java/lang/String.indexOf:(Ljava/lang/String;I)I
      22: istore_2
      23: iload_2
      24: iconst_m1
      25: if_icmpne     55
      28: new           #36                 // class org/jboss/shrinkwrap/impl/base/io/tar/InvalidHeaderException
      31: dup
      32: new           #37                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #39                 // String file name is greater than 100 characters,
      41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #42                 // Method org/jboss/shrinkwrap/impl/base/io/tar/InvalidHeaderException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: iload_2
      57: iconst_1
      58: iadd
      59: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      62: astore_3
      63: aload_0
      64: iconst_0
      65: iload_2
      66: invokevirtual #14                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      69: astore        4
      71: aload         4
      73: invokevirtual #13                 // Method java/lang/String.length:()I
      76: sipush        155
      79: if_icmple     92
      82: new           #36                 // class org/jboss/shrinkwrap/impl/base/io/tar/InvalidHeaderException
      85: dup
      86: ldc           #44                 // String file prefix is greater than 155 characters
      88: invokespecial #42                 // Method org/jboss/shrinkwrap/impl/base/io/tar/InvalidHeaderException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: new           #2                  // class java/lang/StringBuffer
      95: dup
      96: aload_3
      97: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     100: aload_1
     101: iconst_0
     102: bipush        100
     104: invokestatic  #45                 // Method getNameBytes:(Ljava/lang/StringBuffer;[BII)I
     107: pop
     108: new           #2                  // class java/lang/StringBuffer
     111: dup
     112: aload         4
     114: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     117: aload_1
     118: sipush        345
     121: sipush        155
     124: invokestatic  #45                 // Method getNameBytes:(Ljava/lang/StringBuffer;[BII)I
     127: pop
     128: goto          147
     131: new           #2                  // class java/lang/StringBuffer
     134: dup
     135: aload_0
     136: invokespecial #5                  // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     139: aload_1
     140: iconst_0
     141: bipush        100
     143: invokestatic  #45                 // Method getNameBytes:(Ljava/lang/StringBuffer;[BII)I
     146: pop
     147: bipush        100
     149: ireturn

  public static int getNameBytes(java.lang.StringBuffer, byte[], int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     37
       9: iload         4
      11: aload_0
      12: invokevirtual #46                 // Method java/lang/StringBuffer.length:()I
      15: if_icmpge     37
      18: aload_1
      19: iload_2
      20: iload         4
      22: iadd
      23: aload_0
      24: iload         4
      26: invokevirtual #47                 // Method java/lang/StringBuffer.charAt:(I)C
      29: i2b
      30: bastore
      31: iinc          4, 1
      34: goto          3
      37: iload         4
      39: iload_3
      40: if_icmpge     56
      43: aload_1
      44: iload_2
      45: iload         4
      47: iadd
      48: iconst_0
      49: bastore
      50: iinc          4, 1
      53: goto          37
      56: iload_2
      57: iload_3
      58: iadd
      59: ireturn

  public static int getOctalBytes(long, byte[], int, int);
    Code:
       0: iload         4
       2: iconst_1
       3: isub
       4: istore        5
       6: aload_2
       7: iload_3
       8: iload         5
      10: iadd
      11: iconst_0
      12: bastore
      13: iinc          5, -1
      16: aload_2
      17: iload_3
      18: iload         5
      20: iadd
      21: bipush        32
      23: bastore
      24: iinc          5, -1
      27: lload_0
      28: lconst_0
      29: lcmp
      30: ifne          47
      33: aload_2
      34: iload_3
      35: iload         5
      37: iadd
      38: bipush        48
      40: bastore
      41: iinc          5, -1
      44: goto          92
      47: lload_0
      48: lstore        6
      50: iload         5
      52: iflt          92
      55: lload         6
      57: lconst_0
      58: lcmp
      59: ifle          92
      62: aload_2
      63: iload_3
      64: iload         5
      66: iadd
      67: bipush        48
      69: lload         6
      71: ldc2_w        #48                 // long 7l
      74: land
      75: l2i
      76: i2b
      77: iadd
      78: i2b
      79: bastore
      80: lload         6
      82: iconst_3
      83: lshr
      84: lstore        6
      86: iinc          5, -1
      89: goto          50
      92: iload         5
      94: iflt          111
      97: aload_2
      98: iload_3
      99: iload         5
     101: iadd
     102: bipush        32
     104: bastore
     105: iinc          5, -1
     108: goto          92
     111: iload_3
     112: iload         4
     114: iadd
     115: ireturn

  public static int getLongOctalBytes(long, byte[], int, int);
    Code:
       0: iload         4
       2: iconst_1
       3: iadd
       4: newarray       byte
       6: astore        5
       8: lload_0
       9: aload         5
      11: iconst_0
      12: iload         4
      14: iconst_1
      15: iadd
      16: invokestatic  #50                 // Method getOctalBytes:(J[BII)I
      19: pop
      20: aload         5
      22: iconst_0
      23: aload_2
      24: iload_3
      25: iload         4
      27: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: iload_3
      31: iload         4
      33: iadd
      34: ireturn

  public static int getCheckSumOctalBytes(long, byte[], int, int);
    Code:
       0: lload_0
       1: aload_2
       2: iload_3
       3: iload         4
       5: invokestatic  #50                 // Method getOctalBytes:(J[BII)I
       8: pop
       9: aload_2
      10: iload_3
      11: iload         4
      13: iadd
      14: iconst_1
      15: isub
      16: bipush        32
      18: bastore
      19: aload_2
      20: iload_3
      21: iload         4
      23: iadd
      24: iconst_2
      25: isub
      26: iconst_0
      27: bastore
      28: iload_3
      29: iload         4
      31: iadd
      32: ireturn
}
