Compiled from "MessageDestinationRefType.java"
public interface org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> extends org.jboss.shrinkwrap.descriptor.api.Child<T> {
  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> jndiName(java.lang.String);

  public abstract java.lang.String getJndiName();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeJndiName();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> mappedName(java.lang.String);

  public abstract java.lang.String getMappedName();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeMappedName();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.InjectionTargetType<org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T>> getOrCreateInjectionTarget();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.InjectionTargetType<org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T>> createInjectionTarget();

  public abstract java.util.List<org.jboss.shrinkwrap.descriptor.api.jbosscommon60.InjectionTargetType<org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T>>> getAllInjectionTarget();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeAllInjectionTarget();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> ignoreDependency();

  public abstract java.lang.Boolean isIgnoreDependency();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeIgnoreDependency();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> description(java.lang.String...);

  public abstract java.util.List<java.lang.String> getAllDescription();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeAllDescription();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> messageDestinationRefName(java.lang.String);

  public abstract java.lang.String getMessageDestinationRefName();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeMessageDestinationRefName();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> messageDestinationType(java.lang.String);

  public abstract java.lang.String getMessageDestinationType();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeMessageDestinationType();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> messageDestinationUsage(org.jboss.shrinkwrap.descriptor.api.javaee6.MessageDestinationUsageType);

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> messageDestinationUsage(java.lang.String);

  public abstract org.jboss.shrinkwrap.descriptor.api.javaee6.MessageDestinationUsageType getMessageDestinationUsage();

  public abstract java.lang.String getMessageDestinationUsageAsString();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeMessageDestinationUsage();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> messageDestinationLink(java.lang.String);

  public abstract java.lang.String getMessageDestinationLink();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeMessageDestinationLink();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> id(java.lang.String);

  public abstract java.lang.String getId();

  public abstract org.jboss.shrinkwrap.descriptor.api.jbosscommon60.MessageDestinationRefType<T> removeId();
}
