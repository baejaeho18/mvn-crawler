Compiled from "OutboundMessage.java"
final class org.jboss.remoting3.remote.OutboundMessage extends org.jboss.remoting3.MessageOutputStream {
  final short messageId;

  final org.jboss.remoting3.remote.RemoteConnectionChannel channel;

  final org.xnio.streams.BufferPipeOutputStream pipeOutputStream;

  final int maximumWindow;

  int window;

  boolean closeCalled;

  boolean closeReceived;

  boolean cancelled;

  boolean cancelSent;

  boolean eofSent;

  boolean released;

  long remaining;

  final org.xnio.streams.BufferPipeOutputStream$BufferWriter bufferWriter;

  static final org.jboss.remoting3.remote.IntIndexer<org.jboss.remoting3.remote.OutboundMessage> INDEXER;

  org.jboss.remoting3.remote.OutboundMessage(short, org.jboss.remoting3.remote.RemoteConnectionChannel, int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/remoting3/MessageOutputStream."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jboss/remoting3/remote/OutboundMessage$1
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method org/jboss/remoting3/remote/OutboundMessage$1."<init>":(Lorg/jboss/remoting3/remote/OutboundMessage;)V
      13: putfield      #4                  // Field bufferWriter:Lorg/xnio/streams/BufferPipeOutputStream$BufferWriter;
      16: aload_0
      17: iload_1
      18: putfield      #5                  // Field messageId:S
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field channel:Lorg/jboss/remoting3/remote/RemoteConnectionChannel;
      26: aload_0
      27: aload_0
      28: iload_3
      29: dup_x1
      30: putfield      #7                  // Field maximumWindow:I
      33: putfield      #8                  // Field window:I
      36: aload_0
      37: lload         4
      39: putfield      #9                  // Field remaining:J
      42: aload_0
      43: new           #10                 // class org/xnio/streams/BufferPipeOutputStream
      46: dup
      47: aload_0
      48: getfield      #4                  // Field bufferWriter:Lorg/xnio/streams/BufferPipeOutputStream$BufferWriter;
      51: invokespecial #11                 // Method org/xnio/streams/BufferPipeOutputStream."<init>":(Lorg/xnio/streams/BufferPipeOutputStream$BufferWriter;)V
      54: putfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      57: goto          72
      60: astore        6
      62: new           #14                 // class java/lang/IllegalStateException
      65: dup
      66: aload         6
      68: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      71: athrow
      72: return
    Exception table:
       from    to  target type
          42    57    60   Class java/io/IOException

  org.xnio.Pooled<java.nio.ByteBuffer> allocate(byte);
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Lorg/jboss/remoting3/remote/RemoteConnectionChannel;
       4: iload_1
       5: invokevirtual #16                 // Method org/jboss/remoting3/remote/RemoteConnectionChannel.allocate:(B)Lorg/xnio/Pooled;
       8: astore_2
       9: aload_2
      10: invokeinterface #17,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      15: checkcast     #18                 // class java/nio/ByteBuffer
      18: astore_3
      19: aload_3
      20: aload_0
      21: getfield      #5                  // Field messageId:S
      24: invokevirtual #19                 // Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
      27: pop
      28: aload_2
      29: areturn

  void acknowledge(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
       4: dup
       5: astore_2
       6: monitorenter
       7: getstatic     #20                 // Field org/jboss/remoting3/remote/RemoteLogger.log:Lorg/jboss/remoting3/remote/RemoteLogger;
      10: invokeinterface #21,  1           // InterfaceMethod org/jboss/remoting3/remote/RemoteLogger.isTraceEnabled:()Z
      15: ifeq          33
      18: getstatic     #20                 // Field org/jboss/remoting3/remote/RemoteLogger.log:Lorg/jboss/remoting3/remote/RemoteLogger;
      21: ldc           #22                 // String Acknowledged %d bytes on %s
      23: iload_1
      24: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aload_0
      28: invokeinterface #24,  4           // InterfaceMethod org/jboss/remoting3/remote/RemoteLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      33: aload_0
      34: dup
      35: getfield      #8                  // Field window:I
      38: iload_1
      39: iadd
      40: putfield      #8                  // Field window:I
      43: aload_0
      44: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      47: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
      50: aload_2
      51: monitorexit
      52: goto          60
      55: astore_3
      56: aload_2
      57: monitorexit
      58: aload_3
      59: athrow
      60: return
    Exception table:
       from    to  target type
           7    52    55   any
          55    58    55   any

  void remoteClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #26                 // Field closeReceived:Z
      12: aload_0
      13: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      16: invokevirtual #27                 // Method org/xnio/streams/BufferPipeOutputStream.breakPipe:()Lorg/xnio/Pooled;
      19: astore_2
      20: aload_2
      21: ifnull        30
      24: aload_2
      25: invokeinterface #28,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      30: aload_0
      31: getfield      #29                 // Field eofSent:Z
      34: ifne          129
      37: aload_0
      38: getfield      #6                  // Field channel:Lorg/jboss/remoting3/remote/RemoteConnectionChannel;
      41: invokevirtual #30                 // Method org/jboss/remoting3/remote/RemoteConnectionChannel.getConnectionHandler:()Lorg/jboss/remoting3/remote/RemoteConnectionHandler;
      44: invokevirtual #31                 // Method org/jboss/remoting3/remote/RemoteConnectionHandler.isMessageClose:()Z
      47: ifeq          129
      50: aload_0
      51: iconst_1
      52: putfield      #29                 // Field eofSent:Z
      55: aload_0
      56: bipush        48
      58: invokevirtual #33                 // Method allocate:(B)Lorg/xnio/Pooled;
      61: astore_2
      62: iconst_0
      63: istore_3
      64: aload_2
      65: invokeinterface #17,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      70: checkcast     #18                 // class java/nio/ByteBuffer
      73: astore        4
      75: aload         4
      77: iconst_1
      78: invokevirtual #34                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      81: pop
      82: aload         4
      84: invokevirtual #35                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      87: pop
      88: aload_0
      89: getfield      #6                  // Field channel:Lorg/jboss/remoting3/remote/RemoteConnectionChannel;
      92: invokevirtual #36                 // Method org/jboss/remoting3/remote/RemoteConnectionChannel.getRemoteConnection:()Lorg/jboss/remoting3/remote/RemoteConnection;
      95: aload_2
      96: invokevirtual #37                 // Method org/jboss/remoting3/remote/RemoteConnection.send:(Lorg/xnio/Pooled;)V
      99: iconst_1
     100: istore_3
     101: iload_3
     102: ifne          129
     105: aload_2
     106: invokeinterface #28,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     111: goto          129
     114: astore        5
     116: iload_3
     117: ifne          126
     120: aload_2
     121: invokeinterface #28,  1           // InterfaceMethod org/xnio/Pooled.free:()V
     126: aload         5
     128: athrow
     129: aload_0
     130: getfield      #6                  // Field channel:Lorg/jboss/remoting3/remote/RemoteConnectionChannel;
     133: aload_0
     134: invokevirtual #38                 // Method org/jboss/remoting3/remote/RemoteConnectionChannel.free:(Lorg/jboss/remoting3/remote/OutboundMessage;)V
     137: aload_0
     138: getfield      #39                 // Field released:Z
     141: ifne          156
     144: aload_0
     145: iconst_1
     146: putfield      #39                 // Field released:Z
     149: aload_0
     150: getfield      #6                  // Field channel:Lorg/jboss/remoting3/remote/RemoteConnectionChannel;
     153: invokevirtual #40                 // Method org/jboss/remoting3/remote/RemoteConnectionChannel.closeOutboundMessage:()V
     156: aload_0
     157: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
     160: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
     163: aload_1
     164: monitorexit
     165: goto          175
     168: astore        6
     170: aload_1
     171: monitorexit
     172: aload         6
     174: athrow
     175: return
    Exception table:
       from    to  target type
          64   101   114   any
         114   116   114   any
           7   165   168   any
         168   172   168   any

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field remaining:J
       4: lconst_1
       5: lcmp
       6: ifle          30
       9: aload_0
      10: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      13: iload_1
      14: invokevirtual #41                 // Method org/xnio/streams/BufferPipeOutputStream.write:(I)V
      17: aload_0
      18: dup
      19: getfield      #9                  // Field remaining:J
      22: lconst_1
      23: lsub
      24: putfield      #9                  // Field remaining:J
      27: goto          35
      30: aload_0
      31: invokespecial #42                 // Method overrun:()Ljava/io/IOException;
      34: athrow
      35: return

  private java.io.IOException overrun();
    Code:
       0: new           #13                 // class java/io/IOException
       3: dup
       4: ldc           #43                 // String Maximum message size overrun
       6: invokespecial #44                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_0
      11: invokevirtual #45                 // Method cancel:()Lorg/jboss/remoting3/MessageOutputStream;
      14: pop
      15: aload_1
      16: areturn
      17: astore_2
      18: aload_0
      19: invokevirtual #45                 // Method cancel:()Lorg/jboss/remoting3/MessageOutputStream;
      22: pop
      23: aload_2
      24: athrow
    Exception table:
       from    to  target type
           0    10    17   any

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #46                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: i2l
       2: aload_0
       3: getfield      #9                  // Field remaining:J
       6: lcmp
       7: ifle          15
      10: aload_0
      11: invokespecial #42                 // Method overrun:()Ljava/io/IOException;
      14: athrow
      15: aload_0
      16: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokevirtual #47                 // Method org/xnio/streams/BufferPipeOutputStream.write:([BII)V
      25: aload_0
      26: dup
      27: getfield      #9                  // Field remaining:J
      30: iload_3
      31: i2l
      32: lsub
      33: putfield      #9                  // Field remaining:J
      36: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
       4: invokevirtual #48                 // Method org/xnio/streams/BufferPipeOutputStream.flush:()V
       7: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      11: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
      14: aload_0
      15: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      18: invokevirtual #49                 // Method org/xnio/streams/BufferPipeOutputStream.close:()V
      21: aload_1
      22: monitorexit
      23: goto          31
      26: astore_2
      27: aload_1
      28: monitorexit
      29: aload_2
      30: athrow
      31: return
    Exception table:
       from    to  target type
           7    23    26   any
          26    29    26   any

  public org.jboss.remoting3.MessageOutputStream cancel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #50                 // Field cancelled:Z
      12: aload_0
      13: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      16: invokevirtual #25                 // Method java/lang/Object.notifyAll:()V
      19: aload_0
      20: getfield      #12                 // Field pipeOutputStream:Lorg/xnio/streams/BufferPipeOutputStream;
      23: invokestatic  #51                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      26: aload_0
      27: aload_1
      28: monitorexit
      29: areturn
      30: astore_2
      31: aload_1
      32: monitorexit
      33: aload_2
      34: athrow
    Exception table:
       from    to  target type
           7    29    30   any
          30    33    30   any

  public java.lang.String toString();
    Code:
       0: ldc           #52                 // String Outbound message ID %04x on %s
       2: iconst_2
       3: anewarray     #53                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #5                  // Field messageId:S
      12: invokestatic  #54                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #6                  // Field channel:Lorg/jboss/remoting3/remote/RemoteConnectionChannel;
      22: aastore
      23: invokestatic  #55                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: areturn

  void dumpState(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: ldc           #56                 // String
       3: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: ldc           #58                 // String Outbound message ID %04x, window %d of %d\n
       8: iconst_3
       9: anewarray     #53                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #5                  // Field messageId:S
      18: ldc           #59                 // int 65535
      20: iand
      21: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: aastore
      25: dup
      26: iconst_1
      27: aload_0
      28: getfield      #8                  // Field window:I
      31: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: dup
      36: iconst_2
      37: aload_0
      38: getfield      #7                  // Field maximumWindow:I
      41: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: aastore
      45: invokestatic  #55                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      48: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: ldc           #56                 // String
      55: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #60                 // String * flags:
      60: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: pop
      64: aload_0
      65: getfield      #50                 // Field cancelled:Z
      68: ifeq          78
      71: aload_1
      72: ldc           #61                 // String cancelled
      74: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: aload_0
      79: getfield      #62                 // Field cancelSent:Z
      82: ifeq          92
      85: aload_1
      86: ldc           #63                 // String cancel-sent
      88: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: aload_0
      93: getfield      #26                 // Field closeReceived:Z
      96: ifeq          106
      99: aload_1
     100: ldc           #64                 // String close-received
     102: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: pop
     106: aload_0
     107: getfield      #65                 // Field closeCalled:Z
     110: ifeq          120
     113: aload_1
     114: ldc           #66                 // String closed-called
     116: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: pop
     120: aload_0
     121: getfield      #29                 // Field eofSent:Z
     124: ifeq          134
     127: aload_1
     128: ldc           #67                 // String eof-sent
     130: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: pop
     134: aload_1
     135: bipush        10
     137: invokevirtual #68                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     140: pop
     141: return

  public org.xnio.Cancellable cancel();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method cancel:()Lorg/jboss/remoting3/MessageOutputStream;
       4: areturn

  static {};
    Code:
       0: new           #69                 // class org/jboss/remoting3/remote/OutboundMessage$2
       3: dup
       4: invokespecial #70                 // Method org/jboss/remoting3/remote/OutboundMessage$2."<init>":()V
       7: putstatic     #71                 // Field INDEXER:Lorg/jboss/remoting3/remote/IntIndexer;
      10: return
}
