Compiled from "RemoteConnection.java"
final class org.jboss.remoting3.remote.RemoteConnection {
  static final org.xnio.Pooled<java.nio.ByteBuffer> STARTTLS_SENTINEL;

  private static final java.lang.String FQCN;

  private final org.xnio.Pool<java.nio.ByteBuffer> messageBufferPool;

  private final org.xnio.channels.ConnectedMessageChannel channel;

  private final org.xnio.channels.ConnectedStreamChannel underlyingChannel;

  private final org.xnio.OptionMap optionMap;

  private final org.jboss.remoting3.remote.RemoteConnection$RemoteWriteListener writeListener;

  private final java.util.concurrent.Executor executor;

  private final int heartbeatInterval;

  private volatile org.xnio.Result<org.jboss.remoting3.spi.ConnectionHandlerFactory> result;

  private volatile org.xnio.sasl.SaslWrapper saslWrapper;

  private final org.jboss.remoting3.remote.RemoteConnectionProvider remoteConnectionProvider;

  private final java.lang.Runnable heartbeatCommand;

  org.jboss.remoting3.remote.RemoteConnection(org.xnio.Pool<java.nio.ByteBuffer>, org.xnio.channels.ConnectedStreamChannel, org.xnio.channels.ConnectedMessageChannel, org.xnio.OptionMap, org.jboss.remoting3.remote.RemoteConnectionProvider);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener
       8: dup
       9: aload_0
      10: invokespecial #8                  // Method org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener."<init>":(Lorg/jboss/remoting3/remote/RemoteConnection;)V
      13: putfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
      16: aload_0
      17: new           #10                 // class org/jboss/remoting3/remote/RemoteConnection$1
      20: dup
      21: aload_0
      22: invokespecial #11                 // Method org/jboss/remoting3/remote/RemoteConnection$1."<init>":(Lorg/jboss/remoting3/remote/RemoteConnection;)V
      25: putfield      #4                  // Field heartbeatCommand:Ljava/lang/Runnable;
      28: aload_0
      29: aload_1
      30: putfield      #12                 // Field messageBufferPool:Lorg/xnio/Pool;
      33: aload_0
      34: aload_2
      35: putfield      #13                 // Field underlyingChannel:Lorg/xnio/channels/ConnectedStreamChannel;
      38: aload_0
      39: aload_3
      40: putfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
      43: aload_0
      44: aload         4
      46: putfield      #14                 // Field optionMap:Lorg/xnio/OptionMap;
      49: aload_0
      50: aload         4
      52: getstatic     #15                 // Field org/jboss/remoting3/RemotingOptions.HEARTBEAT_INTERVAL:Lorg/xnio/Option;
      55: ldc           #17                 // int 2147483647
      57: invokevirtual #18                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      60: putfield      #3                  // Field heartbeatInterval:I
      63: aload_0
      64: aload         5
      66: invokevirtual #19                 // Method org/jboss/remoting3/remote/RemoteConnectionProvider.getExecutor:()Ljava/util/concurrent/Executor;
      69: putfield      #20                 // Field executor:Ljava/util/concurrent/Executor;
      72: aload_0
      73: aload         5
      75: putfield      #21                 // Field remoteConnectionProvider:Lorg/jboss/remoting3/remote/RemoteConnectionProvider;
      78: return

  org.xnio.Pooled<java.nio.ByteBuffer> allocate();
    Code:
       0: aload_0
       1: getfield      #12                 // Field messageBufferPool:Lorg/xnio/Pool;
       4: invokeinterface #22,  1           // InterfaceMethod org/xnio/Pool.allocate:()Lorg/xnio/Pooled;
       9: areturn

  void setReadListener(org.xnio.ChannelListener<? super org.xnio.channels.ConnectedMessageChannel>, boolean);
    Code:
       0: getstatic     #23                 // Field org/jboss/remoting3/remote/RemoteLogger.log:Lorg/jboss/remoting3/remote/RemoteLogger;
       3: ldc           #24                 // class org/jboss/remoting3/remote/RemoteConnection
       5: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
       8: getstatic     #26                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      11: aconst_null
      12: ldc           #27                 // String Setting read listener to %s
      14: aload_1
      15: invokeinterface #28,  6           // InterfaceMethod org/jboss/remoting3/remote/RemoteLogger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      20: aload_0
      21: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
      24: invokeinterface #29,  1           // InterfaceMethod org/xnio/channels/ConnectedMessageChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      29: aload_1
      30: invokeinterface #30,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      35: aload_1
      36: ifnull        52
      39: iload_2
      40: ifeq          52
      43: aload_0
      44: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
      47: invokeinterface #31,  1           // InterfaceMethod org/xnio/channels/ConnectedMessageChannel.resumeReads:()V
      52: return

  org.jboss.remoting3.remote.RemoteConnectionProvider getRemoteConnectionProvider();
    Code:
       0: aload_0
       1: getfield      #21                 // Field remoteConnectionProvider:Lorg/jboss/remoting3/remote/RemoteConnectionProvider;
       4: areturn

  org.xnio.Result<org.jboss.remoting3.spi.ConnectionHandlerFactory> getResult();
    Code:
       0: aload_0
       1: getfield      #32                 // Field result:Lorg/xnio/Result;
       4: areturn

  void setResult(org.xnio.Result<org.jboss.remoting3.spi.ConnectionHandlerFactory>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field result:Lorg/xnio/Result;
       5: return

  void handleException(java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #33                 // Method handleException:(Ljava/io/IOException;Z)V
       6: return

  void handleException(java.io.IOException, boolean);
    Code:
       0: getstatic     #34                 // Field org/jboss/remoting3/remote/RemoteLogger.conn:Lorg/jboss/remoting3/remote/RemoteLogger;
       3: ldc           #24                 // class org/jboss/remoting3/remote/RemoteConnection
       5: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
       8: getstatic     #26                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      11: aload_1
      12: ldc           #35                 // String Connection error detail
      14: iconst_0
      15: anewarray     #36                 // class java/lang/Object
      18: invokeinterface #37,  6           // InterfaceMethod org/jboss/remoting3/remote/RemoteLogger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      23: iload_2
      24: ifeq          36
      27: getstatic     #34                 // Field org/jboss/remoting3/remote/RemoteLogger.conn:Lorg/jboss/remoting3/remote/RemoteLogger;
      30: aload_1
      31: invokeinterface #38,  2           // InterfaceMethod org/jboss/remoting3/remote/RemoteLogger.connectionError:(Ljava/io/IOException;)V
      36: aload_0
      37: getfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
      40: invokestatic  #39                 // Method org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener.access$000:(Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;)Lorg/xnio/XnioExecutor$Key;
      43: astore_3
      44: aload_3
      45: ifnull        55
      48: aload_3
      49: invokeinterface #40,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      54: pop
      55: aload_0
      56: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
      59: invokestatic  #41                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      62: aload_0
      63: getfield      #32                 // Field result:Lorg/xnio/Result;
      66: astore        4
      68: aload         4
      70: ifnull        87
      73: aload         4
      75: aload_1
      76: invokeinterface #42,  2           // InterfaceMethod org/xnio/Result.setException:(Ljava/io/IOException;)Z
      81: pop
      82: aload_0
      83: aconst_null
      84: putfield      #32                 // Field result:Lorg/xnio/Result;
      87: return

  void send(org.xnio.Pooled<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
       4: aload_1
       5: iconst_0
       6: invokevirtual #43                 // Method org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener.send:(Lorg/xnio/Pooled;Z)V
       9: return

  void send(org.xnio.Pooled<java.nio.ByteBuffer>, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
       4: aload_1
       5: iload_2
       6: invokevirtual #43                 // Method org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener.send:(Lorg/xnio/Pooled;Z)V
       9: return

  void shutdownWrites();
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
       4: invokevirtual #44                 // Method org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener.shutdownWrites:()V
       7: return

  org.xnio.OptionMap getOptionMap();
    Code:
       0: aload_0
       1: getfield      #14                 // Field optionMap:Lorg/xnio/OptionMap;
       4: areturn

  org.xnio.channels.ConnectedMessageChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
       4: areturn

  org.xnio.ChannelListener<org.xnio.channels.ConnectedMessageChannel> getWriteListener();
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
       4: areturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #20                 // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  public org.xnio.channels.SslChannel getSslChannel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field underlyingChannel:Lorg/xnio/channels/ConnectedStreamChannel;
       4: instanceof    #45                 // class org/xnio/channels/SslChannel
       7: ifeq          20
      10: aload_0
      11: getfield      #13                 // Field underlyingChannel:Lorg/xnio/channels/ConnectedStreamChannel;
      14: checkcast     #45                 // class org/xnio/channels/SslChannel
      17: goto          21
      20: aconst_null
      21: areturn

  org.xnio.sasl.SaslWrapper getSaslWrapper();
    Code:
       0: aload_0
       1: getfield      #2                  // Field saslWrapper:Lorg/xnio/sasl/SaslWrapper;
       4: areturn

  void setSaslWrapper(org.xnio.sasl.SaslWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field saslWrapper:Lorg/xnio/sasl/SaslWrapper;
       5: return

  void handlePreAuthCloseRequest();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method terminateHeartbeat:()V
       4: aload_0
       5: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
       8: invokeinterface #47,  1           // InterfaceMethod org/xnio/channels/ConnectedMessageChannel.close:()V
      13: goto          28
      16: astore_1
      17: getstatic     #34                 // Field org/jboss/remoting3/remote/RemoteLogger.conn:Lorg/jboss/remoting3/remote/RemoteLogger;
      20: ldc           #49                 // String Error closing remoting channel
      22: aload_1
      23: invokeinterface #50,  3           // InterfaceMethod org/jboss/remoting3/remote/RemoteLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      28: return
    Exception table:
       from    to  target type
           0    13    16   Class java/io/IOException

  void sendAlive();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method allocate:()Lorg/xnio/Pooled;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_1
       8: invokeinterface #52,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      13: checkcast     #53                 // class java/nio/ByteBuffer
      16: astore_3
      17: aload_3
      18: bipush        -16
      20: invokevirtual #55                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_3
      25: bipush        80
      27: invokevirtual #56                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      30: pop
      31: aload_3
      32: invokestatic  #57                 // Method org/xnio/Buffers.addRandom:(Ljava/nio/ByteBuffer;)V
      35: aload_3
      36: invokevirtual #58                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: aload_1
      42: invokevirtual #59                 // Method send:(Lorg/xnio/Pooled;)V
      45: iconst_1
      46: istore_2
      47: aload_0
      48: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
      51: invokeinterface #60,  1           // InterfaceMethod org/xnio/channels/ConnectedMessageChannel.wakeupReads:()V
      56: iload_2
      57: ifne          84
      60: aload_1
      61: invokeinterface #61,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      66: goto          84
      69: astore        4
      71: iload_2
      72: ifne          81
      75: aload_1
      76: invokeinterface #61,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      81: aload         4
      83: athrow
      84: return
    Exception table:
       from    to  target type
           7    56    69   any
          69    71    69   any

  void sendAliveResponse();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method allocate:()Lorg/xnio/Pooled;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_1
       8: invokeinterface #52,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      13: checkcast     #53                 // class java/nio/ByteBuffer
      16: astore_3
      17: aload_3
      18: bipush        -15
      20: invokevirtual #55                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_3
      25: bipush        80
      27: invokevirtual #56                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      30: pop
      31: aload_3
      32: invokestatic  #57                 // Method org/xnio/Buffers.addRandom:(Ljava/nio/ByteBuffer;)V
      35: aload_3
      36: invokevirtual #58                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: aload_1
      42: invokevirtual #59                 // Method send:(Lorg/xnio/Pooled;)V
      45: iconst_1
      46: istore_2
      47: iload_2
      48: ifne          75
      51: aload_1
      52: invokeinterface #61,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      57: goto          75
      60: astore        4
      62: iload_2
      63: ifne          72
      66: aload_1
      67: invokeinterface #61,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      72: aload         4
      74: athrow
      75: return
    Exception table:
       from    to  target type
           7    47    60   any
          60    62    60   any

  void terminateHeartbeat();
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
       4: invokestatic  #39                 // Method org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener.access$000:(Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;)Lorg/xnio/XnioExecutor$Key;
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: invokeinterface #40,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      18: pop
      19: return

  java.lang.Object getLock();
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeListener:Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;
       4: invokestatic  #62                 // Method org/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener.access$100:(Lorg/jboss/remoting3/remote/RemoteConnection$RemoteWriteListener;)Ljava/util/Queue;
       7: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #63                 // String Remoting connection %08x to %s
       2: iconst_2
       3: anewarray     #36                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #64                 // Method java/lang/Object.hashCode:()I
      12: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
      22: invokeinterface #66,  1           // InterfaceMethod org/xnio/channels/ConnectedMessageChannel.getPeerAddress:()Ljava/net/SocketAddress;
      27: aastore
      28: invokestatic  #67                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: areturn

  static java.lang.String access$200();
    Code:
       0: getstatic     #5                  // Field FQCN:Ljava/lang/String;
       3: areturn

  static java.lang.Runnable access$300(org.jboss.remoting3.remote.RemoteConnection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field heartbeatCommand:Ljava/lang/Runnable;
       4: areturn

  static int access$400(org.jboss.remoting3.remote.RemoteConnection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field heartbeatInterval:I
       4: ireturn

  static org.xnio.sasl.SaslWrapper access$600(org.jboss.remoting3.remote.RemoteConnection);
    Code:
       0: aload_0
       1: getfield      #2                  // Field saslWrapper:Lorg/xnio/sasl/SaslWrapper;
       4: areturn

  static org.xnio.channels.ConnectedMessageChannel access$700(org.jboss.remoting3.remote.RemoteConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field channel:Lorg/xnio/channels/ConnectedMessageChannel;
       4: areturn

  static {};
    Code:
       0: invokestatic  #68                 // Method org/xnio/Buffers.emptyPooledByteBuffer:()Lorg/xnio/Pooled;
       3: putstatic     #69                 // Field STARTTLS_SENTINEL:Lorg/xnio/Pooled;
       6: ldc           #24                 // class org/jboss/remoting3/remote/RemoteConnection
       8: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      11: putstatic     #5                  // Field FQCN:Ljava/lang/String;
      14: return
}
