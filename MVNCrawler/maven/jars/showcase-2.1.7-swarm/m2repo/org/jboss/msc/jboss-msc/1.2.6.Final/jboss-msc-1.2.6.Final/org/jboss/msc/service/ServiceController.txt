Compiled from "ServiceController.java"
public interface org.jboss.msc.service.ServiceController<S> extends org.jboss.msc.value.Value<S> {
  public abstract org.jboss.msc.service.ServiceController<?> getParent();

  public abstract org.jboss.msc.service.ServiceContainer getServiceContainer();

  public abstract org.jboss.msc.service.ServiceController$Mode getMode();

  public abstract boolean compareAndSetMode(org.jboss.msc.service.ServiceController$Mode, org.jboss.msc.service.ServiceController$Mode);

  public abstract void setMode(org.jboss.msc.service.ServiceController$Mode);

  public abstract org.jboss.msc.service.ServiceController$State getState();

  public abstract org.jboss.msc.service.ServiceController$Substate getSubstate();

  public abstract S getValue() throws java.lang.IllegalStateException;

  public abstract S awaitValue() throws java.lang.IllegalStateException, java.lang.InterruptedException;

  public abstract S awaitValue(long, java.util.concurrent.TimeUnit) throws java.lang.IllegalStateException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;

  public abstract org.jboss.msc.service.Service<S> getService() throws java.lang.IllegalStateException;

  public abstract org.jboss.msc.service.ServiceName getName();

  public abstract org.jboss.msc.service.ServiceName[] getAliases();

  public abstract void addListener(org.jboss.msc.service.ServiceListener<? super S>);

  public abstract void removeListener(org.jboss.msc.service.ServiceListener<? super S>);

  public abstract org.jboss.msc.service.StartException getStartException();

  public abstract void retry();

  public abstract java.util.Set<org.jboss.msc.service.ServiceName> getImmediateUnavailableDependencies();
}
