Compiled from "CachedValue.java"
public final class org.jboss.msc.value.CachedValue<T> implements org.jboss.msc.value.Value<T> {
  private volatile org.jboss.msc.value.Value<? extends T> value;

  public org.jboss.msc.value.CachedValue(org.jboss.msc.value.Value<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Lorg/jboss/msc/value/Value;
       9: return

  public T getValue() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Lorg/jboss/msc/value/Value;
       4: dup
       5: astore_1
       6: instanceof    #3                  // class org/jboss/msc/value/ImmediateValue
       9: ifeq          19
      12: aload_1
      13: invokeinterface #4,  1            // InterfaceMethod org/jboss/msc/value/Value.getValue:()Ljava/lang/Object;
      18: areturn
      19: aload_0
      20: dup
      21: astore_2
      22: monitorenter
      23: aload_0
      24: getfield      #2                  // Field value:Lorg/jboss/msc/value/Value;
      27: dup
      28: astore_1
      29: instanceof    #3                  // class org/jboss/msc/value/ImmediateValue
      32: ifeq          44
      35: aload_1
      36: invokeinterface #4,  1            // InterfaceMethod org/jboss/msc/value/Value.getValue:()Ljava/lang/Object;
      41: aload_2
      42: monitorexit
      43: areturn
      44: aload_1
      45: invokeinterface #4,  1            // InterfaceMethod org/jboss/msc/value/Value.getValue:()Ljava/lang/Object;
      50: astore_3
      51: aload_0
      52: new           #3                  // class org/jboss/msc/value/ImmediateValue
      55: dup
      56: aload_3
      57: invokespecial #5                  // Method org/jboss/msc/value/ImmediateValue."<init>":(Ljava/lang/Object;)V
      60: putfield      #2                  // Field value:Lorg/jboss/msc/value/Value;
      63: aload_3
      64: aload_2
      65: monitorexit
      66: areturn
      67: astore        4
      69: aload_2
      70: monitorexit
      71: aload         4
      73: athrow
    Exception table:
       from    to  target type
          23    43    67   any
          44    66    67   any
          67    71    67   any
}
