Compiled from "AbstractClassFactory.java"
public abstract class org.jboss.invocation.proxy.AbstractClassFactory<T> {
  private final java.lang.String className;

  private final java.lang.Class<T> superClass;

  private final java.lang.ClassLoader classLoader;

  private final java.security.ProtectionDomain protectionDomain;

  private volatile java.lang.Class<? extends T> generatedClass;

  protected org.jboss.classfilewriter.ClassFile classFile;

  private volatile boolean classGenerated;

  protected org.jboss.invocation.proxy.AbstractClassFactory(java.lang.String, java.lang.Class<T>, java.lang.ClassLoader, java.security.ProtectionDomain);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_3
       5: ifnonnull     40
       8: new           #28                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #30                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #33                 // String ClassLoader cannot be null when attempting to proxy
      21: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_2
      25: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #42                 // String . If you are trying to proxy a JDK class you must specify the class loader explicitly to prevent memory leaks
      30: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: ifnonnull     71
      44: new           #28                 // class java/lang/IllegalArgumentException
      47: dup
      48: new           #30                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #59                 // String Superclass cannot be null for proxy
      57: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_1
      72: ifnonnull     85
      75: new           #28                 // class java/lang/IllegalArgumentException
      78: dup
      79: ldc           #61                 // String Class name cannot be null
      81: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: aload_1
      87: putfield      #63                 // Field className:Ljava/lang/String;
      90: aload_0
      91: aload_2
      92: putfield      #65                 // Field superClass:Ljava/lang/Class;
      95: aload_0
      96: aload_3
      97: putfield      #67                 // Field classLoader:Ljava/lang/ClassLoader;
     100: aload_0
     101: aload         4
     103: putfield      #69                 // Field protectionDomain:Ljava/security/ProtectionDomain;
     106: aload_0
     107: new           #71                 // class org/jboss/classfilewriter/ClassFile
     110: dup
     111: aload_1
     112: aload_2
     113: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
     116: iconst_0
     117: anewarray     #51                 // class java/lang/String
     120: invokespecial #77                 // Method org/jboss/classfilewriter/ClassFile."<init>":(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
     123: putfield      #79                 // Field classFile:Lorg/jboss/classfilewriter/ClassFile;
     126: return

  protected org.jboss.invocation.proxy.AbstractClassFactory(java.lang.String, java.lang.Class<T>, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #85                 // Method "<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)V
       8: return

  protected org.jboss.invocation.proxy.AbstractClassFactory(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #90                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: aconst_null
       8: invokespecial #85                 // Method "<init>":(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)V
      11: return

  protected abstract void generateClass();

  protected abstract void cleanup();

  public void afterClassLoad(java.lang.Class<?>);
    Code:
       0: return

  public java.lang.Class<? extends T> defineClass();
    Code:
       0: aload_0
       1: getfield      #102                // Field generatedClass:Ljava/lang/Class;
       4: ifnonnull     108
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #102                // Field generatedClass:Ljava/lang/Class;
      15: ifnonnull     98
      18: aload_0
      19: aload_0
      20: getfield      #67                 // Field classLoader:Ljava/lang/ClassLoader;
      23: aload_0
      24: getfield      #63                 // Field className:Ljava/lang/String;
      27: invokevirtual #106                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      30: putfield      #102                // Field generatedClass:Ljava/lang/Class;
      33: goto          93
      36: astore_2
      37: aload_0
      38: invokevirtual #109                // Method buildClassDefinition:()V
      41: aload_0
      42: getfield      #69                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      45: ifnonnull     66
      48: aload_0
      49: aload_0
      50: getfield      #79                 // Field classFile:Lorg/jboss/classfilewriter/ClassFile;
      53: aload_0
      54: getfield      #67                 // Field classLoader:Ljava/lang/ClassLoader;
      57: invokevirtual #113                // Method org/jboss/classfilewriter/ClassFile.define:(Ljava/lang/ClassLoader;)Ljava/lang/Class;
      60: putfield      #102                // Field generatedClass:Ljava/lang/Class;
      63: goto          85
      66: aload_0
      67: aload_0
      68: getfield      #79                 // Field classFile:Lorg/jboss/classfilewriter/ClassFile;
      71: aload_0
      72: getfield      #67                 // Field classLoader:Ljava/lang/ClassLoader;
      75: aload_0
      76: getfield      #69                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      79: invokevirtual #116                // Method org/jboss/classfilewriter/ClassFile.define:(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;
      82: putfield      #102                // Field generatedClass:Ljava/lang/Class;
      85: aload_0
      86: aload_0
      87: getfield      #102                // Field generatedClass:Ljava/lang/Class;
      90: invokevirtual #118                // Method afterClassLoad:(Ljava/lang/Class;)V
      93: aload_0
      94: aconst_null
      95: putfield      #79                 // Field classFile:Lorg/jboss/classfilewriter/ClassFile;
      98: aload_1
      99: monitorexit
     100: goto          108
     103: astore_3
     104: aload_1
     105: monitorexit
     106: aload_3
     107: athrow
     108: aload_0
     109: getfield      #102                // Field generatedClass:Ljava/lang/Class;
     112: areturn
    Exception table:
       from    to  target type
          18    33    36   Class java/lang/ClassNotFoundException
          11   100   103   any
         103   106   103   any

  public boolean isProxyClassDefined();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #67                 // Field classLoader:Ljava/lang/ClassLoader;
       5: invokevirtual #127                // Method isProxyClassDefined:(Ljava/lang/ClassLoader;)Z
       8: ireturn

  public boolean isProxyClassDefined(java.lang.ClassLoader);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #63                 // Field className:Ljava/lang/String;
       5: invokevirtual #106                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       8: pop
       9: iconst_1
      10: ireturn
      11: astore_2
      12: iconst_0
      13: ireturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/ClassNotFoundException

  public void buildClassDefinition();
    Code:
       0: aload_0
       1: getfield      #129                // Field classGenerated:Z
       4: ifne          41
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #129                // Field classGenerated:Z
      15: ifne          31
      18: aload_0
      19: invokevirtual #131                // Method generateClass:()V
      22: aload_0
      23: invokevirtual #133                // Method cleanup:()V
      26: aload_0
      27: iconst_1
      28: putfield      #129                // Field classGenerated:Z
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_2
      37: aload_1
      38: monitorexit
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
          11    33    36   any
          36    39    36   any

  public T newInstance() throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokevirtual #141                // Method defineClass:()Ljava/lang/Class;
       4: invokevirtual #143                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       7: areturn

  public java.lang.String getClassName();
    Code:
       0: aload_0
       1: getfield      #63                 // Field className:Ljava/lang/String;
       4: areturn

  public java.lang.String getSuperClassName();
    Code:
       0: aload_0
       1: getfield      #65                 // Field superClass:Ljava/lang/Class;
       4: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.Class<T> getSuperClass();
    Code:
       0: aload_0
       1: getfield      #65                 // Field superClass:Ljava/lang/Class;
       4: areturn

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #67                 // Field classLoader:Ljava/lang/ClassLoader;
       4: areturn

  public java.security.ProtectionDomain getProtectionDomain();
    Code:
       0: aload_0
       1: getfield      #69                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       4: areturn
}
