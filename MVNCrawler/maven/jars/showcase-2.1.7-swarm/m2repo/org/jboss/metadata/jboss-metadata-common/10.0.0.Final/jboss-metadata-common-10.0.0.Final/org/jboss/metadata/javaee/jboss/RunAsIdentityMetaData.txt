Compiled from "RunAsIdentityMetaData.java"
public class org.jboss.metadata.javaee.jboss.RunAsIdentityMetaData implements java.io.Serializable {
  private static final long serialVersionUID;

  private java.lang.String principalName;

  private java.lang.String roleName;

  private java.util.HashSet<java.lang.String> runAsRoles;

  private static final java.lang.String ANOYMOUS_PRINCIPAL;

  public org.jboss.metadata.javaee.jboss.RunAsIdentityMetaData(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field runAsRoles:Ljava/util/HashSet;
      15: aload_2
      16: ifnonnull     22
      19: ldc           #6                  // String anonymous
      21: astore_2
      22: aload_1
      23: ifnonnull     36
      26: new           #7                  // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #8                  // String The run-as identity must have at least one role
      32: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_2
      38: putfield      #10                 // Field principalName:Ljava/lang/String;
      41: aload_0
      42: aload_1
      43: putfield      #11                 // Field roleName:Ljava/lang/String;
      46: aload_0
      47: getfield      #4                  // Field runAsRoles:Ljava/util/HashSet;
      50: aload_1
      51: invokevirtual #12                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      54: pop
      55: return

  public org.jboss.metadata.javaee.jboss.RunAsIdentityMetaData(java.lang.String, java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_3
       7: ifnull        53
      10: aload_3
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          53
      28: aload         4
      30: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #17                 // class java/lang/String
      38: astore        5
      40: aload_0
      41: getfield      #4                  // Field runAsRoles:Ljava/util/HashSet;
      44: aload         5
      46: invokevirtual #12                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          18
      53: return

  public java.lang.String getPrincipalName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field principalName:Ljava/lang/String;
       4: areturn

  public java.lang.String getRoleName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field roleName:Ljava/lang/String;
       4: areturn

  public java.util.Set<java.lang.String> getRunAsRoles();
    Code:
       0: new           #2                  // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #4                  // Field runAsRoles:Ljava/util/HashSet;
       8: invokespecial #18                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: areturn

  public boolean doesUserHaveRole(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field runAsRoles:Ljava/util/HashSet;
       4: aload_1
       5: invokevirtual #19                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean doesUserHaveRole(java.util.Set<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_1
       5: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          43
      20: aload_2
      21: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #17                 // class java/lang/String
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #20                 // Method doesUserHaveRole:(Ljava/lang/String;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: goto          11
      43: iconst_0
      44: ireturn

  public java.lang.String toString();
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #23                 // String [roles=
       9: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field runAsRoles:Ljava/util/HashSet;
      16: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #26                 // String ,principal=
      21: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #27                 // Method getPrincipalName:()Ljava/lang/String;
      28: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #28                 // String ]
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
