Compiled from "BlockUnmarshaller.java"
public final class org.jboss.marshalling.river.BlockUnmarshaller implements org.jboss.marshalling.Unmarshaller {
  private final org.jboss.marshalling.river.RiverUnmarshaller riverUnmarshaller;

  private int remaining;

  org.jboss.marshalling.river.BlockUnmarshaller(org.jboss.marshalling.river.RiverUnmarshaller);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
       9: return

  boolean inBlock();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  int remaining();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ireturn

  void endOfStream();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          15
       7: aload_0
       8: iconst_m1
       9: putfield      #3                  // Field remaining:I
      12: goto          25
      15: new           #4                  // class java/lang/IllegalStateException
      18: dup
      19: ldc           #5                  // String Not at end of block
      21: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  int tempEndOfStream();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: istore_1
       5: aload_0
       6: iconst_m1
       7: putfield      #3                  // Field remaining:I
      10: iload_1
      11: ireturn
      12: astore_2
      13: aload_0
      14: iconst_m1
      15: putfield      #3                  // Field remaining:I
      18: aload_2
      19: athrow
    Exception table:
       from    to  target type
           0     5    12   any
          12    13    12   any

  void restore(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field remaining:I
       5: return

  void unblock();
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: iconst_m1
       5: if_icmpne     13
       8: aload_0
       9: iconst_0
      10: putfield      #3                  // Field remaining:I
      13: return

  void readBlockHeader(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: tableswitch   { // 50 to 53
                    50: 32
                    51: 44
                    52: 56
                    53: 84
               default: 90
          }
      32: aload_0
      33: aload_0
      34: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      37: invokevirtual #7                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readUnsignedByte:()I
      40: putfield      #3                  // Field remaining:I
      43: return
      44: aload_0
      45: aload_0
      46: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      49: invokevirtual #8                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readUnsignedShort:()I
      52: putfield      #3                  // Field remaining:I
      55: return
      56: aload_0
      57: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      60: invokevirtual #9                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readInt:()I
      63: istore_2
      64: iload_2
      65: ifge          78
      68: new           #10                 // class java/io/StreamCorruptedException
      71: dup
      72: ldc           #11                 // String Invalid block length
      74: invokespecial #12                 // Method java/io/StreamCorruptedException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: iload_2
      80: putfield      #3                  // Field remaining:I
      83: return
      84: aload_0
      85: iconst_m1
      86: putfield      #3                  // Field remaining:I
      89: return
      90: aload_0
      91: iload_1
      92: invokespecial #13                 // Method badLeadByte:(I)Ljava/io/StreamCorruptedException;
      95: athrow

  void readToEndBlockData() throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifle          19
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field remaining:I
      12: invokevirtual #14                 // Method skipBytes:(I)I
      15: pop
      16: goto          0
      19: aload_0
      20: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      23: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:()I
      26: istore_1
      27: iload_1
      28: lookupswitch  { // 5
                    -1: 80
                    50: 92
                    51: 92
                    52: 92
                    53: 86
               default: 100
          }
      80: aload_0
      81: iconst_m1
      82: putfield      #3                  // Field remaining:I
      85: return
      86: aload_0
      87: iconst_m1
      88: putfield      #3                  // Field remaining:I
      91: return
      92: aload_0
      93: iload_1
      94: invokevirtual #16                 // Method readBlockHeader:(I)V
      97: goto          111
     100: aload_0
     101: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
     104: iload_1
     105: iconst_0
     106: iconst_1
     107: invokevirtual #17                 // Method org/jboss/marshalling/river/RiverUnmarshaller.doReadObject:(IZZ)Ljava/lang/Object;
     110: pop
     111: goto          0

  private java.io.StreamCorruptedException badLeadByte(int);
    Code:
       0: new           #10                 // class java/io/StreamCorruptedException
       3: dup
       4: new           #18                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #20                 // String Unexpected lead byte
      13: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #12                 // Method java/io/StreamCorruptedException."<init>":(Ljava/lang/String;)V
      26: areturn

  public java.lang.Object readObjectUnshared() throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #24                 // Method readObject:(Z)Ljava/lang/Object;
       5: areturn

  public java.lang.Object readObject() throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #24                 // Method readObject:(Z)Ljava/lang/Object;
       5: areturn

  private java.lang.Object readObject(boolean) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifle          15
       7: aload_0
       8: getfield      #3                  // Field remaining:I
      11: invokestatic  #25                 // Method org/jboss/marshalling/Marshalling.createOptionalDataException:(I)Ljava/io/OptionalDataException;
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field remaining:I
      19: iconst_m1
      20: if_icmpne     28
      23: iconst_1
      24: invokestatic  #26                 // Method org/jboss/marshalling/Marshalling.createOptionalDataException:(Z)Ljava/io/OptionalDataException;
      27: athrow
      28: aload_0
      29: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      32: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:()I
      35: istore_2
      36: iload_2
      37: iconst_m1
      38: if_icmpeq     47
      41: iload_2
      42: bipush        53
      44: if_icmpne     57
      47: aload_0
      48: iconst_m1
      49: putfield      #3                  // Field remaining:I
      52: iconst_1
      53: invokestatic  #26                 // Method org/jboss/marshalling/Marshalling.createOptionalDataException:(Z)Ljava/io/OptionalDataException;
      56: athrow
      57: aload_0
      58: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      61: iload_2
      62: iload_1
      63: iconst_0
      64: invokevirtual #17                 // Method org/jboss/marshalling/river/RiverUnmarshaller.doReadObject:(IZZ)Ljava/lang/Object;
      67: areturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          30
       7: aload_0
       8: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      11: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:()I
      14: istore_1
      15: iload_1
      16: iconst_m1
      17: if_icmpne     22
      20: iconst_m1
      21: ireturn
      22: aload_0
      23: iload_1
      24: invokevirtual #16                 // Method readBlockHeader:(I)V
      27: goto          0
      30: aload_0
      31: getfield      #3                  // Field remaining:I
      34: iconst_m1
      35: if_icmpne     40
      38: iconst_m1
      39: ireturn
      40: aload_0
      41: dup
      42: getfield      #3                  // Field remaining:I
      45: iconst_1
      46: isub
      47: putfield      #3                  // Field remaining:I
      50: aload_0
      51: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      54: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:()I
      57: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #27                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          33
       7: aload_0
       8: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      11: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:()I
      14: istore        4
      16: iload         4
      18: iconst_m1
      19: if_icmpne     24
      22: iconst_m1
      23: ireturn
      24: aload_0
      25: iload         4
      27: invokevirtual #16                 // Method readBlockHeader:(I)V
      30: goto          0
      33: aload_0
      34: getfield      #3                  // Field remaining:I
      37: istore        4
      39: iload         4
      41: iconst_m1
      42: if_icmpne     47
      45: iconst_m1
      46: ireturn
      47: aload_0
      48: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      51: aload_1
      52: iload_2
      53: iload         4
      55: iload_3
      56: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      59: invokevirtual #29                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:([BII)I
      62: istore        5
      64: aload_0
      65: iload         4
      67: iload         5
      69: isub
      70: putfield      #3                  // Field remaining:I
      73: iload         5
      75: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          32
       7: aload_0
       8: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      11: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:()I
      14: istore_3
      15: iload_3
      16: iconst_m1
      17: if_icmpne     24
      20: ldc2_w        #30                 // long -1l
      23: lreturn
      24: aload_0
      25: iload_3
      26: invokevirtual #16                 // Method readBlockHeader:(I)V
      29: goto          0
      32: aload_0
      33: getfield      #3                  // Field remaining:I
      36: istore_3
      37: iload_3
      38: iconst_m1
      39: if_icmpne     46
      42: ldc2_w        #30                 // long -1l
      45: lreturn
      46: aload_0
      47: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      50: iload_3
      51: i2l
      52: lload_1
      53: invokestatic  #32                 // Method java/lang/Math.min:(JJ)J
      56: l2i
      57: invokevirtual #33                 // Method org/jboss/marshalling/river/RiverUnmarshaller.skipBytes:(I)I
      60: istore        4
      62: aload_0
      63: iload_3
      64: iload         4
      66: isub
      67: putfield      #3                  // Field remaining:I
      70: iload         4
      72: i2l
      73: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: aload_0
       5: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
       8: invokevirtual #34                 // Method org/jboss/marshalling/river/RiverUnmarshaller.available:()I
      11: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      14: ireturn

  public void readFully(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // Method org/jboss/marshalling/Marshalling.readFully:(Lorg/jboss/marshalling/ByteInput;[B)V
       5: return

  public void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #36                 // Method org/jboss/marshalling/Marshalling.readFully:(Lorg/jboss/marshalling/ByteInput;[BII)V
       7: return

  public int skipBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          30
       7: aload_0
       8: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      11: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverUnmarshaller.read:()I
      14: istore_2
      15: iload_2
      16: iconst_m1
      17: if_icmpne     22
      20: iconst_m1
      21: ireturn
      22: aload_0
      23: iload_2
      24: invokevirtual #16                 // Method readBlockHeader:(I)V
      27: goto          0
      30: aload_0
      31: getfield      #3                  // Field remaining:I
      34: istore_2
      35: iload_2
      36: iconst_m1
      37: if_icmpne     42
      40: iconst_m1
      41: ireturn
      42: aload_0
      43: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      46: iload_2
      47: iload_1
      48: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      51: invokevirtual #33                 // Method org/jboss/marshalling/river/RiverUnmarshaller.skipBytes:(I)I
      54: istore_3
      55: aload_0
      56: iload_2
      57: iload_3
      58: isub
      59: putfield      #3                  // Field remaining:I
      62: iload_3
      63: ireturn

  public boolean readBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          21
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      12: invokevirtual #7                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readUnsignedByte:()I
      15: invokevirtual #16                 // Method readBlockHeader:(I)V
      18: goto          0
      21: aload_0
      22: getfield      #3                  // Field remaining:I
      25: iconst_m1
      26: if_icmpne     37
      29: new           #37                 // class java/io/EOFException
      32: dup
      33: invokespecial #38                 // Method java/io/EOFException."<init>":()V
      36: athrow
      37: aload_0
      38: dup
      39: getfield      #3                  // Field remaining:I
      42: iconst_1
      43: isub
      44: putfield      #3                  // Field remaining:I
      47: aload_0
      48: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      51: invokevirtual #39                 // Method org/jboss/marshalling/river/RiverUnmarshaller.readBoolean:()Z
      54: ireturn

  public byte readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          21
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      12: invokevirtual #7                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readUnsignedByte:()I
      15: invokevirtual #16                 // Method readBlockHeader:(I)V
      18: goto          0
      21: aload_0
      22: getfield      #3                  // Field remaining:I
      25: iconst_m1
      26: if_icmpne     37
      29: new           #37                 // class java/io/EOFException
      32: dup
      33: invokespecial #38                 // Method java/io/EOFException."<init>":()V
      36: athrow
      37: aload_0
      38: dup
      39: getfield      #3                  // Field remaining:I
      42: iconst_1
      43: isub
      44: putfield      #3                  // Field remaining:I
      47: aload_0
      48: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      51: invokevirtual #40                 // Method org/jboss/marshalling/river/RiverUnmarshaller.readByte:()B
      54: ireturn

  public int readUnsignedByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: ifne          21
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      12: invokevirtual #7                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readUnsignedByte:()I
      15: invokevirtual #16                 // Method readBlockHeader:(I)V
      18: goto          0
      21: aload_0
      22: getfield      #3                  // Field remaining:I
      25: iconst_m1
      26: if_icmpne     37
      29: new           #37                 // class java/io/EOFException
      32: dup
      33: invokespecial #38                 // Method java/io/EOFException."<init>":()V
      36: athrow
      37: aload_0
      38: dup
      39: getfield      #3                  // Field remaining:I
      42: iconst_1
      43: isub
      44: putfield      #3                  // Field remaining:I
      47: aload_0
      48: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      51: invokevirtual #7                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readUnsignedByte:()I
      54: ireturn

  public short readShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: iconst_2
       5: if_icmpge     22
       8: aload_0
       9: invokevirtual #41                 // Method readUnsignedByte:()I
      12: bipush        8
      14: ishl
      15: aload_0
      16: invokevirtual #41                 // Method readUnsignedByte:()I
      19: ior
      20: i2s
      21: ireturn
      22: aload_0
      23: dup
      24: getfield      #3                  // Field remaining:I
      27: iconst_2
      28: isub
      29: putfield      #3                  // Field remaining:I
      32: aload_0
      33: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      36: invokevirtual #42                 // Method org/jboss/marshalling/river/RiverUnmarshaller.readShort:()S
      39: ireturn

  public int readUnsignedShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: iconst_2
       5: if_icmpge     21
       8: aload_0
       9: invokevirtual #41                 // Method readUnsignedByte:()I
      12: bipush        8
      14: ishl
      15: aload_0
      16: invokevirtual #41                 // Method readUnsignedByte:()I
      19: ior
      20: ireturn
      21: aload_0
      22: dup
      23: getfield      #3                  // Field remaining:I
      26: iconst_2
      27: isub
      28: putfield      #3                  // Field remaining:I
      31: aload_0
      32: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      35: invokevirtual #8                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readUnsignedShort:()I
      38: ireturn

  public char readChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: iconst_2
       5: if_icmpge     22
       8: aload_0
       9: invokevirtual #41                 // Method readUnsignedByte:()I
      12: bipush        8
      14: ishl
      15: aload_0
      16: invokevirtual #41                 // Method readUnsignedByte:()I
      19: ior
      20: i2c
      21: ireturn
      22: aload_0
      23: dup
      24: getfield      #3                  // Field remaining:I
      27: iconst_2
      28: isub
      29: putfield      #3                  // Field remaining:I
      32: aload_0
      33: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      36: invokevirtual #43                 // Method org/jboss/marshalling/river/RiverUnmarshaller.readChar:()C
      39: ireturn

  public int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: iconst_4
       5: if_icmpge     37
       8: aload_0
       9: invokevirtual #41                 // Method readUnsignedByte:()I
      12: bipush        24
      14: ishl
      15: aload_0
      16: invokevirtual #41                 // Method readUnsignedByte:()I
      19: bipush        16
      21: ishl
      22: ior
      23: aload_0
      24: invokevirtual #41                 // Method readUnsignedByte:()I
      27: bipush        8
      29: ishl
      30: ior
      31: aload_0
      32: invokevirtual #41                 // Method readUnsignedByte:()I
      35: ior
      36: ireturn
      37: aload_0
      38: dup
      39: getfield      #3                  // Field remaining:I
      42: iconst_4
      43: isub
      44: putfield      #3                  // Field remaining:I
      47: aload_0
      48: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      51: invokevirtual #9                  // Method org/jboss/marshalling/river/RiverUnmarshaller.readInt:()I
      54: ireturn

  public long readLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field remaining:I
       4: bipush        8
       6: if_icmpge     78
       9: aload_0
      10: invokevirtual #41                 // Method readUnsignedByte:()I
      13: i2l
      14: bipush        56
      16: lshl
      17: aload_0
      18: invokevirtual #41                 // Method readUnsignedByte:()I
      21: i2l
      22: bipush        48
      24: lshl
      25: lor
      26: aload_0
      27: invokevirtual #41                 // Method readUnsignedByte:()I
      30: i2l
      31: bipush        40
      33: lshl
      34: lor
      35: aload_0
      36: invokevirtual #41                 // Method readUnsignedByte:()I
      39: i2l
      40: bipush        32
      42: lshl
      43: lor
      44: aload_0
      45: invokevirtual #41                 // Method readUnsignedByte:()I
      48: i2l
      49: bipush        24
      51: lshl
      52: lor
      53: aload_0
      54: invokevirtual #41                 // Method readUnsignedByte:()I
      57: i2l
      58: bipush        16
      60: lshl
      61: lor
      62: aload_0
      63: invokevirtual #41                 // Method readUnsignedByte:()I
      66: i2l
      67: bipush        8
      69: lshl
      70: lor
      71: aload_0
      72: invokevirtual #41                 // Method readUnsignedByte:()I
      75: i2l
      76: lor
      77: lreturn
      78: aload_0
      79: dup
      80: getfield      #3                  // Field remaining:I
      83: bipush        8
      85: isub
      86: putfield      #3                  // Field remaining:I
      89: aload_0
      90: getfield      #2                  // Field riverUnmarshaller:Lorg/jboss/marshalling/river/RiverUnmarshaller;
      93: invokevirtual #44                 // Method org/jboss/marshalling/river/RiverUnmarshaller.readLong:()J
      96: lreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method readInt:()I
       4: invokestatic  #46                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method readLong:()J
       4: invokestatic  #48                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: new           #49                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #50                 // String readLine() is deprecated anyway!
       6: invokespecial #51                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String readUTF() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method readInt:()I
       4: istore_1
       5: iload_1
       6: ifge          19
       9: new           #10                 // class java/io/StreamCorruptedException
      12: dup
      13: ldc           #52                 // String Invalid string length
      15: invokespecial #12                 // Method java/io/StreamCorruptedException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: iload_1
      21: invokestatic  #53                 // Method org/jboss/marshalling/UTFUtils.readUTFBytes:(Lorg/jboss/marshalling/ByteInput;I)Ljava/lang/String;
      24: areturn

  public void clearInstanceCache() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #54                 // String clearInstanceCache() may not be called in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void clearClassCache() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #55                 // String clearClassCache() may not be called in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void start(org.jboss.marshalling.ByteInput) throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #56                 // String start() may not be called in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void finish() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #57                 // String finish() may not be called in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void close() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #58                 // String close() may not be called in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <T> T readObject(java.lang.Class<T>) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #24                 // Method readObject:(Z)Ljava/lang/Object;
       5: astore_2
       6: aload_1
       7: aload_2
       8: invokevirtual #59                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn
      12: astore_3
      13: aload_3
      14: aload_1
      15: aload_2
      16: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokestatic  #62                 // Method wrongType:(Ljava/lang/ClassCastException;Ljava/lang/Class;Ljava/lang/Class;)Ljava/io/InvalidObjectException;
      22: athrow
    Exception table:
       from    to  target type
           6    11    12   Class java/lang/ClassCastException

  public <T> T readObjectUnshared(java.lang.Class<T>) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #24                 // Method readObject:(Z)Ljava/lang/Object;
       5: astore_2
       6: aload_1
       7: aload_2
       8: invokevirtual #59                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn
      12: astore_3
      13: aload_3
      14: aload_1
      15: aload_2
      16: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokestatic  #62                 // Method wrongType:(Ljava/lang/ClassCastException;Ljava/lang/Class;Ljava/lang/Class;)Ljava/io/InvalidObjectException;
      22: athrow
    Exception table:
       from    to  target type
           6    11    12   Class java/lang/ClassCastException

  private static java.io.InvalidObjectException wrongType(java.lang.ClassCastException, java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: new           #63                 // class java/io/InvalidObjectException
       3: dup
       4: new           #18                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #64                 // String Object is of the wrong type (expected
      13: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #66                 // String , got
      22: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #67                 // String )
      31: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #68                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      40: astore_3
      41: aload_3
      42: aload_0
      43: invokevirtual #69                 // Method java/io/InvalidObjectException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      46: pop
      47: aload_3
      48: areturn
}
