Compiled from "ByteBufferInput.java"
public class org.jboss.marshalling.ByteBufferInput extends java.io.InputStream implements org.jboss.marshalling.ByteInput {
  private final java.nio.ByteBuffer buffer;

  public org.jboss.marshalling.ByteBufferInput(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
       9: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #3                  // Method java/nio/ByteBuffer.get:()B
       7: sipush        255
      10: iand
      11: ireturn
      12: astore_1
      13: iconst_m1
      14: ireturn
    Exception table:
       from    to  target type
           0    11    12   Class java/nio/BufferUnderflowException

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #5                  // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
      10: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      13: istore        4
      15: iload         4
      17: ifne          22
      20: iconst_m1
      21: ireturn
      22: iload_3
      23: iload         4
      25: invokestatic  #7                  // Method java/lang/Math.min:(II)I
      28: istore        5
      30: aload_0
      31: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
      34: aload_1
      35: iload_2
      36: iload         5
      38: invokevirtual #8                  // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      41: pop
      42: iload         5
      44: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
       7: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          39
       6: aload_0
       7: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
      10: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      13: i2l
      14: lload_1
      15: invokestatic  #9                  // Method java/lang/Math.min:(JJ)J
      18: lstore_3
      19: aload_0
      20: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
      23: aload_0
      24: getfield      #2                  // Field buffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #10                 // Method java/nio/ByteBuffer.position:()I
      30: lload_3
      31: l2i
      32: iadd
      33: invokevirtual #11                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: lload_3
      38: lreturn
      39: lconst_0
      40: lreturn

  public void close() throws java.io.IOException;
    Code:
       0: return
}
