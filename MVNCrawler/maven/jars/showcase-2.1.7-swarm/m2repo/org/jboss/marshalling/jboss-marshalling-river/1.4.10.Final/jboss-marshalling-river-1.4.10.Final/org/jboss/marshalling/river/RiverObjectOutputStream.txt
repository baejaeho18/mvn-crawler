Compiled from "RiverObjectOutputStream.java"
public class org.jboss.marshalling.river.RiverObjectOutputStream extends org.jboss.marshalling.MarshallerObjectOutputStream {
  private static final int OFF;

  private static final int UNWRITTEN_FIELDS;

  private static final int ON;

  private final org.jboss.marshalling.river.RiverMarshaller marshaller;

  private int state;

  private org.jboss.marshalling.river.RiverPutField putField;

  private org.jboss.marshalling.reflect.SerializableClass serializableClass;

  private java.lang.Object current;

  protected org.jboss.marshalling.river.RiverObjectOutputStream(org.jboss.marshalling.Marshaller, org.jboss.marshalling.river.RiverMarshaller) throws java.io.IOException, java.lang.SecurityException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/marshalling/MarshallerObjectOutputStream."<init>":(Lorg/jboss/marshalling/Marshaller;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field marshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      10: return

  private boolean compareAndSetState(int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iload_1
       5: if_icmpne     15
       8: aload_0
       9: iload_2
      10: putfield      #3                  // Field state:I
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  private int getAndSetState(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #3                  // Field state:I
      10: iload_2
      11: ireturn
      12: astore_3
      13: aload_0
      14: iload_1
      15: putfield      #3                  // Field state:I
      18: aload_3
      19: athrow
    Exception table:
       from    to  target type
           0     5    12   any
          12    13    12   any

  public void writeFields() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #5                  // class java/io/NotActiveException
      12: dup
      13: ldc           #6                  // String no current PutField object
      15: invokespecial #7                  // Method java/io/NotActiveException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: iconst_1
      21: iconst_2
      22: invokespecial #8                  // Method compareAndSetState:(II)Z
      25: ifne          38
      28: new           #5                  // class java/io/NotActiveException
      31: dup
      32: ldc           #9                  // String writeFields() may only be called when the fields have not yet been written
      34: invokespecial #7                  // Method java/io/NotActiveException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aconst_null
      40: putfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
      43: aload_1
      44: aload_0
      45: getfield      #2                  // Field marshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      48: invokevirtual #10                 // Method org/jboss/marshalling/river/RiverPutField.write:(Lorg/jboss/marshalling/Marshaller;)V
      51: return

  public java.io.ObjectOutputStream$PutField putFields() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: ifne          17
       7: new           #5                  // class java/io/NotActiveException
      10: dup
      11: ldc           #11                 // String No object is currently being serialized
      13: invokespecial #7                  // Method java/io/NotActiveException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
      21: ifnonnull     283
      24: aload_0
      25: getfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      28: invokevirtual #13                 // Method org/jboss/marshalling/reflect/SerializableClass.getFields:()[Lorg/jboss/marshalling/reflect/SerializableField;
      31: astore_1
      32: aload_1
      33: arraylength
      34: istore        4
      36: iload         4
      38: anewarray     #14                 // class org/jboss/marshalling/util/FieldPutter
      41: astore_2
      42: iload         4
      44: anewarray     #15                 // class java/lang/String
      47: astore_3
      48: iconst_0
      49: istore        5
      51: iload         5
      53: iload         4
      55: if_icmpge     270
      58: aload_1
      59: iload         5
      61: aaload
      62: astore        6
      64: aload_3
      65: iload         5
      67: aload         6
      69: invokevirtual #16                 // Method org/jboss/marshalling/reflect/SerializableField.getName:()Ljava/lang/String;
      72: aastore
      73: getstatic     #17                 // Field org/jboss/marshalling/river/RiverObjectOutputStream$1.$SwitchMap$org$jboss$marshalling$util$Kind:[I
      76: aload         6
      78: invokevirtual #18                 // Method org/jboss/marshalling/reflect/SerializableField.getKind:()Lorg/jboss/marshalling/util/Kind;
      81: invokevirtual #19                 // Method org/jboss/marshalling/util/Kind.ordinal:()I
      84: iaload
      85: tableswitch   { // 1 to 9
                     1: 136
                     2: 150
                     3: 164
                     4: 178
                     5: 192
                     6: 206
                     7: 220
                     8: 234
                     9: 253
               default: 264
          }
     136: aload_2
     137: iload         5
     139: new           #20                 // class org/jboss/marshalling/util/BooleanFieldPutter
     142: dup
     143: invokespecial #21                 // Method org/jboss/marshalling/util/BooleanFieldPutter."<init>":()V
     146: aastore
     147: goto          264
     150: aload_2
     151: iload         5
     153: new           #22                 // class org/jboss/marshalling/util/ByteFieldPutter
     156: dup
     157: invokespecial #23                 // Method org/jboss/marshalling/util/ByteFieldPutter."<init>":()V
     160: aastore
     161: goto          264
     164: aload_2
     165: iload         5
     167: new           #24                 // class org/jboss/marshalling/util/CharFieldPutter
     170: dup
     171: invokespecial #25                 // Method org/jboss/marshalling/util/CharFieldPutter."<init>":()V
     174: aastore
     175: goto          264
     178: aload_2
     179: iload         5
     181: new           #26                 // class org/jboss/marshalling/util/DoubleFieldPutter
     184: dup
     185: invokespecial #27                 // Method org/jboss/marshalling/util/DoubleFieldPutter."<init>":()V
     188: aastore
     189: goto          264
     192: aload_2
     193: iload         5
     195: new           #28                 // class org/jboss/marshalling/util/FloatFieldPutter
     198: dup
     199: invokespecial #29                 // Method org/jboss/marshalling/util/FloatFieldPutter."<init>":()V
     202: aastore
     203: goto          264
     206: aload_2
     207: iload         5
     209: new           #30                 // class org/jboss/marshalling/util/IntFieldPutter
     212: dup
     213: invokespecial #31                 // Method org/jboss/marshalling/util/IntFieldPutter."<init>":()V
     216: aastore
     217: goto          264
     220: aload_2
     221: iload         5
     223: new           #32                 // class org/jboss/marshalling/util/LongFieldPutter
     226: dup
     227: invokespecial #33                 // Method org/jboss/marshalling/util/LongFieldPutter."<init>":()V
     230: aastore
     231: goto          264
     234: aload_2
     235: iload         5
     237: new           #34                 // class org/jboss/marshalling/util/ObjectFieldPutter
     240: dup
     241: aload         6
     243: invokevirtual #35                 // Method org/jboss/marshalling/reflect/SerializableField.isUnshared:()Z
     246: invokespecial #36                 // Method org/jboss/marshalling/util/ObjectFieldPutter."<init>":(Z)V
     249: aastore
     250: goto          264
     253: aload_2
     254: iload         5
     256: new           #37                 // class org/jboss/marshalling/util/ShortFieldPutter
     259: dup
     260: invokespecial #38                 // Method org/jboss/marshalling/util/ShortFieldPutter."<init>":()V
     263: aastore
     264: iinc          5, 1
     267: goto          51
     270: aload_0
     271: new           #39                 // class org/jboss/marshalling/river/RiverPutField
     274: dup
     275: aload_2
     276: aload_3
     277: invokespecial #40                 // Method org/jboss/marshalling/river/RiverPutField."<init>":([Lorg/jboss/marshalling/util/FieldPutter;[Ljava/lang/String;)V
     280: putfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
     283: aload_0
     284: getfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
     287: areturn

  protected org.jboss.marshalling.reflect.SerializableClass swapClass(org.jboss.marshalling.reflect.SerializableClass);
    Code:
       0: aload_0
       1: getfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      10: aload_2
      11: areturn
      12: astore_3
      13: aload_0
      14: aload_1
      15: putfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      18: aload_3
      19: athrow
    Exception table:
       from    to  target type
           0     5    12   any
          12    13    12   any

  protected java.lang.Object swapCurrent(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #41                 // Field current:Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #41                 // Field current:Ljava/lang/Object;
      10: aload_2
      11: areturn
      12: astore_3
      13: aload_0
      14: aload_1
      15: putfield      #41                 // Field current:Ljava/lang/Object;
      18: aload_3
      19: athrow
    Exception table:
       from    to  target type
           0     5    12   any
          12    13    12   any

  public void defaultWriteObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_2
       3: invokespecial #8                  // Method compareAndSetState:(II)Z
       6: ifne          19
       9: new           #5                  // class java/io/NotActiveException
      12: dup
      13: ldc           #9                  // String writeFields() may only be called when the fields have not yet been written
      15: invokespecial #7                  // Method java/io/NotActiveException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #2                  // Field marshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      23: aload_0
      24: getfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      27: aload_0
      28: getfield      #41                 // Field current:Ljava/lang/Object;
      31: invokevirtual #42                 // Method org/jboss/marshalling/river/RiverMarshaller.doWriteFields:(Lorg/jboss/marshalling/reflect/SerializableClass;Ljava/lang/Object;)V
      34: aload_0
      35: aconst_null
      36: putfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
      39: aload_0
      40: aconst_null
      41: putfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      44: aload_0
      45: aconst_null
      46: putfield      #41                 // Field current:Ljava/lang/Object;
      49: goto          70
      52: astore_1
      53: aload_0
      54: aconst_null
      55: putfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
      58: aload_0
      59: aconst_null
      60: putfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      63: aload_0
      64: aconst_null
      65: putfield      #41                 // Field current:Ljava/lang/Object;
      68: aload_1
      69: athrow
      70: return
    Exception table:
       from    to  target type
          19    34    52   any
          52    53    52   any

  protected int start() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #43                 // Method getAndSetState:(I)I
       5: ireturn

  protected void writeObjectOverride(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: aload_1
       6: invokespecial #45                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeObjectOverride:(Ljava/lang/Object;)V
       9: return

  public void writeUnshared(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: aload_1
       6: invokespecial #46                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeUnshared:(Ljava/lang/Object;)V
       9: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: iload_1
       6: invokespecial #47                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.write:(I)V
       9: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: aload_1
       6: invokespecial #48                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.write:([B)V
       9: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #49                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.write:([BII)V
      11: return

  public void writeBoolean(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: iload_1
       6: invokespecial #50                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeBoolean:(Z)V
       9: return

  public void writeByte(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: iload_1
       6: invokespecial #51                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeByte:(I)V
       9: return

  public void writeShort(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: iload_1
       6: invokespecial #52                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeShort:(I)V
       9: return

  public void writeChar(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: iload_1
       6: invokespecial #53                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeChar:(I)V
       9: return

  public void writeInt(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: iload_1
       6: invokespecial #54                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeInt:(I)V
       9: return

  public void writeLong(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: lload_1
       6: invokespecial #55                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeLong:(J)V
       9: return

  public void writeFloat(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: fload_1
       6: invokespecial #56                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeFloat:(F)V
       9: return

  public void writeDouble(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: dload_1
       6: invokespecial #57                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeDouble:(D)V
       9: return

  public void writeBytes(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: aload_1
       6: invokespecial #58                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeBytes:(Ljava/lang/String;)V
       9: return

  public void writeChars(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: aload_1
       6: invokespecial #59                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeChars:(Ljava/lang/String;)V
       9: return

  public void writeUTF(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method checkState:()V
       4: aload_0
       5: aload_1
       6: invokespecial #60                 // Method org/jboss/marshalling/MarshallerObjectOutputStream.writeUTF:(Ljava/lang/String;)V
       9: return

  protected void finish(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_1
       5: if_icmpne     19
       8: aload_0
       9: getfield      #2                  // Field marshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      12: aload_0
      13: getfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      16: invokevirtual #61                 // Method org/jboss/marshalling/river/RiverMarshaller.doWriteEmptyFields:(Lorg/jboss/marshalling/reflect/SerializableClass;)V
      19: aload_0
      20: iload_1
      21: putfield      #3                  // Field state:I
      24: goto          35
      27: astore_2
      28: aload_0
      29: iload_1
      30: putfield      #3                  // Field state:I
      33: aload_2
      34: athrow
      35: return
    Exception table:
       from    to  target type
           0    19    27   any
          27    28    27   any

  private void checkState() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: if_icmpne     11
      10: return
      11: iload_1
      12: ifne          25
      15: new           #5                  // class java/io/NotActiveException
      18: dup
      19: ldc           #62                 // String Object stream not active
      21: invokespecial #7                  // Method java/io/NotActiveException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: iload_1
      26: iconst_1
      27: if_icmpne     47
      30: aload_0
      31: iconst_2
      32: putfield      #3                  // Field state:I
      35: aload_0
      36: getfield      #2                  // Field marshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      39: aload_0
      40: getfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      43: invokevirtual #61                 // Method org/jboss/marshalling/river/RiverMarshaller.doWriteEmptyFields:(Lorg/jboss/marshalling/reflect/SerializableClass;)V
      46: return
      47: new           #63                 // class java/lang/IllegalStateException
      50: dup
      51: ldc           #64                 // String Unknown state
      53: invokespecial #65                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow

  protected void fullReset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field state:I
       5: aload_0
       6: aconst_null
       7: putfield      #4                  // Field putField:Lorg/jboss/marshalling/river/RiverPutField;
      10: aload_0
      11: aconst_null
      12: putfield      #12                 // Field serializableClass:Lorg/jboss/marshalling/reflect/SerializableClass;
      15: aload_0
      16: aconst_null
      17: putfield      #41                 // Field current:Ljava/lang/Object;
      20: return
}
