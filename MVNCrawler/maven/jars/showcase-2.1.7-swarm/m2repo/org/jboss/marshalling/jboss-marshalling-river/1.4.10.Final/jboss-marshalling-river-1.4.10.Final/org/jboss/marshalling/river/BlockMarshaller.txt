Compiled from "BlockMarshaller.java"
public final class org.jboss.marshalling.river.BlockMarshaller implements org.jboss.marshalling.Marshaller {
  private final org.jboss.marshalling.river.RiverMarshaller riverMarshaller;

  private final byte[] buffer;

  private int position;

  org.jboss.marshalling.river.BlockMarshaller(org.jboss.marshalling.river.RiverMarshaller, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
       9: aload_0
      10: iload_2
      11: newarray       byte
      13: putfield      #3                  // Field buffer:[B
      16: return

  public void start(org.jboss.marshalling.ByteOutput) throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #5                  // String start() not allowed in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void clearInstanceCache() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #7                  // String clearInstanceCache() not allowed in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void clearClassCache() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #8                  // String clearClassCache() not allowed in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void finish() throws java.io.IOException;
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: ldc           #9                  // String finish() not allowed in this context
       6: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeObject(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #10                 // Method doWriteObject:(Ljava/lang/Object;Z)V
       6: return

  public void writeObjectUnshared(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #10                 // Method doWriteObject:(Ljava/lang/Object;Z)V
       6: return

  private void doWriteObject(java.lang.Object, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method flush:()V
       4: aload_0
       5: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
       8: aload_1
       9: iload_2
      10: invokevirtual #12                 // Method org/jboss/marshalling/river/RiverMarshaller.doWriteObject:(Ljava/lang/Object;Z)V
      13: aload_0
      14: invokevirtual #11                 // Method flush:()V
      17: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #13                 // Field position:I
      11: isub
      12: istore_3
      13: iload_3
      14: ifne          34
      17: aload_0
      18: invokevirtual #11                 // Method flush:()V
      21: aload_2
      22: iconst_0
      23: iload_1
      24: i2b
      25: bastore
      26: aload_0
      27: iconst_1
      28: putfield      #13                 // Field position:I
      31: goto          49
      34: aload_2
      35: aload_0
      36: dup
      37: getfield      #13                 // Field position:I
      40: dup_x1
      41: iconst_1
      42: iadd
      43: putfield      #13                 // Field position:I
      46: iload_1
      47: i2b
      48: bastore
      49: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #14                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     6
       5: return
       6: aload_0
       7: getfield      #3                  // Field buffer:[B
      10: arraylength
      11: istore        4
      13: aload_0
      14: getfield      #13                 // Field position:I
      17: istore        5
      19: iload_3
      20: iload         4
      22: iload         5
      24: isub
      25: if_icmpgt     36
      28: iload_3
      29: iload         4
      31: iconst_1
      32: ishr
      33: if_icmple     143
      36: aload_0
      37: invokevirtual #11                 // Method flush:()V
      40: iload_3
      41: sipush        256
      44: if_icmpge     77
      47: aload_0
      48: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      51: bipush        50
      53: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverMarshaller.write:(I)V
      56: aload_0
      57: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      60: iload_3
      61: invokevirtual #16                 // Method org/jboss/marshalling/river/RiverMarshaller.writeByte:(I)V
      64: aload_0
      65: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      68: aload_1
      69: iload_2
      70: iload_3
      71: invokevirtual #17                 // Method org/jboss/marshalling/river/RiverMarshaller.write:([BII)V
      74: goto          163
      77: iload_3
      78: ldc           #18                 // int 65536
      80: if_icmpge     113
      83: aload_0
      84: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      87: bipush        51
      89: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverMarshaller.write:(I)V
      92: aload_0
      93: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      96: iload_3
      97: invokevirtual #19                 // Method org/jboss/marshalling/river/RiverMarshaller.writeShort:(I)V
     100: aload_0
     101: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
     104: aload_1
     105: iload_2
     106: iload_3
     107: invokevirtual #17                 // Method org/jboss/marshalling/river/RiverMarshaller.write:([BII)V
     110: goto          163
     113: aload_0
     114: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
     117: bipush        52
     119: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverMarshaller.write:(I)V
     122: aload_0
     123: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
     126: iload_3
     127: invokevirtual #20                 // Method org/jboss/marshalling/river/RiverMarshaller.writeInt:(I)V
     130: aload_0
     131: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
     134: aload_1
     135: iload_2
     136: iload_3
     137: invokevirtual #17                 // Method org/jboss/marshalling/river/RiverMarshaller.write:([BII)V
     140: goto          163
     143: aload_1
     144: iload_2
     145: aload_0
     146: getfield      #3                  // Field buffer:[B
     149: iload         5
     151: iload_3
     152: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     155: aload_0
     156: iload         5
     158: iload_3
     159: iadd
     160: putfield      #13                 // Field position:I
     163: return

  public void writeBoolean(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #13                 // Field position:I
      11: isub
      12: istore_3
      13: iload_3
      14: ifne          42
      17: aload_0
      18: invokevirtual #11                 // Method flush:()V
      21: aload_2
      22: iconst_0
      23: iload_1
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: i2b
      33: bastore
      34: aload_0
      35: iconst_1
      36: putfield      #13                 // Field position:I
      39: goto          65
      42: aload_2
      43: aload_0
      44: dup
      45: getfield      #13                 // Field position:I
      48: dup_x1
      49: iconst_1
      50: iadd
      51: putfield      #13                 // Field position:I
      54: iload_1
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: i2b
      64: bastore
      65: return

  public void writeByte(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #13                 // Field position:I
      11: isub
      12: istore_3
      13: iload_3
      14: ifne          34
      17: aload_0
      18: invokevirtual #11                 // Method flush:()V
      21: aload_2
      22: iconst_0
      23: iload_1
      24: i2b
      25: bastore
      26: aload_0
      27: iconst_1
      28: putfield      #13                 // Field position:I
      31: goto          49
      34: aload_2
      35: aload_0
      36: dup
      37: getfield      #13                 // Field position:I
      40: dup_x1
      41: iconst_1
      42: iadd
      43: putfield      #13                 // Field position:I
      46: iload_1
      47: i2b
      48: bastore
      49: return

  public void writeShort(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #13                 // Field position:I
      11: isub
      12: istore_3
      13: iload_3
      14: iconst_2
      15: if_icmpge     43
      18: aload_0
      19: invokevirtual #11                 // Method flush:()V
      22: aload_2
      23: iconst_0
      24: iload_1
      25: bipush        8
      27: ishr
      28: i2b
      29: bastore
      30: aload_2
      31: iconst_1
      32: iload_1
      33: i2b
      34: bastore
      35: aload_0
      36: iconst_2
      37: putfield      #13                 // Field position:I
      40: goto          74
      43: aload_0
      44: getfield      #13                 // Field position:I
      47: istore        4
      49: aload_0
      50: iload         4
      52: iconst_2
      53: iadd
      54: putfield      #13                 // Field position:I
      57: aload_2
      58: iload         4
      60: iload_1
      61: bipush        8
      63: ishr
      64: i2b
      65: bastore
      66: aload_2
      67: iload         4
      69: iconst_1
      70: iadd
      71: iload_1
      72: i2b
      73: bastore
      74: return

  public void writeChar(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #13                 // Field position:I
      11: isub
      12: istore_3
      13: iload_3
      14: iconst_2
      15: if_icmpge     43
      18: aload_0
      19: invokevirtual #11                 // Method flush:()V
      22: aload_2
      23: iconst_0
      24: iload_1
      25: bipush        8
      27: ishr
      28: i2b
      29: bastore
      30: aload_2
      31: iconst_1
      32: iload_1
      33: i2b
      34: bastore
      35: aload_0
      36: iconst_2
      37: putfield      #13                 // Field position:I
      40: goto          74
      43: aload_0
      44: getfield      #13                 // Field position:I
      47: istore        4
      49: aload_0
      50: iload         4
      52: iconst_2
      53: iadd
      54: putfield      #13                 // Field position:I
      57: aload_2
      58: iload         4
      60: iload_1
      61: bipush        8
      63: ishr
      64: i2b
      65: bastore
      66: aload_2
      67: iload         4
      69: iconst_1
      70: iadd
      71: iload_1
      72: i2b
      73: bastore
      74: return

  public void writeInt(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_0
       8: getfield      #13                 // Field position:I
      11: isub
      12: istore_3
      13: iload_3
      14: iconst_4
      15: if_icmpge     59
      18: aload_0
      19: invokevirtual #11                 // Method flush:()V
      22: aload_2
      23: iconst_0
      24: iload_1
      25: bipush        24
      27: ishr
      28: i2b
      29: bastore
      30: aload_2
      31: iconst_1
      32: iload_1
      33: bipush        16
      35: ishr
      36: i2b
      37: bastore
      38: aload_2
      39: iconst_2
      40: iload_1
      41: bipush        8
      43: ishr
      44: i2b
      45: bastore
      46: aload_2
      47: iconst_3
      48: iload_1
      49: i2b
      50: bastore
      51: aload_0
      52: iconst_4
      53: putfield      #13                 // Field position:I
      56: goto          112
      59: aload_0
      60: getfield      #13                 // Field position:I
      63: istore        4
      65: aload_0
      66: iload         4
      68: iconst_4
      69: iadd
      70: putfield      #13                 // Field position:I
      73: aload_2
      74: iload         4
      76: iload_1
      77: bipush        24
      79: ishr
      80: i2b
      81: bastore
      82: aload_2
      83: iload         4
      85: iconst_1
      86: iadd
      87: iload_1
      88: bipush        16
      90: ishr
      91: i2b
      92: bastore
      93: aload_2
      94: iload         4
      96: iconst_2
      97: iadd
      98: iload_1
      99: bipush        8
     101: ishr
     102: i2b
     103: bastore
     104: aload_2
     105: iload         4
     107: iconst_3
     108: iadd
     109: iload_1
     110: i2b
     111: bastore
     112: return

  public void writeLong(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: astore_3
       5: aload_3
       6: arraylength
       7: aload_0
       8: getfield      #13                 // Field position:I
      11: isub
      12: istore        4
      14: iload         4
      16: bipush        8
      18: if_icmpge     105
      21: aload_0
      22: invokevirtual #11                 // Method flush:()V
      25: aload_3
      26: iconst_0
      27: lload_1
      28: bipush        56
      30: lshr
      31: l2i
      32: i2b
      33: bastore
      34: aload_3
      35: iconst_1
      36: lload_1
      37: bipush        48
      39: lshr
      40: l2i
      41: i2b
      42: bastore
      43: aload_3
      44: iconst_2
      45: lload_1
      46: bipush        40
      48: lshr
      49: l2i
      50: i2b
      51: bastore
      52: aload_3
      53: iconst_3
      54: lload_1
      55: bipush        32
      57: lshr
      58: l2i
      59: i2b
      60: bastore
      61: aload_3
      62: iconst_4
      63: lload_1
      64: bipush        24
      66: lshr
      67: l2i
      68: i2b
      69: bastore
      70: aload_3
      71: iconst_5
      72: lload_1
      73: bipush        16
      75: lshr
      76: l2i
      77: i2b
      78: bastore
      79: aload_3
      80: bipush        6
      82: lload_1
      83: bipush        8
      85: lshr
      86: l2i
      87: i2b
      88: bastore
      89: aload_3
      90: bipush        7
      92: lload_1
      93: l2i
      94: i2b
      95: bastore
      96: aload_0
      97: bipush        8
      99: putfield      #13                 // Field position:I
     102: goto          213
     105: aload_0
     106: getfield      #13                 // Field position:I
     109: istore        5
     111: aload_0
     112: iload         5
     114: bipush        8
     116: iadd
     117: putfield      #13                 // Field position:I
     120: aload_3
     121: iload         5
     123: lload_1
     124: bipush        56
     126: lshr
     127: l2i
     128: i2b
     129: bastore
     130: aload_3
     131: iload         5
     133: iconst_1
     134: iadd
     135: lload_1
     136: bipush        48
     138: lshr
     139: l2i
     140: i2b
     141: bastore
     142: aload_3
     143: iload         5
     145: iconst_2
     146: iadd
     147: lload_1
     148: bipush        40
     150: lshr
     151: l2i
     152: i2b
     153: bastore
     154: aload_3
     155: iload         5
     157: iconst_3
     158: iadd
     159: lload_1
     160: bipush        32
     162: lshr
     163: l2i
     164: i2b
     165: bastore
     166: aload_3
     167: iload         5
     169: iconst_4
     170: iadd
     171: lload_1
     172: bipush        24
     174: lshr
     175: l2i
     176: i2b
     177: bastore
     178: aload_3
     179: iload         5
     181: iconst_5
     182: iadd
     183: lload_1
     184: bipush        16
     186: lshr
     187: l2i
     188: i2b
     189: bastore
     190: aload_3
     191: iload         5
     193: bipush        6
     195: iadd
     196: lload_1
     197: bipush        8
     199: lshr
     200: l2i
     201: i2b
     202: bastore
     203: aload_3
     204: iload         5
     206: bipush        7
     208: iadd
     209: lload_1
     210: l2i
     211: i2b
     212: bastore
     213: return

  public void writeFloat(float) throws java.io.IOException;
    Code:
       0: fload_1
       1: invokestatic  #22                 // Method java/lang/Float.floatToIntBits:(F)I
       4: istore_2
       5: aload_0
       6: getfield      #3                  // Field buffer:[B
       9: astore_3
      10: aload_3
      11: arraylength
      12: aload_0
      13: getfield      #13                 // Field position:I
      16: isub
      17: istore        4
      19: iload         4
      21: iconst_4
      22: if_icmpge     66
      25: aload_0
      26: invokevirtual #11                 // Method flush:()V
      29: aload_3
      30: iconst_0
      31: iload_2
      32: bipush        24
      34: ishr
      35: i2b
      36: bastore
      37: aload_3
      38: iconst_1
      39: iload_2
      40: bipush        16
      42: ishr
      43: i2b
      44: bastore
      45: aload_3
      46: iconst_2
      47: iload_2
      48: bipush        8
      50: ishr
      51: i2b
      52: bastore
      53: aload_3
      54: iconst_3
      55: iload_2
      56: i2b
      57: bastore
      58: aload_0
      59: iconst_4
      60: putfield      #13                 // Field position:I
      63: goto          119
      66: aload_0
      67: getfield      #13                 // Field position:I
      70: istore        5
      72: aload_0
      73: iload         5
      75: iconst_4
      76: iadd
      77: putfield      #13                 // Field position:I
      80: aload_3
      81: iload         5
      83: iload_2
      84: bipush        24
      86: ishr
      87: i2b
      88: bastore
      89: aload_3
      90: iload         5
      92: iconst_1
      93: iadd
      94: iload_2
      95: bipush        16
      97: ishr
      98: i2b
      99: bastore
     100: aload_3
     101: iload         5
     103: iconst_2
     104: iadd
     105: iload_2
     106: bipush        8
     108: ishr
     109: i2b
     110: bastore
     111: aload_3
     112: iload         5
     114: iconst_3
     115: iadd
     116: iload_2
     117: i2b
     118: bastore
     119: return

  public void writeDouble(double) throws java.io.IOException;
    Code:
       0: dload_1
       1: invokestatic  #23                 // Method java/lang/Double.doubleToLongBits:(D)J
       4: lstore_3
       5: aload_0
       6: getfield      #3                  // Field buffer:[B
       9: astore        5
      11: aload         5
      13: arraylength
      14: aload_0
      15: getfield      #13                 // Field position:I
      18: isub
      19: istore        6
      21: iload         6
      23: bipush        8
      25: if_icmpge     120
      28: aload_0
      29: invokevirtual #11                 // Method flush:()V
      32: aload         5
      34: iconst_0
      35: lload_3
      36: bipush        56
      38: lshr
      39: l2i
      40: i2b
      41: bastore
      42: aload         5
      44: iconst_1
      45: lload_3
      46: bipush        48
      48: lshr
      49: l2i
      50: i2b
      51: bastore
      52: aload         5
      54: iconst_2
      55: lload_3
      56: bipush        40
      58: lshr
      59: l2i
      60: i2b
      61: bastore
      62: aload         5
      64: iconst_3
      65: lload_3
      66: bipush        32
      68: lshr
      69: l2i
      70: i2b
      71: bastore
      72: aload         5
      74: iconst_4
      75: lload_3
      76: bipush        24
      78: lshr
      79: l2i
      80: i2b
      81: bastore
      82: aload         5
      84: iconst_5
      85: lload_3
      86: bipush        16
      88: lshr
      89: l2i
      90: i2b
      91: bastore
      92: aload         5
      94: bipush        6
      96: lload_3
      97: bipush        8
      99: lshr
     100: l2i
     101: i2b
     102: bastore
     103: aload         5
     105: bipush        7
     107: lload_3
     108: l2i
     109: i2b
     110: bastore
     111: aload_0
     112: bipush        8
     114: putfield      #13                 // Field position:I
     117: goto          236
     120: aload_0
     121: getfield      #13                 // Field position:I
     124: istore        7
     126: aload_0
     127: iload         7
     129: bipush        8
     131: iadd
     132: putfield      #13                 // Field position:I
     135: aload         5
     137: iload         7
     139: lload_3
     140: bipush        56
     142: lshr
     143: l2i
     144: i2b
     145: bastore
     146: aload         5
     148: iload         7
     150: iconst_1
     151: iadd
     152: lload_3
     153: bipush        48
     155: lshr
     156: l2i
     157: i2b
     158: bastore
     159: aload         5
     161: iload         7
     163: iconst_2
     164: iadd
     165: lload_3
     166: bipush        40
     168: lshr
     169: l2i
     170: i2b
     171: bastore
     172: aload         5
     174: iload         7
     176: iconst_3
     177: iadd
     178: lload_3
     179: bipush        32
     181: lshr
     182: l2i
     183: i2b
     184: bastore
     185: aload         5
     187: iload         7
     189: iconst_4
     190: iadd
     191: lload_3
     192: bipush        24
     194: lshr
     195: l2i
     196: i2b
     197: bastore
     198: aload         5
     200: iload         7
     202: iconst_5
     203: iadd
     204: lload_3
     205: bipush        16
     207: lshr
     208: l2i
     209: i2b
     210: bastore
     211: aload         5
     213: iload         7
     215: bipush        6
     217: iadd
     218: lload_3
     219: bipush        8
     221: lshr
     222: l2i
     223: i2b
     224: bastore
     225: aload         5
     227: iload         7
     229: bipush        7
     231: iadd
     232: lload_3
     233: l2i
     234: i2b
     235: bastore
     236: return

  public void writeBytes(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method java/lang/String.length:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     27
      12: aload_0
      13: aload_1
      14: iload_3
      15: invokevirtual #25                 // Method java/lang/String.charAt:(I)C
      18: invokevirtual #26                 // Method write:(I)V
      21: iinc          3, 1
      24: goto          7
      27: return

  public void writeChars(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method java/lang/String.length:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     27
      12: aload_0
      13: aload_1
      14: iload_3
      15: invokevirtual #25                 // Method java/lang/String.charAt:(I)C
      18: invokevirtual #27                 // Method writeChar:(I)V
      21: iinc          3, 1
      24: goto          7
      27: return

  public void writeUTF(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method java/lang/String.length:()I
       5: invokevirtual #28                 // Method writeInt:(I)V
       8: aload_0
       9: aload_1
      10: invokestatic  #29                 // Method org/jboss/marshalling/UTFUtils.writeUTFBytes:(Lorg/jboss/marshalling/ByteOutput;Ljava/lang/String;)V
      13: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field position:I
       4: istore_1
       5: iload_1
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #2                  // Field riverMarshaller:Lorg/jboss/marshalling/river/RiverMarshaller;
      14: astore_2
      15: iload_1
      16: sipush        256
      19: if_icmpge     36
      22: aload_2
      23: bipush        50
      25: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverMarshaller.write:(I)V
      28: aload_2
      29: iload_1
      30: invokevirtual #16                 // Method org/jboss/marshalling/river/RiverMarshaller.writeByte:(I)V
      33: goto          67
      36: iload_1
      37: ldc           #18                 // int 65536
      39: if_icmpge     56
      42: aload_2
      43: bipush        51
      45: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverMarshaller.write:(I)V
      48: aload_2
      49: iload_1
      50: invokevirtual #19                 // Method org/jboss/marshalling/river/RiverMarshaller.writeShort:(I)V
      53: goto          67
      56: aload_2
      57: bipush        52
      59: invokevirtual #15                 // Method org/jboss/marshalling/river/RiverMarshaller.write:(I)V
      62: aload_2
      63: iload_1
      64: invokevirtual #20                 // Method org/jboss/marshalling/river/RiverMarshaller.writeInt:(I)V
      67: aload_2
      68: aload_0
      69: getfield      #3                  // Field buffer:[B
      72: iconst_0
      73: iload_1
      74: invokevirtual #17                 // Method org/jboss/marshalling/river/RiverMarshaller.write:([BII)V
      77: aload_0
      78: iconst_0
      79: putfield      #13                 // Field position:I
      82: return

  public void close() throws java.io.IOException;
    Code:
       0: return
}
