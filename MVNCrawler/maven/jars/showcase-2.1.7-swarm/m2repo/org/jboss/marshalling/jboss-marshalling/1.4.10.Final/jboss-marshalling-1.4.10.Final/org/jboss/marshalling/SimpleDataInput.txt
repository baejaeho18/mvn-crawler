Compiled from "SimpleDataInput.java"
public class org.jboss.marshalling.SimpleDataInput extends org.jboss.marshalling.ByteInputStream implements java.io.DataInput {
  protected final byte[] buffer;

  protected int position;

  protected int limit;

  public org.jboss.marshalling.SimpleDataInput(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(ILorg/jboss/marshalling/ByteInput;)V
       6: return

  public org.jboss.marshalling.SimpleDataInput(int, org.jboss.marshalling.ByteInput);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #2                  // Method org/jboss/marshalling/ByteInputStream."<init>":(Lorg/jboss/marshalling/ByteInput;)V
       5: aload_0
       6: iload_1
       7: newarray       byte
       9: putfield      #3                  // Field buffer:[B
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      17: return

  public org.jboss.marshalling.SimpleDataInput(org.jboss.marshalling.ByteInput);
    Code:
       0: aload_0
       1: sipush        8192
       4: aload_1
       5: invokespecial #1                  // Method "<init>":(ILorg/jboss/marshalling/ByteInput;)V
       8: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     12
      10: iconst_m1
      11: ireturn
      12: aload_0
      13: getfield      #6                  // Field position:I
      16: istore_2
      17: aload_0
      18: getfield      #3                  // Field buffer:[B
      21: astore_3
      22: iload_2
      23: iload_1
      24: if_icmpne     66
      27: aload_0
      28: aload_0
      29: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      32: aload_3
      33: invokeinterface #7,  2            // InterfaceMethod org/jboss/marshalling/ByteInput.read:([B)I
      38: dup_x1
      39: putfield      #5                  // Field limit:I
      42: iconst_m1
      43: if_icmpne     53
      46: aload_0
      47: iconst_0
      48: putfield      #6                  // Field position:I
      51: iconst_m1
      52: ireturn
      53: aload_0
      54: iconst_1
      55: putfield      #6                  // Field position:I
      58: aload_3
      59: iconst_0
      60: baload
      61: sipush        255
      64: iand
      65: ireturn
      66: aload_0
      67: iload_2
      68: iconst_1
      69: iadd
      70: putfield      #6                  // Field position:I
      73: aload_3
      74: iload_2
      75: baload
      76: sipush        255
      79: iand
      80: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #8                  // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: istore        4
       6: iload         4
       8: iconst_m1
       9: if_icmpne     14
      12: iconst_m1
      13: ireturn
      14: aload_0
      15: getfield      #6                  // Field position:I
      18: istore        5
      20: iload         4
      22: iload         5
      24: isub
      25: istore        6
      27: iload         6
      29: ifne          45
      32: aload_0
      33: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      36: aload_1
      37: iload_2
      38: iload_3
      39: invokeinterface #9,  4            // InterfaceMethod org/jboss/marshalling/ByteInput.read:([BII)I
      44: ireturn
      45: aload_0
      46: getfield      #3                  // Field buffer:[B
      49: astore        7
      51: iload_3
      52: iload         6
      54: if_icmple     115
      57: aload         7
      59: iload         5
      61: aload_1
      62: iload_2
      63: iload         6
      65: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      68: aload_0
      69: aload_0
      70: iconst_0
      71: dup_x1
      72: putfield      #6                  // Field position:I
      75: putfield      #5                  // Field limit:I
      78: aload_0
      79: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      82: aload_1
      83: iload_2
      84: iload         6
      86: iadd
      87: iload_3
      88: iload         6
      90: isub
      91: invokeinterface #9,  4            // InterfaceMethod org/jboss/marshalling/ByteInput.read:([BII)I
      96: istore        8
      98: iload         8
     100: iconst_m1
     101: if_icmpne     109
     104: iload         6
     106: goto          114
     109: iload         8
     111: iload         6
     113: iadd
     114: ireturn
     115: aload         7
     117: iload         5
     119: aload_1
     120: iload_2
     121: iload_3
     122: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     125: aload_0
     126: dup
     127: getfield      #6                  // Field position:I
     130: iload_3
     131: iadd
     132: putfield      #6                  // Field position:I
     135: iload_3
     136: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          16
       6: new           #11                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #12                 // String n < 0
      12: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: getfield      #5                  // Field limit:I
      20: istore_3
      21: iload_3
      22: iconst_m1
      23: if_icmpne     28
      26: lconst_0
      27: lreturn
      28: iload_3
      29: aload_0
      30: getfield      #6                  // Field position:I
      33: isub
      34: i2l
      35: lstore        4
      37: lload         4
      39: lload_1
      40: lcmp
      41: ifle          57
      44: aload_0
      45: dup
      46: getfield      #6                  // Field position:I
      49: lload_1
      50: l2i
      51: iadd
      52: putfield      #6                  // Field position:I
      55: lload_1
      56: lreturn
      57: aload_0
      58: aload_0
      59: iconst_0
      60: dup_x1
      61: putfield      #5                  // Field limit:I
      64: putfield      #6                  // Field position:I
      67: aload_0
      68: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      71: lload_1
      72: lload         4
      74: lsub
      75: invokeinterface #14,  3           // InterfaceMethod org/jboss/marshalling/ByteInput.skip:(J)J
      80: lload         4
      82: ladd
      83: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: aload_0
       5: getfield      #6                  // Field position:I
       8: isub
       9: aload_0
      10: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      13: invokeinterface #15,  1           // InterfaceMethod org/jboss/marshalling/ByteInput.available:()I
      18: iadd
      19: ireturn

  private static java.io.EOFException eofOnRead();
    Code:
       0: new           #16                 // class java/io/EOFException
       3: dup
       4: ldc           #17                 // String Read past end of file
       6: invokespecial #18                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
       9: areturn

  public void readFully(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #19                 // Method readFully:([BII)V
       8: return

  public void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: iconst_m1
       5: if_icmpne     12
       8: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      11: athrow
      12: aload_0
      13: getfield      #6                  // Field position:I
      16: istore        4
      18: aload_0
      19: getfield      #5                  // Field limit:I
      22: iload         4
      24: isub
      25: istore        5
      27: iload_3
      28: iload         5
      30: if_icmple     116
      33: iload         5
      35: ifle          71
      38: aload_0
      39: getfield      #3                  // Field buffer:[B
      42: iload         4
      44: aload_1
      45: iload_2
      46: iload         5
      48: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      51: aload_0
      52: aload_0
      53: iconst_0
      54: dup_x1
      55: putfield      #6                  // Field position:I
      58: putfield      #5                  // Field limit:I
      61: iload_2
      62: iload         5
      64: iadd
      65: istore_2
      66: iload_3
      67: iload         5
      69: isub
      70: istore_3
      71: aload_0
      72: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      75: astore        6
      77: aload         6
      79: aload_1
      80: iload_2
      81: iload_3
      82: invokeinterface #9,  4            // InterfaceMethod org/jboss/marshalling/ByteInput.read:([BII)I
      87: istore        5
      89: iload         5
      91: iconst_m1
      92: if_icmpne     99
      95: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      98: athrow
      99: iload_2
     100: iload         5
     102: iadd
     103: istore_2
     104: iload_3
     105: iload         5
     107: isub
     108: istore_3
     109: iload_3
     110: ifne          77
     113: goto          145
     116: aload_0
     117: getfield      #3                  // Field buffer:[B
     120: iload         4
     122: aload_1
     123: iload_2
     124: iload_3
     125: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     128: aload_0
     129: iload         4
     131: iload_3
     132: iadd
     133: putfield      #6                  // Field position:I
     136: goto          145
     139: astore        6
     141: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
     144: athrow
     145: return
    Exception table:
       from    to  target type
         116   136   139   Class java/lang/NullPointerException

  public int skipBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          14
       4: new           #11                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #12                 // String n < 0
      10: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field limit:I
      18: istore_2
      19: iload_2
      20: iconst_m1
      21: if_icmpne     26
      24: iconst_0
      25: ireturn
      26: iload_2
      27: aload_0
      28: getfield      #6                  // Field position:I
      31: isub
      32: istore_3
      33: iload_3
      34: iload_1
      35: if_icmple     50
      38: aload_0
      39: dup
      40: getfield      #6                  // Field position:I
      43: iload_1
      44: iadd
      45: putfield      #6                  // Field position:I
      48: iload_1
      49: ireturn
      50: aload_0
      51: aload_0
      52: iconst_0
      53: dup_x1
      54: putfield      #5                  // Field limit:I
      57: putfield      #6                  // Field position:I
      60: aload_0
      61: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      64: iload_1
      65: iload_3
      66: isub
      67: i2l
      68: invokeinterface #14,  3           // InterfaceMethod org/jboss/marshalling/ByteInput.skip:(J)J
      73: iload_3
      74: i2l
      75: ladd
      76: l2i
      77: ireturn

  public boolean readBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     14
      10: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      13: athrow
      14: aload_0
      15: getfield      #3                  // Field buffer:[B
      18: astore_3
      19: aload_0
      20: dup
      21: getfield      #6                  // Field position:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #6                  // Field position:I
      30: dup
      31: istore_2
      32: iload_1
      33: if_icmpne     76
      36: aload_0
      37: iconst_1
      38: putfield      #6                  // Field position:I
      41: aload_0
      42: aload_0
      43: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      46: aload_3
      47: invokeinterface #7,  2            // InterfaceMethod org/jboss/marshalling/ByteInput.read:([B)I
      52: dup_x1
      53: putfield      #5                  // Field limit:I
      56: iconst_m1
      57: if_icmpne     64
      60: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      63: athrow
      64: aload_3
      65: iconst_0
      66: baload
      67: ifeq          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: ireturn
      76: aload_0
      77: iload_2
      78: iconst_1
      79: iadd
      80: putfield      #6                  // Field position:I
      83: aload_3
      84: iload_2
      85: baload
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn

  public byte readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: dup
       5: istore_1
       6: iconst_m1
       7: if_icmpne     14
      10: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      13: athrow
      14: aload_0
      15: getfield      #3                  // Field buffer:[B
      18: astore_3
      19: aload_0
      20: dup
      21: getfield      #6                  // Field position:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #6                  // Field position:I
      30: dup
      31: istore_2
      32: iload_1
      33: if_icmpne     68
      36: aload_0
      37: iconst_1
      38: putfield      #6                  // Field position:I
      41: aload_0
      42: aload_0
      43: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      46: aload_3
      47: invokeinterface #7,  2            // InterfaceMethod org/jboss/marshalling/ByteInput.read:([B)I
      52: dup_x1
      53: putfield      #5                  // Field limit:I
      56: iconst_m1
      57: if_icmpne     64
      60: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      63: athrow
      64: aload_3
      65: iconst_0
      66: baload
      67: ireturn
      68: aload_0
      69: iload_2
      70: iconst_1
      71: iadd
      72: putfield      #6                  // Field position:I
      75: aload_3
      76: iload_2
      77: baload
      78: ireturn

  public int readUnsignedByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method readUnsignedByteDirect:()I
       4: ireturn

  public short readShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field position:I
       4: istore_1
       5: aload_0
       6: getfield      #5                  // Field limit:I
       9: iload_1
      10: isub
      11: istore_2
      12: iload_2
      13: iconst_2
      14: if_icmpge     31
      17: aload_0
      18: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      21: bipush        8
      23: ishl
      24: aload_0
      25: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      28: ior
      29: i2s
      30: ireturn
      31: aload_0
      32: getfield      #3                  // Field buffer:[B
      35: astore_3
      36: aload_0
      37: iload_1
      38: iconst_2
      39: iadd
      40: putfield      #6                  // Field position:I
      43: aload_3
      44: iload_1
      45: baload
      46: bipush        8
      48: ishl
      49: aload_3
      50: iload_1
      51: iconst_1
      52: iadd
      53: baload
      54: sipush        255
      57: iand
      58: ior
      59: i2s
      60: ireturn

  public int readUnsignedShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field position:I
       4: istore_1
       5: aload_0
       6: getfield      #5                  // Field limit:I
       9: iload_1
      10: isub
      11: istore_2
      12: iload_2
      13: iconst_2
      14: if_icmpge     30
      17: aload_0
      18: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      21: bipush        8
      23: ishl
      24: aload_0
      25: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      28: ior
      29: ireturn
      30: aload_0
      31: getfield      #3                  // Field buffer:[B
      34: astore_3
      35: aload_0
      36: iload_1
      37: iconst_2
      38: iadd
      39: putfield      #6                  // Field position:I
      42: aload_3
      43: iload_1
      44: baload
      45: sipush        255
      48: iand
      49: bipush        8
      51: ishl
      52: aload_3
      53: iload_1
      54: iconst_1
      55: iadd
      56: baload
      57: sipush        255
      60: iand
      61: ior
      62: ireturn

  protected int readUnsignedByteDirect() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field limit:I
       4: dup
       5: istore_1
       6: iconst_m1
       7: if_icmpne     14
      10: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      13: athrow
      14: aload_0
      15: getfield      #3                  // Field buffer:[B
      18: astore_3
      19: aload_0
      20: dup
      21: getfield      #6                  // Field position:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #6                  // Field position:I
      30: dup
      31: istore_2
      32: iload_1
      33: if_icmpne     72
      36: aload_0
      37: iconst_1
      38: putfield      #6                  // Field position:I
      41: aload_0
      42: aload_0
      43: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      46: aload_3
      47: invokeinterface #7,  2            // InterfaceMethod org/jboss/marshalling/ByteInput.read:([B)I
      52: dup_x1
      53: putfield      #5                  // Field limit:I
      56: iconst_m1
      57: if_icmpne     64
      60: invokestatic  #20                 // Method eofOnRead:()Ljava/io/EOFException;
      63: athrow
      64: aload_3
      65: iconst_0
      66: baload
      67: sipush        255
      70: iand
      71: ireturn
      72: aload_3
      73: iload_2
      74: baload
      75: sipush        255
      78: iand
      79: ireturn

  public char readChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field position:I
       4: istore_1
       5: aload_0
       6: getfield      #5                  // Field limit:I
       9: iload_1
      10: isub
      11: istore_2
      12: iload_2
      13: iconst_2
      14: if_icmpge     31
      17: aload_0
      18: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      21: bipush        8
      23: ishl
      24: aload_0
      25: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      28: ior
      29: i2c
      30: ireturn
      31: aload_0
      32: getfield      #3                  // Field buffer:[B
      35: astore_3
      36: aload_0
      37: iload_1
      38: iconst_2
      39: iadd
      40: putfield      #6                  // Field position:I
      43: aload_3
      44: iload_1
      45: baload
      46: bipush        8
      48: ishl
      49: aload_3
      50: iload_1
      51: iconst_1
      52: iadd
      53: baload
      54: sipush        255
      57: iand
      58: ior
      59: i2c
      60: ireturn

  public int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method readIntDirect:()I
       4: ireturn

  public long readLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method readLongDirect:()J
       4: lreturn

  protected long readLongDirect() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method readIntDirect:()I
       4: i2l
       5: bipush        32
       7: lshl
       8: aload_0
       9: invokevirtual #23                 // Method readIntDirect:()I
      12: i2l
      13: ldc2_w        #25                 // long 4294967295l
      16: land
      17: lor
      18: lreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method readIntDirect:()I
       4: invokestatic  #27                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  protected int readIntDirect() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field position:I
       4: istore_1
       5: aload_0
       6: getfield      #5                  // Field limit:I
       9: iload_1
      10: isub
      11: istore_2
      12: iload_2
      13: iconst_4
      14: if_icmpge     46
      17: aload_0
      18: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      21: bipush        24
      23: ishl
      24: aload_0
      25: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      28: bipush        16
      30: ishl
      31: ior
      32: aload_0
      33: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      36: bipush        8
      38: ishl
      39: ior
      40: aload_0
      41: invokevirtual #22                 // Method readUnsignedByteDirect:()I
      44: ior
      45: ireturn
      46: aload_0
      47: getfield      #3                  // Field buffer:[B
      50: astore_3
      51: aload_0
      52: iload_1
      53: iconst_4
      54: iadd
      55: putfield      #6                  // Field position:I
      58: aload_3
      59: iload_1
      60: baload
      61: bipush        24
      63: ishl
      64: aload_3
      65: iload_1
      66: iconst_1
      67: iadd
      68: baload
      69: sipush        255
      72: iand
      73: bipush        16
      75: ishl
      76: ior
      77: aload_3
      78: iload_1
      79: iconst_2
      80: iadd
      81: baload
      82: sipush        255
      85: iand
      86: bipush        8
      88: ishl
      89: ior
      90: aload_3
      91: iload_1
      92: iconst_3
      93: iadd
      94: baload
      95: sipush        255
      98: iand
      99: ior
     100: ireturn

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method readLongDirect:()J
       4: invokestatic  #28                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: new           #29                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #30                 // String readLine() not supported
       6: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String readUTF() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #32                 // Method readUnsignedShort:()I
       5: i2l
       6: invokestatic  #33                 // Method org/jboss/marshalling/UTFUtils.readUTFBytesByByteCount:(Lorg/jboss/marshalling/ByteInput;J)Ljava/lang/String;
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #34,  1           // InterfaceMethod org/jboss/marshalling/ByteInput.close:()V
      15: return

  protected void start(org.jboss.marshalling.ByteInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
       5: aload_0
       6: aload_0
       7: iconst_0
       8: dup_x1
       9: putfield      #5                  // Field limit:I
      12: putfield      #6                  // Field position:I
      15: return

  protected void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #5                  // Field limit:I
       5: aload_0
       6: iconst_0
       7: putfield      #6                  // Field position:I
      10: aload_0
      11: aconst_null
      12: putfield      #4                  // Field byteInput:Lorg/jboss/marshalling/ByteInput;
      15: return
}
