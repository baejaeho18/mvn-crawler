Compiled from "MultivaluedTreeMap.java"
public class org.jboss.resteasy.specimpl.MultivaluedTreeMap<K, V> implements javax.ws.rs.core.MultivaluedMap<K, V>, java.io.Serializable {
  private final java.util.Map<K, java.util.List<V>> map;

  public org.jboss.resteasy.specimpl.MultivaluedTreeMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/Map;
      15: return

  public org.jboss.resteasy.specimpl.MultivaluedTreeMap(java.util.Comparator<K>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: aload_1
      10: invokespecial #5                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      13: putfield      #4                  // Field map:Ljava/util/Map;
      16: return

  public org.jboss.resteasy.specimpl.MultivaluedTreeMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      10: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          47
      25: aload_2
      26: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: astore_3
      32: aload_0
      33: aload_3
      34: aload_1
      35: aload_3
      36: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: invokevirtual #12                 // Method add:(Ljava/lang/Object;Ljava/lang/Object;)V
      44: goto          16
      47: return

  public void add(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method getOrCreate:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public V getFirst(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnull        19
      10: aload_2
      11: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      16: ifne          21
      19: aconst_null
      20: areturn
      21: aload_2
      22: iconst_0
      23: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: areturn

  public void putSingle(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method getOrCreate:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: invokeinterface #18,  1           // InterfaceMethod java/util/List.clear:()V
      12: aload_3
      13: aload_2
      14: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: return

  private java.util.List<V> getOrCreate(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: ifnonnull     23
      10: aload_0
      11: aload_1
      12: invokespecial #19                 // Method createValueList:(Ljava/lang/Object;)Ljava/util/List;
      15: astore_2
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #20                 // Method put:(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
      22: pop
      23: aload_2
      24: areturn

  private java.util.List<V> createValueList(K);
    Code:
       0: new           #21                 // class java/util/ArrayList
       3: dup
       4: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  public org.jboss.resteasy.specimpl.MultivaluedTreeMap<K, V> clone();
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method clone:(Ljavax/ws/rs/core/MultivaluedMap;)Lorg/jboss/resteasy/specimpl/MultivaluedTreeMap;
       4: areturn

  public static <K, V> org.jboss.resteasy.specimpl.MultivaluedTreeMap<K, V> clone(javax.ws.rs.core.MultivaluedMap<K, V>);
    Code:
       0: new           #24                 // class org/jboss/resteasy/specimpl/MultivaluedTreeMap
       3: dup
       4: invokespecial #6                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #25                 // Method copy:(Ljavax/ws/rs/core/MultivaluedMap;Ljavax/ws/rs/core/MultivaluedMap;)V
      13: aload_1
      14: areturn

  public static <K, V> void copy(javax.ws.rs.core.MultivaluedMap<K, V>, javax.ws.rs.core.MultivaluedMap<K, V>);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.keySet:()Ljava/util/Set;
       6: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          72
      21: aload_2
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: aload_3
      30: invokeinterface #27,  2           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #28                 // class java/util/List
      38: astore        4
      40: new           #21                 // class java/util/ArrayList
      43: dup
      44: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      47: astore        5
      49: aload         5
      51: aload         4
      53: invokeinterface #29,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      58: pop
      59: aload_1
      60: aload_3
      61: aload         5
      63: invokeinterface #30,  3           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          12
      72: return

  public static <K, V> void addAll(javax.ws.rs.core.MultivaluedMap<K, V>, javax.ws.rs.core.MultivaluedMap<K, V>);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.keySet:()Ljava/util/Set;
       6: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          96
      21: aload_2
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: aload_3
      30: invokeinterface #27,  2           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #28                 // class java/util/List
      38: astore        4
      40: aload_1
      41: aload_3
      42: invokeinterface #27,  2           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #28                 // class java/util/List
      50: astore        5
      52: aload         5
      54: ifnonnull     83
      57: new           #21                 // class java/util/ArrayList
      60: dup
      61: aload         4
      63: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      68: invokespecial #31                 // Method java/util/ArrayList."<init>":(I)V
      71: astore        5
      73: aload_1
      74: aload_3
      75: aload         5
      77: invokeinterface #30,  3           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: aload         5
      85: aload         4
      87: invokeinterface #29,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      92: pop
      93: goto          12
      96: return

  public java.lang.String toString();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #34                 // String [
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: ldc           #36                 // String ,
      15: invokestatic  #37                 // Method toString:(Ljavax/ws/rs/core/MultivaluedMap;Ljava/lang/String;)Ljava/lang/String;
      18: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #38                 // String ]
      23: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public static java.lang.String toString(javax.ws.rs.core.MultivaluedMap<?, ?>, java.lang.String);
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: astore_3
      10: ldc           #40                 // String
      12: astore        4
      14: aload_3
      15: invokeinterface #26,  1           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.keySet:()Ljava/util/Set;
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore        5
      27: aload         5
      29: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          146
      37: aload         5
      39: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: astore        6
      46: aload_3
      47: aload         6
      49: invokeinterface #27,  2           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #28                 // class java/util/List
      57: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore        7
      64: aload         7
      66: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          143
      74: aload         7
      76: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: astore        8
      83: aload_2
      84: aload         4
      86: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload         6
      92: ifnonnull     105
      95: aload_2
      96: ldc           #42                 // String null
      98: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: goto          115
     105: aload_2
     106: aload         6
     108: invokevirtual #43                 // Method java/lang/Object.toString:()Ljava/lang/String;
     111: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: aload         8
     117: ifnull        137
     120: aload_2
     121: bipush        61
     123: invokevirtual #44                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     126: pop
     127: aload_2
     128: aload         8
     130: invokevirtual #43                 // Method java/lang/Object.toString:()Ljava/lang/String;
     133: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: pop
     137: aload_1
     138: astore        4
     140: goto          64
     143: goto          27
     146: aload_2
     147: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.util.Map$Entry<K, java.util.List<V>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.List<V> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #28                 // class java/util/List
      13: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.List<V> put(K, java.util.List<V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #52,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #28                 // class java/util/List
      14: areturn

  public void putAll(java.util.Map<? extends K, ? extends java.util.List<V>>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public java.util.List<V> remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #54,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #28                 // class java/util/List
      13: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: invokeinterface #55,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public java.util.Collection<java.util.List<V>> values();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public void addAll(K, V...);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     35
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_0
      23: aload_1
      24: aload         6
      26: invokevirtual #12                 // Method add:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: iinc          5, 1
      32: goto          9
      35: return

  public void addAll(K, java.util.List<V>);
    Code:
       0: aload_2
       1: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_3
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore        4
      24: aload_0
      25: aload_1
      26: aload         4
      28: invokevirtual #12                 // Method add:(Ljava/lang/Object;Ljava/lang/Object;)V
      31: goto          7
      34: return

  public void addFirst(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: ifnonnull     17
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #12                 // Method add:(Ljava/lang/Object;Ljava/lang/Object;)V
      16: return
      17: aload_3
      18: iconst_0
      19: aload_2
      20: invokeinterface #57,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      25: return

  public boolean equalsIgnoreValueOrder(javax.ws.rs.core.MultivaluedMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokevirtual #58                 // Method keySet:()Ljava/util/Set;
      11: aload_1
      12: invokeinterface #26,  1           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.keySet:()Ljava/util/Set;
      17: invokeinterface #59,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: invokevirtual #60                 // Method entrySet:()Ljava/util/Set;
      31: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore_2
      37: aload_2
      38: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          154
      46: aload_2
      47: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #61                 // class java/util/Map$Entry
      55: astore_3
      56: aload_1
      57: aload_3
      58: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: invokeinterface #27,  2           // InterfaceMethod javax/ws/rs/core/MultivaluedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #28                 // class java/util/List
      71: astore        4
      73: aload_3
      74: invokeinterface #63,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      79: checkcast     #28                 // class java/util/List
      82: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      87: aload         4
      89: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      94: if_icmpeq     99
      97: iconst_0
      98: ireturn
      99: aload_3
     100: invokeinterface #63,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     105: checkcast     #28                 // class java/util/List
     108: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     113: astore        5
     115: aload         5
     117: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     122: ifeq          151
     125: aload         5
     127: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: astore        6
     134: aload         4
     136: aload         6
     138: invokeinterface #64,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     143: ifne          148
     146: iconst_0
     147: ireturn
     148: goto          115
     151: goto          37
     154: iconst_1
     155: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method clone:()Lorg/jboss/resteasy/specimpl/MultivaluedTreeMap;
       4: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #28                 // class java/util/List
       6: invokevirtual #20                 // Method put:(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
       9: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn
}
