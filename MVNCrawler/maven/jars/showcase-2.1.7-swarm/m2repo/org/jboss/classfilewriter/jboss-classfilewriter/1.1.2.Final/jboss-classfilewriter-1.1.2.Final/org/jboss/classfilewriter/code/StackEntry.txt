Compiled from "StackEntry.java"
public class org.jboss.classfilewriter.code.StackEntry {
  private final org.jboss.classfilewriter.code.StackEntryType type;

  private final java.lang.String descriptor;

  private final int descriptorIndex;

  private final int newInstructionLocation;

  public org.jboss.classfilewriter.code.StackEntry(org.jboss.classfilewriter.code.StackEntryType, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: getstatic     #2                  // Field org/jboss/classfilewriter/code/StackEntryType.OBJECT:Lorg/jboss/classfilewriter/code/StackEntryType;
       8: if_acmpne     21
      11: new           #3                  // class java/lang/RuntimeException
      14: dup
      15: ldc           #4                  // String OBJECT stack entries must provide a const pool index for the class
      17: invokespecial #5                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
      26: aload_0
      27: aload_2
      28: putfield      #7                  // Field descriptor:Ljava/lang/String;
      31: aload_0
      32: iconst_m1
      33: putfield      #8                  // Field newInstructionLocation:I
      36: aload_0
      37: iconst_m1
      38: putfield      #9                  // Field descriptorIndex:I
      41: return

  public org.jboss.classfilewriter.code.StackEntry(org.jboss.classfilewriter.code.StackEntryType, java.lang.String, org.jboss.classfilewriter.constpool.ConstPool);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field descriptor:Ljava/lang/String;
      14: aload_0
      15: iconst_m1
      16: putfield      #8                  // Field newInstructionLocation:I
      19: aload_1
      20: getstatic     #2                  // Field org/jboss/classfilewriter/code/StackEntryType.OBJECT:Lorg/jboss/classfilewriter/code/StackEntryType;
      23: if_acmpne     70
      26: aload_2
      27: iconst_0
      28: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      31: bipush        76
      33: if_icmpne     58
      36: aload_0
      37: aload_3
      38: aload_2
      39: iconst_1
      40: aload_2
      41: invokevirtual #11                 // Method java/lang/String.length:()I
      44: iconst_1
      45: isub
      46: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      49: invokevirtual #13                 // Method org/jboss/classfilewriter/constpool/ConstPool.addClassEntry:(Ljava/lang/String;)S
      52: putfield      #9                  // Field descriptorIndex:I
      55: goto          75
      58: aload_0
      59: aload_3
      60: aload_2
      61: invokevirtual #13                 // Method org/jboss/classfilewriter/constpool/ConstPool.addClassEntry:(Ljava/lang/String;)S
      64: putfield      #9                  // Field descriptorIndex:I
      67: goto          75
      70: aload_0
      71: iconst_m1
      72: putfield      #9                  // Field descriptorIndex:I
      75: return

  public org.jboss.classfilewriter.code.StackEntry(org.jboss.classfilewriter.code.StackEntryType, java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field descriptor:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #8                  // Field newInstructionLocation:I
      19: aload_0
      20: iconst_m1
      21: putfield      #9                  // Field descriptorIndex:I
      24: return

  public java.lang.String getDescriptor();
    Code:
       0: aload_0
       1: getfield      #7                  // Field descriptor:Ljava/lang/String;
       4: areturn

  public int getNewInstructionLocation();
    Code:
       0: aload_0
       1: getfield      #8                  // Field newInstructionLocation:I
       4: ireturn

  public org.jboss.classfilewriter.code.StackEntryType getType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
       4: getstatic     #2                  // Field org/jboss/classfilewriter/code/StackEntryType.OBJECT:Lorg/jboss/classfilewriter/code/StackEntryType;
       7: if_acmpne     50
      10: new           #14                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #16                 // String StackEntry [descriptor=
      19: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #7                  // Field descriptor:Ljava/lang/String;
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #18                 // String , type=
      31: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
      38: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #20                 // String ]
      43: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn
      50: new           #14                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #22                 // String StackEntry [type=
      59: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
      66: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #20                 // String ]
      71: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: areturn

  public static org.jboss.classfilewriter.code.StackEntry of(java.lang.String, org.jboss.classfilewriter.constpool.ConstPool);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method org/jboss/classfilewriter/util/DescriptorUtils.isPrimitive:(Ljava/lang/String;)Z
       4: ifne          20
       7: new           #24                 // class org/jboss/classfilewriter/code/StackEntry
      10: dup
      11: getstatic     #2                  // Field org/jboss/classfilewriter/code/StackEntryType.OBJECT:Lorg/jboss/classfilewriter/code/StackEntryType;
      14: aload_0
      15: aload_1
      16: invokespecial #25                 // Method "<init>":(Lorg/jboss/classfilewriter/code/StackEntryType;Ljava/lang/String;Lorg/jboss/classfilewriter/constpool/ConstPool;)V
      19: areturn
      20: aload_0
      21: iconst_0
      22: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      25: istore_2
      26: iload_2
      27: tableswitch   { // 66 to 90
                    66: 140
                    67: 140
                    68: 164
                    69: 188
                    70: 152
                    71: 188
                    72: 188
                    73: 140
                    74: 176
                    75: 188
                    76: 188
                    77: 188
                    78: 188
                    79: 188
                    80: 188
                    81: 188
                    82: 188
                    83: 140
                    84: 188
                    85: 188
                    86: 188
                    87: 188
                    88: 188
                    89: 188
                    90: 140
               default: 188
          }
     140: new           #24                 // class org/jboss/classfilewriter/code/StackEntry
     143: dup
     144: getstatic     #26                 // Field org/jboss/classfilewriter/code/StackEntryType.INT:Lorg/jboss/classfilewriter/code/StackEntryType;
     147: aload_0
     148: invokespecial #27                 // Method "<init>":(Lorg/jboss/classfilewriter/code/StackEntryType;Ljava/lang/String;)V
     151: areturn
     152: new           #24                 // class org/jboss/classfilewriter/code/StackEntry
     155: dup
     156: getstatic     #28                 // Field org/jboss/classfilewriter/code/StackEntryType.FLOAT:Lorg/jboss/classfilewriter/code/StackEntryType;
     159: aload_0
     160: invokespecial #27                 // Method "<init>":(Lorg/jboss/classfilewriter/code/StackEntryType;Ljava/lang/String;)V
     163: areturn
     164: new           #24                 // class org/jboss/classfilewriter/code/StackEntry
     167: dup
     168: getstatic     #29                 // Field org/jboss/classfilewriter/code/StackEntryType.DOUBLE:Lorg/jboss/classfilewriter/code/StackEntryType;
     171: aload_0
     172: invokespecial #27                 // Method "<init>":(Lorg/jboss/classfilewriter/code/StackEntryType;Ljava/lang/String;)V
     175: areturn
     176: new           #24                 // class org/jboss/classfilewriter/code/StackEntry
     179: dup
     180: getstatic     #30                 // Field org/jboss/classfilewriter/code/StackEntryType.LONG:Lorg/jboss/classfilewriter/code/StackEntryType;
     183: aload_0
     184: invokespecial #27                 // Method "<init>":(Lorg/jboss/classfilewriter/code/StackEntryType;Ljava/lang/String;)V
     187: areturn
     188: new           #3                  // class java/lang/RuntimeException
     191: dup
     192: new           #14                 // class java/lang/StringBuilder
     195: dup
     196: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     199: ldc           #31                 // String Unknown descriptor:
     201: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: aload_0
     205: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokespecial #5                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     214: athrow

  public boolean isWide();
    Code:
       0: aload_0
       1: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
       4: getstatic     #29                 // Field org/jboss/classfilewriter/code/StackEntryType.DOUBLE:Lorg/jboss/classfilewriter/code/StackEntryType;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
      14: getstatic     #30                 // Field org/jboss/classfilewriter/code/StackEntryType.LONG:Lorg/jboss/classfilewriter/code/StackEntryType;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void write(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
       5: invokevirtual #32                 // Method org/jboss/classfilewriter/code/StackEntryType.ordinal:()I
       8: invokevirtual #33                 // Method java/io/DataOutputStream.writeByte:(I)V
      11: aload_0
      12: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
      15: getstatic     #2                  // Field org/jboss/classfilewriter/code/StackEntryType.OBJECT:Lorg/jboss/classfilewriter/code/StackEntryType;
      18: if_acmpne     32
      21: aload_1
      22: aload_0
      23: getfield      #9                  // Field descriptorIndex:I
      26: invokevirtual #34                 // Method java/io/DataOutputStream.writeShort:(I)V
      29: goto          50
      32: aload_0
      33: getfield      #6                  // Field type:Lorg/jboss/classfilewriter/code/StackEntryType;
      36: getstatic     #35                 // Field org/jboss/classfilewriter/code/StackEntryType.UNITITIALIZED_OBJECT:Lorg/jboss/classfilewriter/code/StackEntryType;
      39: if_acmpne     50
      42: aload_1
      43: aload_0
      44: getfield      #8                  // Field newInstructionLocation:I
      47: invokevirtual #34                 // Method java/io/DataOutputStream.writeShort:(I)V
      50: return
}
