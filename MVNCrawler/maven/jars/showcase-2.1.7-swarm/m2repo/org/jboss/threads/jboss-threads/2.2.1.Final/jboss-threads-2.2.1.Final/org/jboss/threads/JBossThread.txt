Compiled from "JBossThread.java"
public final class org.jboss.threads.JBossThread extends java.lang.Thread {
  private static final org.jboss.logging.Logger log;

  private static final org.jboss.logging.Logger ihlog;

  private volatile org.jboss.threads.InterruptHandler interruptHandler;

  private org.jboss.threads.ThreadNameInfo threadNameInfo;

  private final java.util.concurrent.atomic.AtomicInteger intCnt;

  static final boolean $assertionsDisabled;

  public org.jboss.threads.JBossThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      13: putfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      16: return

  public org.jboss.threads.JBossThread(java.lang.Runnable, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
       6: aload_0
       7: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      10: dup
      11: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      14: putfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      17: return

  public org.jboss.threads.JBossThread(java.lang.ThreadGroup, java.lang.Runnable) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V
       6: aload_0
       7: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      10: dup
      11: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      14: putfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      17: return

  public org.jboss.threads.JBossThread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V
       7: aload_0
       8: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      11: dup
      12: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      15: putfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      18: return

  public org.jboss.threads.JBossThread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lload         4
       6: invokespecial #8                  // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
       9: aload_0
      10: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      17: putfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      20: return

  public void interrupt();
    Code:
       0: invokestatic  #9                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: if_acmpeq     11
       7: aload_0
       8: invokevirtual #10                 // Method checkAccess:()V
      11: aload_0
      12: invokevirtual #11                 // Method isInterrupted:()Z
      15: ifeq          19
      18: return
      19: aload_0
      20: getfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      23: astore_1
      24: aload_1
      25: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      28: istore_2
      29: iload_2
      30: ldc           #13                 // int -2147483648
      32: iand
      33: ifeq          46
      36: getstatic     #14                 // Field ihlog:Lorg/jboss/logging/Logger;
      39: ldc           #15                 // String Interrupting thread \"%s\" (already deferred)
      41: aload_0
      42: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      45: return
      46: iload_2
      47: ifne          82
      50: aload_1
      51: dup
      52: astore_3
      53: monitorenter
      54: aload_1
      55: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      58: istore_2
      59: iload_2
      60: ifne          70
      63: aload_0
      64: invokespecial #17                 // Method doInterrupt:()V
      67: aload_3
      68: monitorexit
      69: return
      70: aload_3
      71: monitorexit
      72: goto          82
      75: astore        4
      77: aload_3
      78: monitorexit
      79: aload         4
      81: athrow
      82: getstatic     #18                 // Field $assertionsDisabled:Z
      85: ifne          100
      88: iload_2
      89: ifne          100
      92: new           #19                 // class java/lang/AssertionError
      95: dup
      96: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      99: athrow
     100: aload_1
     101: iload_2
     102: iload_2
     103: ldc           #13                 // int -2147483648
     105: ior
     106: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     109: ifeq          24
     112: getstatic     #14                 // Field ihlog:Lorg/jboss/logging/Logger;
     115: ldc           #22                 // String Interrupting thread \"%s\" (deferred)
     117: aload_0
     118: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     121: return
    Exception table:
       from    to  target type
          54    69    75   any
          70    72    75   any
          75    79    75   any

  private void doInterrupt();
    Code:
       0: getstatic     #18                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      10: invokestatic  #23                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifne          24
      16: new           #19                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: invokevirtual #11                 // Method isInterrupted:()Z
      28: ifeq          32
      31: return
      32: getstatic     #14                 // Field ihlog:Lorg/jboss/logging/Logger;
      35: ldc           #24                 // String Interrupting thread \"%s\"
      37: aload_0
      38: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: invokespecial #25                 // Method java/lang/Thread.interrupt:()V
      45: aload_0
      46: getfield      #26                 // Field interruptHandler:Lorg/jboss/threads/InterruptHandler;
      49: astore_1
      50: aload_1
      51: ifnull        75
      54: aload_1
      55: aload_0
      56: invokeinterface #27,  2           // InterfaceMethod org/jboss/threads/InterruptHandler.handleInterrupt:(Ljava/lang/Thread;)V
      61: goto          75
      64: astore_2
      65: getstatic     #14                 // Field ihlog:Lorg/jboss/logging/Logger;
      68: aload_2
      69: ldc           #29                 // String Interrupt handler %s threw an exception
      71: aload_1
      72: invokevirtual #30                 // Method org/jboss/logging/Logger.errorf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      75: goto          117
      78: astore_3
      79: aload_0
      80: getfield      #26                 // Field interruptHandler:Lorg/jboss/threads/InterruptHandler;
      83: astore        4
      85: aload         4
      87: ifnull        115
      90: aload         4
      92: aload_0
      93: invokeinterface #27,  2           // InterfaceMethod org/jboss/threads/InterruptHandler.handleInterrupt:(Ljava/lang/Thread;)V
      98: goto          115
     101: astore        5
     103: getstatic     #14                 // Field ihlog:Lorg/jboss/logging/Logger;
     106: aload         5
     108: ldc           #29                 // String Interrupt handler %s threw an exception
     110: aload         4
     112: invokevirtual #30                 // Method org/jboss/logging/Logger.errorf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
     115: aload_3
     116: athrow
     117: return
    Exception table:
       from    to  target type
          54    61    64   Class java/lang/Throwable
          41    45    78   any
          90    98   101   Class java/lang/Throwable
          78    79    78   any

  public boolean isInterrupted();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: if_acmpne     14
       7: aload_0
       8: invokespecial #31                 // Method java/lang/Thread.isInterrupted:()Z
      11: goto          39
      14: aload_0
      15: invokespecial #31                 // Method java/lang/Thread.isInterrupted:()Z
      18: ifne          34
      21: aload_0
      22: getfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      25: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      28: ldc           #13                 // int -2147483648
      30: iand
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public static void executeWithInterruptDeferred(java.lang.Runnable);
    Code:
       0: invokestatic  #32                 // Method org/jboss/threads/JBossExecutors.directExecutor:()Lorg/jboss/threads/DirectExecutor;
       3: aload_0
       4: invokestatic  #33                 // Method executeWithInterruptDeferred:(Lorg/jboss/threads/DirectExecutor;Ljava/lang/Runnable;)V
       7: return

  public static void executeWithInterruptDeferred(org.jboss.threads.DirectExecutor, java.lang.Runnable);
    Code:
       0: invokestatic  #34                 // Method currentThread:()Lorg/jboss/threads/JBossThread;
       3: astore_2
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: aload_1
      10: invokeinterface #35,  2           // InterfaceMethod org/jboss/threads/DirectExecutor.execute:(Ljava/lang/Runnable;)V
      15: return
      16: aload_2
      17: invokestatic  #36                 // Method registerDeferral:(Lorg/jboss/threads/JBossThread;)Z
      20: istore_3
      21: getstatic     #18                 // Field $assertionsDisabled:Z
      24: ifne          41
      27: invokestatic  #37                 // Method java/lang/Thread.interrupted:()Z
      30: ifeq          41
      33: new           #19                 // class java/lang/AssertionError
      36: dup
      37: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: aload_0
      42: aload_1
      43: invokeinterface #35,  2           // InterfaceMethod org/jboss/threads/DirectExecutor.execute:(Ljava/lang/Runnable;)V
      48: iload_3
      49: aload_2
      50: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      53: goto          66
      56: astore        4
      58: iload_3
      59: aload_2
      60: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      63: aload         4
      65: athrow
      66: return
    Exception table:
       from    to  target type
          41    48    56   any
          56    58    56   any

  public static <T> T executeWithInterruptDeferred(java.util.concurrent.Callable<T>) throws java.lang.Exception;
    Code:
       0: invokestatic  #34                 // Method currentThread:()Lorg/jboss/threads/JBossThread;
       3: astore_1
       4: aload_1
       5: ifnonnull     15
       8: aload_0
       9: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      14: areturn
      15: aload_1
      16: invokestatic  #36                 // Method registerDeferral:(Lorg/jboss/threads/JBossThread;)Z
      19: istore_2
      20: getstatic     #18                 // Field $assertionsDisabled:Z
      23: ifne          40
      26: invokestatic  #37                 // Method java/lang/Thread.interrupted:()Z
      29: ifeq          40
      32: new           #19                 // class java/lang/AssertionError
      35: dup
      36: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_0
      41: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      46: astore_3
      47: iload_2
      48: aload_1
      49: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      52: aload_3
      53: areturn
      54: astore        4
      56: iload_2
      57: aload_1
      58: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      61: aload         4
      63: athrow
    Exception table:
       from    to  target type
          40    47    54   any
          54    56    54   any

  public static <T> T executeWithInterruptDeferred(java.security.PrivilegedAction<T>);
    Code:
       0: invokestatic  #34                 // Method currentThread:()Lorg/jboss/threads/JBossThread;
       3: astore_1
       4: aload_1
       5: ifnonnull     15
       8: aload_0
       9: invokeinterface #40,  1           // InterfaceMethod java/security/PrivilegedAction.run:()Ljava/lang/Object;
      14: areturn
      15: aload_1
      16: invokestatic  #36                 // Method registerDeferral:(Lorg/jboss/threads/JBossThread;)Z
      19: istore_2
      20: getstatic     #18                 // Field $assertionsDisabled:Z
      23: ifne          40
      26: invokestatic  #37                 // Method java/lang/Thread.interrupted:()Z
      29: ifeq          40
      32: new           #19                 // class java/lang/AssertionError
      35: dup
      36: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_0
      41: invokeinterface #40,  1           // InterfaceMethod java/security/PrivilegedAction.run:()Ljava/lang/Object;
      46: astore_3
      47: iload_2
      48: aload_1
      49: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      52: aload_3
      53: areturn
      54: astore        4
      56: iload_2
      57: aload_1
      58: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      61: aload         4
      63: athrow
    Exception table:
       from    to  target type
          40    47    54   any
          54    56    54   any

  public static <T> T executeWithInterruptDeferred(java.security.PrivilegedExceptionAction<T>) throws java.lang.Exception;
    Code:
       0: invokestatic  #34                 // Method currentThread:()Lorg/jboss/threads/JBossThread;
       3: astore_1
       4: aload_1
       5: ifnonnull     15
       8: aload_0
       9: invokeinterface #41,  1           // InterfaceMethod java/security/PrivilegedExceptionAction.run:()Ljava/lang/Object;
      14: areturn
      15: aload_1
      16: invokestatic  #36                 // Method registerDeferral:(Lorg/jboss/threads/JBossThread;)Z
      19: istore_2
      20: getstatic     #18                 // Field $assertionsDisabled:Z
      23: ifne          40
      26: invokestatic  #37                 // Method java/lang/Thread.interrupted:()Z
      29: ifeq          40
      32: new           #19                 // class java/lang/AssertionError
      35: dup
      36: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_0
      41: invokeinterface #41,  1           // InterfaceMethod java/security/PrivilegedExceptionAction.run:()Ljava/lang/Object;
      46: astore_3
      47: iload_2
      48: aload_1
      49: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      52: aload_3
      53: areturn
      54: astore        4
      56: iload_2
      57: aload_1
      58: invokestatic  #38                 // Method unregisterDeferral:(ZLorg/jboss/threads/JBossThread;)V
      61: aload         4
      63: athrow
    Exception table:
       from    to  target type
          40    47    54   any
          54    56    54   any

  private static void unregisterDeferral(boolean, org.jboss.threads.JBossThread);
    Code:
       0: aload_1
       1: getfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
       4: astore_3
       5: aload_3
       6: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       9: istore_2
      10: iload_2
      11: ldc           #42                 // int 2147483647
      13: iand
      14: iconst_1
      15: if_icmpne     93
      18: aload_3
      19: dup
      20: astore        4
      22: monitorenter
      23: aload_3
      24: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      27: istore_2
      28: iload_2
      29: iconst_1
      30: if_icmpne     58
      33: aload_3
      34: iconst_0
      35: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      38: iload_0
      39: ifeq          52
      42: aload_1
      43: invokespecial #17                 // Method doInterrupt:()V
      46: aload         4
      48: monitorexit
      49: goto          126
      52: aload         4
      54: monitorexit
      55: goto          126
      58: iload_2
      59: ldc           #44                 // int -2147483647
      61: if_icmpne     79
      64: aload_3
      65: iconst_0
      66: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      69: aload_1
      70: invokespecial #17                 // Method doInterrupt:()V
      73: aload         4
      75: monitorexit
      76: goto          126
      79: aload         4
      81: monitorexit
      82: goto          93
      85: astore        5
      87: aload         4
      89: monitorexit
      90: aload         5
      92: athrow
      93: getstatic     #18                 // Field $assertionsDisabled:Z
      96: ifne          115
      99: iload_2
     100: ldc           #42                 // int 2147483647
     102: iand
     103: iconst_1
     104: if_icmpgt     115
     107: new           #19                 // class java/lang/AssertionError
     110: dup
     111: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
     114: athrow
     115: aload_3
     116: iload_2
     117: iload_2
     118: iconst_1
     119: isub
     120: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     123: ifeq          5
     126: return
    Exception table:
       from    to  target type
          23    49    85   any
          52    55    85   any
          58    76    85   any
          79    82    85   any
          85    90    85   any

  private static boolean registerDeferral(org.jboss.threads.JBossThread);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field intCnt:Ljava/util/concurrent/atomic/AtomicInteger;
       6: astore_2
       7: aload_2
       8: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      11: istore_3
      12: iload_3
      13: ifne          59
      16: aload_2
      17: dup
      18: astore        4
      20: monitorenter
      21: aload_2
      22: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      25: istore_3
      26: iload_3
      27: ifne          45
      30: aload_2
      31: iconst_1
      32: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      35: invokestatic  #37                 // Method java/lang/Thread.interrupted:()Z
      38: istore_1
      39: aload         4
      41: monitorexit
      42: goto          105
      45: aload         4
      47: monitorexit
      48: goto          59
      51: astore        5
      53: aload         4
      55: monitorexit
      56: aload         5
      58: athrow
      59: iload_3
      60: ldc           #42                 // int 2147483647
      62: if_icmpne     73
      65: new           #45                 // class java/lang/IllegalStateException
      68: dup
      69: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":()V
      72: athrow
      73: getstatic     #18                 // Field $assertionsDisabled:Z
      76: ifne          94
      79: iload_3
      80: ldc           #42                 // int 2147483647
      82: iand
      83: ifgt          94
      86: new           #19                 // class java/lang/AssertionError
      89: dup
      90: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
      93: athrow
      94: aload_2
      95: iload_3
      96: iload_3
      97: iconst_1
      98: iadd
      99: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
     102: ifeq          7
     105: iload_1
     106: ireturn
    Exception table:
       from    to  target type
          21    42    51   any
          45    48    51   any
          51    56    51   any

  public void run();
    Code:
       0: getstatic     #47                 // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #48                 // String Thread \"%s\" starting execution
       5: aload_0
       6: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
       9: aload_0
      10: invokespecial #49                 // Method java/lang/Thread.run:()V
      13: getstatic     #47                 // Field log:Lorg/jboss/logging/Logger;
      16: ldc           #50                 // String Thread \"%s\" exiting
      18: aload_0
      19: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      22: goto          37
      25: astore_1
      26: getstatic     #47                 // Field log:Lorg/jboss/logging/Logger;
      29: ldc           #50                 // String Thread \"%s\" exiting
      31: aload_0
      32: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      35: aload_1
      36: athrow
      37: return
    Exception table:
       from    to  target type
           9    13    25   any
          25    26    25   any

  public static org.jboss.threads.JBossThread currentThread();
    Code:
       0: invokestatic  #9                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_0
       4: aload_0
       5: instanceof    #51                 // class org/jboss/threads/JBossThread
       8: ifeq          18
      11: aload_0
      12: checkcast     #51                 // class org/jboss/threads/JBossThread
      15: goto          19
      18: aconst_null
      19: areturn

  public void start();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Thread.start:()V
       4: getstatic     #47                 // Field log:Lorg/jboss/logging/Logger;
       7: ldc           #53                 // String Started thread \"%s\"
       9: aload_0
      10: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method java/lang/Thread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
       5: getstatic     #47                 // Field log:Lorg/jboss/logging/Logger;
       8: ldc           #55                 // String Changed uncaught exception handler for \"%s\" to %s
      10: aload_0
      11: aload_1
      12: invokevirtual #56                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: return

  public static org.jboss.threads.InterruptHandler getAndSetInterruptHandler(org.jboss.threads.InterruptHandler);
    Code:
       0: invokestatic  #34                 // Method currentThread:()Lorg/jboss/threads/JBossThread;
       3: astore_1
       4: aload_1
       5: ifnonnull     18
       8: new           #45                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #57                 // String The current thread does not support interrupt handlers
      14: invokespecial #58                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: getfield      #26                 // Field interruptHandler:Lorg/jboss/threads/InterruptHandler;
      22: astore_2
      23: aload_1
      24: aload_0
      25: putfield      #26                 // Field interruptHandler:Lorg/jboss/threads/InterruptHandler;
      28: aload_2
      29: areturn
      30: astore_3
      31: aload_1
      32: aload_0
      33: putfield      #26                 // Field interruptHandler:Lorg/jboss/threads/InterruptHandler;
      36: aload_3
      37: athrow
    Exception table:
       from    to  target type
          18    23    30   any
          30    31    30   any

  org.jboss.threads.ThreadNameInfo getThreadNameInfo();
    Code:
       0: aload_0
       1: getfield      #59                 // Field threadNameInfo:Lorg/jboss/threads/ThreadNameInfo;
       4: areturn

  void setThreadNameInfo(org.jboss.threads.ThreadNameInfo) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method checkAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #59                 // Field threadNameInfo:Lorg/jboss/threads/ThreadNameInfo;
       9: return

  static {};
    Code:
       0: ldc_w         #51                 // class org/jboss/threads/JBossThread
       3: invokevirtual #60                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #18                 // Field $assertionsDisabled:Z
      17: ldc           #61                 // String org.jboss.threads
      19: invokestatic  #62                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
      22: putstatic     #47                 // Field log:Lorg/jboss/logging/Logger;
      25: ldc           #63                 // String org.jboss.threads.interrupt-handler
      27: invokestatic  #62                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
      30: putstatic     #14                 // Field ihlog:Lorg/jboss/logging/Logger;
      33: return
}
