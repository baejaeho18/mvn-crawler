Compiled from "TokenParser.java"
public class org.jboss.security.negotiation.spnego.encoding.TokenParser {
  private java.lang.String crealm;

  private java.lang.String cname;

  public org.jboss.security.negotiation.spnego.encoding.TokenParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void parseToken(byte[], javax.security.auth.Subject) throws java.lang.Exception;
    Code:
       0: new           #2                  // class java/io/ByteArrayInputStream
       3: dup
       4: aload_1
       5: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokevirtual #4                  // Method getAP_REQ:(Ljava/io/InputStream;)[B
      14: astore        4
      16: aload_3
      17: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
      20: new           #2                  // class java/io/ByteArrayInputStream
      23: dup
      24: aload         4
      26: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #6                  // Method getTicket:(Ljava/io/InputStream;)[B
      35: astore        4
      37: aload_3
      38: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
      41: new           #2                  // class java/io/ByteArrayInputStream
      44: dup
      45: aload         4
      47: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      50: astore_3
      51: aload_0
      52: aload_3
      53: invokevirtual #7                  // Method getEncryptedData:(Ljava/io/InputStream;)[B
      56: astore        4
      58: aload_3
      59: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
      62: new           #2                  // class java/io/ByteArrayInputStream
      65: dup
      66: aload         4
      68: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      71: astore_3
      72: aload_0
      73: aload_3
      74: aload         4
      76: arraylength
      77: aload_2
      78: invokevirtual #8                  // Method handleEncryptedData:(Ljava/io/InputStream;ILjavax/security/auth/Subject;)V
      81: aload_3
      82: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
      85: return

  public byte[] getValueAt(java.io.InputStream, byte) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokevirtual #9                  // Method java/io/InputStream.read:()I
       6: i2b
       7: istore        4
       9: aload_1
      10: invokestatic  #10                 // Method org/jboss/security/negotiation/spnego/encoding/NegTokenDecoder.readLength:(Ljava/io/InputStream;)I
      13: istore        5
      15: iload         5
      17: newarray       byte
      19: astore_3
      20: aload_1
      21: aload_3
      22: invokevirtual #11                 // Method java/io/InputStream.read:([B)I
      25: pop
      26: aload_1
      27: invokevirtual #12                 // Method java/io/InputStream.available:()I
      30: ifne          42
      33: new           #2                  // class java/io/ByteArrayInputStream
      36: dup
      37: aload_3
      38: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      41: astore_1
      42: aload_0
      43: iload         4
      45: iload_2
      46: invokevirtual #13                 // Method isContextSpecific:(BB)Z
      49: ifeq          2
      52: aload_3
      53: areturn

  public boolean isContextSpecific(byte, byte);
    Code:
       0: iload_1
       1: bipush        31
       3: iand
       4: iload_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public byte[] getAP_REQ(java.io.InputStream) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/io/InputStream.read:()I
       4: pop
       5: aload_1
       6: invokestatic  #10                 // Method org/jboss/security/negotiation/spnego/encoding/NegTokenDecoder.readLength:(Ljava/io/InputStream;)I
       9: pop
      10: aload_0
      11: aload_1
      12: bipush        14
      14: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
      17: astore_2
      18: aload_2
      19: areturn

  public byte[] getTicket(java.io.InputStream) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_3
       3: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
       6: astore_2
       7: aload_2
       8: areturn

  public byte[] getEncryptedData(java.io.InputStream) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_3
       3: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
       6: astore_2
       7: aload_2
       8: areturn

  public void handleEncryptedData(java.io.InputStream, int, javax.security.auth.Subject) throws java.lang.Exception;
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #15                 // Method java/io/InputStream.mark:(I)V
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
      11: astore        4
      13: aload         4
      15: iconst_2
      16: iconst_3
      17: invokestatic  #16                 // Method java/util/Arrays.copyOfRange:([BII)[B
      20: astore        4
      22: new           #17                 // class java/math/BigInteger
      25: dup
      26: aload         4
      28: invokespecial #18                 // Method java/math/BigInteger."<init>":([B)V
      31: astore        5
      33: aload         5
      35: invokevirtual #19                 // Method java/math/BigInteger.intValue:()I
      38: istore        6
      40: aload_0
      41: aload_3
      42: iload         6
      44: invokevirtual #20                 // Method getKrbKey:(Ljavax/security/auth/Subject;I)Ljavax/security/auth/kerberos/KerberosKey;
      47: astore        7
      49: aload_1
      50: invokevirtual #21                 // Method java/io/InputStream.reset:()V
      53: aload_0
      54: aload_1
      55: iconst_2
      56: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
      59: astore        4
      61: new           #2                  // class java/io/ByteArrayInputStream
      64: dup
      65: aload         4
      67: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
      70: astore        8
      72: aload         8
      74: invokevirtual #22                 // Method java/io/ByteArrayInputStream.read:()I
      77: pop
      78: aload         8
      80: invokestatic  #10                 // Method org/jboss/security/negotiation/spnego/encoding/NegTokenDecoder.readLength:(Ljava/io/InputStream;)I
      83: istore        9
      85: iload         9
      87: newarray       byte
      89: astore        10
      91: aload         8
      93: aload         10
      95: invokevirtual #23                 // Method java/io/ByteArrayInputStream.read:([B)I
      98: pop
      99: aload         8
     101: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
     104: aload_0
     105: aload         7
     107: aload         10
     109: invokevirtual #24                 // Method decrypt:(Ljavax/security/auth/kerberos/KerberosKey;[B)[B
     112: astore        11
     114: aload_0
     115: aload         11
     117: invokevirtual #25                 // Method reset:([B)[B
     120: astore        12
     122: new           #2                  // class java/io/ByteArrayInputStream
     125: dup
     126: aload         12
     128: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
     131: astore        8
     133: aload         8
     135: invokevirtual #22                 // Method java/io/ByteArrayInputStream.read:()I
     138: pop
     139: aload         8
     141: invokestatic  #10                 // Method org/jboss/security/negotiation/spnego/encoding/NegTokenDecoder.readLength:(Ljava/io/InputStream;)I
     144: istore        13
     146: iload         13
     148: newarray       byte
     150: astore        12
     152: aload         8
     154: aload         12
     156: invokevirtual #23                 // Method java/io/ByteArrayInputStream.read:([B)I
     159: pop
     160: aload         8
     162: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
     165: new           #2                  // class java/io/ByteArrayInputStream
     168: dup
     169: aload         12
     171: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
     174: astore        8
     176: aload_0
     177: aload         8
     179: iconst_2
     180: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
     183: astore        14
     185: aload         8
     187: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
     190: aload         14
     192: iconst_2
     193: aload         14
     195: arraylength
     196: invokestatic  #16                 // Method java/util/Arrays.copyOfRange:([BII)[B
     199: astore        14
     201: aload_0
     202: new           #26                 // class java/lang/String
     205: dup
     206: aload         14
     208: invokespecial #27                 // Method java/lang/String."<init>":([B)V
     211: putfield      #28                 // Field crealm:Ljava/lang/String;
     214: new           #2                  // class java/io/ByteArrayInputStream
     217: dup
     218: aload         12
     220: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
     223: astore        8
     225: aload_0
     226: aload         8
     228: iconst_3
     229: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
     232: astore        15
     234: aload         8
     236: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
     239: new           #2                  // class java/io/ByteArrayInputStream
     242: dup
     243: aload         15
     245: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
     248: astore        8
     250: aload_0
     251: aload         8
     253: iconst_1
     254: invokevirtual #14                 // Method getValueAt:(Ljava/io/InputStream;B)[B
     257: astore        16
     259: aload         8
     261: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
     264: aload         16
     266: iconst_2
     267: aload         16
     269: arraylength
     270: invokestatic  #16                 // Method java/util/Arrays.copyOfRange:([BII)[B
     273: astore        16
     275: new           #2                  // class java/io/ByteArrayInputStream
     278: dup
     279: aload         16
     281: invokespecial #3                  // Method java/io/ByteArrayInputStream."<init>":([B)V
     284: astore        8
     286: aload_0
     287: aload         8
     289: invokevirtual #29                 // Method getNames:(Ljava/io/InputStream;)[Ljava/lang/String;
     292: astore        17
     294: aload         8
     296: invokevirtual #5                  // Method java/io/ByteArrayInputStream.close:()V
     299: new           #30                 // class java/lang/StringBuffer
     302: dup
     303: aload         17
     305: iconst_0
     306: aaload
     307: invokespecial #31                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     310: astore        18
     312: iconst_1
     313: istore        19
     315: iload         19
     317: aload         17
     319: arraylength
     320: if_icmpge     348
     323: aload         18
     325: ldc           #32                 // String /
     327: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     330: pop
     331: aload         18
     333: aload         17
     335: iload         19
     337: aaload
     338: invokevirtual #33                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     341: pop
     342: iinc          19, 1
     345: goto          315
     348: aload_0
     349: aload         18
     351: invokevirtual #34                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     354: putfield      #35                 // Field cname:Ljava/lang/String;
     357: return

  public java.lang.String[] getNames(java.io.InputStream) throws java.lang.Exception;
    Code:
       0: new           #36                 // class java/util/ArrayList
       3: dup
       4: invokespecial #37                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #9                  // Method java/io/InputStream.read:()I
      12: pop
      13: aload_1
      14: invokestatic  #10                 // Method org/jboss/security/negotiation/spnego/encoding/NegTokenDecoder.readLength:(Ljava/io/InputStream;)I
      17: istore_3
      18: iload_3
      19: newarray       byte
      21: astore        4
      23: aload_1
      24: aload         4
      26: invokevirtual #11                 // Method java/io/InputStream.read:([B)I
      29: pop
      30: aload_2
      31: new           #26                 // class java/lang/String
      34: dup
      35: aload         4
      37: invokespecial #27                 // Method java/lang/String."<init>":([B)V
      40: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload_1
      47: invokevirtual #12                 // Method java/io/InputStream.available:()I
      50: ifgt          8
      53: aload_2
      54: invokeinterface #39,  1           // InterfaceMethod java/util/List.size:()I
      59: anewarray     #26                 // class java/lang/String
      62: astore_3
      63: aload_2
      64: aload_3
      65: invokeinterface #40,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      70: checkcast     #41                 // class "[Ljava/lang/String;"
      73: astore_3
      74: aload_3
      75: areturn

  public javax.security.auth.kerberos.KerberosKey getKrbKey(javax.security.auth.Subject, int);
    Code:
       0: aload_1
       1: ldc           #42                 // class java/lang/Object
       3: invokevirtual #43                 // Method javax/security/auth/Subject.getPrivateCredentials:(Ljava/lang/Class;)Ljava/util/Set;
       6: astore_3
       7: aload_3
       8: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          67
      25: aload         4
      27: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore        5
      34: aload         5
      36: instanceof    #47                 // class javax/security/auth/kerberos/KerberosKey
      39: ifeq          64
      42: aload         5
      44: checkcast     #47                 // class javax/security/auth/kerberos/KerberosKey
      47: astore        6
      49: aload         6
      51: invokevirtual #48                 // Method javax/security/auth/kerberos/KerberosKey.getKeyType:()I
      54: iload_2
      55: if_icmpne     64
      58: aload         5
      60: checkcast     #47                 // class javax/security/auth/kerberos/KerberosKey
      63: areturn
      64: goto          15
      67: aconst_null
      68: areturn

  public byte[] decrypt(javax.security.auth.kerberos.KerberosKey, byte[]) throws org.jboss.security.negotiation.NegotiationException;
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method javax/security/auth/kerberos/KerberosKey.getKeyType:()I
       4: invokestatic  #49                 // Method org/jboss/security/negotiation/cipher/Decoder.getInstace:(I)Lorg/jboss/security/negotiation/cipher/Decoder;
       7: astore_3
       8: aload_3
       9: aload_2
      10: aload_1
      11: invokevirtual #50                 // Method javax/security/auth/kerberos/KerberosKey.getEncoded:()[B
      14: iconst_2
      15: invokevirtual #51                 // Method org/jboss/security/negotiation/cipher/Decoder.decrypt:([B[BI)[B
      18: astore        4
      20: aload_3
      21: aload         4
      23: invokevirtual #52                 // Method org/jboss/security/negotiation/cipher/Decoder.decryptedData:([B)[B
      26: areturn

  public byte[] reset(byte[]);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: iconst_1
       4: baload
       5: sipush        255
       8: iand
       9: sipush        128
      12: if_icmpge     38
      15: aload_1
      16: iconst_1
      17: baload
      18: iconst_2
      19: iadd
      20: newarray       byte
      22: astore_2
      23: aload_1
      24: iconst_0
      25: aload_2
      26: iconst_0
      27: aload_1
      28: iconst_1
      29: baload
      30: iconst_2
      31: iadd
      32: invokestatic  #53                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: goto          123
      38: aload_1
      39: iconst_1
      40: baload
      41: sipush        255
      44: iand
      45: sipush        128
      48: if_icmple     123
      51: aload_1
      52: iconst_1
      53: baload
      54: bipush        127
      56: iand
      57: istore_3
      58: iconst_0
      59: istore        4
      61: iconst_0
      62: istore        5
      64: iload         5
      66: iload_3
      67: if_icmpge     101
      70: iload         4
      72: aload_1
      73: iload         5
      75: iconst_2
      76: iadd
      77: baload
      78: sipush        255
      81: iand
      82: bipush        8
      84: iload_3
      85: iload         5
      87: isub
      88: iconst_1
      89: isub
      90: imul
      91: ishl
      92: ior
      93: istore        4
      95: iinc          5, 1
      98: goto          64
     101: iload         4
     103: iload_3
     104: iadd
     105: iconst_2
     106: iadd
     107: newarray       byte
     109: astore_2
     110: aload_1
     111: iconst_0
     112: aload_2
     113: iconst_0
     114: iload         4
     116: iload_3
     117: iadd
     118: iconst_2
     119: iadd
     120: invokestatic  #53                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     123: aload_2
     124: areturn

  public java.lang.String getPrincipalName();
    Code:
       0: new           #54                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #35                 // Field cname:Ljava/lang/String;
      11: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #57                 // String @
      16: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #28                 // Field crealm:Ljava/lang/String;
      23: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
}
