Compiled from "CachedPreparedStatement.java"
public abstract class org.jboss.jca.adapters.jdbc.CachedPreparedStatement extends org.jboss.jca.adapters.jdbc.JBossWrapper implements java.sql.PreparedStatement {
  private static final long serialVersionUID;

  protected static org.jboss.logging.Logger log;

  private java.sql.PreparedStatement ps;

  private java.util.concurrent.atomic.AtomicBoolean cached;

  private java.util.concurrent.atomic.AtomicInteger inUse;

  private int defaultMaxFieldSize;

  private int defaultMaxRows;

  private int defaultQueryTimeout;

  private int defaultFetchDirection;

  private int defaultFetchSize;

  private int currentMaxFieldSize;

  private int currentMaxRows;

  private int currentQueryTimeout;

  private int currentFetchDirection;

  private int currentFetchSize;

  public org.jboss.jca.adapters.jdbc.CachedPreparedStatement(java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/jca/adapters/jdbc/JBossWrapper."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field cached:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      20: dup
      21: iconst_1
      22: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      25: putfield      #7                  // Field inUse:Ljava/util/concurrent/atomic/AtomicInteger;
      28: aload_0
      29: aload_1
      30: putfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
      33: aload_0
      34: aload_1
      35: invokeinterface #9,  1            // InterfaceMethod java/sql/PreparedStatement.getMaxFieldSize:()I
      40: putfield      #10                 // Field defaultMaxFieldSize:I
      43: aload_0
      44: aload_1
      45: invokeinterface #11,  1           // InterfaceMethod java/sql/PreparedStatement.getMaxRows:()I
      50: putfield      #12                 // Field defaultMaxRows:I
      53: aload_0
      54: aload_1
      55: invokeinterface #13,  1           // InterfaceMethod java/sql/PreparedStatement.getQueryTimeout:()I
      60: putfield      #14                 // Field defaultQueryTimeout:I
      63: aload_0
      64: aload_1
      65: invokeinterface #15,  1           // InterfaceMethod java/sql/PreparedStatement.getFetchDirection:()I
      70: putfield      #16                 // Field defaultFetchDirection:I
      73: aload_0
      74: aload_1
      75: invokeinterface #17,  1           // InterfaceMethod java/sql/PreparedStatement.getFetchSize:()I
      80: putfield      #18                 // Field defaultFetchSize:I
      83: aload_0
      84: aload_0
      85: getfield      #10                 // Field defaultMaxFieldSize:I
      88: putfield      #19                 // Field currentMaxFieldSize:I
      91: aload_0
      92: aload_0
      93: getfield      #12                 // Field defaultMaxRows:I
      96: putfield      #20                 // Field currentMaxRows:I
      99: aload_0
     100: aload_0
     101: getfield      #14                 // Field defaultQueryTimeout:I
     104: putfield      #21                 // Field currentQueryTimeout:I
     107: aload_0
     108: aload_0
     109: getfield      #16                 // Field defaultFetchDirection:I
     112: putfield      #22                 // Field currentFetchDirection:I
     115: aload_0
     116: aload_0
     117: getfield      #18                 // Field defaultFetchSize:I
     120: putfield      #23                 // Field currentFetchSize:I
     123: return

  public java.sql.PreparedStatement getUnderlyingPreparedStatement();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: areturn

  public java.sql.ResultSet executeQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #24,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
       9: areturn

  public int executeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #25,  1           // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
       9: ireturn

  public void setNull(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: iload_2
       6: invokeinterface #26,  3           // InterfaceMethod java/sql/PreparedStatement.setNull:(II)V
      11: return

  public void setBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: iload_2
       6: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
      11: return

  public void setByte(int, byte) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: iload_2
       6: invokeinterface #28,  3           // InterfaceMethod java/sql/PreparedStatement.setByte:(IB)V
      11: return

  public void setShort(int, short) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: iload_2
       6: invokeinterface #29,  3           // InterfaceMethod java/sql/PreparedStatement.setShort:(IS)V
      11: return

  public void setInt(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: iload_2
       6: invokeinterface #30,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      11: return

  public void setLong(int, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: lload_2
       6: invokeinterface #31,  4           // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
      11: return

  public void setFloat(int, float) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: fload_2
       6: invokeinterface #32,  3           // InterfaceMethod java/sql/PreparedStatement.setFloat:(IF)V
      11: return

  public void setDouble(int, double) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: dload_2
       6: invokeinterface #33,  4           // InterfaceMethod java/sql/PreparedStatement.setDouble:(ID)V
      11: return

  public void setBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #34,  3           // InterfaceMethod java/sql/PreparedStatement.setBigDecimal:(ILjava/math/BigDecimal;)V
      11: return

  public void setString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #35,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      11: return

  public void setBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #36,  3           // InterfaceMethod java/sql/PreparedStatement.setBytes:(I[B)V
      11: return

  public void setDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #37,  3           // InterfaceMethod java/sql/PreparedStatement.setDate:(ILjava/sql/Date;)V
      11: return

  public void setTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #38,  3           // InterfaceMethod java/sql/PreparedStatement.setTime:(ILjava/sql/Time;)V
      11: return

  public void setTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #39,  3           // InterfaceMethod java/sql/PreparedStatement.setTimestamp:(ILjava/sql/Timestamp;)V
      11: return

  public void setAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #40,  4           // InterfaceMethod java/sql/PreparedStatement.setAsciiStream:(ILjava/io/InputStream;I)V
      12: return

  public void setUnicodeStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #41,  4           // InterfaceMethod java/sql/PreparedStatement.setUnicodeStream:(ILjava/io/InputStream;I)V
      12: return

  public void setBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #42,  4           // InterfaceMethod java/sql/PreparedStatement.setBinaryStream:(ILjava/io/InputStream;I)V
      12: return

  public void clearParameters() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #43,  1           // InterfaceMethod java/sql/PreparedStatement.clearParameters:()V
       9: return

  public void setObject(int, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokeinterface #44,  5           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;II)V
      14: return

  public void setObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #45,  4           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;I)V
      12: return

  public void setObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #46,  3           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;)V
      11: return

  public boolean execute() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #47,  1           // InterfaceMethod java/sql/PreparedStatement.execute:()Z
       9: ireturn

  public void addBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #48,  1           // InterfaceMethod java/sql/PreparedStatement.addBatch:()V
       9: return

  public void setCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: iload_3
       7: invokeinterface #49,  4           // InterfaceMethod java/sql/PreparedStatement.setCharacterStream:(ILjava/io/Reader;I)V
      12: return

  public void setRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #50,  3           // InterfaceMethod java/sql/PreparedStatement.setRef:(ILjava/sql/Ref;)V
      11: return

  public void setBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #51,  3           // InterfaceMethod java/sql/PreparedStatement.setBlob:(ILjava/sql/Blob;)V
      11: return

  public void setClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #52,  3           // InterfaceMethod java/sql/PreparedStatement.setClob:(ILjava/sql/Clob;)V
      11: return

  public void setArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #53,  3           // InterfaceMethod java/sql/PreparedStatement.setArray:(ILjava/sql/Array;)V
      11: return

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #54,  1           // InterfaceMethod java/sql/PreparedStatement.getMetaData:()Ljava/sql/ResultSetMetaData;
       9: areturn

  public void setDate(int, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #55,  4           // InterfaceMethod java/sql/PreparedStatement.setDate:(ILjava/sql/Date;Ljava/util/Calendar;)V
      12: return

  public void setTime(int, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #56,  4           // InterfaceMethod java/sql/PreparedStatement.setTime:(ILjava/sql/Time;Ljava/util/Calendar;)V
      12: return

  public void setTimestamp(int, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #57,  4           // InterfaceMethod java/sql/PreparedStatement.setTimestamp:(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
      12: return

  public void setNull(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokeinterface #58,  4           // InterfaceMethod java/sql/PreparedStatement.setNull:(IILjava/lang/String;)V
      12: return

  public void setURL(int, java.net.URL) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #59,  3           // InterfaceMethod java/sql/PreparedStatement.setURL:(ILjava/net/URL;)V
      11: return

  public java.sql.ParameterMetaData getParameterMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #60,  1           // InterfaceMethod java/sql/PreparedStatement.getParameterMetaData:()Ljava/sql/ParameterMetaData;
       9: areturn

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/sql/PreparedStatement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      10: areturn

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;)I
      10: ireturn

  public boolean isInUse();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inUse:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void inUse();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inUse:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  private void closePreparedStatement() throws java.sql.SQLException;
    Code:
       0: getstatic     #65                 // Field log:Lorg/jboss/logging/Logger;
       3: invokevirtual #66                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          40
       9: new           #67                 // class java/lang/Throwable
      12: dup
      13: ldc           #68                 // String PreparedStatement.close() called
      15: invokespecial #69                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokestatic  #70                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      23: invokestatic  #71                 // Method org/jboss/jca/adapters/jdbc/SecurityActions.getStackTrace:(Ljava/lang/Thread;)[Ljava/lang/StackTraceElement;
      26: invokevirtual #72                 // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
      29: getstatic     #65                 // Field log:Lorg/jboss/logging/Logger;
      32: aload_1
      33: invokevirtual #73                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      36: aload_1
      37: invokevirtual #74                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: aload_0
      41: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
      44: invokeinterface #75,  1           // InterfaceMethod java/sql/PreparedStatement.close:()V
      49: return

  public void agedOut() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field cached:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #7                  // Field inUse:Ljava/util/concurrent/atomic/AtomicInteger;
      12: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      15: ifne          22
      18: aload_0
      19: invokespecial #77                 // Method closePreparedStatement:()V
      22: return

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inUse:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ifne          187
      10: aload_0
      11: getfield      #4                  // Field cached:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: invokevirtual #79                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      17: ifne          27
      20: aload_0
      21: invokespecial #77                 // Method closePreparedStatement:()V
      24: goto          187
      27: aload_0
      28: getfield      #10                 // Field defaultMaxFieldSize:I
      31: aload_0
      32: getfield      #19                 // Field currentMaxFieldSize:I
      35: if_icmpeq     59
      38: aload_0
      39: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
      42: aload_0
      43: getfield      #10                 // Field defaultMaxFieldSize:I
      46: invokeinterface #80,  2           // InterfaceMethod java/sql/PreparedStatement.setMaxFieldSize:(I)V
      51: aload_0
      52: aload_0
      53: getfield      #10                 // Field defaultMaxFieldSize:I
      56: putfield      #19                 // Field currentMaxFieldSize:I
      59: aload_0
      60: getfield      #12                 // Field defaultMaxRows:I
      63: aload_0
      64: getfield      #20                 // Field currentMaxRows:I
      67: if_icmpeq     91
      70: aload_0
      71: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
      74: aload_0
      75: getfield      #12                 // Field defaultMaxRows:I
      78: invokeinterface #81,  2           // InterfaceMethod java/sql/PreparedStatement.setMaxRows:(I)V
      83: aload_0
      84: aload_0
      85: getfield      #12                 // Field defaultMaxRows:I
      88: putfield      #20                 // Field currentMaxRows:I
      91: aload_0
      92: getfield      #14                 // Field defaultQueryTimeout:I
      95: aload_0
      96: getfield      #21                 // Field currentQueryTimeout:I
      99: if_icmpeq     123
     102: aload_0
     103: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
     106: aload_0
     107: getfield      #14                 // Field defaultQueryTimeout:I
     110: invokeinterface #82,  2           // InterfaceMethod java/sql/PreparedStatement.setQueryTimeout:(I)V
     115: aload_0
     116: aload_0
     117: getfield      #14                 // Field defaultQueryTimeout:I
     120: putfield      #21                 // Field currentQueryTimeout:I
     123: aload_0
     124: getfield      #16                 // Field defaultFetchDirection:I
     127: aload_0
     128: getfield      #22                 // Field currentFetchDirection:I
     131: if_icmpeq     155
     134: aload_0
     135: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
     138: aload_0
     139: getfield      #16                 // Field defaultFetchDirection:I
     142: invokeinterface #83,  2           // InterfaceMethod java/sql/PreparedStatement.setFetchDirection:(I)V
     147: aload_0
     148: aload_0
     149: getfield      #16                 // Field defaultFetchDirection:I
     152: putfield      #22                 // Field currentFetchDirection:I
     155: aload_0
     156: getfield      #18                 // Field defaultFetchSize:I
     159: aload_0
     160: getfield      #23                 // Field currentFetchSize:I
     163: if_icmpeq     187
     166: aload_0
     167: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
     170: aload_0
     171: getfield      #18                 // Field defaultFetchSize:I
     174: invokeinterface #84,  2           // InterfaceMethod java/sql/PreparedStatement.setFetchSize:(I)V
     179: aload_0
     180: aload_0
     181: getfield      #18                 // Field defaultFetchSize:I
     184: putfield      #23                 // Field currentFetchSize:I
     187: return

  public int getMaxFieldSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #9,  1            // InterfaceMethod java/sql/PreparedStatement.getMaxFieldSize:()I
       9: ireturn

  public void setMaxFieldSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #80,  2           // InterfaceMethod java/sql/PreparedStatement.setMaxFieldSize:(I)V
      10: aload_0
      11: iload_1
      12: putfield      #19                 // Field currentMaxFieldSize:I
      15: return

  public int getMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #11,  1           // InterfaceMethod java/sql/PreparedStatement.getMaxRows:()I
       9: ireturn

  public void setMaxRows(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #81,  2           // InterfaceMethod java/sql/PreparedStatement.setMaxRows:(I)V
      10: aload_0
      11: iload_1
      12: putfield      #20                 // Field currentMaxRows:I
      15: return

  public void setEscapeProcessing(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #85,  2           // InterfaceMethod java/sql/PreparedStatement.setEscapeProcessing:(Z)V
      10: return

  public int getQueryTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #13,  1           // InterfaceMethod java/sql/PreparedStatement.getQueryTimeout:()I
       9: ireturn

  public void setQueryTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #82,  2           // InterfaceMethod java/sql/PreparedStatement.setQueryTimeout:(I)V
      10: aload_0
      11: iload_1
      12: putfield      #21                 // Field currentQueryTimeout:I
      15: return

  public void cancel() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #86,  1           // InterfaceMethod java/sql/PreparedStatement.cancel:()V
       9: return

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #87,  1           // InterfaceMethod java/sql/PreparedStatement.getWarnings:()Ljava/sql/SQLWarning;
       9: areturn

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #88,  1           // InterfaceMethod java/sql/PreparedStatement.clearWarnings:()V
       9: return

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod java/sql/PreparedStatement.setCursorName:(Ljava/lang/String;)V
      10: return

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;)Z
      10: ireturn

  public java.sql.ResultSet getResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #91,  1           // InterfaceMethod java/sql/PreparedStatement.getResultSet:()Ljava/sql/ResultSet;
       9: areturn

  public int getUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #92,  1           // InterfaceMethod java/sql/PreparedStatement.getUpdateCount:()I
       9: ireturn

  public boolean getMoreResults() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #93,  1           // InterfaceMethod java/sql/PreparedStatement.getMoreResults:()Z
       9: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #83,  2           // InterfaceMethod java/sql/PreparedStatement.setFetchDirection:(I)V
      10: aload_0
      11: iload_1
      12: putfield      #22                 // Field currentFetchDirection:I
      15: return

  public int getFetchDirection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #15,  1           // InterfaceMethod java/sql/PreparedStatement.getFetchDirection:()I
       9: ireturn

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #84,  2           // InterfaceMethod java/sql/PreparedStatement.setFetchSize:(I)V
      10: aload_0
      11: iload_1
      12: putfield      #23                 // Field currentFetchSize:I
      15: return

  public int getFetchSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #17,  1           // InterfaceMethod java/sql/PreparedStatement.getFetchSize:()I
       9: ireturn

  public int getResultSetConcurrency() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #94,  1           // InterfaceMethod java/sql/PreparedStatement.getResultSetConcurrency:()I
       9: ireturn

  public int getResultSetType() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #95,  1           // InterfaceMethod java/sql/PreparedStatement.getResultSetType:()I
       9: ireturn

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: invokeinterface #96,  2           // InterfaceMethod java/sql/PreparedStatement.addBatch:(Ljava/lang/String;)V
      10: return

  public void clearBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #97,  1           // InterfaceMethod java/sql/PreparedStatement.clearBatch:()V
       9: return

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #98,  1           // InterfaceMethod java/sql/PreparedStatement.executeBatch:()[I
       9: areturn

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #99,  1           // InterfaceMethod java/sql/PreparedStatement.getConnection:()Ljava/sql/Connection;
       9: areturn

  public boolean getMoreResults(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #100,  2          // InterfaceMethod java/sql/PreparedStatement.getMoreResults:(I)Z
      10: ireturn

  public java.sql.ResultSet getGeneratedKeys() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #101,  1          // InterfaceMethod java/sql/PreparedStatement.getGeneratedKeys:()Ljava/sql/ResultSet;
       9: areturn

  public int executeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: iload_2
       6: invokeinterface #102,  3          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;I)I
      11: ireturn

  public int executeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: aload_2
       6: invokeinterface #103,  3          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;[I)I
      11: ireturn

  public int executeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: aload_2
       6: invokeinterface #104,  3          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;[Ljava/lang/String;)I
      11: ireturn

  public boolean execute(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: iload_2
       6: invokeinterface #105,  3          // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;I)Z
      11: ireturn

  public boolean execute(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: aload_2
       6: invokeinterface #106,  3          // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;[I)Z
      11: ireturn

  public boolean execute(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: aload_1
       5: aload_2
       6: invokeinterface #107,  3          // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;[Ljava/lang/String;)Z
      11: ireturn

  public int getResultSetHoldability() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #108,  1          // InterfaceMethod java/sql/PreparedStatement.getResultSetHoldability:()I
       9: ireturn

  public void setAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #109,  5          // InterfaceMethod java/sql/PreparedStatement.setAsciiStream:(ILjava/io/InputStream;J)V
      12: return

  public void setAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #110,  3          // InterfaceMethod java/sql/PreparedStatement.setAsciiStream:(ILjava/io/InputStream;)V
      11: return

  public void setBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #111,  5          // InterfaceMethod java/sql/PreparedStatement.setBinaryStream:(ILjava/io/InputStream;J)V
      12: return

  public void setBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #112,  3          // InterfaceMethod java/sql/PreparedStatement.setBinaryStream:(ILjava/io/InputStream;)V
      11: return

  public void setBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #113,  5          // InterfaceMethod java/sql/PreparedStatement.setBlob:(ILjava/io/InputStream;J)V
      12: return

  public void setBlob(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #114,  3          // InterfaceMethod java/sql/PreparedStatement.setBlob:(ILjava/io/InputStream;)V
      11: return

  public void setCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #115,  5          // InterfaceMethod java/sql/PreparedStatement.setCharacterStream:(ILjava/io/Reader;J)V
      12: return

  public void setCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #116,  3          // InterfaceMethod java/sql/PreparedStatement.setCharacterStream:(ILjava/io/Reader;)V
      11: return

  public void setClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #117,  5          // InterfaceMethod java/sql/PreparedStatement.setClob:(ILjava/io/Reader;J)V
      12: return

  public void setClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #118,  3          // InterfaceMethod java/sql/PreparedStatement.setClob:(ILjava/io/Reader;)V
      11: return

  public void setNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #119,  5          // InterfaceMethod java/sql/PreparedStatement.setNCharacterStream:(ILjava/io/Reader;J)V
      12: return

  public void setNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #120,  3          // InterfaceMethod java/sql/PreparedStatement.setNCharacterStream:(ILjava/io/Reader;)V
      11: return

  public void setNClob(int, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #121,  3          // InterfaceMethod java/sql/PreparedStatement.setNClob:(ILjava/sql/NClob;)V
      11: return

  public void setNClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: lload_3
       7: invokeinterface #122,  5          // InterfaceMethod java/sql/PreparedStatement.setNClob:(ILjava/io/Reader;J)V
      12: return

  public void setNClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #123,  3          // InterfaceMethod java/sql/PreparedStatement.setNClob:(ILjava/io/Reader;)V
      11: return

  public void setNString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #124,  3          // InterfaceMethod java/sql/PreparedStatement.setNString:(ILjava/lang/String;)V
      11: return

  public void setRowId(int, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #125,  3          // InterfaceMethod java/sql/PreparedStatement.setRowId:(ILjava/sql/RowId;)V
      11: return

  public void setSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: aload_2
       6: invokeinterface #126,  3          // InterfaceMethod java/sql/PreparedStatement.setSQLXML:(ILjava/sql/SQLXML;)V
      11: return

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #127,  1          // InterfaceMethod java/sql/PreparedStatement.isClosed:()Z
       9: ireturn

  public boolean isPoolable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #128,  1          // InterfaceMethod java/sql/PreparedStatement.isPoolable:()Z
       9: ireturn

  public void setPoolable(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: iload_1
       5: invokeinterface #129,  2          // InterfaceMethod java/sql/PreparedStatement.setPoolable:(Z)V
      10: return

  public void closeOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #130,  1          // InterfaceMethod java/sql/PreparedStatement.closeOnCompletion:()V
       9: return

  public boolean isCloseOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: invokeinterface #131,  1          // InterfaceMethod java/sql/PreparedStatement.isCloseOnCompletion:()Z
       9: ireturn

  protected java.sql.PreparedStatement getWrappedObject() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field ps:Ljava/sql/PreparedStatement;
       4: areturn

  protected java.lang.Object getWrappedObject() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #132                // Method getWrappedObject:()Ljava/sql/PreparedStatement;
       4: areturn

  static {};
    Code:
       0: ldc_w         #133                // class org/jboss/jca/adapters/jdbc/CachedPreparedStatement
       3: invokestatic  #134                // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       6: putstatic     #65                 // Field log:Lorg/jboss/logging/Logger;
       9: return
}
