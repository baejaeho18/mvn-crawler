Compiled from "WorkManagerStatisticsImpl.java"
public class org.jboss.jca.core.workmanager.WorkManagerStatisticsImpl implements org.jboss.jca.core.api.workmanager.WorkManagerStatistics {
  private java.util.concurrent.atomic.AtomicInteger active;

  private java.util.concurrent.atomic.AtomicInteger successful;

  private java.util.concurrent.atomic.AtomicInteger failed;

  private java.util.concurrent.atomic.AtomicInteger doWorkAccepted;

  private java.util.concurrent.atomic.AtomicInteger doWorkRejected;

  private java.util.concurrent.atomic.AtomicInteger scheduleWorkAccepted;

  private java.util.concurrent.atomic.AtomicInteger scheduleWorkRejected;

  private java.util.concurrent.atomic.AtomicInteger startWorkAccepted;

  private java.util.concurrent.atomic.AtomicInteger startWorkRejected;

  public org.jboss.jca.core.workmanager.WorkManagerStatisticsImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      20: dup
      21: iconst_0
      22: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      25: putfield      #5                  // Field successful:Ljava/util/concurrent/atomic/AtomicInteger;
      28: aload_0
      29: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      32: dup
      33: iconst_0
      34: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      37: putfield      #6                  // Field failed:Ljava/util/concurrent/atomic/AtomicInteger;
      40: aload_0
      41: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      44: dup
      45: iconst_0
      46: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      49: putfield      #7                  // Field doWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
      52: aload_0
      53: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      56: dup
      57: iconst_0
      58: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      61: putfield      #8                  // Field doWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
      64: aload_0
      65: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      68: dup
      69: iconst_0
      70: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      73: putfield      #9                  // Field scheduleWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
      76: aload_0
      77: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      80: dup
      81: iconst_0
      82: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      85: putfield      #10                 // Field scheduleWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
      88: aload_0
      89: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      92: dup
      93: iconst_0
      94: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      97: putfield      #11                 // Field startWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
     100: aload_0
     101: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
     104: dup
     105: iconst_0
     106: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
     109: putfield      #12                 // Field startWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
     112: return

  public int getWorkActive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void setWorkActive(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: return

  public int getWorkSuccessful();
    Code:
       0: aload_0
       1: getfield      #5                  // Field successful:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaWorkSuccessful();
    Code:
       0: aload_0
       1: getfield      #5                  // Field successful:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public int getWorkFailed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field failed:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaWorkFailed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field failed:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public int getDoWorkAccepted();
    Code:
       0: aload_0
       1: getfield      #7                  // Field doWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaDoWorkAccepted();
    Code:
       0: aload_0
       1: getfield      #7                  // Field doWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public int getDoWorkRejected();
    Code:
       0: aload_0
       1: getfield      #8                  // Field doWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaDoWorkRejected();
    Code:
       0: aload_0
       1: getfield      #8                  // Field doWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public int getScheduleWorkAccepted();
    Code:
       0: aload_0
       1: getfield      #9                  // Field scheduleWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaScheduleWorkAccepted();
    Code:
       0: aload_0
       1: getfield      #9                  // Field scheduleWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public int getScheduleWorkRejected();
    Code:
       0: aload_0
       1: getfield      #10                 // Field scheduleWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaScheduleWorkRejected();
    Code:
       0: aload_0
       1: getfield      #10                 // Field scheduleWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public int getStartWorkAccepted();
    Code:
       0: aload_0
       1: getfield      #11                 // Field startWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaStartWorkAccepted();
    Code:
       0: aload_0
       1: getfield      #11                 // Field startWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public int getStartWorkRejected();
    Code:
       0: aload_0
       1: getfield      #12                 // Field startWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void deltaStartWorkRejected();
    Code:
       0: aload_0
       1: getfield      #12                 // Field startWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public synchronized void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_0
       5: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: aload_0
       9: getfield      #5                  // Field successful:Ljava/util/concurrent/atomic/AtomicInteger;
      12: iconst_0
      13: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: aload_0
      17: getfield      #6                  // Field failed:Ljava/util/concurrent/atomic/AtomicInteger;
      20: iconst_0
      21: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      24: aload_0
      25: getfield      #7                  // Field doWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
      28: iconst_0
      29: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      32: aload_0
      33: getfield      #8                  // Field doWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
      36: iconst_0
      37: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      40: aload_0
      41: getfield      #9                  // Field scheduleWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
      44: iconst_0
      45: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      48: aload_0
      49: getfield      #10                 // Field scheduleWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
      52: iconst_0
      53: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      56: aload_0
      57: getfield      #11                 // Field startWorkAccepted:Ljava/util/concurrent/atomic/AtomicInteger;
      60: iconst_0
      61: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      64: aload_0
      65: getfield      #12                 // Field startWorkRejected:Ljava/util/concurrent/atomic/AtomicInteger;
      68: iconst_0
      69: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      72: return

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #18                 // String WorkManagerStatistics@
      11: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokestatic  #20                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      18: invokestatic  #21                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_1
      26: ldc           #22                 // String [active=
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #23                 // Method getWorkActive:()I
      35: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: pop
      39: aload_1
      40: ldc           #25                 // String  successful=
      42: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #26                 // Method getWorkSuccessful:()I
      49: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: pop
      53: aload_1
      54: ldc           #27                 // String  failed=
      56: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #28                 // Method getWorkFailed:()I
      63: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: pop
      67: aload_1
      68: ldc           #29                 // String  doWorkAccepted=
      70: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #30                 // Method getDoWorkAccepted:()I
      77: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: pop
      81: aload_1
      82: ldc           #31                 // String  doWorkRejected=
      84: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: invokevirtual #32                 // Method getDoWorkRejected:()I
      91: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: pop
      95: aload_1
      96: ldc           #33                 // String  scheduleWorkAccepted=
      98: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: invokevirtual #34                 // Method getScheduleWorkAccepted:()I
     105: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     108: pop
     109: aload_1
     110: ldc           #35                 // String  scheduleWorkRejected=
     112: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: invokevirtual #36                 // Method getScheduleWorkRejected:()I
     119: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     122: pop
     123: aload_1
     124: ldc           #37                 // String  startWorkAccepted=
     126: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: invokevirtual #38                 // Method getStartWorkAccepted:()I
     133: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: pop
     137: aload_1
     138: ldc           #39                 // String  startWorkRejected=
     140: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_0
     144: invokevirtual #40                 // Method getStartWorkRejected:()I
     147: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     150: pop
     151: aload_1
     152: ldc           #41                 // String ]
     154: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: pop
     158: aload_1
     159: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: areturn
}
