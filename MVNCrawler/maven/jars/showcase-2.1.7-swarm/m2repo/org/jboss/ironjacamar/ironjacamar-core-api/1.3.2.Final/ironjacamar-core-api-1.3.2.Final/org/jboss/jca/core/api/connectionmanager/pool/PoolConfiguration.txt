Compiled from "PoolConfiguration.java"
public class org.jboss.jca.core.api.connectionmanager.pool.PoolConfiguration {
  private java.util.concurrent.atomic.AtomicInteger minSize;

  private java.util.concurrent.atomic.AtomicInteger initialSize;

  private java.util.concurrent.atomic.AtomicInteger maxSize;

  private java.util.concurrent.atomic.AtomicLong blockingTimeout;

  private java.util.concurrent.atomic.AtomicInteger idleTimeoutMinutes;

  private java.util.concurrent.atomic.AtomicBoolean validateOnMatch;

  private java.util.concurrent.atomic.AtomicBoolean backgroundValidation;

  private java.util.concurrent.atomic.AtomicLong backgroundValidationMillis;

  private java.util.concurrent.atomic.AtomicBoolean prefill;

  private java.util.concurrent.atomic.AtomicBoolean strictMin;

  private java.util.concurrent.atomic.AtomicBoolean useFastFail;

  private java.util.concurrent.atomic.AtomicBoolean fair;

  public org.jboss.jca.core.api.connectionmanager.pool.PoolConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field minSize:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      25: dup
      26: bipush        20
      28: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      31: putfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
      34: aload_0
      35: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      38: dup
      39: ldc2_w        #8                  // long 30000l
      42: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      45: putfield      #11                 // Field blockingTimeout:Ljava/util/concurrent/atomic/AtomicLong;
      48: aload_0
      49: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      52: dup
      53: bipush        30
      55: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      58: putfield      #12                 // Field idleTimeoutMinutes:Ljava/util/concurrent/atomic/AtomicInteger;
      61: aload_0
      62: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
      65: dup
      66: iconst_0
      67: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      70: putfield      #15                 // Field validateOnMatch:Ljava/util/concurrent/atomic/AtomicBoolean;
      73: aload_0
      74: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
      77: dup
      78: iconst_0
      79: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      82: putfield      #16                 // Field backgroundValidation:Ljava/util/concurrent/atomic/AtomicBoolean;
      85: aload_0
      86: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      89: dup
      90: lconst_0
      91: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      94: putfield      #17                 // Field backgroundValidationMillis:Ljava/util/concurrent/atomic/AtomicLong;
      97: aload_0
      98: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
     101: dup
     102: iconst_0
     103: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     106: putfield      #18                 // Field prefill:Ljava/util/concurrent/atomic/AtomicBoolean;
     109: aload_0
     110: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
     113: dup
     114: iconst_0
     115: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     118: putfield      #19                 // Field strictMin:Ljava/util/concurrent/atomic/AtomicBoolean;
     121: aload_0
     122: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
     125: dup
     126: iconst_0
     127: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     130: putfield      #20                 // Field useFastFail:Ljava/util/concurrent/atomic/AtomicBoolean;
     133: aload_0
     134: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
     137: dup
     138: iconst_1
     139: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     142: putfield      #21                 // Field fair:Ljava/util/concurrent/atomic/AtomicBoolean;
     145: return

  public int getMinSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field minSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: aload_0
       8: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
      11: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      14: if_icmple     25
      17: aload_0
      18: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
      21: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      24: ireturn
      25: aload_0
      26: getfield      #4                  // Field minSize:Ljava/util/concurrent/atomic/AtomicInteger;
      29: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      32: ireturn

  public void setMinSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field minSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: return

  public int getInitialSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: ifnonnull     12
       7: aload_0
       8: invokevirtual #24                 // Method getMinSize:()I
      11: ireturn
      12: aload_0
      13: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      19: aload_0
      20: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      26: if_icmple     37
      29: aload_0
      30: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
      33: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      36: ireturn
      37: aload_0
      38: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      41: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      44: ireturn

  public void setInitialSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: ifnonnull     19
       7: aload_0
       8: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      11: dup
      12: iconst_0
      13: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      16: putfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      19: aload_0
      20: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      23: iload_1
      24: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      27: return

  public int getMaxSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: aload_0
       8: getfield      #4                  // Field minSize:Ljava/util/concurrent/atomic/AtomicInteger;
      11: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      14: if_icmpge     25
      17: aload_0
      18: getfield      #4                  // Field minSize:Ljava/util/concurrent/atomic/AtomicInteger;
      21: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      24: ireturn
      25: aload_0
      26: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
      29: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      32: ireturn

  public void setMaxSize(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: return

  public long getBlockingTimeout();
    Code:
       0: aload_0
       1: getfield      #11                 // Field blockingTimeout:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void setBlockingTimeout(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field blockingTimeout:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  public int getIdleTimeoutMinutes();
    Code:
       0: aload_0
       1: getfield      #12                 // Field idleTimeoutMinutes:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public void setIdleTimeoutMinutes(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field idleTimeoutMinutes:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: return

  public boolean isValidateOnMatch();
    Code:
       0: aload_0
       1: getfield      #15                 // Field validateOnMatch:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setValidateOnMatch(boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field validateOnMatch:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isBackgroundValidation();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isValidateOnMatch:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #16                 // Field backgroundValidation:Ljava/util/concurrent/atomic/AtomicBoolean;
      13: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      16: ireturn

  public void setBackgroundValidation(boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field backgroundValidation:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public long getBackgroundValidationMillis();
    Code:
       0: aload_0
       1: getfield      #17                 // Field backgroundValidationMillis:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void setBackgroundValidationMillis(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field backgroundValidationMillis:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  public boolean isPrefill();
    Code:
       0: aload_0
       1: getfield      #18                 // Field prefill:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          17
      10: aload_0
      11: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void setPrefill(boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field prefill:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isStrictMin();
    Code:
       0: aload_0
       1: getfield      #19                 // Field strictMin:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setStrictMin(boolean);
    Code:
       0: aload_0
       1: getfield      #19                 // Field strictMin:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isFair();
    Code:
       0: aload_0
       1: getfield      #21                 // Field fair:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setFair(boolean);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fair:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isUseFastFail();
    Code:
       0: aload_0
       1: getfield      #20                 // Field useFastFail:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setUseFastFail(boolean);
    Code:
       0: aload_0
       1: getfield      #20                 // Field useFastFail:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iload_1
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #32                 // String PoolConfiguration@
      11: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokestatic  #34                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      18: invokestatic  #35                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_1
      26: ldc           #36                 // String [minSize=
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #4                  // Field minSize:Ljava/util/concurrent/atomic/AtomicInteger;
      35: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      38: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: pop
      42: aload_1
      43: ldc           #38                 // String  initialSize=
      45: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      52: ifnull        68
      55: aload_0
      56: getfield      #5                  // Field initialSize:Ljava/util/concurrent/atomic/AtomicInteger;
      59: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      62: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: goto          70
      68: ldc           #40                 // String null
      70: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_1
      75: ldc           #42                 // String  maxSize=
      77: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #6                  // Field maxSize:Ljava/util/concurrent/atomic/AtomicInteger;
      84: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      87: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: ldc           #43                 // String  blockingTimeout=
      94: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_0
      98: getfield      #11                 // Field blockingTimeout:Ljava/util/concurrent/atomic/AtomicLong;
     101: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     104: invokevirtual #44                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     107: pop
     108: aload_1
     109: ldc           #45                 // String  idleTimeoutMinutes=
     111: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #12                 // Field idleTimeoutMinutes:Ljava/util/concurrent/atomic/AtomicInteger;
     118: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     121: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     124: pop
     125: aload_1
     126: ldc           #46                 // String  validateOnMatch=
     128: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: getfield      #15                 // Field validateOnMatch:Ljava/util/concurrent/atomic/AtomicBoolean;
     135: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     138: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     141: pop
     142: aload_1
     143: ldc           #48                 // String  backgroundValidation=
     145: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_0
     149: getfield      #16                 // Field backgroundValidation:Ljava/util/concurrent/atomic/AtomicBoolean;
     152: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     155: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     158: pop
     159: aload_1
     160: ldc           #49                 // String  backgroundValidationMillis=
     162: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_0
     166: getfield      #17                 // Field backgroundValidationMillis:Ljava/util/concurrent/atomic/AtomicLong;
     169: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     172: invokevirtual #44                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     175: pop
     176: aload_1
     177: ldc           #50                 // String  prefill=
     179: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload_0
     183: getfield      #18                 // Field prefill:Ljava/util/concurrent/atomic/AtomicBoolean;
     186: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     189: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     192: pop
     193: aload_1
     194: ldc           #51                 // String  strictMin=
     196: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_0
     200: getfield      #19                 // Field strictMin:Ljava/util/concurrent/atomic/AtomicBoolean;
     203: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     206: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     209: pop
     210: aload_1
     211: ldc           #52                 // String  useFastFail=
     213: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_0
     217: getfield      #20                 // Field useFastFail:Ljava/util/concurrent/atomic/AtomicBoolean;
     220: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     223: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     226: pop
     227: aload_1
     228: ldc           #53                 // String  fair=
     230: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload_0
     234: getfield      #21                 // Field fair:Ljava/util/concurrent/atomic/AtomicBoolean;
     237: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     240: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     243: pop
     244: aload_1
     245: ldc           #54                 // String ]
     247: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: pop
     251: aload_1
     252: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     255: areturn
}
