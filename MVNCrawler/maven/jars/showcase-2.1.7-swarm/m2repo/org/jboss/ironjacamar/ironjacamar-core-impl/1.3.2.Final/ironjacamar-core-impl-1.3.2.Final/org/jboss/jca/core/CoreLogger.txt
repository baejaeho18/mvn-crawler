Compiled from "CoreLogger.java"
public interface org.jboss.jca.core.CoreLogger extends org.jboss.logging.BasicLogger {
  public abstract void closingConnection(java.lang.Object);

  public abstract void closingConnection(java.lang.Object, java.lang.Throwable);

  public abstract void closingConnectionThrowable(java.lang.Throwable);

  public abstract void closingConnectionNoClose(java.lang.String);

  public abstract void securityContextSetupFailed(java.lang.String, java.lang.Throwable);

  public abstract void securityContextSetupFailedCallbackSecurityNull();

  public abstract void registeredNullHandleManagedConnection(java.lang.Object);

  public abstract void unregisteredHandleNotRegistered(java.lang.Object, java.lang.Object);

  public abstract void unregisteredNullHandleManagedConnection(java.lang.Object);

  public abstract void connectionErrorOccured(java.lang.Object, java.lang.Throwable);

  public abstract void unknownConnectionErrorOccured(java.lang.Object, java.lang.Throwable);

  public abstract void notifiedErrorDifferentManagedConnection();

  public abstract void throwableFromUnregisterConnection(java.lang.Throwable);

  public abstract void errorWhileClosingConnectionHandle(java.lang.Throwable);

  public abstract void somethingWrongWithPooling(java.lang.Throwable);

  public abstract void beforeCompletionErrorOccured(java.lang.Object, java.lang.Throwable);

  public abstract void activeHandles(java.lang.String, int);

  public abstract void activeHandle(java.lang.Object, java.lang.Exception);

  public abstract void txConnectionListenerBoundary(java.lang.Exception);

  public abstract void delistingFailed(java.lang.String, java.lang.Exception);

  public abstract void errorDuringTidyUpConnection(java.lang.Object, java.lang.Throwable);

  public abstract void resourceExceptionReturningConnection(java.lang.Object, java.lang.Throwable);

  public abstract void reconnectingConnectionHandleHasManagedConnection(java.lang.Object, java.lang.Object);

  public abstract void uncheckedThrowableInManagedConnectionDisconnected(java.lang.Object, java.lang.Throwable);

  public abstract void multipleLocalTransactionConnectionListenerEnlisted(java.lang.String, java.lang.Object);

  public abstract void throwableReturningConnection(java.lang.Object, java.lang.Throwable);

  public abstract void noLazyEnlistmentAvailable(java.lang.String);

  public abstract void deprecatedPool(java.lang.String, java.lang.String);

  public abstract void threadIsnotEnlistingThread(java.lang.Object, java.lang.Object, java.lang.Throwable);

  public abstract void transactionErrorInBeforeCompletion(java.lang.Object, java.lang.Object, java.lang.Throwable);

  public abstract void transactionErrorInAfterCompletion(java.lang.Object, java.lang.Object, java.lang.Throwable);

  public abstract void transactionNotFound(java.lang.Object);

  public abstract void returningConnectionValidatorInterrupted();

  public abstract void connectionValidatorIgnoredUnexpectedRuntimeException(java.lang.Throwable);

  public abstract void connectionValidatorIgnoredUnexpectedError(java.lang.Throwable);

  public abstract void throwableWhileAttemptingGetNewGonnection(java.lang.Object, java.lang.Throwable);

  public abstract void destroyingConnectionNotSuccessfullyMatched(java.lang.Object, java.lang.Object);

  public abstract void throwableWhileTryingMatchManagedConnection(java.lang.Object, java.lang.Throwable);

  public abstract void resourceExceptionCleaningUpManagedConnection(java.lang.Object, java.lang.Throwable);

  public abstract void destroyingReturnedConnectionMaximumPoolSizeExceeded(java.lang.Object);

  public abstract void attemptReturnConnectionTwice(java.lang.Object, java.lang.Throwable);

  public abstract void unableFillPool(java.lang.Throwable);

  public abstract void backgroundValidationNonCompliantManagedConnectionFactory();

  public abstract void destroyingConnectionNotSuccessfullyMatched(java.lang.Object);

  public abstract void throwableWhileTryingMatchManagedConnectionThenDestroyingConnection(java.lang.Object, java.lang.Throwable);

  public abstract void exceptionDuringCreateSubject(java.lang.String, java.lang.Throwable);

  public abstract void destroyingActiveConnection(java.lang.String, java.lang.Object);

  public abstract void connectionLeak(java.lang.String, java.lang.String, long, java.lang.Throwable);

  public abstract void invalidCapacityIncrementer(java.lang.String);

  public abstract void invalidCapacityDecrementer(java.lang.String);

  public abstract void invalidCapacityOption(java.lang.String, java.lang.String, java.lang.String);

  public abstract void validateOnMatchNonCompliantManagedConnectionFactory(java.lang.String);

  public abstract void destroyingConnectionNotValidated(java.lang.Object);

  public abstract void unsupportedPoolImplementation(java.lang.String);

  public abstract void exceptionDuringUnbind(java.lang.Throwable);

  public abstract void exceptionDuringConnectionClose(java.lang.Throwable);

  public abstract void exceptionDuringCrashRecoveryInflow(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void exceptionDuringCrashRecoverySubject(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void noCrashRecoverySecurityDomain(java.lang.String);

  public abstract void nullSubjectCrashRecovery(java.lang.String);

  public abstract void exceptionDuringCrashRecovery(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void noUsersPropertiesFound();

  public abstract void errorWhileLoadingUsersProperties(java.lang.Throwable);

  public abstract void noRolesPropertiesFound();

  public abstract void errorWhileLoadingRolesProperties(java.lang.Throwable);

  public abstract void noCallbackPropertiesFound();

  public abstract void errorWhileLoadingCallbackProperties(java.lang.Throwable);

  public abstract void prepareCalledOnLocaltx();
}
