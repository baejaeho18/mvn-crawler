Compiled from "TXDataMapImpl.java"
public class org.jboss.narayana.txframework.impl.TXDataMapImpl<K, V> implements org.jboss.narayana.txframework.api.management.TXDataMap<K, V> {
  static final java.lang.ThreadLocal<java.util.Map> mapThreadLocal;

  public org.jboss.narayana.txframework.impl.TXDataMapImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void resume(java.util.Map);
    Code:
       0: getstatic     #2                  // Field mapThreadLocal:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #3                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public static void suspend();
    Code:
       0: getstatic     #2                  // Field mapThreadLocal:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.remove:()V
       6: return

  private java.util.Map<K, V> getMap();
    Code:
       0: getstatic     #2                  // Field mapThreadLocal:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnonnull     19
       9: new           #6                  // class org/jboss/narayana/txframework/api/exception/TransactionDataUnavailableException
      12: dup
      13: ldc           #7                  // String There is no transaction data associated with this thread
      15: invokespecial #8                  // Method org/jboss/narayana/txframework/api/exception/TransactionDataUnavailableException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: getstatic     #2                  // Field mapThreadLocal:Ljava/lang/ThreadLocal;
      22: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      25: checkcast     #9                  // class java/util/Map
      28: areturn

  public int size();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      10: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getMap:()Ljava/util/Map;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public static java.util.Map getState();
    Code:
       0: getstatic     #2                  // Field mapThreadLocal:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #9                  // class java/util/Map
       9: areturn

  public static boolean isActive();
    Code:
       0: getstatic     #2                  // Field mapThreadLocal:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static {};
    Code:
       0: new           #25                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #26                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #2                  // Field mapThreadLocal:Ljava/lang/ThreadLocal;
      10: return
}
