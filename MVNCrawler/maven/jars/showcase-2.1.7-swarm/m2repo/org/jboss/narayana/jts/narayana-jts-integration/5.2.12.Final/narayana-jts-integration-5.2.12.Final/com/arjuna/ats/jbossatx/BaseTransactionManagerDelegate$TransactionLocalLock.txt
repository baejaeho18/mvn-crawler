Compiled from "BaseTransactionManagerDelegate.java"
class com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate$TransactionLocalLock {
  private java.lang.Thread lockingThread;

  private int lockCount;

  private byte[] lock;

  final com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate this$0;

  private com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate$TransactionLocalLock(com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/arjuna/ats/jbossatx/BaseTransactionManagerDelegate;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: newarray       byte
      13: putfield      #4                  // Field lock:[B
      16: return

  public boolean lock(com.arjuna.ats.jta.transaction.Transaction);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:[B
       4: dup
       5: astore_2
       6: monitorenter
       7: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      10: astore_3
      11: aload_3
      12: aload_0
      13: getfield      #6                  // Field lockingThread:Ljava/lang/Thread;
      16: if_acmpne     33
      19: aload_0
      20: dup
      21: getfield      #7                  // Field lockCount:I
      24: iconst_1
      25: iadd
      26: putfield      #7                  // Field lockCount:I
      29: iconst_1
      30: aload_2
      31: monitorexit
      32: ireturn
      33: aload_0
      34: getfield      #6                  // Field lockingThread:Ljava/lang/Thread;
      37: ifnull        102
      40: lconst_0
      41: lstore        4
      43: aload_0
      44: getfield      #2                  // Field this$0:Lcom/arjuna/ats/jbossatx/BaseTransactionManagerDelegate;
      47: invokevirtual #8                  // Method com/arjuna/ats/jbossatx/BaseTransactionManagerDelegate.getTransactionTimeout:()I
      50: i2l
      51: lstore        4
      53: goto          58
      56: astore        6
      58: aload_0
      59: getfield      #4                  // Field lock:[B
      62: lload         4
      64: ldc2_w        #10                 // long 1000l
      67: ladd
      68: invokevirtual #12                 // Method java/lang/Object.wait:(J)V
      71: aload_1
      72: invokeinterface #13,  1           // InterfaceMethod com/arjuna/ats/jta/transaction/Transaction.isAlive:()Z
      77: ifne          94
      80: aload_0
      81: aconst_null
      82: putfield      #6                  // Field lockingThread:Ljava/lang/Thread;
      85: aload_0
      86: iconst_0
      87: putfield      #7                  // Field lockCount:I
      90: iconst_0
      91: aload_2
      92: monitorexit
      93: ireturn
      94: goto          33
      97: astore        4
      99: goto          33
     102: aload_0
     103: aload_3
     104: putfield      #6                  // Field lockingThread:Ljava/lang/Thread;
     107: aload_0
     108: dup
     109: getfield      #7                  // Field lockCount:I
     112: iconst_1
     113: iadd
     114: putfield      #7                  // Field lockCount:I
     117: iconst_1
     118: aload_2
     119: monitorexit
     120: ireturn
     121: astore        7
     123: aload_2
     124: monitorexit
     125: aload         7
     127: athrow
    Exception table:
       from    to  target type
          43    53    56   Class javax/transaction/SystemException
          40    91    97   Class java/lang/InterruptedException
           7    32   121   any
          33    93   121   any
          94   120   121   any
         121   125   121   any

  public void unlock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:[B
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field lockCount:I
      11: ifne          24
      14: aload_0
      15: getfield      #6                  // Field lockingThread:Ljava/lang/Thread;
      18: ifnonnull     24
      21: aload_1
      22: monitorexit
      23: return
      24: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      27: astore_2
      28: aload_2
      29: aload_0
      30: getfield      #6                  // Field lockingThread:Ljava/lang/Thread;
      33: if_acmpeq     75
      36: new           #15                 // class java/lang/IllegalStateException
      39: dup
      40: new           #16                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #18                 // String Unlock called from wrong thread.  Locking thread:
      49: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #6                  // Field lockingThread:Ljava/lang/Thread;
      56: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #21                 // String , current thread:
      61: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_2
      65: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: dup
      77: getfield      #7                  // Field lockCount:I
      80: iconst_1
      81: isub
      82: dup_x1
      83: putfield      #7                  // Field lockCount:I
      86: ifne          101
      89: aload_0
      90: aconst_null
      91: putfield      #6                  // Field lockingThread:Ljava/lang/Thread;
      94: aload_0
      95: getfield      #4                  // Field lock:[B
      98: invokevirtual #24                 // Method java/lang/Object.notify:()V
     101: aload_1
     102: monitorexit
     103: goto          111
     106: astore_3
     107: aload_1
     108: monitorexit
     109: aload_3
     110: athrow
     111: return
    Exception table:
       from    to  target type
           7    23   106   any
          24   103   106   any
         106   109   106   any

  com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate$TransactionLocalLock(com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate, com.arjuna.ats.jbossatx.BaseTransactionManagerDelegate$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/arjuna/ats/jbossatx/BaseTransactionManagerDelegate;)V
       5: return
}
