Compiled from "TwoPhaseVolatileStore.java"
public class com.arjuna.ats.internal.arjuna.objectstore.TwoPhaseVolatileStore extends com.arjuna.ats.arjuna.objectstore.ObjectStore {
  private java.util.concurrent.ConcurrentHashMap<com.arjuna.ats.arjuna.common.Uid, com.arjuna.ats.internal.arjuna.objectstore.TwoPhaseVolatileStore$StateInstance> _stateMap;

  private com.arjuna.ats.internal.arjuna.objectstore.VolatileStore store;

  public com.arjuna.ats.internal.arjuna.objectstore.TwoPhaseVolatileStore(com.arjuna.ats.arjuna.common.ObjectStoreEnvironmentBean) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/arjuna/ats/arjuna/objectstore/ObjectStore."<init>":(Lcom/arjuna/ats/arjuna/common/ObjectStoreEnvironmentBean;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      13: putfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      16: aload_1
      17: invokevirtual #5                  // Method com/arjuna/ats/arjuna/common/ObjectStoreEnvironmentBean.isVolatileStoreSupportAllObjUids:()Z
      20: ifeq          35
      23: aload_0
      24: new           #6                  // class com/arjuna/ats/internal/arjuna/objectstore/VolatileStore
      27: dup
      28: aload_1
      29: invokespecial #7                  // Method com/arjuna/ats/internal/arjuna/objectstore/VolatileStore."<init>":(Lcom/arjuna/ats/arjuna/common/ObjectStoreEnvironmentBean;)V
      32: putfield      #8                  // Field store:Lcom/arjuna/ats/internal/arjuna/objectstore/VolatileStore;
      35: return

  public boolean allObjUids(java.lang.String, com.arjuna.ats.arjuna.state.InputObjectState, int) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field store:Lcom/arjuna/ats/internal/arjuna/objectstore/VolatileStore;
       4: ifnonnull     17
       7: new           #9                  // class com/arjuna/ats/arjuna/exceptions/ObjectStoreException
      10: dup
      11: ldc           #10                 // String Operation not supported by this implementation
      13: invokespecial #11                 // Method com/arjuna/ats/arjuna/exceptions/ObjectStoreException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field store:Lcom/arjuna/ats/internal/arjuna/objectstore/VolatileStore;
      21: aload_1
      22: aload_2
      23: iload_3
      24: invokevirtual #12                 // Method com/arjuna/ats/internal/arjuna/objectstore/VolatileStore.allObjUids:(Ljava/lang/String;Lcom/arjuna/ats/arjuna/state/InputObjectState;I)Z
      27: ireturn

  public boolean allTypes(com.arjuna.ats.arjuna.state.InputObjectState) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field store:Lcom/arjuna/ats/internal/arjuna/objectstore/VolatileStore;
       4: ifnonnull     17
       7: new           #9                  // class com/arjuna/ats/arjuna/exceptions/ObjectStoreException
      10: dup
      11: ldc           #10                 // String Operation not supported by this implementation
      13: invokespecial #11                 // Method com/arjuna/ats/arjuna/exceptions/ObjectStoreException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #8                  // Field store:Lcom/arjuna/ats/internal/arjuna/objectstore/VolatileStore;
      21: aload_1
      22: invokevirtual #13                 // Method com/arjuna/ats/internal/arjuna/objectstore/VolatileStore.allTypes:(Lcom/arjuna/ats/arjuna/state/InputObjectState;)Z
      25: ireturn

  public int currentState(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #15                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          48
       9: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #16                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #18                 // String TwoPhaseVolatileStore.currentState(Uid=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #21                 // String , typeName=
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #22                 // String )
      39: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #24                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      52: aload_1
      53: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      59: astore_3
      60: aload_3
      61: ifnull        82
      64: aload_3
      65: getfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      68: ifnull        73
      71: iconst_1
      72: ireturn
      73: aload_3
      74: getfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      77: ifnull        82
      80: iconst_2
      81: ireturn
      82: iconst_m1
      83: ireturn

  public java.lang.String getStoreName();
    Code:
       0: ldc           #30                 // String TwoPhaseVolatileStore
       2: areturn

  public boolean commit_state(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_1
      12: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      18: astore        4
      20: aload         4
      22: ifnonnull     35
      25: new           #9                  // class com/arjuna/ats/arjuna/exceptions/ObjectStoreException
      28: dup
      29: ldc           #31                 // String Could not find state instance to commit!
      31: invokespecial #11                 // Method com/arjuna/ats/arjuna/exceptions/ObjectStoreException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload         4
      37: dup
      38: astore        5
      40: monitorenter
      41: aload         4
      43: getfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      46: ifnull        72
      49: aload         4
      51: aload         4
      53: getfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      56: putfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      59: aload         4
      61: aconst_null
      62: putfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      65: iconst_1
      66: aload         5
      68: monitorexit
      69: aload_3
      70: monitorexit
      71: ireturn
      72: iconst_0
      73: aload         5
      75: monitorexit
      76: aload_3
      77: monitorexit
      78: ireturn
      79: astore        6
      81: aload         5
      83: monitorexit
      84: aload         6
      86: athrow
      87: astore        7
      89: aload_3
      90: monitorexit
      91: aload         7
      93: athrow
    Exception table:
       from    to  target type
          41    69    79   any
          72    76    79   any
          79    84    79   any
           7    71    87   any
          72    78    87   any
          79    91    87   any

  public boolean hide_state(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: new           #9                  // class com/arjuna/ats/arjuna/exceptions/ObjectStoreException
       3: dup
       4: ldc           #10                 // String Operation not supported by this implementation
       6: invokespecial #11                 // Method com/arjuna/ats/arjuna/exceptions/ObjectStoreException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean reveal_state(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: new           #9                  // class com/arjuna/ats/arjuna/exceptions/ObjectStoreException
       3: dup
       4: ldc           #10                 // String Operation not supported by this implementation
       6: invokespecial #11                 // Method com/arjuna/ats/arjuna/exceptions/ObjectStoreException."<init>":(Ljava/lang/String;)V
       9: athrow

  public com.arjuna.ats.arjuna.state.InputObjectState read_committed(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #15                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          48
       9: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #16                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #32                 // String TwoPhaseVolatileStore.read_committed(Uid=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #21                 // String , typeName=
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #22                 // String )
      39: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #24                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      52: dup
      53: astore_3
      54: monitorenter
      55: aload_0
      56: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      59: aload_1
      60: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      66: astore        4
      68: aload         4
      70: ifnonnull     77
      73: aconst_null
      74: aload_3
      75: monitorexit
      76: areturn
      77: aload         4
      79: dup
      80: astore        5
      82: monitorenter
      83: aload         4
      85: getfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      88: ifnull        109
      91: new           #33                 // class com/arjuna/ats/arjuna/state/InputObjectState
      94: dup
      95: aload         4
      97: getfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
     100: invokespecial #34                 // Method com/arjuna/ats/arjuna/state/InputObjectState."<init>":(Lcom/arjuna/ats/arjuna/state/OutputObjectState;)V
     103: aload         5
     105: monitorexit
     106: aload_3
     107: monitorexit
     108: areturn
     109: aconst_null
     110: aload         5
     112: monitorexit
     113: aload_3
     114: monitorexit
     115: areturn
     116: astore        6
     118: aload         5
     120: monitorexit
     121: aload         6
     123: athrow
     124: astore        7
     126: aload_3
     127: monitorexit
     128: aload         7
     130: athrow
    Exception table:
       from    to  target type
          83   106   116   any
         109   113   116   any
         116   121   116   any
          55    76   124   any
          77   108   124   any
         109   115   124   any
         116   128   124   any

  public com.arjuna.ats.arjuna.state.InputObjectState read_uncommitted(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_1
      12: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      18: astore        4
      20: aload         4
      22: ifnonnull     29
      25: aconst_null
      26: aload_3
      27: monitorexit
      28: areturn
      29: aload         4
      31: dup
      32: astore        5
      34: monitorenter
      35: aload         4
      37: getfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      40: ifnull        61
      43: new           #33                 // class com/arjuna/ats/arjuna/state/InputObjectState
      46: dup
      47: aload         4
      49: getfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      52: invokespecial #34                 // Method com/arjuna/ats/arjuna/state/InputObjectState."<init>":(Lcom/arjuna/ats/arjuna/state/OutputObjectState;)V
      55: aload         5
      57: monitorexit
      58: aload_3
      59: monitorexit
      60: areturn
      61: aconst_null
      62: aload         5
      64: monitorexit
      65: aload_3
      66: monitorexit
      67: areturn
      68: astore        6
      70: aload         5
      72: monitorexit
      73: aload         6
      75: athrow
      76: astore        7
      78: aload_3
      79: monitorexit
      80: aload         7
      82: athrow
    Exception table:
       from    to  target type
          35    58    68   any
          61    65    68   any
          68    73    68   any
           7    28    76   any
          29    60    76   any
          61    67    76   any
          68    80    76   any

  public boolean remove_committed(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #15                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          48
       9: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #16                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #35                 // String TwoPhaseVolatileStore.remove_committed(Uid=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #21                 // String , typeName=
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #22                 // String )
      39: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #24                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      52: dup
      53: astore_3
      54: monitorenter
      55: aload_0
      56: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      59: aload_1
      60: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      66: astore        4
      68: aload         4
      70: ifnonnull     77
      73: iconst_0
      74: aload_3
      75: monitorexit
      76: ireturn
      77: aload         4
      79: dup
      80: astore        5
      82: monitorenter
      83: aload         4
      85: getfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      88: ifnull        104
      91: aload         4
      93: aconst_null
      94: putfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      97: iconst_1
      98: aload         5
     100: monitorexit
     101: aload_3
     102: monitorexit
     103: ireturn
     104: iconst_0
     105: aload         5
     107: monitorexit
     108: aload_3
     109: monitorexit
     110: ireturn
     111: astore        6
     113: aload         5
     115: monitorexit
     116: aload         6
     118: athrow
     119: astore        7
     121: aload_3
     122: monitorexit
     123: aload         7
     125: athrow
    Exception table:
       from    to  target type
          83   101   111   any
         104   108   111   any
         111   116   111   any
          55    76   119   any
          77   103   119   any
         104   110   119   any
         111   123   119   any

  public boolean remove_uncommitted(com.arjuna.ats.arjuna.common.Uid, java.lang.String) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_1
      12: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      18: astore        4
      20: aload         4
      22: ifnonnull     29
      25: iconst_0
      26: aload_3
      27: monitorexit
      28: ireturn
      29: aload         4
      31: dup
      32: astore        5
      34: monitorenter
      35: aload         4
      37: getfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      40: ifnull        56
      43: aload         4
      45: aconst_null
      46: putfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      49: iconst_1
      50: aload         5
      52: monitorexit
      53: aload_3
      54: monitorexit
      55: ireturn
      56: iconst_0
      57: aload         5
      59: monitorexit
      60: aload_3
      61: monitorexit
      62: ireturn
      63: astore        6
      65: aload         5
      67: monitorexit
      68: aload         6
      70: athrow
      71: astore        7
      73: aload_3
      74: monitorexit
      75: aload         7
      77: athrow
    Exception table:
       from    to  target type
          35    53    63   any
          56    60    63   any
          63    68    63   any
           7    28    71   any
          29    55    71   any
          56    62    71   any
          63    75    71   any

  public boolean write_committed(com.arjuna.ats.arjuna.common.Uid, java.lang.String, com.arjuna.ats.arjuna.state.OutputObjectState) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #15                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          48
       9: getstatic     #14                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #16                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #36                 // String TwoPhaseVolatileStore.write_committed(Uid=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #21                 // String , typeName=
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #22                 // String )
      39: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokevirtual #24                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      52: dup
      53: astore        4
      55: monitorenter
      56: aload_0
      57: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      60: aload_1
      61: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      67: astore        5
      69: aload         5
      71: ifnonnull     98
      74: aload_0
      75: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      78: aload_1
      79: new           #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      82: dup
      83: aload_0
      84: aload_3
      85: aconst_null
      86: aload_2
      87: aload_1
      88: invokespecial #37                 // Method com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance."<init>":(Lcom/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore;Lcom/arjuna/ats/arjuna/state/OutputObjectState;Lcom/arjuna/ats/arjuna/state/OutputObjectState;Ljava/lang/String;Lcom/arjuna/ats/arjuna/common/Uid;)V
      91: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: goto          143
      98: aload         5
     100: dup
     101: astore        6
     103: monitorenter
     104: aload         5
     106: getfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
     109: ifnonnull     121
     112: aload         5
     114: aload_3
     115: putfield      #27                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.original:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
     118: goto          129
     121: iconst_0
     122: aload         6
     124: monitorexit
     125: aload         4
     127: monitorexit
     128: ireturn
     129: aload         6
     131: monitorexit
     132: goto          143
     135: astore        7
     137: aload         6
     139: monitorexit
     140: aload         7
     142: athrow
     143: aload_0
     144: getfield      #8                  // Field store:Lcom/arjuna/ats/internal/arjuna/objectstore/VolatileStore;
     147: ifnull        159
     150: aload_0
     151: getfield      #8                  // Field store:Lcom/arjuna/ats/internal/arjuna/objectstore/VolatileStore;
     154: aload_1
     155: aload_2
     156: invokevirtual #39                 // Method com/arjuna/ats/internal/arjuna/objectstore/VolatileStore.addUidMapping:(Lcom/arjuna/ats/arjuna/common/Uid;Ljava/lang/String;)V
     159: iconst_1
     160: aload         4
     162: monitorexit
     163: ireturn
     164: astore        8
     166: aload         4
     168: monitorexit
     169: aload         8
     171: athrow
    Exception table:
       from    to  target type
         104   125   135   any
         129   132   135   any
         135   140   135   any
          56   128   164   any
         129   163   164   any
         164   169   164   any

  public boolean write_uncommitted(com.arjuna.ats.arjuna.common.Uid, java.lang.String, com.arjuna.ats.arjuna.state.OutputObjectState) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      12: aload_1
      13: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      19: astore        5
      21: aload         5
      23: ifnonnull     54
      26: new           #26                 // class com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance
      29: dup
      30: aload_0
      31: aconst_null
      32: aload_3
      33: aload_2
      34: aload_1
      35: invokespecial #37                 // Method com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance."<init>":(Lcom/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore;Lcom/arjuna/ats/arjuna/state/OutputObjectState;Lcom/arjuna/ats/arjuna/state/OutputObjectState;Ljava/lang/String;Lcom/arjuna/ats/arjuna/common/Uid;)V
      38: astore        5
      40: aload_0
      41: getfield      #4                  // Field _stateMap:Ljava/util/concurrent/ConcurrentHashMap;
      44: aload_1
      45: aload         5
      47: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          73
      54: aload         5
      56: getfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      59: ifnull        67
      62: iconst_0
      63: aload         4
      65: monitorexit
      66: ireturn
      67: aload         5
      69: aload_3
      70: putfield      #29                 // Field com/arjuna/ats/internal/arjuna/objectstore/TwoPhaseVolatileStore$StateInstance.shadow:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      73: iconst_1
      74: aload         4
      76: monitorexit
      77: ireturn
      78: astore        6
      80: aload         4
      82: monitorexit
      83: aload         6
      85: athrow
    Exception table:
       from    to  target type
           8    66    78   any
          67    77    78   any
          78    83    78   any

  protected boolean supressEntry(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn
}
