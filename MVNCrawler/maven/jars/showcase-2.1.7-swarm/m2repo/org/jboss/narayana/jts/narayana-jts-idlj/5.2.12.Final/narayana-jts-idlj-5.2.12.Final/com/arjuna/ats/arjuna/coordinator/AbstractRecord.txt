Compiled from "AbstractRecord.java"
public abstract class com.arjuna.ats.arjuna.coordinator.AbstractRecord extends com.arjuna.ats.arjuna.StateManager {
  private com.arjuna.ats.arjuna.coordinator.AbstractRecord next;

  private com.arjuna.ats.arjuna.coordinator.AbstractRecord previous;

  private com.arjuna.ats.arjuna.common.Uid uidOfObject;

  private java.lang.String typeOfObject;

  private static final boolean useAlternativeOrdering;

  public abstract int typeIs();

  public abstract java.lang.Object value();

  public abstract void setValue(java.lang.Object);

  public abstract int nestedAbort();

  public abstract int nestedCommit();

  public abstract int nestedPrepare();

  public abstract int topLevelAbort();

  public abstract int topLevelCommit();

  public abstract int topLevelPrepare();

  public com.arjuna.ats.arjuna.common.Uid order();
    Code:
       0: aload_0
       1: getfield      #1                  // Field uidOfObject:Lcom/arjuna/ats/arjuna/common/Uid;
       4: areturn

  public java.lang.String getTypeOfObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field typeOfObject:Ljava/lang/String;
       4: areturn

  public boolean propagateOnAbort();
    Code:
       0: iconst_0
       1: ireturn

  public boolean propagateOnCommit();
    Code:
       0: iconst_1
       1: ireturn

  public final boolean equals(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: getstatic     #3                  // Field useAlternativeOrdering:Z
       3: ifeq          14
       6: aload_0
       7: aload_1
       8: invokespecial #4                  // Method typeEquals:(Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;)Z
      11: goto          19
      14: aload_0
      15: aload_1
      16: invokespecial #5                  // Method orderEquals:(Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;)Z
      19: ireturn

  public final boolean lessThan(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: getstatic     #3                  // Field useAlternativeOrdering:Z
       3: ifeq          14
       6: aload_0
       7: aload_1
       8: invokespecial #6                  // Method typeLessThan:(Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;)Z
      11: goto          19
      14: aload_0
      15: aload_1
      16: invokespecial #7                  // Method orderLessThan:(Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;)Z
      19: ireturn

  public final boolean greaterThan(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: getstatic     #3                  // Field useAlternativeOrdering:Z
       3: ifeq          14
       6: aload_0
       7: aload_1
       8: invokespecial #8                  // Method typeGreaterThan:(Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;)Z
      11: goto          19
      14: aload_0
      15: aload_1
      16: invokespecial #9                  // Method orderGreaterThan:(Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;)Z
      19: ireturn

  public int topLevelCleanup();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method topLevelAbort:()I
       4: ireturn

  public int nestedCleanup();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method nestedAbort:()I
       4: ireturn

  public boolean doSave();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String type();
    Code:
       0: ldc           #12                 // String /StateManager/AbstractRecord
       2: areturn

  public void print(java.io.PrintWriter);
    Code:
       0: aload_1
       1: new           #13                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #15                 // String Uid of Managed Object:
      10: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #1                  // Field uidOfObject:Lcom/arjuna/ats/arjuna/common/Uid;
      17: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokevirtual #19                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      26: aload_1
      27: new           #13                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #20                 // String Type of Managed Object:
      36: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #2                  // Field typeOfObject:Ljava/lang/String;
      43: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokevirtual #19                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
      52: aload_0
      53: aload_1
      54: invokespecial #21                 // Method com/arjuna/ats/arjuna/StateManager.print:(Ljava/io/PrintWriter;)V
      57: return

  public boolean save_state(com.arjuna.ats.arjuna.state.OutputObjectState, int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field uidOfObject:Lcom/arjuna/ats/arjuna/common/Uid;
       4: aload_1
       5: invokestatic  #22                 // Method com/arjuna/ats/internal/arjuna/common/UidHelper.packInto:(Lcom/arjuna/ats/arjuna/common/Uid;Lcom/arjuna/ats/arjuna/state/OutputBuffer;)V
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field typeOfObject:Ljava/lang/String;
      13: invokevirtual #23                 // Method com/arjuna/ats/arjuna/state/OutputObjectState.packString:(Ljava/lang/String;)V
      16: iconst_1
      17: ireturn
      18: astore_3
      19: iconst_0
      20: ireturn
    Exception table:
       from    to  target type
           0    17    18   Class java/io/IOException

  public boolean restore_state(com.arjuna.ats.arjuna.state.InputObjectState, int);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field typeOfObject:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokestatic  #25                 // Method com/arjuna/ats/internal/arjuna/common/UidHelper.unpackFrom:(Lcom/arjuna/ats/arjuna/state/InputBuffer;)Lcom/arjuna/ats/arjuna/common/Uid;
      10: putfield      #1                  // Field uidOfObject:Lcom/arjuna/ats/arjuna/common/Uid;
      13: aload_0
      14: aload_1
      15: invokevirtual #26                 // Method com/arjuna/ats/arjuna/state/InputObjectState.unpackString:()Ljava/lang/String;
      18: putfield      #2                  // Field typeOfObject:Ljava/lang/String;
      21: iconst_1
      22: ireturn
      23: astore_3
      24: iconst_0
      25: ireturn
    Exception table:
       from    to  target type
           5    22    23   Class java/io/IOException

  public boolean forgetHeuristic();
    Code:
       0: iconst_1
       1: ireturn

  public int nestedOnePhaseCommit();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method nestedPrepare:()I
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 2
                     0: 32
                     2: 37
               default: 40
          }
      32: aload_0
      33: invokevirtual #28                 // Method nestedCommit:()I
      36: ireturn
      37: bipush        7
      39: ireturn
      40: bipush        8
      42: ireturn

  public int topLevelOnePhaseCommit();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method topLevelPrepare:()I
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 3
                     0: 40
                     2: 45
                    10: 48
               default: 51
          }
      40: aload_0
      41: invokevirtual #31                 // Method topLevelCommit:()I
      44: ireturn
      45: bipush        7
      47: ireturn
      48: bipush        10
      50: ireturn
      51: bipush        8
      53: ireturn

  public static com.arjuna.ats.arjuna.coordinator.AbstractRecord create(int);
    Code:
       0: iload_0
       1: invokestatic  #32                 // Method com/arjuna/ats/arjuna/coordinator/RecordType.typeToClass:(I)Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: invokevirtual #33                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       9: checkcast     #34                 // class com/arjuna/ats/arjuna/coordinator/AbstractRecord
      12: areturn
      13: astore_1
      14: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.i18NLogger:Lcom/arjuna/ats/arjuna/logging/arjunaI18NLogger;
      17: iload_0
      18: invokestatic  #37                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      21: invokeinterface #38,  2           // InterfaceMethod com/arjuna/ats/arjuna/logging/arjunaI18NLogger.warn_coordinator_AbstractRecord_npe:(Ljava/lang/String;)V
      26: aconst_null
      27: areturn
      28: astore_1
      29: aload_1
      30: invokevirtual #40                 // Method java/lang/Throwable.printStackTrace:()V
      33: aconst_null
      34: areturn
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/NullPointerException
           0    12    28   Class java/lang/Throwable

  public abstract void merge(com.arjuna.ats.arjuna.coordinator.AbstractRecord);

  public abstract void alter(com.arjuna.ats.arjuna.coordinator.AbstractRecord);

  public abstract boolean shouldAdd(com.arjuna.ats.arjuna.coordinator.AbstractRecord);

  public abstract boolean shouldAlter(com.arjuna.ats.arjuna.coordinator.AbstractRecord);

  public abstract boolean shouldMerge(com.arjuna.ats.arjuna.coordinator.AbstractRecord);

  public abstract boolean shouldReplace(com.arjuna.ats.arjuna.coordinator.AbstractRecord);

  public void replace(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: return

  protected final com.arjuna.ats.arjuna.coordinator.AbstractRecord getPrevious();
    Code:
       0: aload_0
       1: getfield      #41                 // Field previous:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
       4: areturn

  protected final com.arjuna.ats.arjuna.coordinator.AbstractRecord getNext();
    Code:
       0: aload_0
       1: getfield      #42                 // Field next:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
       4: areturn

  protected final void setPrevious(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field previous:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
       5: return

  protected final void setNext(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field next:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
       5: return

  protected com.arjuna.ats.arjuna.coordinator.AbstractRecord(com.arjuna.ats.arjuna.common.Uid, java.lang.String, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #43                 // Method com/arjuna/ats/arjuna/StateManager."<init>":(I)V
       5: aload_0
       6: aconst_null
       7: putfield      #42                 // Field next:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
      10: aload_0
      11: aconst_null
      12: putfield      #41                 // Field previous:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
      15: aload_0
      16: aload_1
      17: putfield      #1                  // Field uidOfObject:Lcom/arjuna/ats/arjuna/common/Uid;
      20: aload_0
      21: aload_2
      22: putfield      #2                  // Field typeOfObject:Ljava/lang/String;
      25: getstatic     #44                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      28: invokevirtual #45                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      31: ifeq          73
      34: getstatic     #44                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      37: new           #13                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #46                 // String AbstractRecord::AbstractRecord (
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #47                 // String ,
      55: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: iload_3
      59: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: ldc           #49                 // String )
      64: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokevirtual #50                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      73: return

  protected com.arjuna.ats.arjuna.coordinator.AbstractRecord(com.arjuna.ats.arjuna.common.Uid);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method com/arjuna/ats/arjuna/StateManager."<init>":(Lcom/arjuna/ats/arjuna/common/Uid;)V
       5: aload_0
       6: aconst_null
       7: putfield      #42                 // Field next:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
      10: aload_0
      11: aconst_null
      12: putfield      #41                 // Field previous:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
      15: aload_0
      16: aload_1
      17: putfield      #1                  // Field uidOfObject:Lcom/arjuna/ats/arjuna/common/Uid;
      20: aload_0
      21: aconst_null
      22: putfield      #2                  // Field typeOfObject:Ljava/lang/String;
      25: getstatic     #44                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      28: invokevirtual #45                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      31: ifeq          64
      34: getstatic     #44                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      37: new           #13                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #46                 // String AbstractRecord::AbstractRecord (
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #49                 // String )
      55: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokevirtual #50                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      64: return

  public com.arjuna.ats.arjuna.coordinator.AbstractRecord();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method com/arjuna/ats/arjuna/common/Uid.nullUid:()Lcom/arjuna/ats/arjuna/common/Uid;
       4: invokespecial #51                 // Method com/arjuna/ats/arjuna/StateManager."<init>":(Lcom/arjuna/ats/arjuna/common/Uid;)V
       7: aload_0
       8: aconst_null
       9: putfield      #42                 // Field next:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
      12: aload_0
      13: aconst_null
      14: putfield      #41                 // Field previous:Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
      17: aload_0
      18: new           #53                 // class com/arjuna/ats/arjuna/common/Uid
      21: dup
      22: invokestatic  #52                 // Method com/arjuna/ats/arjuna/common/Uid.nullUid:()Lcom/arjuna/ats/arjuna/common/Uid;
      25: invokespecial #54                 // Method com/arjuna/ats/arjuna/common/Uid."<init>":(Lcom/arjuna/ats/arjuna/common/Uid;)V
      28: putfield      #1                  // Field uidOfObject:Lcom/arjuna/ats/arjuna/common/Uid;
      31: aload_0
      32: aconst_null
      33: putfield      #2                  // Field typeOfObject:Ljava/lang/String;
      36: getstatic     #44                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      39: invokevirtual #45                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      42: ifeq          53
      45: getstatic     #44                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      48: ldc           #55                 // String AbstractRecord::AbstractRecord () - crash recovery constructor
      50: invokevirtual #50                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      53: return

  private final boolean typeEquals(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method typeIs:()I
       4: aload_1
       5: invokevirtual #56                 // Method typeIs:()I
       8: if_icmpne     29
      11: aload_0
      12: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      15: aload_1
      16: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      19: invokevirtual #58                 // Method com/arjuna/ats/arjuna/common/Uid.equals:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  private final boolean typeLessThan(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method typeIs:()I
       4: aload_1
       5: invokevirtual #56                 // Method typeIs:()I
       8: if_icmplt     36
      11: aload_0
      12: invokevirtual #56                 // Method typeIs:()I
      15: aload_1
      16: invokevirtual #56                 // Method typeIs:()I
      19: if_icmpne     40
      22: aload_0
      23: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      26: aload_1
      27: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      30: invokevirtual #59                 // Method com/arjuna/ats/arjuna/common/Uid.lessThan:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private final boolean typeGreaterThan(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method typeIs:()I
       4: aload_1
       5: invokevirtual #56                 // Method typeIs:()I
       8: if_icmpgt     36
      11: aload_0
      12: invokevirtual #56                 // Method typeIs:()I
      15: aload_1
      16: invokevirtual #56                 // Method typeIs:()I
      19: if_icmpne     40
      22: aload_0
      23: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      26: aload_1
      27: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      30: invokevirtual #60                 // Method com/arjuna/ats/arjuna/common/Uid.greaterThan:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private final boolean orderEquals(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       4: aload_1
       5: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       8: invokevirtual #58                 // Method com/arjuna/ats/arjuna/common/Uid.equals:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      11: ifeq          29
      14: aload_0
      15: invokevirtual #56                 // Method typeIs:()I
      18: aload_1
      19: invokevirtual #56                 // Method typeIs:()I
      22: if_icmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  private final boolean orderLessThan(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       4: aload_1
       5: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       8: invokevirtual #59                 // Method com/arjuna/ats/arjuna/common/Uid.lessThan:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      11: ifne          39
      14: aload_0
      15: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      18: aload_1
      19: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      22: invokevirtual #58                 // Method com/arjuna/ats/arjuna/common/Uid.equals:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      25: ifeq          43
      28: aload_0
      29: invokevirtual #56                 // Method typeIs:()I
      32: aload_1
      33: invokevirtual #56                 // Method typeIs:()I
      36: if_icmpge     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  private final boolean orderGreaterThan(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       4: aload_1
       5: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       8: invokevirtual #60                 // Method com/arjuna/ats/arjuna/common/Uid.greaterThan:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      11: ifne          39
      14: aload_0
      15: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      18: aload_1
      19: invokevirtual #57                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      22: invokevirtual #58                 // Method com/arjuna/ats/arjuna/common/Uid.equals:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      25: ifeq          43
      28: aload_0
      29: invokevirtual #56                 // Method typeIs:()I
      32: aload_1
      33: invokevirtual #56                 // Method typeIs:()I
      36: if_icmple     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  static {};
    Code:
       0: invokestatic  #61                 // Method com/arjuna/ats/arjuna/common/arjPropertyManager.getCoordinatorEnvironmentBean:()Lcom/arjuna/ats/arjuna/common/CoordinatorEnvironmentBean;
       3: invokevirtual #62                 // Method com/arjuna/ats/arjuna/common/CoordinatorEnvironmentBean.isAlternativeRecordOrdering:()Z
       6: putstatic     #3                  // Field useAlternativeOrdering:Z
       9: return
}
