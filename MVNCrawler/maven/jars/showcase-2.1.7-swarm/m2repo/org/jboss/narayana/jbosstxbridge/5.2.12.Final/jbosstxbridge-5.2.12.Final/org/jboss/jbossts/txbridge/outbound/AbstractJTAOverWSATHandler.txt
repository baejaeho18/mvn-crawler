Compiled from "AbstractJTAOverWSATHandler.java"
public abstract class org.jboss.jbossts.txbridge.outbound.AbstractJTAOverWSATHandler<C extends javax.xml.ws.handler.MessageContext> implements javax.xml.ws.handler.Handler<C> {
  private final org.jboss.jbossts.txbridge.outbound.JaxWSTxOutboundBridgeHandler delegateHandler;

  public org.jboss.jbossts.txbridge.outbound.AbstractJTAOverWSATHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler
       8: dup
       9: invokespecial #3                  // Method org/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler."<init>":()V
      12: putfield      #4                  // Field delegateHandler:Lorg/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler;
      15: return

  public boolean handleMessage(C);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method isContextPropagationEnabled:(Ljavax/xml/ws/handler/MessageContext;)Z
       5: ifeq          32
       8: aload_0
       9: invokespecial #6                  // Method isJTATransactionOnThread:()Z
      12: ifeq          32
      15: aload_0
      16: aload_1
      17: invokespecial #7                  // Method isWSATContext:(Ljavax/xml/ws/handler/MessageContext;)Z
      20: ifne          32
      23: aload_0
      24: getfield      #4                  // Field delegateHandler:Lorg/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler;
      27: aload_1
      28: invokevirtual #8                  // Method org/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler.handleMessage:(Ljavax/xml/ws/handler/MessageContext;)Z
      31: ireturn
      32: iconst_1
      33: ireturn

  public boolean handleFault(C);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method isContextPropagationEnabled:(Ljavax/xml/ws/handler/MessageContext;)Z
       5: ifeq          32
       8: aload_0
       9: invokespecial #6                  // Method isJTATransactionOnThread:()Z
      12: ifeq          32
      15: aload_0
      16: aload_1
      17: invokespecial #7                  // Method isWSATContext:(Ljavax/xml/ws/handler/MessageContext;)Z
      20: ifne          32
      23: aload_0
      24: getfield      #4                  // Field delegateHandler:Lorg/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler;
      27: aload_1
      28: invokevirtual #9                  // Method org/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler.handleFault:(Ljavax/xml/ws/handler/MessageContext;)Z
      31: ireturn
      32: iconst_1
      33: ireturn

  public void close(javax.xml.ws.handler.MessageContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegateHandler:Lorg/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler;
       4: aload_1
       5: invokevirtual #10                 // Method org/jboss/jbossts/txbridge/outbound/JaxWSTxOutboundBridgeHandler.close:(Ljavax/xml/ws/handler/MessageContext;)V
       8: return

  private boolean isJTATransactionOnThread();
    Code:
       0: iconst_0
       1: istore_1
       2: invokestatic  #11                 // Method com/arjuna/ats/jta/TransactionManager.transactionManager:()Ljavax/transaction/TransactionManager;
       5: invokeinterface #12,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      10: astore_2
      11: aload_2
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: istore_1
      21: goto          25
      24: astore_2
      25: iload_1
      26: ireturn
    Exception table:
       from    to  target type
           2    21    24   Class javax/transaction/SystemException

  private boolean isWSATContext(javax.xml.ws.handler.MessageContext);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: instanceof    #14                 // class javax/xml/ws/handler/soap/SOAPMessageContext
       6: ifeq          36
       9: aload_1
      10: checkcast     #14                 // class javax/xml/ws/handler/soap/SOAPMessageContext
      13: astore_3
      14: aload_0
      15: aload_3
      16: ldc           #16                 // String http://schemas.arjuna.com/ws/2005/10/wsarj
      18: ldc           #17                 // String InstanceIdentifier
      20: invokespecial #18                 // Method getHeaderElement:(Ljavax/xml/ws/handler/soap/SOAPMessageContext;Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/soap/SOAPHeaderElement;
      23: astore        4
      25: aload         4
      27: ifnull        34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: istore_2
      36: iload_2
      37: ireturn

  private javax.xml.soap.SOAPHeaderElement getHeaderElement(javax.xml.ws.handler.soap.SOAPMessageContext, java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: invokeinterface #19,  1           // InterfaceMethod javax/xml/ws/handler/soap/SOAPMessageContext.getMessage:()Ljavax/xml/soap/SOAPMessage;
       9: astore        5
      11: aload         5
      13: invokevirtual #20                 // Method javax/xml/soap/SOAPMessage.getSOAPPart:()Ljavax/xml/soap/SOAPPart;
      16: invokevirtual #21                 // Method javax/xml/soap/SOAPPart.getEnvelope:()Ljavax/xml/soap/SOAPEnvelope;
      19: astore        6
      21: aload         6
      23: invokeinterface #22,  1           // InterfaceMethod javax/xml/soap/SOAPEnvelope.getHeader:()Ljavax/xml/soap/SOAPHeader;
      28: astore        7
      30: aload         7
      32: ifnull        45
      35: aload_0
      36: aload         7
      38: aload_2
      39: aload_3
      40: invokespecial #23                 // Method getHeaderElement:(Ljavax/xml/soap/SOAPHeader;Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/soap/SOAPHeaderElement;
      43: astore        4
      45: goto          50
      48: astore        5
      50: aload         4
      52: areturn
    Exception table:
       from    to  target type
           3    45    48   Class javax/xml/soap/SOAPException

  private javax.xml.soap.SOAPHeaderElement getHeaderElement(javax.xml.soap.SOAPHeader, java.lang.String, java.lang.String) throws javax.xml.soap.SOAPException;
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method com/arjuna/mw/wst/common/SOAPUtil.getChildElements:(Ljavax/xml/soap/SOAPElement;)Ljava/util/Iterator;
       4: astore        4
       6: aload         4
       8: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          78
      16: aload         4
      18: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #28                 // class javax/xml/soap/SOAPHeaderElement
      26: astore        5
      28: aload         5
      30: invokeinterface #29,  1           // InterfaceMethod javax/xml/soap/SOAPHeaderElement.getElementName:()Ljavax/xml/soap/Name;
      35: astore        6
      37: aload         6
      39: ifnull        75
      42: aload_0
      43: aload_3
      44: aload         6
      46: invokeinterface #30,  1           // InterfaceMethod javax/xml/soap/Name.getLocalName:()Ljava/lang/String;
      51: invokespecial #31                 // Method match:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          75
      57: aload_0
      58: aload_2
      59: aload         6
      61: invokeinterface #32,  1           // InterfaceMethod javax/xml/soap/Name.getURI:()Ljava/lang/String;
      66: invokespecial #31                 // Method match:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ifeq          75
      72: aload         5
      74: areturn
      75: goto          6
      78: aconst_null
      79: areturn

  private boolean match(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_2
       5: ifnonnull     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
      14: aload_1
      15: aload_2
      16: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ireturn

  protected abstract boolean isContextPropagationEnabled(C);
}
