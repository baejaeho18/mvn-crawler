Compiled from "SubordinateAtomicAction.java"
public class com.arjuna.ats.internal.jta.transaction.arjunacore.subordinate.SubordinateAtomicAction extends com.arjuna.ats.internal.jta.transaction.arjunacore.AtomicAction {
  private boolean _doneBefore;

  private boolean _beforeOutcome;

  public com.arjuna.ats.internal.jta.transaction.arjunacore.subordinate.SubordinateAtomicAction();
    Code:
       0: aload_0
       1: iconst_m1
       2: invokespecial #2                  // Method "<init>":(I)V
       5: return

  public com.arjuna.ats.internal.jta.transaction.arjunacore.subordinate.SubordinateAtomicAction(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field _doneBefore:Z
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field _beforeOutcome:Z
      14: aload_0
      15: invokevirtual #6                  // Method start:()I
      18: pop
      19: iload_1
      20: iconst_m1
      21: if_icmple     32
      24: invokestatic  #7                  // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.transactionReaper:()Lcom/arjuna/ats/arjuna/coordinator/TransactionReaper;
      27: aload_0
      28: iload_1
      29: invokevirtual #8                  // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.insert:(Lcom/arjuna/ats/arjuna/coordinator/Reapable;I)V
      32: return

  public int commit();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #9                  // Method commit:(Z)I
       5: ireturn

  public int commit(boolean);
    Code:
       0: bipush        9
       2: ireturn

  public int abort();
    Code:
       0: bipush        9
       2: ireturn

  public java.lang.String type();
    Code:
       0: ldc           #11                 // String /StateManager/BasicAction/TwoPhaseCoordinator/AtomicAction/SubordinateAtomicAction
       2: areturn

  public int doPrepare();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.status:()I
       4: istore_1
       5: iload_1
       6: iconst_4
       7: if_icmpne     12
      10: iconst_1
      11: ireturn
      12: iload_1
      13: iconst_3
      14: if_icmpeq     47
      17: iload_1
      18: iconst_2
      19: if_icmpeq     47
      22: aload_0
      23: invokevirtual #14                 // Method doBeforeCompletion:()Z
      26: ifeq          47
      29: aload_0
      30: iconst_1
      31: invokespecial #15                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.prepare:(Z)I
      34: istore_2
      35: iload_2
      36: iconst_2
      37: if_icmpne     45
      40: aload_0
      41: invokevirtual #16                 // Method doCommit:()I
      44: pop
      45: iload_2
      46: ireturn
      47: aload_0
      48: iconst_1
      49: invokespecial #17                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.phase2Abort:(Z)V
      52: aload_0
      53: iconst_4
      54: invokespecial #19                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.afterCompletion:(I)Z
      57: pop
      58: iconst_1
      59: ireturn

  public int doCommit();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #20                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.phase2Commit:(Z)V
       5: aload_0
       6: invokespecial #21                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.getHeuristicDecision:()I
       9: tableswitch   { // 0 to 7
                     0: 56
                     1: 102
                     2: 102
                     3: 84
                     4: 90
                     5: 96
                     6: 102
                     7: 56
               default: 102
          }
      56: aload_0
      57: getfield      #22                 // Field com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.failedList:Lcom/arjuna/ats/arjuna/coordinator/RecordList;
      60: ifnull        76
      63: aload_0
      64: getfield      #22                 // Field com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.failedList:Lcom/arjuna/ats/arjuna/coordinator/RecordList;
      67: invokevirtual #23                 // Method com/arjuna/ats/arjuna/coordinator/RecordList.size:()I
      70: ifle          76
      73: bipush        6
      75: ireturn
      76: aload_0
      77: invokespecial #12                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.status:()I
      80: istore_1
      81: goto          105
      84: bipush        11
      86: istore_1
      87: goto          105
      90: bipush        12
      92: istore_1
      93: goto          105
      96: bipush        13
      98: istore_1
      99: goto          105
     102: bipush        14
     104: istore_1
     105: aload_0
     106: iload_1
     107: invokespecial #19                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.afterCompletion:(I)Z
     110: pop
     111: invokestatic  #7                  // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.transactionReaper:()Lcom/arjuna/ats/arjuna/coordinator/TransactionReaper;
     114: aload_0
     115: invokevirtual #24                 // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.remove:(Ljava/lang/Object;)V
     118: iload_1
     119: ireturn

  public int doRollback();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #17                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.phase2Abort:(Z)V
       5: aload_0
       6: invokespecial #21                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.getHeuristicDecision:()I
       9: tableswitch   { // 0 to 7
                     0: 56
                     1: 82
                     2: 82
                     3: 64
                     4: 70
                     5: 76
                     6: 82
                     7: 56
               default: 82
          }
      56: aload_0
      57: invokespecial #12                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.status:()I
      60: istore_1
      61: goto          85
      64: bipush        11
      66: istore_1
      67: goto          85
      70: bipush        12
      72: istore_1
      73: goto          85
      76: bipush        13
      78: istore_1
      79: goto          85
      82: bipush        14
      84: istore_1
      85: aload_0
      86: iload_1
      87: invokespecial #19                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.afterCompletion:(I)Z
      90: pop
      91: invokestatic  #7                  // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.transactionReaper:()Lcom/arjuna/ats/arjuna/coordinator/TransactionReaper;
      94: aload_0
      95: invokevirtual #24                 // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.remove:(Ljava/lang/Object;)V
      98: iload_1
      99: ireturn

  public int doOnePhaseCommit();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.status:()I
       4: istore_1
       5: iload_1
       6: iconst_3
       7: if_icmpeq     17
      10: aload_0
      11: invokevirtual #14                 // Method doBeforeCompletion:()Z
      14: ifeq          26
      17: aload_0
      18: iconst_1
      19: invokespecial #25                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.End:(Z)I
      22: istore_1
      23: goto          28
      26: iconst_4
      27: istore_1
      28: aload_0
      29: iload_1
      30: invokevirtual #26                 // Method afterCompletion:(I)Z
      33: pop
      34: invokestatic  #7                  // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.transactionReaper:()Lcom/arjuna/ats/arjuna/coordinator/TransactionReaper;
      37: aload_0
      38: invokevirtual #24                 // Method com/arjuna/ats/arjuna/coordinator/TransactionReaper.remove:(Ljava/lang/Object;)V
      41: iload_1
      42: ireturn

  public void doForget();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.forgetHeuristics:()Z
       4: pop
       5: return

  public boolean doBeforeCompletion();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _doneBefore:Z
       4: ifne          20
       7: aload_0
       8: aload_0
       9: invokespecial #28                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction.beforeCompletion:()Z
      12: putfield      #5                  // Field _beforeOutcome:Z
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field _doneBefore:Z
      20: aload_0
      21: getfield      #5                  // Field _beforeOutcome:Z
      24: ireturn

  protected com.arjuna.ats.internal.jta.transaction.arjunacore.subordinate.SubordinateAtomicAction(com.arjuna.ats.arjuna.common.Uid);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method com/arjuna/ats/internal/jta/transaction/arjunacore/AtomicAction."<init>":(Lcom/arjuna/ats/arjuna/common/Uid;)V
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field _doneBefore:Z
      10: aload_0
      11: iconst_0
      12: putfield      #5                  // Field _beforeOutcome:Z
      15: return

  protected boolean checkForCurrent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean activated();
    Code:
       0: iconst_1
       1: ireturn
}
