Compiled from "RecoverConnectableAtomicAction.java"
public class com.arjuna.ats.internal.jta.recovery.arjunacore.RecoverConnectableAtomicAction extends com.arjuna.ats.arjuna.AtomicAction {
  public static final java.lang.String ATOMIC_ACTION_TYPE;

  public static final java.lang.String CONNECTABLE_ATOMIC_ACTION_TYPE;

  private java.lang.String jndiName;

  private java.lang.String recoveringAs;

  private javax.transaction.xa.Xid xid;

  private boolean hasCompleted;

  public com.arjuna.ats.internal.jta.recovery.arjunacore.RecoverConnectableAtomicAction(java.lang.String, com.arjuna.ats.arjuna.common.Uid, com.arjuna.ats.arjuna.state.InputObjectState) throws com.arjuna.ats.arjuna.exceptions.ObjectStoreException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/arjuna/ats/arjuna/AtomicAction."<init>":(Lcom/arjuna/ats/arjuna/common/Uid;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field recoveringAs:Ljava/lang/String;
      10: new           #3                  // class com/arjuna/ats/internal/arjuna/Header
      13: dup
      14: invokespecial #4                  // Method com/arjuna/ats/internal/arjuna/Header."<init>":()V
      17: astore        4
      19: aload_0
      20: aload_3
      21: aload         4
      23: invokevirtual #5                  // Method unpackHeader:(Lcom/arjuna/ats/arjuna/state/InputObjectState;Lcom/arjuna/ats/internal/arjuna/Header;)V
      26: aload_3
      27: invokevirtual #6                  // Method com/arjuna/ats/arjuna/state/InputObjectState.unpackBoolean:()Z
      30: pop
      31: aload_3
      32: invokevirtual #7                  // Method com/arjuna/ats/arjuna/state/InputObjectState.unpackInt:()I
      35: istore        5
      37: iload         5
      39: bipush        50
      41: if_icmpne     68
      44: aload_0
      45: aload_3
      46: invokevirtual #9                  // Method com/arjuna/ats/arjuna/state/InputObjectState.unpackString:()Ljava/lang/String;
      49: putfield      #10                 // Field jndiName:Ljava/lang/String;
      52: aload_0
      53: aload_3
      54: invokestatic  #11                 // Method com/arjuna/ats/jta/xa/XidImple.unpack:(Lcom/arjuna/ats/arjuna/state/InputObjectState;)Ljavax/transaction/xa/Xid;
      57: putfield      #12                 // Field xid:Ljavax/transaction/xa/Xid;
      60: aload_0
      61: aload_3
      62: invokevirtual #6                  // Method com/arjuna/ats/arjuna/state/InputObjectState.unpackBoolean:()Z
      65: putfield      #13                 // Field hasCompleted:Z
      68: return

  public java.lang.String type();
    Code:
       0: aload_0
       1: getfield      #2                  // Field recoveringAs:Ljava/lang/String;
       4: areturn

  public boolean containsIncompleteCommitMarkableResourceRecord();
    Code:
       0: aload_0
       1: getfield      #10                 // Field jndiName:Ljava/lang/String;
       4: ifnull        18
       7: aload_0
       8: getfield      #13                 // Field hasCompleted:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public java.lang.String getCommitMarkableResourceJndiName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field jndiName:Ljava/lang/String;
       4: areturn

  public javax.transaction.xa.Xid getXid();
    Code:
       0: aload_0
       1: getfield      #12                 // Field xid:Ljavax/transaction/xa/Xid;
       4: areturn

  public void updateCommitMarkableResourceRecord(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method activate:()Z
       4: pop
       5: aload_0
       6: getfield      #15                 // Field preparedList:Lcom/arjuna/ats/arjuna/coordinator/RecordList;
       9: invokevirtual #16                 // Method com/arjuna/ats/arjuna/coordinator/RecordList.peekFront:()Lcom/arjuna/ats/arjuna/coordinator/AbstractRecord;
      12: checkcast     #17                 // class com/arjuna/ats/internal/jta/resources/arjunacore/CommitMarkableResourceRecord
      15: astore_2
      16: aload_2
      17: iload_1
      18: invokevirtual #18                 // Method com/arjuna/ats/internal/jta/resources/arjunacore/CommitMarkableResourceRecord.updateOutcome:(Z)V
      21: getstatic     #19                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      24: invokevirtual #20                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      27: ifeq          63
      30: getstatic     #19                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      33: new           #21                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #23                 // String Moving
      42: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #25                 // Method get_uid:()Lcom/arjuna/ats/arjuna/common/Uid;
      49: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #27                 // String  to an AAR so it won\'t get processed this time
      54: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokevirtual #29                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      63: aload_0
      64: invokevirtual #30                 // Method deactivate:()Z
      67: pop
      68: return

  static {};
    Code:
       0: new           #31                 // class com/arjuna/ats/arjuna/AtomicAction
       3: dup
       4: invokespecial #32                 // Method com/arjuna/ats/arjuna/AtomicAction."<init>":()V
       7: invokevirtual #33                 // Method com/arjuna/ats/arjuna/AtomicAction.type:()Ljava/lang/String;
      10: putstatic     #34                 // Field ATOMIC_ACTION_TYPE:Ljava/lang/String;
      13: new           #21                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      20: getstatic     #34                 // Field ATOMIC_ACTION_TYPE:Ljava/lang/String;
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #35                 // String Connectable
      28: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: putstatic     #36                 // Field CONNECTABLE_ATOMIC_ACTION_TYPE:Ljava/lang/String;
      37: return
}
