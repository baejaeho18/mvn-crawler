Compiled from "CadaverRecord.java"
public class com.arjuna.ats.internal.arjuna.abstractrecords.CadaverRecord extends com.arjuna.ats.internal.arjuna.abstractrecords.PersistenceRecord {
  private boolean newStateIsValid;

  private com.arjuna.ats.arjuna.state.OutputObjectState oldState;

  private int oType;

  public com.arjuna.ats.internal.arjuna.abstractrecords.CadaverRecord(com.arjuna.ats.arjuna.state.OutputObjectState, com.arjuna.ats.arjuna.objectstore.ParticipantStore, com.arjuna.ats.arjuna.StateManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/arjuna/ats/internal/arjuna/abstractrecords/PersistenceRecord."<init>":(Lcom/arjuna/ats/arjuna/state/OutputObjectState;Lcom/arjuna/ats/arjuna/objectstore/ParticipantStore;Lcom/arjuna/ats/arjuna/StateManager;)V
       7: aload_0
       8: aload_1
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: putfield      #2                  // Field newStateIsValid:Z
      20: aload_0
      21: aconst_null
      22: putfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      25: aload_0
      26: sipush        463
      29: putfield      #5                  // Field oType:I
      32: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      35: invokevirtual #7                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      38: ifeq          83
      41: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      44: new           #8                  // class java/lang/StringBuilder
      47: dup
      48: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #10                 // String CadaverRecord::CadaverRecord(
      53: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #13                 // String ,
      62: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_3
      66: invokevirtual #14                 // Method com/arjuna/ats/arjuna/StateManager.get_uid:()Lcom/arjuna/ats/arjuna/common/Uid;
      69: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #15                 // String )
      74: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      83: return

  public boolean propagateOnAbort();
    Code:
       0: iconst_1
       1: ireturn

  public int typeIs();
    Code:
       0: bipush        111
       2: ireturn

  public int nestedAbort();
    Code:
       0: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #7                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          37
       9: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #8                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #18                 // String CadaverRecord::nestedAbort() for
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      41: ifnull        49
      44: aload_0
      45: iconst_0
      46: putfield      #2                  // Field newStateIsValid:Z
      49: aload_0
      50: getfield      #5                  // Field oType:I
      53: bipush        101
      55: if_icmpne     74
      58: getstatic     #20                 // Field com/arjuna/ats/arjuna/logging/tsLogger.i18NLogger:Lcom/arjuna/ats/arjuna/logging/arjunaI18NLogger;
      61: aload_0
      62: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      65: aload_0
      66: invokevirtual #21                 // Method getTypeOfObject:()Ljava/lang/String;
      69: invokeinterface #22,  3           // InterfaceMethod com/arjuna/ats/arjuna/logging/arjunaI18NLogger.warn_CadaverRecord_1:(Lcom/arjuna/ats/arjuna/common/Uid;Ljava/lang/String;)V
      74: bipush        7
      76: ireturn

  public int nestedPrepare();
    Code:
       0: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #7                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          37
       9: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #8                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #24                 // String CadaverRecord::nestedPrepare() for
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #2                  // Field newStateIsValid:Z
      41: ifeq          49
      44: aload_0
      45: invokespecial #25                 // Method com/arjuna/ats/internal/arjuna/abstractrecords/PersistenceRecord.nestedPrepare:()I
      48: ireturn
      49: iconst_1
      50: ireturn

  public int topLevelAbort();
    Code:
       0: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #7                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          37
       9: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #8                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #26                 // String CadaverRecord::topLevelAbort() for
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      37: aload_0
      38: iconst_0
      39: putfield      #2                  // Field newStateIsValid:Z
      42: aload_0
      43: getfield      #5                  // Field oType:I
      46: bipush        101
      48: if_icmpne     67
      51: getstatic     #20                 // Field com/arjuna/ats/arjuna/logging/tsLogger.i18NLogger:Lcom/arjuna/ats/arjuna/logging/arjunaI18NLogger;
      54: aload_0
      55: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      58: aload_0
      59: invokevirtual #21                 // Method getTypeOfObject:()Ljava/lang/String;
      62: invokeinterface #22,  3           // InterfaceMethod com/arjuna/ats/arjuna/logging/arjunaI18NLogger.warn_CadaverRecord_1:(Lcom/arjuna/ats/arjuna/common/Uid;Ljava/lang/String;)V
      67: bipush        7
      69: ireturn

  public int topLevelCommit();
    Code:
       0: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #7                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          37
       9: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #8                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #27                 // String CadaverRecord::topLevelCommit() for
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      37: iconst_1
      38: istore_1
      39: aload_0
      40: getfield      #28                 // Field com/arjuna/ats/internal/arjuna/abstractrecords/PersistenceRecord.state:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      43: astore_2
      44: aload_2
      45: ifnull        91
      48: aload_0
      49: getfield      #5                  // Field oType:I
      52: bipush        111
      54: if_icmpne     91
      57: aload_0
      58: getfield      #29                 // Field targetParticipantStore:Lcom/arjuna/ats/arjuna/objectstore/ParticipantStore;
      61: ifnonnull     67
      64: bipush        8
      66: ireturn
      67: aload_0
      68: getfield      #29                 // Field targetParticipantStore:Lcom/arjuna/ats/arjuna/objectstore/ParticipantStore;
      71: aload_2
      72: invokevirtual #30                 // Method com/arjuna/ats/arjuna/state/OutputObjectState.stateUid:()Lcom/arjuna/ats/arjuna/common/Uid;
      75: aload_2
      76: invokevirtual #31                 // Method com/arjuna/ats/arjuna/state/OutputObjectState.type:()Ljava/lang/String;
      79: invokeinterface #32,  3           // InterfaceMethod com/arjuna/ats/arjuna/objectstore/ParticipantStore.commit_state:(Lcom/arjuna/ats/arjuna/common/Uid;Ljava/lang/String;)Z
      84: istore_1
      85: goto          91
      88: astore_3
      89: iconst_0
      90: istore_1
      91: iload_1
      92: ifeq          100
      95: bipush        7
      97: goto          102
     100: bipush        8
     102: ireturn
    Exception table:
       from    to  target type
          67    85    88   Class com/arjuna/ats/arjuna/exceptions/ObjectStoreException

  public int topLevelPrepare();
    Code:
       0: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #7                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          37
       9: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #8                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #34                 // String CadaverRecord::topLevelPrepare() for
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      37: iconst_1
      38: istore_1
      39: aload_0
      40: getfield      #2                  // Field newStateIsValid:Z
      43: ifeq          53
      46: aload_0
      47: getfield      #28                 // Field com/arjuna/ats/internal/arjuna/abstractrecords/PersistenceRecord.state:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      50: goto          57
      53: aload_0
      54: getfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      57: astore_2
      58: aload_2
      59: ifnull        123
      62: aload_0
      63: getfield      #5                  // Field oType:I
      66: bipush        111
      68: if_icmpne     121
      71: aload_0
      72: getfield      #29                 // Field targetParticipantStore:Lcom/arjuna/ats/arjuna/objectstore/ParticipantStore;
      75: ifnonnull     80
      78: iconst_1
      79: ireturn
      80: aload_0
      81: getfield      #29                 // Field targetParticipantStore:Lcom/arjuna/ats/arjuna/objectstore/ParticipantStore;
      84: aload_2
      85: invokevirtual #30                 // Method com/arjuna/ats/arjuna/state/OutputObjectState.stateUid:()Lcom/arjuna/ats/arjuna/common/Uid;
      88: aload_2
      89: invokevirtual #31                 // Method com/arjuna/ats/arjuna/state/OutputObjectState.type:()Ljava/lang/String;
      92: aload_2
      93: invokeinterface #35,  4           // InterfaceMethod com/arjuna/ats/arjuna/objectstore/ParticipantStore.write_uncommitted:(Lcom/arjuna/ats/arjuna/common/Uid;Ljava/lang/String;Lcom/arjuna/ats/arjuna/state/OutputObjectState;)Z
      98: ifeq          110
     101: aload_0
     102: invokevirtual #36                 // Method shadowForced:()Z
     105: ifeq          110
     108: iconst_0
     109: istore_1
     110: goto          123
     113: astore_3
     114: aload_3
     115: invokevirtual #37                 // Method com/arjuna/ats/arjuna/exceptions/ObjectStoreException.printStackTrace:()V
     118: goto          123
     121: iconst_0
     122: istore_1
     123: iload_1
     124: ireturn
    Exception table:
       from    to  target type
          80   110   113   Class com/arjuna/ats/arjuna/exceptions/ObjectStoreException

  public void print(java.io.PrintWriter);
    Code:
       0: aload_1
       1: ldc           #38                 // String Cadaver for:
       3: invokevirtual #39                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #40                 // Method com/arjuna/ats/internal/arjuna/abstractrecords/PersistenceRecord.print:(Ljava/io/PrintWriter;)V
      11: return

  public java.lang.String type();
    Code:
       0: ldc           #41                 // String /StateManager/AbstractRecord/RecoveryRecord/PersistenceRecord/CadaverRecord
       2: areturn

  public boolean doSave();
    Code:
       0: aload_0
       1: getfield      #5                  // Field oType:I
       4: bipush        111
       6: if_icmpne     11
       9: iconst_1
      10: ireturn
      11: iconst_0
      12: ireturn

  public void merge(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.typeIs:()I
       5: putfield      #5                  // Field oType:I
       8: aload_0
       9: getfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      12: ifnull        43
      15: aload_0
      16: getfield      #2                  // Field newStateIsValid:Z
      19: ifeq          30
      22: aload_0
      23: aconst_null
      24: putfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      27: goto          43
      30: aload_0
      31: aload_0
      32: getfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      35: invokevirtual #43                 // Method setValue:(Ljava/lang/Object;)V
      38: aload_0
      39: iconst_1
      40: putfield      #2                  // Field newStateIsValid:Z
      43: aload_0
      44: new           #44                 // class com/arjuna/ats/arjuna/state/OutputObjectState
      47: dup
      48: aload_1
      49: invokevirtual #45                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.value:()Ljava/lang/Object;
      52: checkcast     #44                 // class com/arjuna/ats/arjuna/state/OutputObjectState
      55: checkcast     #44                 // class com/arjuna/ats/arjuna/state/OutputObjectState
      58: invokespecial #46                 // Method com/arjuna/ats/arjuna/state/OutputObjectState."<init>":(Lcom/arjuna/ats/arjuna/state/OutputObjectState;)V
      61: putfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      64: return

  public boolean shouldMerge(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       4: aload_1
       5: invokevirtual #47                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.order:()Lcom/arjuna/ats/arjuna/common/Uid;
       8: invokevirtual #48                 // Method com/arjuna/ats/arjuna/common/Uid.equals:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      11: ifeq          36
      14: aload_1
      15: invokevirtual #42                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.typeIs:()I
      18: bipush        111
      20: if_icmpeq     32
      23: aload_1
      24: invokevirtual #42                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.typeIs:()I
      27: bipush        101
      29: if_icmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public boolean shouldReplace(com.arjuna.ats.arjuna.coordinator.AbstractRecord);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method order:()Lcom/arjuna/ats/arjuna/common/Uid;
       4: aload_1
       5: invokevirtual #47                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.order:()Lcom/arjuna/ats/arjuna/common/Uid;
       8: invokevirtual #48                 // Method com/arjuna/ats/arjuna/common/Uid.equals:(Lcom/arjuna/ats/arjuna/common/Uid;)Z
      11: ifeq          36
      14: aload_1
      15: invokevirtual #42                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.typeIs:()I
      18: bipush        111
      20: if_icmpeq     32
      23: aload_1
      24: invokevirtual #42                 // Method com/arjuna/ats/arjuna/coordinator/AbstractRecord.typeIs:()I
      27: bipush        101
      29: if_icmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public com.arjuna.ats.internal.arjuna.abstractrecords.CadaverRecord();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method com/arjuna/ats/internal/arjuna/abstractrecords/PersistenceRecord."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field newStateIsValid:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field oldState:Lcom/arjuna/ats/arjuna/state/OutputObjectState;
      14: aload_0
      15: sipush        463
      18: putfield      #5                  // Field oType:I
      21: aload_0
      22: aconst_null
      23: putfield      #29                 // Field targetParticipantStore:Lcom/arjuna/ats/arjuna/objectstore/ParticipantStore;
      26: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      29: invokevirtual #7                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      32: ifeq          43
      35: getstatic     #6                  // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      38: ldc           #50                 // String CadaverRecord::CadaverRecord ()
      40: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      43: return
}
