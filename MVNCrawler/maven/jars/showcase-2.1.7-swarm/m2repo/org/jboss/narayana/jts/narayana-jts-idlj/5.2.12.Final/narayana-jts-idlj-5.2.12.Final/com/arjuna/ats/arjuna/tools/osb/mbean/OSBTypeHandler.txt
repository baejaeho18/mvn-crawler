Compiled from "OSBTypeHandler.java"
public class com.arjuna.ats.arjuna.tools.osb.mbean.OSBTypeHandler {
  private boolean enabled;

  private boolean allowRegistration;

  private java.lang.String recordClass;

  private java.lang.String beanClass;

  private java.lang.String typeName;

  com.arjuna.ats.arjuna.tools.osb.mbean.HeaderStateReader headerStateReader;

  public com.arjuna.ats.arjuna.tools.osb.mbean.OSBTypeHandler(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: invokespecial #1                  // Method "<init>":(ZZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public com.arjuna.ats.arjuna.tools.osb.mbean.OSBTypeHandler(boolean, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field enabled:Z
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field allowRegistration:Z
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field recordClass:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field beanClass:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field typeName:Ljava/lang/String;
      31: aload_0
      32: aload         6
      34: ifnonnull     47
      37: new           #8                  // class com/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader
      40: dup
      41: invokespecial #9                  // Method com/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader."<init>":()V
      44: goto          52
      47: aload         6
      49: invokestatic  #10                 // Method createHeader:(Ljava/lang/String;)Lcom/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader;
      52: putfield      #11                 // Field headerStateReader:Lcom/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader;
      55: return

  private static com.arjuna.ats.arjuna.tools.osb.mbean.HeaderStateReader createHeader(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: anewarray     #13                 // class java/lang/Class
      10: invokevirtual #14                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      13: astore_2
      14: aload_2
      15: iconst_0
      16: anewarray     #15                 // class java/lang/Object
      19: invokevirtual #16                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #8                  // class com/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader
      25: areturn
      26: astore_1
      27: getstatic     #18                 // Field com/arjuna/ats/arjuna/logging/tsLogger.i18NLogger:Lcom/arjuna/ats/arjuna/logging/arjunaI18NLogger;
      30: aload_1
      31: invokeinterface #19,  2           // InterfaceMethod com/arjuna/ats/arjuna/logging/arjunaI18NLogger.info_osb_HeaderStateCtorFail:(Ljava/lang/Throwable;)V
      36: new           #8                  // class com/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader
      39: dup
      40: invokespecial #9                  // Method com/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader."<init>":()V
      43: areturn
    Exception table:
       from    to  target type
           0    25    26   Class java/lang/Throwable

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field enabled:Z
       4: ireturn

  public boolean isAllowRegistration();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowRegistration:Z
       4: ireturn

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field enabled:Z
       5: return

  public java.lang.String getRecordClass();
    Code:
       0: aload_0
       1: getfield      #5                  // Field recordClass:Ljava/lang/String;
       4: areturn

  public java.lang.String getBeanClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field beanClass:Ljava/lang/String;
       4: areturn

  public java.lang.String getTypeName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field typeName:Ljava/lang/String;
       4: areturn

  public com.arjuna.ats.arjuna.tools.osb.mbean.HeaderStateReader getHeaderStateReader();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headerStateReader:Lcom/arjuna/ats/arjuna/tools/osb/mbean/HeaderStateReader;
       4: areturn
}
