Compiled from "OptionalJaxWSTxInboundBridgeHandler.java"
public class org.jboss.jbossts.txbridge.inbound.OptionalJaxWSTxInboundBridgeHandler implements javax.xml.ws.handler.Handler {
  private final org.jboss.jbossts.txbridge.inbound.JaxWSTxInboundBridgeHandler delegate;

  public org.jboss.jbossts.txbridge.inbound.OptionalJaxWSTxInboundBridgeHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler
       8: dup
       9: invokespecial #3                  // Method org/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler."<init>":()V
      12: putfield      #4                  // Field delegate:Lorg/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler;
      15: return

  public boolean handleMessage(javax.xml.ws.handler.MessageContext);
    Code:
       0: getstatic     #5                  // Field org/jboss/jbossts/txbridge/utils/txbridgeLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #6                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          17
       9: getstatic     #5                  // Field org/jboss/jbossts/txbridge/utils/txbridgeLogger.logger:Lorg/jboss/logging/Logger;
      12: ldc           #7                  // String OptionalJaxWSTxInboundBridgeHandler.handleMessage()
      14: invokevirtual #8                  // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      17: aload_1
      18: ldc           #10                 // String javax.xml.ws.handler.message.outbound
      20: invokeinterface #11,  2           // InterfaceMethod javax/xml/ws/handler/MessageContext.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #12                 // class java/lang/Boolean
      28: astore_2
      29: aload_2
      30: ifnonnull     35
      33: iconst_1
      34: ireturn
      35: aload_2
      36: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      39: ifeq          48
      42: aload_0
      43: aload_1
      44: invokespecial #14                 // Method handleOutbound:(Ljavax/xml/ws/handler/MessageContext;)Z
      47: ireturn
      48: aload_0
      49: aload_1
      50: invokespecial #15                 // Method handleInbound:(Ljavax/xml/ws/handler/MessageContext;)Z
      53: ireturn

  public boolean handleFault(javax.xml.ws.handler.MessageContext);
    Code:
       0: getstatic     #5                  // Field org/jboss/jbossts/txbridge/utils/txbridgeLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #6                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          17
       9: getstatic     #5                  // Field org/jboss/jbossts/txbridge/utils/txbridgeLogger.logger:Lorg/jboss/logging/Logger;
      12: ldc           #16                 // String OptionalJaxWSTxInboundBridgeHandler.handleFault()
      14: invokevirtual #8                  // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      17: aload_0
      18: invokespecial #17                 // Method isJTATransactionAvailable:()Z
      21: ifeq          33
      24: aload_0
      25: getfield      #4                  // Field delegate:Lorg/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler;
      28: aload_1
      29: invokevirtual #18                 // Method org/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler.handleFault:(Ljavax/xml/ws/handler/MessageContext;)Z
      32: ireturn
      33: iconst_1
      34: ireturn

  public void close(javax.xml.ws.handler.MessageContext);
    Code:
       0: getstatic     #5                  // Field org/jboss/jbossts/txbridge/utils/txbridgeLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #6                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          17
       9: getstatic     #5                  // Field org/jboss/jbossts/txbridge/utils/txbridgeLogger.logger:Lorg/jboss/logging/Logger;
      12: ldc           #19                 // String OptionalJaxWSTxInboundBridgeHandler.close()
      14: invokevirtual #8                  // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      17: return

  private boolean handleInbound(javax.xml.ws.handler.MessageContext);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method isWSATTransactionAvailable:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #4                  // Field delegate:Lorg/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler;
      11: aload_1
      12: invokevirtual #21                 // Method org/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler.handleInbound:(Ljavax/xml/ws/handler/MessageContext;)Z
      15: ireturn
      16: iconst_1
      17: ireturn

  private boolean handleOutbound(javax.xml.ws.handler.MessageContext);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method isJTATransactionAvailable:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #4                  // Field delegate:Lorg/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler;
      11: aload_1
      12: invokevirtual #22                 // Method org/jboss/jbossts/txbridge/inbound/JaxWSTxInboundBridgeHandler.handleOutbound:(Ljavax/xml/ws/handler/MessageContext;)Z
      15: ireturn
      16: iconst_1
      17: ireturn

  private boolean isWSATTransactionAvailable();
    Code:
       0: aconst_null
       1: astore_1
       2: invokestatic  #23                 // Method com/arjuna/mw/wst11/TransactionManagerFactory.transactionManager:()Lcom/arjuna/mw/wst11/TransactionManager;
       5: invokevirtual #24                 // Method com/arjuna/mw/wst11/TransactionManager.currentTransaction:()Lcom/arjuna/mw/wst/TxContext;
       8: astore_1
       9: goto          13
      12: astore_2
      13: aload_1
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
    Exception table:
       from    to  target type
           2     9    12   Class com/arjuna/wst/SystemException

  private boolean isJTATransactionAvailable();
    Code:
       0: aconst_null
       1: astore_1
       2: invokestatic  #26                 // Method com/arjuna/ats/jta/TransactionManager.transactionManager:()Ljavax/transaction/TransactionManager;
       5: invokeinterface #27,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      10: astore_1
      11: goto          15
      14: astore_2
      15: aload_1
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn
    Exception table:
       from    to  target type
           2    11    14   Class javax/transaction/SystemException
}
