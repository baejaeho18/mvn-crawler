Compiled from "PeriodicRecovery.java"
public class com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery extends java.lang.Thread {
  private final java.util.Vector<com.arjuna.ats.arjuna.recovery.RecoveryModule> _recoveryModules;

  private int _backoffPeriod;

  private int _recoveryPeriod;

  public static final int _defaultBackoffPeriod;

  public static final int _defaultRecoveryPeriod;

  private final java.lang.Object _stateLock;

  private com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery$Status _currentStatus;

  private com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery$Mode _currentMode;

  private boolean _workerScanRequested;

  private java.text.SimpleDateFormat _theTimestamper;

  private java.net.ServerSocket _socket;

  private final java.lang.Object _socketLock;

  private com.arjuna.ats.internal.arjuna.recovery.Listener _listener;

  private com.arjuna.ats.internal.arjuna.recovery.WorkerService _workerService;

  public com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery(boolean, boolean);
    Code:
       0: aload_0
       1: ldc           #1                  // String Periodic Recovery
       3: invokespecial #2                  // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: new           #3                  // class java/util/Vector
      10: dup
      11: invokespecial #4                  // Method java/util/Vector."<init>":()V
      14: putfield      #5                  // Field _recoveryModules:Ljava/util/Vector;
      17: aload_0
      18: iconst_0
      19: putfield      #6                  // Field _backoffPeriod:I
      22: aload_0
      23: iconst_0
      24: putfield      #7                  // Field _recoveryPeriod:I
      27: aload_0
      28: new           #8                  // class java/lang/Object
      31: dup
      32: invokespecial #9                  // Method java/lang/Object."<init>":()V
      35: putfield      #10                 // Field _stateLock:Ljava/lang/Object;
      38: aload_0
      39: iconst_0
      40: putfield      #11                 // Field _workerScanRequested:Z
      43: aload_0
      44: new           #12                 // class java/text/SimpleDateFormat
      47: dup
      48: ldc           #13                 // String EEE, d MMM yyyy HH:mm:ss
      50: invokespecial #14                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      53: putfield      #15                 // Field _theTimestamper:Ljava/text/SimpleDateFormat;
      56: aload_0
      57: aconst_null
      58: putfield      #16                 // Field _socket:Ljava/net/ServerSocket;
      61: aload_0
      62: new           #8                  // class java/lang/Object
      65: dup
      66: invokespecial #9                  // Method java/lang/Object."<init>":()V
      69: putfield      #17                 // Field _socketLock:Ljava/lang/Object;
      72: aload_0
      73: aconst_null
      74: putfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
      77: aload_0
      78: aconst_null
      79: putfield      #19                 // Field _workerService:Lcom/arjuna/ats/internal/arjuna/recovery/WorkerService;
      82: aload_0
      83: invokespecial #20                 // Method initialise:()V
      86: aload_0
      87: invokespecial #21                 // Method loadModules:()V
      90: iload_2
      91: ifeq          174
      94: aload_0
      95: new           #22                 // class com/arjuna/ats/internal/arjuna/recovery/WorkerService
      98: dup
      99: aload_0
     100: invokespecial #23                 // Method com/arjuna/ats/internal/arjuna/recovery/WorkerService."<init>":(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery;)V
     103: putfield      #19                 // Field _workerService:Lcom/arjuna/ats/internal/arjuna/recovery/WorkerService;
     106: aload_0
     107: new           #24                 // class com/arjuna/ats/internal/arjuna/recovery/Listener
     110: dup
     111: aload_0
     112: invokevirtual #25                 // Method getServerSocket:()Ljava/net/ServerSocket;
     115: aload_0
     116: getfield      #19                 // Field _workerService:Lcom/arjuna/ats/internal/arjuna/recovery/WorkerService;
     119: invokespecial #26                 // Method com/arjuna/ats/internal/arjuna/recovery/Listener."<init>":(Ljava/net/ServerSocket;Lcom/arjuna/ats/arjuna/recovery/Service;)V
     122: putfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
     125: aload_0
     126: getfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
     129: iconst_1
     130: invokevirtual #27                 // Method com/arjuna/ats/internal/arjuna/recovery/Listener.setDaemon:(Z)V
     133: getstatic     #28                 // Field com/arjuna/ats/arjuna/logging/tsLogger.i18NLogger:Lcom/arjuna/ats/arjuna/logging/arjunaI18NLogger;
     136: aload_0
     137: getfield      #16                 // Field _socket:Ljava/net/ServerSocket;
     140: invokevirtual #29                 // Method java/net/ServerSocket.getInetAddress:()Ljava/net/InetAddress;
     143: invokevirtual #30                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     146: aload_0
     147: getfield      #16                 // Field _socket:Ljava/net/ServerSocket;
     150: invokevirtual #31                 // Method java/net/ServerSocket.getLocalPort:()I
     153: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     156: invokeinterface #33,  3           // InterfaceMethod com/arjuna/ats/arjuna/logging/arjunaI18NLogger.info_recovery_PeriodicRecovery_13:(Ljava/lang/String;Ljava/lang/String;)V
     161: goto          174
     164: astore_3
     165: getstatic     #28                 // Field com/arjuna/ats/arjuna/logging/tsLogger.i18NLogger:Lcom/arjuna/ats/arjuna/logging/arjunaI18NLogger;
     168: aload_3
     169: invokeinterface #35,  2           // InterfaceMethod com/arjuna/ats/arjuna/logging/arjunaI18NLogger.warn_recovery_PeriodicRecovery_9:(Ljava/lang/Throwable;)V
     174: iload_1
     175: ifeq          199
     178: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     181: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     184: ifeq          195
     187: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     190: ldc           #38                 // String PeriodicRecovery: starting background scanner thread
     192: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     195: aload_0
     196: invokevirtual #40                 // Method start:()V
     199: iload_2
     200: ifeq          234
     203: aload_0
     204: getfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
     207: ifnull        234
     210: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     213: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     216: ifeq          227
     219: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     222: ldc           #41                 // String PeriodicRecovery: starting listener worker thread
     224: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     227: aload_0
     228: getfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
     231: invokevirtual #42                 // Method com/arjuna/ats/internal/arjuna/recovery/Listener.start:()V
     234: return
    Exception table:
       from    to  target type
          94   161   164   Class java/lang/Exception

  public void shutdown(boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
       4: ifnull        14
       7: aload_0
       8: getfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
      11: invokevirtual #43                 // Method com/arjuna/ats/internal/arjuna/recovery/Listener.stopListener:()V
      14: aload_0
      15: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      18: dup
      19: astore_2
      20: monitorenter
      21: aload_0
      22: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      25: getstatic     #45                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.TERMINATED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      28: if_acmpeq     62
      31: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      34: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      37: ifeq          48
      40: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      43: ldc           #46                 // String PeriodicRecovery: Mode <== TERMINATED
      45: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      48: aload_0
      49: getstatic     #45                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.TERMINATED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      52: invokespecial #47                 // Method setMode:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;)V
      55: aload_0
      56: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      59: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
      62: iload_1
      63: ifne          124
      66: aload_0
      67: invokespecial #49                 // Method getStatus:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      70: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      73: if_acmpne     107
      76: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      79: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      82: ifeq          93
      85: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      88: ldc           #51                 // String PeriodicRecovery: shutdown waiting for scan to end
      90: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      97: invokevirtual #52                 // Method java/lang/Object.wait:()V
     100: goto          66
     103: astore_3
     104: goto          66
     107: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     110: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     113: ifeq          124
     116: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     119: ldc           #54                 // String PeriodicRecovery: shutdown scan wait complete
     121: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     124: aload_2
     125: monitorexit
     126: goto          136
     129: astore        4
     131: aload_2
     132: monitorexit
     133: aload         4
     135: athrow
     136: iload_1
     137: ifne          155
     140: aload_0
     141: invokevirtual #55                 // Method isAlive:()Z
     144: ifeq          155
     147: aload_0
     148: invokevirtual #56                 // Method join:()V
     151: goto          155
     154: astore_2
     155: return
    Exception table:
       from    to  target type
          76   100   103   Class java/lang/InterruptedException
          21   126   129   any
         129   133   129   any
         147   151   154   Class java/lang/InterruptedException

  public com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery$Mode suspendScan(boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      11: astore_3
      12: aload_3
      13: getstatic     #57                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.ENABLED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      16: if_acmpne     50
      19: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      22: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      25: ifeq          36
      28: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      31: ldc           #58                 // String PeriodicRecovery: Mode <== SUSPENDED
      33: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      36: aload_0
      37: getstatic     #59                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.SUSPENDED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      40: invokespecial #47                 // Method setMode:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;)V
      43: aload_0
      44: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      47: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
      50: iload_1
      51: ifne          113
      54: aload_0
      55: invokespecial #49                 // Method getStatus:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      58: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      61: if_acmpne     113
      64: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      67: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      70: ifeq          81
      73: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      76: ldc           #60                 // String PeriodicRecovery: suspendScan waiting for scan to end
      78: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      81: aload_0
      82: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      85: invokevirtual #52                 // Method java/lang/Object.wait:()V
      88: goto          93
      91: astore        4
      93: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      96: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      99: ifeq          54
     102: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     105: ldc           #61                 // String PeriodicRecovery: suspendScan scan wait compelete
     107: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     110: goto          54
     113: aload_3
     114: aload_2
     115: monitorexit
     116: areturn
     117: astore        5
     119: aload_2
     120: monitorexit
     121: aload         5
     123: athrow
    Exception table:
       from    to  target type
          64    88    91   Class java/lang/InterruptedException
           7   116   117   any
         117   121   117   any

  public void resumeScan();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      11: getstatic     #59                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.SUSPENDED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      14: if_acmpne     48
      17: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      20: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      23: ifeq          34
      26: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      29: ldc           #62                 // String PeriodicRecovery: Mode <== ENABLED
      31: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      34: aload_0
      35: getstatic     #57                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.ENABLED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      38: invokespecial #47                 // Method setMode:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;)V
      41: aload_0
      42: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      45: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
      48: aload_1
      49: monitorexit
      50: goto          58
      53: astore_2
      54: aload_1
      55: monitorexit
      56: aload_2
      57: athrow
      58: return
    Exception table:
       from    to  target type
           7    50    53   any
          53    56    53   any

  public java.net.ServerSocket getServerSocket() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field _socketLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #16                 // Field _socket:Ljava/net/ServerSocket;
      11: ifnonnull     46
      14: aload_0
      15: new           #63                 // class java/net/ServerSocket
      18: dup
      19: invokestatic  #64                 // Method com/arjuna/ats/arjuna/recovery/RecoveryManager.getRecoveryManagerPort:()I
      22: bipush        50
      24: invokestatic  #66                 // Method com/arjuna/ats/arjuna/recovery/RecoveryManager.getRecoveryManagerHost:()Ljava/net/InetAddress;
      27: invokespecial #67                 // Method java/net/ServerSocket."<init>":(IILjava/net/InetAddress;)V
      30: putfield      #16                 // Field _socket:Ljava/net/ServerSocket;
      33: invokestatic  #68                 // Method com/arjuna/ats/arjuna/common/recoveryPropertyManager.getRecoveryEnvironmentBean:()Lcom/arjuna/ats/arjuna/common/RecoveryEnvironmentBean;
      36: aload_0
      37: getfield      #16                 // Field _socket:Ljava/net/ServerSocket;
      40: invokevirtual #31                 // Method java/net/ServerSocket.getLocalPort:()I
      43: invokevirtual #69                 // Method com/arjuna/ats/arjuna/common/RecoveryEnvironmentBean.setRecoveryPort:(I)V
      46: aload_0
      47: getfield      #16                 // Field _socket:Ljava/net/ServerSocket;
      50: aload_1
      51: monitorexit
      52: areturn
      53: astore_2
      54: aload_1
      55: monitorexit
      56: aload_2
      57: athrow
    Exception table:
       from    to  target type
           7    52    53   any
          53    56    53   any

  public void run();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: invokespecial #49                 // Method getStatus:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      15: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      18: if_acmpne     99
      21: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      24: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      27: ifeq          38
      30: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      33: ldc           #70                 // String PeriodicRecovery: background thread waiting on other scan
      35: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      38: aload_0
      39: invokespecial #71                 // Method doScanningWait:()V
      42: aload_0
      43: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      46: getstatic     #57                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.ENABLED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      49: if_acmpne     214
      52: aload_0
      53: getfield      #11                 // Field _workerScanRequested:Z
      56: ifne          214
      59: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      62: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      65: ifeq          76
      68: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      71: ldc           #72                 // String PeriodicRecovery: background thread backing off
      73: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      76: aload_0
      77: invokespecial #73                 // Method doPeriodicWait:()V
      80: aload_0
      81: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      84: getstatic     #45                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.TERMINATED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      87: if_acmpne     94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore_1
      96: goto          214
      99: getstatic     #74                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$1.$SwitchMap$com$arjuna$ats$internal$arjuna$recovery$PeriodicRecovery$Mode:[I
     102: aload_0
     103: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     106: invokevirtual #75                 // Method com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.ordinal:()I
     109: iaload
     110: tableswitch   { // 1 to 3
                     1: 136
                     2: 172
                     3: 212
               default: 214
          }
     136: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     139: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     142: ifeq          153
     145: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     148: ldc           #76                 // String PeriodicRecovery: background thread Status <== SCANNING
     150: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     153: aload_0
     154: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
     157: invokespecial #77                 // Method setStatus:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;)V
     160: aload_0
     161: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     164: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
     167: iconst_1
     168: istore_2
     169: goto          214
     172: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     175: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     178: ifeq          189
     181: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     184: ldc           #78                 // String PeriodicRecovery: background thread wait while SUSPENDED
     186: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     189: aload_0
     190: invokespecial #79                 // Method doSuspendedWait:()V
     193: aload_0
     194: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     197: getstatic     #45                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.TERMINATED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     200: if_acmpne     207
     203: iconst_1
     204: goto          208
     207: iconst_0
     208: istore_1
     209: goto          214
     212: iconst_1
     213: istore_1
     214: aload_3
     215: monitorexit
     216: goto          226
     219: astore        4
     221: aload_3
     222: monitorexit
     223: aload         4
     225: athrow
     226: iload_2
     227: ifeq          405
     230: aload_0
     231: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     234: dup
     235: astore        4
     237: monitorenter
     238: aload_0
     239: getfield      #11                 // Field _workerScanRequested:Z
     242: istore_3
     243: aload_0
     244: iconst_0
     245: putfield      #11                 // Field _workerScanRequested:Z
     248: aload         4
     250: monitorexit
     251: goto          262
     254: astore        5
     256: aload         4
     258: monitorexit
     259: aload         5
     261: athrow
     262: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     265: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     268: ifeq          279
     271: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     274: ldc           #80                 // String PeriodicRecovery: background thread scanning
     276: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     279: aload_0
     280: invokespecial #81                 // Method doWorkInternal:()V
     283: aload_0
     284: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     287: dup
     288: astore        4
     290: monitorenter
     291: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     294: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     297: ifeq          308
     300: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     303: ldc           #82                 // String PeriodicRecovery: background thread Status <== INACTIVE
     305: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     308: aload_0
     309: getstatic     #83                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.INACTIVE:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
     312: invokespecial #77                 // Method setStatus:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;)V
     315: aload_0
     316: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     319: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
     322: iload_3
     323: ifeq          337
     326: aload_0
     327: getfield      #11                 // Field _workerScanRequested:Z
     330: ifne          337
     333: aload_0
     334: invokespecial #84                 // Method notifyWorker:()V
     337: aload_0
     338: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     341: getstatic     #57                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.ENABLED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     344: if_acmpne     375
     347: aload_0
     348: getfield      #11                 // Field _workerScanRequested:Z
     351: ifne          375
     354: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     357: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     360: ifeq          371
     363: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     366: ldc           #72                 // String PeriodicRecovery: background thread backing off
     368: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     371: aload_0
     372: invokespecial #73                 // Method doPeriodicWait:()V
     375: aload_0
     376: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     379: getstatic     #45                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.TERMINATED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     382: if_acmpne     389
     385: iconst_1
     386: goto          390
     389: iconst_0
     390: istore_1
     391: aload         4
     393: monitorexit
     394: goto          405
     397: astore        6
     399: aload         4
     401: monitorexit
     402: aload         6
     404: athrow
     405: iload_1
     406: ifeq          2
     409: aload_0
     410: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     413: dup
     414: astore_2
     415: monitorenter
     416: aload_0
     417: getfield      #11                 // Field _workerScanRequested:Z
     420: ifeq          427
     423: aload_0
     424: invokespecial #84                 // Method notifyWorker:()V
     427: aload_2
     428: monitorexit
     429: goto          439
     432: astore        7
     434: aload_2
     435: monitorexit
     436: aload         7
     438: athrow
     439: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     442: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     445: ifeq          456
     448: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     451: ldc           #85                 // String PeriodicRecovery: background thread exiting
     453: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     456: return
    Exception table:
       from    to  target type
          11   216   219   any
         219   223   219   any
         238   251   254   any
         254   259   254   any
         291   394   397   any
         397   402   397   any
         416   429   432   any
         432   436   432   any

  public final void doWork();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
       6: dup
       7: astore_2
       8: monitorenter
       9: aload_0
      10: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      13: getstatic     #59                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.SUSPENDED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      16: if_acmpne     40
      19: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      22: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      25: ifeq          36
      28: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      31: ldc           #86                 // String PeriodicRecovery: ad hoc thread wait while SUSPENDED
      33: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      36: aload_0
      37: invokespecial #79                 // Method doSuspendedWait:()V
      40: aload_0
      41: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      44: getstatic     #45                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.TERMINATED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      47: if_acmpne     70
      50: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      53: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      56: ifeq          137
      59: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      62: ldc           #87                 // String PeriodicRecovery: ad hoc thread scan TERMINATED
      64: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      67: goto          137
      70: aload_0
      71: invokespecial #49                 // Method getStatus:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      74: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      77: if_acmpne     104
      80: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      83: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      86: ifeq          97
      89: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      92: ldc           #88                 // String PeriodicRecovery: ad hoc thread waiting on other scan
      94: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      97: aload_0
      98: invokespecial #71                 // Method doScanningWait:()V
     101: goto          137
     104: aload_0
     105: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
     108: invokespecial #77                 // Method setStatus:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;)V
     111: aload_0
     112: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     115: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
     118: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     121: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     124: ifeq          135
     127: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     130: ldc           #89                 // String PeriodicRecovery: ad hoc thread Status <== SCANNING
     132: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     135: iconst_1
     136: istore_1
     137: aload_2
     138: monitorexit
     139: goto          147
     142: astore_3
     143: aload_2
     144: monitorexit
     145: aload_3
     146: athrow
     147: iload_1
     148: ifeq          266
     151: aload_0
     152: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     155: dup
     156: astore_3
     157: monitorenter
     158: aload_0
     159: getfield      #11                 // Field _workerScanRequested:Z
     162: istore_2
     163: aload_0
     164: iconst_0
     165: putfield      #11                 // Field _workerScanRequested:Z
     168: aload_3
     169: monitorexit
     170: goto          180
     173: astore        4
     175: aload_3
     176: monitorexit
     177: aload         4
     179: athrow
     180: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     183: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     186: ifeq          197
     189: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     192: ldc           #90                 // String PeriodicRecovery: ad hoc thread scanning
     194: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     197: aload_0
     198: invokespecial #81                 // Method doWorkInternal:()V
     201: aload_0
     202: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     205: dup
     206: astore_3
     207: monitorenter
     208: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     211: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     214: ifeq          225
     217: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     220: ldc           #91                 // String PeriodicRecovery: ad hoc thread Status <== INACTIVE
     222: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     225: aload_0
     226: getstatic     #83                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.INACTIVE:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
     229: invokespecial #77                 // Method setStatus:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;)V
     232: aload_0
     233: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     236: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
     239: iload_2
     240: ifeq          254
     243: aload_0
     244: getfield      #11                 // Field _workerScanRequested:Z
     247: ifne          254
     250: aload_0
     251: invokespecial #84                 // Method notifyWorker:()V
     254: aload_3
     255: monitorexit
     256: goto          266
     259: astore        5
     261: aload_3
     262: monitorexit
     263: aload         5
     265: athrow
     266: return
    Exception table:
       from    to  target type
           9   139   142   any
         142   145   142   any
         158   170   173   any
         173   177   173   any
         208   256   259   any
         259   263   259   any

  public void wakeUp();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #11                 // Field _workerScanRequested:Z
      12: aload_0
      13: invokespecial #49                 // Method getStatus:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      16: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
      19: if_acmpeq     46
      22: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      25: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      28: ifeq          39
      31: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      34: ldc           #92                 // String PeriodicRecovery: listener worker interrupts background thread
      36: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      43: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
      46: aload_1
      47: monitorexit
      48: goto          56
      51: astore_2
      52: aload_1
      53: monitorexit
      54: aload_2
      55: athrow
      56: return
    Exception table:
       from    to  target type
           7    48    51   any
          51    54    51   any

  public final void addModule(com.arjuna.ats.arjuna.recovery.RecoveryModule);
    Code:
       0: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
       6: ifeq          40
       9: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #93                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #95                 // String PeriodicRecovery: adding module
      21: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: invokevirtual #98                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #5                  // Field _recoveryModules:Ljava/util/Vector;
      44: aload_1
      45: invokevirtual #100                // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      48: pop
      49: return

  public final void removeModule(com.arjuna.ats.arjuna.recovery.RecoveryModule, boolean);
    Code:
       0: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
       6: ifeq          40
       9: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #93                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #101                // String PeriodicRecovery: removing module
      21: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: invokevirtual #98                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      40: iload_2
      41: ifeq          67
      44: aload_0
      45: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      48: dup
      49: astore_3
      50: monitorenter
      51: aload_0
      52: invokespecial #71                 // Method doScanningWait:()V
      55: aload_3
      56: monitorexit
      57: goto          67
      60: astore        4
      62: aload_3
      63: monitorexit
      64: aload         4
      66: athrow
      67: aload_0
      68: getfield      #5                  // Field _recoveryModules:Ljava/util/Vector;
      71: aload_1
      72: invokevirtual #102                // Method java/util/Vector.remove:(Ljava/lang/Object;)Z
      75: pop
      76: return
    Exception table:
       from    to  target type
          51    57    60   any
          60    64    60   any

  public final void removeAllModules(boolean);
    Code:
       0: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
       6: ifeq          17
       9: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: ldc           #103                // String PeriodicRecovery: removing all modules.
      14: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      17: iload_1
      18: ifeq          42
      21: aload_0
      22: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      25: dup
      26: astore_2
      27: monitorenter
      28: aload_0
      29: invokespecial #71                 // Method doScanningWait:()V
      32: aload_2
      33: monitorexit
      34: goto          42
      37: astore_3
      38: aload_2
      39: monitorexit
      40: aload_3
      41: athrow
      42: aload_0
      43: getfield      #5                  // Field _recoveryModules:Ljava/util/Vector;
      46: invokevirtual #104                // Method java/util/Vector.clear:()V
      49: return
    Exception table:
       from    to  target type
          28    34    37   any
          37    40    37   any

  public final java.util.Vector<com.arjuna.ats.arjuna.recovery.RecoveryModule> getModules();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _recoveryModules:Ljava/util/Vector;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #3                  // class java/util/Vector
      10: dup
      11: aload_0
      12: getfield      #5                  // Field _recoveryModules:Ljava/util/Vector;
      15: invokespecial #105                // Method java/util/Vector."<init>":(Ljava/util/Collection;)V
      18: aload_1
      19: monitorexit
      20: areturn
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
    Exception table:
       from    to  target type
           7    20    21   any
          21    24    21   any

  public com.arjuna.ats.internal.arjuna.recovery.Listener getListener();
    Code:
       0: aload_0
       1: getfield      #18                 // Field _listener:Lcom/arjuna/ats/internal/arjuna/recovery/Listener;
       4: areturn

  private com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery$Status getStatus();
    Code:
       0: aload_0
       1: getfield      #106                // Field _currentStatus:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
       4: areturn

  public com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery$Mode getMode();
    Code:
       0: aload_0
       1: getfield      #107                // Field _currentMode:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
       4: areturn

  private void setStatus(com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery$Status);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field _currentStatus:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
       5: return

  private void setMode(com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery$Mode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #107                // Field _currentMode:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
       5: return

  private void doBackoffWait();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
       4: aload_0
       5: getfield      #6                  // Field _backoffPeriod:I
       8: i2l
       9: ldc2_w        #108                // long 1000l
      12: lmul
      13: invokevirtual #110                // Method java/lang/Object.wait:(J)V
      16: goto          20
      19: astore_1
      20: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/InterruptedException

  private void doPeriodicWait();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
       4: aload_0
       5: getfield      #7                  // Field _recoveryPeriod:I
       8: i2l
       9: ldc2_w        #108                // long 1000l
      12: lmul
      13: invokevirtual #110                // Method java/lang/Object.wait:(J)V
      16: goto          20
      19: astore_1
      20: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/InterruptedException

  private void doSuspendedWait();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
       4: getstatic     #59                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.SUSPENDED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
       7: if_acmpne     24
      10: aload_0
      11: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      14: invokevirtual #52                 // Method java/lang/Object.wait:()V
      17: goto          0
      20: astore_1
      21: goto          0
      24: return
    Exception table:
       from    to  target type
          10    17    20   Class java/lang/InterruptedException

  private void doScanningWait();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method getStatus:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
       4: getstatic     #50                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.SCANNING:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
       7: if_acmpne     24
      10: aload_0
      11: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
      14: invokevirtual #52                 // Method java/lang/Object.wait:()V
      17: goto          0
      20: astore_1
      21: goto          0
      24: return
    Exception table:
       from    to  target type
          10    17    20   Class java/lang/InterruptedException

  private void doWorkInternal();
    Code:
       0: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
       6: ifeq          47
       9: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #93                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #111                // String Periodic recovery first pass at
      21: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #15                 // Field _theTimestamper:Ljava/text/SimpleDateFormat;
      28: new           #112                // class java/util/Date
      31: dup
      32: invokespecial #113                // Method java/util/Date."<init>":()V
      35: invokevirtual #114                // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      38: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      47: aload_0
      48: invokevirtual #115                // Method getModules:()Ljava/util/Vector;
      51: astore_1
      52: aload_1
      53: invokevirtual #116                // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      56: astore_2
      57: aload_2
      58: invokeinterface #117,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      63: ifeq          129
      66: aload_2
      67: invokeinterface #118,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      72: checkcast     #119                // class com/arjuna/ats/arjuna/recovery/RecoveryModule
      75: astore_3
      76: aload_0
      77: aload_3
      78: invokespecial #120                // Method switchClassLoader:(Lcom/arjuna/ats/arjuna/recovery/RecoveryModule;)Ljava/lang/ClassLoader;
      81: astore        4
      83: aload_3
      84: invokeinterface #121,  1          // InterfaceMethod com/arjuna/ats/arjuna/recovery/RecoveryModule.periodicWorkFirstPass:()V
      89: aload_0
      90: aload         4
      92: invokespecial #122                // Method restoreClassLoader:(Ljava/lang/ClassLoader;)V
      95: goto          109
      98: astore        5
     100: aload_0
     101: aload         4
     103: invokespecial #122                // Method restoreClassLoader:(Ljava/lang/ClassLoader;)V
     106: aload         5
     108: athrow
     109: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     112: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     115: ifeq          126
     118: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     121: ldc           #123                // String
     123: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     126: goto          57
     129: aload_0
     130: getfield      #10                 // Field _stateLock:Ljava/lang/Object;
     133: dup
     134: astore_3
     135: monitorenter
     136: aload_0
     137: invokespecial #124                // Method doBackoffWait:()V
     140: aload_0
     141: invokevirtual #44                 // Method getMode:()Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     144: getstatic     #45                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.TERMINATED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
     147: if_acmpne     170
     150: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     153: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     156: ifeq          167
     159: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     162: ldc           #125                // String PeriodicRecovery: scan TERMINATED at phase 1
     164: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     167: aload_3
     168: monitorexit
     169: return
     170: aload_3
     171: monitorexit
     172: goto          182
     175: astore        6
     177: aload_3
     178: monitorexit
     179: aload         6
     181: athrow
     182: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     185: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     188: ifeq          229
     191: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     194: new           #93                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #126                // String Periodic recovery second pass at
     203: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_0
     207: getfield      #15                 // Field _theTimestamper:Ljava/text/SimpleDateFormat;
     210: new           #112                // class java/util/Date
     213: dup
     214: invokespecial #113                // Method java/util/Date."<init>":()V
     217: invokevirtual #114                // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
     220: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     226: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     229: aload_1
     230: invokevirtual #116                // Method java/util/Vector.elements:()Ljava/util/Enumeration;
     233: astore_2
     234: aload_2
     235: invokeinterface #117,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     240: ifeq          306
     243: aload_2
     244: invokeinterface #118,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     249: checkcast     #119                // class com/arjuna/ats/arjuna/recovery/RecoveryModule
     252: astore_3
     253: aload_0
     254: aload_3
     255: invokespecial #120                // Method switchClassLoader:(Lcom/arjuna/ats/arjuna/recovery/RecoveryModule;)Ljava/lang/ClassLoader;
     258: astore        4
     260: aload_3
     261: invokeinterface #127,  1          // InterfaceMethod com/arjuna/ats/arjuna/recovery/RecoveryModule.periodicWorkSecondPass:()V
     266: aload_0
     267: aload         4
     269: invokespecial #122                // Method restoreClassLoader:(Ljava/lang/ClassLoader;)V
     272: goto          286
     275: astore        7
     277: aload_0
     278: aload         4
     280: invokespecial #122                // Method restoreClassLoader:(Ljava/lang/ClassLoader;)V
     283: aload         7
     285: athrow
     286: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     289: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     292: ifeq          303
     295: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     298: ldc           #123                // String
     300: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     303: goto          234
     306: return
    Exception table:
       from    to  target type
          83    89    98   any
          98   100    98   any
         136   169   175   any
         170   172   175   any
         175   179   175   any
         260   266   275   any
         275   277   275   any

  private void notifyWorker();
    Code:
       0: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
       6: ifeq          17
       9: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      12: ldc           #128                // String PeriodicRecovery: scan thread signals listener worker
      14: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #19                 // Field _workerService:Lcom/arjuna/ats/internal/arjuna/recovery/WorkerService;
      21: ifnull        31
      24: aload_0
      25: getfield      #19                 // Field _workerService:Lcom/arjuna/ats/internal/arjuna/recovery/WorkerService;
      28: invokevirtual #129                // Method com/arjuna/ats/internal/arjuna/recovery/WorkerService.notifyDone:()V
      31: aload_0
      32: iconst_0
      33: putfield      #11                 // Field _workerScanRequested:Z
      36: return

  private java.lang.ClassLoader switchClassLoader(com.arjuna.ats.arjuna.recovery.RecoveryModule);
    Code:
       0: invokestatic  #130                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_2
       4: aload_2
       5: invokevirtual #131                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       8: astore_3
       9: aload_2
      10: aload_1
      11: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #132                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      17: invokevirtual #133                // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      20: aload_3
      21: areturn

  private void restoreClassLoader(java.lang.ClassLoader);
    Code:
       0: invokestatic  #130                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_2
       4: aload_2
       5: aload_1
       6: invokevirtual #133                // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
       9: return

  private void loadModules();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _recoveryModules:Ljava/util/Vector;
       4: invokestatic  #68                 // Method com/arjuna/ats/arjuna/common/recoveryPropertyManager.getRecoveryEnvironmentBean:()Lcom/arjuna/ats/arjuna/common/RecoveryEnvironmentBean;
       7: invokevirtual #134                // Method com/arjuna/ats/arjuna/common/RecoveryEnvironmentBean.getRecoveryModules:()Ljava/util/List;
      10: invokevirtual #135                // Method java/util/Vector.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: return

  private void initialise();
    Code:
       0: aload_0
       1: getstatic     #83                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status.INACTIVE:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;
       4: invokespecial #77                 // Method setStatus:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Status;)V
       7: aload_0
       8: getstatic     #57                 // Field com/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode.ENABLED:Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;
      11: invokespecial #47                 // Method setMode:(Lcom/arjuna/ats/internal/arjuna/recovery/PeriodicRecovery$Mode;)V
      14: aload_0
      15: invokestatic  #68                 // Method com/arjuna/ats/arjuna/common/recoveryPropertyManager.getRecoveryEnvironmentBean:()Lcom/arjuna/ats/arjuna/common/RecoveryEnvironmentBean;
      18: invokevirtual #136                // Method com/arjuna/ats/arjuna/common/RecoveryEnvironmentBean.getPeriodicRecoveryPeriod:()I
      21: putfield      #7                  // Field _recoveryPeriod:I
      24: aload_0
      25: getfield      #7                  // Field _recoveryPeriod:I
      28: bipush        120
      30: if_icmpeq     75
      33: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      36: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      39: ifeq          75
      42: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      45: new           #93                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #138                // String com.arjuna.ats.arjuna.recovery.PeriodicRecovery: Recovery period set to
      54: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #7                  // Field _recoveryPeriod:I
      61: invokevirtual #139                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc           #140                // String  seconds
      66: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      75: aload_0
      76: invokestatic  #68                 // Method com/arjuna/ats/arjuna/common/recoveryPropertyManager.getRecoveryEnvironmentBean:()Lcom/arjuna/ats/arjuna/common/RecoveryEnvironmentBean;
      79: invokevirtual #141                // Method com/arjuna/ats/arjuna/common/RecoveryEnvironmentBean.getRecoveryBackoffPeriod:()I
      82: putfield      #6                  // Field _backoffPeriod:I
      85: aload_0
      86: getfield      #6                  // Field _backoffPeriod:I
      89: bipush        10
      91: if_icmpeq     136
      94: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
      97: invokevirtual #37                 // Method org/jboss/logging/Logger.isDebugEnabled:()Z
     100: ifeq          136
     103: getstatic     #36                 // Field com/arjuna/ats/arjuna/logging/tsLogger.logger:Lorg/jboss/logging/Logger;
     106: new           #93                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #142                // String PeriodicRecovery: Backoff period set to
     115: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_0
     119: getfield      #6                  // Field _backoffPeriod:I
     122: invokevirtual #139                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     125: ldc           #140                // String  seconds
     127: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokevirtual #39                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
     136: return

  static {};
    Code:
       0: return
}
