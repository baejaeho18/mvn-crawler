Compiled from "TransactionalDriver.java"
public class com.arjuna.ats.jdbc.TransactionalDriver implements java.sql.Driver {
  public static final java.lang.String arjunaDriver;

  public static final java.lang.String jdbc;

  public static final java.lang.String userName;

  public static final java.lang.String password;

  public static final java.lang.String dynamicClass;

  public static final java.lang.String createDb;

  public static final java.lang.String poolConnections;

  public static final java.lang.Object XADataSource;

  public com.arjuna.ats.jdbc.TransactionalDriver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
       7: invokevirtual #3                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      10: ifeq          21
      13: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
      16: ldc           #4                  // String TransactionalDriver.TransactionalDriver ()
      18: invokevirtual #5                  // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      21: return

  public java.sql.Connection connect(java.lang.String, java.util.Properties) throws java.sql.SQLException;
    Code:
       0: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #3                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          39
       9: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #6                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #8                  // String TransactionalDriver.connect (
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #10                 // String  )
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokevirtual #5                  // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      39: aload_1
      40: ldc           #13                 // String jdbc:arjuna:
      42: invokevirtual #14                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      45: ifne          50
      48: aconst_null
      49: areturn
      50: aload_1
      51: ldc           #13                 // String jdbc:arjuna:
      53: invokevirtual #15                 // Method java/lang/String.length:()I
      56: invokevirtual #16                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      59: aload_2
      60: invokestatic  #17                 // Method com/arjuna/ats/internal/jdbc/ConnectionManager.create:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
      63: areturn

  public boolean acceptsURL(java.lang.String) throws java.sql.SQLException;
    Code:
       0: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #3                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          39
       9: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #6                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #18                 // String TransactionalDriver.acceptsURL (
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #10                 // String  )
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokevirtual #5                  // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      39: aload_1
      40: ifnull        57
      43: aload_1
      44: ldc           #13                 // String jdbc:arjuna:
      46: invokevirtual #19                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      49: iconst_m1
      50: if_icmpne     55
      53: iconst_0
      54: ireturn
      55: iconst_1
      56: ireturn
      57: iconst_0
      58: ireturn

  public int getMajorVersion();
    Code:
       0: iconst_2
       1: ireturn

  public int getMinorVersion();
    Code:
       0: iconst_0
       1: ireturn

  public boolean jdbcCompliant();
    Code:
       0: iconst_1
       1: ireturn

  public java.sql.DriverPropertyInfo[] getPropertyInfo(java.lang.String, java.util.Properties) throws java.sql.SQLException;
    Code:
       0: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
       3: invokevirtual #3                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
       6: ifeq          39
       9: getstatic     #2                  // Field com/arjuna/ats/jdbc/logging/jdbcLogger.logger:Lorg/jboss/logging/Logger;
      12: new           #6                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #20                 // String TransactionalDriver.getPropertyInfo (
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #10                 // String  )
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokevirtual #5                  // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      39: aload_1
      40: ldc           #13                 // String jdbc:arjuna:
      42: invokevirtual #19                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      45: istore_3
      46: iload_3
      47: iconst_m1
      48: if_icmpne     53
      51: aconst_null
      52: areturn
      53: aload_1
      54: iload_3
      55: ldc           #13                 // String jdbc:arjuna:
      57: invokevirtual #15                 // Method java/lang/String.length:()I
      60: iadd
      61: invokevirtual #16                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      64: astore        4
      66: aload         4
      68: invokestatic  #21                 // Method java/sql/DriverManager.getDriver:(Ljava/lang/String;)Ljava/sql/Driver;
      71: astore        5
      73: aload         5
      75: ifnull        89
      78: aload         5
      80: aload         4
      82: aload_2
      83: invokeinterface #22,  3           // InterfaceMethod java/sql/Driver.getPropertyInfo:(Ljava/lang/String;Ljava/util/Properties;)[Ljava/sql/DriverPropertyInfo;
      88: areturn
      89: aconst_null
      90: areturn

  public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException;
    Code:
       0: new           #23                 // class java/sql/SQLFeatureNotSupportedException
       3: dup
       4: invokespecial #24                 // Method java/sql/SQLFeatureNotSupportedException."<init>":()V
       7: athrow

  static {};
    Code:
       0: ldc           #25                 // String XADATASOURCE
       2: putstatic     #26                 // Field XADataSource:Ljava/lang/Object;
       5: new           #12                 // class com/arjuna/ats/jdbc/TransactionalDriver
       8: dup
       9: invokespecial #27                 // Method "<init>":()V
      12: invokestatic  #28                 // Method java/sql/DriverManager.registerDriver:(Ljava/sql/Driver;)V
      15: goto          28
      18: astore_0
      19: new           #30                 // class java/lang/ExceptionInInitializerError
      22: dup
      23: aload_0
      24: invokespecial #31                 // Method java/lang/ExceptionInInitializerError."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: return
    Exception table:
       from    to  target type
           5    15    18   Class java/lang/Exception
}
