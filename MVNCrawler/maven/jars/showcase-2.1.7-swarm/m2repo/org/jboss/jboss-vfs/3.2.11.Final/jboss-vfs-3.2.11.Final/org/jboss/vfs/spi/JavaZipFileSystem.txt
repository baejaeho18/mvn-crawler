Compiled from "JavaZipFileSystem.java"
public final class org.jboss.vfs.spi.JavaZipFileSystem implements org.jboss.vfs.spi.FileSystem {
  private final java.util.jar.JarFile zipFile;

  private final java.io.File archiveFile;

  private final long zipTime;

  private final org.jboss.vfs.spi.JavaZipFileSystem$ZipNode rootNode;

  private final org.jboss.vfs.TempDir tempDir;

  private final java.io.File contentsDir;

  public org.jboss.vfs.spi.JavaZipFileSystem(java.lang.String, java.io.InputStream, org.jboss.vfs.TempDir) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #2                  // Method org/jboss/vfs/TempDir.createFile:(Ljava/lang/String;Ljava/io/InputStream;)Ljava/io/File;
       7: aload_3
       8: invokespecial #3                  // Method "<init>":(Ljava/io/File;Lorg/jboss/vfs/TempDir;)V
      11: return

  public org.jboss.vfs.spi.JavaZipFileSystem(java.io.File, org.jboss.vfs.TempDir) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #5                  // Method java/io/File.lastModified:()J
       9: putfield      #6                  // Field zipTime:J
      12: aload_0
      13: new           #7                  // class java/util/jar/JarFile
      16: dup
      17: aload_1
      18: invokespecial #8                  // Method java/util/jar/JarFile."<init>":(Ljava/io/File;)V
      21: dup
      22: astore_3
      23: putfield      #1                  // Field zipFile:Ljava/util/jar/JarFile;
      26: aload_0
      27: aload_1
      28: putfield      #9                  // Field archiveFile:Ljava/io/File;
      31: aload_0
      32: aload_2
      33: putfield      #10                 // Field tempDir:Lorg/jboss/vfs/TempDir;
      36: aload_3
      37: invokevirtual #11                 // Method java/util/jar/JarFile.entries:()Ljava/util/Enumeration;
      40: astore        4
      42: new           #12                 // class org/jboss/vfs/spi/JavaZipFileSystem$ZipNode
      45: dup
      46: new           #13                 // class java/util/HashMap
      49: dup
      50: invokespecial #14                 // Method java/util/HashMap."<init>":()V
      53: ldc           #15                 // String
      55: aconst_null
      56: aconst_null
      57: invokespecial #16                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode."<init>":(Ljava/util/Map;Ljava/lang/String;Ljava/util/jar/JarEntry;Lorg/jboss/vfs/spi/JavaZipFileSystem$1;)V
      60: astore        5
      62: aload         4
      64: invokestatic  #17                 // Method iter:(Ljava/util/Enumeration;)Ljava/lang/Iterable;
      67: invokeinterface #18,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      72: astore        6
      74: aload         6
      76: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          278
      84: aload         6
      86: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #21                 // class java/util/jar/JarEntry
      94: astore        7
      96: aload         7
      98: invokevirtual #22                 // Method java/util/jar/JarEntry.getName:()Ljava/lang/String;
     101: astore        8
     103: aload         7
     105: invokevirtual #23                 // Method java/util/jar/JarEntry.isDirectory:()Z
     108: istore        9
     110: aload         8
     112: invokestatic  #24                 // Method org/jboss/vfs/util/PathTokenizer.getTokens:(Ljava/lang/String;)Ljava/util/List;
     115: astore        10
     117: aload         5
     119: astore        11
     121: aload         10
     123: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     128: astore        12
     130: aload         12
     132: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     137: ifeq          275
     140: aload         12
     142: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #26                 // class java/lang/String
     150: astore        13
     152: aload         13
     154: invokestatic  #27                 // Method org/jboss/vfs/util/PathTokenizer.isCurrentToken:(Ljava/lang/String;)Z
     157: ifne          74
     160: aload         13
     162: invokestatic  #28                 // Method org/jboss/vfs/util/PathTokenizer.isReverseToken:(Ljava/lang/String;)Z
     165: ifeq          171
     168: goto          74
     171: aload         11
     173: invokestatic  #29                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$100:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/Map;
     176: astore        14
     178: aload         14
     180: ifnonnull     186
     183: goto          74
     186: aload         14
     188: aload         13
     190: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     195: checkcast     #12                 // class org/jboss/vfs/spi/JavaZipFileSystem$ZipNode
     198: astore        15
     200: aload         15
     202: ifnonnull     268
     205: aload         12
     207: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     212: ifne          220
     215: iload         9
     217: ifeq          241
     220: new           #12                 // class org/jboss/vfs/spi/JavaZipFileSystem$ZipNode
     223: dup
     224: new           #13                 // class java/util/HashMap
     227: dup
     228: invokespecial #14                 // Method java/util/HashMap."<init>":()V
     231: aload         13
     233: aconst_null
     234: aconst_null
     235: invokespecial #16                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode."<init>":(Ljava/util/Map;Ljava/lang/String;Ljava/util/jar/JarEntry;Lorg/jboss/vfs/spi/JavaZipFileSystem$1;)V
     238: goto          254
     241: new           #12                 // class org/jboss/vfs/spi/JavaZipFileSystem$ZipNode
     244: dup
     245: aconst_null
     246: aload         13
     248: aload         7
     250: aconst_null
     251: invokespecial #16                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode."<init>":(Ljava/util/Map;Ljava/lang/String;Ljava/util/jar/JarEntry;Lorg/jboss/vfs/spi/JavaZipFileSystem$1;)V
     254: astore        15
     256: aload         14
     258: aload         13
     260: aload         15
     262: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     267: pop
     268: aload         15
     270: astore        11
     272: goto          130
     275: goto          74
     278: aload_0
     279: aload         5
     281: putfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
     284: aload_0
     285: aload_2
     286: ldc           #33                 // String contents
     288: invokevirtual #34                 // Method org/jboss/vfs/TempDir.getFile:(Ljava/lang/String;)Ljava/io/File;
     291: putfield      #35                 // Field contentsDir:Ljava/io/File;
     294: aload_0
     295: getfield      #35                 // Field contentsDir:Ljava/io/File;
     298: invokevirtual #36                 // Method java/io/File.mkdir:()Z
     301: pop
     302: getstatic     #37                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
     305: ldc           #38                 // String Created zip filesystem for file %s in temp dir %s
     307: aload_1
     308: aload_2
     309: invokeinterface #39,  4           // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     314: return

  private static <T> java.lang.Iterable<T> iter(java.util.Enumeration<T>);
    Code:
       0: new           #40                 // class org/jboss/vfs/spi/EnumerationIterable
       3: dup
       4: aload_0
       5: invokespecial #41                 // Method org/jboss/vfs/spi/EnumerationIterable."<init>":(Ljava/util/Enumeration;)V
       8: areturn

  public java.io.File getFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #42                 // Method getExistingZipNode:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       6: astore_3
       7: aload_3
       8: invokestatic  #43                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$200:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/io/File;
      11: astore        4
      13: aload         4
      15: ifnull        21
      18: aload         4
      20: areturn
      21: aload_3
      22: dup
      23: astore        5
      25: monitorenter
      26: aload_3
      27: invokestatic  #43                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$200:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/io/File;
      30: astore        4
      32: aload         4
      34: ifnull        43
      37: aload         4
      39: aload         5
      41: monitorexit
      42: areturn
      43: aload_3
      44: invokestatic  #44                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$300:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/jar/JarEntry;
      47: astore        6
      49: aload_2
      50: aload_1
      51: invokevirtual #45                 // Method org/jboss/vfs/VirtualFile.getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
      54: astore        7
      56: aload_0
      57: aload_0
      58: getfield      #35                 // Field contentsDir:Ljava/io/File;
      61: aload         7
      63: invokespecial #46                 // Method buildFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      66: astore        4
      68: aload         6
      70: ifnonnull     82
      73: aload         4
      75: invokevirtual #36                 // Method java/io/File.mkdir:()Z
      78: pop
      79: goto          110
      82: aload_0
      83: getfield      #1                  // Field zipFile:Ljava/util/jar/JarFile;
      86: aload         6
      88: invokevirtual #47                 // Method java/util/jar/JarFile.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
      91: new           #48                 // class java/io/BufferedOutputStream
      94: dup
      95: new           #49                 // class java/io/FileOutputStream
      98: dup
      99: aload         4
     101: invokespecial #50                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
     104: invokespecial #51                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
     107: invokestatic  #52                 // Method org/jboss/vfs/VFSUtils.copyStreamAndClose:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
     110: aload_3
     111: aload         4
     113: invokestatic  #53                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$202:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;Ljava/io/File;)Ljava/io/File;
     116: pop
     117: aload         4
     119: aload         5
     121: monitorexit
     122: areturn
     123: astore        8
     125: aload         5
     127: monitorexit
     128: aload         8
     130: athrow
    Exception table:
       from    to  target type
          26    42   123   any
          43   122   123   any
         123   128   123   any

  public java.io.InputStream openInputStream(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #42                 // Method getExistingZipNode:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       6: astore_3
       7: aload_3
       8: invokestatic  #43                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$200:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/io/File;
      11: astore        4
      13: aload         4
      15: ifnull        28
      18: new           #54                 // class java/io/FileInputStream
      21: dup
      22: aload         4
      24: invokespecial #55                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      27: areturn
      28: aload_0
      29: getfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
      32: aload_3
      33: if_acmpne     48
      36: new           #54                 // class java/io/FileInputStream
      39: dup
      40: aload_0
      41: getfield      #9                  // Field archiveFile:Ljava/io/File;
      44: invokespecial #55                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      47: areturn
      48: aload_3
      49: invokestatic  #44                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$300:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/jar/JarEntry;
      52: astore        5
      54: aload         5
      56: ifnonnull     72
      59: getstatic     #56                 // Field org/jboss/vfs/VFSMessages.MESSAGES:Lorg/jboss/vfs/VFSMessages;
      62: aload_2
      63: invokevirtual #57                 // Method org/jboss/vfs/VirtualFile.getPathName:()Ljava/lang/String;
      66: invokeinterface #58,  2           // InterfaceMethod org/jboss/vfs/VFSMessages.notAFile:(Ljava/lang/String;)Ljava/io/IOException;
      71: athrow
      72: aload_0
      73: getfield      #1                  // Field zipFile:Ljava/util/jar/JarFile;
      76: aload         5
      78: invokevirtual #47                 // Method java/util/jar/JarFile.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
      81: areturn

  public boolean delete(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #59                 // Method getZipNode:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_3
      14: invokestatic  #43                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$200:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/io/File;
      17: astore        4
      19: aload         4
      21: ifnull        36
      24: aload         4
      26: invokevirtual #60                 // Method java/io/File.delete:()Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public long getSize(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #59                 // Method getZipNode:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: lconst_0
      12: lreturn
      13: aload_3
      14: invokestatic  #43                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$200:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/io/File;
      17: astore        4
      19: aload_3
      20: invokestatic  #44                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$300:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/jar/JarEntry;
      23: astore        5
      25: aload_3
      26: aload_0
      27: getfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
      30: if_acmpne     41
      33: aload_0
      34: getfield      #9                  // Field archiveFile:Ljava/io/File;
      37: invokevirtual #61                 // Method java/io/File.length:()J
      40: lreturn
      41: aload         4
      43: ifnull        54
      46: aload         4
      48: invokevirtual #61                 // Method java/io/File.length:()J
      51: goto          68
      54: aload         5
      56: ifnonnull     63
      59: lconst_0
      60: goto          68
      63: aload         5
      65: invokevirtual #62                 // Method java/util/jar/JarEntry.getSize:()J
      68: lreturn

  public long getLastModified(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #59                 // Method getZipNode:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: lconst_0
      12: lreturn
      13: aload_3
      14: invokestatic  #43                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$200:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/io/File;
      17: astore        4
      19: aload_3
      20: invokestatic  #44                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$300:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/jar/JarEntry;
      23: astore        5
      25: aload         4
      27: ifnull        38
      30: aload         4
      32: invokevirtual #5                  // Method java/io/File.lastModified:()J
      35: goto          55
      38: aload         5
      40: ifnonnull     50
      43: aload_0
      44: getfield      #6                  // Field zipTime:J
      47: goto          55
      50: aload         5
      52: invokevirtual #63                 // Method java/util/jar/JarEntry.getTime:()J
      55: lreturn

  public boolean exists(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       4: aload_1
       5: aload_2
       6: invokestatic  #64                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$400:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       9: astore_3
      10: aload_3
      11: ifnonnull     16
      14: iconst_0
      15: ireturn
      16: aload_3
      17: invokestatic  #43                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$200:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/io/File;
      20: astore        4
      22: aload         4
      24: ifnull        35
      27: aload         4
      29: invokevirtual #65                 // Method java/io/File.exists:()Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public boolean isFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       4: aload_1
       5: aload_2
       6: invokestatic  #64                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$400:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       9: astore_3
      10: aload_3
      11: ifnull        25
      14: aload_3
      15: invokestatic  #44                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$300:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/jar/JarEntry;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean isDirectory(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       4: aload_1
       5: aload_2
       6: invokestatic  #64                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$400:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       9: astore_3
      10: aload_3
      11: ifnull        25
      14: aload_3
      15: invokestatic  #44                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$300:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/jar/JarEntry;
      18: ifnonnull     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.util.List<java.lang.String> getDirectoryEntries(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #59                 // Method getZipNode:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       6: astore_3
       7: aload_3
       8: ifnonnull     15
      11: invokestatic  #66                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      14: areturn
      15: aload_3
      16: invokestatic  #29                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$100:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/Map;
      19: astore        4
      21: aload         4
      23: ifnonnull     30
      26: invokestatic  #66                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      29: areturn
      30: aload         4
      32: invokeinterface #67,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      37: astore        5
      39: new           #68                 // class java/util/ArrayList
      42: dup
      43: aload         5
      45: invokeinterface #69,  1           // InterfaceMethod java/util/Collection.size:()I
      50: invokespecial #70                 // Method java/util/ArrayList."<init>":(I)V
      53: astore        6
      55: aload         5
      57: invokeinterface #71,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      62: astore        7
      64: aload         7
      66: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          102
      74: aload         7
      76: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #12                 // class org/jboss/vfs/spi/JavaZipFileSystem$ZipNode
      84: astore        8
      86: aload         6
      88: aload         8
      90: invokestatic  #72                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$500:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/lang/String;
      93: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      98: pop
      99: goto          64
     102: aload         6
     104: areturn

  public java.security.CodeSigner[] getCodeSigners(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #59                 // Method getZipNode:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       6: astore_3
       7: aload_3
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_3
      14: invokestatic  #44                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$300:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;)Ljava/util/jar/JarEntry;
      17: astore        4
      19: aload         4
      21: invokevirtual #74                 // Method java/util/jar/JarEntry.getCodeSigners:()[Ljava/security/CodeSigner;
      24: areturn

  private org.jboss.vfs.spi.JavaZipFileSystem$ZipNode getZipNode(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       4: aload_1
       5: aload_2
       6: invokestatic  #64                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$400:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       9: areturn

  private org.jboss.vfs.spi.JavaZipFileSystem$ZipNode getExistingZipNode(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field rootNode:Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       4: aload_1
       5: aload_2
       6: invokestatic  #64                 // Method org/jboss/vfs/spi/JavaZipFileSystem$ZipNode.access$400:(Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/spi/JavaZipFileSystem$ZipNode;
       9: astore_3
      10: aload_3
      11: ifnonnull     26
      14: new           #75                 // class java/io/FileNotFoundException
      17: dup
      18: aload_2
      19: invokevirtual #57                 // Method org/jboss/vfs/VirtualFile.getPathName:()Ljava/lang/String;
      22: invokespecial #76                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_3
      27: areturn

  public boolean isReadOnly();
    Code:
       0: iconst_1
       1: ireturn

  public java.io.File getMountSource();
    Code:
       0: aload_0
       1: getfield      #9                  // Field archiveFile:Ljava/io/File;
       4: areturn

  public java.net.URI getRootURI() throws java.net.URISyntaxException;
    Code:
       0: new           #77                 // class java/net/URI
       3: dup
       4: ldc           #78                 // String jar
       6: new           #79                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
      13: aload_0
      14: getfield      #9                  // Field archiveFile:Ljava/io/File;
      17: invokevirtual #81                 // Method java/io/File.toURI:()Ljava/net/URI;
      20: invokevirtual #82                 // Method java/net/URI.toString:()Ljava/lang/String;
      23: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #84                 // String !/
      28: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: aconst_null
      35: invokespecial #86                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      38: areturn

  public void close() throws java.io.IOException;
    Code:
       0: getstatic     #37                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
       3: ldc           #87                 // String Closing zip filesystem %s
       5: aload_0
       6: invokeinterface #88,  3           // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      11: new           #89                 // class org/jboss/vfs/spi/JavaZipFileSystem$1
      14: dup
      15: aload_0
      16: invokespecial #90                 // Method org/jboss/vfs/spi/JavaZipFileSystem$1."<init>":(Lorg/jboss/vfs/spi/JavaZipFileSystem;)V
      19: invokestatic  #91                 // Method org/jboss/vfs/VFSUtils.safeClose:(Ljava/io/Closeable;)V
      22: aload_0
      23: getfield      #10                 // Field tempDir:Lorg/jboss/vfs/TempDir;
      26: invokevirtual #92                 // Method org/jboss/vfs/TempDir.close:()V
      29: return

  private java.io.File buildFile(java.io.File, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #24                 // Method org/jboss/vfs/util/PathTokenizer.getTokens:(Ljava/lang/String;)Ljava/util/List;
       4: astore_3
       5: aload_1
       6: astore        4
       8: aload_3
       9: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        5
      16: aload         5
      18: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          54
      26: aload         5
      28: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #26                 // class java/lang/String
      36: astore        6
      38: new           #94                 // class java/io/File
      41: dup
      42: aload         4
      44: aload         6
      46: invokespecial #95                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      49: astore        4
      51: goto          16
      54: aload         4
      56: invokevirtual #96                 // Method java/io/File.getParentFile:()Ljava/io/File;
      59: invokevirtual #97                 // Method java/io/File.mkdirs:()Z
      62: pop
      63: aload         4
      65: areturn

  static java.util.jar.JarFile access$600(org.jboss.vfs.spi.JavaZipFileSystem);
    Code:
       0: aload_0
       1: getfield      #1                  // Field zipFile:Ljava/util/jar/JarFile;
       4: areturn
}
