Compiled from "VirtualFileAssembly.java"
public class org.jboss.vfs.VirtualFileAssembly implements java.io.Closeable {
  private static final java.util.Random RANDOM_NUM_GEN;

  private final org.jboss.vfs.VirtualFileAssembly$AssemblyNode rootNode;

  private final java.util.List<java.io.Closeable> mountHandles;

  private final org.jboss.vfs.VirtualFile mountRoot;

  private org.jboss.vfs.TempFileProvider tempFileProvider;

  public org.jboss.vfs.VirtualFileAssembly();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jboss/vfs/VirtualFileAssembly$AssemblyNode
       8: dup
       9: ldc           #3                  // String
      11: invokespecial #4                  // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode."<init>":(Ljava/lang/String;)V
      14: putfield      #5                  // Field rootNode:Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      17: aload_0
      18: new           #6                  // class java/util/concurrent/CopyOnWriteArrayList
      21: dup
      22: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      25: putfield      #8                  // Field mountHandles:Ljava/util/List;
      28: aload_0
      29: ldc           #9                  // String assembly-mounts
      31: invokestatic  #10                 // Method org/jboss/vfs/VFS.getChild:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFile;
      34: aload_0
      35: invokespecial #11                 // Method getAssemblyId:()Ljava/lang/String;
      38: invokevirtual #12                 // Method org/jboss/vfs/VirtualFile.getChild:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFile;
      41: putfield      #13                 // Field mountRoot:Lorg/jboss/vfs/VirtualFile;
      44: return

  public void add(org.jboss.vfs.VirtualFile);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/jboss/vfs/VirtualFile.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #5                  // Field rootNode:Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
       9: aload_2
      10: invokevirtual #15                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.findOrBuild:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      13: astore_3
      14: aload_3
      15: aload_1
      16: invokestatic  #16                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.access$000:(Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;Lorg/jboss/vfs/VirtualFile;)V
      19: return

  public void add(java.lang.String, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #5                  // Field rootNode:Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
       4: aload_1
       5: invokevirtual #15                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.findOrBuild:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokestatic  #16                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.access$000:(Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;Lorg/jboss/vfs/VirtualFile;)V
      14: return

  public void add(java.lang.String, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field mountRoot:Lorg/jboss/vfs/VirtualFile;
       4: aload_1
       5: invokevirtual #12                 // Method org/jboss/vfs/VirtualFile.getChild:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFile;
       8: astore_3
       9: aload_2
      10: aload_3
      11: invokestatic  #17                 // Method org/jboss/vfs/VFS.mountReal:(Ljava/io/File;Lorg/jboss/vfs/VirtualFile;)Ljava/io/Closeable;
      14: astore        4
      16: aload_0
      17: getfield      #8                  // Field mountHandles:Ljava/util/List;
      20: aload         4
      22: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: aload_1
      30: aload_3
      31: invokevirtual #19                 // Method add:(Ljava/lang/String;Lorg/jboss/vfs/VirtualFile;)V
      34: return

  public void addZip(java.lang.String, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field mountRoot:Lorg/jboss/vfs/VirtualFile;
       4: aload_1
       5: invokevirtual #12                 // Method org/jboss/vfs/VirtualFile.getChild:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFile;
       8: astore_3
       9: aload_2
      10: aload_3
      11: aload_0
      12: invokespecial #20                 // Method getTempFileProvider:()Lorg/jboss/vfs/TempFileProvider;
      15: invokestatic  #21                 // Method org/jboss/vfs/VFS.mountZip:(Ljava/io/File;Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/TempFileProvider;)Ljava/io/Closeable;
      18: astore        4
      20: aload_0
      21: getfield      #8                  // Field mountHandles:Ljava/util/List;
      24: aload         4
      26: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_0
      33: aload_1
      34: aload_3
      35: invokevirtual #19                 // Method add:(Ljava/lang/String;Lorg/jboss/vfs/VirtualFile;)V
      38: return

  public org.jboss.vfs.VirtualFile getFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #22                 // Method org/jboss/vfs/VirtualFile.getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
       5: astore_3
       6: aload_0
       7: getfield      #5                  // Field rootNode:Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      10: new           #23                 // class org/jboss/vfs/VirtualFileAssembly$Path
      13: dup
      14: aload_3
      15: aconst_null
      16: invokespecial #24                 // Method org/jboss/vfs/VirtualFileAssembly$Path."<init>":(Ljava/lang/String;Lorg/jboss/vfs/VirtualFileAssembly$1;)V
      19: aload_1
      20: invokevirtual #25                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.getFile:(Lorg/jboss/vfs/VirtualFileAssembly$Path;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
      23: areturn

  public java.util.List<java.lang.String> getChildNames(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: new           #26                 // class java/util/LinkedList
       3: dup
       4: invokespecial #27                 // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aconst_null
       9: astore        4
      11: aload_1
      12: aload_2
      13: invokevirtual #28                 // Method org/jboss/vfs/VirtualFile.equals:(Lorg/jboss/vfs/VirtualFile;)Z
      16: ifeq          28
      19: aload_0
      20: getfield      #5                  // Field rootNode:Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      23: astore        4
      25: goto          42
      28: aload_0
      29: getfield      #5                  // Field rootNode:Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      32: aload_2
      33: aload_1
      34: invokevirtual #22                 // Method org/jboss/vfs/VirtualFile.getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
      37: invokevirtual #29                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.find:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      40: astore        4
      42: aload         4
      44: ifnull        101
      47: aload         4
      49: invokestatic  #30                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.access$200:(Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;)Ljava/util/Map;
      52: invokeinterface #31,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      57: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      62: astore        5
      64: aload         5
      66: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          101
      74: aload         5
      76: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #2                  // class org/jboss/vfs/VirtualFileAssembly$AssemblyNode
      84: astore        6
      86: aload_3
      87: aload         6
      89: invokestatic  #35                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.access$300:(Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;)Ljava/lang/String;
      92: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: goto          64
     101: aload_3
     102: areturn

  public boolean contains(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #22                 // Method org/jboss/vfs/VirtualFile.getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
       5: astore_3
       6: aload_0
       7: getfield      #5                  // Field rootNode:Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      10: aload_3
      11: invokevirtual #29                 // Method org/jboss/vfs/VirtualFileAssembly$AssemblyNode.find:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFileAssembly$AssemblyNode;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mountHandles:Ljava/util/List;
       4: invokestatic  #36                 // Method org/jboss/vfs/VFSUtils.safeClose:(Ljava/lang/Iterable;)V
       7: return

  private org.jboss.vfs.TempFileProvider getTempFileProvider() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field tempFileProvider:Lorg/jboss/vfs/TempFileProvider;
       4: ifnonnull     19
       7: aload_0
       8: ldc           #38                 // String temp
      10: invokestatic  #39                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:()Ljava/util/concurrent/ScheduledExecutorService;
      13: invokestatic  #40                 // Method org/jboss/vfs/TempFileProvider.create:(Ljava/lang/String;Ljava/util/concurrent/ScheduledExecutorService;)Lorg/jboss/vfs/TempFileProvider;
      16: putfield      #37                 // Field tempFileProvider:Lorg/jboss/vfs/TempFileProvider;
      19: aload_0
      20: getfield      #37                 // Field tempFileProvider:Lorg/jboss/vfs/TempFileProvider;
      23: areturn

  private java.lang.String getAssemblyId();
    Code:
       0: getstatic     #41                 // Field RANDOM_NUM_GEN:Ljava/util/Random;
       3: invokevirtual #42                 // Method java/util/Random.nextLong:()J
       6: invokestatic  #43                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: new           #44                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #45                 // Method java/security/SecureRandom."<init>":()V
       7: putstatic     #41                 // Field RANDOM_NUM_GEN:Ljava/util/Random;
      10: return
}
