Compiled from "VirtualFile.java"
public final class org.jboss.vfs.VirtualFile implements java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.String name;

  private final java.lang.String lcname;

  private final org.jboss.vfs.VirtualFile parent;

  private final int hashCode;

  private java.lang.String pathName;

  org.jboss.vfs.VirtualFile(java.lang.String, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      14: putfield      #4                  // Field lcname:Ljava/lang/String;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      22: aload_2
      23: ifnonnull     30
      26: iconst_1
      27: goto          34
      30: aload_2
      31: invokevirtual #6                  // Method hashCode:()I
      34: istore_3
      35: bipush        31
      37: iload_3
      38: imul
      39: aload_1
      40: invokevirtual #7                  // Method java/lang/String.hashCode:()I
      43: iadd
      44: istore_3
      45: aload_0
      46: iload_3
      47: putfield      #8                  // Field hashCode:I
      50: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getLowerCaseName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lcname:Ljava/lang/String;
       4: areturn

  public java.lang.String getPathName();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #9                  // Method getPathName:(Z)Ljava/lang/String;
       5: areturn

  public java.lang.String getPathNameRelativeTo(org.jboss.vfs.VirtualFile) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: sipush        160
       7: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(I)V
      10: astore_2
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokespecial #12                 // Method getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;Ljava/lang/StringBuilder;)V
      17: aload_2
      18: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  private void getPathNameRelativeTo(org.jboss.vfs.VirtualFile, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
       4: ifnonnull     17
       7: getstatic     #14                 // Field org/jboss/vfs/VFSMessages.MESSAGES:Lorg/jboss/vfs/VFSMessages;
      10: aload_1
      11: invokeinterface #15,  2           // InterfaceMethod org/jboss/vfs/VFSMessages.parentIsNotAncestor:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/IllegalArgumentException;
      16: athrow
      17: aload_0
      18: aload_1
      19: invokevirtual #16                 // Method equals:(Lorg/jboss/vfs/VirtualFile;)Z
      22: ifeq          26
      25: return
      26: aload_0
      27: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      30: aload_1
      31: invokevirtual #16                 // Method equals:(Lorg/jboss/vfs/VirtualFile;)Z
      34: ifne          53
      37: aload_0
      38: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      41: aload_1
      42: aload_2
      43: invokespecial #12                 // Method getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;Ljava/lang/StringBuilder;)V
      46: aload_2
      47: bipush        47
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      52: pop
      53: aload_2
      54: aload_0
      55: getfield      #2                  // Field name:Ljava/lang/String;
      58: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: return

  java.lang.String getPathName(boolean);
    Code:
       0: aload_0
       1: getfield      #19                 // Field pathName:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #19                 // Field pathName:Ljava/lang/String;
      11: invokevirtual #20                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          120
      17: aload_0
      18: invokevirtual #21                 // Method getParentFiles:()[Lorg/jboss/vfs/VirtualFile;
      21: astore_2
      22: new           #10                 // class java/lang/StringBuilder
      25: dup
      26: aload_2
      27: arraylength
      28: bipush        30
      30: imul
      31: bipush        50
      33: iadd
      34: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(I)V
      37: astore_3
      38: aload_2
      39: arraylength
      40: iconst_1
      41: isub
      42: istore        4
      44: iload         4
      46: iconst_m1
      47: if_icmple     112
      50: aload_2
      51: iload         4
      53: aaload
      54: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      57: astore        5
      59: aload         5
      61: ifnonnull     79
      64: aload_3
      65: aload_2
      66: iload         4
      68: aaload
      69: getfield      #2                  // Field name:Ljava/lang/String;
      72: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: goto          106
      79: aload         5
      81: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      84: ifnull        94
      87: aload_3
      88: bipush        47
      90: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      93: pop
      94: aload_3
      95: aload_2
      96: iload         4
      98: aaload
      99: getfield      #2                  // Field name:Ljava/lang/String;
     102: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: pop
     106: iinc          4, -1
     109: goto          44
     112: aload_0
     113: aload_3
     114: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: putfield      #19                 // Field pathName:Ljava/lang/String;
     120: iload_1
     121: ifeq          143
     124: aload_0
     125: invokevirtual #22                 // Method isDirectory:()Z
     128: ifeq          143
     131: aload_0
     132: getfield      #19                 // Field pathName:Ljava/lang/String;
     135: ldc           #23                 // String /
     137: invokevirtual #24                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     140: goto          147
     143: aload_0
     144: getfield      #19                 // Field pathName:Ljava/lang/String;
     147: areturn

  public long getLastModified();
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #28                 // String read
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #34,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.getLastModified:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)J
      44: lreturn

  public long getSize();
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #28                 // String read
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #35,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.getSize:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)J
      44: lreturn

  public boolean exists();
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #28                 // String read
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #36,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.exists:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Z
      44: ireturn

  public boolean isRoot();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isLeaf();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isFile:()Z
       4: ireturn

  public boolean isFile();
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #28                 // String read
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #38,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.isFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Z
      44: ireturn

  public boolean isDirectory();
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #28                 // String read
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #39,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.isDirectory:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Z
      44: ireturn

  public java.io.InputStream openStream() throws java.io.IOException;
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #28                 // String read
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokevirtual #22                 // Method isDirectory:()Z
      29: ifeq          41
      32: new           #40                 // class org/jboss/vfs/VirtualJarInputStream
      35: dup
      36: aload_0
      37: invokespecial #41                 // Method org/jboss/vfs/VirtualJarInputStream."<init>":(Lorg/jboss/vfs/VirtualFile;)V
      40: areturn
      41: aload_0
      42: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      45: astore_2
      46: aload_2
      47: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      50: aload_2
      51: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      54: aload_0
      55: invokeinterface #42,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.openInputStream:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/InputStream;
      60: areturn

  public boolean delete();
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #43                 // String delete
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #44,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.delete:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Z
      44: ireturn

  public java.io.File getPhysicalFile() throws java.io.IOException;
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #45                 // String getfile
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #46,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
      44: areturn

  public org.jboss.vfs.VirtualFile getParent();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
       4: areturn

  public org.jboss.vfs.VirtualFile[] getParentFiles();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #47                 // Method getParentFiles:(I)[Lorg/jboss/vfs/VirtualFile;
       5: areturn

  public java.util.List<org.jboss.vfs.VirtualFile> getParentFileList();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getParentFiles:()[Lorg/jboss/vfs/VirtualFile;
       4: invokestatic  #48                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  private org.jboss.vfs.VirtualFile[] getParentFiles(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
       4: ifnonnull     17
       7: iload_1
       8: iconst_1
       9: iadd
      10: anewarray     #49                 // class org/jboss/vfs/VirtualFile
      13: astore_2
      14: goto          28
      17: aload_0
      18: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      21: iload_1
      22: iconst_1
      23: iadd
      24: invokespecial #47                 // Method getParentFiles:(I)[Lorg/jboss/vfs/VirtualFile;
      27: astore_2
      28: aload_2
      29: iload_1
      30: aload_0
      31: aastore
      32: aload_2
      33: areturn

  public java.util.List<org.jboss.vfs.VirtualFile> getChildren();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method isDirectory:()Z
       4: ifne          11
       7: invokestatic  #50                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      15: astore_1
      16: aload_0
      17: invokestatic  #51                 // Method org/jboss/vfs/VFS.getSubmounts:(Lorg/jboss/vfs/VirtualFile;)Ljava/util/Set;
      20: astore_2
      21: aload_1
      22: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      25: aload_1
      26: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      29: aload_0
      30: invokeinterface #52,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.getDirectoryEntries:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/util/List;
      35: astore_3
      36: new           #53                 // class java/util/ArrayList
      39: dup
      40: aload_3
      41: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      46: aload_2
      47: invokeinterface #55,  1           // InterfaceMethod java/util/Set.size:()I
      52: iadd
      53: invokespecial #56                 // Method java/util/ArrayList."<init>":(I)V
      56: astore        4
      58: aload_3
      59: invokeinterface #57,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      64: astore        5
      66: aload         5
      68: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          122
      76: aload         5
      78: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #60                 // class java/lang/String
      86: astore        6
      88: new           #49                 // class org/jboss/vfs/VirtualFile
      91: dup
      92: aload         6
      94: aload_0
      95: invokespecial #61                 // Method "<init>":(Ljava/lang/String;Lorg/jboss/vfs/VirtualFile;)V
      98: astore        7
     100: aload         4
     102: aload         7
     104: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: aload_2
     111: aload         6
     113: invokeinterface #63,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     118: pop
     119: goto          66
     122: aload_2
     123: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     128: astore        5
     130: aload         5
     132: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     137: ifeq          177
     140: aload         5
     142: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #60                 // class java/lang/String
     150: astore        6
     152: new           #49                 // class org/jboss/vfs/VirtualFile
     155: dup
     156: aload         6
     158: aload_0
     159: invokespecial #61                 // Method "<init>":(Ljava/lang/String;Lorg/jboss/vfs/VirtualFile;)V
     162: astore        7
     164: aload         4
     166: aload         7
     168: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     173: pop
     174: goto          130
     177: aload         4
     179: areturn

  public java.util.List<org.jboss.vfs.VirtualFile> getChildren(org.jboss.vfs.VirtualFileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method isDirectory:()Z
       4: ifne          11
       7: invokestatic  #50                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_1
      12: ifnonnull     19
      15: getstatic     #65                 // Field org/jboss/vfs/util/MatchAllVirtualFileFilter.INSTANCE:Lorg/jboss/vfs/util/MatchAllVirtualFileFilter;
      18: astore_1
      19: new           #66                 // class org/jboss/vfs/util/FilterVirtualFileVisitor
      22: dup
      23: aload_1
      24: aconst_null
      25: invokespecial #67                 // Method org/jboss/vfs/util/FilterVirtualFileVisitor."<init>":(Lorg/jboss/vfs/VirtualFileFilter;Lorg/jboss/vfs/VisitorAttributes;)V
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #68                 // Method visit:(Lorg/jboss/vfs/VirtualFileVisitor;)V
      34: aload_2
      35: invokevirtual #69                 // Method org/jboss/vfs/util/FilterVirtualFileVisitor.getMatched:()Ljava/util/List;
      38: areturn

  public java.util.List<org.jboss.vfs.VirtualFile> getChildrenRecursively() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #70                 // Method getChildrenRecursively:(Lorg/jboss/vfs/VirtualFileFilter;)Ljava/util/List;
       5: areturn

  public java.util.List<org.jboss.vfs.VirtualFile> getChildrenRecursively(org.jboss.vfs.VirtualFileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method isDirectory:()Z
       4: ifne          11
       7: invokestatic  #50                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_1
      12: ifnonnull     19
      15: getstatic     #65                 // Field org/jboss/vfs/util/MatchAllVirtualFileFilter.INSTANCE:Lorg/jboss/vfs/util/MatchAllVirtualFileFilter;
      18: astore_1
      19: new           #66                 // class org/jboss/vfs/util/FilterVirtualFileVisitor
      22: dup
      23: aload_1
      24: getstatic     #71                 // Field org/jboss/vfs/VisitorAttributes.RECURSE:Lorg/jboss/vfs/VisitorAttributes;
      27: invokespecial #67                 // Method org/jboss/vfs/util/FilterVirtualFileVisitor."<init>":(Lorg/jboss/vfs/VirtualFileFilter;Lorg/jboss/vfs/VisitorAttributes;)V
      30: astore_2
      31: aload_0
      32: aload_2
      33: invokevirtual #68                 // Method visit:(Lorg/jboss/vfs/VirtualFileVisitor;)V
      36: aload_2
      37: invokevirtual #69                 // Method org/jboss/vfs/util/FilterVirtualFileVisitor.getMatched:()Ljava/util/List;
      40: areturn

  public void visit(org.jboss.vfs.VirtualFileVisitor) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #72                 // Method visit:(Lorg/jboss/vfs/VirtualFileVisitor;Z)V
       6: return

  private void visit(org.jboss.vfs.VirtualFileVisitor, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #73,  1           // InterfaceMethod org/jboss/vfs/VirtualFileVisitor.getAttributes:()Lorg/jboss/vfs/VisitorAttributes;
       6: astore_3
       7: iload_2
       8: ifeq          25
      11: aload_3
      12: invokevirtual #74                 // Method org/jboss/vfs/VisitorAttributes.isIncludeRoot:()Z
      15: ifeq          25
      18: aload_1
      19: aload_0
      20: invokeinterface #75,  2           // InterfaceMethod org/jboss/vfs/VirtualFileVisitor.visit:(Lorg/jboss/vfs/VirtualFile;)V
      25: aload_0
      26: invokevirtual #22                 // Method isDirectory:()Z
      29: ifne          33
      32: return
      33: aload_0
      34: invokevirtual #76                 // Method getChildren:()Ljava/util/List;
      37: invokeinterface #57,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          116
      54: aload         4
      56: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #49                 // class org/jboss/vfs/VirtualFile
      64: astore        5
      66: aload         5
      68: invokevirtual #22                 // Method isDirectory:()Z
      71: ifeq          81
      74: aload_3
      75: invokevirtual #77                 // Method org/jboss/vfs/VisitorAttributes.isLeavesOnly:()Z
      78: ifne          89
      81: aload_1
      82: aload         5
      84: invokeinterface #75,  2           // InterfaceMethod org/jboss/vfs/VirtualFileVisitor.visit:(Lorg/jboss/vfs/VirtualFile;)V
      89: aload         5
      91: invokevirtual #22                 // Method isDirectory:()Z
      94: ifeq          113
      97: aload_3
      98: aload         5
     100: invokevirtual #78                 // Method org/jboss/vfs/VisitorAttributes.isRecurse:(Lorg/jboss/vfs/VirtualFile;)Z
     103: ifeq          113
     106: aload         5
     108: aload_1
     109: iconst_0
     110: invokespecial #72                 // Method visit:(Lorg/jboss/vfs/VirtualFileVisitor;Z)V
     113: goto          44
     116: return

  public org.jboss.vfs.VirtualFile getChild(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #14                 // Field org/jboss/vfs/VFSMessages.MESSAGES:Lorg/jboss/vfs/VFSMessages;
       7: ldc           #79                 // String path
       9: invokeinterface #80,  2           // InterfaceMethod org/jboss/vfs/VFSMessages.nullArgument:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_1
      16: invokestatic  #81                 // Method org/jboss/vfs/util/PathTokenizer.getTokens:(Ljava/lang/String;)Ljava/util/List;
      19: astore_2
      20: aload_0
      21: astore_3
      22: aload_2
      23: invokeinterface #57,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          103
      40: aload         4
      42: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #60                 // class java/lang/String
      50: astore        5
      52: aload         5
      54: invokestatic  #82                 // Method org/jboss/vfs/util/PathTokenizer.isReverseToken:(Ljava/lang/String;)Z
      57: ifeq          81
      60: aload_3
      61: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      64: astore        6
      66: aload         6
      68: ifnonnull     75
      71: aload_3
      72: goto          77
      75: aload         6
      77: astore_3
      78: goto          100
      81: aload         5
      83: invokestatic  #83                 // Method org/jboss/vfs/util/PathTokenizer.isCurrentToken:(Ljava/lang/String;)Z
      86: ifne          100
      89: new           #49                 // class org/jboss/vfs/VirtualFile
      92: dup
      93: aload         5
      95: aload_3
      96: invokespecial #61                 // Method "<init>":(Ljava/lang/String;Lorg/jboss/vfs/VirtualFile;)V
      99: astore_3
     100: goto          30
     103: aload_3
     104: areturn

  public java.net.URL toURL() throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method org/jboss/vfs/VFSUtils.getVirtualURL:(Lorg/jboss/vfs/VirtualFile;)Ljava/net/URL;
       4: areturn

  public java.net.URI toURI() throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method org/jboss/vfs/VFSUtils.getVirtualURI:(Lorg/jboss/vfs/VirtualFile;)Ljava/net/URI;
       4: areturn

  public java.net.URL asDirectoryURL() throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #9                  // Method getPathName:(Z)Ljava/lang/String;
       5: astore_1
       6: new           #86                 // class java/net/URL
       9: dup
      10: ldc           #87                 // String vfs
      12: ldc           #88                 // String
      14: iconst_m1
      15: aload_0
      16: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      19: ifnonnull     26
      22: aload_1
      23: goto          45
      26: new           #10                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
      33: aload_1
      34: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #23                 // String /
      39: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: getstatic     #90                 // Field org/jboss/vfs/VFSUtils.VFS_URL_HANDLER:Ljava/net/URLStreamHandler;
      48: invokespecial #91                 // Method java/net/URL."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V
      51: areturn

  public java.net.URI asDirectoryURI() throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #9                  // Method getPathName:(Z)Ljava/lang/String;
       5: astore_1
       6: new           #92                 // class java/net/URI
       9: dup
      10: ldc           #87                 // String vfs
      12: ldc           #88                 // String
      14: aload_0
      15: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      18: ifnonnull     25
      21: aload_1
      22: goto          44
      25: new           #10                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
      32: aload_1
      33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #23                 // String /
      38: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: aconst_null
      45: invokespecial #93                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      48: areturn

  public java.net.URL asFileURL() throws java.net.MalformedURLException;
    Code:
       0: new           #86                 // class java/net/URL
       3: dup
       4: ldc           #87                 // String vfs
       6: ldc           #88                 // String
       8: iconst_m1
       9: aload_0
      10: iconst_0
      11: invokevirtual #9                  // Method getPathName:(Z)Ljava/lang/String;
      14: getstatic     #90                 // Field org/jboss/vfs/VFSUtils.VFS_URL_HANDLER:Ljava/net/URLStreamHandler;
      17: invokespecial #91                 // Method java/net/URL."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V
      20: areturn

  public java.net.URI asFileURI() throws java.net.URISyntaxException;
    Code:
       0: new           #92                 // class java/net/URI
       3: dup
       4: ldc           #87                 // String vfs
       6: ldc           #88                 // String
       8: aload_0
       9: iconst_0
      10: invokevirtual #9                  // Method getPathName:(Z)Ljava/lang/String;
      13: aconst_null
      14: invokespecial #93                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      17: areturn

  public java.security.CodeSigner[] getCodeSigners();
    Code:
       0: invokestatic  #25                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: new           #26                 // class org/jboss/vfs/VirtualFilePermission
      12: dup
      13: aload_0
      14: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      17: ldc           #28                 // String read
      19: invokespecial #29                 // Method org/jboss/vfs/VirtualFilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: invokevirtual #30                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      25: aload_0
      26: invokestatic  #31                 // Method org/jboss/vfs/VFS.getMount:(Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VFS$Mount;
      29: astore_2
      30: aload_2
      31: invokevirtual #32                 // Method org/jboss/vfs/VFS$Mount.getFileSystem:()Lorg/jboss/vfs/spi/FileSystem;
      34: aload_2
      35: invokevirtual #33                 // Method org/jboss/vfs/VFS$Mount.getMountPoint:()Lorg/jboss/vfs/VirtualFile;
      38: aload_0
      39: invokeinterface #94,  3           // InterfaceMethod org/jboss/vfs/spi/FileSystem.getCodeSigners:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)[Ljava/security/CodeSigner;
      44: areturn

  public java.security.cert.Certificate[] getCertificates();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method getCodeSigners:()[Ljava/security/CodeSigner;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: new           #53                 // class java/util/ArrayList
      14: dup
      15: aload_1
      16: arraylength
      17: iconst_3
      18: imul
      19: invokespecial #56                 // Method java/util/ArrayList."<init>":(I)V
      22: astore_2
      23: aload_1
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     66
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload_2
      46: aload         6
      48: invokevirtual #96                 // Method java/security/CodeSigner.getSignerCertPath:()Ljava/security/cert/CertPath;
      51: invokevirtual #97                 // Method java/security/cert/CertPath.getCertificates:()Ljava/util/List;
      54: invokeinterface #98,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      59: pop
      60: iinc          5, 1
      63: goto          32
      66: aload_2
      67: aload_2
      68: invokeinterface #54,  1           // InterfaceMethod java/util/List.size:()I
      73: anewarray     #99                 // class java/security/cert/Certificate
      76: invokeinterface #100,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      81: checkcast     #101                // class "[Ljava/security/cert/Certificate;"
      84: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
       7: bipush        34
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #27                 // Method getPathName:()Ljava/lang/String;
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        34
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #49                 // class org/jboss/vfs/VirtualFile
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #49                 // class org/jboss/vfs/VirtualFile
      12: invokevirtual #16                 // Method equals:(Lorg/jboss/vfs/VirtualFile;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean equals(org.jboss.vfs.VirtualFile);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        36
      11: aload_0
      12: getfield      #8                  // Field hashCode:I
      15: aload_1
      16: getfield      #8                  // Field hashCode:I
      19: if_icmpne     36
      22: aload_0
      23: getfield      #2                  // Field name:Ljava/lang/String;
      26: aload_1
      27: getfield      #2                  // Field name:Ljava/lang/String;
      30: invokevirtual #102                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      42: astore_2
      43: aload_1
      44: getfield      #5                  // Field parent:Lorg/jboss/vfs/VirtualFile;
      47: astore_3
      48: aload_2
      49: ifnull        60
      52: aload_2
      53: aload_3
      54: invokevirtual #16                 // Method equals:(Lorg/jboss/vfs/VirtualFile;)Z
      57: ifne          64
      60: aload_3
      61: ifnonnull     68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field hashCode:I
       4: ireturn
}
