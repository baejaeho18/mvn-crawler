Compiled from "AssemblyFileSystem.java"
public class org.jboss.vfs.spi.AssemblyFileSystem implements org.jboss.vfs.spi.FileSystem {
  private final org.jboss.vfs.VirtualFileAssembly assembly;

  public org.jboss.vfs.spi.AssemblyFileSystem(org.jboss.vfs.VirtualFileAssembly);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       9: getstatic     #3                  // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
      12: ldc           #4                  // String Constructed a new assembly filesystem for %s
      14: aload_1
      15: invokeinterface #5,  3            // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      20: return

  public java.io.File getFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method getExistingFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       6: invokevirtual #7                  // Method org/jboss/vfs/VirtualFile.getPhysicalFile:()Ljava/io/File;
       9: areturn

  public boolean delete(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       9: astore_3
      10: aload_3
      11: ifnull        25
      14: aload_3
      15: invokevirtual #9                  // Method org/jboss/vfs/VirtualFile.delete:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean exists(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #10                 // Method org/jboss/vfs/VirtualFile.equals:(Lorg/jboss/vfs/VirtualFile;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
      14: aload_1
      15: aload_2
      16: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
      19: astore_3
      20: aload_3
      21: ifnull        29
      24: aload_3
      25: invokevirtual #11                 // Method org/jboss/vfs/VirtualFile.exists:()Z
      28: ireturn
      29: aload_0
      30: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
      33: aload_1
      34: aload_2
      35: invokevirtual #12                 // Method org/jboss/vfs/VirtualFileAssembly.contains:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Z
      38: ireturn

  public boolean isFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       9: astore_3
      10: aload_3
      11: ifnull        25
      14: aload_3
      15: invokevirtual #13                 // Method org/jboss/vfs/VirtualFile.isFile:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.util.List<java.lang.String> getDirectoryEntries(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       9: astore_3
      10: aload_3
      11: ifnonnull     31
      14: new           #14                 // class java/util/ArrayList
      17: dup
      18: aload_0
      19: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
      22: aload_1
      23: aload_2
      24: invokevirtual #15                 // Method org/jboss/vfs/VirtualFileAssembly.getChildNames:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/util/List;
      27: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      30: areturn
      31: new           #17                 // class java/util/LinkedList
      34: dup
      35: invokespecial #18                 // Method java/util/LinkedList."<init>":()V
      38: astore        4
      40: aload_3
      41: invokevirtual #19                 // Method org/jboss/vfs/VirtualFile.getChildren:()Ljava/util/List;
      44: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      49: astore        5
      51: aload         5
      53: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          89
      61: aload         5
      63: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #23                 // class org/jboss/vfs/VirtualFile
      71: astore        6
      73: aload         4
      75: aload         6
      77: invokevirtual #24                 // Method org/jboss/vfs/VirtualFile.getName:()Ljava/lang/String;
      80: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: goto          51
      89: aload         4
      91: areturn

  public long getLastModified(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       9: astore_3
      10: aload_3
      11: ifnonnull     18
      14: lconst_0
      15: goto          22
      18: aload_3
      19: invokevirtual #26                 // Method org/jboss/vfs/VirtualFile.getLastModified:()J
      22: lreturn

  public long getSize(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       9: astore_3
      10: aload_3
      11: ifnonnull     18
      14: lconst_0
      15: goto          22
      18: aload_3
      19: invokevirtual #27                 // Method org/jboss/vfs/VirtualFile.getSize:()J
      22: lreturn

  public boolean isDirectory(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #10                 // Method org/jboss/vfs/VirtualFile.equals:(Lorg/jboss/vfs/VirtualFile;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
      14: aload_1
      15: aload_2
      16: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
      19: astore_3
      20: aload_3
      21: ifnull        29
      24: aload_3
      25: invokevirtual #28                 // Method org/jboss/vfs/VirtualFile.isDirectory:()Z
      28: ireturn
      29: aload_0
      30: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
      33: aload_1
      34: aload_2
      35: invokevirtual #12                 // Method org/jboss/vfs/VirtualFileAssembly.contains:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Z
      38: ireturn

  public boolean isReadOnly();
    Code:
       0: iconst_0
       1: ireturn

  public java.io.InputStream openInputStream(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method getExistingFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       6: invokevirtual #29                 // Method org/jboss/vfs/VirtualFile.openStream:()Ljava/io/InputStream;
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: getstatic     #3                  // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
       3: ldc           #30                 // String Closing assembly filesystem %s
       5: aload_0
       6: invokeinterface #5,  3            // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
      15: invokevirtual #31                 // Method org/jboss/vfs/VirtualFileAssembly.close:()V
      18: return

  public java.security.CodeSigner[] getCodeSigners(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       9: astore_3
      10: aload_3
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_3
      17: invokevirtual #32                 // Method org/jboss/vfs/VirtualFile.getCodeSigners:()[Ljava/security/CodeSigner;
      20: areturn

  public java.io.File getMountSource();
    Code:
       0: aconst_null
       1: areturn

  public java.net.URI getRootURI() throws java.net.URISyntaxException;
    Code:
       0: aconst_null
       1: areturn

  private org.jboss.vfs.VirtualFile getExistingFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field assembly:Lorg/jboss/vfs/VirtualFileAssembly;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/jboss/vfs/VirtualFileAssembly.getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Lorg/jboss/vfs/VirtualFile;
       9: astore_3
      10: aload_3
      11: ifnonnull     26
      14: new           #33                 // class java/io/FileNotFoundException
      17: dup
      18: aload_2
      19: invokevirtual #34                 // Method org/jboss/vfs/VirtualFile.getPathName:()Ljava/lang/String;
      22: invokespecial #35                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_3
      27: areturn
}
