Compiled from "VirtualJarInputStream.java"
public class org.jboss.vfs.VirtualJarInputStream extends java.util.jar.JarInputStream {
  private static final java.lang.String MANIFEST_NAME;

  private static final java.lang.String META_INF_DIR;

  private static final org.jboss.vfs.VirtualFileFilter MANIFEST_FILTER;

  private final java.util.Deque<java.util.Iterator<org.jboss.vfs.VirtualFile>> entryItr;

  private final org.jboss.vfs.VirtualFile root;

  private final java.util.jar.Manifest manifest;

  private java.io.InputStream currentEntryStream;

  private boolean closed;

  public org.jboss.vfs.VirtualJarInputStream(org.jboss.vfs.VirtualFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/jboss/vfs/VFSUtils.emptyStream:()Ljava/io/InputStream;
       4: invokespecial #2                  // Method java/util/jar/JarInputStream."<init>":(Ljava/io/InputStream;)V
       7: aload_0
       8: new           #3                  // class java/util/ArrayDeque
      11: dup
      12: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      15: putfield      #5                  // Field entryItr:Ljava/util/Deque;
      18: aload_0
      19: invokestatic  #1                  // Method org/jboss/vfs/VFSUtils.emptyStream:()Ljava/io/InputStream;
      22: putfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field root:Lorg/jboss/vfs/VirtualFile;
      30: aload_1
      31: ldc           #8                  // String META-INF/MANIFEST.MF
      33: invokevirtual #9                  // Method org/jboss/vfs/VirtualFile.getChild:(Ljava/lang/String;)Lorg/jboss/vfs/VirtualFile;
      36: astore_2
      37: aload_2
      38: invokevirtual #10                 // Method org/jboss/vfs/VirtualFile.exists:()Z
      41: ifeq          74
      44: aload_0
      45: getfield      #5                  // Field entryItr:Ljava/util/Deque;
      48: aload_2
      49: invokestatic  #11                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      52: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: invokeinterface #13,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      62: pop
      63: aload_0
      64: aload_2
      65: invokestatic  #14                 // Method org/jboss/vfs/VFSUtils.readManifest:(Lorg/jboss/vfs/VirtualFile;)Ljava/util/jar/Manifest;
      68: putfield      #15                 // Field manifest:Ljava/util/jar/Manifest;
      71: goto          79
      74: aload_0
      75: aconst_null
      76: putfield      #15                 // Field manifest:Ljava/util/jar/Manifest;
      79: aload_0
      80: getfield      #5                  // Field entryItr:Ljava/util/Deque;
      83: aload_1
      84: invokevirtual #16                 // Method org/jboss/vfs/VirtualFile.getChildren:()Ljava/util/List;
      87: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      92: invokeinterface #13,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      97: pop
      98: return

  public java.util.zip.ZipEntry getNextEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getNextJarEntry:()Ljava/util/jar/JarEntry;
       4: areturn

  public java.util.jar.JarEntry getNextJarEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method closeEntry:()V
       4: aload_0
       5: getfield      #5                  // Field entryItr:Ljava/util/Deque;
       8: invokeinterface #20,  1           // InterfaceMethod java/util/Deque.peekFirst:()Ljava/lang/Object;
      13: checkcast     #21                 // class java/util/Iterator
      16: astore_1
      17: aload_1
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload_1
      24: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifne          47
      32: aload_0
      33: getfield      #5                  // Field entryItr:Ljava/util/Deque;
      36: invokeinterface #23,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      41: pop
      42: aload_0
      43: invokevirtual #18                 // Method getNextJarEntry:()Ljava/util/jar/JarEntry;
      46: areturn
      47: aload_1
      48: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #25                 // class org/jboss/vfs/VirtualFile
      56: astore_2
      57: aload_0
      58: aload_2
      59: invokespecial #26                 // Method getEntryName:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
      62: astore_3
      63: aload_2
      64: invokevirtual #27                 // Method org/jboss/vfs/VirtualFile.isDirectory:()Z
      67: ifeq          117
      70: aload_2
      71: invokevirtual #16                 // Method org/jboss/vfs/VirtualFile.getChildren:()Ljava/util/List;
      74: astore        4
      76: aload_3
      77: ldc           #28                 // String META-INF
      79: invokevirtual #29                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      82: ifeq          94
      85: aload_2
      86: getstatic     #30                 // Field MANIFEST_FILTER:Lorg/jboss/vfs/VirtualFileFilter;
      89: invokevirtual #31                 // Method org/jboss/vfs/VirtualFile.getChildren:(Lorg/jboss/vfs/VirtualFileFilter;)Ljava/util/List;
      92: astore        4
      94: aload_0
      95: getfield      #5                  // Field entryItr:Ljava/util/Deque;
      98: aload         4
     100: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     105: invokeinterface #13,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     110: pop
     111: aload_0
     112: aload_3
     113: invokespecial #32                 // Method fixDirectoryName:(Ljava/lang/String;)Ljava/lang/String;
     116: astore_3
     117: aload_0
     118: aload_2
     119: invokespecial #33                 // Method openCurrent:(Lorg/jboss/vfs/VirtualFile;)V
     122: aconst_null
     123: astore        4
     125: aload_0
     126: invokevirtual #34                 // Method getManifest:()Ljava/util/jar/Manifest;
     129: astore        5
     131: aload         5
     133: ifnull        144
     136: aload         5
     138: aload_3
     139: invokevirtual #35                 // Method java/util/jar/Manifest.getAttributes:(Ljava/lang/String;)Ljava/util/jar/Attributes;
     142: astore        4
     144: new           #36                 // class org/jboss/vfs/VirtualJarInputStream$VirtualJarEntry
     147: dup
     148: aload_3
     149: aload_2
     150: aload         4
     152: invokespecial #37                 // Method org/jboss/vfs/VirtualJarInputStream$VirtualJarEntry."<init>":(Ljava/lang/String;Lorg/jboss/vfs/VirtualFile;Ljava/util/jar/Attributes;)V
     155: areturn

  public java.util.jar.Manifest getManifest();
    Code:
       0: aload_0
       1: getfield      #15                 // Field manifest:Ljava/util/jar/Manifest;
       4: areturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method ensureOpen:()V
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
       9: invokevirtual #39                 // Method java/io/InputStream.read:()I
      12: invokespecial #40                 // Method checkForEoSAndReturn:(I)I
      15: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #41                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method ensureOpen:()V
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #42                 // Method java/io/InputStream.read:([BII)I
      15: invokespecial #40                 // Method checkForEoSAndReturn:(I)I
      18: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method ensureOpen:()V
       4: aload_0
       5: getfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
       8: invokevirtual #43                 // Method java/io/InputStream.available:()I
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #44                 // Field closed:Z
       5: return

  public void closeEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
      11: invokevirtual #45                 // Method java/io/InputStream.close:()V
      14: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method ensureOpen:()V
       4: aload_0
       5: getfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
       8: lload_1
       9: invokevirtual #46                 // Method java/io/InputStream.skip:(J)J
      12: lreturn

  private void ensureOpen() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #44                 // Field closed:Z
       4: ifeq          16
       7: getstatic     #47                 // Field org/jboss/vfs/VFSMessages.MESSAGES:Lorg/jboss/vfs/VFSMessages;
      10: invokeinterface #48,  1           // InterfaceMethod org/jboss/vfs/VFSMessages.streamIsClosed:()Ljava/io/IOException;
      15: athrow
      16: return

  private int checkForEoSAndReturn(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpne     16
       5: aload_0
       6: invokevirtual #19                 // Method closeEntry:()V
       9: aload_0
      10: invokestatic  #1                  // Method org/jboss/vfs/VFSUtils.emptyStream:()Ljava/io/InputStream;
      13: putfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
      16: iload_1
      17: ireturn

  private void openCurrent(org.jboss.vfs.VirtualFile) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method org/jboss/vfs/VirtualFile.isDirectory:()Z
       4: ifeq          17
       7: aload_0
       8: invokestatic  #1                  // Method org/jboss/vfs/VFSUtils.emptyStream:()Ljava/io/InputStream;
      11: putfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
      14: goto          25
      17: aload_0
      18: aload_1
      19: invokevirtual #49                 // Method org/jboss/vfs/VirtualFile.openStream:()Ljava/io/InputStream;
      22: putfield      #6                  // Field currentEntryStream:Ljava/io/InputStream;
      25: return

  private java.lang.String getEntryName(org.jboss.vfs.VirtualFile);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field root:Lorg/jboss/vfs/VirtualFile;
       5: invokevirtual #50                 // Method org/jboss/vfs/VirtualFile.getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
       8: areturn

  private java.lang.String fixDirectoryName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #51                 // String /
       3: invokevirtual #52                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifne          29
       9: new           #53                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_1
      17: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #51                 // String /
      22: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn
      29: aload_1
      30: areturn

  static {};
    Code:
       0: new           #57                 // class org/jboss/vfs/VirtualJarInputStream$1
       3: dup
       4: invokespecial #58                 // Method org/jboss/vfs/VirtualJarInputStream$1."<init>":()V
       7: putstatic     #30                 // Field MANIFEST_FILTER:Lorg/jboss/vfs/VirtualFileFilter;
      10: return
}
