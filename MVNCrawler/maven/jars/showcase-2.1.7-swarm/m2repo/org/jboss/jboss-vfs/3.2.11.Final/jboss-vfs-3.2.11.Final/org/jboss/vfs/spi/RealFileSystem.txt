Compiled from "RealFileSystem.java"
public final class org.jboss.vfs.spi.RealFileSystem implements org.jboss.vfs.spi.FileSystem {
  private static final boolean NEEDS_CONVERSION;

  private final java.io.File realRoot;

  private final boolean privileged;

  public org.jboss.vfs.spi.RealFileSystem(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #1                  // Method "<init>":(Ljava/io/File;Z)V
       6: return

  public org.jboss.vfs.spi.RealFileSystem(java.io.File, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: ifeq          42
       8: invokestatic  #3                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      11: astore_3
      12: aload_3
      13: ifnull        42
      16: aload_3
      17: new           #4                  // class java/io/FilePermission
      20: dup
      21: new           #5                  // class java/io/File
      24: dup
      25: aload_1
      26: ldc           #6                  // String -
      28: invokespecial #7                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      31: invokevirtual #8                  // Method java/io/File.getPath:()Ljava/lang/String;
      34: ldc           #9                  // String read,delete
      36: invokespecial #10                 // Method java/io/FilePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      39: invokevirtual #11                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      42: aload_1
      43: astore_3
      44: aload_1
      45: invokevirtual #12                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      48: astore_3
      49: goto          68
      52: astore        4
      54: getstatic     #14                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
      57: aload         4
      59: ldc           #15                 // String Cannot get the canonical form of the real root. This could lead to potential problems if the %s flag is set.
      61: ldc           #16                 // String jboss.vfs.forceCaseSensitive
      63: invokeinterface #17,  4           // InterfaceMethod org/jboss/vfs/VFSLogger.warnf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      68: aload_0
      69: aload_3
      70: putfield      #18                 // Field realRoot:Ljava/io/File;
      73: aload_0
      74: iload_2
      75: putfield      #19                 // Field privileged:Z
      78: getstatic     #14                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
      81: ldc           #20                 // String Constructed real %s filesystem at root %s
      83: iload_2
      84: ifeq          92
      87: ldc           #21                 // String privileged
      89: goto          94
      92: ldc           #22                 // String unprivileged
      94: aload_1
      95: invokeinterface #23,  4           // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     100: return
    Exception table:
       from    to  target type
          44    49    52   Class java/io/IOException

  private static <T> T doIoPrivileged(java.security.PrivilegedExceptionAction<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
       4: areturn
       5: astore_1
       6: aload_1
       7: invokevirtual #26                 // Method java/security/PrivilegedActionException.getException:()Ljava/lang/Exception;
      10: athrow
      11: astore_2
      12: aload_2
      13: athrow
      14: astore_2
      15: aload_2
      16: athrow
      17: astore_2
      18: new           #29                 // class java/lang/reflect/UndeclaredThrowableException
      21: dup
      22: aload_2
      23: invokespecial #30                 // Method java/lang/reflect/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/security/PrivilegedActionException
           6    11    11   Class java/io/IOException
           6    11    14   Class java/lang/RuntimeException
           6    11    17   Class java/lang/Exception

  public java.io.InputStream openInputStream(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field privileged:Z
       4: ifeq          26
       7: new           #31                 // class org/jboss/vfs/spi/RealFileSystem$1
      10: dup
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokespecial #32                 // Method org/jboss/vfs/spi/RealFileSystem$1."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)V
      17: invokestatic  #33                 // Method doIoPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      20: checkcast     #34                 // class java/io/InputStream
      23: goto          39
      26: new           #35                 // class java/io/FileInputStream
      29: dup
      30: aload_0
      31: aload_1
      32: aload_2
      33: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
      36: invokespecial #37                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      39: areturn

  public boolean isReadOnly();
    Code:
       0: iconst_0
       1: ireturn

  public java.io.File getFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #38                 // Method org/jboss/vfs/VirtualFile.equals:(Lorg/jboss/vfs/VirtualFile;)Z
       5: ifeq          13
       8: aload_0
       9: getfield      #18                 // Field realRoot:Ljava/io/File;
      12: areturn
      13: getstatic     #39                 // Field NEEDS_CONVERSION:Z
      16: ifeq          44
      19: new           #5                  // class java/io/File
      22: dup
      23: aload_0
      24: getfield      #18                 // Field realRoot:Ljava/io/File;
      27: aload_2
      28: aload_1
      29: invokevirtual #40                 // Method org/jboss/vfs/VirtualFile.getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
      32: bipush        47
      34: getstatic     #41                 // Field java/io/File.separatorChar:C
      37: invokevirtual #42                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      40: invokespecial #7                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      43: areturn
      44: new           #5                  // class java/io/File
      47: dup
      48: aload_0
      49: getfield      #18                 // Field realRoot:Ljava/io/File;
      52: aload_2
      53: aload_1
      54: invokevirtual #40                 // Method org/jboss/vfs/VirtualFile.getPathNameRelativeTo:(Lorg/jboss/vfs/VirtualFile;)Ljava/lang/String;
      57: invokespecial #7                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      60: areturn

  public boolean delete(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
       6: astore_3
       7: aload_0
       8: getfield      #19                 // Field privileged:Z
      11: ifeq          35
      14: new           #43                 // class org/jboss/vfs/spi/RealFileSystem$2
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #44                 // Method org/jboss/vfs/spi/RealFileSystem$2."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Ljava/io/File;)V
      23: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: checkcast     #46                 // class java/lang/Boolean
      29: invokevirtual #47                 // Method java/lang/Boolean.booleanValue:()Z
      32: goto          39
      35: aload_3
      36: invokevirtual #48                 // Method java/io/File.delete:()Z
      39: ireturn

  public long getSize(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
       6: astore_3
       7: aload_0
       8: getfield      #19                 // Field privileged:Z
      11: ifeq          35
      14: new           #49                 // class org/jboss/vfs/spi/RealFileSystem$3
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #50                 // Method org/jboss/vfs/spi/RealFileSystem$3."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Ljava/io/File;)V
      23: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: checkcast     #51                 // class java/lang/Long
      29: invokevirtual #52                 // Method java/lang/Long.longValue:()J
      32: goto          39
      35: aload_3
      36: invokevirtual #53                 // Method java/io/File.length:()J
      39: lreturn

  public long getLastModified(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
       6: astore_3
       7: aload_0
       8: getfield      #19                 // Field privileged:Z
      11: ifeq          35
      14: new           #54                 // class org/jboss/vfs/spi/RealFileSystem$4
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #55                 // Method org/jboss/vfs/spi/RealFileSystem$4."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Ljava/io/File;)V
      23: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: checkcast     #51                 // class java/lang/Long
      29: invokevirtual #52                 // Method java/lang/Long.longValue:()J
      32: goto          39
      35: aload_3
      36: invokevirtual #56                 // Method java/io/File.lastModified:()J
      39: lreturn

  public boolean exists(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
       6: astore_3
       7: aload_0
       8: getfield      #19                 // Field privileged:Z
      11: ifeq          35
      14: new           #57                 // class org/jboss/vfs/spi/RealFileSystem$5
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #58                 // Method org/jboss/vfs/spi/RealFileSystem$5."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Ljava/io/File;)V
      23: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: checkcast     #46                 // class java/lang/Boolean
      29: invokevirtual #47                 // Method java/lang/Boolean.booleanValue:()Z
      32: goto          39
      35: aload_3
      36: invokestatic  #59                 // Method org/jboss/vfs/VFSUtils.exists:(Ljava/io/File;)Z
      39: ireturn

  public boolean isFile(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
       6: astore_3
       7: aload_0
       8: getfield      #19                 // Field privileged:Z
      11: ifeq          35
      14: new           #60                 // class org/jboss/vfs/spi/RealFileSystem$6
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #61                 // Method org/jboss/vfs/spi/RealFileSystem$6."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Ljava/io/File;)V
      23: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: checkcast     #46                 // class java/lang/Boolean
      29: invokevirtual #47                 // Method java/lang/Boolean.booleanValue:()Z
      32: goto          39
      35: aload_3
      36: invokevirtual #62                 // Method java/io/File.isFile:()Z
      39: ireturn

  public boolean isDirectory(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
       6: astore_3
       7: aload_0
       8: getfield      #19                 // Field privileged:Z
      11: ifeq          35
      14: new           #63                 // class org/jboss/vfs/spi/RealFileSystem$7
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #64                 // Method org/jboss/vfs/spi/RealFileSystem$7."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Ljava/io/File;)V
      23: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: checkcast     #46                 // class java/lang/Boolean
      29: invokevirtual #47                 // Method java/lang/Boolean.booleanValue:()Z
      32: goto          39
      35: aload_3
      36: invokevirtual #65                 // Method java/io/File.isDirectory:()Z
      39: ireturn

  public java.util.List<java.lang.String> getDirectoryEntries(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #36                 // Method getFile:(Lorg/jboss/vfs/VirtualFile;Lorg/jboss/vfs/VirtualFile;)Ljava/io/File;
       6: astore_3
       7: aload_0
       8: getfield      #19                 // Field privileged:Z
      11: ifeq          32
      14: new           #66                 // class org/jboss/vfs/spi/RealFileSystem$8
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #67                 // Method org/jboss/vfs/spi/RealFileSystem$8."<init>":(Lorg/jboss/vfs/spi/RealFileSystem;Ljava/io/File;)V
      23: invokestatic  #45                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: checkcast     #68                 // class "[Ljava/lang/String;"
      29: goto          36
      32: aload_3
      33: invokevirtual #69                 // Method java/io/File.list:()[Ljava/lang/String;
      36: astore        4
      38: aload         4
      40: ifnonnull     49
      43: invokestatic  #70                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      46: goto          54
      49: aload         4
      51: invokestatic  #71                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      54: areturn

  public java.security.CodeSigner[] getCodeSigners(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);
    Code:
       0: aconst_null
       1: areturn

  public java.io.File getMountSource();
    Code:
       0: aload_0
       1: getfield      #18                 // Field realRoot:Ljava/io/File;
       4: areturn

  public java.net.URI getRootURI() throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field realRoot:Ljava/io/File;
       4: invokevirtual #72                 // Method java/io/File.toURI:()Ljava/net/URI;
       7: areturn

  public void close() throws java.io.IOException;
    Code:
       0: return

  static {};
    Code:
       0: getstatic     #41                 // Field java/io/File.separatorChar:C
       3: bipush        47
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #39                 // Field NEEDS_CONVERSION:Z
      16: return
}
