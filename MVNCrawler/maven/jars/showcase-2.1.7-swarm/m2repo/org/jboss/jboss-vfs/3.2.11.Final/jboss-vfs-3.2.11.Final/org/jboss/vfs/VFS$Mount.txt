Compiled from "VFS.java"
final class org.jboss.vfs.VFS$Mount implements java.io.Closeable {
  private final org.jboss.vfs.spi.FileSystem fileSystem;

  private final org.jboss.vfs.VirtualFile mountPoint;

  private final java.lang.StackTraceElement[] allocationPoint;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  org.jboss.vfs.VFS$Mount(org.jboss.vfs.spi.FileSystem, org.jboss.vfs.VirtualFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field fileSystem:Lorg/jboss/vfs/spi/FileSystem;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
      26: aload_0
      27: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      30: invokevirtual #8                  // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
      33: putfield      #9                  // Field allocationPoint:[Ljava/lang/StackTraceElement;
      36: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
      16: invokevirtual #11                 // Method org/jboss/vfs/VirtualFile.getName:()Ljava/lang/String;
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
      24: invokevirtual #12                 // Method org/jboss/vfs/VirtualFile.getParent:()Lorg/jboss/vfs/VirtualFile;
      27: astore_2
      28: invokestatic  #13                 // Method org/jboss/vfs/VFS.access$100:()Ljava/util/concurrent/ConcurrentMap;
      31: astore_3
      32: aload_3
      33: aload_2
      34: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #15                 // class java/util/Map
      42: astore        4
      44: aload         4
      46: ifnonnull     50
      49: return
      50: aload         4
      52: aload_1
      53: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #17                 // class org/jboss/vfs/VFS$Mount
      61: astore        5
      63: aload         5
      65: aload_0
      66: if_acmpeq     70
      69: return
      70: aload         4
      72: invokeinterface #18,  1           // InterfaceMethod java/util/Map.size:()I
      77: iconst_2
      78: if_icmpne     213
      81: aload         4
      83: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      88: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      93: astore        7
      95: aload         7
      97: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #22                 // class java/util/Map$Entry
     105: astore        8
     107: aload         8
     109: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     114: checkcast     #24                 // class java/lang/String
     117: aload_1
     118: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     121: ifeq          158
     124: aload         7
     126: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     131: checkcast     #22                 // class java/util/Map$Entry
     134: astore        9
     136: aload         9
     138: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     143: aload         9
     145: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     150: invokestatic  #27                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
     153: astore        6
     155: goto          177
     158: aload         8
     160: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     165: aload         8
     167: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     172: invokestatic  #27                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
     175: astore        6
     177: aload_3
     178: aload_2
     179: aload         4
     181: aload         6
     183: invokeinterface #28,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     188: ifeq          210
     191: getstatic     #29                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
     194: ldc           #30                 // String Unmounted filesystem %s on mount point %s
     196: aload_0
     197: getfield      #5                  // Field fileSystem:Lorg/jboss/vfs/spi/FileSystem;
     200: aload_0
     201: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
     204: invokeinterface #31,  4           // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     209: return
     210: goto          308
     213: aload         4
     215: invokeinterface #18,  1           // InterfaceMethod java/util/Map.size:()I
     220: iconst_1
     221: if_icmpne     255
     224: aload_3
     225: aload_2
     226: aload         4
     228: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     233: ifeq          308
     236: getstatic     #29                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
     239: ldc           #30                 // String Unmounted filesystem %s on mount point %s
     241: aload_0
     242: getfield      #5                  // Field fileSystem:Lorg/jboss/vfs/spi/FileSystem;
     245: aload_0
     246: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
     249: invokeinterface #31,  4           // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     254: return
     255: new           #33                 // class java/util/HashMap
     258: dup
     259: aload         4
     261: invokespecial #34                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     264: astore        6
     266: aload         6
     268: aload_1
     269: invokeinterface #35,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     274: pop
     275: aload_3
     276: aload_2
     277: aload         4
     279: aload         6
     281: invokeinterface #28,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     286: ifeq          308
     289: getstatic     #29                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
     292: ldc           #30                 // String Unmounted filesystem %s on mount point %s
     294: aload_0
     295: getfield      #5                  // Field fileSystem:Lorg/jboss/vfs/spi/FileSystem;
     298: aload_0
     299: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
     302: invokeinterface #31,  4           // InterfaceMethod org/jboss/vfs/VFSLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     307: return
     308: goto          32

  org.jboss.vfs.spi.FileSystem getFileSystem();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fileSystem:Lorg/jboss/vfs/spi/FileSystem;
       4: areturn

  org.jboss.vfs.VirtualFile getMountPoint();
    Code:
       0: aload_0
       1: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
       4: areturn

  protected void finalize() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          66
      10: aload_0
      11: getfield      #9                  // Field allocationPoint:[Ljava/lang/StackTraceElement;
      14: astore_1
      15: aload_1
      16: ifnull        49
      19: new           #37                 // class org/jboss/vfs/VFS$LeakDescriptor
      22: dup
      23: aconst_null
      24: invokespecial #38                 // Method org/jboss/vfs/VFS$LeakDescriptor."<init>":(Lorg/jboss/vfs/VFS$1;)V
      27: astore_2
      28: aload_2
      29: aload_1
      30: invokevirtual #39                 // Method org/jboss/vfs/VFS$LeakDescriptor.setStackTrace:([Ljava/lang/StackTraceElement;)V
      33: getstatic     #29                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
      36: aload_0
      37: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
      40: aload_2
      41: invokeinterface #40,  3           // InterfaceMethod org/jboss/vfs/VFSLogger.vfsMountLeaked:(Lorg/jboss/vfs/VirtualFile;Ljava/lang/Throwable;)V
      46: goto          62
      49: getstatic     #29                 // Field org/jboss/vfs/VFSLogger.ROOT_LOGGER:Lorg/jboss/vfs/VFSLogger;
      52: aload_0
      53: getfield      #6                  // Field mountPoint:Lorg/jboss/vfs/VirtualFile;
      56: aconst_null
      57: invokeinterface #40,  3           // InterfaceMethod org/jboss/vfs/VFSLogger.vfsMountLeaked:(Lorg/jboss/vfs/VirtualFile;Ljava/lang/Throwable;)V
      62: aload_0
      63: invokevirtual #41                 // Method close:()V
      66: return
}
