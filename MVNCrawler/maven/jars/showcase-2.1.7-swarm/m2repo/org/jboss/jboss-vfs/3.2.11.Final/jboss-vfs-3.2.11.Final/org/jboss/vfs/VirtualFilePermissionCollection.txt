Compiled from "VirtualFilePermissionCollection.java"
final class org.jboss.vfs.VirtualFilePermissionCollection extends java.security.PermissionCollection {
  private static final java.io.ObjectStreamField[] serialPersistentFields;

  private static final org.jboss.vfs.VirtualFilePermission[] NO_PERMISSIONS;

  private volatile org.jboss.vfs.VirtualFilePermission[] permissions;

  private static final java.lang.reflect.Field listField;

  static final boolean $assertionsDisabled;

  org.jboss.vfs.VirtualFilePermissionCollection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/security/PermissionCollection."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field NO_PERMISSIONS:[Lorg/jboss/vfs/VirtualFilePermission;
       8: putfield      #3                  // Field permissions:[Lorg/jboss/vfs/VirtualFilePermission;
      11: return

  public void add(java.security.Permission);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/jboss/vfs/VirtualFilePermission
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #4                  // class org/jboss/vfs/VirtualFilePermission
      12: invokevirtual #5                  // Method add:(Lorg/jboss/vfs/VirtualFilePermission;)V
      15: goto          26
      18: new           #6                  // class java/lang/IllegalArgumentException
      21: dup
      22: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":()V
      25: athrow
      26: return

  public synchronized void add(org.jboss.vfs.VirtualFilePermission);
    Code:
       0: aload_1
       1: ifnull        38
       4: aload_0
       5: getfield      #3                  // Field permissions:[Lorg/jboss/vfs/VirtualFilePermission;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: aload_2
      13: iload_3
      14: iconst_1
      15: iadd
      16: invokestatic  #8                  // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      19: checkcast     #9                  // class "[Lorg/jboss/vfs/VirtualFilePermission;"
      22: astore        4
      24: aload         4
      26: iload_3
      27: aload_1
      28: aastore
      29: aload_0
      30: aload         4
      32: putfield      #3                  // Field permissions:[Lorg/jboss/vfs/VirtualFilePermission;
      35: goto          46
      38: new           #6                  // class java/lang/IllegalArgumentException
      41: dup
      42: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":()V
      45: athrow
      46: return

  public boolean implies(java.security.Permission);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/jboss/vfs/VirtualFilePermission
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #4                  // class org/jboss/vfs/VirtualFilePermission
      12: invokespecial #10                 // Method implies:(Lorg/jboss/vfs/VirtualFilePermission;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean implies(org.jboss.vfs.VirtualFilePermission);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #12                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_1
      19: invokevirtual #14                 // Method org/jboss/vfs/VirtualFilePermission.getActionFlags:()I
      22: istore_2
      23: iload_2
      24: ifne          29
      27: iconst_1
      28: ireturn
      29: aload_0
      30: getfield      #3                  // Field permissions:[Lorg/jboss/vfs/VirtualFilePermission;
      33: astore_3
      34: aload_1
      35: invokevirtual #15                 // Method org/jboss/vfs/VirtualFilePermission.getName:()Ljava/lang/String;
      38: astore        4
      40: aload_3
      41: astore        5
      43: aload         5
      45: arraylength
      46: istore        6
      48: iconst_0
      49: istore        7
      51: iload         7
      53: iload         6
      55: if_icmpge     100
      58: aload         5
      60: iload         7
      62: aaload
      63: astore        8
      65: aload         8
      67: invokevirtual #15                 // Method org/jboss/vfs/VirtualFilePermission.getName:()Ljava/lang/String;
      70: aload         4
      72: invokestatic  #16                 // Method org/jboss/vfs/VirtualFilePermission.impliesPath:(Ljava/lang/String;Ljava/lang/String;)Z
      75: ifeq          94
      78: iload_2
      79: aload         8
      81: invokevirtual #14                 // Method org/jboss/vfs/VirtualFilePermission.getActionFlags:()I
      84: iconst_m1
      85: ixor
      86: iand
      87: istore_2
      88: iload_2
      89: ifne          94
      92: iconst_1
      93: ireturn
      94: iinc          7, 1
      97: goto          51
     100: iconst_0
     101: ireturn

  public java.util.Enumeration<java.security.Permission> elements();
    Code:
       0: aload_0
       1: getfield      #3                  // Field permissions:[Lorg/jboss/vfs/VirtualFilePermission;
       4: astore_1
       5: new           #17                 // class org/jboss/vfs/VirtualFilePermissionCollection$2
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #18                 // Method org/jboss/vfs/VirtualFilePermissionCollection$2."<init>":(Lorg/jboss/vfs/VirtualFilePermissionCollection;[Lorg/jboss/vfs/VirtualFilePermission;)V
      14: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: getstatic     #19                 // Field listField:Ljava/lang/reflect/Field;
       3: aload_0
       4: aload_1
       5: invokevirtual #20                 // Method java/io/ObjectInputStream.readFields:()Ljava/io/ObjectInputStream$GetField;
       8: ldc           #21                 // String list
      10: aconst_null
      11: invokevirtual #22                 // Method java/io/ObjectInputStream$GetField.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      14: invokevirtual #23                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      17: goto          33
      20: astore_2
      21: new           #25                 // class java/lang/IllegalAccessError
      24: dup
      25: aload_2
      26: invokevirtual #26                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
      29: invokespecial #27                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
      32: athrow
      33: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/IllegalAccessException

  static {};
    Code:
       0: ldc_w         #28                 // class org/jboss/vfs/VirtualFilePermissionCollection
       3: invokevirtual #29                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #11                 // Field $assertionsDisabled:Z
      17: iconst_1
      18: anewarray     #30                 // class java/io/ObjectStreamField
      21: dup
      22: iconst_0
      23: new           #30                 // class java/io/ObjectStreamField
      26: dup
      27: ldc           #21                 // String list
      29: ldc_w         #9                  // class "[Lorg/jboss/vfs/VirtualFilePermission;"
      32: invokespecial #31                 // Method java/io/ObjectStreamField."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
      35: aastore
      36: putstatic     #32                 // Field serialPersistentFields:[Ljava/io/ObjectStreamField;
      39: iconst_0
      40: anewarray     #4                  // class org/jboss/vfs/VirtualFilePermission
      43: putstatic     #2                  // Field NO_PERMISSIONS:[Lorg/jboss/vfs/VirtualFilePermission;
      46: new           #33                 // class org/jboss/vfs/VirtualFilePermissionCollection$1
      49: dup
      50: invokespecial #34                 // Method org/jboss/vfs/VirtualFilePermissionCollection$1."<init>":()V
      53: invokestatic  #35                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      56: checkcast     #36                 // class java/lang/reflect/Field
      59: putstatic     #19                 // Field listField:Ljava/lang/reflect/Field;
      62: return
}
