Compiled from "JsseSslStreamSourceConduit.java"
final class org.xnio.ssl.JsseSslStreamSourceConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> {
  private final org.xnio.ssl.JsseSslConduitEngine sslEngine;

  private volatile boolean tls;

  protected org.xnio.ssl.JsseSslStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, org.xnio.ssl.JsseSslConduitEngine, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       5: aload_2
       6: ifnonnull     20
       9: getstatic     #21                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      12: ldc           #22                 // String sslEngine
      14: invokeinterface #26,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      19: athrow
      20: aload_0
      21: aload_2
      22: putfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      25: aload_0
      26: iload_3
      27: putfield      #34                 // Field tls:Z
      30: return

  void enableTls();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #34                 // Field tls:Z
       5: aload_0
       6: invokevirtual #44                 // Method isReadResumed:()Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #47                 // Method wakeupReads:()V
      16: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload         5
       2: new           #53                 // class org/xnio/conduits/ConduitReadableByteChannel
       5: dup
       6: aload_0
       7: invokespecial #54                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      10: lload_1
      11: lload_3
      12: invokevirtual #60                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      15: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokestatic  #72                 // Method org/xnio/conduits/Conduits.transfer:(Lorg/xnio/conduits/StreamSourceConduit;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifne          13
       7: aload_0
       8: aload_1
       9: invokespecial #79                 // Method org/xnio/conduits/AbstractStreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      12: ireturn
      13: aload_0
      14: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      17: invokevirtual #82                 // Method org/xnio/ssl/JsseSslConduitEngine.isDataAvailable:()Z
      20: ifne          33
      23: aload_0
      24: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      27: invokevirtual #85                 // Method org/xnio/ssl/JsseSslConduitEngine.isInboundClosed:()Z
      30: ifne          43
      33: aload_0
      34: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      37: invokevirtual #88                 // Method org/xnio/ssl/JsseSslConduitEngine.isClosed:()Z
      40: ifeq          45
      43: iconst_m1
      44: ireturn
      45: aload_0
      46: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      49: invokevirtual #92                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapLock:()Ljava/lang/Object;
      52: dup
      53: astore        4
      55: monitorenter
      56: aload_0
      57: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      60: invokevirtual #96                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapBuffer:()Ljava/nio/ByteBuffer;
      63: invokevirtual #101                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      66: astore        5
      68: aload_0
      69: aload         5
      71: invokespecial #79                 // Method org/xnio/conduits/AbstractStreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      74: istore_2
      75: aload         5
      77: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      80: pop
      81: goto          95
      84: astore        6
      86: aload         5
      88: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      91: pop
      92: aload         6
      94: athrow
      95: aload         4
      97: monitorexit
      98: goto          109
     101: astore        7
     103: aload         4
     105: monitorexit
     106: aload         7
     108: athrow
     109: aload_0
     110: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     113: aload_1
     114: invokevirtual #112                // Method org/xnio/ssl/JsseSslConduitEngine.unwrap:(Ljava/nio/ByteBuffer;)I
     117: istore_3
     118: iload_3
     119: ifne          129
     122: iload_2
     123: iconst_m1
     124: if_icmpne     129
     127: iconst_m1
     128: ireturn
     129: iload_3
     130: ireturn
    Exception table:
       from    to  target type
          68    75    84   any
          84    86    84   any
          56    98   101   any
         101   106   101   any

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifne          15
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #120                // Method org/xnio/conduits/AbstractStreamSourceConduit.read:([Ljava/nio/ByteBuffer;II)J
      14: lreturn
      15: iload_2
      16: iflt          36
      19: iload_2
      20: iload_3
      21: if_icmpgt     36
      24: iload_3
      25: iflt          36
      28: iload_2
      29: iload_3
      30: iadd
      31: aload_1
      32: arraylength
      33: if_icmple     44
      36: new           #122                // class java/lang/ArrayIndexOutOfBoundsException
      39: dup
      40: invokespecial #124                // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      43: athrow
      44: aload_0
      45: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      48: invokevirtual #82                 // Method org/xnio/ssl/JsseSslConduitEngine.isDataAvailable:()Z
      51: ifne          64
      54: aload_0
      55: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      58: invokevirtual #85                 // Method org/xnio/ssl/JsseSslConduitEngine.isInboundClosed:()Z
      61: ifne          74
      64: aload_0
      65: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      68: invokevirtual #88                 // Method org/xnio/ssl/JsseSslConduitEngine.isClosed:()Z
      71: ifeq          78
      74: ldc2_w        #125                // long -1l
      77: lreturn
      78: aload_0
      79: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      82: invokevirtual #92                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapLock:()Ljava/lang/Object;
      85: dup
      86: astore        7
      88: monitorenter
      89: aload_0
      90: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      93: invokevirtual #96                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapBuffer:()Ljava/nio/ByteBuffer;
      96: invokevirtual #101                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      99: astore        8
     101: aload_0
     102: aload         8
     104: invokespecial #79                 // Method org/xnio/conduits/AbstractStreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     107: istore        4
     109: aload         8
     111: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     114: pop
     115: goto          129
     118: astore        9
     120: aload         8
     122: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     125: pop
     126: aload         9
     128: athrow
     129: aload         7
     131: monitorexit
     132: goto          143
     135: astore        10
     137: aload         7
     139: monitorexit
     140: aload         10
     142: athrow
     143: aload_0
     144: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
     147: aload_1
     148: iload_2
     149: iload_3
     150: invokevirtual #130                // Method org/xnio/ssl/JsseSslConduitEngine.unwrap:([Ljava/nio/ByteBuffer;II)J
     153: lstore        5
     155: lload         5
     157: lconst_0
     158: lcmp
     159: ifne          172
     162: iload         4
     164: iconst_m1
     165: if_icmpne     172
     168: ldc2_w        #125                // long -1l
     171: lreturn
     172: lload         5
     174: lreturn
    Exception table:
       from    to  target type
         101   109   118   any
         118   120   118   any
          89   132   135   any
         135   140   135   any

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #137                // Method org/xnio/ssl/JsseSslConduitEngine.isFirstHandshake:()Z
      14: ifeq          24
      17: aload_0
      18: invokespecial #138                // Method org/xnio/conduits/AbstractStreamSourceConduit.wakeupReads:()V
      21: goto          28
      24: aload_0
      25: invokespecial #140                // Method org/xnio/conduits/AbstractStreamSourceConduit.resumeReads:()V
      28: return

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifeq          12
       7: aload_0
       8: invokespecial #144                // Method org/xnio/conduits/AbstractStreamSourceConduit.suspendReads:()V
      11: return
      12: aload_0
      13: invokespecial #146                // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
      16: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      11: invokevirtual #150                // Method org/xnio/ssl/JsseSslConduitEngine.awaitCanUnwrap:()V
      14: aload_0
      15: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      18: invokevirtual #82                 // Method org/xnio/ssl/JsseSslConduitEngine.isDataAvailable:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: invokespecial #152                // Method org/xnio/conduits/AbstractStreamSourceConduit.awaitReadable:()V
      29: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field tls:Z
       4: ifne          14
       7: aload_0
       8: lload_1
       9: aload_3
      10: invokespecial #155                // Method org/xnio/conduits/AbstractStreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      13: return
      14: aload_0
      15: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      18: invokevirtual #92                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapLock:()Ljava/lang/Object;
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      29: invokevirtual #96                 // Method org/xnio/ssl/JsseSslConduitEngine.getUnwrapBuffer:()Ljava/nio/ByteBuffer;
      32: invokevirtual #158                // Method java/nio/ByteBuffer.hasRemaining:()Z
      35: ifeq          42
      38: aload         4
      40: monitorexit
      41: return
      42: aload         4
      44: monitorexit
      45: goto          56
      48: astore        5
      50: aload         4
      52: monitorexit
      53: aload         5
      55: athrow
      56: aload_3
      57: lload_1
      58: invokevirtual #164                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      61: lstore        4
      63: invokestatic  #170                // Method java/lang/System.nanoTime:()J
      66: lstore        6
      68: aload_0
      69: getfield      #32                 // Field sslEngine:Lorg/xnio/ssl/JsseSslConduitEngine;
      72: lload_1
      73: aload_3
      74: invokevirtual #172                // Method org/xnio/ssl/JsseSslConduitEngine.awaitCanUnwrap:(JLjava/util/concurrent/TimeUnit;)V
      77: invokestatic  #170                // Method java/lang/System.nanoTime:()J
      80: lload         6
      82: lsub
      83: lstore        6
      85: lload         6
      87: lload         4
      89: lcmp
      90: ifle          94
      93: return
      94: aload_0
      95: lload         4
      97: lload         6
      99: lsub
     100: getstatic     #176                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     103: invokespecial #155                // Method org/xnio/conduits/AbstractStreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
     106: return
    Exception table:
       from    to  target type
          25    41    48   any
          42    45    48   any
          48    53    48   any
}
