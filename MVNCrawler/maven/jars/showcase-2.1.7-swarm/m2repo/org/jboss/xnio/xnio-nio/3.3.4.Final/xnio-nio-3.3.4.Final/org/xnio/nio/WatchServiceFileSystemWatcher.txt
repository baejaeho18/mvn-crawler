Compiled from "WatchServiceFileSystemWatcher.java"
class org.xnio.nio.WatchServiceFileSystemWatcher implements org.xnio.FileSystemWatcher,java.lang.Runnable {
  private static final java.util.concurrent.atomic.AtomicInteger threadIdCounter;

  public static final java.lang.String THREAD_NAME;

  private java.nio.file.WatchService watchService;

  private final java.util.Map<java.io.File, org.xnio.nio.WatchServiceFileSystemWatcher$PathData> files;

  private final java.util.Map<java.nio.file.WatchKey, org.xnio.nio.WatchServiceFileSystemWatcher$PathData> pathDataByKey;

  private volatile boolean stopped;

  private final java.lang.Thread watchThread;

  org.xnio.nio.WatchServiceFileSystemWatcher(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: invokestatic  #4                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      15: putfield      #5                  // Field files:Ljava/util/Map;
      18: aload_0
      19: new           #6                  // class java/util/IdentityHashMap
      22: dup
      23: invokespecial #7                  // Method java/util/IdentityHashMap."<init>":()V
      26: invokestatic  #4                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      29: putfield      #8                  // Field pathDataByKey:Ljava/util/Map;
      32: aload_0
      33: iconst_0
      34: putfield      #9                  // Field stopped:Z
      37: aload_0
      38: invokestatic  #10                 // Method java/nio/file/FileSystems.getDefault:()Ljava/nio/file/FileSystem;
      41: invokevirtual #11                 // Method java/nio/file/FileSystem.newWatchService:()Ljava/nio/file/WatchService;
      44: putfield      #12                 // Field watchService:Ljava/nio/file/WatchService;
      47: goto          60
      50: astore_3
      51: new           #14                 // class java/lang/RuntimeException
      54: dup
      55: aload_3
      56: invokespecial #15                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      59: athrow
      60: aload_0
      61: new           #16                 // class java/lang/Thread
      64: dup
      65: aload_0
      66: new           #17                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #20                 // String xnio-file-watcher[
      75: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #22                 // String ]-
      84: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: getstatic     #23                 // Field threadIdCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      90: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #26                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      99: putfield      #27                 // Field watchThread:Ljava/lang/Thread;
     102: aload_0
     103: getfield      #27                 // Field watchThread:Ljava/lang/Thread;
     106: iload_2
     107: invokevirtual #28                 // Method java/lang/Thread.setDaemon:(Z)V
     110: aload_0
     111: getfield      #27                 // Field watchThread:Ljava/lang/Thread;
     114: invokevirtual #29                 // Method java/lang/Thread.start:()V
     117: return
    Exception table:
       from    to  target type
          37    47    50   Class java/io/IOException

  public void run();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stopped:Z
       4: ifne          558
       7: aload_0
       8: getfield      #12                 // Field watchService:Ljava/nio/file/WatchService;
      11: invokeinterface #30,  1           // InterfaceMethod java/nio/file/WatchService.take:()Ljava/nio/file/WatchKey;
      16: astore_1
      17: aload_1
      18: ifnull        547
      21: aload_0
      22: getfield      #8                  // Field pathDataByKey:Ljava/util/Map;
      25: aload_1
      26: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #32                 // class org/xnio/nio/WatchServiceFileSystemWatcher$PathData
      34: astore_2
      35: aload_2
      36: ifnull        489
      39: new           #33                 // class java/util/ArrayList
      42: dup
      43: invokespecial #34                 // Method java/util/ArrayList."<init>":()V
      46: astore_3
      47: aload_1
      48: invokeinterface #35,  1           // InterfaceMethod java/nio/file/WatchKey.pollEvents:()Ljava/util/List;
      53: astore        4
      55: new           #36                 // class java/util/HashSet
      58: dup
      59: invokespecial #37                 // Method java/util/HashSet."<init>":()V
      62: astore        5
      64: new           #36                 // class java/util/HashSet
      67: dup
      68: invokespecial #37                 // Method java/util/HashSet."<init>":()V
      71: astore        6
      73: aload         4
      75: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      80: astore        7
      82: aload         7
      84: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          274
      92: aload         7
      94: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #41                 // class java/nio/file/WatchEvent
     102: astore        8
     104: aload         8
     106: invokeinterface #42,  1           // InterfaceMethod java/nio/file/WatchEvent.context:()Ljava/lang/Object;
     111: checkcast     #43                 // class java/nio/file/Path
     114: astore        9
     116: aload_1
     117: invokeinterface #44,  1           // InterfaceMethod java/nio/file/WatchKey.watchable:()Ljava/nio/file/Watchable;
     122: checkcast     #43                 // class java/nio/file/Path
     125: aload         9
     127: invokeinterface #45,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     132: invokeinterface #46,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     137: astore        10
     139: aload         8
     141: invokeinterface #47,  1           // InterfaceMethod java/nio/file/WatchEvent.kind:()Ljava/nio/file/WatchEvent$Kind;
     146: getstatic     #48                 // Field java/nio/file/StandardWatchEventKinds.ENTRY_CREATE:Ljava/nio/file/WatchEvent$Kind;
     149: if_acmpne     204
     152: getstatic     #49                 // Field org/xnio/FileChangeEvent$Type.ADDED:Lorg/xnio/FileChangeEvent$Type;
     155: astore        11
     157: aload         5
     159: aload         10
     161: invokeinterface #50,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     166: pop
     167: aload         10
     169: invokevirtual #51                 // Method java/io/File.isDirectory:()Z
     172: ifeq          253
     175: aload_0
     176: aload_2
     177: aload         10
     179: invokespecial #52                 // Method addWatchedDirectory:(Lorg/xnio/nio/WatchServiceFileSystemWatcher$PathData;Ljava/io/File;)V
     182: goto          253
     185: astore        12
     187: getstatic     #53                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     190: aload         12
     192: ldc           #54                 // String Could not add watched directory %s
     194: aload         10
     196: invokeinterface #55,  4           // InterfaceMethod org/xnio/nio/Log.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
     201: goto          253
     204: aload         8
     206: invokeinterface #47,  1           // InterfaceMethod java/nio/file/WatchEvent.kind:()Ljava/nio/file/WatchEvent$Kind;
     211: getstatic     #56                 // Field java/nio/file/StandardWatchEventKinds.ENTRY_MODIFY:Ljava/nio/file/WatchEvent$Kind;
     214: if_acmpne     225
     217: getstatic     #57                 // Field org/xnio/FileChangeEvent$Type.MODIFIED:Lorg/xnio/FileChangeEvent$Type;
     220: astore        11
     222: goto          253
     225: aload         8
     227: invokeinterface #47,  1           // InterfaceMethod java/nio/file/WatchEvent.kind:()Ljava/nio/file/WatchEvent$Kind;
     232: getstatic     #58                 // Field java/nio/file/StandardWatchEventKinds.ENTRY_DELETE:Ljava/nio/file/WatchEvent$Kind;
     235: if_acmpne     82
     238: getstatic     #59                 // Field org/xnio/FileChangeEvent$Type.REMOVED:Lorg/xnio/FileChangeEvent$Type;
     241: astore        11
     243: aload         6
     245: aload         10
     247: invokeinterface #50,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     252: pop
     253: aload_3
     254: new           #60                 // class org/xnio/FileChangeEvent
     257: dup
     258: aload         10
     260: aload         11
     262: invokespecial #61                 // Method org/xnio/FileChangeEvent."<init>":(Ljava/io/File;Lorg/xnio/FileChangeEvent$Type;)V
     265: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     270: pop
     271: goto          82
     274: aload_1
     275: invokeinterface #35,  1           // InterfaceMethod java/nio/file/WatchKey.pollEvents:()Ljava/util/List;
     280: invokeinterface #63,  1           // InterfaceMethod java/util/List.clear:()V
     285: aload_3
     286: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     291: astore        7
     293: aload         7
     295: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     300: ifeq          438
     303: aload         7
     305: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     310: checkcast     #60                 // class org/xnio/FileChangeEvent
     313: astore        8
     315: aload         8
     317: invokevirtual #64                 // Method org/xnio/FileChangeEvent.getType:()Lorg/xnio/FileChangeEvent$Type;
     320: getstatic     #57                 // Field org/xnio/FileChangeEvent$Type.MODIFIED:Lorg/xnio/FileChangeEvent$Type;
     323: if_acmpne     366
     326: aload         5
     328: aload         8
     330: invokevirtual #65                 // Method org/xnio/FileChangeEvent.getFile:()Ljava/io/File;
     333: invokeinterface #66,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     338: ifne          356
     341: aload         6
     343: aload         8
     345: invokevirtual #65                 // Method org/xnio/FileChangeEvent.getFile:()Ljava/io/File;
     348: invokeinterface #66,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     353: ifeq          435
     356: aload         7
     358: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.remove:()V
     363: goto          435
     366: aload         8
     368: invokevirtual #64                 // Method org/xnio/FileChangeEvent.getType:()Lorg/xnio/FileChangeEvent$Type;
     371: getstatic     #49                 // Field org/xnio/FileChangeEvent$Type.ADDED:Lorg/xnio/FileChangeEvent$Type;
     374: if_acmpne     402
     377: aload         6
     379: aload         8
     381: invokevirtual #65                 // Method org/xnio/FileChangeEvent.getFile:()Ljava/io/File;
     384: invokeinterface #66,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     389: ifeq          435
     392: aload         7
     394: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.remove:()V
     399: goto          435
     402: aload         8
     404: invokevirtual #64                 // Method org/xnio/FileChangeEvent.getType:()Lorg/xnio/FileChangeEvent$Type;
     407: getstatic     #59                 // Field org/xnio/FileChangeEvent$Type.REMOVED:Lorg/xnio/FileChangeEvent$Type;
     410: if_acmpne     435
     413: aload         5
     415: aload         8
     417: invokevirtual #65                 // Method org/xnio/FileChangeEvent.getFile:()Ljava/io/File;
     420: invokeinterface #66,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     425: ifeq          435
     428: aload         7
     430: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.remove:()V
     435: goto          293
     438: aload_3
     439: invokeinterface #68,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     444: ifne          489
     447: aload_2
     448: getfield      #69                 // Field org/xnio/nio/WatchServiceFileSystemWatcher$PathData.callbacks:Ljava/util/List;
     451: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     456: astore        8
     458: aload         8
     460: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     465: ifeq          489
     468: aload         8
     470: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     475: checkcast     #70                 // class org/xnio/FileChangeCallback
     478: astore        9
     480: aload         9
     482: aload_3
     483: invokestatic  #71                 // Method invokeCallback:(Lorg/xnio/FileChangeCallback;Ljava/util/List;)V
     486: goto          458
     489: aload_1
     490: invokeinterface #72,  1           // InterfaceMethod java/nio/file/WatchKey.reset:()Z
     495: ifne          547
     498: aload_0
     499: getfield      #5                  // Field files:Ljava/util/Map;
     502: aload_1
     503: invokeinterface #44,  1           // InterfaceMethod java/nio/file/WatchKey.watchable:()Ljava/nio/file/Watchable;
     508: invokeinterface #73,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     513: pop
     514: goto          547
     517: astore        13
     519: aload_1
     520: invokeinterface #72,  1           // InterfaceMethod java/nio/file/WatchKey.reset:()Z
     525: ifne          544
     528: aload_0
     529: getfield      #5                  // Field files:Ljava/util/Map;
     532: aload_1
     533: invokeinterface #44,  1           // InterfaceMethod java/nio/file/WatchKey.watchable:()Ljava/nio/file/Watchable;
     538: invokeinterface #73,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     543: pop
     544: aload         13
     546: athrow
     547: goto          0
     550: astore_1
     551: goto          0
     554: astore_1
     555: goto          558
     558: return
    Exception table:
       from    to  target type
         175   182   185   Class java/io/IOException
          21   489   517   any
         517   519   517   any
           7   547   550   Class java/lang/InterruptedException
           7   547   554   Class java/nio/file/ClosedWatchServiceException

  public synchronized void watchPath(java.io.File, org.xnio.FileChangeCallback);
    Code:
       0: aload_0
       1: getfield      #5                  // Field files:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class org/xnio/nio/WatchServiceFileSystemWatcher$PathData
      13: astore_3
      14: aload_3
      15: ifnonnull     103
      18: aload_1
      19: invokestatic  #76                 // Method doScan:(Ljava/io/File;)Ljava/util/Map;
      22: invokeinterface #77,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      27: astore        4
      29: aload_1
      30: invokevirtual #78                 // Method java/io/File.toURI:()Ljava/net/URI;
      33: invokestatic  #79                 // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      36: astore        5
      38: new           #32                 // class org/xnio/nio/WatchServiceFileSystemWatcher$PathData
      41: dup
      42: aload_0
      43: aload         5
      45: aconst_null
      46: invokespecial #80                 // Method org/xnio/nio/WatchServiceFileSystemWatcher$PathData."<init>":(Lorg/xnio/nio/WatchServiceFileSystemWatcher;Ljava/nio/file/Path;Lorg/xnio/nio/WatchServiceFileSystemWatcher$1;)V
      49: astore_3
      50: aload         4
      52: invokeinterface #81,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: astore        6
      59: aload         6
      61: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          91
      69: aload         6
      71: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #82                 // class java/io/File
      79: astore        7
      81: aload_0
      82: aload_3
      83: aload         7
      85: invokespecial #52                 // Method addWatchedDirectory:(Lorg/xnio/nio/WatchServiceFileSystemWatcher$PathData;Ljava/io/File;)V
      88: goto          59
      91: aload_0
      92: getfield      #5                  // Field files:Ljava/util/Map;
      95: aload_1
      96: aload_3
      97: invokeinterface #83,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: aload_3
     104: getfield      #69                 // Field org/xnio/nio/WatchServiceFileSystemWatcher$PathData.callbacks:Ljava/util/List;
     107: aload_2
     108: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     113: pop
     114: goto          127
     117: astore_3
     118: new           #14                 // class java/lang/RuntimeException
     121: dup
     122: aload_3
     123: invokespecial #15                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     126: athrow
     127: return
    Exception table:
       from    to  target type
           0   114   117   Class java/io/IOException

  private void addWatchedDirectory(org.xnio.nio.WatchServiceFileSystemWatcher$PathData, java.io.File) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #78                 // Method java/io/File.toURI:()Ljava/net/URI;
       4: invokestatic  #79                 // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #12                 // Field watchService:Ljava/nio/file/WatchService;
      13: iconst_3
      14: anewarray     #84                 // class java/nio/file/WatchEvent$Kind
      17: dup
      18: iconst_0
      19: getstatic     #48                 // Field java/nio/file/StandardWatchEventKinds.ENTRY_CREATE:Ljava/nio/file/WatchEvent$Kind;
      22: aastore
      23: dup
      24: iconst_1
      25: getstatic     #58                 // Field java/nio/file/StandardWatchEventKinds.ENTRY_DELETE:Ljava/nio/file/WatchEvent$Kind;
      28: aastore
      29: dup
      30: iconst_2
      31: getstatic     #56                 // Field java/nio/file/StandardWatchEventKinds.ENTRY_MODIFY:Ljava/nio/file/WatchEvent$Kind;
      34: aastore
      35: invokeinterface #85,  3           // InterfaceMethod java/nio/file/Path.register:(Ljava/nio/file/WatchService;[Ljava/nio/file/WatchEvent$Kind;)Ljava/nio/file/WatchKey;
      40: astore        4
      42: aload_0
      43: getfield      #8                  // Field pathDataByKey:Ljava/util/Map;
      46: aload         4
      48: aload_1
      49: invokeinterface #83,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_1
      56: getfield      #86                 // Field org/xnio/nio/WatchServiceFileSystemWatcher$PathData.keys:Ljava/util/List;
      59: aload         4
      61: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: return

  public synchronized void unwatchPath(java.io.File, org.xnio.FileChangeCallback);
    Code:
       0: aload_0
       1: getfield      #5                  // Field files:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class org/xnio/nio/WatchServiceFileSystemWatcher$PathData
      13: astore_3
      14: aload_3
      15: ifnull        107
      18: aload_3
      19: getfield      #69                 // Field org/xnio/nio/WatchServiceFileSystemWatcher$PathData.callbacks:Ljava/util/List;
      22: aload_2
      23: invokeinterface #87,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      28: pop
      29: aload_3
      30: getfield      #69                 // Field org/xnio/nio/WatchServiceFileSystemWatcher$PathData.callbacks:Ljava/util/List;
      33: invokeinterface #68,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      38: ifeq          107
      41: aload_0
      42: getfield      #5                  // Field files:Ljava/util/Map;
      45: aload_1
      46: invokeinterface #73,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload_3
      53: getfield      #86                 // Field org/xnio/nio/WatchServiceFileSystemWatcher$PathData.keys:Ljava/util/List;
      56: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      61: astore        4
      63: aload         4
      65: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          107
      73: aload         4
      75: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #88                 // class java/nio/file/WatchKey
      83: astore        5
      85: aload         5
      87: invokeinterface #89,  1           // InterfaceMethod java/nio/file/WatchKey.cancel:()V
      92: aload_0
      93: getfield      #8                  // Field pathDataByKey:Ljava/util/Map;
      96: aload         5
      98: invokeinterface #73,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          63
     107: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field stopped:Z
       5: aload_0
       6: getfield      #27                 // Field watchThread:Ljava/lang/Thread;
       9: invokevirtual #90                 // Method java/lang/Thread.interrupt:()V
      12: aload_0
      13: getfield      #12                 // Field watchService:Ljava/nio/file/WatchService;
      16: invokestatic  #91                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      19: return

  private static java.util.Map<java.io.File, java.lang.Long> doScan(java.io.File);
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: new           #92                 // class java/util/ArrayDeque
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayDeque."<init>":()V
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokeinterface #94,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_2
      25: invokeinterface #95,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      30: ifne          129
      33: aload_2
      34: invokeinterface #96,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      39: checkcast     #82                 // class java/io/File
      42: astore_3
      43: aload_3
      44: invokevirtual #51                 // Method java/io/File.isDirectory:()Z
      47: ifeq          126
      50: aload_1
      51: aload_3
      52: aload_3
      53: invokevirtual #97                 // Method java/io/File.lastModified:()J
      56: invokestatic  #98                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      59: invokeinterface #83,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_3
      66: invokevirtual #99                 // Method java/io/File.listFiles:()[Ljava/io/File;
      69: astore        4
      71: aload         4
      73: ifnull        126
      76: aload         4
      78: astore        5
      80: aload         5
      82: arraylength
      83: istore        6
      85: iconst_0
      86: istore        7
      88: iload         7
      90: iload         6
      92: if_icmpge     126
      95: aload         5
      97: iload         7
      99: aaload
     100: astore        8
     102: aload_2
     103: new           #82                 // class java/io/File
     106: dup
     107: aload         8
     109: invokevirtual #100                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     112: invokespecial #101                // Method java/io/File."<init>":(Ljava/lang/String;)V
     115: invokeinterface #102,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
     120: iinc          7, 1
     123: goto          88
     126: goto          24
     129: aload_1
     130: areturn

  private static void invokeCallback(org.xnio.FileChangeCallback, java.util.List<org.xnio.FileChangeEvent>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #103,  2          // InterfaceMethod org/xnio/FileChangeCallback.handleChanges:(Ljava/util/Collection;)V
       7: goto          20
      10: astore_2
      11: getstatic     #53                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      14: aload_2
      15: invokeinterface #105,  2          // InterfaceMethod org/xnio/nio/Log.failedToInvokeFileWatchCallback:(Ljava/lang/Throwable;)V
      20: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Exception

  static {};
    Code:
       0: new           #106                // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #107                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: putstatic     #23                 // Field threadIdCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      11: return
}
