Compiled from "SplitStreamSinkChannel.java"
public final class org.xnio.channels.SplitStreamSinkChannel implements org.xnio.channels.StreamSinkChannel, org.xnio.channels.WriteListenerSettable<org.xnio.channels.SplitStreamSinkChannel>, org.xnio.channels.CloseListenerSettable<org.xnio.channels.SplitStreamSinkChannel> {
  private final org.xnio.channels.StreamSinkChannel delegate;

  private volatile int state;

  private org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSinkChannel> writeListener;

  private org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSinkChannel> closeListener;

  private static final int FLAG_DELEGATE_CONFIG;

  private static final int FLAG_CLOSE_REQ;

  private static final int FLAG_CLOSE_COMP;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.channels.SplitStreamSinkChannel> stateUpdater;

  public org.xnio.channels.SplitStreamSinkChannel(org.xnio.channels.StreamSinkChannel, boolean);
    Code:
       0: aload_0
       1: invokespecial #45                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       9: aload_0
      10: iload_2
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: putfield      #49                 // Field state:I
      22: aload_1
      23: invokeinterface #53,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      28: new           #14                 // class org/xnio/channels/SplitStreamSinkChannel$1
      31: dup
      32: aload_0
      33: invokespecial #56                 // Method org/xnio/channels/SplitStreamSinkChannel$1."<init>":(Lorg/xnio/channels/SplitStreamSinkChannel;)V
      36: invokeinterface #60,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      41: return

  public org.xnio.channels.SplitStreamSinkChannel(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #67                 // Method "<init>":(Lorg/xnio/channels/StreamSinkChannel;Z)V
       6: return

  public void setWriteListener(org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field writeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSinkChannel> getWriteListener();
    Code:
       0: aload_0
       1: getfield      #70                 // Field writeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setCloseListener(org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field closeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.SplitStreamSinkChannel> getCloseListener();
    Code:
       0: aload_0
       1: getfield      #75                 // Field closeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.SplitStreamSinkChannel> getCloseSetter();
    Code:
       0: new           #21                 // class org/xnio/channels/CloseListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #80                 // Method org/xnio/channels/CloseListenerSettable$Setter."<init>":(Lorg/xnio/channels/CloseListenerSettable;)V
       8: areturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:(Ljava/nio/ByteBuffer;)I
      10: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #91,  4           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:([Ljava/nio/ByteBuffer;II)J
      12: lreturn

  public long writeFinal(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: invokeinterface #98,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:([Ljava/nio/ByteBuffer;)J
      10: lreturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.SplitStreamSinkChannel> getWriteSetter();
    Code:
       0: new           #23                 // class org/xnio/channels/WriteListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #101                // Method org/xnio/channels/WriteListenerSettable$Setter."<init>":(Lorg/xnio/channels/WriteListenerSettable;)V
       8: areturn

  public void shutdownWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #49                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: invokestatic  #108                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          14
      13: return
      14: iload_1
      15: iconst_2
      16: ior
      17: istore_2
      18: getstatic     #110                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokevirtual #116                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      27: ifeq          0
      30: aload_0
      31: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      34: invokeinterface #118,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      39: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #49                 // Field state:I
       4: iconst_2
       5: invokestatic  #125                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #127                // Method shutdownWrites:()V
       4: aload_0
       5: invokevirtual #130                // Method flush:()Z
       8: pop
       9: return

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #49                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_4
       7: invokestatic  #108                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: aload_0
      16: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      19: invokeinterface #131,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      24: istore_3
      25: iload_3
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: iload_1
      32: iconst_2
      33: invokestatic  #125                // Method org/xnio/Bits.allAreClear:(II)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: iload_1
      42: iconst_4
      43: ior
      44: istore_2
      45: getstatic     #110                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      48: aload_0
      49: iload_1
      50: iload_2
      51: invokevirtual #116                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      54: ifeq          31
      57: aload_0
      58: aload_0
      59: getfield      #75                 // Field closeListener:Lorg/xnio/ChannelListener;
      62: invokestatic  #137                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
      65: pop
      66: iconst_1
      67: ireturn

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokeinterface #142,  6          // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
      13: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #149,  5          // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Lorg/xnio/channels/StreamSourceChannel;JLjava/nio/ByteBuffer;)J
      13: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: invokeinterface #155,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      10: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #157,  4          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;II)J
      12: lreturn

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_1
       5: invokeinterface #159,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
      10: lreturn

  public void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #162,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
       9: return

  public void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #165,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
       9: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #168,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.isWriteResumed:()Z
       9: ireturn

  public void wakeupWrites();
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #171,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.wakeupWrites:()V
       9: return

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #174,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:()V
       9: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #177,  4          // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public org.xnio.XnioExecutor getWriteThread();
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #185,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #189,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #193,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #49                 // Field state:I
       4: iconst_1
       5: invokestatic  #108                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          25
      11: aload_0
      12: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: aload_1
      16: aload_2
      17: invokeinterface #199,  3          // InterfaceMethod org/xnio/channels/StreamSinkChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      22: goto          26
      25: aconst_null
      26: areturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #49                 // Field state:I
       4: iconst_1
       5: invokestatic  #108                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          24
      11: aload_0
      12: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: aload_1
      16: invokeinterface #209,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      21: goto          25
      24: aconst_null
      25: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #49                 // Field state:I
       4: iconst_1
       5: invokestatic  #108                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          24
      11: aload_0
      12: getfield      #47                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: aload_1
      16: invokeinterface #213,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.supportsOption:(Lorg/xnio/Option;)Z
      21: goto          25
      24: iconst_0
      25: ireturn

  static org.xnio.ChannelListener access$000(org.xnio.channels.SplitStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #70                 // Field writeListener:Lorg/xnio/ChannelListener;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/xnio/channels/SplitStreamSinkChannel
       2: ldc           #219                // String state
       4: invokestatic  #223                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #110                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
