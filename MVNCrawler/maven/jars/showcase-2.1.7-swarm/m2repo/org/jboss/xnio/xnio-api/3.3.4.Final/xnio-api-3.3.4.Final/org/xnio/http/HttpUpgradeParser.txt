Compiled from "HttpUpgradeParser.java"
class org.xnio.http.HttpUpgradeParser {
  private static final int VERSION;

  private static final int STATUS_CODE;

  private static final int MESSAGE;

  private static final int HEADER_NAME;

  private static final int HEADER_VALUE;

  private static final int COMPLETE;

  private int parseState;

  private java.lang.String httpVersion;

  private int responseCode;

  private java.lang.String message;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  private final java.lang.StringBuilder current;

  private java.lang.String headerName;

  org.xnio.http.HttpUpgradeParser();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #35                 // Field parseState:I
       9: aload_0
      10: new           #37                 // class java/util/HashMap
      13: dup
      14: invokespecial #38                 // Method java/util/HashMap."<init>":()V
      17: putfield      #40                 // Field headers:Ljava/util/Map;
      20: aload_0
      21: new           #42                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      28: putfield      #45                 // Field current:Ljava/lang/StringBuilder;
      31: return

  void parse(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          100
       7: aload_0
       8: invokevirtual #60                 // Method isComplete:()Z
      11: ifne          100
      14: aload_0
      15: getfield      #35                 // Field parseState:I
      18: tableswitch   { // 0 to 5
                     0: 56
                     1: 64
                     2: 72
                     3: 80
                     4: 88
                     5: 96
               default: 97
          }
      56: aload_0
      57: aload_1
      58: invokespecial #63                 // Method parseVersion:(Ljava/nio/ByteBuffer;)V
      61: goto          97
      64: aload_0
      65: aload_1
      66: invokespecial #66                 // Method parseStatusCode:(Ljava/nio/ByteBuffer;)V
      69: goto          97
      72: aload_0
      73: aload_1
      74: invokespecial #69                 // Method parseMessage:(Ljava/nio/ByteBuffer;)V
      77: goto          97
      80: aload_0
      81: aload_1
      82: invokespecial #72                 // Method parseHeaderName:(Ljava/nio/ByteBuffer;)V
      85: goto          97
      88: aload_0
      89: aload_1
      90: invokespecial #75                 // Method parseHeaderValue:(Ljava/nio/ByteBuffer;)V
      93: goto          97
      96: return
      97: goto          0
     100: return

  private void parseHeaderValue(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          126
       7: aload_1
       8: invokevirtual #81                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        13
      15: if_icmpeq     24
      18: iload_2
      19: bipush        10
      21: if_icmpne     113
      24: aload_0
      25: getfield      #83                 // Field headerName:Ljava/lang/String;
      28: getstatic     #89                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      31: invokevirtual #95                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      34: astore_3
      35: aload_0
      36: getfield      #40                 // Field headers:Ljava/util/Map;
      39: aload_3
      40: invokeinterface #100,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #102                // class java/util/List
      48: astore        4
      50: aload         4
      52: ifnonnull     76
      55: aload_0
      56: getfield      #40                 // Field headers:Ljava/util/Map;
      59: aload_3
      60: new           #104                // class java/util/ArrayList
      63: dup
      64: invokespecial #105                // Method java/util/ArrayList."<init>":()V
      67: dup
      68: astore        4
      70: invokeinterface #109,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload         4
      78: aload_0
      79: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      82: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokevirtual #116                // Method java/lang/String.trim:()Ljava/lang/String;
      88: invokeinterface #120,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      93: pop
      94: aload_0
      95: dup
      96: getfield      #35                 // Field parseState:I
      99: iconst_1
     100: isub
     101: putfield      #35                 // Field parseState:I
     104: aload_0
     105: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
     108: iconst_0
     109: invokevirtual #124                // Method java/lang/StringBuilder.setLength:(I)V
     112: return
     113: aload_0
     114: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
     117: iload_2
     118: i2c
     119: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     122: pop
     123: goto          0
     126: return

  private void parseHeaderName(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          169
       7: aload_1
       8: invokevirtual #81                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        13
      15: if_icmpeq     24
      18: iload_2
      19: bipush        10
      21: if_icmpne     117
      24: aload_0
      25: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      28: invokevirtual #138                // Method java/lang/StringBuilder.length:()I
      31: iconst_2
      32: if_icmple     45
      35: new           #51                 // class java/io/IOException
      38: dup
      39: ldc           #140                // String Invalid response
      41: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      49: invokevirtual #138                // Method java/lang/StringBuilder.length:()I
      52: iconst_2
      53: if_icmpne     104
      56: aload_0
      57: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      60: iconst_0
      61: invokevirtual #147                // Method java/lang/StringBuilder.charAt:(I)C
      64: bipush        10
      66: if_icmpne     94
      69: aload_0
      70: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      73: iconst_1
      74: invokevirtual #147                // Method java/lang/StringBuilder.charAt:(I)C
      77: bipush        13
      79: if_icmpne     94
      82: iload_2
      83: bipush        10
      85: if_icmpne     94
      88: aload_0
      89: iconst_5
      90: putfield      #35                 // Field parseState:I
      93: return
      94: new           #51                 // class java/io/IOException
      97: dup
      98: ldc           #140                // String Invalid response
     100: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_0
     105: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
     108: iload_2
     109: i2c
     110: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     113: pop
     114: goto          166
     117: iload_2
     118: bipush        58
     120: if_icmpne     156
     123: aload_0
     124: aload_0
     125: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
     128: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokevirtual #116                // Method java/lang/String.trim:()Ljava/lang/String;
     134: putfield      #83                 // Field headerName:Ljava/lang/String;
     137: aload_0
     138: dup
     139: getfield      #35                 // Field parseState:I
     142: iconst_1
     143: iadd
     144: putfield      #35                 // Field parseState:I
     147: aload_0
     148: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
     151: iconst_0
     152: invokevirtual #124                // Method java/lang/StringBuilder.setLength:(I)V
     155: return
     156: aload_0
     157: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
     160: iload_2
     161: i2c
     162: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     165: pop
     166: goto          0
     169: return

  private void parseMessage(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          70
       7: aload_1
       8: invokevirtual #81                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        13
      15: if_icmpeq     24
      18: iload_2
      19: bipush        10
      21: if_icmpne     57
      24: aload_0
      25: aload_0
      26: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      29: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokevirtual #116                // Method java/lang/String.trim:()Ljava/lang/String;
      35: putfield      #149                // Field message:Ljava/lang/String;
      38: aload_0
      39: dup
      40: getfield      #35                 // Field parseState:I
      43: iconst_1
      44: iadd
      45: putfield      #35                 // Field parseState:I
      48: aload_0
      49: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      52: iconst_0
      53: invokevirtual #124                // Method java/lang/StringBuilder.setLength:(I)V
      56: return
      57: aload_0
      58: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      61: iload_2
      62: i2c
      63: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      66: pop
      67: goto          0
      70: return

  private void parseStatusCode(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          95
       7: aload_1
       8: invokevirtual #81                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        13
      15: if_icmpeq     24
      18: iload_2
      19: bipush        10
      21: if_icmpne     34
      24: new           #51                 // class java/io/IOException
      27: dup
      28: ldc           #140                // String Invalid response
      30: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_2
      35: bipush        32
      37: if_icmpeq     46
      40: iload_2
      41: bipush        9
      43: if_icmpne     82
      46: aload_0
      47: aload_0
      48: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      51: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokevirtual #116                // Method java/lang/String.trim:()Ljava/lang/String;
      57: invokestatic  #155                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      60: putfield      #157                // Field responseCode:I
      63: aload_0
      64: dup
      65: getfield      #35                 // Field parseState:I
      68: iconst_1
      69: iadd
      70: putfield      #35                 // Field parseState:I
      73: aload_0
      74: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      77: iconst_0
      78: invokevirtual #124                // Method java/lang/StringBuilder.setLength:(I)V
      81: return
      82: aload_0
      83: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      86: iload_2
      87: i2c
      88: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      91: pop
      92: goto          0
      95: return

  private void parseVersion(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          92
       7: aload_1
       8: invokevirtual #81                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        13
      15: if_icmpeq     24
      18: iload_2
      19: bipush        10
      21: if_icmpne     34
      24: new           #51                 // class java/io/IOException
      27: dup
      28: ldc           #140                // String Invalid response
      30: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_2
      35: bipush        32
      37: if_icmpeq     46
      40: iload_2
      41: bipush        9
      43: if_icmpne     79
      46: aload_0
      47: aload_0
      48: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      51: invokevirtual #113                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokevirtual #116                // Method java/lang/String.trim:()Ljava/lang/String;
      57: putfield      #159                // Field httpVersion:Ljava/lang/String;
      60: aload_0
      61: dup
      62: getfield      #35                 // Field parseState:I
      65: iconst_1
      66: iadd
      67: putfield      #35                 // Field parseState:I
      70: aload_0
      71: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      74: iconst_0
      75: invokevirtual #124                // Method java/lang/StringBuilder.setLength:(I)V
      78: return
      79: aload_0
      80: getfield      #45                 // Field current:Ljava/lang/StringBuilder;
      83: iload_2
      84: i2c
      85: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: goto          0
      92: return

  boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #35                 // Field parseState:I
       4: iconst_5
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.String getHttpVersion();
    Code:
       0: aload_0
       1: getfield      #159                // Field httpVersion:Ljava/lang/String;
       4: areturn

  public int getResponseCode();
    Code:
       0: aload_0
       1: getfield      #157                // Field responseCode:I
       4: ireturn

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #149                // Field message:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getHeaders();
    Code:
       0: aload_0
       1: getfield      #40                 // Field headers:Ljava/util/Map;
       4: areturn
}
