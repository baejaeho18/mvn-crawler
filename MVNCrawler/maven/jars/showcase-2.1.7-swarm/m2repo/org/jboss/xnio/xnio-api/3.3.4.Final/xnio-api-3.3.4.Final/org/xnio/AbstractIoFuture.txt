Compiled from "AbstractIoFuture.java"
public abstract class org.xnio.AbstractIoFuture<T> implements org.xnio.IoFuture<T> {
  private final java.lang.Object lock;

  private org.xnio.IoFuture$Status status;

  private java.lang.Object result;

  private java.util.List<java.lang.Runnable> notifierList;

  private java.util.List<org.xnio.Cancellable> cancellables;

  private static final java.util.List<org.xnio.Cancellable> CANCEL_REQUESTED;

  protected org.xnio.AbstractIoFuture();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/lang/Object
       8: dup
       9: invokespecial #33                 // Method java/lang/Object."<init>":()V
      12: putfield      #35                 // Field lock:Ljava/lang/Object;
      15: aload_0
      16: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      19: putfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      22: return

  public org.xnio.IoFuture$Status getStatus();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      11: aload_1
      12: monitorexit
      13: areturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public org.xnio.IoFuture$Status await();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: invokestatic  #56                 // Method java/lang/Thread.interrupted:()Z
      10: istore_2
      11: aload_0
      12: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      15: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      18: if_acmpne     47
      21: invokestatic  #61                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
      24: aload_0
      25: getfield      #35                 // Field lock:Ljava/lang/Object;
      28: invokevirtual #64                 // Method java/lang/Object.wait:()V
      31: goto          37
      34: astore_3
      35: iconst_1
      36: istore_2
      37: aload_0
      38: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      41: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      44: if_acmpeq     24
      47: iload_2
      48: ifeq          75
      51: invokestatic  #68                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      54: invokevirtual #71                 // Method java/lang/Thread.interrupt:()V
      57: goto          75
      60: astore        4
      62: iload_2
      63: ifeq          72
      66: invokestatic  #68                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      69: invokevirtual #71                 // Method java/lang/Thread.interrupt:()V
      72: aload         4
      74: athrow
      75: aload_0
      76: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      79: aload_1
      80: monitorexit
      81: areturn
      82: astore        5
      84: aload_1
      85: monitorexit
      86: aload         5
      88: athrow
    Exception table:
       from    to  target type
          24    31    34   Class java/lang/InterruptedException
          11    47    60   any
          60    62    60   any
           7    81    82   any
          82    86    82   any

  public org.xnio.IoFuture$Status await(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          8
       6: lconst_0
       7: lstore_1
       8: aload_3
       9: lload_1
      10: invokevirtual #82                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      13: lstore        4
      15: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      18: lstore        6
      20: aload_0
      21: getfield      #35                 // Field lock:Ljava/lang/Object;
      24: dup
      25: astore        11
      27: monitorenter
      28: invokestatic  #56                 // Method java/lang/Thread.interrupted:()Z
      31: istore        12
      33: aload_0
      34: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      37: dup
      38: astore        10
      40: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      43: if_acmpne     157
      46: lload         4
      48: ldc2_w        #89                 // long 1000000l
      51: ldiv
      52: dup2
      53: lstore        8
      55: lconst_0
      56: lcmp
      57: ifle          157
      60: invokestatic  #61                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
      63: aload_0
      64: getfield      #35                 // Field lock:Ljava/lang/Object;
      67: lload         8
      69: invokevirtual #93                 // Method java/lang/Object.wait:(J)V
      72: lload         4
      74: lload         6
      76: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      79: dup2
      80: lstore        6
      82: lsub
      83: ladd
      84: lstore        4
      86: goto          130
      89: astore        13
      91: iconst_1
      92: istore        12
      94: lload         4
      96: lload         6
      98: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
     101: dup2
     102: lstore        6
     104: lsub
     105: ladd
     106: lstore        4
     108: goto          130
     111: astore        14
     113: lload         4
     115: lload         6
     117: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
     120: dup2
     121: lstore        6
     123: lsub
     124: ladd
     125: lstore        4
     127: aload         14
     129: athrow
     130: aload_0
     131: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
     134: dup
     135: astore        10
     137: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
     140: if_acmpne     157
     143: lload         4
     145: ldc2_w        #89                 // long 1000000l
     148: ldiv
     149: dup2
     150: lstore        8
     152: lconst_0
     153: lcmp
     154: ifgt          63
     157: iload         12
     159: ifeq          187
     162: invokestatic  #68                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     165: invokevirtual #71                 // Method java/lang/Thread.interrupt:()V
     168: goto          187
     171: astore        15
     173: iload         12
     175: ifeq          184
     178: invokestatic  #68                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     181: invokevirtual #71                 // Method java/lang/Thread.interrupt:()V
     184: aload         15
     186: athrow
     187: aload         10
     189: aload         11
     191: monitorexit
     192: areturn
     193: astore        16
     195: aload         11
     197: monitorexit
     198: aload         16
     200: athrow
    Exception table:
       from    to  target type
          63    72    89   Class java/lang/InterruptedException
          63    72   111   any
          89    94   111   any
         111   113   111   any
          33   157   171   any
         171   173   171   any
          28   192   193   any
         193   198   193   any

  public org.xnio.IoFuture$Status awaitInterruptibly() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      11: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      14: if_acmpne     37
      17: invokestatic  #61                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
      20: aload_0
      21: getfield      #35                 // Field lock:Ljava/lang/Object;
      24: invokevirtual #64                 // Method java/lang/Object.wait:()V
      27: aload_0
      28: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      31: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      34: if_acmpeq     20
      37: aload_0
      38: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      41: aload_1
      42: monitorexit
      43: areturn
      44: astore_2
      45: aload_1
      46: monitorexit
      47: aload_2
      48: athrow
    Exception table:
       from    to  target type
           7    43    44   any
          44    47    44   any

  public org.xnio.IoFuture$Status awaitInterruptibly(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          8
       6: lconst_0
       7: lstore_1
       8: aload_3
       9: lload_1
      10: invokevirtual #82                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      13: lstore        4
      15: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      18: lstore        6
      20: aload_0
      21: getfield      #35                 // Field lock:Ljava/lang/Object;
      24: dup
      25: astore        11
      27: monitorenter
      28: aload_0
      29: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      32: dup
      33: astore        10
      35: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      38: if_acmpne     108
      41: lload         4
      43: ldc2_w        #89                 // long 1000000l
      46: ldiv
      47: dup2
      48: lstore        8
      50: lconst_0
      51: lcmp
      52: ifle          108
      55: invokestatic  #61                 // Method org/xnio/Xnio.checkBlockingAllowed:()V
      58: aload_0
      59: getfield      #35                 // Field lock:Ljava/lang/Object;
      62: lload         8
      64: invokevirtual #93                 // Method java/lang/Object.wait:(J)V
      67: lload         4
      69: lload         6
      71: invokestatic  #88                 // Method java/lang/System.nanoTime:()J
      74: dup2
      75: lstore        6
      77: lsub
      78: ladd
      79: lstore        4
      81: aload_0
      82: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      85: dup
      86: astore        10
      88: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      91: if_acmpne     108
      94: lload         4
      96: ldc2_w        #89                 // long 1000000l
      99: ldiv
     100: dup2
     101: lstore        8
     103: lconst_0
     104: lcmp
     105: ifgt          58
     108: aload         10
     110: aload         11
     112: monitorexit
     113: areturn
     114: astore        12
     116: aload         11
     118: monitorexit
     119: aload         12
     121: athrow
    Exception table:
       from    to  target type
          28   113   114   any
         114   119   114   any

  public T get() throws java.io.IOException, java.util.concurrent.CancellationException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: getstatic     #111                // Field org/xnio/AbstractIoFuture$2.$SwitchMap$org$xnio$IoFuture$Status:[I
      10: aload_0
      11: invokevirtual #113                // Method await:()Lorg/xnio/IoFuture$Status;
      14: invokevirtual #117                // Method org/xnio/IoFuture$Status.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 3
                     1: 44
                     2: 51
                     3: 59
               default: 68
          }
      44: aload_0
      45: getfield      #119                // Field result:Ljava/lang/Object;
      48: aload_1
      49: monitorexit
      50: areturn
      51: aload_0
      52: getfield      #119                // Field result:Ljava/lang/Object;
      55: checkcast     #105                // class java/io/IOException
      58: athrow
      59: getstatic     #125                // Field org/xnio/_private/Messages.futureMsg:Lorg/xnio/_private/Messages;
      62: invokeinterface #129,  1          // InterfaceMethod org/xnio/_private/Messages.opCancelled:()Ljava/util/concurrent/CancellationException;
      67: athrow
      68: new           #131                // class java/lang/IllegalStateException
      71: dup
      72: invokespecial #132                // Method java/lang/IllegalStateException."<init>":()V
      75: athrow
      76: astore_2
      77: aload_1
      78: monitorexit
      79: aload_2
      80: athrow
    Exception table:
       from    to  target type
           7    50    76   any
          51    79    76   any

  public T getInterruptibly() throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.CancellationException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: getstatic     #111                // Field org/xnio/AbstractIoFuture$2.$SwitchMap$org$xnio$IoFuture$Status:[I
      10: aload_0
      11: invokevirtual #135                // Method awaitInterruptibly:()Lorg/xnio/IoFuture$Status;
      14: invokevirtual #117                // Method org/xnio/IoFuture$Status.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 3
                     1: 44
                     2: 51
                     3: 59
               default: 68
          }
      44: aload_0
      45: getfield      #119                // Field result:Ljava/lang/Object;
      48: aload_1
      49: monitorexit
      50: areturn
      51: aload_0
      52: getfield      #119                // Field result:Ljava/lang/Object;
      55: checkcast     #105                // class java/io/IOException
      58: athrow
      59: getstatic     #125                // Field org/xnio/_private/Messages.futureMsg:Lorg/xnio/_private/Messages;
      62: invokeinterface #129,  1          // InterfaceMethod org/xnio/_private/Messages.opCancelled:()Ljava/util/concurrent/CancellationException;
      67: athrow
      68: new           #131                // class java/lang/IllegalStateException
      71: dup
      72: invokespecial #132                // Method java/lang/IllegalStateException."<init>":()V
      75: athrow
      76: astore_2
      77: aload_1
      78: monitorexit
      79: aload_2
      80: athrow
    Exception table:
       from    to  target type
           7    50    76   any
          51    79    76   any

  public java.io.IOException getException() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      11: getstatic     #140                // Field org/xnio/IoFuture$Status.FAILED:Lorg/xnio/IoFuture$Status;
      14: if_acmpne     27
      17: aload_0
      18: getfield      #119                // Field result:Ljava/lang/Object;
      21: checkcast     #105                // class java/io/IOException
      24: aload_1
      25: monitorexit
      26: areturn
      27: new           #131                // class java/lang/IllegalStateException
      30: dup
      31: invokespecial #132                // Method java/lang/IllegalStateException."<init>":()V
      34: athrow
      35: astore_2
      36: aload_1
      37: monitorexit
      38: aload_2
      39: athrow
    Exception table:
       from    to  target type
           7    26    35   any
          27    38    35   any

  public <A> org.xnio.IoFuture<T> addNotifier(org.xnio.IoFuture$Notifier<? super T, A>, A);
    Code:
       0: new           #12                 // class org/xnio/AbstractIoFuture$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #145                // Method org/xnio/AbstractIoFuture$1."<init>":(Lorg/xnio/AbstractIoFuture;Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)V
      10: astore_3
      11: aload_0
      12: getfield      #35                 // Field lock:Ljava/lang/Object;
      15: dup
      16: astore        4
      18: monitorenter
      19: aload_0
      20: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      23: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      26: if_acmpne     63
      29: aload_0
      30: getfield      #147                // Field notifierList:Ljava/util/List;
      33: ifnonnull     47
      36: aload_0
      37: new           #149                // class java/util/ArrayList
      40: dup
      41: invokespecial #150                // Method java/util/ArrayList."<init>":()V
      44: putfield      #147                // Field notifierList:Ljava/util/List;
      47: aload_0
      48: getfield      #147                // Field notifierList:Ljava/util/List;
      51: aload_3
      52: invokeinterface #158,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: aload         4
      61: monitorexit
      62: areturn
      63: aload         4
      65: monitorexit
      66: goto          77
      69: astore        5
      71: aload         4
      73: monitorexit
      74: aload         5
      76: athrow
      77: aload_0
      78: aload_3
      79: invokevirtual #162                // Method runNotifier:(Ljava/lang/Runnable;)V
      82: aload_0
      83: areturn
    Exception table:
       from    to  target type
          19    62    69   any
          63    66    69   any
          69    74    69   any

  private void runAllNotifiers();
    Code:
       0: aload_0
       1: getfield      #147                // Field notifierList:Ljava/util/List;
       4: ifnull        49
       7: aload_0
       8: getfield      #147                // Field notifierList:Ljava/util/List;
      11: invokeinterface #174,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #179,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          44
      26: aload_1
      27: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #152                // class java/lang/Runnable
      35: astore_2
      36: aload_0
      37: aload_2
      38: invokevirtual #162                // Method runNotifier:(Ljava/lang/Runnable;)V
      41: goto          17
      44: aload_0
      45: aconst_null
      46: putfield      #147                // Field notifierList:Ljava/util/List;
      49: return

  protected boolean setException(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      11: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      14: if_acmpne     49
      17: aload_0
      18: getstatic     #140                // Field org/xnio/IoFuture$Status.FAILED:Lorg/xnio/IoFuture$Status;
      21: putfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      24: aload_0
      25: aload_1
      26: putfield      #119                // Field result:Ljava/lang/Object;
      29: aload_0
      30: aconst_null
      31: putfield      #186                // Field cancellables:Ljava/util/List;
      34: aload_0
      35: invokespecial #188                // Method runAllNotifiers:()V
      38: aload_0
      39: getfield      #35                 // Field lock:Ljava/lang/Object;
      42: invokevirtual #191                // Method java/lang/Object.notifyAll:()V
      45: iconst_1
      46: aload_2
      47: monitorexit
      48: ireturn
      49: iconst_0
      50: aload_2
      51: monitorexit
      52: ireturn
      53: astore_3
      54: aload_2
      55: monitorexit
      56: aload_3
      57: athrow
    Exception table:
       from    to  target type
           7    48    53   any
          49    52    53   any
          53    56    53   any

  protected boolean setResult(T);
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      11: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      14: if_acmpne     49
      17: aload_0
      18: getstatic     #197                // Field org/xnio/IoFuture$Status.DONE:Lorg/xnio/IoFuture$Status;
      21: putfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      24: aload_0
      25: aload_1
      26: putfield      #119                // Field result:Ljava/lang/Object;
      29: aload_0
      30: aconst_null
      31: putfield      #186                // Field cancellables:Ljava/util/List;
      34: aload_0
      35: invokespecial #188                // Method runAllNotifiers:()V
      38: aload_0
      39: getfield      #35                 // Field lock:Ljava/lang/Object;
      42: invokevirtual #191                // Method java/lang/Object.notifyAll:()V
      45: iconst_1
      46: aload_2
      47: monitorexit
      48: ireturn
      49: iconst_0
      50: aload_2
      51: monitorexit
      52: ireturn
      53: astore_3
      54: aload_2
      55: monitorexit
      56: aload_3
      57: athrow
    Exception table:
       from    to  target type
           7    48    53   any
          49    52    53   any
          53    56    53   any

  protected boolean setCancelled();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      11: getstatic     #38                 // Field org/xnio/IoFuture$Status.WAITING:Lorg/xnio/IoFuture$Status;
      14: if_acmpne     44
      17: aload_0
      18: getstatic     #202                // Field org/xnio/IoFuture$Status.CANCELLED:Lorg/xnio/IoFuture$Status;
      21: putfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      24: aload_0
      25: aconst_null
      26: putfield      #186                // Field cancellables:Ljava/util/List;
      29: aload_0
      30: invokespecial #188                // Method runAllNotifiers:()V
      33: aload_0
      34: getfield      #35                 // Field lock:Ljava/lang/Object;
      37: invokevirtual #191                // Method java/lang/Object.notifyAll:()V
      40: iconst_1
      41: aload_1
      42: monitorexit
      43: ireturn
      44: iconst_0
      45: aload_1
      46: monitorexit
      47: ireturn
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
    Exception table:
       from    to  target type
           7    43    48   any
          44    47    48   any
          48    51    48   any

  public org.xnio.IoFuture<T> cancel();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #186                // Field cancellables:Ljava/util/List;
      11: astore_1
      12: aload_1
      13: ifnull        23
      16: aload_1
      17: getstatic     #206                // Field CANCEL_REQUESTED:Ljava/util/List;
      20: if_acmpne     27
      23: aload_0
      24: aload_2
      25: monitorexit
      26: areturn
      27: aload_0
      28: getstatic     #206                // Field CANCEL_REQUESTED:Ljava/util/List;
      31: putfield      #186                // Field cancellables:Ljava/util/List;
      34: aload_2
      35: monitorexit
      36: goto          44
      39: astore_3
      40: aload_2
      41: monitorexit
      42: aload_3
      43: athrow
      44: aload_1
      45: invokeinterface #174,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore_2
      51: aload_2
      52: invokeinterface #179,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          80
      60: aload_2
      61: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #208                // class org/xnio/Cancellable
      69: astore_3
      70: aload_3
      71: invokeinterface #211,  1          // InterfaceMethod org/xnio/Cancellable.cancel:()Lorg/xnio/Cancellable;
      76: pop
      77: goto          51
      80: aload_0
      81: areturn
    Exception table:
       from    to  target type
           7    26    39   any
          27    36    39   any
          39    42    39   any

  protected void addCancelHandler(org.xnio.Cancellable);
    Code:
       0: aload_0
       1: getfield      #35                 // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: getstatic     #111                // Field org/xnio/AbstractIoFuture$2.$SwitchMap$org$xnio$IoFuture$Status:[I
      10: aload_0
      11: getfield      #40                 // Field status:Lorg/xnio/IoFuture$Status;
      14: invokevirtual #117                // Method org/xnio/IoFuture$Status.ordinal:()I
      17: iaload
      18: lookupswitch  { // 2
                     3: 44
                     4: 47
               default: 89
          }
      44: goto          92
      47: aload_0
      48: getfield      #186                // Field cancellables:Ljava/util/List;
      51: astore_3
      52: aload_3
      53: getstatic     #206                // Field CANCEL_REQUESTED:Ljava/util/List;
      56: if_acmpne     62
      59: goto          92
      62: aload_3
      63: ifnonnull     81
      66: aload_0
      67: new           #149                // class java/util/ArrayList
      70: dup
      71: invokespecial #150                // Method java/util/ArrayList."<init>":()V
      74: dup_x1
      75: putfield      #186                // Field cancellables:Ljava/util/List;
      78: goto          82
      81: aload_3
      82: aload_1
      83: invokeinterface #158,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      88: pop
      89: aload_2
      90: monitorexit
      91: return
      92: aload_2
      93: monitorexit
      94: goto          104
      97: astore        4
      99: aload_2
     100: monitorexit
     101: aload         4
     103: athrow
     104: aload_1
     105: invokeinterface #211,  1          // InterfaceMethod org/xnio/Cancellable.cancel:()Lorg/xnio/Cancellable;
     110: pop
     111: return
    Exception table:
       from    to  target type
           7    91    97   any
          92    94    97   any
          97   101    97   any

  protected void runNotifier(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #219                // Method getNotifierExecutor:()Ljava/util/concurrent/Executor;
       4: aload_1
       5: invokeinterface #224,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      10: return

  protected java.util.concurrent.Executor getNotifierExecutor();
    Code:
       0: invokestatic  #229                // Method org/xnio/IoUtils.directExecutor:()Ljava/util/concurrent/Executor;
       3: areturn

  public org.xnio.Cancellable cancel();
    Code:
       0: aload_0
       1: invokevirtual #231                // Method cancel:()Lorg/xnio/IoFuture;
       4: areturn

  static {};
    Code:
       0: invokestatic  #238                // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: putstatic     #206                // Field CANCEL_REQUESTED:Ljava/util/List;
       6: return
}
