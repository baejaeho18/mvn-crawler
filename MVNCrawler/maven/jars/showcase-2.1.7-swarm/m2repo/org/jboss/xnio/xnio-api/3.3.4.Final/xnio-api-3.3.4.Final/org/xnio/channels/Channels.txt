Compiled from "Channels.java"
public final class org.xnio.channels.Channels {
  private static final java.nio.channels.FileChannel NULL_FILE_CHANNEL;

  private static final java.nio.ByteBuffer DRAIN_BUFFER;

  private org.xnio.channels.Channels();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: return

  public static void flushBlocking(org.xnio.channels.SuspendableWriteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #38,  1           // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.flush:()Z
       6: ifne          18
       9: aload_0
      10: invokeinterface #41,  1           // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.awaitWritable:()V
      15: goto          0
      18: return

  public static void shutdownWritesBlocking(org.xnio.channels.SuspendableWriteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #47,  1           // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.shutdownWrites:()V
       6: aload_0
       7: invokestatic  #49                 // Method flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      10: return

  public static <C extends java.nio.channels.WritableByteChannel & org.xnio.channels.SuspendableWriteChannel> int writeBlocking(C, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #56                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       6: ifeq          40
       9: aload_0
      10: aload_1
      11: invokeinterface #62,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      16: istore_3
      17: iload_3
      18: ifne          33
      21: aload_0
      22: checkcast     #34                 // class org/xnio/channels/SuspendableWriteChannel
      25: invokeinterface #41,  1           // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.awaitWritable:()V
      30: goto          37
      33: iload_2
      34: iload_3
      35: iadd
      36: istore_2
      37: goto          2
      40: iload_2
      41: ireturn

  public static <C extends java.nio.channels.WritableByteChannel & org.xnio.channels.SuspendableWriteChannel> int writeBlocking(C, java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #75                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: lstore        5
       8: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      11: lstore        7
      13: iconst_0
      14: istore        9
      16: aload_1
      17: invokevirtual #56                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      20: ifeq          90
      23: lload         5
      25: lconst_0
      26: lcmp
      27: ifle          90
      30: aload_0
      31: aload_1
      32: invokeinterface #62,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      37: istore        10
      39: iload         10
      41: ifne          80
      44: aload_0
      45: checkcast     #34                 // class org/xnio/channels/SuspendableWriteChannel
      48: lload         5
      50: getstatic     #85                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      53: invokeinterface #88,  4           // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      58: lload         5
      60: lload         7
      62: lneg
      63: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      66: dup2
      67: lstore        7
      69: ladd
      70: lconst_0
      71: invokestatic  #94                 // Method java/lang/Math.max:(JJ)J
      74: lsub
      75: lstore        5
      77: goto          87
      80: iload         9
      82: iload         10
      84: iadd
      85: istore        9
      87: goto          16
      90: iload         9
      92: ireturn

  public static <C extends java.nio.channels.GatheringByteChannel & org.xnio.channels.SuspendableWriteChannel> long writeBlocking(C, java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore        4
       3: aload_1
       4: iload_2
       5: iload_3
       6: invokestatic  #105                // Method org/xnio/Buffers.hasRemaining:([Ljava/nio/Buffer;II)Z
       9: ifeq          52
      12: aload_0
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokeinterface #110,  4          // InterfaceMethod java/nio/channels/GatheringByteChannel.write:([Ljava/nio/ByteBuffer;II)J
      21: lstore        6
      23: lload         6
      25: lconst_0
      26: lcmp
      27: ifne          42
      30: aload_0
      31: checkcast     #34                 // class org/xnio/channels/SuspendableWriteChannel
      34: invokeinterface #41,  1           // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.awaitWritable:()V
      39: goto          49
      42: lload         4
      44: lload         6
      46: ladd
      47: lstore        4
      49: goto          3
      52: lload         4
      54: lreturn

  public static <C extends java.nio.channels.GatheringByteChannel & org.xnio.channels.SuspendableWriteChannel> long writeBlocking(C, java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload         6
       2: lload         4
       4: invokevirtual #75                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       7: lstore        7
       9: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      12: lstore        9
      14: lconst_0
      15: lstore        11
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokestatic  #105                // Method org/xnio/Buffers.hasRemaining:([Ljava/nio/Buffer;II)Z
      23: ifeq          97
      26: lload         7
      28: lconst_0
      29: lcmp
      30: ifle          97
      33: aload_0
      34: aload_1
      35: iload_2
      36: iload_3
      37: invokeinterface #110,  4          // InterfaceMethod java/nio/channels/GatheringByteChannel.write:([Ljava/nio/ByteBuffer;II)J
      42: lstore        13
      44: lload         13
      46: lconst_0
      47: lcmp
      48: ifne          87
      51: aload_0
      52: checkcast     #34                 // class org/xnio/channels/SuspendableWriteChannel
      55: lload         7
      57: getstatic     #85                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      60: invokeinterface #88,  4           // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      65: lload         7
      67: lload         9
      69: lneg
      70: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      73: dup2
      74: lstore        9
      76: ladd
      77: lconst_0
      78: invokestatic  #94                 // Method java/lang/Math.max:(JJ)J
      81: lsub
      82: lstore        7
      84: goto          94
      87: lload         11
      89: lload         13
      91: ladd
      92: lstore        11
      94: goto          17
      97: lload         11
      99: lreturn

  public static <C extends org.xnio.channels.WritableMessageChannel> void sendBlocking(C, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #124,  2          // InterfaceMethod org/xnio/channels/WritableMessageChannel.send:(Ljava/nio/ByteBuffer;)Z
       7: ifne          19
      10: aload_0
      11: invokeinterface #125,  1          // InterfaceMethod org/xnio/channels/WritableMessageChannel.awaitWritable:()V
      16: goto          0
      19: return

  public static <C extends org.xnio.channels.WritableMessageChannel> boolean sendBlocking(C, java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #75                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: lstore        5
       8: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      11: lstore        7
      13: lload         5
      15: lconst_0
      16: lcmp
      17: ifle          65
      20: aload_0
      21: aload_1
      22: invokeinterface #124,  2          // InterfaceMethod org/xnio/channels/WritableMessageChannel.send:(Ljava/nio/ByteBuffer;)Z
      27: ifne          63
      30: aload_0
      31: lload         5
      33: getstatic     #85                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokeinterface #128,  4          // InterfaceMethod org/xnio/channels/WritableMessageChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      41: lload         5
      43: lload         7
      45: lneg
      46: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      49: dup2
      50: lstore        7
      52: ladd
      53: lconst_0
      54: invokestatic  #94                 // Method java/lang/Math.max:(JJ)J
      57: lsub
      58: lstore        5
      60: goto          13
      63: iconst_1
      64: ireturn
      65: iconst_0
      66: ireturn

  public static <C extends org.xnio.channels.WritableMessageChannel> void sendBlocking(C, java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokeinterface #132,  4          // InterfaceMethod org/xnio/channels/WritableMessageChannel.send:([Ljava/nio/ByteBuffer;II)Z
       9: ifne          21
      12: aload_0
      13: invokeinterface #125,  1          // InterfaceMethod org/xnio/channels/WritableMessageChannel.awaitWritable:()V
      18: goto          0
      21: return

  public static <C extends org.xnio.channels.WritableMessageChannel> boolean sendBlocking(C, java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload         6
       2: lload         4
       4: invokevirtual #75                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       7: lstore        7
       9: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      12: lstore        9
      14: lload         7
      16: lconst_0
      17: lcmp
      18: ifle          68
      21: aload_0
      22: aload_1
      23: iload_2
      24: iload_3
      25: invokeinterface #132,  4          // InterfaceMethod org/xnio/channels/WritableMessageChannel.send:([Ljava/nio/ByteBuffer;II)Z
      30: ifne          66
      33: aload_0
      34: lload         7
      36: getstatic     #85                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      39: invokeinterface #128,  4          // InterfaceMethod org/xnio/channels/WritableMessageChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      44: lload         7
      46: lload         9
      48: lneg
      49: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      52: dup2
      53: lstore        9
      55: ladd
      56: lconst_0
      57: invokestatic  #94                 // Method java/lang/Math.max:(JJ)J
      60: lsub
      61: lstore        7
      63: goto          14
      66: iconst_1
      67: ireturn
      68: iconst_0
      69: ireturn

  public static <C extends java.nio.channels.ReadableByteChannel & org.xnio.channels.SuspendableReadChannel> int readBlocking(C, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #140,  2          // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
       7: dup
       8: istore_2
       9: ifne          31
      12: aload_1
      13: invokevirtual #56                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          31
      19: aload_0
      20: checkcast     #142                // class org/xnio/channels/SuspendableReadChannel
      23: invokeinterface #145,  1          // InterfaceMethod org/xnio/channels/SuspendableReadChannel.awaitReadable:()V
      28: goto          0
      31: iload_2
      32: ireturn

  public static <C extends java.nio.channels.ReadableByteChannel & org.xnio.channels.SuspendableReadChannel> int readBlocking(C, java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #140,  2          // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
       7: istore        5
       9: iload         5
      11: ifne          41
      14: aload_1
      15: invokevirtual #56                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      18: ifeq          41
      21: aload_0
      22: checkcast     #142                // class org/xnio/channels/SuspendableReadChannel
      25: lload_2
      26: aload         4
      28: invokeinterface #149,  4          // InterfaceMethod org/xnio/channels/SuspendableReadChannel.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      33: aload_0
      34: aload_1
      35: invokeinterface #140,  2          // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      40: ireturn
      41: iload         5
      43: ireturn

  public static <C extends java.nio.channels.ScatteringByteChannel & org.xnio.channels.SuspendableReadChannel> long readBlocking(C, java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokeinterface #154,  4          // InterfaceMethod java/nio/channels/ScatteringByteChannel.read:([Ljava/nio/ByteBuffer;II)J
       9: dup2
      10: lstore        4
      12: lconst_0
      13: lcmp
      14: ifne          29
      17: aload_0
      18: checkcast     #142                // class org/xnio/channels/SuspendableReadChannel
      21: invokeinterface #145,  1          // InterfaceMethod org/xnio/channels/SuspendableReadChannel.awaitReadable:()V
      26: goto          0
      29: lload         4
      31: lreturn

  public static <C extends java.nio.channels.ScatteringByteChannel & org.xnio.channels.SuspendableReadChannel> long readBlocking(C, java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokeinterface #154,  4          // InterfaceMethod java/nio/channels/ScatteringByteChannel.read:([Ljava/nio/ByteBuffer;II)J
       9: lstore        7
      11: lload         7
      13: lconst_0
      14: lcmp
      15: ifne          50
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokestatic  #105                // Method org/xnio/Buffers.hasRemaining:([Ljava/nio/Buffer;II)Z
      24: ifeq          50
      27: aload_0
      28: checkcast     #142                // class org/xnio/channels/SuspendableReadChannel
      31: lload         4
      33: aload         6
      35: invokeinterface #149,  4          // InterfaceMethod org/xnio/channels/SuspendableReadChannel.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      40: aload_0
      41: aload_1
      42: iload_2
      43: iload_3
      44: invokeinterface #154,  4          // InterfaceMethod java/nio/channels/ScatteringByteChannel.read:([Ljava/nio/ByteBuffer;II)J
      49: lreturn
      50: lload         7
      52: lreturn

  public static <C extends org.xnio.channels.ReadableMessageChannel> int receiveBlocking(C, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #163,  2          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.receive:(Ljava/nio/ByteBuffer;)I
       7: dup
       8: istore_2
       9: ifne          21
      12: aload_0
      13: invokeinterface #164,  1          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.awaitReadable:()V
      18: goto          0
      21: iload_2
      22: ireturn

  public static <C extends org.xnio.channels.ReadableMessageChannel> int receiveBlocking(C, java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #163,  2          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.receive:(Ljava/nio/ByteBuffer;)I
       7: istore        5
       9: iload         5
      11: ifne          31
      14: aload_0
      15: lload_2
      16: aload         4
      18: invokeinterface #167,  4          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      23: aload_0
      24: aload_1
      25: invokeinterface #163,  2          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.receive:(Ljava/nio/ByteBuffer;)I
      30: ireturn
      31: iload         5
      33: ireturn

  public static <C extends org.xnio.channels.ReadableMessageChannel> long receiveBlocking(C, java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokeinterface #170,  4          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.receive:([Ljava/nio/ByteBuffer;II)J
       9: dup2
      10: lstore        4
      12: lconst_0
      13: lcmp
      14: ifne          26
      17: aload_0
      18: invokeinterface #164,  1          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.awaitReadable:()V
      23: goto          0
      26: lload         4
      28: lreturn

  public static <C extends org.xnio.channels.ReadableMessageChannel> long receiveBlocking(C, java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokeinterface #170,  4          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.receive:([Ljava/nio/ByteBuffer;II)J
       9: lstore        7
      11: lload         7
      13: lconst_0
      14: lcmp
      15: ifne          38
      18: aload_0
      19: lload         4
      21: aload         6
      23: invokeinterface #167,  4          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      28: aload_0
      29: aload_1
      30: iload_2
      31: iload_3
      32: invokeinterface #170,  4          // InterfaceMethod org/xnio/channels/ReadableMessageChannel.receive:([Ljava/nio/ByteBuffer;II)J
      37: lreturn
      38: lload         7
      40: lreturn

  public static <C extends org.xnio.channels.ConnectedChannel, A extends org.xnio.channels.AcceptingChannel<C>> C acceptBlocking(A) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #179,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
       6: dup
       7: astore_1
       8: ifnonnull     20
      11: aload_0
      12: invokeinterface #182,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:()V
      17: goto          0
      20: aload_1
      21: areturn

  public static <C extends org.xnio.channels.ConnectedChannel, A extends org.xnio.channels.AcceptingChannel<C>> C acceptBlocking(A, long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #179,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
       6: astore        4
       8: aload         4
      10: ifnonnull     28
      13: aload_0
      14: lload_1
      15: aload_3
      16: invokeinterface #191,  4          // InterfaceMethod org/xnio/channels/AcceptingChannel.awaitAcceptable:(JLjava/util/concurrent/TimeUnit;)V
      21: aload_0
      22: invokeinterface #179,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.accept:()Lorg/xnio/channels/ConnectedChannel;
      27: areturn
      28: aload         4
      30: areturn

  public static void transferBlocking(org.xnio.channels.StreamSinkChannel, java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lstore        6
       4: lload         6
       6: lconst_0
       7: lcmp
       8: ifle          91
      11: aload_0
      12: aload_1
      13: lload_2
      14: lload         6
      16: invokeinterface #201,  6          // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
      21: dup2
      22: lstore        8
      24: lconst_0
      25: lcmp
      26: ifne          76
      29: aload_0
      30: invokeinterface #202,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:()V
      35: goto          11
      38: astore        10
      40: lload         4
      42: lload         6
      44: lsub
      45: lstore        11
      47: lload         11
      49: ldc2_w        #205                // long 2147483647l
      52: lcmp
      53: ifle          65
      56: aload         10
      58: iconst_m1
      59: putfield      #209                // Field java/io/InterruptedIOException.bytesTransferred:I
      62: goto          73
      65: aload         10
      67: lload         11
      69: l2i
      70: putfield      #209                // Field java/io/InterruptedIOException.bytesTransferred:I
      73: goto          11
      76: lload         6
      78: lload         8
      80: lsub
      81: lstore        6
      83: lload_2
      84: lload         8
      86: ladd
      87: lstore_2
      88: goto          4
      91: return
    Exception table:
       from    to  target type
          29    35    38   Class java/io/InterruptedIOException

  public static void transferBlocking(java.nio.channels.FileChannel, org.xnio.channels.StreamSourceChannel, long, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lstore        6
       4: lload         6
       6: lconst_0
       7: lcmp
       8: ifle          91
      11: aload_1
      12: lload_2
      13: lload         6
      15: aload_0
      16: invokeinterface #224,  6          // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
      21: dup2
      22: lstore        8
      24: lconst_0
      25: lcmp
      26: ifne          76
      29: aload_1
      30: invokeinterface #225,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.awaitReadable:()V
      35: goto          11
      38: astore        10
      40: lload         4
      42: lload         6
      44: lsub
      45: lstore        11
      47: lload         11
      49: ldc2_w        #205                // long 2147483647l
      52: lcmp
      53: ifle          65
      56: aload         10
      58: iconst_m1
      59: putfield      #209                // Field java/io/InterruptedIOException.bytesTransferred:I
      62: goto          73
      65: aload         10
      67: lload         11
      69: l2i
      70: putfield      #209                // Field java/io/InterruptedIOException.bytesTransferred:I
      73: goto          11
      76: lload         6
      78: lload         8
      80: lsub
      81: lstore        6
      83: lload_2
      84: lload         8
      86: ladd
      87: lstore_2
      88: goto          4
      91: return
    Exception table:
       from    to  target type
          29    35    38   Class java/io/InterruptedIOException

  public static long transferBlocking(org.xnio.channels.StreamSinkChannel, org.xnio.channels.StreamSourceChannel, java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore        5
       3: lload         5
       5: lload_3
       6: lcmp
       7: ifge          138
      10: aload_1
      11: lload_3
      12: aload_2
      13: aload_0
      14: invokeinterface #230,  5          // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
      19: dup2
      20: lstore        7
      22: lconst_0
      23: lcmp
      24: ifne          52
      27: aload_2
      28: invokevirtual #56                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      31: ifeq          43
      34: aload_0
      35: aload_2
      36: invokestatic  #232                // Method writeBlocking:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)I
      39: pop
      40: goto          10
      43: aload_1
      44: invokeinterface #225,  1          // InterfaceMethod org/xnio/channels/StreamSourceChannel.awaitReadable:()V
      49: goto          10
      52: lload         5
      54: lload         7
      56: ladd
      57: lstore        5
      59: goto          113
      62: astore        9
      64: aload         9
      66: getfield      #209                // Field java/io/InterruptedIOException.bytesTransferred:I
      69: istore        10
      71: lload         5
      73: iload         10
      75: i2l
      76: ladd
      77: lstore        5
      79: iload         10
      81: iflt          93
      84: lload         5
      86: ldc2_w        #205                // long 2147483647l
      89: lcmp
      90: ifle          102
      93: aload         9
      95: iconst_m1
      96: putfield      #209                // Field java/io/InterruptedIOException.bytesTransferred:I
      99: goto          110
     102: aload         9
     104: lload         5
     106: l2i
     107: putfield      #209                // Field java/io/InterruptedIOException.bytesTransferred:I
     110: aload         9
     112: athrow
     113: lload         7
     115: ldc2_w        #233                // long -1l
     118: lcmp
     119: ifne          3
     122: lload         5
     124: lconst_0
     125: lcmp
     126: ifne          135
     129: ldc2_w        #233                // long -1l
     132: goto          137
     135: lload         5
     137: lreturn
     138: lload         5
     140: lreturn
    Exception table:
       from    to  target type
          10    59    62   Class java/io/InterruptedIOException

  public static <T extends org.xnio.channels.CloseableChannel> void setCloseListener(T, org.xnio.ChannelListener<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #244,  1          // InterfaceMethod org/xnio/channels/CloseableChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokeinterface #248,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      14: return

  public static <T extends org.xnio.channels.AcceptingChannel<?>> void setAcceptListener(T, org.xnio.ChannelListener<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #261,  1          // InterfaceMethod org/xnio/channels/AcceptingChannel.getAcceptSetter:()Lorg/xnio/ChannelListener$Setter;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokeinterface #248,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      14: return

  public static <T extends org.xnio.channels.SuspendableReadChannel> void setReadListener(T, org.xnio.ChannelListener<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #266,  1          // InterfaceMethod org/xnio/channels/SuspendableReadChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokeinterface #248,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      14: return

  public static <T extends org.xnio.channels.SuspendableWriteChannel> void setWriteListener(T, org.xnio.ChannelListener<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #272,  1          // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokeinterface #248,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      14: return

  public static org.xnio.channels.ByteChannel wrapByteChannel(org.xnio.channels.ByteChannel);
    Code:
       0: new           #13                 // class org/xnio/channels/Channels$1
       3: dup
       4: aload_0
       5: invokespecial #277                // Method org/xnio/channels/Channels$1."<init>":(Lorg/xnio/channels/ByteChannel;)V
       8: areturn

  public static <T> T getOption(org.xnio.channels.Configurable, org.xnio.Option<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #286,  2          // InterfaceMethod org/xnio/channels/Configurable.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       7: astore_3
       8: aload_3
       9: ifnonnull     16
      12: aload_2
      13: goto          17
      16: aload_3
      17: areturn
      18: astore_3
      19: aload_2
      20: areturn
    Exception table:
       from    to  target type
           0    17    18   Class java/io/IOException

  public static boolean getOption(org.xnio.channels.Configurable, org.xnio.Option<java.lang.Boolean>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #286,  2          // InterfaceMethod org/xnio/channels/Configurable.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       7: checkcast     #300                // class java/lang/Boolean
      10: astore_3
      11: aload_3
      12: ifnonnull     19
      15: iload_2
      16: goto          23
      19: aload_3
      20: invokevirtual #303                // Method java/lang/Boolean.booleanValue:()Z
      23: ireturn
      24: astore_3
      25: iload_2
      26: ireturn
    Exception table:
       from    to  target type
           0    23    24   Class java/io/IOException

  public static int getOption(org.xnio.channels.Configurable, org.xnio.Option<java.lang.Integer>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #286,  2          // InterfaceMethod org/xnio/channels/Configurable.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       7: checkcast     #309                // class java/lang/Integer
      10: astore_3
      11: aload_3
      12: ifnonnull     19
      15: iload_2
      16: goto          23
      19: aload_3
      20: invokevirtual #313                // Method java/lang/Integer.intValue:()I
      23: ireturn
      24: astore_3
      25: iload_2
      26: ireturn
    Exception table:
       from    to  target type
           0    23    24   Class java/io/IOException

  public static long getOption(org.xnio.channels.Configurable, org.xnio.Option<java.lang.Long>, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #286,  2          // InterfaceMethod org/xnio/channels/Configurable.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       7: checkcast     #318                // class java/lang/Long
      10: astore        4
      12: aload         4
      14: ifnonnull     21
      17: lload_2
      18: goto          26
      21: aload         4
      23: invokevirtual #321                // Method java/lang/Long.longValue:()J
      26: lreturn
      27: astore        4
      29: lload_2
      30: lreturn
    Exception table:
       from    to  target type
           0    26    27   Class java/io/IOException

  public static <T extends java.nio.channels.Channel> T unwrap(java.lang.Class<T>, java.nio.channels.Channel);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #331                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      11: ifeq          23
      14: aload_0
      15: aload_1
      16: invokevirtual #335                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #337                // class java/nio/channels/Channel
      22: areturn
      23: aload_1
      24: instanceof    #339                // class org/xnio/channels/WrappedChannel
      27: ifeq          43
      30: aload_1
      31: checkcast     #339                // class org/xnio/channels/WrappedChannel
      34: invokeinterface #343,  1          // InterfaceMethod org/xnio/channels/WrappedChannel.getChannel:()Ljava/nio/channels/Channel;
      39: astore_1
      40: goto          0
      43: aconst_null
      44: areturn

  public static long drain(org.xnio.channels.StreamSourceChannel, long) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_3
       2: aconst_null
       3: astore        8
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifne          13
      11: lload_3
      12: lreturn
      13: getstatic     #351                // Field NULL_FILE_CHANNEL:Ljava/nio/channels/FileChannel;
      16: ifnull        68
      19: lload_1
      20: lconst_0
      21: lcmp
      22: ifle          60
      25: aload_0
      26: lconst_0
      27: lload_1
      28: getstatic     #351                // Field NULL_FILE_CHANNEL:Ljava/nio/channels/FileChannel;
      31: invokeinterface #224,  6          // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
      36: dup2
      37: lstore        5
      39: lconst_0
      40: lcmp
      41: ifne          47
      44: goto          60
      47: lload_3
      48: lload         5
      50: ladd
      51: lstore_3
      52: lload_1
      53: lload         5
      55: lsub
      56: lstore_1
      57: goto          19
      60: lload_3
      61: lconst_0
      62: lcmp
      63: ifle          68
      66: lload_3
      67: lreturn
      68: aload         8
      70: ifnonnull     81
      73: getstatic     #353                // Field DRAIN_BUFFER:Ljava/nio/ByteBuffer;
      76: invokevirtual #357                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      79: astore        8
      81: aload         8
      83: invokevirtual #360                // Method java/nio/ByteBuffer.limit:()I
      86: i2l
      87: lload_1
      88: lcmp
      89: ifle          100
      92: aload         8
      94: lload_1
      95: l2i
      96: invokevirtual #363                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      99: pop
     100: aload_0
     101: aload         8
     103: invokeinterface #364,  2          // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     108: istore        7
     110: aload         8
     112: invokevirtual #368                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     115: pop
     116: iload         7
     118: lookupswitch  { // 2
                    -1: 144
                     0: 158
               default: 160
          }
     144: lload_3
     145: lconst_0
     146: lcmp
     147: ifne          156
     150: ldc2_w        #233                // long -1l
     153: goto          157
     156: lload_3
     157: lreturn
     158: lload_3
     159: lreturn
     160: lload_3
     161: iload         7
     163: i2l
     164: ladd
     165: lstore_3
     166: lload_1
     167: iload         7
     169: i2l
     170: lsub
     171: lstore_1
     172: goto          5

  public static long drain(java.nio.channels.ReadableByteChannel, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #220                // class org/xnio/channels/StreamSourceChannel
       4: ifeq          16
       7: aload_0
       8: checkcast     #220                // class org/xnio/channels/StreamSourceChannel
      11: lload_1
      12: invokestatic  #374                // Method drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
      15: lreturn
      16: lconst_0
      17: lstore_3
      18: aconst_null
      19: astore        8
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifne          29
      27: lload_3
      28: lreturn
      29: getstatic     #351                // Field NULL_FILE_CHANNEL:Ljava/nio/channels/FileChannel;
      32: ifnull        82
      35: lload_1
      36: lconst_0
      37: lcmp
      38: ifle          74
      41: getstatic     #351                // Field NULL_FILE_CHANNEL:Ljava/nio/channels/FileChannel;
      44: aload_0
      45: lconst_0
      46: lload_1
      47: invokevirtual #377                // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      50: dup2
      51: lstore        5
      53: lconst_0
      54: lcmp
      55: ifne          61
      58: goto          74
      61: lload_3
      62: lload         5
      64: ladd
      65: lstore_3
      66: lload_1
      67: lload         5
      69: lsub
      70: lstore_1
      71: goto          35
      74: lload_3
      75: lconst_0
      76: lcmp
      77: ifle          82
      80: lload_3
      81: lreturn
      82: aload         8
      84: ifnonnull     95
      87: getstatic     #353                // Field DRAIN_BUFFER:Ljava/nio/ByteBuffer;
      90: invokevirtual #357                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      93: astore        8
      95: aload         8
      97: invokevirtual #360                // Method java/nio/ByteBuffer.limit:()I
     100: i2l
     101: lload_1
     102: lcmp
     103: ifle          114
     106: aload         8
     108: lload_1
     109: l2i
     110: invokevirtual #363                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     113: pop
     114: aload_0
     115: aload         8
     117: invokeinterface #140,  2          // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
     122: istore        7
     124: aload         8
     126: invokevirtual #368                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     129: pop
     130: iload         7
     132: lookupswitch  { // 2
                    -1: 160
                     0: 174
               default: 176
          }
     160: lload_3
     161: lconst_0
     162: lcmp
     163: ifne          172
     166: ldc2_w        #233                // long -1l
     169: goto          173
     172: lload_3
     173: lreturn
     174: lload_3
     175: lreturn
     176: lload_3
     177: iload         7
     179: i2l
     180: ladd
     181: lstore_3
     182: lload_1
     183: iload         7
     185: i2l
     186: lsub
     187: lstore_1
     188: goto          21

  public static long drain(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: instanceof    #220                // class org/xnio/channels/StreamSourceChannel
       4: ifeq          16
       7: aload_0
       8: checkcast     #220                // class org/xnio/channels/StreamSourceChannel
      11: lload_3
      12: invokestatic  #374                // Method drain:(Lorg/xnio/channels/StreamSourceChannel;J)J
      15: lreturn
      16: lconst_0
      17: lstore        5
      19: aconst_null
      20: astore        10
      22: lload_3
      23: lconst_0
      24: lcmp
      25: ifne          31
      28: lload         5
      30: lreturn
      31: getstatic     #351                // Field NULL_FILE_CHANNEL:Ljava/nio/channels/FileChannel;
      34: ifnull        88
      37: lload_3
      38: lconst_0
      39: lcmp
      40: ifle          78
      43: aload_0
      44: lload_1
      45: lload_3
      46: getstatic     #351                // Field NULL_FILE_CHANNEL:Ljava/nio/channels/FileChannel;
      49: invokevirtual #380                // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      52: dup2
      53: lstore        7
      55: lconst_0
      56: lcmp
      57: ifne          63
      60: goto          78
      63: lload         5
      65: lload         7
      67: ladd
      68: lstore        5
      70: lload_3
      71: lload         7
      73: lsub
      74: lstore_3
      75: goto          37
      78: lload         5
      80: lconst_0
      81: lcmp
      82: ifle          88
      85: lload         5
      87: lreturn
      88: aload         10
      90: ifnonnull     101
      93: getstatic     #353                // Field DRAIN_BUFFER:Ljava/nio/ByteBuffer;
      96: invokevirtual #357                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      99: astore        10
     101: aload         10
     103: invokevirtual #360                // Method java/nio/ByteBuffer.limit:()I
     106: i2l
     107: lload_3
     108: lcmp
     109: ifle          120
     112: aload         10
     114: lload_3
     115: l2i
     116: invokevirtual #363                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     119: pop
     120: aload_0
     121: aload         10
     123: invokevirtual #381                // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
     126: istore        9
     128: aload         10
     130: invokevirtual #368                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     133: pop
     134: iload         9
     136: lookupswitch  { // 2
                    -1: 164
                     0: 180
               default: 183
          }
     164: lload         5
     166: lconst_0
     167: lcmp
     168: ifne          177
     171: ldc2_w        #233                // long -1l
     174: goto          179
     177: lload         5
     179: lreturn
     180: lload         5
     182: lreturn
     183: lload         5
     185: iload         9
     187: i2l
     188: ladd
     189: lstore        5
     191: goto          22

  public static void resumeReadsAsync(org.xnio.channels.SuspendableReadChannel);
    Code:
       0: aload_0
       1: invokeinterface #388,  1          // InterfaceMethod org/xnio/channels/SuspendableReadChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       6: astore_1
       7: aload_1
       8: invokestatic  #394                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: if_acmpne     23
      14: aload_0
      15: invokeinterface #397,  1          // InterfaceMethod org/xnio/channels/SuspendableReadChannel.resumeReads:()V
      20: goto          35
      23: aload_1
      24: new           #11                 // class org/xnio/channels/Channels$2
      27: dup
      28: aload_0
      29: invokespecial #401                // Method org/xnio/channels/Channels$2."<init>":(Lorg/xnio/channels/SuspendableReadChannel;)V
      32: invokevirtual #405                // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      35: return

  public static void resumeWritesAsync(org.xnio.channels.SuspendableWriteChannel);
    Code:
       0: aload_0
       1: invokeinterface #409,  1          // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       6: astore_1
       7: aload_1
       8: invokestatic  #394                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: if_acmpne     23
      14: aload_0
      15: invokeinterface #412,  1          // InterfaceMethod org/xnio/channels/SuspendableWriteChannel.resumeWrites:()V
      20: goto          35
      23: aload_1
      24: new           #9                  // class org/xnio/channels/Channels$3
      27: dup
      28: aload_0
      29: invokespecial #414                // Method org/xnio/channels/Channels$3."<init>":(Lorg/xnio/channels/SuspendableWriteChannel;)V
      32: invokevirtual #405                // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      35: return

  public static int writeFinalBasic(org.xnio.channels.StreamSinkChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #417,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
       7: istore_2
       8: aload_1
       9: invokevirtual #56                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifne          21
      15: aload_0
      16: invokeinterface #418,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      21: iload_2
      22: ireturn

  public static long writeFinalBasic(org.xnio.channels.StreamSinkChannel, java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokeinterface #421,  4          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;II)J
       9: lstore        4
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokestatic  #105                // Method org/xnio/Buffers.hasRemaining:([Ljava/nio/Buffer;II)Z
      17: ifne          26
      20: aload_0
      21: invokeinterface #418,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      26: lload         4
      28: lreturn

  static {};
    Code:
       0: sipush        16384
       3: invokestatic  #429                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       6: putstatic     #353                // Field DRAIN_BUFFER:Ljava/nio/ByteBuffer;
       9: new           #7                  // class org/xnio/channels/Channels$4
      12: dup
      13: invokespecial #430                // Method org/xnio/channels/Channels$4."<init>":()V
      16: invokestatic  #436                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      19: checkcast     #204                // class java/nio/channels/FileChannel
      22: putstatic     #351                // Field NULL_FILE_CHANNEL:Ljava/nio/channels/FileChannel;
      25: return
}
