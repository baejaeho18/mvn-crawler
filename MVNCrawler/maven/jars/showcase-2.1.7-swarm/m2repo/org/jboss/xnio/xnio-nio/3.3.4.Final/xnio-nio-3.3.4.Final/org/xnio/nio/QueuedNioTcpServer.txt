Compiled from "QueuedNioTcpServer.java"
final class org.xnio.nio.QueuedNioTcpServer extends org.xnio.nio.AbstractNioChannel<org.xnio.nio.QueuedNioTcpServer> implements org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>, org.xnio.channels.AcceptListenerSettable<org.xnio.nio.QueuedNioTcpServer> {
  private static final java.lang.String FQCN;

  private volatile org.xnio.ChannelListener<? super org.xnio.nio.QueuedNioTcpServer> acceptListener;

  private final org.xnio.nio.QueuedNioTcpServerHandle handle;

  private final org.xnio.nio.WorkerThread thread;

  private final java.nio.channels.ServerSocketChannel channel;

  private final java.net.ServerSocket socket;

  private final java.io.Closeable mbeanHandle;

  private final java.util.List<java.util.concurrent.BlockingQueue<java.nio.channels.SocketChannel>> acceptQueues;

  private static final java.util.Set<org.xnio.Option<?>> options;

  private volatile int keepAlive;

  private volatile int oobInline;

  private volatile int tcpNoDelay;

  private volatile int sendBuffer;

  private volatile long connectionStatus;

  private volatile int readTimeout;

  private volatile int writeTimeout;

  private static final long CONN_LOW_MASK;

  private static final long CONN_LOW_BIT;

  private static final long CONN_LOW_ONE;

  private static final long CONN_HIGH_MASK;

  private static final long CONN_HIGH_BIT;

  private static final long CONN_HIGH_ONE;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> keepAliveUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> oobInlineUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> tcpNoDelayUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> sendBufferUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> readTimeoutUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.QueuedNioTcpServer> writeTimeoutUpdater;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.xnio.nio.QueuedNioTcpServer> connectionStatusUpdater;

  private final java.lang.Runnable acceptTask;

  static final boolean $assertionsDisabled;

  org.xnio.nio.QueuedNioTcpServer(org.xnio.nio.NioXnioWorker, java.nio.channels.ServerSocketChannel, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/xnio/nio/AbstractNioChannel."<init>":(Lorg/xnio/nio/NioXnioWorker;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #8                  // Field sendBuffer:I
      10: aload_0
      11: ldc2_w        #9                  // long 4611686018427387903l
      14: putfield      #4                  // Field connectionStatus:J
      17: aload_0
      18: new           #11                 // class org/xnio/nio/QueuedNioTcpServer$1
      21: dup
      22: aload_0
      23: invokespecial #12                 // Method org/xnio/nio/QueuedNioTcpServer$1."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;)V
      26: putfield      #13                 // Field acceptTask:Ljava/lang/Runnable;
      29: aload_0
      30: aload_2
      31: putfield      #14                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
      34: aload_0
      35: aload_1
      36: invokevirtual #15                 // Method org/xnio/nio/NioXnioWorker.getAcceptThread:()Lorg/xnio/nio/WorkerThread;
      39: putfield      #16                 // Field thread:Lorg/xnio/nio/WorkerThread;
      42: aload_1
      43: invokevirtual #17                 // Method org/xnio/nio/NioXnioWorker.getAll:()[Lorg/xnio/nio/WorkerThread;
      46: astore        4
      48: new           #18                 // class java/util/ArrayList
      51: dup
      52: aload         4
      54: arraylength
      55: invokespecial #19                 // Method java/util/ArrayList."<init>":(I)V
      58: astore        5
      60: iconst_0
      61: istore        6
      63: iload         6
      65: aload         4
      67: arraylength
      68: if_icmpge     93
      71: aload         5
      73: iload         6
      75: new           #20                 // class java/util/concurrent/LinkedBlockingQueue
      78: dup
      79: invokespecial #21                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      82: invokeinterface #22,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      87: iinc          6, 1
      90: goto          63
      93: aload_0
      94: aload         5
      96: putfield      #6                  // Field acceptQueues:Ljava/util/List;
      99: aload_0
     100: aload_2
     101: invokevirtual #23                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
     104: putfield      #24                 // Field socket:Ljava/net/ServerSocket;
     107: aload_3
     108: getstatic     #25                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     111: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     114: ifeq          154
     117: aload_3
     118: getstatic     #25                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     121: ldc           #28                 // int 65536
     123: invokevirtual #29                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     126: istore        6
     128: iload         6
     130: iconst_1
     131: if_icmpge     145
     134: getstatic     #30                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     137: ldc           #31                 // String sendBufferSize
     139: invokeinterface #32,  2           // InterfaceMethod org/xnio/nio/Log.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     144: athrow
     145: getstatic     #33                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     148: aload_0
     149: iload         6
     151: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     154: aload_3
     155: getstatic     #35                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     158: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     161: ifeq          187
     164: getstatic     #36                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     167: aload_0
     168: aload_3
     169: getstatic     #35                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     172: iconst_0
     173: invokevirtual #37                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     176: ifeq          183
     179: iconst_1
     180: goto          184
     183: iconst_0
     184: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     187: aload_3
     188: getstatic     #39                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     191: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     194: ifeq          220
     197: getstatic     #40                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     200: aload_0
     201: aload_3
     202: getstatic     #39                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     205: iconst_0
     206: invokevirtual #37                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     209: ifeq          216
     212: iconst_1
     213: goto          217
     216: iconst_0
     217: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     220: aload_3
     221: getstatic     #41                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     224: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     227: ifeq          253
     230: getstatic     #42                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     233: aload_0
     234: aload_3
     235: getstatic     #41                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     238: iconst_0
     239: invokevirtual #37                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     242: ifeq          249
     245: iconst_1
     246: goto          250
     249: iconst_0
     250: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     253: aload_3
     254: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     257: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     260: ifeq          278
     263: getstatic     #44                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     266: aload_0
     267: aload_3
     268: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     271: iconst_0
     272: invokevirtual #29                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     275: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     278: aload_3
     279: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     282: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     285: ifeq          303
     288: getstatic     #46                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     291: aload_0
     292: aload_3
     293: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     296: iconst_0
     297: invokevirtual #29                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     300: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
     303: aload_3
     304: getstatic     #47                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     307: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     310: ifne          323
     313: aload_3
     314: getstatic     #48                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     317: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     320: ifeq          398
     323: aload_3
     324: getstatic     #47                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     327: ldc           #50                 // int 2147483647
     329: invokevirtual #29                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     332: istore        6
     334: aload_3
     335: getstatic     #48                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     338: iload         6
     340: invokevirtual #29                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     343: istore        7
     345: iload         6
     347: ifgt          354
     350: invokestatic  #51                 // Method badHighWater:()Ljava/lang/IllegalArgumentException;
     353: athrow
     354: iload         7
     356: ifle          366
     359: iload         7
     361: iload         6
     363: if_icmple     372
     366: iload         6
     368: invokestatic  #52                 // Method badLowWater:(I)Ljava/lang/IllegalArgumentException;
     371: athrow
     372: iload         6
     374: i2l
     375: bipush        31
     377: lshl
     378: iload         7
     380: i2l
     381: iconst_0
     382: lshl
     383: lor
     384: lstore        8
     386: getstatic     #53                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     389: aload_0
     390: lload         8
     392: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
     395: goto          416
     398: ldc           #50                 // int 2147483647
     400: istore        6
     402: ldc           #50                 // int 2147483647
     404: istore        7
     406: getstatic     #53                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     409: aload_0
     410: ldc2_w        #9                  // long 4611686018427387903l
     413: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
     416: aload_0
     417: getfield      #16                 // Field thread:Lorg/xnio/nio/WorkerThread;
     420: aload_2
     421: invokevirtual #55                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     424: astore        8
     426: aload_0
     427: new           #56                 // class org/xnio/nio/QueuedNioTcpServerHandle
     430: dup
     431: aload_0
     432: aload_0
     433: getfield      #16                 // Field thread:Lorg/xnio/nio/WorkerThread;
     436: aload         8
     438: iload         6
     440: iload         7
     442: invokespecial #57                 // Method org/xnio/nio/QueuedNioTcpServerHandle."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;II)V
     445: putfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     448: aload         8
     450: aload_0
     451: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     454: invokevirtual #58                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     457: pop
     458: aload_0
     459: new           #59                 // class org/xnio/nio/QueuedNioTcpServer$2
     462: dup
     463: aload_0
     464: aload_1
     465: invokespecial #60                 // Method org/xnio/nio/QueuedNioTcpServer$2."<init>":(Lorg/xnio/nio/QueuedNioTcpServer;Lorg/xnio/nio/NioXnioWorker;)V
     468: invokestatic  #61                 // Method org/xnio/nio/NioXnio.register:(Lorg/xnio/management/XnioServerMXBean;)Ljava/io/Closeable;
     471: putfield      #62                 // Field mbeanHandle:Ljava/io/Closeable;
     474: return

  private static java.lang.IllegalArgumentException badLowWater(int);
    Code:
       0: new           #63                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #64                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #66                 // String Low water must be greater than 0 and less than or equal to high water (
      13: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_0
      17: invokevirtual #68                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: ldc           #69                 // String )
      22: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: areturn

  private static java.lang.IllegalArgumentException badHighWater();
    Code:
       0: new           #63                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #72                 // String High water must be greater than 0
       6: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #73                 // Method java/nio/channels/ServerSocketChannel.close:()V
       7: aload_0
       8: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      11: invokevirtual #74                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getWorkerThread:()Lorg/xnio/nio/WorkerThread;
      14: aload_0
      15: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      18: invokevirtual #75                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getSelectionKey:()Ljava/nio/channels/SelectionKey;
      21: invokevirtual #76                 // Method org/xnio/nio/WorkerThread.cancelKey:(Ljava/nio/channels/SelectionKey;)V
      24: aload_0
      25: getfield      #62                 // Field mbeanHandle:Ljava/io/Closeable;
      28: invokestatic  #77                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      31: goto          61
      34: astore_1
      35: aload_0
      36: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      39: invokevirtual #74                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getWorkerThread:()Lorg/xnio/nio/WorkerThread;
      42: aload_0
      43: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      46: invokevirtual #75                 // Method org/xnio/nio/QueuedNioTcpServerHandle.getSelectionKey:()Ljava/nio/channels/SelectionKey;
      49: invokevirtual #76                 // Method org/xnio/nio/WorkerThread.cancelKey:(Ljava/nio/channels/SelectionKey;)V
      52: aload_0
      53: getfield      #62                 // Field mbeanHandle:Ljava/io/Closeable;
      56: invokestatic  #77                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      59: aload_1
      60: athrow
      61: return
    Exception table:
       from    to  target type
           0     7    34   any

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #78                 // Field options:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #79,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws org.xnio.channels.UnsupportedOptionException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #80                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
       4: if_acmpne     22
       7: aload_1
       8: aload_0
       9: getfield      #24                 // Field socket:Ljava/net/ServerSocket;
      12: invokevirtual #81                 // Method java/net/ServerSocket.getReuseAddress:()Z
      15: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn
      22: aload_1
      23: getstatic     #84                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      26: if_acmpne     44
      29: aload_1
      30: aload_0
      31: getfield      #24                 // Field socket:Ljava/net/ServerSocket;
      34: invokevirtual #85                 // Method java/net/ServerSocket.getReceiveBufferSize:()I
      37: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      43: areturn
      44: aload_1
      45: getstatic     #25                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      48: if_acmpne     74
      51: aload_0
      52: getfield      #8                  // Field sendBuffer:I
      55: istore_2
      56: iload_2
      57: iconst_m1
      58: if_icmpne     65
      61: aconst_null
      62: goto          73
      65: aload_1
      66: iload_2
      67: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      73: areturn
      74: aload_1
      75: getstatic     #35                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
      78: if_acmpne     101
      81: aload_1
      82: aload_0
      83: getfield      #87                 // Field keepAlive:I
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      97: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     100: areturn
     101: aload_1
     102: getstatic     #39                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     105: if_acmpne     128
     108: aload_1
     109: aload_0
     110: getfield      #88                 // Field oobInline:I
     113: ifeq          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     124: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     127: areturn
     128: aload_1
     129: getstatic     #41                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     132: if_acmpne     155
     135: aload_1
     136: aload_0
     137: getfield      #89                 // Field tcpNoDelay:I
     140: ifeq          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     151: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     154: areturn
     155: aload_1
     156: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     159: if_acmpne     174
     162: aload_1
     163: aload_0
     164: getfield      #90                 // Field readTimeout:I
     167: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     170: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     173: areturn
     174: aload_1
     175: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     178: if_acmpne     193
     181: aload_1
     182: aload_0
     183: getfield      #91                 // Field writeTimeout:I
     186: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     189: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     192: areturn
     193: aload_1
     194: getstatic     #47                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     197: if_acmpne     215
     200: aload_1
     201: aload_0
     202: getfield      #4                  // Field connectionStatus:J
     205: invokestatic  #3                  // Method getHighWater:(J)I
     208: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     211: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     214: areturn
     215: aload_1
     216: getstatic     #48                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     219: if_acmpne     237
     222: aload_1
     223: aload_0
     224: getfield      #4                  // Field connectionStatus:J
     227: invokestatic  #2                  // Method getLowWater:(J)I
     230: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     233: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     236: areturn
     237: aconst_null
     238: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #80                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
       4: if_acmpne     44
       7: aload_0
       8: getfield      #24                 // Field socket:Ljava/net/ServerSocket;
      11: invokevirtual #81                 // Method java/net/ServerSocket.getReuseAddress:()Z
      14: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: astore_3
      18: aload_0
      19: getfield      #24                 // Field socket:Ljava/net/ServerSocket;
      22: getstatic     #80                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      25: aload_2
      26: getstatic     #92                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      29: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #94                 // class java/lang/Boolean
      35: invokevirtual #95                 // Method java/lang/Boolean.booleanValue:()Z
      38: invokevirtual #96                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
      41: goto          502
      44: aload_1
      45: getstatic     #84                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      48: if_acmpne     111
      51: aload_0
      52: getfield      #24                 // Field socket:Ljava/net/ServerSocket;
      55: invokevirtual #85                 // Method java/net/ServerSocket.getReceiveBufferSize:()I
      58: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: astore_3
      62: getstatic     #84                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      65: aload_2
      66: ldc           #28                 // int 65536
      68: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: checkcast     #49                 // class java/lang/Integer
      77: invokevirtual #97                 // Method java/lang/Integer.intValue:()I
      80: istore        4
      82: iload         4
      84: iconst_1
      85: if_icmpge     99
      88: getstatic     #30                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      91: ldc           #98                 // String RECEIVE_BUFFER
      93: invokeinterface #99,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      98: athrow
      99: aload_0
     100: getfield      #24                 // Field socket:Ljava/net/ServerSocket;
     103: iload         4
     105: invokevirtual #100                // Method java/net/ServerSocket.setReceiveBufferSize:(I)V
     108: goto          502
     111: aload_1
     112: getstatic     #25                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     115: if_acmpne     185
     118: getstatic     #25                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     121: aload_2
     122: ldc           #28                 // int 65536
     124: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: checkcast     #49                 // class java/lang/Integer
     133: invokevirtual #97                 // Method java/lang/Integer.intValue:()I
     136: istore        4
     138: iload         4
     140: iconst_1
     141: if_icmpge     155
     144: getstatic     #30                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     147: ldc           #101                // String SEND_BUFFER
     149: invokeinterface #99,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     154: athrow
     155: getstatic     #33                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     158: aload_0
     159: iload         4
     161: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     164: istore        5
     166: iload         5
     168: iconst_m1
     169: if_icmpne     176
     172: aconst_null
     173: goto          181
     176: iload         5
     178: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     181: astore_3
     182: goto          502
     185: aload_1
     186: getstatic     #35                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     189: if_acmpne     238
     192: getstatic     #36                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     195: aload_0
     196: getstatic     #35                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     199: aload_2
     200: getstatic     #92                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     203: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: checkcast     #94                 // class java/lang/Boolean
     209: invokevirtual #95                 // Method java/lang/Boolean.booleanValue:()Z
     212: ifeq          219
     215: iconst_1
     216: goto          220
     219: iconst_0
     220: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     223: ifeq          230
     226: iconst_1
     227: goto          231
     230: iconst_0
     231: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     234: astore_3
     235: goto          502
     238: aload_1
     239: getstatic     #39                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     242: if_acmpne     291
     245: getstatic     #40                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     248: aload_0
     249: getstatic     #39                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
     252: aload_2
     253: getstatic     #92                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     256: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     259: checkcast     #94                 // class java/lang/Boolean
     262: invokevirtual #95                 // Method java/lang/Boolean.booleanValue:()Z
     265: ifeq          272
     268: iconst_1
     269: goto          273
     272: iconst_0
     273: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     276: ifeq          283
     279: iconst_1
     280: goto          284
     283: iconst_0
     284: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     287: astore_3
     288: goto          502
     291: aload_1
     292: getstatic     #41                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     295: if_acmpne     344
     298: getstatic     #42                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     301: aload_0
     302: getstatic     #41                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
     305: aload_2
     306: getstatic     #92                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     309: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     312: checkcast     #94                 // class java/lang/Boolean
     315: invokevirtual #95                 // Method java/lang/Boolean.booleanValue:()Z
     318: ifeq          325
     321: iconst_1
     322: goto          326
     325: iconst_0
     326: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     329: ifeq          336
     332: iconst_1
     333: goto          337
     336: iconst_0
     337: invokestatic  #82                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     340: astore_3
     341: goto          502
     344: aload_1
     345: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     348: if_acmpne     382
     351: getstatic     #44                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     354: aload_0
     355: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     358: aload_2
     359: iconst_0
     360: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     363: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     366: checkcast     #49                 // class java/lang/Integer
     369: invokevirtual #97                 // Method java/lang/Integer.intValue:()I
     372: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     375: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     378: astore_3
     379: goto          502
     382: aload_1
     383: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     386: if_acmpne     420
     389: getstatic     #46                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     392: aload_0
     393: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     396: aload_2
     397: iconst_0
     398: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     401: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     404: checkcast     #49                 // class java/lang/Integer
     407: invokevirtual #97                 // Method java/lang/Integer.intValue:()I
     410: invokevirtual #102                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
     413: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     416: astore_3
     417: goto          502
     420: aload_1
     421: getstatic     #47                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     424: if_acmpne     460
     427: aload_0
     428: iconst_m1
     429: getstatic     #47                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
     432: aload_2
     433: ldc           #50                 // int 2147483647
     435: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     438: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     441: checkcast     #49                 // class java/lang/Integer
     444: invokevirtual #97                 // Method java/lang/Integer.intValue:()I
     447: invokespecial #103                // Method updateWaterMark:(II)J
     450: invokestatic  #3                  // Method getHighWater:(J)I
     453: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     456: astore_3
     457: goto          502
     460: aload_1
     461: getstatic     #48                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     464: if_acmpne     500
     467: aload_0
     468: getstatic     #48                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
     471: aload_2
     472: ldc           #50                 // int 2147483647
     474: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     477: invokevirtual #93                 // Method org/xnio/Option.cast:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     480: checkcast     #49                 // class java/lang/Integer
     483: invokevirtual #97                 // Method java/lang/Integer.intValue:()I
     486: iconst_m1
     487: invokespecial #103                // Method updateWaterMark:(II)J
     490: invokestatic  #2                  // Method getLowWater:(J)I
     493: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     496: astore_3
     497: goto          502
     500: aconst_null
     501: areturn
     502: aload_1
     503: aload_3
     504: invokevirtual #83                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     507: areturn

  private long updateWaterMark(int, int);
    Code:
       0: getstatic     #104                // Field $assertionsDisabled:Z
       3: ifne          24
       6: iload_1
       7: iconst_m1
       8: if_icmpne     24
      11: iload_2
      12: iconst_m1
      13: if_icmpne     24
      16: new           #105                // class java/lang/AssertionError
      19: dup
      20: invokespecial #106                // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: getstatic     #104                // Field $assertionsDisabled:Z
      27: ifne          53
      30: iload_1
      31: iconst_m1
      32: if_icmpeq     53
      35: iload_2
      36: iconst_m1
      37: if_icmpeq     53
      40: iload_1
      41: iload_2
      42: if_icmple     53
      45: new           #105                // class java/lang/AssertionError
      48: dup
      49: invokespecial #106                // Method java/lang/AssertionError."<init>":()V
      52: athrow
      53: aload_0
      54: getfield      #4                  // Field connectionStatus:J
      57: lstore_3
      58: lload_3
      59: invokestatic  #2                  // Method getLowWater:(J)I
      62: istore        8
      64: lload_3
      65: invokestatic  #3                  // Method getHighWater:(J)I
      68: istore        7
      70: iload_1
      71: iconst_m1
      72: if_icmpne     80
      75: iload         8
      77: goto          81
      80: iload_1
      81: istore        9
      83: iload_2
      84: iconst_m1
      85: if_icmpne     93
      88: iload         7
      90: goto          94
      93: iload_2
      94: istore        10
      96: iload_1
      97: iconst_m1
      98: if_icmpeq     115
     101: iload         9
     103: iload         10
     105: if_icmple     115
     108: iload         9
     110: istore        10
     112: goto          131
     115: iload_2
     116: iconst_m1
     117: if_icmpeq     131
     120: iload         10
     122: iload         9
     124: if_icmpge     131
     127: iload         10
     129: istore        9
     131: iload         8
     133: iload         9
     135: if_icmpne     147
     138: iload         7
     140: iload         10
     142: if_icmpne     147
     145: lload_3
     146: lreturn
     147: iload         9
     149: i2l
     150: iconst_0
     151: lshl
     152: iload         10
     154: i2l
     155: bipush        31
     157: lshl
     158: lor
     159: lstore        5
     161: getstatic     #53                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     164: aload_0
     165: lload_3
     166: lload         5
     168: invokevirtual #107                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
     171: ifeq          53
     174: lload_3
     175: lreturn

  private static int getHighWater(long);
    Code:
       0: lload_0
       1: ldc2_w        #108                // long 4611686016279904256l
       4: land
       5: bipush        31
       7: lshr
       8: l2i
       9: ireturn

  private static int getLowWater(long);
    Code:
       0: lload_0
       1: ldc2_w        #110                // long 2147483647l
       4: land
       5: iconst_0
       6: lshr
       7: l2i
       8: ireturn

  public org.xnio.nio.NioSocketStreamConnection accept() throws java.io.IOException;
    Code:
       0: invokestatic  #112                // Method org/xnio/nio/WorkerThread.getCurrent:()Lorg/xnio/nio/WorkerThread;
       3: astore_1
       4: aload_1
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #6                  // Field acceptQueues:Ljava/util/List;
      14: aload_1
      15: invokevirtual #113                // Method org/xnio/nio/WorkerThread.getNumber:()I
      18: invokeinterface #114,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #115                // class java/util/concurrent/BlockingQueue
      26: astore_2
      27: iconst_0
      28: istore        4
      30: aload_2
      31: invokeinterface #116,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      36: checkcast     #117                // class java/nio/channels/SocketChannel
      39: astore_3
      40: aload_3
      41: ifnull        225
      44: aload_3
      45: iconst_0
      46: invokevirtual #118                // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      49: pop
      50: aload_3
      51: invokevirtual #119                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      54: astore        5
      56: aload         5
      58: aload_0
      59: getfield      #87                 // Field keepAlive:I
      62: ifeq          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: invokevirtual #120                // Method java/net/Socket.setKeepAlive:(Z)V
      73: aload         5
      75: aload_0
      76: getfield      #88                 // Field oobInline:I
      79: ifeq          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: invokevirtual #121                // Method java/net/Socket.setOOBInline:(Z)V
      90: aload         5
      92: aload_0
      93: getfield      #89                 // Field tcpNoDelay:I
      96: ifeq          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: invokevirtual #122                // Method java/net/Socket.setTcpNoDelay:(Z)V
     107: aload_0
     108: getfield      #8                  // Field sendBuffer:I
     111: istore        6
     113: iload         6
     115: ifle          125
     118: aload         5
     120: iload         6
     122: invokevirtual #123                // Method java/net/Socket.setSendBufferSize:(I)V
     125: aload_1
     126: aload_3
     127: invokevirtual #55                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     130: astore        7
     132: new           #124                // class org/xnio/nio/NioSocketStreamConnection
     135: dup
     136: aload_1
     137: aload         7
     139: aload_0
     140: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     143: invokespecial #125                // Method org/xnio/nio/NioSocketStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/ChannelClosed;)V
     146: astore        8
     148: aload         8
     150: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     153: aload_0
     154: getfield      #90                 // Field readTimeout:I
     157: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     160: invokevirtual #126                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     163: pop
     164: aload         8
     166: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     169: aload_0
     170: getfield      #91                 // Field writeTimeout:I
     173: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     176: invokevirtual #126                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     179: pop
     180: iconst_1
     181: istore        4
     183: aload         8
     185: astore        9
     187: iload         4
     189: ifne          196
     192: aload_3
     193: invokestatic  #77                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     196: iload         4
     198: ifne          208
     201: aload_0
     202: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     205: invokevirtual #127                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     208: aload         9
     210: areturn
     211: astore        10
     213: iload         4
     215: ifne          222
     218: aload_3
     219: invokestatic  #77                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     222: aload         10
     224: athrow
     225: iload         4
     227: ifne          277
     230: aload_0
     231: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     234: invokevirtual #127                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     237: goto          277
     240: astore        5
     242: aconst_null
     243: astore        6
     245: iload         4
     247: ifne          257
     250: aload_0
     251: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     254: invokevirtual #127                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     257: aload         6
     259: areturn
     260: astore        11
     262: iload         4
     264: ifne          274
     267: aload_0
     268: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     271: invokevirtual #127                // Method org/xnio/nio/QueuedNioTcpServerHandle.freeConnection:()V
     274: aload         11
     276: athrow
     277: aconst_null
     278: areturn
    Exception table:
       from    to  target type
          44   187   211   any
         211   213   211   any
          30   196   240   Class java/io/IOException
         211   225   240   Class java/io/IOException
          30   196   260   any
         211   225   260   any
         240   245   260   any
         260   262   260   any

  public java.lang.String toString();
    Code:
       0: ldc           #129                // String TCP server (NIO) <%s>
       2: iconst_1
       3: anewarray     #130                // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #131                // Method java/lang/Object.hashCode:()I
      12: invokestatic  #132                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      15: aastore
      16: invokestatic  #133                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  public org.xnio.ChannelListener<? super org.xnio.nio.QueuedNioTcpServer> getAcceptListener();
    Code:
       0: aload_0
       1: getfield      #134                // Field acceptListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setAcceptListener(org.xnio.ChannelListener<? super org.xnio.nio.QueuedNioTcpServer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #134                // Field acceptListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener$Setter<org.xnio.nio.QueuedNioTcpServer> getAcceptSetter();
    Code:
       0: new           #135                // class org/xnio/channels/AcceptListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #136                // Method org/xnio/channels/AcceptListenerSettable$Setter."<init>":(Lorg/xnio/channels/AcceptListenerSettable;)V
       8: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #137                // Method java/nio/channels/ServerSocketChannel.isOpen:()Z
       7: ireturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #24                 // Field socket:Ljava/net/ServerSocket;
       4: invokevirtual #138                // Method java/net/ServerSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: invokevirtual #139                // Method getLocalAddress:()Ljava/net/SocketAddress;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #140                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_1
      14: aload_2
      15: invokevirtual #141                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #142                // class java/net/SocketAddress
      21: goto          25
      24: aconst_null
      25: areturn

  public void suspendAccepts();
    Code:
       0: aload_0
       1: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
       4: iconst_0
       5: invokevirtual #143                // Method org/xnio/nio/QueuedNioTcpServerHandle.suspend:(I)V
       8: return

  public void resumeAccepts();
    Code:
       0: aload_0
       1: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
       4: bipush        16
       6: invokevirtual #145                // Method org/xnio/nio/QueuedNioTcpServerHandle.resume:(I)V
       9: return

  public boolean isAcceptResumed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
       4: bipush        16
       6: invokevirtual #146                // Method org/xnio/nio/QueuedNioTcpServerHandle.isResumed:(I)Z
       9: ireturn

  public void wakeupAccepts();
    Code:
       0: getstatic     #147                // Field org/xnio/nio/Log.tcpServerLog:Lorg/xnio/nio/Log;
       3: getstatic     #148                // Field FQCN:Ljava/lang/String;
       6: getstatic     #149                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
       9: aconst_null
      10: ldc           #150                // String Wake up accepts on %s
      12: aload_0
      13: invokeinterface #151,  6          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #152                // Method resumeAccepts:()V
      22: aload_0
      23: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
      26: bipush        16
      28: invokevirtual #153                // Method org/xnio/nio/QueuedNioTcpServerHandle.wakeup:(I)V
      31: return

  public void awaitAcceptable() throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #154                // String awaitAcceptable
       5: invokeinterface #155,  2          // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public void awaitAcceptable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: getstatic     #30                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       3: ldc           #154                // String awaitAcceptable
       5: invokeinterface #155,  2          // InterfaceMethod org/xnio/nio/Log.unsupported:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
      10: athrow

  public org.xnio.XnioExecutor getAcceptThread();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method getIoThread:()Lorg/xnio/XnioIoThread;
       4: areturn

  void handleReady();
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Ljava/nio/channels/ServerSocketChannel;
       4: invokevirtual #157                // Method java/nio/channels/ServerSocketChannel.accept:()Ljava/nio/channels/SocketChannel;
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_1
      11: ifnull        389
      14: aload_1
      15: invokevirtual #158                // Method java/nio/channels/SocketChannel.getLocalAddress:()Ljava/net/SocketAddress;
      18: astore_3
      19: aload_3
      20: instanceof    #159                // class java/net/InetSocketAddress
      23: ifeq          54
      26: aload_3
      27: checkcast     #159                // class java/net/InetSocketAddress
      30: astore        5
      32: aload         5
      34: invokevirtual #160                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      37: invokevirtual #161                // Method java/net/InetAddress.hashCode:()I
      40: bipush        23
      42: imul
      43: aload         5
      45: invokevirtual #162                // Method java/net/InetSocketAddress.getPort:()I
      48: iadd
      49: istore        4
      51: goto          82
      54: aload_3
      55: instanceof    #163                // class org/xnio/LocalSocketAddress
      58: ifeq          76
      61: aload_3
      62: checkcast     #163                // class org/xnio/LocalSocketAddress
      65: invokevirtual #164                // Method org/xnio/LocalSocketAddress.getName:()Ljava/lang/String;
      68: invokevirtual #165                // Method java/lang/String.hashCode:()I
      71: istore        4
      73: goto          82
      76: aload_3
      77: invokevirtual #131                // Method java/lang/Object.hashCode:()I
      80: istore        4
      82: aload_1
      83: invokevirtual #166                // Method java/nio/channels/SocketChannel.getRemoteAddress:()Ljava/net/SocketAddress;
      86: astore        5
      88: aload         5
      90: instanceof    #159                // class java/net/InetSocketAddress
      93: ifeq          131
      96: aload         5
      98: checkcast     #159                // class java/net/InetSocketAddress
     101: astore        6
     103: aload         6
     105: invokevirtual #160                // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
     108: invokevirtual #161                // Method java/net/InetAddress.hashCode:()I
     111: bipush        23
     113: imul
     114: aload         6
     116: invokevirtual #162                // Method java/net/InetSocketAddress.getPort:()I
     119: iadd
     120: bipush        23
     122: imul
     123: iload         4
     125: iadd
     126: istore        4
     128: goto          173
     131: aload         5
     133: instanceof    #163                // class org/xnio/LocalSocketAddress
     136: ifeq          161
     139: aload         5
     141: checkcast     #163                // class org/xnio/LocalSocketAddress
     144: invokevirtual #164                // Method org/xnio/LocalSocketAddress.getName:()Ljava/lang/String;
     147: invokevirtual #165                // Method java/lang/String.hashCode:()I
     150: bipush        23
     152: imul
     153: iload         4
     155: iadd
     156: istore        4
     158: goto          173
     161: aload_3
     162: invokevirtual #131                // Method java/lang/Object.hashCode:()I
     165: bipush        23
     167: imul
     168: iload         4
     170: iadd
     171: istore        4
     173: aload_1
     174: iconst_0
     175: invokevirtual #118                // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
     178: pop
     179: aload_1
     180: invokevirtual #119                // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     183: astore        6
     185: aload         6
     187: aload_0
     188: getfield      #87                 // Field keepAlive:I
     191: ifeq          198
     194: iconst_1
     195: goto          199
     198: iconst_0
     199: invokevirtual #120                // Method java/net/Socket.setKeepAlive:(Z)V
     202: aload         6
     204: aload_0
     205: getfield      #88                 // Field oobInline:I
     208: ifeq          215
     211: iconst_1
     212: goto          216
     215: iconst_0
     216: invokevirtual #121                // Method java/net/Socket.setOOBInline:(Z)V
     219: aload         6
     221: aload_0
     222: getfield      #89                 // Field tcpNoDelay:I
     225: ifeq          232
     228: iconst_1
     229: goto          233
     232: iconst_0
     233: invokevirtual #122                // Method java/net/Socket.setTcpNoDelay:(Z)V
     236: aload_0
     237: getfield      #8                  // Field sendBuffer:I
     240: istore        7
     242: iload         7
     244: ifle          254
     247: aload         6
     249: iload         7
     251: invokevirtual #123                // Method java/net/Socket.setSendBufferSize:(I)V
     254: aload_0
     255: getfield      #167                // Field worker:Lorg/xnio/nio/NioXnioWorker;
     258: iload         4
     260: invokevirtual #168                // Method org/xnio/nio/NioXnioWorker.getIoThread:(I)Lorg/xnio/nio/WorkerThread;
     263: astore        8
     265: aload         8
     267: aload_1
     268: invokevirtual #55                 // Method org/xnio/nio/WorkerThread.registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     271: astore        9
     273: new           #124                // class org/xnio/nio/NioSocketStreamConnection
     276: dup
     277: aload         8
     279: aload         9
     281: aload_0
     282: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
     285: invokespecial #125                // Method org/xnio/nio/NioSocketStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/ChannelClosed;)V
     288: astore        10
     290: aload         10
     292: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
     295: aload_0
     296: getfield      #90                 // Field readTimeout:I
     299: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     302: invokevirtual #126                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     305: pop
     306: aload         10
     308: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
     311: aload_0
     312: getfield      #91                 // Field writeTimeout:I
     315: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     318: invokevirtual #126                // Method org/xnio/nio/NioSocketStreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     321: pop
     322: iconst_1
     323: istore_2
     324: aload         8
     326: invokevirtual #113                // Method org/xnio/nio/WorkerThread.getNumber:()I
     329: istore        11
     331: aload_0
     332: getfield      #6                  // Field acceptQueues:Ljava/util/List;
     335: iload         11
     337: invokeinterface #114,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     342: checkcast     #115                // class java/util/concurrent/BlockingQueue
     345: astore        12
     347: aload         12
     349: aload_1
     350: invokeinterface #169,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
     355: pop
     356: aload         8
     358: aload_0
     359: getfield      #13                 // Field acceptTask:Ljava/lang/Runnable;
     362: invokevirtual #170                // Method org/xnio/nio/WorkerThread.execute:(Ljava/lang/Runnable;)V
     365: iload_2
     366: ifne          389
     369: aload_1
     370: invokestatic  #77                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     373: goto          389
     376: astore        13
     378: iload_2
     379: ifne          386
     382: aload_1
     383: invokestatic  #77                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     386: aload         13
     388: athrow
     389: goto          393
     392: astore_1
     393: return
    Exception table:
       from    to  target type
          14   365   376   any
         376   378   376   any
           0   389   392   Class java/io/IOException

  public org.xnio.channels.ConnectedChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #171                // Method accept:()Lorg/xnio/nio/NioSocketStreamConnection;
       4: areturn

  public org.xnio.channels.CloseableChannel accept() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #171                // Method accept:()Lorg/xnio/nio/NioSocketStreamConnection;
       4: areturn

  static java.util.List access$000(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field acceptQueues:Ljava/util/List;
       4: areturn

  static org.xnio.nio.QueuedNioTcpServerHandle access$100(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field handle:Lorg/xnio/nio/QueuedNioTcpServerHandle;
       4: areturn

  static long access$200(org.xnio.nio.QueuedNioTcpServer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionStatus:J
       4: lreturn

  static int access$300(long);
    Code:
       0: lload_0
       1: invokestatic  #3                  // Method getHighWater:(J)I
       4: ireturn

  static int access$400(long);
    Code:
       0: lload_0
       1: invokestatic  #2                  // Method getLowWater:(J)I
       4: ireturn

  static {};
    Code:
       0: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
       2: invokevirtual #172                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #104                // Field $assertionsDisabled:Z
      16: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
      18: invokevirtual #173                // Method java/lang/Class.getName:()Ljava/lang/String;
      21: putstatic     #148                // Field FQCN:Ljava/lang/String;
      24: invokestatic  #174                // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
      27: getstatic     #80                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      30: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      33: getstatic     #84                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      36: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      39: getstatic     #25                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
      42: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      45: getstatic     #35                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
      48: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      51: getstatic     #39                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
      54: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      57: getstatic     #41                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      60: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      63: getstatic     #47                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
      66: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      69: getstatic     #48                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
      72: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      75: getstatic     #43                 // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      78: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      81: getstatic     #45                 // Field org/xnio/Options.WRITE_TIMEOUT:Lorg/xnio/Option;
      84: invokevirtual #175                // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      87: invokevirtual #176                // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      90: putstatic     #78                 // Field options:Ljava/util/Set;
      93: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
      95: ldc           #177                // String keepAlive
      97: invokestatic  #178                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     100: putstatic     #36                 // Field keepAliveUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     103: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
     105: ldc           #179                // String oobInline
     107: invokestatic  #178                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     110: putstatic     #40                 // Field oobInlineUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     113: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
     115: ldc           #180                // String tcpNoDelay
     117: invokestatic  #178                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     120: putstatic     #42                 // Field tcpNoDelayUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     123: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
     125: ldc           #181                // String sendBuffer
     127: invokestatic  #178                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     130: putstatic     #33                 // Field sendBufferUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     133: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
     135: ldc           #182                // String readTimeout
     137: invokestatic  #178                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     140: putstatic     #44                 // Field readTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     143: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
     145: ldc           #183                // String writeTimeout
     147: invokestatic  #178                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     150: putstatic     #46                 // Field writeTimeoutUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     153: ldc           #1                  // class org/xnio/nio/QueuedNioTcpServer
     155: ldc           #184                // String connectionStatus
     157: invokestatic  #185                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     160: putstatic     #53                 // Field connectionStatusUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     163: return
}
