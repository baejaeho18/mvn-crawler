Compiled from "Xnio.java"
public abstract class org.xnio.Xnio {
  static final java.net.InetSocketAddress ANY_INET_ADDRESS;

  static final org.xnio.LocalSocketAddress ANY_LOCAL_ADDRESS;

  private static final java.util.EnumMap<org.xnio.FileAccess, org.xnio.OptionMap> FILE_ACCESS_OPTION_MAPS;

  private static final java.lang.RuntimePermission ALLOW_BLOCKING_SETTING;

  private static final javax.management.MBeanServer MBEAN_SERVER;

  public static final boolean NIO2;

  private final java.lang.String name;

  private static final java.lang.ThreadLocal<java.lang.Boolean> BLOCKING;

  private static final org.xnio.Xnio$Opener OPENER;

  protected org.xnio.Xnio(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     19
       8: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      11: ldc           #58                 // String name
      13: invokeinterface #62,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #66                 // Field name:Ljava/lang/String;
      24: return

  public static boolean allowBlocking(boolean) throws java.lang.SecurityException;
    Code:
       0: invokestatic  #78                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: getstatic     #80                 // Field ALLOW_BLOCKING_SETTING:Ljava/lang/RuntimePermission;
      12: invokevirtual #86                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: getstatic     #88                 // Field BLOCKING:Ljava/lang/ThreadLocal;
      18: astore_2
      19: aload_2
      20: invokevirtual #94                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      23: checkcast     #96                 // class java/lang/Boolean
      26: invokevirtual #100                // Method java/lang/Boolean.booleanValue:()Z
      29: istore_3
      30: aload_2
      31: iload_0
      32: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: invokevirtual #108                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      38: iload_3
      39: ireturn
      40: astore        4
      42: aload_2
      43: iload_0
      44: invokestatic  #104                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      47: invokevirtual #108                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      50: aload         4
      52: athrow
    Exception table:
       from    to  target type
          19    30    40   any
          40    42    40   any

  public static boolean isBlockingAllowed();
    Code:
       0: getstatic     #88                 // Field BLOCKING:Ljava/lang/ThreadLocal;
       3: invokevirtual #94                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #96                 // class java/lang/Boolean
       9: invokevirtual #100                // Method java/lang/Boolean.booleanValue:()Z
      12: ireturn

  public static void checkBlockingAllowed() throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #88                 // Field BLOCKING:Ljava/lang/ThreadLocal;
       3: invokevirtual #94                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #96                 // class java/lang/Boolean
       9: invokevirtual #100                // Method java/lang/Boolean.booleanValue:()Z
      12: ifne          24
      15: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      18: invokeinterface #122,  1          // InterfaceMethod org/xnio/_private/Messages.blockingNotAllowed:()Ljava/lang/IllegalStateException;
      23: athrow
      24: return

  public static org.xnio.Xnio getInstance(java.lang.ClassLoader);
    Code:
       0: aconst_null
       1: ldc           #126                // class org/xnio/XnioProvider
       3: aload_0
       4: invokestatic  #132                // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
       7: invokestatic  #136                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      10: areturn

  public static org.xnio.Xnio getInstance();
    Code:
       0: aconst_null
       1: ldc           #126                // class org/xnio/XnioProvider
       3: ldc           #2                  // class org/xnio/Xnio
       5: invokevirtual #145                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #132                // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      11: invokestatic  #136                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      14: areturn

  public static org.xnio.Xnio getInstance(java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: ldc           #126                // class org/xnio/XnioProvider
       3: aload_1
       4: invokestatic  #132                // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
       7: invokestatic  #136                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      10: areturn

  public static org.xnio.Xnio getInstance(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #126                // class org/xnio/XnioProvider
       3: ldc           #2                  // class org/xnio/Xnio
       5: invokevirtual #145                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #132                // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      11: invokestatic  #136                // Method doGetInstance:(Ljava/lang/String;Ljava/util/ServiceLoader;)Lorg/xnio/Xnio;
      14: areturn

  private static org.xnio.Xnio doGetInstance(java.lang.String, java.util.ServiceLoader<org.xnio.XnioProvider>);
    Code:
       0: aload_1
       1: invokevirtual #152                // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #157,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifne          17
      14: goto          96
      17: aload_2
      18: invokeinterface #160,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #126                // class org/xnio/XnioProvider
      26: astore_3
      27: aload_0
      28: ifnull        44
      31: aload_0
      32: aload_3
      33: invokeinterface #164,  1          // InterfaceMethod org/xnio/XnioProvider.getName:()Ljava/lang/String;
      38: invokevirtual #168                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          51
      44: aload_3
      45: invokeinterface #170,  1          // InterfaceMethod org/xnio/XnioProvider.getInstance:()Lorg/xnio/Xnio;
      50: areturn
      51: goto          74
      54: astore        4
      56: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      59: aload         4
      61: ldc           #172                // String Not loading provider %s
      63: aload_3
      64: invokeinterface #164,  1          // InterfaceMethod org/xnio/XnioProvider.getName:()Ljava/lang/String;
      69: invokeinterface #176,  4          // InterfaceMethod org/xnio/_private/Messages.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      74: goto          5
      77: astore_3
      78: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      81: aload_3
      82: ldc           #178                // String Skipping non-loadable provider
      84: iconst_0
      85: anewarray     #4                  // class java/lang/Object
      88: invokeinterface #181,  4          // InterfaceMethod org/xnio/_private/Messages.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      93: goto          5
      96: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      99: invokeinterface #185,  1          // InterfaceMethod org/xnio/_private/Messages.noProviderFound:()Ljava/lang/IllegalArgumentException;
     104: athrow
    Exception table:
       from    to  target type
          27    50    54   Class java/lang/Throwable
           5    14    77   Class java/lang/Throwable
          17    50    77   Class java/lang/Throwable
          51    74    77   Class java/lang/Throwable

  public org.xnio.ssl.XnioSsl getSslProvider(org.xnio.OptionMap) throws java.security.GeneralSecurityException;
    Code:
       0: new           #200                // class org/xnio/ssl/JsseXnioSsl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #203                // Method org/xnio/ssl/JsseXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;)V
       9: areturn

  public org.xnio.ssl.XnioSsl getSslProvider(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], org.xnio.OptionMap) throws java.security.GeneralSecurityException;
    Code:
       0: new           #200                // class org/xnio/ssl/JsseXnioSsl
       3: dup
       4: aload_0
       5: aload_3
       6: aload_1
       7: aload_2
       8: aconst_null
       9: aload_3
      10: invokestatic  #212                // Method org/xnio/ssl/JsseSslUtils.createSSLContext:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;Lorg/xnio/OptionMap;)Ljavax/net/ssl/SSLContext;
      13: invokespecial #215                // Method org/xnio/ssl/JsseXnioSsl."<init>":(Lorg/xnio/Xnio;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLContext;)V
      16: areturn

  public java.nio.channels.FileChannel openFile(java.io.File, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc           #225                // String file
       9: invokeinterface #62,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_2
      16: ifnonnull     30
      19: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      22: ldc           #227                // String options
      24: invokeinterface #62,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: getstatic     #229                // Field OPENER:Lorg/xnio/Xnio$Opener;
      33: aload_1
      34: aload_2
      35: invokeinterface #231,  3          // InterfaceMethod org/xnio/Xnio$Opener.openFile:(Ljava/io/File;Lorg/xnio/OptionMap;)Ljava/nio/channels/FileChannel;
      40: areturn

  public java.nio.channels.FileChannel openFile(java.lang.String, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc           #235                // String fileName
       9: invokeinterface #62,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: new           #237                // class java/io/File
      19: dup
      20: aload_1
      21: invokespecial #239                // Method java/io/File."<init>":(Ljava/lang/String;)V
      24: aload_2
      25: invokevirtual #240                // Method openFile:(Ljava/io/File;Lorg/xnio/OptionMap;)Ljava/nio/channels/FileChannel;
      28: areturn

  public java.nio.channels.FileChannel openFile(java.io.File, org.xnio.FileAccess) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     15
       4: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc           #243                // String access
       9: invokeinterface #62,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: getstatic     #245                // Field FILE_ACCESS_OPTION_MAPS:Ljava/util/EnumMap;
      20: aload_2
      21: invokevirtual #250                // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #252                // class org/xnio/OptionMap
      27: invokevirtual #240                // Method openFile:(Ljava/io/File;Lorg/xnio/OptionMap;)Ljava/nio/channels/FileChannel;
      30: areturn

  public java.nio.channels.FileChannel openFile(java.lang.String, org.xnio.FileAccess) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     15
       4: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
       7: ldc           #243                // String access
       9: invokeinterface #62,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_1
      16: ifnonnull     30
      19: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      22: ldc           #235                // String fileName
      24: invokeinterface #62,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: aload_0
      31: new           #237                // class java/io/File
      34: dup
      35: aload_1
      36: invokespecial #239                // Method java/io/File."<init>":(Ljava/lang/String;)V
      39: getstatic     #245                // Field FILE_ACCESS_OPTION_MAPS:Ljava/util/EnumMap;
      42: aload_2
      43: invokevirtual #250                // Method java/util/EnumMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #252                // class org/xnio/OptionMap
      49: invokevirtual #240                // Method openFile:(Ljava/io/File;Lorg/xnio/OptionMap;)Ljava/nio/channels/FileChannel;
      52: areturn

  protected java.nio.channels.FileChannel unwrapFileChannel(java.nio.channels.FileChannel);
    Code:
       0: aload_1
       1: instanceof    #258                // class org/xnio/XnioFileChannel
       4: ifeq          15
       7: aload_1
       8: checkcast     #258                // class org/xnio/XnioFileChannel
      11: invokevirtual #262                // Method org/xnio/XnioFileChannel.getDelegate:()Ljava/nio/channels/FileChannel;
      14: areturn
      15: aload_1
      16: areturn

  public org.xnio.XnioWorker createWorker(org.xnio.OptionMap) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #271                // Method createWorker:(Ljava/lang/ThreadGroup;Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
       6: areturn

  public org.xnio.XnioWorker createWorker(java.lang.ThreadGroup, org.xnio.OptionMap) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #274                // Method createWorker:(Ljava/lang/ThreadGroup;Lorg/xnio/OptionMap;Ljava/lang/Runnable;)Lorg/xnio/XnioWorker;
       7: areturn

  public abstract org.xnio.XnioWorker createWorker(java.lang.ThreadGroup, org.xnio.OptionMap, java.lang.Runnable) throws java.io.IOException, java.lang.IllegalArgumentException;

  public org.xnio.FileSystemWatcher createFileSystemWatcher(java.lang.String, org.xnio.OptionMap);
    Code:
       0: aload_2
       1: getstatic     #284                // Field org/xnio/Options.WATCHER_POLL_INTERVAL:Lorg/xnio/Option;
       4: sipush        5000
       7: invokevirtual #287                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      10: istore_3
      11: aload_2
      12: getstatic     #290                // Field org/xnio/Options.THREAD_DAEMON:Lorg/xnio/Option;
      15: iconst_1
      16: invokevirtual #293                // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      19: istore        4
      21: new           #295                // class org/xnio/PollingFileSystemWatcher
      24: dup
      25: aload_1
      26: iload_3
      27: iload         4
      29: invokespecial #298                // Method org/xnio/PollingFileSystemWatcher."<init>":(Ljava/lang/String;IZ)V
      32: areturn

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #66                 // Field name:Ljava/lang/String;
       4: areturn

  public final java.lang.String toString();
    Code:
       0: ldc_w         #304                // String XNIO provider \"%s\" <%s@%s>
       3: iconst_3
       4: anewarray     #4                  // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: invokevirtual #305                // Method getName:()Ljava/lang/String;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: invokevirtual #309                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #310                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: aastore
      24: dup
      25: iconst_2
      26: aload_0
      27: invokevirtual #314                // Method java/lang/Object.hashCode:()I
      30: invokestatic  #320                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      33: aastore
      34: invokestatic  #324                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: areturn

  protected static java.lang.String getProperty(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #328                // String xnio.
       4: invokevirtual #332                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifne          19
      10: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      13: invokeinterface #336,  1          // InterfaceMethod org/xnio/_private/Messages.propReadForbidden:()Ljava/lang/SecurityException;
      18: athrow
      19: invokestatic  #78                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      22: astore_1
      23: aload_1
      24: ifnull        43
      27: new           #338                // class org/xnio/ReadPropertyAction
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #341                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      36: invokestatic  #347                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      39: checkcast     #64                 // class java/lang/String
      42: areturn
      43: aload_0
      44: invokestatic  #349                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      47: areturn

  protected static java.lang.String getProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #328                // String xnio.
       4: invokevirtual #332                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ifne          19
      10: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      13: invokeinterface #336,  1          // InterfaceMethod org/xnio/_private/Messages.propReadForbidden:()Ljava/lang/SecurityException;
      18: athrow
      19: invokestatic  #78                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      22: astore_2
      23: aload_2
      24: ifnull        43
      27: new           #338                // class org/xnio/ReadPropertyAction
      30: dup
      31: aload_0
      32: aload_1
      33: invokespecial #341                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      36: invokestatic  #347                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      39: checkcast     #64                 // class java/lang/String
      42: areturn
      43: aload_0
      44: aload_1
      45: invokestatic  #352                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: areturn

  protected static java.io.Closeable register(org.xnio.management.XnioProviderMXBean);
    Code:
       0: new           #359                // class javax/management/ObjectName
       3: dup
       4: ldc_w         #361                // String org.xnio
       7: iconst_2
       8: anewarray     #23                 // class org/xnio/ObjectProperties$Property
      11: dup
      12: iconst_0
      13: ldc_w         #363                // String type
      16: ldc_w         #365                // String Xnio
      19: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      22: aastore
      23: dup
      24: iconst_1
      25: ldc_w         #370                // String provider
      28: aload_0
      29: invokeinterface #373,  1          // InterfaceMethod org/xnio/management/XnioProviderMXBean.getName:()Ljava/lang/String;
      34: invokestatic  #376                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      40: aastore
      41: invokestatic  #380                // Method org/xnio/ObjectProperties.properties:([Lorg/xnio/ObjectProperties$Property;)Lorg/xnio/ObjectProperties;
      44: invokespecial #383                // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/util/Hashtable;)V
      47: astore_1
      48: getstatic     #385                // Field MBEAN_SERVER:Ljavax/management/MBeanServer;
      51: aload_0
      52: aload_1
      53: invokeinterface #391,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      58: pop
      59: new           #7                  // class org/xnio/Xnio$MBeanCloseable
      62: dup
      63: aload_1
      64: invokespecial #394                // Method org/xnio/Xnio$MBeanCloseable."<init>":(Ljavax/management/ObjectName;)V
      67: areturn
      68: astore_1
      69: invokestatic  #400                // Method org/xnio/IoUtils.nullCloseable:()Ljava/io/Closeable;
      72: areturn
    Exception table:
       from    to  target type
           0    67    68   Class java/lang/Exception

  protected static java.io.Closeable register(org.xnio.management.XnioWorkerMXBean);
    Code:
       0: new           #359                // class javax/management/ObjectName
       3: dup
       4: ldc_w         #361                // String org.xnio
       7: iconst_3
       8: anewarray     #23                 // class org/xnio/ObjectProperties$Property
      11: dup
      12: iconst_0
      13: ldc_w         #363                // String type
      16: ldc_w         #365                // String Xnio
      19: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      22: aastore
      23: dup
      24: iconst_1
      25: ldc_w         #370                // String provider
      28: aload_0
      29: invokeinterface #412,  1          // InterfaceMethod org/xnio/management/XnioWorkerMXBean.getProviderName:()Ljava/lang/String;
      34: invokestatic  #376                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      40: aastore
      41: dup
      42: iconst_2
      43: ldc_w         #414                // String worker
      46: aload_0
      47: invokeinterface #415,  1          // InterfaceMethod org/xnio/management/XnioWorkerMXBean.getName:()Ljava/lang/String;
      52: invokestatic  #376                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      55: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      58: aastore
      59: invokestatic  #380                // Method org/xnio/ObjectProperties.properties:([Lorg/xnio/ObjectProperties$Property;)Lorg/xnio/ObjectProperties;
      62: invokespecial #383                // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/util/Hashtable;)V
      65: astore_1
      66: getstatic     #385                // Field MBEAN_SERVER:Ljavax/management/MBeanServer;
      69: aload_0
      70: aload_1
      71: invokeinterface #391,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      76: pop
      77: new           #7                  // class org/xnio/Xnio$MBeanCloseable
      80: dup
      81: aload_1
      82: invokespecial #394                // Method org/xnio/Xnio$MBeanCloseable."<init>":(Ljavax/management/ObjectName;)V
      85: areturn
      86: astore_1
      87: invokestatic  #400                // Method org/xnio/IoUtils.nullCloseable:()Ljava/io/Closeable;
      90: areturn
    Exception table:
       from    to  target type
           0    85    86   Class java/lang/Exception

  protected static java.io.Closeable register(org.xnio.management.XnioServerMXBean);
    Code:
       0: new           #359                // class javax/management/ObjectName
       3: dup
       4: ldc_w         #361                // String org.xnio
       7: iconst_4
       8: anewarray     #23                 // class org/xnio/ObjectProperties$Property
      11: dup
      12: iconst_0
      13: ldc_w         #363                // String type
      16: ldc_w         #365                // String Xnio
      19: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      22: aastore
      23: dup
      24: iconst_1
      25: ldc_w         #370                // String provider
      28: aload_0
      29: invokeinterface #421,  1          // InterfaceMethod org/xnio/management/XnioServerMXBean.getProviderName:()Ljava/lang/String;
      34: invokestatic  #376                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      40: aastore
      41: dup
      42: iconst_2
      43: ldc_w         #414                // String worker
      46: aload_0
      47: invokeinterface #424,  1          // InterfaceMethod org/xnio/management/XnioServerMXBean.getWorkerName:()Ljava/lang/String;
      52: invokestatic  #376                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      55: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      58: aastore
      59: dup
      60: iconst_3
      61: ldc_w         #426                // String address
      64: aload_0
      65: invokeinterface #429,  1          // InterfaceMethod org/xnio/management/XnioServerMXBean.getBindAddress:()Ljava/lang/String;
      70: invokestatic  #376                // Method javax/management/ObjectName.quote:(Ljava/lang/String;)Ljava/lang/String;
      73: invokestatic  #369                // Method org/xnio/ObjectProperties.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/xnio/ObjectProperties$Property;
      76: aastore
      77: invokestatic  #380                // Method org/xnio/ObjectProperties.properties:([Lorg/xnio/ObjectProperties$Property;)Lorg/xnio/ObjectProperties;
      80: invokespecial #383                // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/util/Hashtable;)V
      83: astore_1
      84: getstatic     #385                // Field MBEAN_SERVER:Ljavax/management/MBeanServer;
      87: aload_0
      88: aload_1
      89: invokeinterface #391,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      94: pop
      95: new           #7                  // class org/xnio/Xnio$MBeanCloseable
      98: dup
      99: aload_1
     100: invokespecial #394                // Method org/xnio/Xnio$MBeanCloseable."<init>":(Ljavax/management/ObjectName;)V
     103: areturn
     104: astore_1
     105: invokestatic  #400                // Method org/xnio/IoUtils.nullCloseable:()Ljava/io/Closeable;
     108: areturn
    Exception table:
       from    to  target type
           0   103   104   Class java/lang/Exception

  static javax.management.MBeanServer access$200();
    Code:
       0: getstatic     #385                // Field MBEAN_SERVER:Ljavax/management/MBeanServer;
       3: areturn

  static {};
    Code:
       0: new           #436                // class java/net/InetSocketAddress
       3: dup
       4: iconst_0
       5: invokespecial #439                // Method java/net/InetSocketAddress."<init>":(I)V
       8: putstatic     #441                // Field ANY_INET_ADDRESS:Ljava/net/InetSocketAddress;
      11: new           #443                // class org/xnio/LocalSocketAddress
      14: dup
      15: ldc_w         #445                // String
      18: invokespecial #446                // Method org/xnio/LocalSocketAddress."<init>":(Ljava/lang/String;)V
      21: putstatic     #448                // Field ANY_LOCAL_ADDRESS:Lorg/xnio/LocalSocketAddress;
      24: new           #450                // class java/lang/RuntimePermission
      27: dup
      28: ldc_w         #452                // String changeThreadBlockingSetting
      31: invokespecial #453                // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
      34: putstatic     #80                 // Field ALLOW_BLOCKING_SETTING:Ljava/lang/RuntimePermission;
      37: iconst_0
      38: istore_0
      39: ldc_w         #455                // String java.nio.channels.MulticastChannel
      42: iconst_0
      43: aconst_null
      44: invokestatic  #459                // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      47: pop
      48: iconst_1
      49: istore_0
      50: goto          54
      53: astore_1
      54: iload_0
      55: putstatic     #461                // Field NIO2:Z
      58: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      61: getstatic     #466                // Field org/xnio/Version.VERSION:Ljava/lang/String;
      64: invokeinterface #469,  2          // InterfaceMethod org/xnio/_private/Messages.greeting:(Ljava/lang/String;)V
      69: new           #247                // class java/util/EnumMap
      72: dup
      73: ldc_w         #471                // class org/xnio/FileAccess
      76: invokespecial #474                // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      79: astore_1
      80: invokestatic  #478                // Method org/xnio/FileAccess.values:()[Lorg/xnio/FileAccess;
      83: astore_2
      84: aload_2
      85: arraylength
      86: istore_3
      87: iconst_0
      88: istore        4
      90: iload         4
      92: iload_3
      93: if_icmpge     123
      96: aload_2
      97: iload         4
      99: aaload
     100: astore        5
     102: aload_1
     103: aload         5
     105: getstatic     #483                // Field org/xnio/Options.FILE_ACCESS:Lorg/xnio/Option;
     108: aload         5
     110: invokestatic  #487                // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
     113: invokevirtual #491                // Method java/util/EnumMap.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: iinc          4, 1
     120: goto          90
     123: aload_1
     124: putstatic     #245                // Field FILE_ACCESS_OPTION_MAPS:Ljava/util/EnumMap;
     127: new           #21                 // class org/xnio/Xnio$1
     130: dup
     131: invokespecial #492                // Method org/xnio/Xnio$1."<init>":()V
     134: invokestatic  #347                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     137: checkcast     #387                // class javax/management/MBeanServer
     140: putstatic     #385                // Field MBEAN_SERVER:Ljavax/management/MBeanServer;
     143: new           #19                 // class org/xnio/Xnio$2
     146: dup
     147: invokespecial #493                // Method org/xnio/Xnio$2."<init>":()V
     150: putstatic     #88                 // Field BLOCKING:Ljava/lang/ThreadLocal;
     153: getstatic     #461                // Field NIO2:Z
     156: ifeq          170
     159: new           #10                 // class org/xnio/Xnio$Nio2Opener
     162: dup
     163: aconst_null
     164: invokespecial #496                // Method org/xnio/Xnio$Nio2Opener."<init>":(Lorg/xnio/Xnio$1;)V
     167: goto          178
     170: new           #13                 // class org/xnio/Xnio$Nio1Opener
     173: dup
     174: aconst_null
     175: invokespecial #497                // Method org/xnio/Xnio$Nio1Opener."<init>":(Lorg/xnio/Xnio$1;)V
     178: putstatic     #229                // Field OPENER:Lorg/xnio/Xnio$Opener;
     181: return
    Exception table:
       from    to  target type
          39    50    53   Class java/lang/Throwable
}
