Compiled from "WorkerThread.java"
final class org.xnio.nio.WorkerThread extends org.xnio.XnioIoThread implements org.xnio.XnioExecutor {
  private static final long LONGEST_DELAY;

  private static final java.lang.String FQCN;

  private static final boolean OLD_LOCKING;

  private static final boolean THREAD_SAFE_SELECTION_KEYS;

  private static final long START_TIME;

  private final java.nio.channels.Selector selector;

  private final java.lang.Object workLock;

  private final java.util.Queue<java.lang.Runnable> selectorWorkQueue;

  private final java.util.TreeSet<org.xnio.nio.WorkerThread$TimeKey> delayWorkQueue;

  private volatile int state;

  private static final int SHUTDOWN;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.WorkerThread> stateUpdater;

  volatile boolean polling;

  static final java.util.concurrent.atomic.AtomicLong seqGen;

  static final boolean $assertionsDisabled;

  org.xnio.nio.WorkerThread(org.xnio.nio.NioXnioWorker, java.nio.channels.Selector, java.lang.String, java.lang.ThreadGroup, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload         7
       4: aload         4
       6: aload_3
       7: lload         5
       9: invokespecial #3                  // Method org/xnio/XnioIoThread."<init>":(Lorg/xnio/XnioWorker;ILjava/lang/ThreadGroup;Ljava/lang/String;J)V
      12: aload_0
      13: new           #4                  // class java/lang/Object
      16: dup
      17: invokespecial #5                  // Method java/lang/Object."<init>":()V
      20: putfield      #2                  // Field workLock:Ljava/lang/Object;
      23: aload_0
      24: new           #6                  // class java/util/ArrayDeque
      27: dup
      28: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      31: putfield      #8                  // Field selectorWorkQueue:Ljava/util/Queue;
      34: aload_0
      35: new           #9                  // class java/util/TreeSet
      38: dup
      39: invokespecial #10                 // Method java/util/TreeSet."<init>":()V
      42: putfield      #1                  // Field delayWorkQueue:Ljava/util/TreeSet;
      45: aload_0
      46: aload_2
      47: putfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      50: return

  static org.xnio.nio.WorkerThread getCurrent();
    Code:
       0: invokestatic  #12                 // Method currentThread:()Lorg/xnio/XnioIoThread;
       3: astore_0
       4: aload_0
       5: instanceof    #13                 // class org/xnio/nio/WorkerThread
       8: ifeq          18
      11: aload_0
      12: checkcast     #13                 // class org/xnio/nio/WorkerThread
      15: goto          19
      18: aconst_null
      19: areturn

  public org.xnio.nio.NioXnioWorker getWorker();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/xnio/XnioIoThread.getWorker:()Lorg/xnio/XnioWorker;
       4: checkcast     #15                 // class org/xnio/nio/NioXnioWorker
       7: areturn

  protected org.xnio.IoFuture<org.xnio.StreamConnection> acceptTcpStreamConnection(java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #17                 // Method org/xnio/nio/NioXnioWorker.checkShutdown:()V
       7: goto          22
      10: astore        5
      12: new           #19                 // class org/xnio/FailedIoFuture
      15: dup
      16: aload         5
      18: invokespecial #20                 // Method org/xnio/FailedIoFuture."<init>":(Ljava/io/IOException;)V
      21: areturn
      22: new           #21                 // class org/xnio/FutureResult
      25: dup
      26: aload_0
      27: invokespecial #22                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
      30: astore        5
      32: iconst_0
      33: istore        6
      35: invokestatic  #23                 // Method java/nio/channels/ServerSocketChannel.open:()Ljava/nio/channels/ServerSocketChannel;
      38: astore        7
      40: aload         7
      42: iconst_0
      43: invokevirtual #24                 // Method java/nio/channels/ServerSocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      46: pop
      47: aload         4
      49: getstatic     #25                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      52: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      55: ifeq          75
      58: aload         7
      60: invokevirtual #27                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      63: aload         4
      65: getstatic     #25                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      68: iconst_m1
      69: invokevirtual #28                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      72: invokevirtual #29                 // Method java/net/ServerSocket.setReceiveBufferSize:(I)V
      75: aload         7
      77: invokevirtual #27                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      80: aload         4
      82: getstatic     #30                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      85: iconst_1
      86: invokevirtual #31                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      89: invokevirtual #32                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
      92: aload         7
      94: aload_1
      95: invokevirtual #33                 // Method java/nio/channels/ServerSocketChannel.bind:(Ljava/net/SocketAddress;)Ljava/nio/channels/ServerSocketChannel;
      98: pop
      99: aload_3
     100: ifnull        118
     103: new           #34                 // class org/xnio/nio/WorkerThread$1
     106: dup
     107: aload_0
     108: aload         7
     110: invokespecial #35                 // Method org/xnio/nio/WorkerThread$1."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/ServerSocketChannel;)V
     113: aload_3
     114: invokestatic  #36                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     117: pop
     118: aload_0
     119: aload         7
     121: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     124: astore        8
     126: new           #38                 // class org/xnio/nio/WorkerThread$2
     129: dup
     130: aload_0
     131: aload_0
     132: aload         8
     134: aload         7
     136: aload         4
     138: aload         5
     140: aload_2
     141: invokespecial #39                 // Method org/xnio/nio/WorkerThread$2."<init>":(Lorg/xnio/nio/WorkerThread;Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Ljava/nio/channels/ServerSocketChannel;Lorg/xnio/OptionMap;Lorg/xnio/FutureResult;Lorg/xnio/ChannelListener;)V
     144: astore        9
     146: aload         8
     148: aload         9
     150: invokevirtual #40                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: aload         9
     156: bipush        16
     158: invokevirtual #42                 // Method org/xnio/nio/NioHandle.resume:(I)V
     161: iconst_1
     162: istore        6
     164: aload         5
     166: new           #43                 // class org/xnio/nio/WorkerThread$3
     169: dup
     170: aload_0
     171: aload         5
     173: aload         7
     175: invokespecial #44                 // Method org/xnio/nio/WorkerThread$3."<init>":(Lorg/xnio/nio/WorkerThread;Lorg/xnio/FutureResult;Ljava/nio/channels/ServerSocketChannel;)V
     178: invokevirtual #45                 // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
     181: aload         5
     183: invokevirtual #46                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
     186: astore        10
     188: iload         6
     190: ifne          198
     193: aload         7
     195: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     198: aload         10
     200: areturn
     201: astore        11
     203: iload         6
     205: ifne          213
     208: aload         7
     210: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     213: aload         11
     215: athrow
     216: astore        6
     218: new           #19                 // class org/xnio/FailedIoFuture
     221: dup
     222: aload         6
     224: invokespecial #20                 // Method org/xnio/FailedIoFuture."<init>":(Ljava/io/IOException;)V
     227: areturn
    Exception table:
       from    to  target type
           0     7    10   Class org/xnio/ClosedWorkerException
          40   188   201   any
         201   203   201   any
          32   198   216   Class java/io/IOException
         201   216   216   Class java/io/IOException

  protected org.xnio.IoFuture<org.xnio.StreamConnection> openTcpStreamConnection(java.net.InetSocketAddress, java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.StreamConnection>, org.xnio.ChannelListener<? super org.xnio.channels.BoundChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #17                 // Method org/xnio/nio/NioXnioWorker.checkShutdown:()V
       7: goto          22
      10: astore        6
      12: new           #19                 // class org/xnio/FailedIoFuture
      15: dup
      16: aload         6
      18: invokespecial #20                 // Method org/xnio/FailedIoFuture."<init>":(Ljava/io/IOException;)V
      21: areturn
      22: invokestatic  #49                 // Method java/nio/channels/SocketChannel.open:()Ljava/nio/channels/SocketChannel;
      25: astore        6
      27: iconst_0
      28: istore        7
      30: aload         6
      32: iconst_0
      33: invokevirtual #50                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      36: pop
      37: aload         5
      39: getstatic     #51                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
      42: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      45: ifeq          65
      48: aload         6
      50: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      53: aload         5
      55: getstatic     #51                 // Field org/xnio/Options.TCP_OOB_INLINE:Lorg/xnio/Option;
      58: iconst_0
      59: invokevirtual #31                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      62: invokevirtual #53                 // Method java/net/Socket.setOOBInline:(Z)V
      65: aload         5
      67: getstatic     #54                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      70: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      73: ifeq          93
      76: aload         6
      78: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      81: aload         5
      83: getstatic     #54                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      86: iconst_0
      87: invokevirtual #31                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      90: invokevirtual #55                 // Method java/net/Socket.setTcpNoDelay:(Z)V
      93: aload         5
      95: getstatic     #56                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
      98: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     101: ifeq          121
     104: aload         6
     106: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     109: aload         5
     111: getstatic     #56                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     114: iconst_m1
     115: invokevirtual #28                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     118: invokevirtual #57                 // Method java/net/Socket.setTrafficClass:(I)V
     121: aload         5
     123: getstatic     #58                 // Field org/xnio/Options.CLOSE_ABORT:Lorg/xnio/Option;
     126: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     129: ifeq          150
     132: aload         6
     134: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     137: aload         5
     139: getstatic     #58                 // Field org/xnio/Options.CLOSE_ABORT:Lorg/xnio/Option;
     142: iconst_0
     143: invokevirtual #31                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     146: iconst_0
     147: invokevirtual #59                 // Method java/net/Socket.setSoLinger:(ZI)V
     150: aload         5
     152: getstatic     #60                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     155: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     158: ifeq          178
     161: aload         6
     163: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     166: aload         5
     168: getstatic     #60                 // Field org/xnio/Options.KEEP_ALIVE:Lorg/xnio/Option;
     171: iconst_0
     172: invokevirtual #31                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     175: invokevirtual #61                 // Method java/net/Socket.setKeepAlive:(Z)V
     178: aload         5
     180: getstatic     #25                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
     183: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     186: ifeq          206
     189: aload         6
     191: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     194: aload         5
     196: getstatic     #25                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
     199: iconst_m1
     200: invokevirtual #28                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     203: invokevirtual #62                 // Method java/net/Socket.setReceiveBufferSize:(I)V
     206: aload         5
     208: getstatic     #30                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
     211: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     214: ifeq          234
     217: aload         6
     219: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     222: aload         5
     224: getstatic     #30                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
     227: iconst_0
     228: invokevirtual #31                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     231: invokevirtual #63                 // Method java/net/Socket.setReuseAddress:(Z)V
     234: aload         5
     236: getstatic     #64                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     239: invokevirtual #26                 // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     242: ifeq          262
     245: aload         6
     247: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     250: aload         5
     252: getstatic     #64                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     255: iconst_m1
     256: invokevirtual #28                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     259: invokevirtual #65                 // Method java/net/Socket.setSendBufferSize:(I)V
     262: aload_0
     263: aload         6
     265: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     268: astore        8
     270: new           #66                 // class org/xnio/nio/NioSocketStreamConnection
     273: dup
     274: aload_0
     275: aload         8
     277: aconst_null
     278: invokespecial #67                 // Method org/xnio/nio/NioSocketStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/nio/ChannelClosed;)V
     281: astore        9
     283: aload         6
     285: invokevirtual #52                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
     288: aload_1
     289: invokevirtual #68                 // Method java/net/Socket.bind:(Ljava/net/SocketAddress;)V
     292: aload         9
     294: aload         4
     296: invokestatic  #36                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     299: pop
     300: aload         6
     302: aload_2
     303: invokevirtual #69                 // Method java/nio/channels/SocketChannel.connect:(Ljava/net/SocketAddress;)Z
     306: ifeq          350
     309: aload_0
     310: aload         9
     312: aload_3
     313: invokestatic  #70                 // Method org/xnio/ChannelListeners.getChannelListenerTask:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Ljava/lang/Runnable;
     316: invokevirtual #71                 // Method execute:(Ljava/lang/Runnable;)V
     319: new           #72                 // class org/xnio/FinishedIoFuture
     322: dup
     323: aload         9
     325: invokespecial #73                 // Method org/xnio/FinishedIoFuture."<init>":(Ljava/lang/Object;)V
     328: astore        10
     330: iconst_1
     331: istore        7
     333: aload         10
     335: astore        11
     337: iload         7
     339: ifne          347
     342: aload         6
     344: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     347: aload         11
     349: areturn
     350: new           #21                 // class org/xnio/FutureResult
     353: dup
     354: aload_0
     355: invokespecial #22                 // Method org/xnio/FutureResult."<init>":(Ljava/util/concurrent/Executor;)V
     358: astore        10
     360: new           #74                 // class org/xnio/nio/WorkerThread$ConnectHandle
     363: dup
     364: aload_0
     365: aload         8
     367: aload         10
     369: aload         9
     371: aload_3
     372: invokespecial #75                 // Method org/xnio/nio/WorkerThread$ConnectHandle."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Lorg/xnio/FutureResult;Lorg/xnio/nio/NioSocketStreamConnection;Lorg/xnio/ChannelListener;)V
     375: astore        11
     377: aload         8
     379: aload         11
     381: invokevirtual #40                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     384: pop
     385: aload         10
     387: new           #76                 // class org/xnio/nio/WorkerThread$4
     390: dup
     391: aload_0
     392: aload         10
     394: aload         9
     396: invokespecial #77                 // Method org/xnio/nio/WorkerThread$4."<init>":(Lorg/xnio/nio/WorkerThread;Lorg/xnio/FutureResult;Lorg/xnio/nio/NioSocketStreamConnection;)V
     399: invokevirtual #45                 // Method org/xnio/FutureResult.addCancelHandler:(Lorg/xnio/Cancellable;)V
     402: aload         11
     404: bipush        8
     406: invokevirtual #78                 // Method org/xnio/nio/WorkerThread$ConnectHandle.resume:(I)V
     409: iconst_1
     410: istore        7
     412: aload         10
     414: invokevirtual #46                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
     417: astore        12
     419: iload         7
     421: ifne          429
     424: aload         6
     426: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     429: aload         12
     431: areturn
     432: astore        13
     434: iload         7
     436: ifne          444
     439: aload         6
     441: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     444: aload         13
     446: athrow
     447: astore        6
     449: new           #19                 // class org/xnio/FailedIoFuture
     452: dup
     453: aload         6
     455: invokespecial #20                 // Method org/xnio/FailedIoFuture."<init>":(Ljava/io/IOException;)V
     458: areturn
    Exception table:
       from    to  target type
           0     7    10   Class org/xnio/ClosedWorkerException
          30   337   432   any
         350   419   432   any
         432   434   432   any
          22   347   447   Class java/io/IOException
         350   429   447   Class java/io/IOException
         432   447   447   Class java/io/IOException

  org.xnio.nio.WorkerThread getNextThread();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #79                 // Method org/xnio/nio/NioXnioWorker.getAll:()[Lorg/xnio/nio/WorkerThread;
       7: astore_1
       8: aload_0
       9: invokevirtual #80                 // Method getNumber:()I
      12: istore_2
      13: iload_2
      14: aload_1
      15: arraylength
      16: iconst_1
      17: isub
      18: if_icmpne     25
      21: aload_1
      22: iconst_0
      23: aaload
      24: areturn
      25: aload_1
      26: iload_2
      27: iconst_1
      28: iadd
      29: aaload
      30: areturn

  private static org.xnio.nio.WorkerThread getPeerThread(org.xnio.XnioIoFactory) throws org.xnio.ClosedWorkerException;
    Code:
       0: aload_0
       1: instanceof    #15                 // class org/xnio/nio/NioXnioWorker
       4: ifeq          24
       7: aload_0
       8: checkcast     #15                 // class org/xnio/nio/NioXnioWorker
      11: astore_2
      12: aload_2
      13: invokevirtual #17                 // Method org/xnio/nio/NioXnioWorker.checkShutdown:()V
      16: aload_2
      17: invokevirtual #81                 // Method org/xnio/nio/NioXnioWorker.chooseThread:()Lorg/xnio/nio/WorkerThread;
      20: astore_1
      21: goto          55
      24: aload_0
      25: instanceof    #13                 // class org/xnio/nio/WorkerThread
      28: ifeq          46
      31: aload_0
      32: checkcast     #13                 // class org/xnio/nio/WorkerThread
      35: astore_1
      36: aload_1
      37: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
      40: invokevirtual #17                 // Method org/xnio/nio/NioXnioWorker.checkShutdown:()V
      43: goto          55
      46: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      49: invokeinterface #83,  1           // InterfaceMethod org/xnio/nio/Log.notNioProvider:()Ljava/lang/IllegalArgumentException;
      54: athrow
      55: aload_1
      56: areturn

  public org.xnio.ChannelPipe<org.xnio.StreamConnection, org.xnio.StreamConnection> createFullDuplexPipeConnection(org.xnio.XnioIoFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #17                 // Method org/xnio/nio/NioXnioWorker.checkShutdown:()V
       7: iconst_0
       8: istore_2
       9: invokestatic  #84                 // Method java/nio/channels/Pipe.open:()Ljava/nio/channels/Pipe;
      12: astore_3
      13: aload_3
      14: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
      17: iconst_0
      18: invokevirtual #86                 // Method java/nio/channels/Pipe$SourceChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      21: pop
      22: aload_3
      23: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
      26: iconst_0
      27: invokevirtual #88                 // Method java/nio/channels/Pipe$SinkChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      30: pop
      31: invokestatic  #84                 // Method java/nio/channels/Pipe.open:()Ljava/nio/channels/Pipe;
      34: astore        4
      36: aload         4
      38: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
      41: iconst_0
      42: invokevirtual #86                 // Method java/nio/channels/Pipe$SourceChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      45: pop
      46: aload         4
      48: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
      51: iconst_0
      52: invokevirtual #88                 // Method java/nio/channels/Pipe$SinkChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      55: pop
      56: aload_1
      57: invokestatic  #89                 // Method getPeerThread:(Lorg/xnio/XnioIoFactory;)Lorg/xnio/nio/WorkerThread;
      60: astore        5
      62: aload_0
      63: aload_3
      64: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
      67: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
      70: astore        6
      72: aload         5
      74: aload_3
      75: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
      78: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
      81: astore        7
      83: aload         5
      85: aload         4
      87: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
      90: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
      93: astore        8
      95: aload_0
      96: aload         4
      98: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
     101: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
     104: astore        9
     106: new           #90                 // class org/xnio/nio/NioPipeStreamConnection
     109: dup
     110: aload_0
     111: aload         8
     113: aload         7
     115: invokespecial #91                 // Method org/xnio/nio/NioPipeStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Ljava/nio/channels/SelectionKey;)V
     118: astore        10
     120: new           #90                 // class org/xnio/nio/NioPipeStreamConnection
     123: dup
     124: aload_0
     125: aload         6
     127: aload         9
     129: invokespecial #91                 // Method org/xnio/nio/NioPipeStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Ljava/nio/channels/SelectionKey;)V
     132: astore        11
     134: new           #92                 // class org/xnio/ChannelPipe
     137: dup
     138: aload         10
     140: aload         11
     142: invokespecial #93                 // Method org/xnio/ChannelPipe."<init>":(Lorg/xnio/channels/CloseableChannel;Lorg/xnio/channels/CloseableChannel;)V
     145: astore        12
     147: iconst_1
     148: istore_2
     149: aload         12
     151: astore        13
     153: iload_2
     154: ifne          173
     157: aload         4
     159: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
     162: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     165: aload         4
     167: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
     170: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     173: iload_2
     174: ifne          191
     177: aload_3
     178: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
     181: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     184: aload_3
     185: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
     188: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     191: aload         13
     193: areturn
     194: astore        14
     196: iload_2
     197: ifne          216
     200: aload         4
     202: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
     205: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     208: aload         4
     210: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
     213: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     216: aload         14
     218: athrow
     219: astore        15
     221: iload_2
     222: ifne          239
     225: aload_3
     226: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
     229: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     232: aload_3
     233: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
     236: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     239: aload         15
     241: athrow
    Exception table:
       from    to  target type
          36   153   194   any
         194   196   194   any
          13   173   219   any
         194   221   219   any

  public org.xnio.ChannelPipe<org.xnio.channels.StreamSourceChannel, org.xnio.channels.StreamSinkChannel> createHalfDuplexPipe(org.xnio.XnioIoFactory) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
       4: invokevirtual #17                 // Method org/xnio/nio/NioXnioWorker.checkShutdown:()V
       7: invokestatic  #84                 // Method java/nio/channels/Pipe.open:()Ljava/nio/channels/Pipe;
      10: astore_2
      11: iconst_0
      12: istore_3
      13: aload_2
      14: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
      17: iconst_0
      18: invokevirtual #86                 // Method java/nio/channels/Pipe$SourceChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      21: pop
      22: aload_2
      23: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
      26: iconst_0
      27: invokevirtual #88                 // Method java/nio/channels/Pipe$SinkChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      30: pop
      31: aload_1
      32: invokestatic  #89                 // Method getPeerThread:(Lorg/xnio/XnioIoFactory;)Lorg/xnio/nio/WorkerThread;
      35: astore        4
      37: aload_0
      38: aload_2
      39: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
      42: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
      45: astore        5
      47: aload         4
      49: aload_2
      50: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
      53: invokevirtual #37                 // Method registerChannel:(Ljava/nio/channels/spi/AbstractSelectableChannel;)Ljava/nio/channels/SelectionKey;
      56: astore        6
      58: new           #90                 // class org/xnio/nio/NioPipeStreamConnection
      61: dup
      62: aload_0
      63: aload         5
      65: aconst_null
      66: invokespecial #91                 // Method org/xnio/nio/NioPipeStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Ljava/nio/channels/SelectionKey;)V
      69: astore        7
      71: new           #90                 // class org/xnio/nio/NioPipeStreamConnection
      74: dup
      75: aload_0
      76: aconst_null
      77: aload         6
      79: invokespecial #91                 // Method org/xnio/nio/NioPipeStreamConnection."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;Ljava/nio/channels/SelectionKey;)V
      82: astore        8
      84: aload         7
      86: invokevirtual #94                 // Method org/xnio/nio/NioPipeStreamConnection.writeClosed:()Z
      89: pop
      90: aload         8
      92: invokevirtual #95                 // Method org/xnio/nio/NioPipeStreamConnection.readClosed:()Z
      95: pop
      96: new           #92                 // class org/xnio/ChannelPipe
      99: dup
     100: aload         7
     102: invokevirtual #96                 // Method org/xnio/nio/NioPipeStreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     105: aload         8
     107: invokevirtual #97                 // Method org/xnio/nio/NioPipeStreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     110: invokespecial #93                 // Method org/xnio/ChannelPipe."<init>":(Lorg/xnio/channels/CloseableChannel;Lorg/xnio/channels/CloseableChannel;)V
     113: astore        9
     115: iconst_1
     116: istore_3
     117: aload         9
     119: astore        10
     121: iload_3
     122: ifne          139
     125: aload_2
     126: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
     129: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     132: aload_2
     133: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
     136: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     139: aload         10
     141: areturn
     142: astore        11
     144: iload_3
     145: ifne          162
     148: aload_2
     149: invokevirtual #87                 // Method java/nio/channels/Pipe.sink:()Ljava/nio/channels/Pipe$SinkChannel;
     152: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     155: aload_2
     156: invokevirtual #85                 // Method java/nio/channels/Pipe.source:()Ljava/nio/channels/Pipe$SourceChannel;
     159: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     162: aload         11
     164: athrow
    Exception table:
       from    to  target type
          13   121   142   any
         142   144   142   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
       4: astore_1
       5: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       8: ldc           #98                 // String Starting worker thread %s
      10: aload_0
      11: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #2                  // Field workLock:Ljava/lang/Object;
      20: astore_2
      21: aload_0
      22: getfield      #8                  // Field selectorWorkQueue:Ljava/util/Queue;
      25: astore_3
      26: aload_0
      27: getfield      #1                  // Field delayWorkQueue:Ljava/util/TreeSet;
      30: astore        4
      32: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      35: ldc           #100                // String Started channel thread \'%s\', selector %s
      37: invokestatic  #12                 // Method currentThread:()Lorg/xnio/XnioIoThread;
      40: invokevirtual #101                // Method org/xnio/XnioIoThread.getName:()Ljava/lang/String;
      43: aload_1
      44: invokeinterface #102,  4          // InterfaceMethod org/xnio/nio/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      49: ldc2_w        #104                // long 9223372036854775807l
      52: lstore        7
      54: bipush        16
      56: anewarray     #41                 // class java/nio/channels/SelectionKey
      59: astore        10
      61: aload_2
      62: dup
      63: astore        13
      65: monitorenter
      66: aload_3
      67: invokeinterface #106,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      72: checkcast     #107                // class java/lang/Runnable
      75: astore        5
      77: aload         5
      79: ifnonnull     196
      82: aload         4
      84: invokevirtual #108                // Method java/util/TreeSet.iterator:()Ljava/util/Iterator;
      87: astore        6
      89: ldc2_w        #104                // long 9223372036854775807l
      92: lstore        7
      94: aload         6
      96: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          185
     104: invokestatic  #110                // Method java/lang/System.nanoTime:()J
     107: lstore        14
     109: aload         6
     111: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: checkcast     #112                // class org/xnio/nio/WorkerThread$TimeKey
     119: astore        16
     121: aload         16
     123: invokestatic  #113                // Method org/xnio/nio/WorkerThread$TimeKey.access$000:(Lorg/xnio/nio/WorkerThread$TimeKey;)J
     126: lload         14
     128: getstatic     #114                // Field START_TIME:J
     131: lsub
     132: lcmp
     133: ifgt          158
     136: aload_3
     137: aload         16
     139: invokestatic  #115                // Method org/xnio/nio/WorkerThread$TimeKey.access$100:(Lorg/xnio/nio/WorkerThread$TimeKey;)Ljava/lang/Runnable;
     142: invokeinterface #116,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     147: pop
     148: aload         6
     150: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.remove:()V
     155: goto          175
     158: aload         16
     160: invokestatic  #113                // Method org/xnio/nio/WorkerThread$TimeKey.access$000:(Lorg/xnio/nio/WorkerThread$TimeKey;)J
     163: lload         14
     165: getstatic     #114                // Field START_TIME:J
     168: lsub
     169: lsub
     170: lstore        7
     172: goto          185
     175: aload         6
     177: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     182: ifne          109
     185: aload_3
     186: invokeinterface #106,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     191: checkcast     #107                // class java/lang/Runnable
     194: astore        5
     196: aload         13
     198: monitorexit
     199: goto          210
     202: astore        17
     204: aload         13
     206: monitorexit
     207: aload         17
     209: athrow
     210: aload         5
     212: invokestatic  #118                // Method safeRun:(Ljava/lang/Runnable;)V
     215: aload         5
     217: ifnonnull     61
     220: aload_0
     221: getfield      #119                // Field state:I
     224: istore        11
     226: iload         11
     228: ldc           #120                // int -2147483648
     230: iand
     231: ifeq          464
     234: aload_2
     235: dup
     236: astore        13
     238: monitorenter
     239: aload_1
     240: invokevirtual #121                // Method java/nio/channels/Selector.keys:()Ljava/util/Set;
     243: invokeinterface #122,  1          // InterfaceMethod java/util/Set.size:()I
     248: istore        12
     250: aload_0
     251: iload         12
     253: ldc           #120                // int -2147483648
     255: ior
     256: putfield      #119                // Field state:I
     259: iload         12
     261: ifne          299
     264: aload_3
     265: invokeinterface #123,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z
     270: ifeq          299
     273: aload         13
     275: monitorexit
     276: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     279: ldc           #124                // String Shutting down channel thread \"%s\"
     281: aload_0
     282: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     287: aload_1
     288: invokestatic  #125                // Method org/xnio/IoUtils.safeClose:(Ljava/nio/channels/Selector;)V
     291: aload_0
     292: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
     295: invokevirtual #126                // Method org/xnio/nio/NioXnioWorker.closeResource:()V
     298: return
     299: aload         13
     301: monitorexit
     302: goto          313
     305: astore        18
     307: aload         13
     309: monitorexit
     310: aload         18
     312: athrow
     313: aload_1
     314: dup
     315: astore        13
     317: monitorenter
     318: aload_1
     319: invokevirtual #121                // Method java/nio/channels/Selector.keys:()Ljava/util/Set;
     322: astore        14
     324: aload         14
     326: dup
     327: astore        15
     329: monitorenter
     330: aload         14
     332: aload         10
     334: invokeinterface #127,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     339: checkcast     #128                // class "[Ljava/nio/channels/SelectionKey;"
     342: astore        10
     344: aload         10
     346: aload         14
     348: invokeinterface #122,  1          // InterfaceMethod java/util/Set.size:()I
     353: aload         10
     355: arraylength
     356: aconst_null
     357: invokestatic  #129                // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
     360: aload         15
     362: monitorexit
     363: goto          374
     366: astore        19
     368: aload         15
     370: monitorexit
     371: aload         19
     373: athrow
     374: aload         13
     376: monitorexit
     377: goto          388
     380: astore        20
     382: aload         13
     384: monitorexit
     385: aload         20
     387: athrow
     388: iconst_0
     389: istore        13
     391: iload         13
     393: aload         10
     395: arraylength
     396: if_icmpge     454
     399: aload         10
     401: iload         13
     403: aaload
     404: astore        14
     406: aload         14
     408: ifnonnull     414
     411: goto          454
     414: aload         10
     416: iload         13
     418: aconst_null
     419: aastore
     420: aload         14
     422: invokevirtual #130                // Method java/nio/channels/SelectionKey.attachment:()Ljava/lang/Object;
     425: checkcast     #131                // class org/xnio/nio/NioHandle
     428: astore        15
     430: aload         15
     432: ifnull        448
     435: aload         14
     437: invokevirtual #132                // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
     440: invokestatic  #47                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     443: aload         15
     445: invokevirtual #133                // Method org/xnio/nio/NioHandle.forceTermination:()V
     448: iinc          13, 1
     451: goto          391
     454: aload         10
     456: iconst_0
     457: aload         10
     459: arraylength
     460: aconst_null
     461: invokestatic  #129                // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
     464: iload         11
     466: ldc           #120                // int -2147483648
     468: iand
     469: ifeq          491
     472: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     475: ldc           #135                // String Beginning select on %s (shutdown in progress)
     477: aload_1
     478: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     483: aload_1
     484: invokevirtual #136                // Method java/nio/channels/Selector.selectNow:()I
     487: pop
     488: goto          627
     491: lload         7
     493: ldc2_w        #104                // long 9223372036854775807l
     496: lcmp
     497: ifne          559
     500: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     503: ldc           #137                // String Beginning select on %s
     505: aload_1
     506: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     511: aload_0
     512: iconst_1
     513: putfield      #138                // Field polling:Z
     516: aload_3
     517: invokeinterface #139,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
     522: ifnull        533
     525: aload_1
     526: invokevirtual #136                // Method java/nio/channels/Selector.selectNow:()I
     529: pop
     530: goto          538
     533: aload_1
     534: invokevirtual #140                // Method java/nio/channels/Selector.select:()I
     537: pop
     538: aload_0
     539: iconst_0
     540: putfield      #138                // Field polling:Z
     543: goto          556
     546: astore        21
     548: aload_0
     549: iconst_0
     550: putfield      #138                // Field polling:Z
     553: aload         21
     555: athrow
     556: goto          627
     559: lconst_1
     560: lload         7
     562: ldc2_w        #141                // long 1000000l
     565: ldiv
     566: ladd
     567: lstore        13
     569: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     572: ldc           #143                // String Beginning select on %s (with timeout)
     574: aload_1
     575: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     580: aload_0
     581: iconst_1
     582: putfield      #138                // Field polling:Z
     585: aload_3
     586: invokeinterface #139,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
     591: ifnull        602
     594: aload_1
     595: invokevirtual #136                // Method java/nio/channels/Selector.selectNow:()I
     598: pop
     599: goto          609
     602: aload_1
     603: lload         13
     605: invokevirtual #144                // Method java/nio/channels/Selector.select:(J)I
     608: pop
     609: aload_0
     610: iconst_0
     611: putfield      #138                // Field polling:Z
     614: goto          627
     617: astore        22
     619: aload_0
     620: iconst_0
     621: putfield      #138                // Field polling:Z
     624: aload         22
     626: athrow
     627: goto          657
     630: astore        13
     632: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     635: ldc           #146                // String Spurious cancelled key exception
     637: invokeinterface #147,  2          // InterfaceMethod org/xnio/nio/Log.trace:(Ljava/lang/Object;)V
     642: goto          657
     645: astore        13
     647: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     650: aload         13
     652: invokeinterface #148,  2          // InterfaceMethod org/xnio/nio/Log.selectionError:(Ljava/io/IOException;)V
     657: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     660: ldc           #149                // String Selected on %s
     662: aload_1
     663: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     668: aload_1
     669: dup
     670: astore        13
     672: monitorenter
     673: aload_1
     674: invokevirtual #150                // Method java/nio/channels/Selector.selectedKeys:()Ljava/util/Set;
     677: astore        9
     679: aload         9
     681: dup
     682: astore        14
     684: monitorenter
     685: aload         9
     687: aload         10
     689: invokeinterface #127,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     694: checkcast     #128                // class "[Ljava/nio/channels/SelectionKey;"
     697: astore        10
     699: aload         10
     701: aload         9
     703: invokeinterface #122,  1          // InterfaceMethod java/util/Set.size:()I
     708: aload         10
     710: arraylength
     711: aconst_null
     712: invokestatic  #129                // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
     715: aload         9
     717: invokeinterface #151,  1          // InterfaceMethod java/util/Set.clear:()V
     722: aload         14
     724: monitorexit
     725: goto          736
     728: astore        23
     730: aload         14
     732: monitorexit
     733: aload         23
     735: athrow
     736: aload         13
     738: monitorexit
     739: goto          750
     742: astore        24
     744: aload         13
     746: monitorexit
     747: aload         24
     749: athrow
     750: iconst_0
     751: istore        13
     753: iload         13
     755: aload         10
     757: arraylength
     758: if_icmpge     887
     761: aload         10
     763: iload         13
     765: aaload
     766: astore        14
     768: aload         14
     770: ifnonnull     776
     773: goto          887
     776: aload         10
     778: iload         13
     780: aconst_null
     781: aastore
     782: aload         14
     784: invokevirtual #152                // Method java/nio/channels/SelectionKey.interestOps:()I
     787: istore        15
     789: iload         15
     791: ifeq          845
     794: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     797: ldc           #153                // String Selected key %s for %s
     799: aload         14
     801: aload         14
     803: invokevirtual #132                // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
     806: invokeinterface #154,  4          // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     811: aload         14
     813: invokevirtual #130                // Method java/nio/channels/SelectionKey.attachment:()Ljava/lang/Object;
     816: checkcast     #131                // class org/xnio/nio/NioHandle
     819: astore        16
     821: aload         16
     823: ifnonnull     835
     826: aload_0
     827: aload         14
     829: invokevirtual #155                // Method cancelKey:(Ljava/nio/channels/SelectionKey;)V
     832: goto          845
     835: aload         16
     837: aload         14
     839: invokevirtual #156                // Method java/nio/channels/SelectionKey.readyOps:()I
     842: invokevirtual #157                // Method org/xnio/nio/NioHandle.handleReady:(I)V
     845: goto          881
     848: astore        16
     850: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     853: ldc           #158                // String Skipping selection of cancelled key %s
     855: aload         14
     857: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     862: goto          881
     865: astore        16
     867: getstatic     #134                // Field org/xnio/nio/Log.selectorLog:Lorg/xnio/nio/Log;
     870: aload         16
     872: ldc           #160                // String Unexpected failure of selection of key %s
     874: aload         14
     876: invokeinterface #161,  4          // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
     881: iinc          13, 1
     884: goto          753
     887: goto          61
     890: astore        25
     892: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     895: ldc           #124                // String Shutting down channel thread \"%s\"
     897: aload_0
     898: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     903: aload_1
     904: invokestatic  #125                // Method org/xnio/IoUtils.safeClose:(Ljava/nio/channels/Selector;)V
     907: aload_0
     908: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
     911: invokevirtual #126                // Method org/xnio/nio/NioXnioWorker.closeResource:()V
     914: aload         25
     916: athrow
    Exception table:
       from    to  target type
          66   199   202   any
         202   207   202   any
         239   276   305   any
         299   302   305   any
         305   310   305   any
         330   363   366   any
         366   371   366   any
         318   377   380   any
         380   385   380   any
         516   538   546   any
         546   548   546   any
         585   609   617   any
         617   619   617   any
         464   627   630   Class java/nio/channels/CancelledKeyException
         464   627   645   Class java/io/IOException
         685   725   728   any
         728   733   728   any
         673   739   742   any
         742   747   742   any
         782   845   848   Class java/nio/channels/CancelledKeyException
         782   845   865   Class java/lang/Throwable
           5   276   890   any
         299   892   890   any

  private static void safeRun(java.lang.Runnable);
    Code:
       0: aload_0
       1: ifnull        35
       4: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
       7: ldc           #162                // String Running task %s
       9: aload_0
      10: invokeinterface #99,  3           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_0
      16: invokeinterface #163,  1          // InterfaceMethod java/lang/Runnable.run:()V
      21: goto          35
      24: astore_1
      25: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      28: aload_0
      29: aload_1
      30: invokeinterface #164,  3          // InterfaceMethod org/xnio/nio/Log.taskFailed:(Ljava/lang/Runnable;Ljava/lang/Throwable;)V
      35: return
    Exception table:
       from    to  target type
           4    21    24   Class java/lang/Throwable

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #119                // Field state:I
       4: ldc           #120                // int -2147483648
       6: iand
       7: ifeq          19
      10: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      13: invokeinterface #165,  1          // InterfaceMethod org/xnio/nio/Log.threadExiting:()Ljava/util/concurrent/RejectedExecutionException;
      18: athrow
      19: aload_0
      20: getfield      #2                  // Field workLock:Ljava/lang/Object;
      23: dup
      24: astore_2
      25: monitorenter
      26: aload_0
      27: getfield      #8                  // Field selectorWorkQueue:Ljava/util/Queue;
      30: aload_1
      31: invokeinterface #116,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      36: pop
      37: aload_2
      38: monitorexit
      39: goto          47
      42: astore_3
      43: aload_2
      44: monitorexit
      45: aload_3
      46: athrow
      47: aload_0
      48: getfield      #138                // Field polling:Z
      51: ifeq          62
      54: aload_0
      55: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      58: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      61: pop
      62: return
    Exception table:
       from    to  target type
          26    39    42   any
          42    45    42   any

  void shutdown();
    Code:
       0: aload_0
       1: getfield      #119                // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #120                // int -2147483648
       8: iand
       9: ifeq          13
      12: return
      13: getstatic     #167                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      16: aload_0
      17: iload_1
      18: iload_1
      19: ldc           #120                // int -2147483648
      21: ior
      22: invokevirtual #168                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      25: ifeq          0
      28: invokestatic  #12                 // Method currentThread:()Lorg/xnio/XnioIoThread;
      31: aload_0
      32: if_acmpeq     43
      35: aload_0
      36: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      39: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      42: pop
      43: return

  public org.xnio.XnioExecutor$Key executeAfter(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #169                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       6: lstore        5
       8: aload_0
       9: getfield      #119                // Field state:I
      12: ldc           #120                // int -2147483648
      14: iand
      15: ifeq          27
      18: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      21: invokeinterface #165,  1          // InterfaceMethod org/xnio/nio/Log.threadExiting:()Ljava/util/concurrent/RejectedExecutionException;
      26: athrow
      27: lload         5
      29: lconst_0
      30: lcmp
      31: ifgt          43
      34: aload_0
      35: aload_1
      36: invokevirtual #71                 // Method execute:(Ljava/lang/Runnable;)V
      39: getstatic     #170                // Field org/xnio/XnioExecutor$Key.IMMEDIATE:Lorg/xnio/XnioExecutor$Key;
      42: areturn
      43: invokestatic  #110                // Method java/lang/System.nanoTime:()J
      46: getstatic     #114                // Field START_TIME:J
      49: lsub
      50: lload         5
      52: ldc2_w        #171                // long 9223372036853l
      55: invokestatic  #173                // Method java/lang/Math.min:(JJ)J
      58: ldc2_w        #141                // long 1000000l
      61: lmul
      62: ladd
      63: lstore        7
      65: new           #112                // class org/xnio/nio/WorkerThread$TimeKey
      68: dup
      69: aload_0
      70: lload         7
      72: aload_1
      73: invokespecial #174                // Method org/xnio/nio/WorkerThread$TimeKey."<init>":(Lorg/xnio/nio/WorkerThread;JLjava/lang/Runnable;)V
      76: astore        9
      78: aload_0
      79: getfield      #2                  // Field workLock:Ljava/lang/Object;
      82: dup
      83: astore        10
      85: monitorenter
      86: aload_0
      87: getfield      #1                  // Field delayWorkQueue:Ljava/util/TreeSet;
      90: astore        11
      92: aload         11
      94: aload         9
      96: invokevirtual #175                // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
      99: pop
     100: aload         11
     102: invokevirtual #108                // Method java/util/TreeSet.iterator:()Ljava/util/Iterator;
     105: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: aload         9
     112: if_acmpne     130
     115: aload_0
     116: getfield      #138                // Field polling:Z
     119: ifeq          130
     122: aload_0
     123: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
     126: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
     129: pop
     130: aload         9
     132: aload         10
     134: monitorexit
     135: areturn
     136: astore        12
     138: aload         10
     140: monitorexit
     141: aload         12
     143: athrow
    Exception table:
       from    to  target type
          86   135   136   any
         136   141   136   any

  public org.xnio.XnioExecutor$Key executeAtInterval(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #169                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       6: lstore        5
       8: new           #176                // class org/xnio/nio/WorkerThread$RepeatKey
      11: dup
      12: aload_0
      13: aload_1
      14: lload         5
      16: invokespecial #177                // Method org/xnio/nio/WorkerThread$RepeatKey."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/lang/Runnable;J)V
      19: astore        7
      21: aload_0
      22: aload         7
      24: lload         5
      26: getstatic     #178                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      29: invokevirtual #179                // Method executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      32: astore        8
      34: aload         7
      36: aload         8
      38: invokevirtual #180                // Method org/xnio/nio/WorkerThread$RepeatKey.setFirst:(Lorg/xnio/XnioExecutor$Key;)V
      41: aload         7
      43: areturn

  java.nio.channels.SelectionKey registerChannel(java.nio.channels.spi.AbstractSelectableChannel) throws java.nio.channels.ClosedChannelException;
    Code:
       0: invokestatic  #12                 // Method currentThread:()Lorg/xnio/XnioIoThread;
       3: aload_0
       4: if_acmpne     17
       7: aload_1
       8: aload_0
       9: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      12: iconst_0
      13: invokevirtual #181                // Method java/nio/channels/spi/AbstractSelectableChannel.register:(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
      16: areturn
      17: getstatic     #182                // Field THREAD_SAFE_SELECTION_KEYS:Z
      20: ifeq          68
      23: aload_1
      24: aload_0
      25: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      28: iconst_0
      29: invokevirtual #181                // Method java/nio/channels/spi/AbstractSelectableChannel.register:(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
      32: astore_2
      33: aload_0
      34: getfield      #138                // Field polling:Z
      37: ifeq          48
      40: aload_0
      41: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      44: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      47: pop
      48: aload_2
      49: areturn
      50: astore_3
      51: aload_0
      52: getfield      #138                // Field polling:Z
      55: ifeq          66
      58: aload_0
      59: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      62: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      65: pop
      66: aload_3
      67: athrow
      68: new           #183                // class org/xnio/nio/WorkerThread$SynchTask
      71: dup
      72: aload_0
      73: invokespecial #184                // Method org/xnio/nio/WorkerThread$SynchTask."<init>":(Lorg/xnio/nio/WorkerThread;)V
      76: astore_2
      77: aload_0
      78: aload_2
      79: invokevirtual #185                // Method queueTask:(Ljava/lang/Runnable;)V
      82: aload_0
      83: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      86: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      89: pop
      90: aload_1
      91: aload_0
      92: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      95: iconst_0
      96: invokevirtual #181                // Method java/nio/channels/spi/AbstractSelectableChannel.register:(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
      99: astore_3
     100: aload_2
     101: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
     104: aload_3
     105: areturn
     106: astore        4
     108: aload_2
     109: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
     112: aload         4
     114: athrow
    Exception table:
       from    to  target type
          23    33    50   any
          82   100   106   any
         106   108   106   any

  void queueTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field workLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #8                  // Field selectorWorkQueue:Ljava/util/Queue;
      11: aload_1
      12: invokeinterface #116,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  void cancelKey(java.nio.channels.SelectionKey);
    Code:
       0: getstatic     #187                // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_1
       7: invokevirtual #188                // Method java/nio/channels/SelectionKey.selector:()Ljava/nio/channels/Selector;
      10: aload_0
      11: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      14: if_acmpeq     25
      17: new           #189                // class java/lang/AssertionError
      20: dup
      21: invokespecial #190                // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_1
      26: invokevirtual #132                // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      29: astore_2
      30: invokestatic  #12                 // Method currentThread:()Lorg/xnio/XnioIoThread;
      33: aload_0
      34: if_acmpne     107
      37: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      40: getstatic     #191                // Field FQCN:Ljava/lang/String;
      43: getstatic     #192                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      46: aconst_null
      47: ldc           #193                // String Cancelling key %s of %s (same thread)
      49: aload_1
      50: aload_2
      51: invokeinterface #194,  7          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      56: aload_1
      57: invokevirtual #195                // Method java/nio/channels/SelectionKey.cancel:()V
      60: aload_0
      61: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      64: invokevirtual #136                // Method java/nio/channels/Selector.selectNow:()I
      67: pop
      68: goto          81
      71: astore_3
      72: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      75: aload_3
      76: invokeinterface #148,  2          // InterfaceMethod org/xnio/nio/Log.selectionError:(Ljava/io/IOException;)V
      81: goto          260
      84: astore_3
      85: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      88: getstatic     #191                // Field FQCN:Ljava/lang/String;
      91: getstatic     #192                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
      94: aload_3
      95: ldc           #196                // String Error cancelling key %s of %s (same thread)
      97: aload_1
      98: aload_2
      99: invokeinterface #194,  7          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     104: goto          260
     107: getstatic     #197                // Field OLD_LOCKING:Z
     110: ifeq          206
     113: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     116: getstatic     #191                // Field FQCN:Ljava/lang/String;
     119: getstatic     #192                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
     122: aconst_null
     123: ldc           #198                // String Cancelling key %s of %s (same thread, old locking)
     125: aload_1
     126: aload_2
     127: invokeinterface #194,  7          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     132: new           #183                // class org/xnio/nio/WorkerThread$SynchTask
     135: dup
     136: aload_0
     137: invokespecial #184                // Method org/xnio/nio/WorkerThread$SynchTask."<init>":(Lorg/xnio/nio/WorkerThread;)V
     140: astore_3
     141: aload_0
     142: aload_3
     143: invokevirtual #185                // Method queueTask:(Ljava/lang/Runnable;)V
     146: aload_0
     147: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
     150: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
     153: pop
     154: aload_1
     155: invokevirtual #195                // Method java/nio/channels/SelectionKey.cancel:()V
     158: aload_3
     159: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
     162: goto          203
     165: astore        4
     167: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     170: getstatic     #191                // Field FQCN:Ljava/lang/String;
     173: getstatic     #192                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
     176: aload         4
     178: ldc           #199                // String Error cancelling key %s of %s (same thread, old locking)
     180: aload_1
     181: aload_2
     182: invokeinterface #194,  7          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     187: aload_3
     188: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
     191: goto          203
     194: astore        5
     196: aload_3
     197: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
     200: aload         5
     202: athrow
     203: goto          260
     206: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     209: getstatic     #191                // Field FQCN:Ljava/lang/String;
     212: getstatic     #192                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
     215: aconst_null
     216: ldc           #200                // String Cancelling key %s of %s (other thread)
     218: aload_1
     219: aload_2
     220: invokeinterface #194,  7          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     225: aload_1
     226: invokevirtual #195                // Method java/nio/channels/SelectionKey.cancel:()V
     229: aload_0
     230: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
     233: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
     236: pop
     237: goto          260
     240: astore_3
     241: getstatic     #82                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
     244: getstatic     #191                // Field FQCN:Ljava/lang/String;
     247: getstatic     #192                // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
     250: aload_3
     251: ldc           #201                // String Error cancelling key %s of %s (other thread)
     253: aload_1
     254: aload_2
     255: invokeinterface #194,  7          // InterfaceMethod org/xnio/nio/Log.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     260: return
    Exception table:
       from    to  target type
          60    68    71   Class java/io/IOException
          56    81    84   Class java/lang/Throwable
         146   158   165   Class java/lang/Throwable
         146   158   194   any
         165   187   194   any
         194   196   194   any
         225   237   240   Class java/lang/Throwable

  void setOps(java.nio.channels.SelectionKey, int);
    Code:
       0: invokestatic  #12                 // Method currentThread:()Lorg/xnio/XnioIoThread;
       3: aload_0
       4: if_acmpne     25
       7: aload_1
       8: aload_1
       9: invokevirtual #152                // Method java/nio/channels/SelectionKey.interestOps:()I
      12: iload_2
      13: ior
      14: invokevirtual #202                // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      17: pop
      18: goto          122
      21: astore_3
      22: goto          122
      25: getstatic     #197                // Field OLD_LOCKING:Z
      28: ifeq          92
      31: new           #183                // class org/xnio/nio/WorkerThread$SynchTask
      34: dup
      35: aload_0
      36: invokespecial #184                // Method org/xnio/nio/WorkerThread$SynchTask."<init>":(Lorg/xnio/nio/WorkerThread;)V
      39: astore_3
      40: aload_0
      41: aload_3
      42: invokevirtual #185                // Method queueTask:(Ljava/lang/Runnable;)V
      45: aload_0
      46: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      49: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      52: pop
      53: aload_1
      54: aload_1
      55: invokevirtual #152                // Method java/nio/channels/SelectionKey.interestOps:()I
      58: iload_2
      59: ior
      60: invokevirtual #202                // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      63: pop
      64: aload_3
      65: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
      68: goto          89
      71: astore        4
      73: aload_3
      74: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
      77: goto          89
      80: astore        5
      82: aload_3
      83: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
      86: aload         5
      88: athrow
      89: goto          122
      92: aload_1
      93: aload_1
      94: invokevirtual #152                // Method java/nio/channels/SelectionKey.interestOps:()I
      97: iload_2
      98: ior
      99: invokevirtual #202                // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
     102: pop
     103: aload_0
     104: getfield      #138                // Field polling:Z
     107: ifeq          118
     110: aload_0
     111: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
     114: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
     117: pop
     118: goto          122
     121: astore_3
     122: return
    Exception table:
       from    to  target type
           7    18    21   Class java/nio/channels/CancelledKeyException
          45    64    71   Class java/nio/channels/CancelledKeyException
          45    64    80   any
          71    73    80   any
          80    82    80   any
          92   118   121   Class java/nio/channels/CancelledKeyException

  void clearOps(java.nio.channels.SelectionKey, int);
    Code:
       0: invokestatic  #12                 // Method currentThread:()Lorg/xnio/XnioIoThread;
       3: aload_0
       4: if_acmpeq     13
       7: getstatic     #197                // Field OLD_LOCKING:Z
      10: ifne          33
      13: aload_1
      14: aload_1
      15: invokevirtual #152                // Method java/nio/channels/SelectionKey.interestOps:()I
      18: iload_2
      19: iconst_m1
      20: ixor
      21: iand
      22: invokevirtual #202                // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      25: pop
      26: goto          93
      29: astore_3
      30: goto          93
      33: new           #183                // class org/xnio/nio/WorkerThread$SynchTask
      36: dup
      37: aload_0
      38: invokespecial #184                // Method org/xnio/nio/WorkerThread$SynchTask."<init>":(Lorg/xnio/nio/WorkerThread;)V
      41: astore_3
      42: aload_0
      43: aload_3
      44: invokevirtual #185                // Method queueTask:(Ljava/lang/Runnable;)V
      47: aload_0
      48: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
      51: invokevirtual #166                // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      54: pop
      55: aload_1
      56: aload_1
      57: invokevirtual #152                // Method java/nio/channels/SelectionKey.interestOps:()I
      60: iload_2
      61: iconst_m1
      62: ixor
      63: iand
      64: invokevirtual #202                // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      67: pop
      68: aload_3
      69: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
      72: goto          93
      75: astore        4
      77: aload_3
      78: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
      81: goto          93
      84: astore        5
      86: aload_3
      87: invokevirtual #186                // Method org/xnio/nio/WorkerThread$SynchTask.done:()V
      90: aload         5
      92: athrow
      93: return
    Exception table:
       from    to  target type
          13    26    29   Class java/nio/channels/CancelledKeyException
          47    68    75   Class java/nio/channels/CancelledKeyException
          47    68    84   any
          75    77    84   any
          84    86    84   any

  java.nio.channels.Selector getSelector();
    Code:
       0: aload_0
       1: getfield      #11                 // Field selector:Ljava/nio/channels/Selector;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #203                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: ireturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getWorker:()Lorg/xnio/nio/NioXnioWorker;
       4: areturn

  static java.lang.Object access$200(org.xnio.nio.WorkerThread);
    Code:
       0: aload_0
       1: getfield      #2                  // Field workLock:Ljava/lang/Object;
       4: areturn

  static java.util.TreeSet access$300(org.xnio.nio.WorkerThread);
    Code:
       0: aload_0
       1: getfield      #1                  // Field delayWorkQueue:Ljava/util/TreeSet;
       4: areturn

  static {};
    Code:
       0: ldc           #13                 // class org/xnio/nio/WorkerThread
       2: invokevirtual #204                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #187                // Field $assertionsDisabled:Z
      16: ldc           #13                 // class org/xnio/nio/WorkerThread
      18: invokevirtual #205                // Method java/lang/Class.getName:()Ljava/lang/String;
      21: putstatic     #191                // Field FQCN:Ljava/lang/String;
      24: invokestatic  #110                // Method java/lang/System.nanoTime:()J
      27: putstatic     #114                // Field START_TIME:J
      30: ldc           #13                 // class org/xnio/nio/WorkerThread
      32: ldc           #206                // String state
      34: invokestatic  #207                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      37: putstatic     #167                // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      40: new           #208                // class org/xnio/ReadPropertyAction
      43: dup
      44: ldc           #209                // String xnio.nio.old-locking
      46: ldc           #210                // String false
      48: invokespecial #211                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      51: invokestatic  #212                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      54: checkcast     #213                // class java/lang/String
      57: invokestatic  #214                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      60: putstatic     #197                // Field OLD_LOCKING:Z
      63: new           #208                // class org/xnio/ReadPropertyAction
      66: dup
      67: ldc           #215                // String xnio.nio.thread-safe-selection-keys
      69: ldc           #210                // String false
      71: invokespecial #211                // Method org/xnio/ReadPropertyAction."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      74: invokestatic  #212                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      77: checkcast     #213                // class java/lang/String
      80: invokestatic  #214                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      83: putstatic     #182                // Field THREAD_SAFE_SELECTION_KEYS:Z
      86: new           #216                // class java/util/concurrent/atomic/AtomicLong
      89: dup
      90: invokespecial #217                // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      93: putstatic     #218                // Field seqGen:Ljava/util/concurrent/atomic/AtomicLong;
      96: return
}
