Compiled from "FixedLengthStreamSinkChannel.java"
public final class org.xnio.channels.FixedLengthStreamSinkChannel implements org.xnio.channels.StreamSinkChannel, org.xnio.channels.ProtectedWrappedChannel<org.xnio.channels.StreamSinkChannel>, org.xnio.channels.WriteListenerSettable<org.xnio.channels.FixedLengthStreamSinkChannel>, org.xnio.channels.CloseListenerSettable<org.xnio.channels.FixedLengthStreamSinkChannel> {
  private final org.xnio.channels.StreamSinkChannel delegate;

  private final java.lang.Object guard;

  private final org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel> finishListener;

  private org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel> writeListener;

  private org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel> closeListener;

  private int state;

  private long count;

  private static final int FLAG_CLOSE_REQUESTED;

  private static final int FLAG_CLOSE_COMPLETE;

  private static final int FLAG_CONFIGURABLE;

  private static final int FLAG_PASS_CLOSE;

  public org.xnio.channels.FixedLengthStreamSinkChannel(org.xnio.channels.StreamSinkChannel, long, boolean, boolean, org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel>, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: lload_2
       5: lconst_0
       6: lcmp
       7: ifge          21
      10: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      13: ldc           #59                 // String contentLength
      15: invokeinterface #63,  2           // InterfaceMethod org/xnio/_private/Messages.parameterOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      20: athrow
      21: aload_1
      22: ifnonnull     36
      25: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      28: ldc           #64                 // String delegate
      30: invokeinterface #67,  2           // InterfaceMethod org/xnio/_private/Messages.nullParameter:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      35: athrow
      36: aload_0
      37: aload         7
      39: putfield      #69                 // Field guard:Ljava/lang/Object;
      42: aload_0
      43: aload_1
      44: putfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      47: aload_0
      48: aload         6
      50: putfield      #73                 // Field finishListener:Lorg/xnio/ChannelListener;
      53: aload_0
      54: iload         4
      56: ifeq          63
      59: iconst_4
      60: goto          64
      63: iconst_0
      64: iload         5
      66: ifeq          74
      69: bipush        8
      71: goto          75
      74: iconst_0
      75: ior
      76: putfield      #75                 // Field state:I
      79: aload_0
      80: lload_2
      81: putfield      #77                 // Field count:J
      84: aload_1
      85: invokeinterface #81,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      90: new           #16                 // class org/xnio/channels/FixedLengthStreamSinkChannel$1
      93: dup
      94: aload_0
      95: invokespecial #84                 // Method org/xnio/channels/FixedLengthStreamSinkChannel$1."<init>":(Lorg/xnio/channels/FixedLengthStreamSinkChannel;)V
      98: invokeinterface #88,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     103: return

  public void setWriteListener(org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field writeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel> getWriteListener();
    Code:
       0: aload_0
       1: getfield      #96                 // Field writeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public void setCloseListener(org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #102                // Field closeListener:Lorg/xnio/ChannelListener;
       5: return

  public org.xnio.ChannelListener<? super org.xnio.channels.FixedLengthStreamSinkChannel> getCloseListener();
    Code:
       0: aload_0
       1: getfield      #102                // Field closeListener:Lorg/xnio/ChannelListener;
       4: areturn

  public org.xnio.ChannelListener$Setter<org.xnio.channels.FixedLengthStreamSinkChannel> getWriteSetter();
    Code:
       0: new           #23                 // class org/xnio/channels/WriteListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #106                // Method org/xnio/channels/WriteListenerSettable$Setter."<init>":(Lorg/xnio/channels/WriteListenerSettable;)V
       8: areturn

  public org.xnio.ChannelListener$Setter<org.xnio.channels.FixedLengthStreamSinkChannel> getCloseSetter();
    Code:
       0: new           #25                 // class org/xnio/channels/CloseListenerSettable$Setter
       3: dup
       4: aload_0
       5: invokespecial #110                // Method org/xnio/channels/CloseListenerSettable$Setter."<init>":(Lorg/xnio/channels/CloseListenerSettable;)V
       8: areturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #118                // Method write:(Ljava/nio/ByteBuffer;Z)I
       6: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iconst_1
       5: invokespecial #124                // Method write:([Ljava/nio/ByteBuffer;IIZ)J
       8: lreturn

  public long writeFinal(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: iconst_1
       6: invokespecial #124                // Method write:([Ljava/nio/ByteBuffer;IIZ)J
       9: lreturn

  public org.xnio.channels.StreamSinkChannel getChannel(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #69                 // Field guard:Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnull        14
       9: aload_1
      10: aload_2
      11: if_acmpne     19
      14: aload_0
      15: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      18: areturn
      19: aconst_null
      20: areturn

  public org.xnio.XnioExecutor getWriteThread();
    Code:
       0: aload_0
       1: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #137,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteThread:()Lorg/xnio/XnioExecutor;
       9: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #141,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       9: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #145,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWorker:()Lorg/xnio/XnioWorker;
       9: areturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #118                // Method write:(Ljava/nio/ByteBuffer;Z)I
       6: ireturn

  private int write(java.nio.ByteBuffer, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_1
       5: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          19
      11: new           #153                // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #154                // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: aload_1
      20: invokevirtual #160                // Method java/nio/ByteBuffer.hasRemaining:()Z
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: iconst_0
      29: istore_3
      30: aload_0
      31: getfield      #77                 // Field count:J
      34: lstore        4
      36: lload         4
      38: lconst_0
      39: lcmp
      40: ifne          52
      43: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      46: invokeinterface #164,  1          // InterfaceMethod org/xnio/_private/Messages.fixedOverflow:()Lorg/xnio/channels/FixedLengthOverflowException;
      51: athrow
      52: aload_1
      53: invokevirtual #168                // Method java/nio/ByteBuffer.limit:()I
      56: istore        6
      58: aload_1
      59: invokevirtual #171                // Method java/nio/ByteBuffer.position:()I
      62: istore        7
      64: iload         6
      66: iload         7
      68: isub
      69: i2l
      70: lload         4
      72: lcmp
      73: ifle          129
      76: aload_1
      77: lload         4
      79: iload         7
      81: i2l
      82: lsub
      83: l2i
      84: invokevirtual #174                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      87: pop
      88: aload_0
      89: aload_1
      90: iload_2
      91: invokespecial #177                // Method doWrite:(Ljava/nio/ByteBuffer;Z)I
      94: dup
      95: istore_3
      96: istore        8
      98: aload_1
      99: iload         6
     101: invokevirtual #174                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     104: pop
     105: aload_0
     106: lload         4
     108: iload_3
     109: i2l
     110: lsub
     111: putfield      #77                 // Field count:J
     114: iload         8
     116: ireturn
     117: astore        9
     119: aload_1
     120: iload         6
     122: invokevirtual #174                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     125: pop
     126: aload         9
     128: athrow
     129: aload_0
     130: aload_1
     131: iload_2
     132: invokespecial #177                // Method doWrite:(Ljava/nio/ByteBuffer;Z)I
     135: dup
     136: istore_3
     137: istore        8
     139: aload_0
     140: lload         4
     142: iload_3
     143: i2l
     144: lsub
     145: putfield      #77                 // Field count:J
     148: iload         8
     150: ireturn
     151: astore        10
     153: aload_0
     154: lload         4
     156: iload_3
     157: i2l
     158: lsub
     159: putfield      #77                 // Field count:J
     162: aload         10
     164: athrow
    Exception table:
       from    to  target type
          88    98   117   any
         117   119   117   any
          52   105   151   any
         117   139   151   any
         151   153   151   any

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #186                // Method write:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #124                // Method write:([Ljava/nio/ByteBuffer;IIZ)J
       8: lreturn

  private long write(java.nio.ByteBuffer[], int, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_1
       5: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          19
      11: new           #153                // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #154                // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: iload_3
      20: ifne          25
      23: lconst_0
      24: lreturn
      25: iload_3
      26: iconst_1
      27: if_icmpne     39
      30: aload_0
      31: aload_1
      32: iload_2
      33: aaload
      34: invokevirtual #188                // Method write:(Ljava/nio/ByteBuffer;)I
      37: i2l
      38: lreturn
      39: aload_0
      40: getfield      #77                 // Field count:J
      43: lstore        5
      45: lload         5
      47: lconst_0
      48: lcmp
      49: ifne          61
      52: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      55: invokeinterface #164,  1          // InterfaceMethod org/xnio/_private/Messages.fixedOverflow:()Lorg/xnio/channels/FixedLengthOverflowException;
      60: athrow
      61: lconst_0
      62: lstore        7
      64: lconst_0
      65: lstore        10
      67: iconst_0
      68: istore        12
      70: iload         12
      72: iload_3
      73: if_icmpge     183
      76: aload_1
      77: iload         12
      79: iload_2
      80: iadd
      81: aaload
      82: astore        13
      84: lload         10
      86: aload         13
      88: invokevirtual #168                // Method java/nio/ByteBuffer.limit:()I
      91: dup
      92: istore        9
      94: aload         13
      96: invokevirtual #171                // Method java/nio/ByteBuffer.position:()I
      99: isub
     100: i2l
     101: ladd
     102: lstore        10
     104: lload         10
     106: lload         5
     108: lcmp
     109: ifle          177
     112: aload         13
     114: iload         9
     116: lload         10
     118: lload         5
     120: lsub
     121: l2i
     122: isub
     123: invokevirtual #174                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     126: pop
     127: aload_0
     128: aload_1
     129: iload_2
     130: iload         12
     132: iconst_1
     133: iadd
     134: iload         4
     136: invokespecial #191                // Method doWrite:([Ljava/nio/ByteBuffer;IIZ)J
     139: dup2
     140: lstore        7
     142: lstore        14
     144: aload         13
     146: iload         9
     148: invokevirtual #174                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     151: pop
     152: aload_0
     153: lload         5
     155: lload         7
     157: lsub
     158: putfield      #77                 // Field count:J
     161: lload         14
     163: lreturn
     164: astore        16
     166: aload         13
     168: iload         9
     170: invokevirtual #174                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     173: pop
     174: aload         16
     176: athrow
     177: iinc          12, 1
     180: goto          70
     183: lload         10
     185: lconst_0
     186: lcmp
     187: ifne          205
     190: lconst_0
     191: lstore        12
     193: aload_0
     194: lload         5
     196: lload         7
     198: lsub
     199: putfield      #77                 // Field count:J
     202: lload         12
     204: lreturn
     205: aload_0
     206: aload_1
     207: iload_2
     208: iload_3
     209: iload         4
     211: invokespecial #191                // Method doWrite:([Ljava/nio/ByteBuffer;IIZ)J
     214: dup2
     215: lstore        7
     217: lstore        12
     219: aload_0
     220: lload         5
     222: lload         7
     224: lsub
     225: putfield      #77                 // Field count:J
     228: lload         12
     230: lreturn
     231: astore        17
     233: aload_0
     234: lload         5
     236: lload         7
     238: lsub
     239: putfield      #77                 // Field count:J
     242: aload         17
     244: athrow
    Exception table:
       from    to  target type
         127   144   164   any
         164   166   164   any
          64   152   231   any
         164   193   231   any
         205   219   231   any
         231   233   231   any

  private long doWrite(java.nio.ByteBuffer[], int, int, boolean) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifeq          18
       5: aload_0
       6: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokeinterface #196,  4          // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:([Ljava/nio/ByteBuffer;II)J
      17: lreturn
      18: aload_0
      19: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      22: aload_1
      23: iload_2
      24: iload_3
      25: invokeinterface #197,  4          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;II)J
      30: lreturn

  private int doWrite(java.nio.ByteBuffer, boolean) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifeq          15
       4: aload_0
       5: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       8: aload_1
       9: invokeinterface #199,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:(Ljava/nio/ByteBuffer;)I
      14: ireturn
      15: aload_0
      16: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      19: aload_1
      20: invokeinterface #200,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      25: ireturn

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_1
       5: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          19
      11: new           #153                // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #154                // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: lload         4
      21: lconst_0
      22: lcmp
      23: ifne          28
      26: lconst_0
      27: lreturn
      28: aload_0
      29: getfield      #77                 // Field count:J
      32: lstore        6
      34: lload         6
      36: lconst_0
      37: lcmp
      38: ifne          50
      41: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      44: invokeinterface #164,  1          // InterfaceMethod org/xnio/_private/Messages.fixedOverflow:()Lorg/xnio/channels/FixedLengthOverflowException;
      49: athrow
      50: lconst_0
      51: lstore        8
      53: aload_0
      54: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      57: aload_1
      58: lload_2
      59: lload         4
      61: lload         6
      63: invokestatic  #208                // Method java/lang/Math.min:(JJ)J
      66: invokeinterface #210,  6          // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
      71: dup2
      72: lstore        8
      74: lstore        10
      76: aload_0
      77: lload         6
      79: lload         8
      81: lsub
      82: putfield      #77                 // Field count:J
      85: lload         10
      87: lreturn
      88: astore        12
      90: aload_0
      91: lload         6
      93: lload         8
      95: lsub
      96: putfield      #77                 // Field count:J
      99: aload         12
     101: athrow
    Exception table:
       from    to  target type
          53    76    88   any
          88    90    88   any

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_1
       5: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          19
      11: new           #153                // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #154                // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: athrow
      19: lload_2
      20: lconst_0
      21: lcmp
      22: ifne          27
      25: lconst_0
      26: lreturn
      27: aload_0
      28: getfield      #77                 // Field count:J
      31: lstore        5
      33: lload         5
      35: lconst_0
      36: lcmp
      37: ifne          49
      40: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      43: invokeinterface #164,  1          // InterfaceMethod org/xnio/_private/Messages.fixedOverflow:()Lorg/xnio/channels/FixedLengthOverflowException;
      48: athrow
      49: lconst_0
      50: lstore        7
      52: aload_0
      53: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      56: aload_1
      57: lload_2
      58: lload         5
      60: invokestatic  #208                // Method java/lang/Math.min:(JJ)J
      63: aload         4
      65: invokeinterface #216,  5          // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Lorg/xnio/channels/StreamSourceChannel;JLjava/nio/ByteBuffer;)J
      70: dup2
      71: lstore        7
      73: lstore        9
      75: aload_0
      76: lload         5
      78: lload         7
      80: lsub
      81: putfield      #77                 // Field count:J
      84: lload         9
      86: lreturn
      87: astore        11
      89: aload_0
      90: lload         5
      92: lload         7
      94: lsub
      95: putfield      #77                 // Field count:J
      98: aload         11
     100: athrow
    Exception table:
       from    to  target type
          52    75    87   any
          87    89    87   any

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: invokestatic  #225                // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: istore_2
      17: aload_0
      18: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      21: invokeinterface #227,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      26: dup
      27: istore_2
      28: istore_3
      29: iload_2
      30: ifeq          78
      33: iload_1
      34: iconst_1
      35: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
      38: ifeq          78
      41: aload_0
      42: iload_1
      43: iconst_2
      44: ior
      45: putfield      #75                 // Field state:I
      48: aload_0
      49: invokespecial #230                // Method callFinish:()V
      52: aload_0
      53: invokespecial #233                // Method callClosed:()V
      56: aload_0
      57: getfield      #77                 // Field count:J
      60: lconst_0
      61: lcmp
      62: ifeq          78
      65: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      68: aload_0
      69: getfield      #77                 // Field count:J
      72: invokeinterface #237,  3          // InterfaceMethod org/xnio/_private/Messages.fixedUnderflow:(J)Lorg/xnio/channels/FixedLengthUnderflowException;
      77: athrow
      78: iload_3
      79: ireturn
      80: astore        4
      82: iload_2
      83: ifeq          131
      86: iload_1
      87: iconst_1
      88: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
      91: ifeq          131
      94: aload_0
      95: iload_1
      96: iconst_2
      97: ior
      98: putfield      #75                 // Field state:I
     101: aload_0
     102: invokespecial #230                // Method callFinish:()V
     105: aload_0
     106: invokespecial #233                // Method callClosed:()V
     109: aload_0
     110: getfield      #77                 // Field count:J
     113: lconst_0
     114: lcmp
     115: ifeq          131
     118: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     121: aload_0
     122: getfield      #77                 // Field count:J
     125: invokeinterface #237,  3          // InterfaceMethod org/xnio/_private/Messages.fixedUnderflow:(J)Lorg/xnio/channels/FixedLengthUnderflowException;
     130: athrow
     131: aload         4
     133: athrow
    Exception table:
       from    to  target type
          17    29    80   any
          80    82    80   any

  public void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_2
       5: invokestatic  #242                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ifeq          20
      11: aload_0
      12: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: invokeinterface #244,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
      20: return

  public void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_2
       5: invokestatic  #242                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ifeq          20
      11: aload_0
      12: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: invokeinterface #247,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
      20: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_2
       5: invokestatic  #242                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ifeq          27
      11: aload_0
      12: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: invokeinterface #250,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.isWriteResumed:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public void wakeupWrites();
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_2
       5: invokestatic  #242                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ifeq          20
      11: aload_0
      12: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: invokeinterface #253,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.wakeupWrites:()V
      20: return

  public void shutdownWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: iload_1
      16: iconst_1
      17: ior
      18: putfield      #75                 // Field state:I
      21: iload_1
      22: bipush        8
      24: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
      27: ifeq          39
      30: aload_0
      31: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      34: invokeinterface #256,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      39: return

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: invokeinterface #259,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:()V
       9: return

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
       4: lload_1
       5: aload_3
       6: invokeinterface #262,  4          // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_1
       5: invokestatic  #242                // Method org/xnio/Bits.allAreClear:(II)Z
       8: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: iload_1
      16: iconst_1
      17: ior
      18: iconst_2
      19: ior
      20: putfield      #75                 // Field state:I
      23: aload_0
      24: getfield      #77                 // Field count:J
      27: lstore_2
      28: lload_2
      29: lconst_0
      30: lcmp
      31: ifeq          60
      34: iload_1
      35: bipush        8
      37: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
      40: ifeq          50
      43: aload_0
      44: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      47: invokestatic  #273                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      50: getstatic     #57                 // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      53: lload_2
      54: invokeinterface #237,  3          // InterfaceMethod org/xnio/_private/Messages.fixedUnderflow:(J)Lorg/xnio/channels/FixedLengthUnderflowException;
      59: athrow
      60: iload_1
      61: bipush        8
      63: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
      66: ifeq          78
      69: aload_0
      70: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      73: invokeinterface #275,  1          // InterfaceMethod org/xnio/channels/StreamSinkChannel.close:()V
      78: aload_0
      79: invokespecial #233                // Method callClosed:()V
      82: aload_0
      83: invokespecial #230                // Method callFinish:()V
      86: goto          102
      89: astore        4
      91: aload_0
      92: invokespecial #233                // Method callClosed:()V
      95: aload_0
      96: invokespecial #230                // Method callFinish:()V
      99: aload         4
     101: athrow
     102: return
    Exception table:
       from    to  target type
          23    78    89   any
          89    91    89   any

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_4
       5: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          28
      11: aload_0
      12: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: aload_1
      16: invokeinterface #279,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.supportsOption:(Lorg/xnio/Option;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_4
       5: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          24
      11: aload_0
      12: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: aload_1
      16: invokeinterface #286,  2          // InterfaceMethod org/xnio/channels/StreamSinkChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      21: goto          25
      24: aconst_null
      25: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #75                 // Field state:I
       4: iconst_4
       5: invokestatic  #151                // Method org/xnio/Bits.allAreSet:(II)Z
       8: ifeq          25
      11: aload_0
      12: getfield      #71                 // Field delegate:Lorg/xnio/channels/StreamSinkChannel;
      15: aload_1
      16: aload_2
      17: invokeinterface #293,  3          // InterfaceMethod org/xnio/channels/StreamSinkChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      22: goto          26
      25: aconst_null
      26: areturn

  public long getRemaining();
    Code:
       0: aload_0
       1: getfield      #77                 // Field count:J
       4: lreturn

  private void callFinish();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #73                 // Field finishListener:Lorg/xnio/ChannelListener;
       5: invokestatic  #303                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
       8: pop
       9: return

  private void callClosed();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #102                // Field closeListener:Lorg/xnio/ChannelListener;
       5: invokestatic  #303                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
       8: pop
       9: return

  public java.nio.channels.Channel getChannel(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #306                // Method getChannel:(Ljava/lang/Object;)Lorg/xnio/channels/StreamSinkChannel;
       5: areturn

  static org.xnio.ChannelListener access$000(org.xnio.channels.FixedLengthStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #96                 // Field writeListener:Lorg/xnio/ChannelListener;
       4: areturn
}
