Compiled from "QueuedNioTcpServerHandle.java"
final class org.xnio.nio.QueuedNioTcpServerHandle extends org.xnio.nio.NioHandle implements org.xnio.nio.ChannelClosed {
  private final org.xnio.nio.QueuedNioTcpServer server;

  org.xnio.nio.QueuedNioTcpServerHandle(org.xnio.nio.QueuedNioTcpServer, org.xnio.nio.WorkerThread, java.nio.channels.SelectionKey, int, int);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #1                  // Method org/xnio/nio/NioHandle."<init>":(Lorg/xnio/nio/WorkerThread;Ljava/nio/channels/SelectionKey;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field server:Lorg/xnio/nio/QueuedNioTcpServer;
      11: return

  void handleReady(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field server:Lorg/xnio/nio/QueuedNioTcpServer;
       4: invokevirtual #3                  // Method org/xnio/nio/QueuedNioTcpServer.handleReady:()V
       7: return

  void forceTermination();
    Code:
       0: aload_0
       1: getfield      #2                  // Field server:Lorg/xnio/nio/QueuedNioTcpServer;
       4: invokestatic  #4                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: return

  void terminated();
    Code:
       0: aload_0
       1: getfield      #2                  // Field server:Lorg/xnio/nio/QueuedNioTcpServer;
       4: invokevirtual #5                  // Method org/xnio/nio/QueuedNioTcpServer.invokeCloseHandler:()V
       7: return

  public void channelClosed();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method freeConnection:()V
       4: return

  void freeConnection();
    Code:
       0: return

  int getConnectionCount();
    Code:
       0: iconst_m1
       1: ireturn
}
