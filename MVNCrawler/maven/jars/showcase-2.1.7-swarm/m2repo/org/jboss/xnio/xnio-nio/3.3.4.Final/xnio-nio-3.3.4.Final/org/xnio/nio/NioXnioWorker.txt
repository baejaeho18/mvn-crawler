Compiled from "NioXnioWorker.java"
final class org.xnio.nio.NioXnioWorker extends org.xnio.XnioWorker {
  private static final int CLOSE_REQ;

  private static final int CLOSE_COMP;

  private volatile int state;

  private final org.xnio.nio.WorkerThread[] workerThreads;

  private final org.xnio.nio.WorkerThread acceptThread;

  private final java.io.Closeable mbeanHandle;

  private volatile java.lang.Thread shutdownWaiter;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.xnio.nio.NioXnioWorker, java.lang.Thread> shutdownWaiterUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.xnio.nio.NioXnioWorker> stateUpdater;

  org.xnio.nio.NioXnioWorker(org.xnio.nio.NioXnio, java.lang.ThreadGroup, org.xnio.OptionMap, java.lang.Runnable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/xnio/XnioWorker."<init>":(Lorg/xnio/Xnio;Ljava/lang/ThreadGroup;Lorg/xnio/OptionMap;Ljava/lang/Runnable;)V
       9: aload_0
      10: iconst_1
      11: putfield      #5                  // Field state:I
      14: aload_3
      15: getstatic     #6                  // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
      18: invokevirtual #7                  // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      21: ifeq          37
      24: aload_3
      25: getstatic     #6                  // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
      28: iconst_0
      29: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      32: istore        5
      34: goto          58
      37: aload_3
      38: getstatic     #9                  // Field org/xnio/Options.WORKER_READ_THREADS:Lorg/xnio/Option;
      41: iconst_1
      42: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      45: aload_3
      46: getstatic     #10                 // Field org/xnio/Options.WORKER_WRITE_THREADS:Lorg/xnio/Option;
      49: iconst_1
      50: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      53: invokestatic  #11                 // Method java/lang/Math.max:(II)I
      56: istore        5
      58: iload         5
      60: ifge          74
      63: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      66: ldc           #13                 // String WORKER_IO_THREADS
      68: invokeinterface #14,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      73: athrow
      74: aload_3
      75: getstatic     #15                 // Field org/xnio/Options.STACK_SIZE:Lorg/xnio/Option;
      78: lconst_0
      79: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;J)J
      82: lstore        6
      84: lload         6
      86: lconst_0
      87: lcmp
      88: ifge          102
      91: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      94: ldc           #17                 // String STACK_SIZE
      96: invokeinterface #14,  2           // InterfaceMethod org/xnio/nio/Log.optionOutOfRange:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     101: athrow
     102: aload_0
     103: invokevirtual #18                 // Method getName:()Ljava/lang/String;
     106: astore        8
     108: iload         5
     110: anewarray     #19                 // class org/xnio/nio/WorkerThread
     113: astore        9
     115: aload_3
     116: getstatic     #20                 // Field org/xnio/Options.THREAD_DAEMON:Lorg/xnio/Option;
     119: iconst_0
     120: invokevirtual #21                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     123: istore        10
     125: iconst_0
     126: istore        11
     128: iconst_0
     129: istore        12
     131: iload         12
     133: iload         5
     135: if_icmpge     210
     138: new           #19                 // class org/xnio/nio/WorkerThread
     141: dup
     142: aload_0
     143: aload_1
     144: getfield      #22                 // Field org/xnio/nio/NioXnio.mainSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
     147: invokeinterface #23,  1           // InterfaceMethod org/xnio/nio/NioXnio$SelectorCreator.open:()Ljava/nio/channels/Selector;
     152: ldc           #24                 // String %s I/O-%d
     154: iconst_2
     155: anewarray     #25                 // class java/lang/Object
     158: dup
     159: iconst_0
     160: aload         8
     162: aastore
     163: dup
     164: iconst_1
     165: iload         12
     167: iconst_1
     168: iadd
     169: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     172: aastore
     173: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     176: aload_2
     177: lload         6
     179: iload         12
     181: invokespecial #28                 // Method org/xnio/nio/WorkerThread."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/Selector;Ljava/lang/String;Ljava/lang/ThreadGroup;JI)V
     184: astore        13
     186: iload         10
     188: ifeq          197
     191: aload         13
     193: iconst_1
     194: invokevirtual #29                 // Method org/xnio/nio/WorkerThread.setDaemon:(Z)V
     197: aload         9
     199: iload         12
     201: aload         13
     203: aastore
     204: iinc          12, 1
     207: goto          131
     210: aload_0
     211: new           #19                 // class org/xnio/nio/WorkerThread
     214: dup
     215: aload_0
     216: aload_1
     217: getfield      #22                 // Field org/xnio/nio/NioXnio.mainSelectorCreator:Lorg/xnio/nio/NioXnio$SelectorCreator;
     220: invokeinterface #23,  1           // InterfaceMethod org/xnio/nio/NioXnio$SelectorCreator.open:()Ljava/nio/channels/Selector;
     225: ldc           #30                 // String %s Accept
     227: iconst_1
     228: anewarray     #25                 // class java/lang/Object
     231: dup
     232: iconst_0
     233: aload         8
     235: aastore
     236: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     239: aload_2
     240: lload         6
     242: iload         5
     244: invokespecial #28                 // Method org/xnio/nio/WorkerThread."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/Selector;Ljava/lang/String;Ljava/lang/ThreadGroup;JI)V
     247: putfield      #31                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
     250: iload         10
     252: ifeq          263
     255: aload_0
     256: getfield      #31                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
     259: iconst_1
     260: invokevirtual #29                 // Method org/xnio/nio/WorkerThread.setDaemon:(Z)V
     263: iconst_1
     264: istore        11
     266: iload         11
     268: ifne          374
     271: aload         9
     273: astore        12
     275: aload         12
     277: arraylength
     278: istore        13
     280: iconst_0
     281: istore        14
     283: iload         14
     285: iload         13
     287: if_icmpge     316
     290: aload         12
     292: iload         14
     294: aaload
     295: astore        15
     297: aload         15
     299: ifnull        310
     302: aload         15
     304: invokevirtual #32                 // Method org/xnio/nio/WorkerThread.getSelector:()Ljava/nio/channels/Selector;
     307: invokestatic  #33                 // Method org/xnio/IoUtils.safeClose:(Ljava/nio/channels/Selector;)V
     310: iinc          14, 1
     313: goto          283
     316: goto          374
     319: astore        16
     321: iload         11
     323: ifne          371
     326: aload         9
     328: astore        17
     330: aload         17
     332: arraylength
     333: istore        18
     335: iconst_0
     336: istore        19
     338: iload         19
     340: iload         18
     342: if_icmpge     371
     345: aload         17
     347: iload         19
     349: aaload
     350: astore        20
     352: aload         20
     354: ifnull        365
     357: aload         20
     359: invokevirtual #32                 // Method org/xnio/nio/WorkerThread.getSelector:()Ljava/nio/channels/Selector;
     362: invokestatic  #33                 // Method org/xnio/IoUtils.safeClose:(Ljava/nio/channels/Selector;)V
     365: iinc          19, 1
     368: goto          338
     371: aload         16
     373: athrow
     374: aload_0
     375: aload         9
     377: putfield      #34                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
     380: aload_0
     381: new           #35                 // class org/xnio/nio/NioXnioWorker$1
     384: dup
     385: aload_0
     386: aload         8
     388: iload         5
     390: invokespecial #36                 // Method org/xnio/nio/NioXnioWorker$1."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/lang/String;I)V
     393: invokestatic  #37                 // Method org/xnio/nio/NioXnio.register:(Lorg/xnio/management/XnioWorkerMXBean;)Ljava/io/Closeable;
     396: putfield      #38                 // Field mbeanHandle:Ljava/io/Closeable;
     399: return
    Exception table:
       from    to  target type
         128   266   319   any
         319   321   319   any

  void start();
    Code:
       0: aload_0
       1: getfield      #34                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     35
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload_0
      21: invokevirtual #39                 // Method openResourceUnconditionally:()V
      24: aload         4
      26: invokevirtual #40                 // Method org/xnio/nio/WorkerThread.start:()V
      29: iinc          3, 1
      32: goto          10
      35: aload_0
      36: invokevirtual #39                 // Method openResourceUnconditionally:()V
      39: aload_0
      40: getfield      #31                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
      43: invokevirtual #40                 // Method org/xnio/nio/WorkerThread.start:()V
      46: return

  protected org.xnio.nio.WorkerThread chooseThread();
    Code:
       0: aload_0
       1: invokestatic  #41                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
       4: invokevirtual #42                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
       7: invokevirtual #43                 // Method getIoThread:(I)Lorg/xnio/nio/WorkerThread;
      10: areturn

  public org.xnio.nio.WorkerThread getIoThread(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iload_3
       9: ifne          21
      12: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      15: invokeinterface #44,  1           // InterfaceMethod org/xnio/nio/Log.noThreads:()Ljava/lang/IllegalArgumentException;
      20: athrow
      21: iload_3
      22: iconst_1
      23: if_icmpne     30
      26: aload_2
      27: iconst_0
      28: aaload
      29: areturn
      30: aload_2
      31: iload_1
      32: iload_3
      33: irem
      34: invokestatic  #45                 // Method java/lang/Math.abs:(I)I
      37: aaload
      38: areturn

  public int getIoThreadCount();
    Code:
       0: aload_0
       1: getfield      #34                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: arraylength
       5: ireturn

  org.xnio.nio.WorkerThread[] getAll();
    Code:
       0: aload_0
       1: getfield      #34                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
       4: areturn

  protected org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection> createTcpConnectionServer(java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection>>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkShutdown:()V
       4: iconst_0
       5: istore        4
       7: invokestatic  #47                 // Method java/nio/channels/ServerSocketChannel.open:()Ljava/nio/channels/ServerSocketChannel;
      10: astore        5
      12: aload_3
      13: getstatic     #48                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      16: invokevirtual #7                  // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      19: ifeq          38
      22: aload         5
      24: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      27: aload_3
      28: getstatic     #48                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
      31: iconst_m1
      32: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      35: invokevirtual #50                 // Method java/net/ServerSocket.setReceiveBufferSize:(I)V
      38: aload         5
      40: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      43: aload_3
      44: getstatic     #51                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
      47: iconst_1
      48: invokevirtual #21                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      51: invokevirtual #52                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
      54: aload         5
      56: iconst_0
      57: invokevirtual #53                 // Method java/nio/channels/ServerSocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      60: pop
      61: aload_3
      62: getstatic     #54                 // Field org/xnio/Options.BACKLOG:Lorg/xnio/Option;
      65: invokevirtual #7                  // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      68: ifeq          93
      71: aload         5
      73: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      76: aload_1
      77: aload_3
      78: getstatic     #54                 // Field org/xnio/Options.BACKLOG:Lorg/xnio/Option;
      81: sipush        128
      84: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      87: invokevirtual #55                 // Method java/net/ServerSocket.bind:(Ljava/net/SocketAddress;I)V
      90: goto          102
      93: aload         5
      95: invokevirtual #49                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
      98: aload_1
      99: invokevirtual #56                 // Method java/net/ServerSocket.bind:(Ljava/net/SocketAddress;)V
     102: new           #57                 // class org/xnio/nio/QueuedNioTcpServer
     105: dup
     106: aload_0
     107: aload         5
     109: aload_3
     110: invokespecial #58                 // Method org/xnio/nio/QueuedNioTcpServer."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/ServerSocketChannel;Lorg/xnio/OptionMap;)V
     113: astore        6
     115: aload         6
     117: aload_2
     118: invokevirtual #59                 // Method org/xnio/nio/QueuedNioTcpServer.setAcceptListener:(Lorg/xnio/ChannelListener;)V
     121: iconst_1
     122: istore        4
     124: aload         6
     126: astore        7
     128: iload         4
     130: ifne          138
     133: aload         5
     135: invokestatic  #60                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     138: aload         7
     140: areturn
     141: astore        8
     143: iload         4
     145: ifne          153
     148: aload         5
     150: invokestatic  #60                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     153: aload         8
     155: athrow
    Exception table:
       from    to  target type
          12   128   141   any
         141   143   141   any

  public org.xnio.channels.MulticastMessageChannel createUdpServer(java.net.InetSocketAddress, org.xnio.ChannelListener<? super org.xnio.channels.MulticastMessageChannel>, org.xnio.OptionMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method checkShutdown:()V
       4: getstatic     #61                 // Field org/xnio/nio/NioXnio.NIO2:Z
       7: ifeq          50
      10: aload_1
      11: ifnull        50
      14: aload_1
      15: invokevirtual #62                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      18: astore        5
      20: aload         5
      22: instanceof    #63                 // class java/net/Inet6Address
      25: ifeq          39
      28: getstatic     #64                 // Field java/net/StandardProtocolFamily.INET6:Ljava/net/StandardProtocolFamily;
      31: invokestatic  #65                 // Method java/nio/channels/DatagramChannel.open:(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;
      34: astore        4
      36: goto          47
      39: getstatic     #66                 // Field java/net/StandardProtocolFamily.INET:Ljava/net/StandardProtocolFamily;
      42: invokestatic  #65                 // Method java/nio/channels/DatagramChannel.open:(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;
      45: astore        4
      47: goto          55
      50: invokestatic  #67                 // Method java/nio/channels/DatagramChannel.open:()Ljava/nio/channels/DatagramChannel;
      53: astore        4
      55: aload         4
      57: iconst_0
      58: invokevirtual #68                 // Method java/nio/channels/DatagramChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      61: pop
      62: aload_3
      63: getstatic     #69                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
      66: invokevirtual #7                  // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      69: ifeq          88
      72: aload         4
      74: invokevirtual #70                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      77: aload_3
      78: getstatic     #69                 // Field org/xnio/Options.BROADCAST:Lorg/xnio/Option;
      81: iconst_0
      82: invokevirtual #21                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      85: invokevirtual #71                 // Method java/net/DatagramSocket.setBroadcast:(Z)V
      88: aload_3
      89: getstatic     #72                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
      92: invokevirtual #7                  // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
      95: ifeq          114
      98: aload         4
     100: invokevirtual #70                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     103: aload_3
     104: getstatic     #72                 // Field org/xnio/Options.IP_TRAFFIC_CLASS:Lorg/xnio/Option;
     107: iconst_m1
     108: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     111: invokevirtual #73                 // Method java/net/DatagramSocket.setTrafficClass:(I)V
     114: aload_3
     115: getstatic     #48                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
     118: invokevirtual #7                  // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     121: ifeq          140
     124: aload         4
     126: invokevirtual #70                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     129: aload_3
     130: getstatic     #48                 // Field org/xnio/Options.RECEIVE_BUFFER:Lorg/xnio/Option;
     133: iconst_m1
     134: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     137: invokevirtual #74                 // Method java/net/DatagramSocket.setReceiveBufferSize:(I)V
     140: aload         4
     142: invokevirtual #70                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     145: aload_3
     146: getstatic     #51                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
     149: iconst_1
     150: invokevirtual #21                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
     153: invokevirtual #75                 // Method java/net/DatagramSocket.setReuseAddress:(Z)V
     156: aload_3
     157: getstatic     #76                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     160: invokevirtual #7                  // Method org/xnio/OptionMap.contains:(Lorg/xnio/Option;)Z
     163: ifeq          182
     166: aload         4
     168: invokevirtual #70                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     171: aload_3
     172: getstatic     #76                 // Field org/xnio/Options.SEND_BUFFER:Lorg/xnio/Option;
     175: iconst_m1
     176: invokevirtual #8                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     179: invokevirtual #77                 // Method java/net/DatagramSocket.setSendBufferSize:(I)V
     182: aload         4
     184: invokevirtual #70                 // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     187: aload_1
     188: invokevirtual #78                 // Method java/net/DatagramSocket.bind:(Ljava/net/SocketAddress;)V
     191: new           #79                 // class org/xnio/nio/NioUdpChannel
     194: dup
     195: aload_0
     196: aload         4
     198: invokespecial #80                 // Method org/xnio/nio/NioUdpChannel."<init>":(Lorg/xnio/nio/NioXnioWorker;Ljava/nio/channels/DatagramChannel;)V
     201: astore        5
     203: aload         5
     205: aload_2
     206: invokestatic  #81                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     209: pop
     210: aload         5
     212: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: ldc           #83                 // int -2147483648
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: ldc           #84                 // int 1073741824
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void openResourceUnconditionally();
    Code:
       0: getstatic     #85                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #86                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: istore_1
       8: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      11: invokeinterface #87,  1           // InterfaceMethod org/xnio/nio/Log.isTraceEnabled:()Z
      16: ifeq          40
      19: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      22: ldc           #88                 // String CAS %s %08x -> %08x
      24: aload_0
      25: iload_1
      26: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: iload_1
      30: iconst_1
      31: iadd
      32: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokeinterface #89,  5           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      40: return

  void checkShutdown() throws org.xnio.ClosedWorkerException;
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method isShutdown:()Z
       4: ifeq          16
       7: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      10: invokeinterface #91,  1           // InterfaceMethod org/xnio/nio/Log.workerShutDown:()Lorg/xnio/ClosedWorkerException;
      15: athrow
      16: return

  void closeResource();
    Code:
       0: getstatic     #85                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
       7: istore_1
       8: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      11: invokeinterface #87,  1           // InterfaceMethod org/xnio/nio/Log.isTraceEnabled:()Z
      16: ifeq          40
      19: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      22: ldc           #88                 // String CAS %s %08x -> %08x
      24: aload_0
      25: iload_1
      26: iconst_1
      27: iadd
      28: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: iload_1
      32: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: invokeinterface #89,  5           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      40: iload_1
      41: ldc           #83                 // int -2147483648
      43: if_icmpne     123
      46: getstatic     #85                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      49: aload_0
      50: ldc           #83                 // int -2147483648
      52: ldc           #93                 // int -1073741824
      54: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      57: ifeq          115
      60: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      63: ldc           #95                 // String CAS %s %08x -> %08x (close complete)
      65: aload_0
      66: ldc           #83                 // int -2147483648
      68: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: ldc           #93                 // int -1073741824
      73: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: invokeinterface #89,  5           // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      81: getstatic     #96                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      84: aload_0
      85: aconst_null
      86: invokevirtual #97                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #98                 // class java/lang/Thread
      92: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
      95: aload_0
      96: invokevirtual #100                // Method getTerminationTask:()Ljava/lang/Runnable;
      99: astore_2
     100: aload_2
     101: ifnull        114
     104: aload_2
     105: invokeinterface #101,  1          // InterfaceMethod java/lang/Runnable.run:()V
     110: goto          114
     113: astore_3
     114: return
     115: aload_0
     116: getfield      #5                  // Field state:I
     119: istore_1
     120: goto          40
     123: return
    Exception table:
       from    to  target type
         104   110   113   Class java/lang/Throwable

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #83                 // int -2147483648
       8: iand
       9: ifne          92
      12: getstatic     #85                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      15: aload_0
      16: iload_1
      17: iload_1
      18: ldc           #83                 // int -2147483648
      20: ior
      21: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      24: ifne          35
      27: aload_0
      28: getfield      #5                  // Field state:I
      31: istore_1
      32: goto          5
      35: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      38: ldc           #103                // String Initiating shutdown of %s
      40: aload_0
      41: invokeinterface #104,  3          // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_0
      47: getfield      #34                 // Field workerThreads:[Lorg/xnio/nio/WorkerThread;
      50: astore_2
      51: aload_2
      52: arraylength
      53: istore_3
      54: iconst_0
      55: istore        4
      57: iload         4
      59: iload_3
      60: if_icmpge     80
      63: aload_2
      64: iload         4
      66: aaload
      67: astore        5
      69: aload         5
      71: invokevirtual #105                // Method org/xnio/nio/WorkerThread.shutdown:()V
      74: iinc          4, 1
      77: goto          57
      80: aload_0
      81: getfield      #31                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
      84: invokevirtual #105                // Method org/xnio/nio/WorkerThread.shutdown:()V
      87: aload_0
      88: invokevirtual #106                // Method shutDownTaskPool:()V
      91: return
      92: getstatic     #12                 // Field org/xnio/nio/Log.log:Lorg/xnio/nio/Log;
      95: ldc           #107                // String Idempotent shutdown of %s
      97: aload_0
      98: invokeinterface #104,  3          // InterfaceMethod org/xnio/nio/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     103: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method shutdown:()V
       4: aload_0
       5: invokevirtual #109                // Method shutDownTaskPoolNow:()Ljava/util/List;
       8: areturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: istore        4
       6: iload         4
       8: ldc           #84                 // int 1073741824
      10: invokestatic  #110                // Method org/xnio/Bits.allAreSet:(II)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: invokestatic  #111                // Method java/lang/System.nanoTime:()J
      21: lstore        5
      23: aload_3
      24: lload_1
      25: invokevirtual #112                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      28: lstore        7
      30: invokestatic  #113                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: astore        9
      35: aload_0
      36: getfield      #5                  // Field state:I
      39: dup
      40: istore        4
      42: ldc           #84                 // int 1073741824
      44: invokestatic  #114                // Method org/xnio/Bits.allAreClear:(II)Z
      47: ifeq          164
      50: getstatic     #96                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      53: aload_0
      54: aload         9
      56: invokevirtual #97                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #98                 // class java/lang/Thread
      62: astore        10
      64: aload_0
      65: getfield      #5                  // Field state:I
      68: dup
      69: istore        4
      71: ldc           #84                 // int 1073741824
      73: invokestatic  #110                // Method org/xnio/Bits.allAreSet:(II)Z
      76: ifeq          87
      79: aload         10
      81: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
      84: goto          164
      87: aload_0
      88: lload         7
      90: invokestatic  #115                // Method java/util/concurrent/locks/LockSupport.parkNanos:(Ljava/lang/Object;J)V
      93: invokestatic  #116                // Method java/lang/Thread.interrupted:()Z
      96: ifeq          107
      99: new           #117                // class java/lang/InterruptedException
     102: dup
     103: invokespecial #118                // Method java/lang/InterruptedException."<init>":()V
     106: athrow
     107: invokestatic  #111                // Method java/lang/System.nanoTime:()J
     110: lstore        11
     112: lload         7
     114: lload         11
     116: lload         5
     118: lsub
     119: lsub
     120: lstore        7
     122: lload         7
     124: lconst_0
     125: lcmp
     126: ifge          143
     129: aload_0
     130: getfield      #5                  // Field state:I
     133: istore        4
     135: aload         10
     137: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
     140: goto          164
     143: aload         10
     145: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
     148: goto          161
     151: astore        13
     153: aload         10
     155: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
     158: aload         13
     160: athrow
     161: goto          35
     164: iload         4
     166: ldc           #84                 // int 1073741824
     168: invokestatic  #110                // Method org/xnio/Bits.allAreSet:(II)Z
     171: ireturn
    Exception table:
       from    to  target type
          64    79   151   any
          87   135   151   any
         151   153   151   any

  public void awaitTermination() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:I
       4: istore_1
       5: iload_1
       6: ldc           #84                 // int 1073741824
       8: invokestatic  #110                // Method org/xnio/Bits.allAreSet:(II)Z
      11: ifeq          15
      14: return
      15: invokestatic  #113                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: astore_2
      19: aload_0
      20: getfield      #5                  // Field state:I
      23: ldc           #84                 // int 1073741824
      25: invokestatic  #114                // Method org/xnio/Bits.allAreClear:(II)Z
      28: ifeq          99
      31: getstatic     #96                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      34: aload_0
      35: aload_2
      36: invokevirtual #97                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #98                 // class java/lang/Thread
      42: astore_3
      43: aload_0
      44: getfield      #5                  // Field state:I
      47: ldc           #84                 // int 1073741824
      49: invokestatic  #110                // Method org/xnio/Bits.allAreSet:(II)Z
      52: ifeq          62
      55: aload_3
      56: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
      59: goto          99
      62: aload_0
      63: invokestatic  #119                // Method java/util/concurrent/locks/LockSupport.park:(Ljava/lang/Object;)V
      66: invokestatic  #116                // Method java/lang/Thread.interrupted:()Z
      69: ifeq          80
      72: new           #117                // class java/lang/InterruptedException
      75: dup
      76: invokespecial #118                // Method java/lang/InterruptedException."<init>":()V
      79: athrow
      80: aload_3
      81: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
      84: goto          96
      87: astore        4
      89: aload_3
      90: invokestatic  #99                 // Method safeUnpark:(Ljava/lang/Thread;)V
      93: aload         4
      95: athrow
      96: goto          19
      99: return
    Exception table:
       from    to  target type
          43    55    87   any
          62    80    87   any
          87    89    87   any

  private static void safeUnpark(java.lang.Thread);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_0
       5: invokestatic  #120                // Method java/util/concurrent/locks/LockSupport.unpark:(Ljava/lang/Thread;)V
       8: return

  protected void taskPoolTerminated();
    Code:
       0: aload_0
       1: getfield      #38                 // Field mbeanHandle:Ljava/io/Closeable;
       4: invokestatic  #60                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: aload_0
       8: invokevirtual #121                // Method closeResource:()V
      11: return

  public org.xnio.nio.NioXnio getXnio();
    Code:
       0: aload_0
       1: invokespecial #122                // Method org/xnio/XnioWorker.getXnio:()Lorg/xnio/Xnio;
       4: checkcast     #123                // class org/xnio/nio/NioXnio
       7: areturn

  org.xnio.nio.WorkerThread getAcceptThread();
    Code:
       0: aload_0
       1: getfield      #31                 // Field acceptThread:Lorg/xnio/nio/WorkerThread;
       4: areturn

  protected org.xnio.XnioIoThread chooseThread();
    Code:
       0: aload_0
       1: invokevirtual #124                // Method chooseThread:()Lorg/xnio/nio/WorkerThread;
       4: areturn

  public org.xnio.Xnio getXnio();
    Code:
       0: aload_0
       1: invokevirtual #125                // Method getXnio:()Lorg/xnio/nio/NioXnio;
       4: areturn

  public org.xnio.XnioIoThread getIoThread(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method getIoThread:(I)Lorg/xnio/nio/WorkerThread;
       5: areturn

  static int access$000(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getCoreWorkerPoolSize:()I
       4: ireturn

  static int access$100(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getMaxWorkerPoolSize:()I
       4: ireturn

  static int access$200(org.xnio.nio.NioXnioWorker);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method getWorkerQueueSize:()I
       4: ireturn

  static {};
    Code:
       0: ldc           #82                 // class org/xnio/nio/NioXnioWorker
       2: ldc           #98                 // class java/lang/Thread
       4: ldc           #126                // String shutdownWaiter
       6: invokestatic  #127                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #96                 // Field shutdownWaiterUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #82                 // class org/xnio/nio/NioXnioWorker
      14: ldc           #128                // String state
      16: invokestatic  #129                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: putstatic     #85                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: return
}
