Compiled from "InflatingStreamSourceConduit.java"
public final class org.xnio.conduits.InflatingStreamSourceConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> implements org.xnio.conduits.StreamSourceConduit {
  private final java.util.zip.Inflater inflater;

  private final java.nio.ByteBuffer buffer;

  public org.xnio.conduits.InflatingStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, java.util.zip.Inflater);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       5: aload_0
       6: aload_2
       7: putfield      #19                 // Field inflater:Ljava/util/zip/Inflater;
      10: aload_0
      11: sipush        16384
      14: invokestatic  #25                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      17: putfield      #27                 // Field buffer:Ljava/nio/ByteBuffer;
      20: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload         5
       2: new           #37                 // class org/xnio/conduits/ConduitReadableByteChannel
       5: dup
       6: aload_0
       7: invokespecial #38                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      10: lload_1
      11: lload_3
      12: invokevirtual #44                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      15: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokestatic  #56                 // Method org/xnio/conduits/Conduits.transfer:(Lorg/xnio/conduits/StreamSourceConduit;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #68                 // Method java/nio/ByteBuffer.position:()I
       9: istore_3
      10: aload_0
      11: getfield      #19                 // Field inflater:Ljava/util/zip/Inflater;
      14: astore        4
      16: aload_1
      17: invokevirtual #72                 // Method java/nio/ByteBuffer.hasArray:()Z
      20: ifeq          157
      23: aload_1
      24: invokevirtual #76                 // Method java/nio/ByteBuffer.array:()[B
      27: astore        6
      29: aload_1
      30: invokevirtual #79                 // Method java/nio/ByteBuffer.arrayOffset:()I
      33: istore        7
      35: aload         4
      37: aload         6
      39: iload         7
      41: iload_3
      42: iadd
      43: iload_2
      44: invokevirtual #87                 // Method java/util/zip/Inflater.inflate:([BII)I
      47: istore        5
      49: goto          64
      52: astore        8
      54: new           #35                 // class java/io/IOException
      57: dup
      58: aload         8
      60: invokespecial #90                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      63: athrow
      64: iload         5
      66: ifle          81
      69: aload_1
      70: iload_3
      71: iload         5
      73: iadd
      74: invokevirtual #93                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      77: pop
      78: iload         5
      80: ireturn
      81: aload         4
      83: invokevirtual #96                 // Method java/util/zip/Inflater.needsDictionary:()Z
      86: ifeq          98
      89: getstatic     #102                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
      92: invokeinterface #106,  1          // InterfaceMethod org/xnio/_private/Messages.inflaterNeedsDictionary:()Ljava/io/IOException;
      97: athrow
      98: aload_0
      99: getfield      #27                 // Field buffer:Ljava/nio/ByteBuffer;
     102: astore        8
     104: aload         8
     106: invokevirtual #110                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     109: pop
     110: aload_0
     111: getfield      #113                // Field next:Lorg/xnio/conduits/Conduit;
     114: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
     117: aload         8
     119: invokeinterface #115,  2          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     124: istore        5
     126: iload         5
     128: ifle          151
     131: aload         4
     133: aload         8
     135: invokevirtual #76                 // Method java/nio/ByteBuffer.array:()[B
     138: aload         8
     140: invokevirtual #79                 // Method java/nio/ByteBuffer.arrayOffset:()I
     143: iload         5
     145: invokevirtual #119                // Method java/util/zip/Inflater.setInput:([BII)V
     148: goto          154
     151: iload         5
     153: ireturn
     154: goto          35
     157: iload_2
     158: newarray       byte
     160: astore        6
     162: aload         4
     164: aload         6
     166: invokevirtual #122                // Method java/util/zip/Inflater.inflate:([B)I
     169: istore        5
     171: goto          186
     174: astore        7
     176: new           #35                 // class java/io/IOException
     179: dup
     180: aload         7
     182: invokespecial #90                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     185: athrow
     186: iload         5
     188: ifle          204
     191: aload_1
     192: aload         6
     194: iconst_0
     195: iload         5
     197: invokevirtual #126                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     200: pop
     201: iload         5
     203: ireturn
     204: aload         4
     206: invokevirtual #96                 // Method java/util/zip/Inflater.needsDictionary:()Z
     209: ifeq          221
     212: getstatic     #102                // Field org/xnio/_private/Messages.msg:Lorg/xnio/_private/Messages;
     215: invokeinterface #106,  1          // InterfaceMethod org/xnio/_private/Messages.inflaterNeedsDictionary:()Ljava/io/IOException;
     220: athrow
     221: aload_0
     222: getfield      #27                 // Field buffer:Ljava/nio/ByteBuffer;
     225: astore        7
     227: aload         7
     229: invokevirtual #110                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     232: pop
     233: aload_0
     234: getfield      #113                // Field next:Lorg/xnio/conduits/Conduit;
     237: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
     240: aload         7
     242: invokeinterface #115,  2          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     247: istore        5
     249: iload         5
     251: ifle          274
     254: aload         4
     256: aload         7
     258: invokevirtual #76                 // Method java/nio/ByteBuffer.array:()[B
     261: aload         7
     263: invokevirtual #79                 // Method java/nio/ByteBuffer.arrayOffset:()I
     266: iload         5
     268: invokevirtual #119                // Method java/util/zip/Inflater.setInput:([BII)V
     271: goto          277
     274: iload         5
     276: ireturn
     277: goto          162
    Exception table:
       from    to  target type
          35    49    52   Class java/util/zip/DataFormatException
         162   171   174   Class java/util/zip/DataFormatException

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #137                // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     39
       9: aload_1
      10: iload         4
      12: iload_2
      13: iadd
      14: aaload
      15: astore        5
      17: aload         5
      19: invokevirtual #142                // Method java/nio/ByteBuffer.hasRemaining:()Z
      22: ifeq          33
      25: aload_0
      26: aload         5
      28: invokevirtual #143                // Method read:(Ljava/nio/ByteBuffer;)I
      31: i2l
      32: lreturn
      33: iinc          4, 1
      36: goto          3
      39: lconst_0
      40: lreturn

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field inflater:Ljava/util/zip/Inflater;
       4: invokevirtual #151                // Method java/util/zip/Inflater.end:()V
       7: aload_0
       8: getfield      #113                // Field next:Lorg/xnio/conduits/Conduit;
      11: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
      14: invokeinterface #153,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.terminateReads:()V
      19: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field inflater:Ljava/util/zip/Inflater;
       4: invokevirtual #157                // Method java/util/zip/Inflater.needsInput:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #113                // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
      18: invokeinterface #159,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:()V
      23: return

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field inflater:Ljava/util/zip/Inflater;
       4: invokevirtual #157                // Method java/util/zip/Inflater.needsInput:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #113                // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #7                  // class org/xnio/conduits/StreamSourceConduit
      18: lload_1
      19: aload_3
      20: invokeinterface #162,  4          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      25: return
}
