Compiled from "AbstractAnnotatedClassProcessor.java"
public abstract class org.jboss.ws.common.reflection.AbstractAnnotatedClassProcessor<AO extends java.lang.reflect.AccessibleObject, A extends java.lang.annotation.Annotation> extends org.jboss.ws.common.reflection.AbstractClassProcessor<AO> implements org.jboss.ws.common.reflection.AnnotationAware<A> {
  private final java.lang.Class<A> annotationClass;

  public org.jboss.ws.common.reflection.AbstractAnnotatedClassProcessor(java.lang.Class<A>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/ws/common/reflection/AbstractClassProcessor."<init>":()V
       4: aload_1
       5: ifnonnull     17
       8: getstatic     #2                  // Field org/jboss/ws/common/Messages.MESSAGES:Lorg/jboss/ws/common/Messages;
      11: invokeinterface #3,  1            // InterfaceMethod org/jboss/ws/common/Messages.annotationClassCannotBeNull:()Ljava/lang/IllegalArgumentException;
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #4                  // Field annotationClass:Ljava/lang/Class;
      22: return

  public boolean matches(AO);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #5                  // Method getAnnotation:()Ljava/lang/Class;
       5: invokevirtual #6                  // Method java/lang/reflect/AccessibleObject.isAnnotationPresent:(Ljava/lang/Class;)Z
       8: ireturn

  public java.lang.Class<A> getAnnotation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field annotationClass:Ljava/lang/Class;
       4: areturn
}
