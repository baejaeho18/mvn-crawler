Compiled from "Loggers.java"
public interface org.jboss.ws.common.Loggers extends org.jboss.logging.BasicLogger {
  public static final org.jboss.ws.common.Loggers ROOT_LOGGER;

  public static final org.jboss.ws.common.Loggers MONITORING_LOGGER;

  public static final org.jboss.ws.common.Loggers MANAGEMENT_LOGGER;

  public static final org.jboss.ws.common.Loggers DEPLOYMENT_LOGGER;

  public abstract void cannotGetChildrenForResource(java.lang.Throwable, java.net.URL);

  public abstract void cannotGetNameForResource(java.lang.Throwable, java.net.URL);

  public abstract void notAssignableDueToConflictingClassLoaders(java.lang.Class<?>, java.lang.Class<?>, java.lang.ClassLoader, java.lang.ClassLoader);

  public abstract void couldNotClearBlacklist(java.lang.ClassLoader, java.lang.Throwable);

  public abstract void couldNotLoad(java.lang.String);

  public abstract void cannotParse(java.lang.String);

  public abstract void cannotReadResource(java.lang.String, java.lang.Throwable);

  public abstract void cannotLoadIDAsURL(java.lang.String, java.lang.String);

  public abstract void wsdlImportPublishedTo(java.net.URL);

  public abstract void xmlSchemaImportPublishedTo(java.net.URL);

  public abstract void cannotDeletePublishedWsdlDoc(java.net.URL);

  public abstract void cannotRegisterProvidedProcessor(javax.management.ObjectName, java.lang.Throwable);

  public abstract void cannotRegisterProcessorWithJmxServer(javax.management.ObjectName, java.lang.Throwable);

  public abstract void cannotUnregisterProcessorWithJmxServer(javax.management.ObjectName, java.lang.Throwable);

  public abstract void startingWSServerConfig(java.lang.String, java.lang.String);

  public abstract void unableToCalculateWebServicesPort(java.lang.String);

  public abstract void unableToCalculateWebServicesSecurePort(java.lang.String);

  public abstract void usingUndefinedWebServicesHost(java.lang.String);

  public abstract void usingLocalHostWebServicesHost(java.lang.String);

  public abstract void couldNotGetAddressForHost(java.lang.String, java.lang.Throwable);

  public abstract void couldNotGetPortFromConfiguredHTTPConnector();

  public abstract void unableToReadFromHttpServletRequest(java.lang.Throwable);

  public abstract void cannotTraceSoapMessage(java.lang.Throwable);

  public abstract void methodInvocationFailed(java.lang.Throwable);

  public abstract void cannotGetRootFileTryingWithAdditionalMetaData(java.lang.String);

  public abstract void cannotGetRootResourceFrom(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void errorDuringDeployment(java.lang.String, java.lang.Throwable);

  public abstract void errorDestroyingDeployment(java.lang.String, java.lang.Throwable);

  public abstract void cannotStopEndpoint(org.jboss.wsf.spi.deployment.EndpointState, javax.management.ObjectName);

  public abstract void cannotStartEndpoint(org.jboss.wsf.spi.deployment.EndpointState, javax.management.ObjectName);

  public abstract void cannotAddHandler(java.lang.String, java.lang.Throwable);

  public abstract void filtersNotSupported();

  public abstract void initParamsNotSupported();

  public abstract void errorClosingJAXBIntroConf(java.net.URL, java.lang.Throwable);

  public abstract void aspectDoesNotWorkOnDeployment(java.lang.Class<?>, java.lang.Class<?>);

  public abstract void cannotGetURLFor(java.lang.String);

  public abstract void cannotFindInAdditionalMetaData(java.lang.String);

  public abstract void cannotObtainHost(java.lang.String);

  public abstract void cannotObtainPort(java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/ws/common/Loggers
       2: ldc           #2                  // String org.jboss.ws.common
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/ws/common/Loggers
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/ws/common/Loggers;
      13: ldc           #1                  // class org/jboss/ws/common/Loggers
      15: ldc           #5                  // String org.jboss.ws.common.monitoring
      17: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #1                  // class org/jboss/ws/common/Loggers
      23: putstatic     #6                  // Field MONITORING_LOGGER:Lorg/jboss/ws/common/Loggers;
      26: ldc           #1                  // class org/jboss/ws/common/Loggers
      28: ldc           #7                  // String org.jboss.ws.common.management
      30: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #1                  // class org/jboss/ws/common/Loggers
      36: putstatic     #8                  // Field MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      39: ldc           #1                  // class org/jboss/ws/common/Loggers
      41: ldc           #9                  // String org.jboss.ws.common.deployment
      43: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      46: checkcast     #1                  // class org/jboss/ws/common/Loggers
      49: putstatic     #10                 // Field DEPLOYMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      52: return
}
