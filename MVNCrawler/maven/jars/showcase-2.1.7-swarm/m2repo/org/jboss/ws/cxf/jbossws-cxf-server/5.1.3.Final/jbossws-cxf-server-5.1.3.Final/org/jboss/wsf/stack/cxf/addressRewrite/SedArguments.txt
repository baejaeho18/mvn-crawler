Compiled from "SedArguments.java"
final class org.jboss.wsf.stack.cxf.addressRewrite.SedArguments {
  private boolean isGlobal;

  private boolean isIgnoreCase;

  private boolean isTranslate;

  private boolean isSubstitute;

  private java.lang.String script;

  private boolean scriptIsSet;

  private java.lang.String regexp;

  private boolean regexpIsSet;

  private java.lang.String string1;

  private boolean string1IsSet;

  private java.lang.String replacement;

  private boolean replacementIsSet;

  private java.lang.String string2;

  private boolean string2IsSet;

  private int[] occurrence;

  private boolean occurrenceIsSet;

  public org.jboss.wsf.stack.cxf.addressRewrite.SedArguments();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field isGlobal:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isIgnoreCase:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field isTranslate:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field isSubstitute:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field scriptIsSet:Z
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field regexpIsSet:Z
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field string1IsSet:Z
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field replacementIsSet:Z
      44: aload_0
      45: iconst_0
      46: putfield      #10                 // Field string2IsSet:Z
      49: aload_0
      50: iconst_0
      51: putfield      #11                 // Field occurrenceIsSet:Z
      54: return

  public java.lang.String getScript();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scriptIsSet:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #12                 // Field script:Ljava/lang/String;
      11: areturn
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #16                 // String operand has not been set:
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #12                 // Field script:Ljava/lang/String;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow

  public boolean isScriptSet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field scriptIsSet:Z
       4: ireturn

  public void setScript(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field script:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #6                  // Field scriptIsSet:Z
      10: return

  public java.lang.String getRegexp();
    Code:
       0: aload_0
       1: getfield      #7                  // Field regexpIsSet:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #20                 // Field regexp:Ljava/lang/String;
      11: areturn
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #16                 // String operand has not been set:
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #20                 // Field regexp:Ljava/lang/String;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow

  public boolean isRegexpSet();
    Code:
       0: aload_0
       1: getfield      #7                  // Field regexpIsSet:Z
       4: ireturn

  public void setRegexp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field regexp:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #7                  // Field regexpIsSet:Z
      10: return

  public java.lang.String getString1();
    Code:
       0: aload_0
       1: getfield      #8                  // Field string1IsSet:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #21                 // Field string1:Ljava/lang/String;
      11: areturn
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #16                 // String operand has not been set:
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #21                 // Field string1:Ljava/lang/String;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow

  public boolean isString1Set();
    Code:
       0: aload_0
       1: getfield      #8                  // Field string1IsSet:Z
       4: ireturn

  public void setString1(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field string1:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #8                  // Field string1IsSet:Z
      10: return

  public java.lang.String getReplacement();
    Code:
       0: aload_0
       1: getfield      #9                  // Field replacementIsSet:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #22                 // Field replacement:Ljava/lang/String;
      11: areturn
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #16                 // String operand has not been set:
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #22                 // Field replacement:Ljava/lang/String;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow

  public boolean isReplacementSet();
    Code:
       0: aload_0
       1: getfield      #9                  // Field replacementIsSet:Z
       4: ireturn

  public void setReplacement(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field replacement:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #9                  // Field replacementIsSet:Z
      10: return

  public java.lang.String getString2();
    Code:
       0: aload_0
       1: getfield      #10                 // Field string2IsSet:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #23                 // Field string2:Ljava/lang/String;
      11: areturn
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #16                 // String operand has not been set:
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #23                 // Field string2:Ljava/lang/String;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow

  public boolean isString2Set();
    Code:
       0: aload_0
       1: getfield      #10                 // Field string2IsSet:Z
       4: ireturn

  public void setString2(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field string2:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #10                 // Field string2IsSet:Z
      10: return

  public int[] getOccurrence();
    Code:
       0: aload_0
       1: getfield      #11                 // Field occurrenceIsSet:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #24                 // Field occurrence:[I
      11: areturn
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #16                 // String operand has not been set:
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #24                 // Field occurrence:[I
      32: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow

  public boolean isOccurrenceSet();
    Code:
       0: aload_0
       1: getfield      #11                 // Field occurrenceIsSet:Z
       4: ireturn

  public void setOccurrence(int...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field occurrence:[I
       5: aload_0
       6: iconst_1
       7: putfield      #11                 // Field occurrenceIsSet:Z
      10: return

  public boolean isGlobal();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isGlobal:Z
       4: ireturn

  public boolean isIgnoreCase();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isIgnoreCase:Z
       4: ireturn

  public boolean isSubstitute();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isSubstitute:Z
       4: ireturn

  public boolean isTranslate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isTranslate:Z
       4: ireturn

  public void setGlobal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field isGlobal:Z
       5: return

  public void setIgnoreCase(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field isIgnoreCase:Z
       5: return

  public void setTranslate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field isTranslate:Z
       5: return

  public void setSubstitute(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field isSubstitute:Z
       5: return
}
