Compiled from "AbstractDefaultEndpoint.java"
public abstract class org.jboss.ws.common.deployment.AbstractDefaultEndpoint extends org.jboss.wsf.spi.deployment.AbstractExtensible implements org.jboss.wsf.spi.deployment.Endpoint {
  private volatile org.jboss.wsf.spi.deployment.Service service;

  private volatile javax.management.ObjectName name;

  private volatile java.lang.String shortName;

  protected volatile java.lang.String urlPattern;

  private volatile java.lang.String targetBean;

  private volatile java.lang.Class<?> targetBeanClass;

  private volatile org.jboss.wsf.spi.deployment.EndpointState state;

  private volatile org.jboss.wsf.spi.deployment.EndpointType type;

  private volatile org.jboss.wsf.spi.invocation.RequestHandler requestHandler;

  private volatile org.jboss.wsf.spi.invocation.InvocationHandler invocationHandler;

  private volatile org.jboss.wsf.spi.deployment.LifecycleHandler lifecycleHandler;

  protected volatile org.jboss.wsf.spi.management.EndpointMetrics metrics;

  private volatile java.lang.String address;

  private volatile java.util.List<org.jboss.ws.api.monitoring.RecordProcessor> recordProcessors;

  private volatile org.jboss.wsf.spi.security.SecurityDomainContext securityDomainContext;

  private volatile org.jboss.wsf.spi.deployment.InstanceProvider instanceProvider;

  private volatile org.jboss.wsf.spi.metadata.config.EndpointConfig endpointConfig;

  org.jboss.ws.common.deployment.AbstractDefaultEndpoint(java.lang.String);
    Code:
       0: aload_0
       1: bipush        8
       3: iconst_4
       4: invokespecial #1                  // Method org/jboss/wsf/spi/deployment/AbstractExtensible."<init>":(II)V
       7: aload_0
       8: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
      11: dup
      12: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      15: putfield      #4                  // Field recordProcessors:Ljava/util/List;
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field targetBean:Ljava/lang/String;
      23: aload_0
      24: getstatic     #6                  // Field org/jboss/wsf/spi/deployment/EndpointState.UNDEFINED:Lorg/jboss/wsf/spi/deployment/EndpointState;
      27: putfield      #7                  // Field state:Lorg/jboss/wsf/spi/deployment/EndpointState;
      30: return

  public org.jboss.wsf.spi.deployment.Service getService();
    Code:
       0: aload_0
       1: getfield      #8                  // Field service:Lorg/jboss/wsf/spi/deployment/Service;
       4: areturn

  public void setService(org.jboss.wsf.spi.deployment.Service);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field service:Lorg/jboss/wsf/spi/deployment/Service;
       9: return

  public java.lang.String getTargetBeanName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field targetBean:Ljava/lang/String;
       4: areturn

  public void setTargetBeanName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field targetBean:Ljava/lang/String;
       9: return

  public java.lang.Class<?> getTargetBeanClass();
    Code:
       0: aload_0
       1: getfield      #10                 // Field targetBeanClass:Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: ifnonnull     81
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #10                 // Field targetBeanClass:Ljava/lang/Class;
      17: astore_1
      18: aload_1
      19: ifnonnull     69
      22: aload_0
      23: getfield      #8                  // Field service:Lorg/jboss/wsf/spi/deployment/Service;
      26: invokeinterface #11,  1           // InterfaceMethod org/jboss/wsf/spi/deployment/Service.getDeployment:()Lorg/jboss/wsf/spi/deployment/Deployment;
      31: invokeinterface #12,  1           // InterfaceMethod org/jboss/wsf/spi/deployment/Deployment.getClassLoader:()Ljava/lang/ClassLoader;
      36: astore_3
      37: aload_0
      38: aload_3
      39: aload_0
      40: getfield      #5                  // Field targetBean:Ljava/lang/String;
      43: invokevirtual #13                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      46: putfield      #10                 // Field targetBeanClass:Ljava/lang/Class;
      49: aload_0
      50: getfield      #10                 // Field targetBeanClass:Ljava/lang/Class;
      53: astore_1
      54: goto          69
      57: astore        4
      59: new           #15                 // class org/jboss/wsf/spi/deployment/WSFDeploymentException
      62: dup
      63: aload         4
      65: invokespecial #16                 // Method org/jboss/wsf/spi/deployment/WSFDeploymentException."<init>":(Ljava/lang/Throwable;)V
      68: athrow
      69: aload_2
      70: monitorexit
      71: goto          81
      74: astore        5
      76: aload_2
      77: monitorexit
      78: aload         5
      80: athrow
      81: aload_1
      82: areturn
    Exception table:
       from    to  target type
          37    54    57   Class java/lang/ClassNotFoundException
          13    71    74   any
          74    78    74   any

  public javax.management.ObjectName getName();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #17                 // Field name:Ljavax/management/ObjectName;
       5: if_acmpne     31
       8: aload_0
       9: new           #18                 // class javax/management/ObjectName
      12: dup
      13: ldc           #20                 // String jboss.ws
      15: ldc           #21                 // String endpoint
      17: aload_0
      18: getfield      #5                  // Field targetBean:Ljava/lang/String;
      21: invokespecial #22                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      24: putfield      #17                 // Field name:Ljavax/management/ObjectName;
      27: goto          31
      30: astore_1
      31: aload_0
      32: getfield      #17                 // Field name:Ljavax/management/ObjectName;
      35: areturn
    Exception table:
       from    to  target type
           8    27    30   Class javax/management/MalformedObjectNameException

  public void setName(javax.management.ObjectName);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #17                 // Field name:Ljavax/management/ObjectName;
       9: return

  public java.lang.String getShortName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field shortName:Ljava/lang/String;
       4: areturn

  public void setShortName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #24                 // Field shortName:Ljava/lang/String;
       9: return

  public org.jboss.wsf.spi.deployment.EndpointState getState();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/jboss/wsf/spi/deployment/EndpointState;
       4: areturn

  public void setState(org.jboss.wsf.spi.deployment.EndpointState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field state:Lorg/jboss/wsf/spi/deployment/EndpointState;
       5: return

  public org.jboss.wsf.spi.deployment.EndpointType getType();
    Code:
       0: aload_0
       1: getfield      #25                 // Field type:Lorg/jboss/wsf/spi/deployment/EndpointType;
       4: areturn

  public void setType(org.jboss.wsf.spi.deployment.EndpointType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field type:Lorg/jboss/wsf/spi/deployment/EndpointType;
       5: return

  public org.jboss.wsf.spi.invocation.RequestHandler getRequestHandler();
    Code:
       0: aload_0
       1: getfield      #26                 // Field requestHandler:Lorg/jboss/wsf/spi/invocation/RequestHandler;
       4: areturn

  public void setRequestHandler(org.jboss.wsf.spi.invocation.RequestHandler);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #26                 // Field requestHandler:Lorg/jboss/wsf/spi/invocation/RequestHandler;
       9: return

  public org.jboss.wsf.spi.deployment.LifecycleHandler getLifecycleHandler();
    Code:
       0: aload_0
       1: getfield      #27                 // Field lifecycleHandler:Lorg/jboss/wsf/spi/deployment/LifecycleHandler;
       4: areturn

  public void setLifecycleHandler(org.jboss.wsf.spi.deployment.LifecycleHandler);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #27                 // Field lifecycleHandler:Lorg/jboss/wsf/spi/deployment/LifecycleHandler;
       9: return

  public org.jboss.wsf.spi.invocation.InvocationHandler getInvocationHandler();
    Code:
       0: aload_0
       1: getfield      #28                 // Field invocationHandler:Lorg/jboss/wsf/spi/invocation/InvocationHandler;
       4: areturn

  public void setInvocationHandler(org.jboss.wsf.spi.invocation.InvocationHandler);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #28                 // Field invocationHandler:Lorg/jboss/wsf/spi/invocation/InvocationHandler;
       9: return

  public <T> T addAttachment(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #29                 // class org/jboss/ws/common/injection/PreDestroyHolder
       3: invokevirtual #30                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       6: istore_3
       7: aload_1
       8: ldc           #31                 // class java/lang/Object
      10: invokevirtual #30                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: istore        4
      15: iload_3
      16: ifne          28
      19: iload         4
      21: ifne          28
      24: aload_0
      25: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #32                 // Method org/jboss/wsf/spi/deployment/AbstractExtensible.addAttachment:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      34: areturn

  public <T> T removeAttachment(java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #29                 // class org/jboss/ws/common/injection/PreDestroyHolder
       3: invokevirtual #30                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       6: istore_2
       7: aload_1
       8: ldc           #31                 // class java/lang/Object
      10: invokevirtual #30                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: istore_3
      14: iload_2
      15: ifne          26
      18: iload_3
      19: ifne          26
      22: aload_0
      23: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
      26: aload_0
      27: aload_1
      28: invokespecial #33                 // Method org/jboss/wsf/spi/deployment/AbstractExtensible.removeAttachment:(Ljava/lang/Class;)Ljava/lang/Object;
      31: areturn

  public void removeProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: invokespecial #34                 // Method org/jboss/wsf/spi/deployment/AbstractExtensible.removeProperty:(Ljava/lang/String;)V
       9: return

  public void setProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #35                 // Method org/jboss/wsf/spi/deployment/AbstractExtensible.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  protected void assertEndpointSetterAccess();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/jboss/wsf/spi/deployment/EndpointState;
       4: getstatic     #36                 // Field org/jboss/wsf/spi/deployment/EndpointState.STARTED:Lorg/jboss/wsf/spi/deployment/EndpointState;
       7: if_acmpne     27
      10: getstatic     #37                 // Field org/jboss/ws/common/Messages.MESSAGES:Lorg/jboss/ws/common/Messages;
      13: aload_0
      14: getfield      #7                  // Field state:Lorg/jboss/wsf/spi/deployment/EndpointState;
      17: aload_0
      18: invokevirtual #38                 // Method getName:()Ljavax/management/ObjectName;
      21: invokeinterface #39,  3           // InterfaceMethod org/jboss/ws/common/Messages.cannotModifyEndpointInState:(Lorg/jboss/wsf/spi/deployment/EndpointState;Ljavax/management/ObjectName;)Ljava/lang/IllegalStateException;
      26: athrow
      27: return

  public java.util.List<org.jboss.ws.api.monitoring.RecordProcessor> getRecordProcessors();
    Code:
       0: aload_0
       1: getfield      #4                  // Field recordProcessors:Ljava/util/List;
       4: areturn

  public void setRecordProcessors(java.util.List<org.jboss.ws.api.monitoring.RecordProcessor>);
    Code:
       0: aload_0
       1: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       4: dup
       5: aload_1
       6: invokespecial #40                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":(Ljava/util/Collection;)V
       9: putfield      #4                  // Field recordProcessors:Ljava/util/List;
      12: return

  public void processRecord(org.jboss.ws.api.monitoring.Record);
    Code:
       0: aload_0
       1: getfield      #4                  // Field recordProcessors:Ljava/util/List;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          114
      19: aload_2
      20: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #44                 // class org/jboss/ws/api/monitoring/RecordProcessor
      28: astore_3
      29: aload_3
      30: invokeinterface #45,  1           // InterfaceMethod org/jboss/ws/api/monitoring/RecordProcessor.isRecording:()Z
      35: ifeq          111
      38: iconst_1
      39: istore        4
      41: aload_3
      42: invokeinterface #46,  1           // InterfaceMethod org/jboss/ws/api/monitoring/RecordProcessor.getFilters:()Ljava/util/List;
      47: ifnull        99
      50: aload_3
      51: invokeinterface #46,  1           // InterfaceMethod org/jboss/ws/api/monitoring/RecordProcessor.getFilters:()Ljava/util/List;
      56: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      61: astore        5
      63: aload         5
      65: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          99
      73: iload         4
      75: ifeq          99
      78: aload         5
      80: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #47                 // class org/jboss/ws/api/monitoring/RecordFilter
      88: aload_1
      89: invokeinterface #48,  2           // InterfaceMethod org/jboss/ws/api/monitoring/RecordFilter.match:(Lorg/jboss/ws/api/monitoring/Record;)Z
      94: istore        4
      96: goto          63
      99: iload         4
     101: ifeq          111
     104: aload_3
     105: aload_1
     106: invokeinterface #49,  2           // InterfaceMethod org/jboss/ws/api/monitoring/RecordProcessor.processRecord:(Lorg/jboss/ws/api/monitoring/Record;)V
     111: goto          10
     114: return

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #50                 // Field address:Ljava/lang/String;
       4: areturn

  public void setAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field address:Ljava/lang/String;
       5: return

  public org.jboss.wsf.spi.security.SecurityDomainContext getSecurityDomainContext();
    Code:
       0: aload_0
       1: getfield      #51                 // Field securityDomainContext:Lorg/jboss/wsf/spi/security/SecurityDomainContext;
       4: areturn

  public void setSecurityDomainContext(org.jboss.wsf.spi.security.SecurityDomainContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field securityDomainContext:Lorg/jboss/wsf/spi/security/SecurityDomainContext;
       5: return

  public org.jboss.wsf.spi.deployment.InstanceProvider getInstanceProvider();
    Code:
       0: aload_0
       1: getfield      #52                 // Field instanceProvider:Lorg/jboss/wsf/spi/deployment/InstanceProvider;
       4: areturn

  public void setInstanceProvider(org.jboss.wsf.spi.deployment.InstanceProvider);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #52                 // Field instanceProvider:Lorg/jboss/wsf/spi/deployment/InstanceProvider;
       9: return

  public void setEndpointConfig(org.jboss.wsf.spi.metadata.config.EndpointConfig);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method assertEndpointSetterAccess:()V
       4: aload_0
       5: aload_1
       6: putfield      #53                 // Field endpointConfig:Lorg/jboss/wsf/spi/metadata/config/EndpointConfig;
       9: return

  public org.jboss.wsf.spi.metadata.config.EndpointConfig getEndpointConfig();
    Code:
       0: aload_0
       1: getfield      #53                 // Field endpointConfig:Lorg/jboss/wsf/spi/metadata/config/EndpointConfig;
       4: areturn
}
