Compiled from "AbstractRecordProcessor.java"
public abstract class org.jboss.ws.common.monitoring.AbstractRecordProcessor implements org.jboss.ws.api.monitoring.RecordProcessor {
  private static final long serialVersionUID;

  protected java.util.List<org.jboss.ws.api.monitoring.RecordFilter> filters;

  protected boolean processDestinationHost;

  protected boolean processSourceHost;

  protected boolean processHeaders;

  protected boolean processEnvelope;

  protected boolean processMessageType;

  protected boolean processOperation;

  protected boolean processDate;

  protected java.lang.String name;

  protected boolean recording;

  public org.jboss.ws.common.monitoring.AbstractRecordProcessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field filters:Ljava/util/List;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field processDestinationHost:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field processSourceHost:Z
      25: aload_0
      26: iconst_1
      27: putfield      #7                  // Field processHeaders:Z
      30: aload_0
      31: iconst_1
      32: putfield      #8                  // Field processEnvelope:Z
      35: aload_0
      36: iconst_1
      37: putfield      #9                  // Field processMessageType:Z
      40: aload_0
      41: iconst_1
      42: putfield      #10                 // Field processOperation:Z
      45: aload_0
      46: iconst_1
      47: putfield      #11                 // Field processDate:Z
      50: aload_0
      51: iconst_0
      52: putfield      #12                 // Field recording:Z
      55: return

  public abstract void processRecord(org.jboss.ws.api.monitoring.Record);

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field name:Ljava/lang/String;
       4: areturn

  public void addFilter(org.jboss.ws.api.monitoring.RecordFilter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field filters:Ljava/util/List;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.List<org.jboss.ws.api.monitoring.RecordFilter> getFilters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field filters:Ljava/util/List;
       4: areturn

  public void setFilters(java.util.List<org.jboss.ws.api.monitoring.RecordFilter>);
    Code:
       0: aload_0
       1: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       4: dup
       5: aload_1
       6: invokespecial #15                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":(Ljava/util/Collection;)V
       9: putfield      #4                  // Field filters:Ljava/util/List;
      12: return

  public boolean isProcessDestinationHost();
    Code:
       0: aload_0
       1: getfield      #5                  // Field processDestinationHost:Z
       4: ireturn

  public void setProcessDestinationHost(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field processDestinationHost:Z
       5: return

  public boolean isProcessSourceHost();
    Code:
       0: aload_0
       1: getfield      #6                  // Field processSourceHost:Z
       4: ireturn

  public void setProcessSourceHost(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field processSourceHost:Z
       5: return

  public boolean isProcessHeaders();
    Code:
       0: aload_0
       1: getfield      #7                  // Field processHeaders:Z
       4: ireturn

  public void setProcessHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field processHeaders:Z
       5: return

  public boolean isProcessEnvelope();
    Code:
       0: aload_0
       1: getfield      #8                  // Field processEnvelope:Z
       4: ireturn

  public void setProcessEnvelope(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field processEnvelope:Z
       5: return

  public boolean isProcessMessageType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field processMessageType:Z
       4: ireturn

  public void setProcessMessageType(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field processMessageType:Z
       5: return

  public boolean isProcessOperation();
    Code:
       0: aload_0
       1: getfield      #10                 // Field processOperation:Z
       4: ireturn

  public void setProcessOperation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field processOperation:Z
       5: return

  public boolean isProcessDate();
    Code:
       0: aload_0
       1: getfield      #11                 // Field processDate:Z
       4: ireturn

  public void setProcessDate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field processDate:Z
       5: return

  public boolean isRecording();
    Code:
       0: aload_0
       1: getfield      #12                 // Field recording:Z
       4: ireturn

  public void setRecording(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field recording:Z
       5: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #17                 // class org/jboss/ws/common/monitoring/AbstractRecordProcessor
       7: astore_1
       8: aload_1
       9: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
      12: dup
      13: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      16: putfield      #4                  // Field filters:Ljava/util/List;
      19: aload_0
      20: getfield      #4                  // Field filters:Ljava/util/List;
      23: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          74
      38: aload_2
      39: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #21                 // class org/jboss/ws/api/monitoring/RecordFilter
      47: astore_3
      48: aload_3
      49: invokeinterface #22,  1           // InterfaceMethod org/jboss/ws/api/monitoring/RecordFilter.clone:()Ljava/lang/Object;
      54: checkcast     #21                 // class org/jboss/ws/api/monitoring/RecordFilter
      57: astore        4
      59: aload_1
      60: getfield      #4                  // Field filters:Ljava/util/List;
      63: aload         4
      65: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          29
      74: aload_1
      75: aload_0
      76: getfield      #5                  // Field processDestinationHost:Z
      79: putfield      #5                  // Field processDestinationHost:Z
      82: aload_1
      83: aload_0
      84: getfield      #6                  // Field processSourceHost:Z
      87: putfield      #6                  // Field processSourceHost:Z
      90: aload_1
      91: aload_0
      92: getfield      #7                  // Field processHeaders:Z
      95: putfield      #7                  // Field processHeaders:Z
      98: aload_1
      99: aload_0
     100: getfield      #8                  // Field processEnvelope:Z
     103: putfield      #8                  // Field processEnvelope:Z
     106: aload_1
     107: aload_0
     108: getfield      #9                  // Field processMessageType:Z
     111: putfield      #9                  // Field processMessageType:Z
     114: aload_1
     115: aload_0
     116: getfield      #10                 // Field processOperation:Z
     119: putfield      #10                 // Field processOperation:Z
     122: aload_1
     123: aload_0
     124: getfield      #11                 // Field processDate:Z
     127: putfield      #11                 // Field processDate:Z
     130: aload_1
     131: aload_0
     132: getfield      #12                 // Field recording:Z
     135: putfield      #12                 // Field recording:Z
     138: aload_1
     139: aload_0
     140: getfield      #13                 // Field name:Ljava/lang/String;
     143: putfield      #13                 // Field name:Ljava/lang/String;
     146: aload_1
     147: areturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokespecial #25                 // Method java/lang/Object.toString:()Ljava/lang/String;
      13: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: new           #23                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #27                 // String  (recording =
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #12                 // Field recording:Z
      34: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      37: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_1
      45: new           #23                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #30                 // String , processDestinationHost =
      54: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #5                  // Field processDestinationHost:Z
      61: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      64: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_1
      72: new           #23                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #31                 // String , processSourceHost =
      81: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #6                  // Field processSourceHost:Z
      88: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: aload_1
      99: new           #23                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #32                 // String , processHeaders =
     108: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: getfield      #7                  // Field processHeaders:Z
     115: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     118: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: aload_1
     126: new           #23                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #33                 // String , processEnvelope =
     135: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #8                  // Field processEnvelope:Z
     142: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     145: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: pop
     152: aload_1
     153: new           #23                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #34                 // String , processMessageType =
     162: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_0
     166: getfield      #9                  // Field processMessageType:Z
     169: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     172: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: pop
     179: aload_1
     180: new           #23                 // class java/lang/StringBuilder
     183: dup
     184: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     187: ldc           #35                 // String , processOperation =
     189: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload_0
     193: getfield      #10                 // Field processOperation:Z
     196: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     199: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: pop
     206: aload_1
     207: new           #23                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #36                 // String , processDate =
     216: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload_0
     220: getfield      #11                 // Field processDate:Z
     223: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     226: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     229: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: pop
     233: aload_1
     234: ldc           #37                 // String )
     236: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: pop
     240: aload_1
     241: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     244: areturn
}
