Compiled from "ServiceLoader.java"
class org.jboss.ws.api.util.ServiceLoader$PropertyFileAccessAction implements java.security.PrivilegedAction<java.util.Properties> {
  private java.lang.String filename;

  org.jboss.ws.api.util.ServiceLoader$PropertyFileAccessAction(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field filename:Ljava/lang/String;
       9: return

  public java.util.Properties run();
    Code:
       0: aconst_null
       1: astore_1
       2: new           #3                  // class java/io/FileInputStream
       5: dup
       6: aload_0
       7: getfield      #2                  // Field filename:Ljava/lang/String;
      10: invokespecial #4                  // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
      13: astore_1
      14: new           #5                  // class java/util/Properties
      17: dup
      18: invokespecial #6                  // Method java/util/Properties."<init>":()V
      21: astore_2
      22: aload_2
      23: aload_1
      24: invokevirtual #7                  // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      27: aload_2
      28: astore_3
      29: aload_1
      30: ifnull        37
      33: aload_1
      34: invokevirtual #8                  // Method java/io/InputStream.close:()V
      37: goto          42
      40: astore        4
      42: aload_3
      43: areturn
      44: astore_2
      45: getstatic     #11                 // Field org/jboss/ws/api/Messages.MESSAGES:Lorg/jboss/ws/api/Messages;
      48: aload_2
      49: aload_0
      50: getfield      #2                  // Field filename:Ljava/lang/String;
      53: invokeinterface #12,  3           // InterfaceMethod org/jboss/ws/api/Messages.cannotLoadProperties:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/SecurityException;
      58: athrow
      59: astore        5
      61: aload_1
      62: ifnull        69
      65: aload_1
      66: invokevirtual #8                  // Method java/io/InputStream.close:()V
      69: goto          74
      72: astore        6
      74: aload         5
      76: athrow
    Exception table:
       from    to  target type
          29    37    40   Class java/lang/Exception
           2    29    44   Class java/io/IOException
           2    29    59   any
          61    69    72   Class java/lang/Exception
          44    61    59   any

  public java.lang.Object run();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method run:()Ljava/util/Properties;
       4: areturn
}
