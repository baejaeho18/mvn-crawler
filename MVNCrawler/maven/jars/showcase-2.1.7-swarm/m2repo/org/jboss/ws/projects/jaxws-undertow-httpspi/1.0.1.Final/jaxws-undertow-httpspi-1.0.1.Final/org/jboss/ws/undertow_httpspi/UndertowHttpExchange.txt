Compiled from "UndertowHttpExchange.java"
public class org.jboss.ws.undertow_httpspi.UndertowHttpExchange extends javax.xml.ws.spi.http.HttpExchange {
  private final io.undertow.server.HttpServerExchange undertowExchange;

  private org.jboss.ws.undertow_httpspi.UndertowHttpContext context;

  public org.jboss.ws.undertow_httpspi.UndertowHttpExchange(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/xml/ws/spi/http/HttpExchange."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       9: return

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getRequestHeaders();
    Code:
       0: new           #3                  // class org/jboss/ws/undertow_httpspi/UndertowHeaderMap
       3: dup
       4: aload_0
       5: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       8: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      11: invokespecial #5                  // Method org/jboss/ws/undertow_httpspi/UndertowHeaderMap."<init>":(Lio/undertow/util/HeaderMap;)V
      14: areturn

  public java.lang.String getRequestHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       7: aload_1
       8: invokevirtual #6                  // Method io/undertow/util/HeaderMap.get:(Ljava/lang/String;)Lio/undertow/util/HeaderValues;
      11: astore_2
      12: aload_2
      13: ifnull        79
      16: aload_2
      17: invokevirtual #7                  // Method io/undertow/util/HeaderValues.size:()I
      20: ifle          79
      23: ldc           #8                  // String
      25: astore_3
      26: aload_2
      27: invokevirtual #9                  // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          77
      42: aload         4
      44: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #12                 // class java/lang/String
      52: astore        5
      54: new           #13                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      61: aload_3
      62: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload         5
      67: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: astore_3
      74: goto          32
      77: aload_3
      78: areturn
      79: aconst_null
      80: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getResponseHeaders();
    Code:
       0: new           #3                  // class org/jboss/ws/undertow_httpspi/UndertowHeaderMap
       3: dup
       4: aload_0
       5: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       8: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      11: invokespecial #5                  // Method org/jboss/ws/undertow_httpspi/UndertowHeaderMap."<init>":(Lio/undertow/util/HeaderMap;)V
      14: areturn

  public void addResponseHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       7: new           #18                 // class io/undertow/util/HttpString
      10: dup
      11: aload_1
      12: invokespecial #19                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      15: aload_2
      16: invokevirtual #20                 // Method io/undertow/util/HeaderMap.add:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      19: pop
      20: return

  public java.lang.String getRequestURI();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
       7: areturn

  public java.lang.String getContextPath();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
       7: invokestatic  #23                 // Method org/jboss/ws/undertow_httpspi/PathUtils.getContextPathFromRequest:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.lang.String getRequestMethod();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       7: invokevirtual #25                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      10: areturn

  public javax.xml.ws.spi.http.HttpContext getHttpContext();
    Code:
       0: aload_0
       1: getfield      #26                 // Field context:Lorg/jboss/ws/undertow_httpspi/UndertowHttpContext;
       4: ifnonnull     45
       7: aload_0
       8: new           #27                 // class org/jboss/ws/undertow_httpspi/UndertowHttpContext
      11: dup
      12: new           #28                 // class io/undertow/server/handlers/PathHandler
      15: dup
      16: invokespecial #29                 // Method io/undertow/server/handlers/PathHandler."<init>":()V
      19: aload_0
      20: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
      23: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      26: invokestatic  #23                 // Method org/jboss/ws/undertow_httpspi/PathUtils.getContextPathFromRequest:(Ljava/lang/String;)Ljava/lang/String;
      29: aload_0
      30: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
      33: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
      36: invokestatic  #30                 // Method org/jboss/ws/undertow_httpspi/PathUtils.getPathFromRequest:(Ljava/lang/String;)Ljava/lang/String;
      39: invokespecial #31                 // Method org/jboss/ws/undertow_httpspi/UndertowHttpContext."<init>":(Lio/undertow/server/handlers/PathHandler;Ljava/lang/String;Ljava/lang/String;)V
      42: putfield      #26                 // Field context:Lorg/jboss/ws/undertow_httpspi/UndertowHttpContext;
      45: aload_0
      46: getfield      #26                 // Field context:Lorg/jboss/ws/undertow_httpspi/UndertowHttpContext;
      49: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
       7: pop
       8: return

  public java.io.InputStream getRequestBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.getInputStream:()Ljava/io/InputStream;
       7: areturn

  public java.io.OutputStream getResponseBody() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getOutputStream:()Ljava/io/OutputStream;
       7: areturn

  public void setStatus(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: iload_1
       5: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.setResponseCode:(I)Lio/undertow/server/HttpServerExchange;
       8: pop
       9: return

  public java.net.InetSocketAddress getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #36                 // Method io/undertow/server/HttpServerExchange.getSourceAddress:()Ljava/net/InetSocketAddress;
       7: areturn

  public java.net.InetSocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getDestinationAddress:()Ljava/net/InetSocketAddress;
       7: areturn

  public java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
       7: invokevirtual #25                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      10: areturn

  public java.lang.String getScheme();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getRequestScheme:()Ljava/lang/String;
       7: areturn

  public java.lang.String getPathInfo();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getRequestPath:()Ljava/lang/String;
       7: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field undertowExchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
       7: areturn

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<java.lang.String> getAttributeNames();
    Code:
       0: aconst_null
       1: areturn

  public java.security.Principal getUserPrincipal();
    Code:
       0: aconst_null
       1: areturn

  public boolean isUserInRole(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn
}
