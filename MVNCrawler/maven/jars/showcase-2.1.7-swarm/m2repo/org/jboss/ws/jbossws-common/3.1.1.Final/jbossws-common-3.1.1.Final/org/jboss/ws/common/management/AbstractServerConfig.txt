Compiled from "AbstractServerConfig.java"
public abstract class org.jboss.ws.common.management.AbstractServerConfig implements org.jboss.ws.common.management.AbstractServerConfigMBean,org.jboss.wsf.spi.management.ServerConfig {
  private static final java.lang.RuntimePermission LOOKUP_SERVER_INTEGRATION_SERVER_CONFIG;

  private volatile javax.management.MBeanServer mbeanServer;

  private volatile java.lang.String webServiceHost;

  private final java.lang.Object webServiceHostLock;

  private int webServicePort;

  private final java.lang.Object webServicePortLock;

  private int webServiceSecurePort;

  private final java.lang.Object webServiceSecurePortLock;

  private volatile boolean modifySOAPAddress;

  private final java.lang.Object modifySOAPAddressLock;

  private volatile java.lang.String webServicePathRewriteRule;

  private final java.lang.Object webServicePathRewriteRuleLock;

  private volatile java.lang.String webServiceUriScheme;

  private final java.lang.Object webServiceUriSchemeLock;

  private volatile boolean statisticsEnabled;

  protected volatile org.jboss.wsf.spi.management.StackConfig stackConfig;

  protected final org.jboss.wsf.spi.management.CommonConfigStore<org.jboss.wsf.spi.metadata.config.ClientConfig> clientConfigStore;

  protected final org.jboss.wsf.spi.management.CommonConfigStore<org.jboss.wsf.spi.metadata.config.EndpointConfig> endpointConfigStore;

  private static volatile org.jboss.wsf.spi.management.ServerConfig serverConfig;

  public static final java.security.PrivilegedAction<org.jboss.wsf.spi.management.ServerConfig> GET_SERVER_INTEGRATION_SERVER_CONFIG;

  public org.jboss.ws.common.management.AbstractServerConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String jbossws.undefined.host
       7: putfield      #4                  // Field webServiceHost:Ljava/lang/String;
      10: aload_0
      11: new           #5                  // class java/lang/Object
      14: dup
      15: invokespecial #1                  // Method java/lang/Object."<init>":()V
      18: putfield      #6                  // Field webServiceHostLock:Ljava/lang/Object;
      21: aload_0
      22: new           #5                  // class java/lang/Object
      25: dup
      26: invokespecial #1                  // Method java/lang/Object."<init>":()V
      29: putfield      #7                  // Field webServicePortLock:Ljava/lang/Object;
      32: aload_0
      33: new           #5                  // class java/lang/Object
      36: dup
      37: invokespecial #1                  // Method java/lang/Object."<init>":()V
      40: putfield      #8                  // Field webServiceSecurePortLock:Ljava/lang/Object;
      43: aload_0
      44: new           #5                  // class java/lang/Object
      47: dup
      48: invokespecial #1                  // Method java/lang/Object."<init>":()V
      51: putfield      #9                  // Field modifySOAPAddressLock:Ljava/lang/Object;
      54: aload_0
      55: new           #5                  // class java/lang/Object
      58: dup
      59: invokespecial #1                  // Method java/lang/Object."<init>":()V
      62: putfield      #10                 // Field webServicePathRewriteRuleLock:Ljava/lang/Object;
      65: aload_0
      66: new           #5                  // class java/lang/Object
      69: dup
      70: invokespecial #1                  // Method java/lang/Object."<init>":()V
      73: putfield      #11                 // Field webServiceUriSchemeLock:Ljava/lang/Object;
      76: aload_0
      77: new           #12                 // class org/jboss/ws/common/management/CommonConfigStoreImpl
      80: dup
      81: invokespecial #13                 // Method org/jboss/ws/common/management/CommonConfigStoreImpl."<init>":()V
      84: putfield      #14                 // Field clientConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
      87: aload_0
      88: new           #12                 // class org/jboss/ws/common/management/CommonConfigStoreImpl
      91: dup
      92: invokespecial #13                 // Method org/jboss/ws/common/management/CommonConfigStoreImpl."<init>":()V
      95: putfield      #15                 // Field endpointConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
      98: return

  public javax.management.MBeanServer getMbeanServer();
    Code:
       0: aload_0
       1: getfield      #16                 // Field mbeanServer:Ljavax/management/MBeanServer;
       4: areturn

  public void setMbeanServer(javax.management.MBeanServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field mbeanServer:Ljavax/management/MBeanServer;
       5: return

  public java.lang.String getWebServiceHost();
    Code:
       0: aload_0
       1: getfield      #4                  // Field webServiceHost:Ljava/lang/String;
       4: areturn

  public void setWebServiceHost(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #17                 // Method setWebServiceHost:(Ljava/lang/String;Lorg/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler;)V
       6: return

  protected void setWebServiceHost(java.lang.String, org.jboss.ws.common.management.AbstractServerConfig$UpdateCallbackHandler) throws java.net.UnknownHostException;
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #19                 // Method java/lang/String.length:()I
      11: ifne          27
      14: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      17: ldc           #3                  // String jbossws.undefined.host
      19: invokeinterface #21,  2           // InterfaceMethod org/jboss/ws/common/Loggers.usingUndefinedWebServicesHost:(Ljava/lang/String;)V
      24: ldc           #3                  // String jbossws.undefined.host
      26: astore_1
      27: ldc           #22                 // String 0.0.0.0
      29: aload_1
      30: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifeq          68
      36: invokestatic  #24                 // Method java/net/InetAddress.getLocalHost:()Ljava/net/InetAddress;
      39: astore_3
      40: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      43: invokeinterface #25,  1           // InterfaceMethod org/jboss/ws/common/Loggers.isDebugEnabled:()Z
      48: ifeq          63
      51: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      54: aload_3
      55: invokevirtual #26                 // Method java/net/InetAddress.getHostName:()Ljava/lang/String;
      58: invokeinterface #27,  2           // InterfaceMethod org/jboss/ws/common/Loggers.usingLocalHostWebServicesHost:(Ljava/lang/String;)V
      63: aload_3
      64: invokevirtual #26                 // Method java/net/InetAddress.getHostName:()Ljava/lang/String;
      67: astore_1
      68: aload_0
      69: ldc           #28                 // String 127.0.0.1
      71: aload_1
      72: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          83
      78: ldc           #29                 // String localhost
      80: goto          84
      83: aload_1
      84: invokespecial #30                 // Method toIPv6URLFormat:(Ljava/lang/String;)Ljava/lang/String;
      87: astore_3
      88: aload_0
      89: getfield      #6                  // Field webServiceHostLock:Ljava/lang/Object;
      92: dup
      93: astore        4
      95: monitorenter
      96: aload_2
      97: ifnull        106
     100: aload_2
     101: invokeinterface #31,  1           // InterfaceMethod org/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler.onBeforeUpdate:()V
     106: aload_0
     107: aload_3
     108: putfield      #4                  // Field webServiceHost:Ljava/lang/String;
     111: aload         4
     113: monitorexit
     114: goto          125
     117: astore        5
     119: aload         4
     121: monitorexit
     122: aload         5
     124: athrow
     125: return
    Exception table:
       from    to  target type
          96   114   117   any
         117   122   117   any

  private java.lang.String toIPv6URLFormat(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_0
       3: istore_3
       4: aload_1
       5: ldc           #32                 // String [
       7: invokevirtual #33                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ifeq          36
      13: aload_1
      14: ldc           #34                 // String ]
      16: invokevirtual #35                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      19: ifeq          36
      22: iconst_1
      23: istore_3
      24: aload_1
      25: iconst_1
      26: aload_1
      27: invokevirtual #19                 // Method java/lang/String.length:()I
      30: iconst_1
      31: isub
      32: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      35: astore_2
      36: aload_2
      37: invokestatic  #37                 // Method org/jboss/ws/common/utils/AddressUtils.isValidAddress:(Ljava/lang/String;)Z
      40: ifne          53
      43: getstatic     #38                 // Field org/jboss/ws/common/Messages.MESSAGES:Lorg/jboss/ws/common/Messages;
      46: aload_2
      47: invokeinterface #39,  2           // InterfaceMethod org/jboss/ws/common/Messages.invalidAddressProvided:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      52: athrow
      53: iload_3
      54: ifeq          59
      57: aload_1
      58: areturn
      59: aload_1
      60: invokestatic  #40                 // Method org/jboss/ws/common/utils/AddressUtils.isValidIPv6Address:(Ljava/lang/String;)Z
      63: ifeq          93
      66: new           #41                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #32                 // String [
      75: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #34                 // String ]
      84: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: goto          94
      93: aload_1
      94: areturn

  public void setWebServicePort(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #45                 // Method setWebServicePort:(ILorg/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler;)V
       6: return

  protected void setWebServicePort(int, org.jboss.ws.common.management.AbstractServerConfig$UpdateCallbackHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field webServicePortLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_2
       8: ifnull        17
      11: aload_2
      12: invokeinterface #31,  1           // InterfaceMethod org/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler.onBeforeUpdate:()V
      17: aload_0
      18: iload_1
      19: putfield      #46                 // Field webServicePort:I
      22: aload_3
      23: monitorexit
      24: goto          34
      27: astore        4
      29: aload_3
      30: monitorexit
      31: aload         4
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    31    27   any

  public void setWebServiceSecurePort(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #47                 // Method setWebServiceSecurePort:(ILorg/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler;)V
       6: return

  protected void setWebServiceSecurePort(int, org.jboss.ws.common.management.AbstractServerConfig$UpdateCallbackHandler);
    Code:
       0: aload_0
       1: getfield      #8                  // Field webServiceSecurePortLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_2
       8: ifnull        17
      11: aload_2
      12: invokeinterface #31,  1           // InterfaceMethod org/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler.onBeforeUpdate:()V
      17: aload_0
      18: iload_1
      19: putfield      #48                 // Field webServiceSecurePort:I
      22: aload_3
      23: monitorexit
      24: goto          34
      27: astore        4
      29: aload_3
      30: monitorexit
      31: aload         4
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    31    27   any

  public boolean isModifySOAPAddress();
    Code:
       0: aload_0
       1: getfield      #49                 // Field modifySOAPAddress:Z
       4: ireturn

  public void setModifySOAPAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #49                 // Field modifySOAPAddress:Z
       5: return

  public boolean isStatisticsEnabled();
    Code:
       0: aload_0
       1: getfield      #50                 // Field statisticsEnabled:Z
       4: ireturn

  public void setStatisticsEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field statisticsEnabled:Z
       5: return

  protected void setModifySOAPAddress(boolean, org.jboss.ws.common.management.AbstractServerConfig$UpdateCallbackHandler);
    Code:
       0: aload_0
       1: getfield      #9                  // Field modifySOAPAddressLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_2
       8: ifnull        17
      11: aload_2
      12: invokeinterface #31,  1           // InterfaceMethod org/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler.onBeforeUpdate:()V
      17: aload_0
      18: iload_1
      19: putfield      #49                 // Field modifySOAPAddress:Z
      22: aload_3
      23: monitorexit
      24: goto          34
      27: astore        4
      29: aload_3
      30: monitorexit
      31: aload         4
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    31    27   any

  public int getWebServicePort();
    Code:
       0: aload_0
       1: getfield      #7                  // Field webServicePortLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #46                 // Field webServicePort:I
      11: ifgt          23
      14: aload_0
      15: aload_0
      16: iconst_0
      17: invokespecial #51                 // Method getConnectorPort:(Z)I
      20: putfield      #46                 // Field webServicePort:I
      23: aload_0
      24: getfield      #46                 // Field webServicePort:I
      27: istore_2
      28: iload_2
      29: ifgt          57
      32: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      35: invokeinterface #25,  1           // InterfaceMethod org/jboss/ws/common/Loggers.isDebugEnabled:()Z
      40: ifeq          53
      43: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      46: ldc           #52                 // String 8080
      48: invokeinterface #53,  2           // InterfaceMethod org/jboss/ws/common/Loggers.unableToCalculateWebServicesPort:(Ljava/lang/String;)V
      53: sipush        8080
      56: istore_2
      57: iload_2
      58: aload_1
      59: monitorexit
      60: ireturn
      61: astore_3
      62: aload_1
      63: monitorexit
      64: aload_3
      65: athrow
    Exception table:
       from    to  target type
           7    60    61   any
          61    64    61   any

  public int getWebServiceSecurePort();
    Code:
       0: aload_0
       1: getfield      #8                  // Field webServiceSecurePortLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #48                 // Field webServiceSecurePort:I
      11: ifgt          38
      14: aload_0
      15: iconst_1
      16: invokespecial #51                 // Method getConnectorPort:(Z)I
      19: istore_2
      20: iload_2
      21: ifle          38
      24: iload_2
      25: aload_0
      26: iconst_0
      27: invokespecial #51                 // Method getConnectorPort:(Z)I
      30: if_icmpeq     38
      33: aload_0
      34: iload_2
      35: putfield      #48                 // Field webServiceSecurePort:I
      38: aload_0
      39: getfield      #48                 // Field webServiceSecurePort:I
      42: istore_2
      43: iload_2
      44: ifgt          72
      47: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      50: invokeinterface #25,  1           // InterfaceMethod org/jboss/ws/common/Loggers.isDebugEnabled:()Z
      55: ifeq          68
      58: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      61: ldc           #54                 // String 8443
      63: invokeinterface #55,  2           // InterfaceMethod org/jboss/ws/common/Loggers.unableToCalculateWebServicesSecurePort:(Ljava/lang/String;)V
      68: sipush        8443
      71: istore_2
      72: iload_2
      73: aload_1
      74: monitorexit
      75: ireturn
      76: astore_3
      77: aload_1
      78: monitorexit
      79: aload_3
      80: athrow
    Exception table:
       from    to  target type
           7    75    76   any
          76    79    76   any

  public java.lang.String getWebServicePathRewriteRule();
    Code:
       0: aload_0
       1: getfield      #56                 // Field webServicePathRewriteRule:Ljava/lang/String;
       4: areturn

  public void setWebServicePathRewriteRule(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #57                 // Method setWebServicePathRewriteRule:(Ljava/lang/String;Lorg/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler;)V
       6: return

  public void setWebServicePathRewriteRule(java.lang.String, org.jboss.ws.common.management.AbstractServerConfig$UpdateCallbackHandler);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: invokespecial #58                 // Method setStackConfig:()V
       8: aload_0
       9: getfield      #59                 // Field stackConfig:Lorg/jboss/wsf/spi/management/StackConfig;
      12: aload_1
      13: invokeinterface #60,  2           // InterfaceMethod org/jboss/wsf/spi/management/StackConfig.validatePathRewriteRule:(Ljava/lang/String;)V
      18: aload_0
      19: getfield      #10                 // Field webServicePathRewriteRuleLock:Ljava/lang/Object;
      22: dup
      23: astore_3
      24: monitorenter
      25: aload_2
      26: ifnull        35
      29: aload_2
      30: invokeinterface #31,  1           // InterfaceMethod org/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler.onBeforeUpdate:()V
      35: aload_0
      36: aload_1
      37: putfield      #56                 // Field webServicePathRewriteRule:Ljava/lang/String;
      40: aload_3
      41: monitorexit
      42: goto          52
      45: astore        4
      47: aload_3
      48: monitorexit
      49: aload         4
      51: athrow
      52: return
    Exception table:
       from    to  target type
          25    42    45   any
          45    49    45   any

  public java.lang.String getWebServiceUriScheme();
    Code:
       0: aload_0
       1: getfield      #61                 // Field webServiceUriScheme:Ljava/lang/String;
       4: areturn

  public void setWebServiceUriScheme(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #62                 // Method setWebServiceUriScheme:(Ljava/lang/String;Lorg/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler;)V
       6: return

  public void setWebServiceUriScheme(java.lang.String, org.jboss.ws.common.management.AbstractServerConfig$UpdateCallbackHandler);
    Code:
       0: aload_0
       1: getfield      #11                 // Field webServiceUriSchemeLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_2
       8: ifnull        17
      11: aload_2
      12: invokeinterface #31,  1           // InterfaceMethod org/jboss/ws/common/management/AbstractServerConfig$UpdateCallbackHandler.onBeforeUpdate:()V
      17: aload_0
      18: aload_1
      19: putfield      #61                 // Field webServiceUriScheme:Ljava/lang/String;
      22: aload_3
      23: monitorexit
      24: goto          34
      27: astore        4
      29: aload_3
      30: monitorexit
      31: aload         4
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    31    27   any

  private int getConnectorPort(boolean);
    Code:
       0: invokestatic  #63                 // Method org/jboss/wsf/spi/classloading/ClassLoaderProvider.getDefaultProvider:()Lorg/jboss/wsf/spi/classloading/ClassLoaderProvider;
       3: invokevirtual #64                 // Method org/jboss/wsf/spi/classloading/ClassLoaderProvider.getServerIntegrationClassLoader:()Ljava/lang/ClassLoader;
       6: astore_2
       7: iconst_0
       8: istore_3
       9: invokestatic  #65                 // Method org/jboss/wsf/spi/SPIProvider.getInstance:()Lorg/jboss/wsf/spi/SPIProvider;
      12: ldc           #66                 // class org/jboss/wsf/spi/management/WebServerInfoFactory
      14: aload_2
      15: invokevirtual #67                 // Method org/jboss/wsf/spi/SPIProvider.getSPI:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;
      18: checkcast     #66                 // class org/jboss/wsf/spi/management/WebServerInfoFactory
      21: invokevirtual #68                 // Method org/jboss/wsf/spi/management/WebServerInfoFactory.newWebServerInfo:()Lorg/jboss/wsf/spi/management/WebServerInfo;
      24: astore        4
      26: aload         4
      28: ldc           #69                 // String HTTP/1.1
      30: iload_1
      31: invokeinterface #70,  3           // InterfaceMethod org/jboss/wsf/spi/management/WebServerInfo.getPort:(Ljava/lang/String;Z)I
      36: istore_3
      37: goto          50
      40: astore        4
      42: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
      45: invokeinterface #72,  1           // InterfaceMethod org/jboss/ws/common/Loggers.couldNotGetPortFromConfiguredHTTPConnector:()V
      50: iload_3
      51: ireturn
    Exception table:
       from    to  target type
           9    37    40   Class org/jboss/wsf/spi/WSFException

  public void create() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #58                 // Method setStackConfig:()V
       4: getstatic     #20                 // Field org/jboss/ws/common/Loggers.MANAGEMENT_LOGGER:Lorg/jboss/ws/common/Loggers;
       7: aload_0
       8: invokevirtual #73                 // Method getImplementationTitle:()Ljava/lang/String;
      11: aload_0
      12: invokevirtual #74                 // Method getImplementationVersion:()Ljava/lang/String;
      15: invokeinterface #75,  3           // InterfaceMethod org/jboss/ws/common/Loggers.startingWSServerConfig:(Ljava/lang/String;Ljava/lang/String;)V
      20: aload_0
      21: invokevirtual #76                 // Method getMbeanServer:()Ljavax/management/MBeanServer;
      24: astore_1
      25: aload_1
      26: ifnull        40
      29: aload_1
      30: aload_0
      31: getstatic     #77                 // Field org/jboss/ws/common/management/AbstractServerConfigMBean.OBJECT_NAME:Ljavax/management/ObjectName;
      34: invokeinterface #78,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      39: pop
      40: aload_0
      41: getfield      #14                 // Field clientConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
      44: invokeinterface #79,  1           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.reload:()V
      49: aload_0
      50: getfield      #15                 // Field endpointConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
      53: invokeinterface #79,  1           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.reload:()V
      58: invokestatic  #80                 // Method org/jboss/wsf/spi/classloading/ClassLoaderProvider.isSet:()Z
      61: ifeq          68
      64: aload_0
      65: putstatic     #81                 // Field serverConfig:Lorg/jboss/wsf/spi/management/ServerConfig;
      68: return

  private void setStackConfig();
    Code:
       0: aload_0
       1: getfield      #59                 // Field stackConfig:Lorg/jboss/wsf/spi/management/StackConfig;
       4: ifnonnull     54
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #59                 // Field stackConfig:Lorg/jboss/wsf/spi/management/StackConfig;
      15: ifnonnull     44
      18: invokestatic  #63                 // Method org/jboss/wsf/spi/classloading/ClassLoaderProvider.getDefaultProvider:()Lorg/jboss/wsf/spi/classloading/ClassLoaderProvider;
      21: invokevirtual #64                 // Method org/jboss/wsf/spi/classloading/ClassLoaderProvider.getServerIntegrationClassLoader:()Ljava/lang/ClassLoader;
      24: astore_2
      25: aload_0
      26: invokestatic  #65                 // Method org/jboss/wsf/spi/SPIProvider.getInstance:()Lorg/jboss/wsf/spi/SPIProvider;
      29: ldc           #82                 // class org/jboss/wsf/spi/management/StackConfigFactory
      31: aload_2
      32: invokevirtual #67                 // Method org/jboss/wsf/spi/SPIProvider.getSPI:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;
      35: checkcast     #82                 // class org/jboss/wsf/spi/management/StackConfigFactory
      38: invokevirtual #83                 // Method org/jboss/wsf/spi/management/StackConfigFactory.getStackConfig:()Lorg/jboss/wsf/spi/management/StackConfig;
      41: putfield      #59                 // Field stackConfig:Lorg/jboss/wsf/spi/management/StackConfig;
      44: aload_1
      45: monitorexit
      46: goto          54
      49: astore_3
      50: aload_1
      51: monitorexit
      52: aload_3
      53: athrow
      54: return
    Exception table:
       from    to  target type
          11    46    49   any
          49    52    49   any

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getMbeanServer:()Ljavax/management/MBeanServer;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: getstatic     #77                 // Field org/jboss/ws/common/management/AbstractServerConfigMBean.OBJECT_NAME:Ljavax/management/ObjectName;
      13: invokeinterface #84,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      18: aload_0
      19: getfield      #14                 // Field clientConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
      22: invokeinterface #85,  1           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.unload:()V
      27: aload_0
      28: getfield      #15                 // Field endpointConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
      31: invokeinterface #85,  1           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.unload:()V
      36: return

  public static org.jboss.wsf.spi.management.ServerConfig getServerIntegrationServerConfig();
    Code:
       0: invokestatic  #80                 // Method org/jboss/wsf/spi/classloading/ClassLoaderProvider.isSet:()Z
       3: ifne          8
       6: aconst_null
       7: areturn
       8: getstatic     #86                 // Field LOOKUP_SERVER_INTEGRATION_SERVER_CONFIG:Ljava/lang/RuntimePermission;
      11: invokestatic  #87                 // Method checkPermission:(Ljava/security/Permission;)V
      14: getstatic     #81                 // Field serverConfig:Lorg/jboss/wsf/spi/management/ServerConfig;
      17: areturn

  public java.lang.String getImplementationTitle();
    Code:
       0: aload_0
       1: getfield      #59                 // Field stackConfig:Lorg/jboss/wsf/spi/management/StackConfig;
       4: invokeinterface #88,  1           // InterfaceMethod org/jboss/wsf/spi/management/StackConfig.getImplementationTitle:()Ljava/lang/String;
       9: areturn

  public java.lang.String getImplementationVersion();
    Code:
       0: aload_0
       1: getfield      #59                 // Field stackConfig:Lorg/jboss/wsf/spi/management/StackConfig;
       4: invokeinterface #89,  1           // InterfaceMethod org/jboss/wsf/spi/management/StackConfig.getImplementationVersion:()Ljava/lang/String;
       9: areturn

  public void registerClientConfig(org.jboss.wsf.spi.metadata.config.ClientConfig);
    Code:
       0: aload_0
       1: getfield      #14                 // Field clientConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.register:(Lorg/jboss/wsf/spi/metadata/config/AbstractCommonConfig;)V
      10: return

  public void unregisterClientConfig(org.jboss.wsf.spi.metadata.config.ClientConfig);
    Code:
       0: aload_0
       1: getfield      #14                 // Field clientConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: aload_1
       5: invokeinterface #91,  2           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.unregister:(Lorg/jboss/wsf/spi/metadata/config/AbstractCommonConfig;)V
      10: return

  public void reloadClientConfigs();
    Code:
       0: aload_0
       1: getfield      #14                 // Field clientConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: invokeinterface #79,  1           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.reload:()V
       9: return

  public org.jboss.wsf.spi.metadata.config.ClientConfig getClientConfig(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field clientConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: aload_1
       5: invokeinterface #92,  2           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.getConfig:(Ljava/lang/String;)Lorg/jboss/wsf/spi/metadata/config/AbstractCommonConfig;
      10: checkcast     #93                 // class org/jboss/wsf/spi/metadata/config/ClientConfig
      13: areturn

  public void registerEndpointConfig(org.jboss.wsf.spi.metadata.config.EndpointConfig);
    Code:
       0: aload_0
       1: getfield      #15                 // Field endpointConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.register:(Lorg/jboss/wsf/spi/metadata/config/AbstractCommonConfig;)V
      10: return

  public void unregisterEndpointConfig(org.jboss.wsf.spi.metadata.config.EndpointConfig);
    Code:
       0: aload_0
       1: getfield      #15                 // Field endpointConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: aload_1
       5: invokeinterface #91,  2           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.unregister:(Lorg/jboss/wsf/spi/metadata/config/AbstractCommonConfig;)V
      10: return

  public void reloadEndpointConfigs();
    Code:
       0: aload_0
       1: getfield      #15                 // Field endpointConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: invokeinterface #79,  1           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.reload:()V
       9: return

  public org.jboss.wsf.spi.metadata.config.EndpointConfig getEndpointConfig(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field endpointConfigStore:Lorg/jboss/wsf/spi/management/CommonConfigStore;
       4: aload_1
       5: invokeinterface #92,  2           // InterfaceMethod org/jboss/wsf/spi/management/CommonConfigStore.getConfig:(Ljava/lang/String;)Lorg/jboss/wsf/spi/metadata/config/AbstractCommonConfig;
      10: checkcast     #94                 // class org/jboss/wsf/spi/metadata/config/EndpointConfig
      13: areturn

  public java.lang.Integer getVirtualHostPort(java.lang.String, boolean);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getHostAlias(java.lang.String);
    Code:
       0: ldc           #29                 // String localhost
       2: areturn

  private static void checkPermission(java.security.Permission);
    Code:
       0: invokestatic  #95                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        12
       8: aload_0
       9: invokestatic  #96                 // Method java/security/AccessController.checkPermission:(Ljava/security/Permission;)V
      12: return

  static {};
    Code:
       0: new           #97                 // class java/lang/RuntimePermission
       3: dup
       4: ldc           #98                 // String org.jboss.ws.LOOKUP_SERVER_INTEGRATION_SERVER_CONFIG
       6: invokespecial #99                 // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
       9: putstatic     #86                 // Field LOOKUP_SERVER_INTEGRATION_SERVER_CONFIG:Ljava/lang/RuntimePermission;
      12: new           #100                // class org/jboss/ws/common/management/AbstractServerConfig$1
      15: dup
      16: invokespecial #101                // Method org/jboss/ws/common/management/AbstractServerConfig$1."<init>":()V
      19: putstatic     #102                // Field GET_SERVER_INTEGRATION_SERVER_CONFIG:Ljava/security/PrivilegedAction;
      22: return
}
