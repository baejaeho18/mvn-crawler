Compiled from "ResourceMethodFinder.java"
public final class org.jboss.ws.common.injection.finders.ResourceMethodFinder extends org.jboss.ws.common.reflection.AnnotatedMethodFinder<javax.annotation.Resource> {
  private final java.lang.Class<?> accept;

  private final boolean include;

  public org.jboss.ws.common.injection.finders.ResourceMethodFinder(java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: ldc           #1                  // class javax/annotation/Resource
       3: invokespecial #2                  // Method org/jboss/ws/common/reflection/AnnotatedMethodFinder."<init>":(Ljava/lang/Class;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field accept:Ljava/lang/Class;
      11: aload_0
      12: iload_2
      13: putfield      #4                  // Field include:Z
      16: return

  public void validate(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/jboss/ws/common/reflection/AnnotatedMethodFinder.validate:(Ljava/lang/reflect/AccessibleObject;)V
       5: aload_0
       6: invokevirtual #6                  // Method getAnnotation:()Ljava/lang/Class;
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokestatic  #7                  // Method org/jboss/ws/common/injection/finders/ReflectionUtils.assertVoidReturnType:(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
      15: aload_1
      16: aload_2
      17: invokestatic  #8                  // Method org/jboss/ws/common/injection/finders/ReflectionUtils.assertOneParameter:(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
      20: aload_1
      21: aload_2
      22: invokestatic  #9                  // Method org/jboss/ws/common/injection/finders/ReflectionUtils.assertNoPrimitiveParameters:(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
      25: aload_1
      26: aload_2
      27: invokestatic  #10                 // Method org/jboss/ws/common/injection/finders/ReflectionUtils.assertValidSetterName:(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
      30: aload_1
      31: aload_2
      32: invokestatic  #11                 // Method org/jboss/ws/common/injection/finders/ReflectionUtils.assertNoCheckedExceptionsAreThrown:(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
      35: aload_1
      36: aload_2
      37: invokestatic  #12                 // Method org/jboss/ws/common/injection/finders/ReflectionUtils.assertNotStatic:(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
      40: return

  public boolean matches(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/jboss/ws/common/reflection/AnnotatedMethodFinder.matches:(Ljava/lang/reflect/AccessibleObject;)Z
       5: istore_2
       6: iload_2
       7: ifeq          66
      10: aload_0
      11: getfield      #3                  // Field accept:Ljava/lang/Class;
      14: ifnull        66
      17: aload_1
      18: invokevirtual #14                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      21: arraylength
      22: iconst_1
      23: if_icmpne     66
      26: aload_1
      27: invokevirtual #14                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      30: iconst_0
      31: aaload
      32: astore_3
      33: aload_0
      34: getfield      #3                  // Field accept:Ljava/lang/Class;
      37: aload_3
      38: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: istore        4
      43: aload_0
      44: getfield      #4                  // Field include:Z
      47: ifeq          55
      50: iload         4
      52: goto          65
      55: iload         4
      57: ifne          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn
      66: iload_2
      67: ireturn

  public boolean matches(java.lang.reflect.AccessibleObject);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class java/lang/reflect/Method
       5: invokevirtual #17                 // Method matches:(Ljava/lang/reflect/Method;)Z
       8: ireturn

  public void validate(java.lang.reflect.AccessibleObject);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class java/lang/reflect/Method
       5: invokevirtual #18                 // Method validate:(Ljava/lang/reflect/Method;)V
       8: return
}
