Compiled from "UndertowHeaderMap.java"
public class org.jboss.ws.undertow_httpspi.UndertowHeaderMap implements java.util.Map<java.lang.String, java.util.List<java.lang.String>> {
  private final io.undertow.util.HeaderMap headerMap;

  public org.jboss.ws.undertow_httpspi.UndertowHeaderMap(io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: invokevirtual #3                  // Method io/undertow/util/HeaderMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: invokevirtual #3                  // Method io/undertow/util/HeaderMap.size:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: aload_1
       5: invokevirtual #4                  // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokevirtual #5                  // Method io/undertow/util/HeaderMap.contains:(Ljava/lang/String;)Z
      11: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: invokevirtual #6                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          40
      17: aload_2
      18: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #9                  // class io/undertow/util/HeaderValues
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokevirtual #10                 // Method io/undertow/util/HeaderValues.contains:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: goto          8
      40: iconst_0
      41: ireturn

  public java.util.List<java.lang.String> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: aload_1
       5: invokevirtual #4                  // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokevirtual #11                 // Method io/undertow/util/HeaderMap.get:(Ljava/lang/String;)Lio/undertow/util/HeaderValues;
      11: astore_2
      12: new           #12                 // class java/util/ArrayList
      15: dup
      16: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      19: astore_3
      20: aload_2
      21: ifnull        67
      24: aload_2
      25: invokevirtual #14                 // Method io/undertow/util/HeaderValues.toArray:()[Ljava/lang/String;
      28: astore        4
      30: aload         4
      32: arraylength
      33: istore        5
      35: iconst_0
      36: istore        6
      38: iload         6
      40: iload         5
      42: if_icmpge     67
      45: aload         4
      47: iload         6
      49: aaload
      50: astore        7
      52: aload_3
      53: aload         7
      55: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: iinc          6, 1
      64: goto          38
      67: aload_3
      68: areturn

  public java.util.List<java.lang.String> put(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      12: ifeq          17
      15: aconst_null
      16: astore_3
      17: aload_0
      18: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
      21: new           #18                 // class io/undertow/util/HttpString
      24: dup
      25: aload_1
      26: invokespecial #19                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      29: aload_2
      30: invokevirtual #20                 // Method io/undertow/util/HeaderMap.addAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
      33: pop
      34: aload_3
      35: areturn

  public java.util.List<java.lang.String> remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      12: ifeq          17
      15: aconst_null
      16: astore_2
      17: aload_0
      18: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
      21: aload_1
      22: invokevirtual #4                  // Method java/lang/Object.toString:()Ljava/lang/String;
      25: invokevirtual #21                 // Method io/undertow/util/HeaderMap.remove:(Ljava/lang/String;)Ljava/util/Collection;
      28: pop
      29: aload_2
      30: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.List<java.lang.String>>);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          60
      21: aload_2
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #24                 // class java/lang/String
      30: astore_3
      31: aload_0
      32: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
      35: new           #18                 // class io/undertow/util/HttpString
      38: dup
      39: aload_3
      40: invokespecial #19                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      43: aload_1
      44: aload_3
      45: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #26                 // class java/util/Collection
      53: invokevirtual #27                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
      56: pop
      57: goto          12
      60: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: invokevirtual #28                 // Method io/undertow/util/HeaderMap.clear:()Lio/undertow/util/HeaderMap;
       7: pop
       8: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: new           #29                 // class java/util/HashSet
       3: dup
       4: invokespecial #30                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
      12: invokevirtual #31                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          52
      25: aload_2
      26: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #9                  // class io/undertow/util/HeaderValues
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokevirtual #32                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      40: invokevirtual #33                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      43: invokeinterface #34,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      48: pop
      49: goto          16
      52: aload_1
      53: areturn

  public java.util.Collection<java.util.List<java.lang.String>> values();
    Code:
       0: new           #12                 // class java/util/ArrayList
       3: dup
       4: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
      12: invokevirtual #31                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          97
      25: aload_2
      26: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #9                  // class io/undertow/util/HeaderValues
      34: astore_3
      35: new           #12                 // class java/util/ArrayList
      38: dup
      39: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      42: astore        4
      44: aload_3
      45: invokevirtual #35                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
      48: astore        5
      50: aload         5
      52: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          85
      60: aload         5
      62: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #24                 // class java/lang/String
      70: astore        6
      72: aload         4
      74: aload         6
      76: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          50
      85: aload_1
      86: aload         4
      88: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      93: pop
      94: goto          16
      97: aload_1
      98: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    Code:
       0: new           #29                 // class java/util/HashSet
       3: dup
       4: invokespecial #30                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
      12: invokevirtual #31                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          116
      25: aload_2
      26: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #9                  // class io/undertow/util/HeaderValues
      34: astore_3
      35: aload_3
      36: invokevirtual #32                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      39: invokevirtual #33                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      42: astore        4
      44: new           #12                 // class java/util/ArrayList
      47: dup
      48: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      51: astore        5
      53: aload_3
      54: invokevirtual #35                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
      57: astore        6
      59: aload         6
      61: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          94
      69: aload         6
      71: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #24                 // class java/lang/String
      79: astore        7
      81: aload         5
      83: aload         7
      85: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      90: pop
      91: goto          59
      94: aload_1
      95: new           #36                 // class org/jboss/ws/undertow_httpspi/UndertowHeaderMap$1
      98: dup
      99: aload_0
     100: aload         4
     102: aload         5
     104: invokespecial #37                 // Method org/jboss/ws/undertow_httpspi/UndertowHeaderMap$1."<init>":(Lorg/jboss/ws/undertow_httpspi/UndertowHeaderMap;Ljava/lang/String;Ljava/util/List;)V
     107: invokeinterface #34,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          16
     116: aload_1
     117: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class java/lang/String
       5: aload_2
       6: checkcast     #39                 // class java/util/List
       9: invokevirtual #40                 // Method put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  static io.undertow.util.HeaderMap access$000(org.jboss.ws.undertow_httpspi.UndertowHeaderMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headerMap:Lio/undertow/util/HeaderMap;
       4: areturn
}
