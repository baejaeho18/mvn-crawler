Compiled from "AbstractSaslImpl.java"
abstract class org.jboss.sasl.digest.AbstractSaslImpl {
  private static final org.jboss.logging.Logger log;

  protected boolean completed;

  protected boolean privacy;

  protected boolean integrity;

  protected byte[] qop;

  protected byte allQop;

  protected byte[] strength;

  protected int sendMaxBufSize;

  protected int recvMaxBufSize;

  protected int rawSendSize;

  protected java.lang.String myClassName;

  protected static final java.lang.String MAX_SEND_BUF;

  protected static final byte NO_PROTECTION;

  protected static final byte INTEGRITY_ONLY_PROTECTION;

  protected static final byte PRIVACY_PROTECTION;

  protected static final byte LOW_STRENGTH;

  protected static final byte MEDIUM_STRENGTH;

  protected static final byte HIGH_STRENGTH;

  private static final byte[] DEFAULT_QOP;

  private static final java.lang.String[] QOP_TOKENS;

  private static final byte[] QOP_MASKS;

  private static final byte[] DEFAULT_STRENGTH;

  private static final java.lang.String[] STRENGTH_TOKENS;

  private static final byte[] STRENGTH_MASKS;

  protected org.jboss.sasl.digest.AbstractSaslImpl(java.util.Map, java.lang.String) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field completed:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field privacy:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field integrity:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field sendMaxBufSize:I
      24: aload_0
      25: ldc           #6                  // int 65536
      27: putfield      #7                  // Field recvMaxBufSize:I
      30: aload_0
      31: aload_2
      32: putfield      #8                  // Field myClassName:Ljava/lang/String;
      35: aload_1
      36: ifnull        400
      39: aload_0
      40: aload_1
      41: ldc           #9                  // String javax.security.sasl.qop
      43: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #11                 // class java/lang/String
      51: dup
      52: astore_3
      53: invokestatic  #12                 // Method parseQop:(Ljava/lang/String;)[B
      56: putfield      #13                 // Field qop:[B
      59: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
      62: ldc           #15                 // String Preferred qop property: %s
      64: aload_3
      65: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      68: aload_0
      69: aload_0
      70: getfield      #13                 // Field qop:[B
      73: invokestatic  #17                 // Method combineMasks:([B)B
      76: putfield      #18                 // Field allQop:B
      79: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
      82: invokevirtual #19                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      85: ifeq          183
      88: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
      91: ldc           #20                 // String Preferred qop mask: %d
      93: aload_0
      94: getfield      #18                 // Field allQop:B
      97: invokestatic  #21                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     100: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     103: aload_0
     104: getfield      #13                 // Field qop:[B
     107: arraylength
     108: ifle          183
     111: new           #22                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     118: astore        4
     120: aload_0
     121: getfield      #13                 // Field qop:[B
     124: astore        5
     126: aload         5
     128: arraylength
     129: istore        6
     131: iconst_0
     132: istore        7
     134: iload         7
     136: iload         6
     138: if_icmpge     173
     141: aload         5
     143: iload         7
     145: baload
     146: istore        8
     148: aload         4
     150: iload         8
     152: invokestatic  #24                 // Method java/lang/Byte.toString:(B)Ljava/lang/String;
     155: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: pop
     159: aload         4
     161: bipush        32
     163: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     166: pop
     167: iinc          7, 1
     170: goto          134
     173: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
     176: ldc           #27                 // String Preferred QOPs : %s
     178: aload         4
     180: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     183: aload_0
     184: aload_1
     185: ldc           #28                 // String javax.security.sasl.strength
     187: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     192: checkcast     #11                 // class java/lang/String
     195: dup
     196: astore_3
     197: invokestatic  #29                 // Method parseStrength:(Ljava/lang/String;)[B
     200: putfield      #30                 // Field strength:[B
     203: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
     206: ldc           #31                 // String Preferred strength: %s
     208: aload_3
     209: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     212: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
     215: invokevirtual #19                 // Method org/jboss/logging/Logger.isTraceEnabled:()Z
     218: ifeq          301
     221: aload_0
     222: getfield      #30                 // Field strength:[B
     225: arraylength
     226: ifle          301
     229: new           #22                 // class java/lang/StringBuilder
     232: dup
     233: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     236: astore        4
     238: aload_0
     239: getfield      #30                 // Field strength:[B
     242: astore        5
     244: aload         5
     246: arraylength
     247: istore        6
     249: iconst_0
     250: istore        7
     252: iload         7
     254: iload         6
     256: if_icmpge     291
     259: aload         5
     261: iload         7
     263: baload
     264: istore        8
     266: aload         4
     268: iload         8
     270: invokestatic  #24                 // Method java/lang/Byte.toString:(B)Ljava/lang/String;
     273: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: pop
     277: aload         4
     279: bipush        32
     281: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     284: pop
     285: iinc          7, 1
     288: goto          252
     291: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
     294: ldc           #32                 // String Cipher strengths: %s
     296: aload         4
     298: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     301: aload_1
     302: ldc           #33                 // String javax.security.sasl.maxbuffer
     304: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     309: checkcast     #11                 // class java/lang/String
     312: astore_3
     313: aload_3
     314: ifnull        349
     317: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
     320: ldc           #34                 // String Max receive buffer size: %s
     322: aload_3
     323: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     326: aload_0
     327: aload_3
     328: invokestatic  #35                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     331: putfield      #7                  // Field recvMaxBufSize:I
     334: goto          349
     337: astore        4
     339: new           #37                 // class javax/security/sasl/SaslException
     342: dup
     343: ldc           #38                 // String Property must be string representation of integer: javax.security.sasl.maxbuffer
     345: invokespecial #39                 // Method javax/security/sasl/SaslException."<init>":(Ljava/lang/String;)V
     348: athrow
     349: aload_1
     350: ldc           #40                 // String javax.security.sasl.sendmaxbuffer
     352: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     357: checkcast     #11                 // class java/lang/String
     360: astore_3
     361: aload_3
     362: ifnull        397
     365: getstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
     368: ldc           #41                 // String Max send buffer size: %s
     370: aload_3
     371: invokevirtual #16                 // Method org/jboss/logging/Logger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     374: aload_0
     375: aload_3
     376: invokestatic  #35                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     379: putfield      #5                  // Field sendMaxBufSize:I
     382: goto          397
     385: astore        4
     387: new           #37                 // class javax/security/sasl/SaslException
     390: dup
     391: ldc           #42                 // String Property must be string representation of integer: javax.security.sasl.sendmaxbuffer
     393: invokespecial #39                 // Method javax/security/sasl/SaslException."<init>":(Ljava/lang/String;)V
     396: athrow
     397: goto          419
     400: aload_0
     401: getstatic     #43                 // Field DEFAULT_QOP:[B
     404: putfield      #13                 // Field qop:[B
     407: aload_0
     408: iconst_1
     409: putfield      #18                 // Field allQop:B
     412: aload_0
     413: getstatic     #44                 // Field STRENGTH_MASKS:[B
     416: putfield      #30                 // Field strength:[B
     419: return
    Exception table:
       from    to  target type
         317   334   337   Class java/lang/NumberFormatException
         365   382   385   Class java/lang/NumberFormatException

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field completed:Z
       4: ireturn

  public java.lang.Object getNegotiatedProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field completed:Z
       4: ifne          17
       7: new           #45                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #46                 // String SASL authentication not completed
      13: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ldc           #9                  // String javax.security.sasl.qop
      20: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          49
      26: aload_0
      27: getfield      #3                  // Field privacy:Z
      30: ifeq          36
      33: ldc           #49                 // String auth-conf
      35: areturn
      36: aload_0
      37: getfield      #4                  // Field integrity:Z
      40: ifeq          46
      43: ldc           #50                 // String auth-int
      45: areturn
      46: ldc           #51                 // String auth
      48: areturn
      49: aload_1
      50: ldc           #33                 // String javax.security.sasl.maxbuffer
      52: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          66
      58: aload_0
      59: getfield      #7                  // Field recvMaxBufSize:I
      62: invokestatic  #52                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      65: areturn
      66: aload_1
      67: ldc           #53                 // String javax.security.sasl.rawsendsize
      69: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifeq          83
      75: aload_0
      76: getfield      #54                 // Field rawSendSize:I
      79: invokestatic  #52                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      82: areturn
      83: aload_1
      84: ldc           #40                 // String javax.security.sasl.sendmaxbuffer
      86: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      89: ifeq          100
      92: aload_0
      93: getfield      #5                  // Field sendMaxBufSize:I
      96: invokestatic  #52                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      99: areturn
     100: aconst_null
     101: areturn

  protected static final byte combineMasks(byte[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: arraylength
       7: if_icmpge     23
      10: iload_1
      11: aload_0
      12: iload_2
      13: baload
      14: ior
      15: i2b
      16: istore_1
      17: iinc          2, 1
      20: goto          4
      23: iload_1
      24: ireturn

  protected static final byte findPreferredMask(byte, byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     26
       8: aload_1
       9: iload_2
      10: baload
      11: iload_0
      12: iand
      13: ifeq          20
      16: aload_1
      17: iload_2
      18: baload
      19: ireturn
      20: iinc          2, 1
      23: goto          2
      26: iconst_0
      27: ireturn

  private static final byte[] parseQop(java.lang.String) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: invokestatic  #55                 // Method parseQop:(Ljava/lang/String;[Ljava/lang/String;Z)[B
       6: areturn

  protected static final byte[] parseQop(java.lang.String, java.lang.String[], boolean) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #43                 // Field DEFAULT_QOP:[B
       7: areturn
       8: ldc           #9                  // String javax.security.sasl.qop
      10: aload_0
      11: getstatic     #56                 // Field QOP_TOKENS:[Ljava/lang/String;
      14: getstatic     #57                 // Field QOP_MASKS:[B
      17: aload_1
      18: iload_2
      19: invokestatic  #58                 // Method parseProp:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[B[Ljava/lang/String;Z)[B
      22: areturn

  private static final byte[] parseStrength(java.lang.String) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #59                 // Field DEFAULT_STRENGTH:[B
       7: areturn
       8: ldc           #28                 // String javax.security.sasl.strength
      10: aload_0
      11: getstatic     #60                 // Field STRENGTH_TOKENS:[Ljava/lang/String;
      14: getstatic     #44                 // Field STRENGTH_MASKS:[B
      17: aconst_null
      18: iconst_0
      19: invokestatic  #58                 // Method parseProp:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[B[Ljava/lang/String;Z)[B
      22: areturn

  private static final byte[] parseProp(java.lang.String, java.lang.String, java.lang.String[], byte[], java.lang.String[], boolean) throws javax.security.sasl.SaslException;
    Code:
       0: new           #61                 // class java/util/StringTokenizer
       3: dup
       4: aload_1
       5: ldc           #62                 // String , \t\n
       7: invokespecial #63                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: astore        6
      12: aload_2
      13: arraylength
      14: newarray       byte
      16: astore        8
      18: iconst_0
      19: istore        9
      21: aload         6
      23: invokevirtual #64                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      26: ifeq          153
      29: iload         9
      31: aload         8
      33: arraylength
      34: if_icmpge     153
      37: aload         6
      39: invokevirtual #65                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      42: astore        7
      44: iconst_0
      45: istore        10
      47: iconst_0
      48: istore        11
      50: iload         10
      52: ifne          107
      55: iload         11
      57: aload_2
      58: arraylength
      59: if_icmpge     107
      62: aload         7
      64: aload_2
      65: iload         11
      67: aaload
      68: invokevirtual #66                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      71: ifeq          101
      74: iconst_1
      75: istore        10
      77: aload         8
      79: iload         9
      81: iinc          9, 1
      84: aload_3
      85: iload         11
      87: baload
      88: bastore
      89: aload         4
      91: ifnull        101
      94: aload         4
      96: iload         11
      98: aload         7
     100: aastore
     101: iinc          11, 1
     104: goto          50
     107: iload         10
     109: ifne          21
     112: iload         5
     114: ifne          21
     117: new           #37                 // class javax/security/sasl/SaslException
     120: dup
     121: new           #22                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #67                 // String Invalid token in
     130: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_0
     134: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: ldc           #68                 // String :
     139: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_1
     143: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokespecial #39                 // Method javax/security/sasl/SaslException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: iload         9
     155: istore        11
     157: iload         11
     159: aload         8
     161: arraylength
     162: if_icmpge     177
     165: aload         8
     167: iload         11
     169: iconst_0
     170: bastore
     171: iinc          11, 1
     174: goto          157
     177: aload         8
     179: areturn

  protected static final int networkByteOrderToInt(byte[], int, int);
    Code:
       0: iload_2
       1: iconst_4
       2: if_icmple     15
       5: new           #70                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #71                 // String Cannot handle more than 4 bytes
      11: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iconst_0
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpge     50
      26: iload_3
      27: bipush        8
      29: ishl
      30: istore_3
      31: iload_3
      32: aload_0
      33: iload_1
      34: iload         4
      36: iadd
      37: baload
      38: sipush        255
      41: iand
      42: ior
      43: istore_3
      44: iinc          4, 1
      47: goto          20
      50: iload_3
      51: ireturn

  protected static final void intToNetworkByteOrder(int, byte[], int, int);
    Code:
       0: iload_3
       1: iconst_4
       2: if_icmple     15
       5: new           #70                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #71                 // String Cannot handle more than 4 bytes
      11: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iload_3
      16: iconst_1
      17: isub
      18: istore        4
      20: iload         4
      22: iflt          48
      25: aload_1
      26: iload_2
      27: iload         4
      29: iadd
      30: iload_0
      31: sipush        255
      34: iand
      35: i2b
      36: bastore
      37: iload_0
      38: bipush        8
      40: iushr
      41: istore_0
      42: iinc          4, -1
      45: goto          20
      48: return

  static {};
    Code:
       0: ldc           #73                 // String org.jboss.sasl.digest
       2: invokestatic  #74                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
       5: putstatic     #14                 // Field log:Lorg/jboss/logging/Logger;
       8: iconst_1
       9: newarray       byte
      11: dup
      12: iconst_0
      13: iconst_1
      14: bastore
      15: putstatic     #43                 // Field DEFAULT_QOP:[B
      18: iconst_3
      19: anewarray     #11                 // class java/lang/String
      22: dup
      23: iconst_0
      24: ldc           #49                 // String auth-conf
      26: aastore
      27: dup
      28: iconst_1
      29: ldc           #50                 // String auth-int
      31: aastore
      32: dup
      33: iconst_2
      34: ldc           #51                 // String auth
      36: aastore
      37: putstatic     #56                 // Field QOP_TOKENS:[Ljava/lang/String;
      40: iconst_3
      41: newarray       byte
      43: dup
      44: iconst_0
      45: iconst_4
      46: bastore
      47: dup
      48: iconst_1
      49: iconst_2
      50: bastore
      51: dup
      52: iconst_2
      53: iconst_1
      54: bastore
      55: putstatic     #57                 // Field QOP_MASKS:[B
      58: iconst_3
      59: newarray       byte
      61: dup
      62: iconst_0
      63: iconst_4
      64: bastore
      65: dup
      66: iconst_1
      67: iconst_2
      68: bastore
      69: dup
      70: iconst_2
      71: iconst_1
      72: bastore
      73: putstatic     #59                 // Field DEFAULT_STRENGTH:[B
      76: iconst_3
      77: anewarray     #11                 // class java/lang/String
      80: dup
      81: iconst_0
      82: ldc           #75                 // String low
      84: aastore
      85: dup
      86: iconst_1
      87: ldc           #76                 // String medium
      89: aastore
      90: dup
      91: iconst_2
      92: ldc           #77                 // String high
      94: aastore
      95: putstatic     #60                 // Field STRENGTH_TOKENS:[Ljava/lang/String;
      98: iconst_3
      99: newarray       byte
     101: dup
     102: iconst_0
     103: iconst_1
     104: bastore
     105: dup
     106: iconst_1
     107: iconst_2
     108: bastore
     109: dup
     110: iconst_2
     111: iconst_4
     112: bastore
     113: putstatic     #44                 // Field STRENGTH_MASKS:[B
     116: return
}
