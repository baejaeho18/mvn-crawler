Compiled from "AbstractSaslParticipant.java"
public abstract class org.jboss.sasl.util.AbstractSaslParticipant {
  public static final byte[] NO_BYTES;

  private final org.jboss.sasl.util.SaslStateContext context;

  private final java.lang.String mechanismName;

  private final javax.security.auth.callback.CallbackHandler callbackHandler;

  private final java.lang.String protocol;

  private final java.lang.String serverName;

  private org.jboss.sasl.util.SaslState state;

  private org.jboss.sasl.util.SaslWrapper wrapper;

  protected org.jboss.sasl.util.AbstractSaslParticipant(java.lang.String, java.lang.String, java.lang.String, javax.security.auth.callback.CallbackHandler);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/jboss/sasl/util/AbstractSaslParticipant$1
       8: dup
       9: aload_0
      10: invokespecial #4                  // Method org/jboss/sasl/util/AbstractSaslParticipant$1."<init>":(Lorg/jboss/sasl/util/AbstractSaslParticipant;)V
      13: putfield      #5                  // Field context:Lorg/jboss/sasl/util/SaslStateContext;
      16: aload_0
      17: aload         4
      19: putfield      #6                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field mechanismName:Ljava/lang/String;
      27: aload_0
      28: aload_2
      29: putfield      #8                  // Field protocol:Ljava/lang/String;
      32: aload_0
      33: aload_3
      34: putfield      #9                  // Field serverName:Ljava/lang/String;
      37: return

  protected void handleCallbacks(javax.security.auth.callback.Callback...) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method tryHandleCallbacks:([Ljavax/security/auth/callback/Callback;)V
       5: goto          43
       8: astore_2
       9: new           #12                 // class javax/security/sasl/SaslException
      12: dup
      13: new           #13                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #15                 // String Callback handler cannot support callback
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #17                 // Method javax/security/auth/callback/UnsupportedCallbackException.getCallback:()Ljavax/security/auth/callback/Callback;
      29: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: aload_2
      39: invokespecial #21                 // Method javax/security/sasl/SaslException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
      43: return
    Exception table:
       from    to  target type
           0     5     8   Class javax/security/auth/callback/UnsupportedCallbackException

  protected void tryHandleCallbacks(javax.security.auth.callback.Callback...) throws javax.security.sasl.SaslException, javax.security.auth.callback.UnsupportedCallbackException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod javax/security/auth/callback/CallbackHandler.handle:([Ljavax/security/auth/callback/Callback;)V
      10: goto          28
      13: astore_2
      14: aload_2
      15: athrow
      16: astore_2
      17: new           #12                 // class javax/security/sasl/SaslException
      20: dup
      21: ldc           #24                 // String Callback handler invocation failed
      23: aload_2
      24: invokespecial #21                 // Method javax/security/sasl/SaslException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
      28: return
    Exception table:
       from    to  target type
           0    10    13   Class javax/security/sasl/SaslException
           0    10    16   Class java/lang/Throwable

  public void init();
    Code:
       0: return

  public java.lang.String getMechanismName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mechanismName:Ljava/lang/String;
       4: areturn

  protected java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #8                  // Field protocol:Ljava/lang/String;
       4: areturn

  protected java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field serverName:Ljava/lang/String;
       4: areturn

  protected javax.security.auth.callback.CallbackHandler getCallbackHandler();
    Code:
       0: aload_0
       1: getfield      #6                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       4: areturn

  protected org.jboss.sasl.util.SaslWrapper getWrapper();
    Code:
       0: aload_0
       1: getfield      #25                 // Field wrapper:Lorg/jboss/sasl/util/SaslWrapper;
       4: areturn

  public org.jboss.sasl.util.SaslStateContext getContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field context:Lorg/jboss/sasl/util/SaslStateContext;
       4: areturn

  byte[] evaluateMessage(byte[]) throws javax.security.sasl.SaslException;
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #1                  // Field state:Lorg/jboss/sasl/util/SaslState;
       6: aload_0
       7: getfield      #5                  // Field context:Lorg/jboss/sasl/util/SaslStateContext;
      10: aload_1
      11: invokeinterface #26,  3           // InterfaceMethod org/jboss/sasl/util/SaslState.evaluateMessage:(Lorg/jboss/sasl/util/SaslStateContext;[B)[B
      16: astore_3
      17: iconst_1
      18: istore_2
      19: aload_3
      20: astore        4
      22: iload_2
      23: ifne          33
      26: aload_0
      27: getstatic     #27                 // Field org/jboss/sasl/util/SaslState.FAILED:Lorg/jboss/sasl/util/SaslState;
      30: putfield      #1                  // Field state:Lorg/jboss/sasl/util/SaslState;
      33: aload         4
      35: areturn
      36: astore        5
      38: iload_2
      39: ifne          49
      42: aload_0
      43: getstatic     #27                 // Field org/jboss/sasl/util/SaslState.FAILED:Lorg/jboss/sasl/util/SaslState;
      46: putfield      #1                  // Field state:Lorg/jboss/sasl/util/SaslState;
      49: aload         5
      51: athrow
    Exception table:
       from    to  target type
           2    22    36   any
          36    38    36   any

  protected void setWrapper(org.jboss.sasl.util.SaslWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field wrapper:Lorg/jboss/sasl/util/SaslWrapper;
       5: return

  public byte[] wrap(byte[], int, int) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field wrapper:Lorg/jboss/sasl/util/SaslWrapper;
       4: astore        4
       6: aload         4
       8: ifnonnull     21
      11: new           #28                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #29                 // String Wrapping is not configured
      17: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload         4
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokeinterface #31,  4           // InterfaceMethod org/jboss/sasl/util/SaslWrapper.wrap:([BII)[B
      31: areturn

  public byte[] unwrap(byte[], int, int) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field wrapper:Lorg/jboss/sasl/util/SaslWrapper;
       4: astore        4
       6: aload         4
       8: ifnonnull     21
      11: new           #28                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #29                 // String Wrapping is not configured
      17: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload         4
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokeinterface #32,  4           // InterfaceMethod org/jboss/sasl/util/SaslWrapper.unwrap:([BII)[B
      31: areturn

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:Lorg/jboss/sasl/util/SaslState;
       4: getstatic     #33                 // Field org/jboss/sasl/util/SaslState.COMPLETE:Lorg/jboss/sasl/util/SaslState;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.Object getNegotiatedProperty(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public void dispose() throws javax.security.sasl.SaslException;
    Code:
       0: return

  static org.jboss.sasl.util.SaslState access$002(org.jboss.sasl.util.AbstractSaslParticipant, org.jboss.sasl.util.SaslState);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field state:Lorg/jboss/sasl/util/SaslState;
       6: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #34                 // Field NO_BYTES:[B
       6: return
}
