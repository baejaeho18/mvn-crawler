Compiled from "AbstractSaslFactory.java"
public abstract class org.jboss.sasl.util.AbstractSaslFactory {
  static final java.lang.String[] EMPTY;

  private final java.lang.String[] names;

  protected org.jboss.sasl.util.AbstractSaslFactory(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: anewarray     #2                  // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: putfield      #3                  // Field names:[Ljava/lang/String;
      16: return

  public java.lang.String[] getMechanismNames(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method matches:(Ljava/util/Map;)Z
       5: ifeq          13
       8: aload_0
       9: getfield      #3                  // Field names:[Ljava/lang/String;
      12: areturn
      13: getstatic     #5                  // Field EMPTY:[Ljava/lang/String;
      16: areturn

  protected boolean matches(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: ldc           #6                  // String javax.security.sasl.policy.noplaintext
       3: aload_1
       4: iconst_0
       5: invokevirtual #7                  // Method getPropertyValue:(Ljava/lang/String;Ljava/util/Map;Z)Z
       8: ifeq          18
      11: aload_0
      12: invokevirtual #8                  // Method isPlainText:()Z
      15: ifne          112
      18: aload_0
      19: ldc           #9                  // String javax.security.sasl.policy.noanonymous
      21: aload_1
      22: iconst_0
      23: invokevirtual #7                  // Method getPropertyValue:(Ljava/lang/String;Ljava/util/Map;Z)Z
      26: ifeq          36
      29: aload_0
      30: invokevirtual #10                 // Method isAnonymous:()Z
      33: ifne          112
      36: aload_0
      37: ldc           #11                 // String javax.security.sasl.policy.forward
      39: aload_1
      40: iconst_0
      41: invokevirtual #7                  // Method getPropertyValue:(Ljava/lang/String;Ljava/util/Map;Z)Z
      44: ifeq          54
      47: aload_0
      48: invokevirtual #12                 // Method isForwardSecrecy:()Z
      51: ifeq          112
      54: aload_0
      55: ldc           #13                 // String javax.security.sasl.policy.noactive
      57: aload_1
      58: iconst_0
      59: invokevirtual #7                  // Method getPropertyValue:(Ljava/lang/String;Ljava/util/Map;Z)Z
      62: ifeq          72
      65: aload_0
      66: invokevirtual #14                 // Method isActiveSusceptible:()Z
      69: ifne          112
      72: aload_0
      73: ldc           #15                 // String javax.security.sasl.policy.nodictionary
      75: aload_1
      76: iconst_0
      77: invokevirtual #7                  // Method getPropertyValue:(Ljava/lang/String;Ljava/util/Map;Z)Z
      80: ifeq          90
      83: aload_0
      84: invokevirtual #16                 // Method isDictionarySusceptible:()Z
      87: ifne          112
      90: aload_0
      91: ldc           #17                 // String javax.security.sasl.policy.credentials
      93: aload_1
      94: iconst_0
      95: invokevirtual #7                  // Method getPropertyValue:(Ljava/lang/String;Ljava/util/Map;Z)Z
      98: ifeq          108
     101: aload_0
     102: invokevirtual #18                 // Method isPassCredentials:()Z
     105: ifeq          112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: ireturn

  protected boolean isPassCredentials();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isDictionarySusceptible();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean isActiveSusceptible();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean isForwardSecrecy();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isPlainText();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean isAnonymous();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean getPropertyValue(java.lang.String, java.util.Map<java.lang.String, ?>, boolean);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: aload_1
       6: invokeinterface #19,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      11: ifne          18
      14: iload_3
      15: goto          31
      18: aload_2
      19: aload_1
      20: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokestatic  #22                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      31: ireturn

  protected boolean isIncluded(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #3                  // Field names:[Ljava/lang/String;
       4: iconst_0
       5: aaload
       6: astore_2
       7: aload_1
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     46
      23: aload_3
      24: iload         5
      26: aaload
      27: astore        6
      29: aload         6
      31: aload_2
      32: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: iinc          5, 1
      43: goto          16
      46: iconst_0
      47: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #2                  // class java/lang/String
       4: putstatic     #5                  // Field EMPTY:[Ljava/lang/String;
       7: return
}
