Compiled from "LocalUserServer.java"
public final class org.jboss.sasl.localuser.LocalUserServer extends org.jboss.sasl.util.AbstractSaslServer implements javax.security.sasl.SaslServer {
  public static final java.lang.String LOCAL_USER_USE_SECURE_RANDOM;

  public static final java.lang.String LOCAL_USER_CHALLENGE_PATH;

  public static final java.lang.String DEFAULT_USER;

  private static final byte UTF8NUL;

  private volatile java.lang.String authorizationId;

  private volatile java.io.File challengeFile;

  private final java.io.File basePath;

  private final java.lang.String defaultUser;

  private final boolean useSecureRandom;

  org.jboss.sasl.localuser.LocalUserServer(java.lang.String, java.lang.String, java.util.Map<java.lang.String, ?>, javax.security.auth.callback.CallbackHandler);
    Code:
       0: aload_0
       1: ldc           #8                  // String JBOSS-LOCAL-USER
       3: aload_1
       4: aload_2
       5: aload         4
       7: invokespecial #9                  // Method org/jboss/sasl/util/AbstractSaslServer."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/security/auth/callback/CallbackHandler;)V
      10: aload_3
      11: ldc           #10                 // String jboss.sasl.local-user.challenge-path
      13: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      18: ifeq          49
      21: aload_0
      22: new           #12                 // class java/io/File
      25: dup
      26: aload_3
      27: ldc           #10                 // String jboss.sasl.local-user.challenge-path
      29: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: invokevirtual #14                 // Method java/lang/Object.toString:()Ljava/lang/String;
      37: invokespecial #15                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      40: invokevirtual #16                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      43: putfield      #4                  // Field basePath:Ljava/io/File;
      46: goto          95
      49: ldc           #10                 // String jboss.sasl.local-user.challenge-path
      51: invokestatic  #17                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
      54: dup
      55: astore        5
      57: ifnull        79
      60: aload_0
      61: new           #12                 // class java/io/File
      64: dup
      65: aload         5
      67: invokespecial #15                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      70: invokevirtual #16                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      73: putfield      #4                  // Field basePath:Ljava/io/File;
      76: goto          95
      79: aload_0
      80: new           #12                 // class java/io/File
      83: dup
      84: ldc           #18                 // String java.io.tmpdir
      86: invokestatic  #17                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
      89: invokespecial #15                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      92: putfield      #4                  // Field basePath:Ljava/io/File;
      95: aconst_null
      96: astore        6
      98: aload_3
      99: ldc           #19                 // String jboss.sasl.local-user.use-secure-random
     101: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     106: ifeq          122
     109: aload_3
     110: ldc           #19                 // String jboss.sasl.local-user.use-secure-random
     112: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     117: astore        6
     119: goto          129
     122: ldc           #19                 // String jboss.sasl.local-user.use-secure-random
     124: invokestatic  #17                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
     127: astore        6
     129: aload         6
     131: ifnull        188
     134: aload         6
     136: instanceof    #20                 // class java/lang/Boolean
     139: ifeq          157
     142: aload_0
     143: aload         6
     145: checkcast     #20                 // class java/lang/Boolean
     148: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
     151: putfield      #22                 // Field useSecureRandom:Z
     154: goto          193
     157: aload         6
     159: instanceof    #23                 // class java/lang/String
     162: ifeq          180
     165: aload_0
     166: aload         6
     168: checkcast     #23                 // class java/lang/String
     171: invokestatic  #24                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     174: putfield      #22                 // Field useSecureRandom:Z
     177: goto          193
     180: aload_0
     181: iconst_1
     182: putfield      #22                 // Field useSecureRandom:Z
     185: goto          193
     188: aload_0
     189: iconst_1
     190: putfield      #22                 // Field useSecureRandom:Z
     193: aload_0
     194: aload_3
     195: ldc           #25                 // String jboss.sasl.local-user.default-user
     197: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     202: ifeq          216
     205: aload_3
     206: ldc           #25                 // String jboss.sasl.local-user.default-user
     208: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     213: goto          217
     216: aconst_null
     217: checkcast     #23                 // class java/lang/String
     220: checkcast     #23                 // class java/lang/String
     223: putfield      #2                  // Field defaultUser:Ljava/lang/String;
     226: return

  private static java.lang.String getProperty(java.lang.String);
    Code:
       0: invokestatic  #26                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        23
       8: new           #27                 // class org/jboss/sasl/localuser/LocalUserServer$1
      11: dup
      12: aload_0
      13: invokespecial #28                 // Method org/jboss/sasl/localuser/LocalUserServer$1."<init>":(Ljava/lang/String;)V
      16: invokestatic  #29                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      19: checkcast     #23                 // class java/lang/String
      22: areturn
      23: aload_0
      24: invokestatic  #30                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: areturn

  private java.util.Random getRandom();
    Code:
       0: aload_0
       1: getfield      #22                 // Field useSecureRandom:Z
       4: ifeq          15
       7: new           #31                 // class java/security/SecureRandom
      10: dup
      11: invokespecial #32                 // Method java/security/SecureRandom."<init>":()V
      14: areturn
      15: new           #33                 // class java/util/Random
      18: dup
      19: invokespecial #34                 // Method java/util/Random."<init>":()V
      22: areturn

  public void init();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getContext:()Lorg/jboss/sasl/util/SaslStateContext;
       4: new           #36                 // class org/jboss/sasl/localuser/LocalUserServer$2
       7: dup
       8: aload_0
       9: invokespecial #37                 // Method org/jboss/sasl/localuser/LocalUserServer$2."<init>":(Lorg/jboss/sasl/localuser/LocalUserServer;)V
      12: invokeinterface #38,  2           // InterfaceMethod org/jboss/sasl/util/SaslStateContext.setNegotiationState:(Lorg/jboss/sasl/util/SaslState;)V
      17: return

  public java.lang.String getAuthorizationID();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method isComplete:()Z
       4: ifeq          12
       7: aload_0
       8: getfield      #7                  // Field authorizationId:Ljava/lang/String;
      11: areturn
      12: new           #40                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #41                 // String JBOSS-LOCAL-USER server negotiation not complete
      18: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow

  private void deleteChallenge();
    Code:
       0: aload_0
       1: getfield      #5                  // Field challengeFile:Ljava/io/File;
       4: ifnull        20
       7: aload_0
       8: getfield      #5                  // Field challengeFile:Ljava/io/File;
      11: invokevirtual #43                 // Method java/io/File.delete:()Z
      14: pop
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field challengeFile:Ljava/io/File;
      20: return

  public void dispose() throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/jboss/sasl/util/AbstractSaslServer.dispose:()V
       4: aload_0
       5: invokespecial #3                  // Method deleteChallenge:()V
       8: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method deleteChallenge:()V
       4: return

  static java.lang.String access$002(org.jboss.sasl.localuser.LocalUserServer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field authorizationId:Ljava/lang/String;
       6: areturn

  static java.util.Random access$100(org.jboss.sasl.localuser.LocalUserServer);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getRandom:()Ljava/util/Random;
       4: areturn

  static java.io.File access$202(org.jboss.sasl.localuser.LocalUserServer, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field challengeFile:Ljava/io/File;
       6: areturn

  static java.io.File access$300(org.jboss.sasl.localuser.LocalUserServer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field basePath:Ljava/io/File;
       4: areturn

  static java.io.File access$200(org.jboss.sasl.localuser.LocalUserServer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field challengeFile:Ljava/io/File;
       4: areturn

  static void access$400(org.jboss.sasl.localuser.LocalUserServer);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method deleteChallenge:()V
       4: return

  static java.lang.String access$500(org.jboss.sasl.localuser.LocalUserServer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultUser:Ljava/lang/String;
       4: areturn

  static java.lang.String access$000(org.jboss.sasl.localuser.LocalUserServer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field authorizationId:Ljava/lang/String;
       4: areturn

  static void access$600(org.jboss.sasl.localuser.LocalUserServer, javax.security.auth.callback.Callback[]) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method handleCallbacks:([Ljavax/security/auth/callback/Callback;)V
       5: return

  static void access$700(org.jboss.sasl.localuser.LocalUserServer, javax.security.auth.callback.Callback[]) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method handleCallbacks:([Ljavax/security/auth/callback/Callback;)V
       5: return
}
