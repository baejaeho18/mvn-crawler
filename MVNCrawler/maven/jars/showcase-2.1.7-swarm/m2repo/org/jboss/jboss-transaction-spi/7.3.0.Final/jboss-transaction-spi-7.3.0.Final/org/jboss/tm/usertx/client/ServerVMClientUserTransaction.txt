Compiled from "ServerVMClientUserTransaction.java"
public class org.jboss.tm.usertx.client.ServerVMClientUserTransaction implements javax.transaction.UserTransaction,org.jboss.tm.usertx.UserTransactionProvider,java.io.Serializable,javax.naming.Referenceable {
  private static final java.lang.ThreadLocal<java.lang.Boolean> isAvailables;

  private static final org.jboss.tm.usertx.client.ServerVMClientUserTransaction singleton;

  private volatile javax.transaction.TransactionManager tm;

  private volatile org.jboss.tm.usertx.UserTransactionRegistry registry;

  private final java.util.Collection<org.jboss.tm.usertx.client.ServerVMClientUserTransaction$UserTransactionStartedListener> listeners;

  public static org.jboss.tm.usertx.client.ServerVMClientUserTransaction getSingleton();
    Code:
       0: getstatic     #1                  // Field singleton:Lorg/jboss/tm/usertx/client/ServerVMClientUserTransaction;
       3: areturn

  private org.jboss.tm.usertx.client.ServerVMClientUserTransaction();
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #2                  // Method org/jboss/tm/TransactionManagerLocator.locateTransactionManager:(Z)Ljavax/transaction/TransactionManager;
       5: invokespecial #3                  // Method "<init>":(Ljavax/transaction/TransactionManager;)V
       8: return

  public org.jboss.tm.usertx.client.ServerVMClientUserTransaction(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #7                  // Field listeners:Ljava/util/Collection;
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
      20: return

  public boolean isServer();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void registerTxStartedListener(org.jboss.tm.usertx.client.ServerVMClientUserTransaction$UserTransactionStartedListener);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String Null listener
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #7                  // Field listeners:Ljava/util/Collection;
      18: aload_1
      19: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public void unregisterTxStartedListener(org.jboss.tm.usertx.client.ServerVMClientUserTransaction$UserTransactionStartedListener);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String Null listener
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #7                  // Field listeners:Ljava/util/Collection;
      18: aload_1
      19: invokeinterface #13,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public void setTransactionRegistry(org.jboss.tm.usertx.UserTransactionRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field registry:Lorg/jboss/tm/usertx/UserTransactionRegistry;
       5: return

  public void setTransactionManager(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       5: return

  public void begin() throws javax.transaction.NotSupportedException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method testAvailability:()V
       4: aload_0
       5: getfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       8: invokeinterface #16,  1           // InterfaceMethod javax/transaction/TransactionManager.begin:()V
      13: aload_0
      14: getfield      #14                 // Field registry:Lorg/jboss/tm/usertx/UserTransactionRegistry;
      17: astore_1
      18: aload_1
      19: ifnull        26
      22: aload_1
      23: invokevirtual #17                 // Method org/jboss/tm/usertx/UserTransactionRegistry.userTransactionStarted:()V
      26: aload_0
      27: getfield      #7                  // Field listeners:Ljava/util/Collection;
      30: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          64
      45: aload_2
      46: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #21                 // class org/jboss/tm/usertx/client/ServerVMClientUserTransaction$UserTransactionStartedListener
      54: astore_3
      55: aload_3
      56: invokeinterface #22,  1           // InterfaceMethod org/jboss/tm/usertx/client/ServerVMClientUserTransaction$UserTransactionStartedListener.userTransactionStarted:()V
      61: goto          36
      64: goto          72
      67: astore_2
      68: aload_0
      69: invokevirtual #24                 // Method rollback:()V
      72: return
    Exception table:
       from    to  target type
          26    64    67   Class javax/transaction/SystemException

  public void commit() throws javax.transaction.RollbackException, javax.transaction.HeuristicMixedException, javax.transaction.HeuristicRollbackException, java.lang.SecurityException, java.lang.IllegalStateException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method testAvailability:()V
       4: aload_0
       5: getfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       8: invokeinterface #25,  1           // InterfaceMethod javax/transaction/TransactionManager.commit:()V
      13: return

  public void rollback() throws java.lang.SecurityException, java.lang.IllegalStateException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method testAvailability:()V
       4: aload_0
       5: getfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       8: invokeinterface #26,  1           // InterfaceMethod javax/transaction/TransactionManager.rollback:()V
      13: return

  public void setRollbackOnly() throws java.lang.IllegalStateException, javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method testAvailability:()V
       4: aload_0
       5: getfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       8: invokeinterface #27,  1           // InterfaceMethod javax/transaction/TransactionManager.setRollbackOnly:()V
      13: return

  public int getStatus() throws javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method testAvailability:()V
       4: aload_0
       5: getfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       8: invokeinterface #28,  1           // InterfaceMethod javax/transaction/TransactionManager.getStatus:()I
      13: ireturn

  public void setTransactionTimeout(int) throws javax.transaction.SystemException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method testAvailability:()V
       4: aload_0
       5: getfield      #8                  // Field tm:Ljavax/transaction/TransactionManager;
       8: iload_1
       9: invokeinterface #29,  2           // InterfaceMethod javax/transaction/TransactionManager.setTransactionTimeout:(I)V
      14: return

  public javax.naming.Reference getReference() throws javax.naming.NamingException;
    Code:
       0: new           #30                 // class javax/naming/Reference
       3: dup
       4: ldc           #31                 // class org/jboss/tm/usertx/client/ServerVMClientUserTransaction
       6: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: ldc           #33                 // class org/jboss/tm/usertx/client/ServerVMClientUserTransactionFactory
      11: invokevirtual #34                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      14: aconst_null
      15: invokespecial #35                 // Method javax/naming/Reference."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      18: areturn

  public static void setAvailability(boolean);
    Code:
       0: getstatic     #36                 // Field isAvailables:Ljava/lang/ThreadLocal;
       3: iload_0
       4: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #38                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      10: return

  public static boolean isAvailable();
    Code:
       0: getstatic     #36                 // Field isAvailables:Ljava/lang/ThreadLocal;
       3: invokevirtual #39                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #40                 // class java/lang/Boolean
       9: astore_0
      10: aload_0
      11: ifnonnull     16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: invokevirtual #41                 // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  private void testAvailability();
    Code:
       0: invokestatic  #42                 // Method isAvailable:()Z
       3: ifne          16
       6: new           #43                 // class java/lang/IllegalStateException
       9: dup
      10: ldc           #44                 // String UserTransaction is not available within the scope of a bean or method annotated with @Transactional and a Transactional.TxType other than NOT_SUPPORTED or NEVER
      12: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: return

  static {};
    Code:
       0: new           #46                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #47                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #36                 // Field isAvailables:Ljava/lang/ThreadLocal;
      10: new           #31                 // class org/jboss/tm/usertx/client/ServerVMClientUserTransaction
      13: dup
      14: invokespecial #48                 // Method "<init>":()V
      17: putstatic     #1                  // Field singleton:Lorg/jboss/tm/usertx/client/ServerVMClientUserTransaction;
      20: return
}
