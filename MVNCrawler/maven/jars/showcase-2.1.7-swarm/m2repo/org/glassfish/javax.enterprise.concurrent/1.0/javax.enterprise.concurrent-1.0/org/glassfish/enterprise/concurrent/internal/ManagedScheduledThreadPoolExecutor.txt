Compiled from "ManagedScheduledThreadPoolExecutor.java"
public class org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor extends java.util.concurrent.ScheduledThreadPoolExecutor {
  private long threadLifeTime;

  private static final java.util.concurrent.atomic.AtomicLong sequencer;

  public org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(I)V
       5: aload_0
       6: lconst_0
       7: putfield      #5                  // Field threadLifeTime:J
      10: return

  public org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor(int, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #6                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
       6: aload_0
       7: lconst_0
       8: putfield      #5                  // Field threadLifeTime:J
      11: return

  public org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor(int, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #7                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/RejectedExecutionHandler;)V
       6: aload_0
       7: lconst_0
       8: putfield      #5                  // Field threadLifeTime:J
      11: return

  public org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #8                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
       7: aload_0
       8: lconst_0
       9: putfield      #5                  // Field threadLifeTime:J
      12: return

  public void setThreadLifeTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field threadLifeTime:J
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          39
      11: aload_0
      12: getstatic     #9                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      15: invokevirtual #10                 // Method getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
      18: lstore_3
      19: lload_3
      20: lconst_0
      21: lcmp
      22: ifeq          31
      25: lload_1
      26: lload_3
      27: lcmp
      28: ifge          39
      31: aload_0
      32: lload_1
      33: getstatic     #9                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokevirtual #11                 // Method setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      39: return

  final long now();
    Code:
       0: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
       3: lreturn

  private long overflowFree(long);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.peek:()Ljava/lang/Object;
       9: checkcast     #15                 // class java/util/concurrent/Delayed
      12: astore_3
      13: aload_3
      14: ifnull        51
      17: aload_3
      18: getstatic     #16                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      21: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/Delayed.getDelay:(Ljava/util/concurrent/TimeUnit;)J
      26: lstore        4
      28: lload         4
      30: lconst_0
      31: lcmp
      32: ifge          51
      35: lload_1
      36: lload         4
      38: lsub
      39: lconst_0
      40: lcmp
      41: ifge          51
      44: ldc2_w        #18                 // long 9223372036854775807l
      47: lload         4
      49: ladd
      50: lstore_1
      51: lload_1
      52: lreturn

  private long triggerTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: lconst_0
       4: lcmp
       5: ifge          12
       8: lconst_0
       9: goto          13
      12: lload_1
      13: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      16: invokevirtual #21                 // Method triggerTime:(J)J
      19: lreturn

  long triggerTime(long);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method now:()J
       4: lload_1
       5: ldc2_w        #23                 // long 4611686018427387903l
       8: lcmp
       9: ifge          16
      12: lload_1
      13: goto          21
      16: aload_0
      17: lload_1
      18: invokespecial #25                 // Method overflowFree:(J)J
      21: ladd
      22: lreturn

  boolean canRunInCurrentRunState(boolean);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isShutdown:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  void ensurePrestart();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getCorePoolSize:()I
       4: ifne          12
       7: aload_0
       8: iconst_1
       9: invokevirtual #28                 // Method setCorePoolSize:(I)V
      12: aload_0
      13: invokevirtual #29                 // Method prestartCoreThread:()Z
      16: pop
      17: return

  void reExecutePeriodic(java.util.concurrent.RunnableScheduledFuture<?>);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #30                 // Method canRunInCurrentRunState:(Z)Z
       5: ifeq          50
       8: aload_0
       9: invokespecial #13                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      12: aload_1
      13: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: iconst_1
      21: invokevirtual #30                 // Method canRunInCurrentRunState:(Z)Z
      24: ifne          46
      27: aload_0
      28: aload_1
      29: invokevirtual #32                 // Method remove:(Ljava/lang/Runnable;)Z
      32: ifeq          46
      35: aload_1
      36: iconst_0
      37: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/RunnableScheduledFuture.cancel:(Z)Z
      42: pop
      43: goto          50
      46: aload_0
      47: invokevirtual #34                 // Method ensurePrestart:()V
      50: return

  final void reject(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_1
      11: aload_0
      12: invokeinterface #36,  3           // InterfaceMethod java/util/concurrent/RejectedExecutionHandler.rejectedExecution:(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V
      17: return

  private void delayedExecute(org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask<?>);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask.submitted:()V
       4: aload_0
       5: invokevirtual #26                 // Method isShutdown:()Z
       8: ifeq          19
      11: aload_0
      12: aload_1
      13: invokevirtual #38                 // Method reject:(Ljava/lang/Runnable;)V
      16: goto          69
      19: aload_0
      20: invokespecial #13                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      23: aload_1
      24: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: invokevirtual #26                 // Method isShutdown:()Z
      34: ifeq          65
      37: aload_0
      38: aload_1
      39: invokevirtual #39                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask.isPeriodic:()Z
      42: invokevirtual #30                 // Method canRunInCurrentRunState:(Z)Z
      45: ifne          65
      48: aload_0
      49: aload_1
      50: invokevirtual #32                 // Method remove:(Ljava/lang/Runnable;)Z
      53: ifeq          65
      56: aload_1
      57: iconst_0
      58: invokevirtual #40                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask.cancel:(Z)Z
      61: pop
      62: goto          69
      65: aload_0
      66: invokevirtual #34                 // Method ensurePrestart:()V
      69: return

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #16                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokevirtual #41                 // Method schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
       9: pop
      10: return

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload         6
       6: ifnonnull     17
       9: new           #42                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #43                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: new           #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      20: dup
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: aload_0
      26: lload         4
      28: aload         6
      30: invokespecial #2                  // Method triggerTime:(JLjava/util/concurrent/TimeUnit;)J
      33: invokespecial #45                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;J)V
      36: astore        7
      38: aload_0
      39: aload         7
      41: invokespecial #1                  // Method delayedExecute:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
      44: aload         7
      46: areturn

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload         5
       6: ifnonnull     17
       9: new           #42                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #43                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: new           #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      20: dup
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_0
      25: lload_3
      26: aload         5
      28: invokespecial #2                  // Method triggerTime:(JLjava/util/concurrent/TimeUnit;)J
      31: invokespecial #46                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/util/concurrent/Callable;J)V
      34: astore        6
      36: aload_0
      37: aload         6
      39: invokespecial #1                  // Method delayedExecute:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
      42: aload         6
      44: areturn

  public java.util.concurrent.ScheduledFuture<?> schedule(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, javax.enterprise.concurrent.Trigger);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: new           #42                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #43                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: new           #47                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture
      15: dup
      16: aload_0
      17: aload_1
      18: aload_2
      19: aconst_null
      20: aload_3
      21: invokespecial #48                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;Ljavax/enterprise/concurrent/Trigger;)V
      24: areturn

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.util.concurrent.Callable<V>, javax.enterprise.concurrent.Trigger);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: new           #42                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #43                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: new           #47                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture
      15: dup
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokespecial #49                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/util/concurrent/Callable;Ljavax/enterprise/concurrent/Trigger;)V
      23: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload         7
       6: ifnonnull     17
       9: new           #42                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #43                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: lload         5
      19: lconst_0
      20: lcmp
      21: ifgt          32
      24: new           #50                 // class java/lang/IllegalArgumentException
      27: dup
      28: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":()V
      31: athrow
      32: new           #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      35: dup
      36: aload_0
      37: aload_1
      38: aload_2
      39: aconst_null
      40: aload_0
      41: lload_3
      42: aload         7
      44: invokespecial #2                  // Method triggerTime:(JLjava/util/concurrent/TimeUnit;)J
      47: aload         7
      49: lload         5
      51: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      54: invokespecial #52                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;JJ)V
      57: astore        8
      59: aload_0
      60: aload         8
      62: invokespecial #1                  // Method delayedExecute:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
      65: aload         8
      67: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload         7
       6: ifnonnull     17
       9: new           #42                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #43                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: lload         5
      19: lconst_0
      20: lcmp
      21: ifgt          32
      24: new           #50                 // class java/lang/IllegalArgumentException
      27: dup
      28: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":()V
      31: athrow
      32: new           #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      35: dup
      36: aload_0
      37: aload_1
      38: aload_2
      39: aconst_null
      40: aload_0
      41: lload_3
      42: aload         7
      44: invokespecial #2                  // Method triggerTime:(JLjava/util/concurrent/TimeUnit;)J
      47: aload         7
      49: lload         5
      51: lneg
      52: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      55: invokespecial #52                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;JJ)V
      58: astore        8
      60: aload_0
      61: aload         8
      63: invokespecial #1                  // Method delayedExecute:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
      66: aload         8
      68: areturn

  protected void afterExecute(java.lang.Runnable, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #53                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.afterExecute:(Ljava/lang/Runnable;Ljava/lang/Throwable;)V
       6: aload_1
       7: checkcast     #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      10: astore_3
      11: aload_3
      12: aload_2
      13: invokevirtual #54                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask.done:(Ljava/lang/Throwable;)V
      16: aload_3
      17: invokevirtual #55                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask.resetContext:()V
      20: aload_0
      21: getfield      #5                  // Field threadLifeTime:J
      24: lconst_0
      25: lcmp
      26: ifle          148
      29: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: astore        4
      34: aload         4
      36: instanceof    #57                 // class org/glassfish/enterprise/concurrent/AbstractManagedThread
      39: ifeq          78
      42: aload         4
      44: checkcast     #57                 // class org/glassfish/enterprise/concurrent/AbstractManagedThread
      47: invokevirtual #58                 // Method org/glassfish/enterprise/concurrent/AbstractManagedThread.getThreadStartTime:()J
      50: lstore        5
      52: invokestatic  #59                 // Method java/lang/System.currentTimeMillis:()J
      55: lload         5
      57: lsub
      58: ldc2_w        #60                 // long 1000l
      61: ldiv
      62: aload_0
      63: getfield      #5                  // Field threadLifeTime:J
      66: lcmp
      67: ifle          78
      70: new           #62                 // class org/glassfish/enterprise/concurrent/internal/ThreadExpiredException
      73: dup
      74: invokespecial #63                 // Method org/glassfish/enterprise/concurrent/internal/ThreadExpiredException."<init>":()V
      77: athrow
      78: goto          148
      81: astore        7
      83: aload_3
      84: invokevirtual #55                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask.resetContext:()V
      87: aload_0
      88: getfield      #5                  // Field threadLifeTime:J
      91: lconst_0
      92: lcmp
      93: ifle          145
      96: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      99: astore        8
     101: aload         8
     103: instanceof    #57                 // class org/glassfish/enterprise/concurrent/AbstractManagedThread
     106: ifeq          145
     109: aload         8
     111: checkcast     #57                 // class org/glassfish/enterprise/concurrent/AbstractManagedThread
     114: invokevirtual #58                 // Method org/glassfish/enterprise/concurrent/AbstractManagedThread.getThreadStartTime:()J
     117: lstore        9
     119: invokestatic  #59                 // Method java/lang/System.currentTimeMillis:()J
     122: lload         9
     124: lsub
     125: ldc2_w        #60                 // long 1000l
     128: ldiv
     129: aload_0
     130: getfield      #5                  // Field threadLifeTime:J
     133: lcmp
     134: ifle          145
     137: new           #62                 // class org/glassfish/enterprise/concurrent/internal/ThreadExpiredException
     140: dup
     141: invokespecial #63                 // Method org/glassfish/enterprise/concurrent/internal/ThreadExpiredException."<init>":()V
     144: athrow
     145: aload         7
     147: athrow
     148: return
    Exception table:
       from    to  target type
          11    16    81   any
          81    83    81   any

  protected void beforeExecute(java.lang.Thread, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #64                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.beforeExecute:(Ljava/lang/Thread;Ljava/lang/Runnable;)V
       6: aload_2
       7: checkcast     #65                 // class org/glassfish/enterprise/concurrent/internal/ManagedFutureTask
      10: astore_3
      11: aload_3
      12: invokevirtual #66                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.setupContext:()V
      15: aload_3
      16: aload_1
      17: invokevirtual #67                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.starting:(Ljava/lang/Thread;)V
      20: return

  public <V> org.glassfish.enterprise.concurrent.internal.ManagedFutureTask<V> newTaskFor(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, V);
    Code:
       0: new           #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: lconst_0
       9: invokespecial #45                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;J)V
      12: areturn

  public org.glassfish.enterprise.concurrent.internal.ManagedFutureTask newTaskFor(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.util.concurrent.Callable);
    Code:
       0: new           #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: lconst_0
       8: invokespecial #46                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/util/concurrent/Callable;J)V
      11: areturn

  public void executeManagedTask(org.glassfish.enterprise.concurrent.internal.ManagedFutureTask);
    Code:
       0: aload_1
       1: instanceof    #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #44                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      12: invokespecial #1                  // Method delayedExecute:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
      15: goto          33
      18: aload_0
      19: aload_1
      20: getfield      #68                 // Field org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      23: aload_1
      24: aconst_null
      25: lconst_0
      26: getstatic     #16                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      29: invokevirtual #69                 // Method schedule:(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      32: pop
      33: return

  static java.util.concurrent.atomic.AtomicLong access$000();
    Code:
       0: getstatic     #3                  // Field sequencer:Ljava/util/concurrent/atomic/AtomicLong;
       3: areturn

  static long access$300(org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokespecial #2                  // Method triggerTime:(JLjava/util/concurrent/TimeUnit;)J
       6: lreturn

  static void access$400(org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor, org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method delayedExecute:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
       5: return

  static {};
    Code:
       0: new           #70                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #71                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #3                  // Field sequencer:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
