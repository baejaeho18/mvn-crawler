Compiled from "ManagedScheduledThreadPoolExecutor.java"
class org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask<V> extends org.glassfish.enterprise.concurrent.internal.ManagedFutureTask<V> implements java.util.concurrent.RunnableScheduledFuture<V> {
  protected final long sequenceNumber;

  protected long nextRunTime;

  private final long period;

  java.util.concurrent.RunnableScheduledFuture<V> outerTask;

  int heapIndex;

  final org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor this$0;

  org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, V, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: lload         5
       8: lconst_0
       9: invokespecial #3                  // Method "<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;JJ)V
      12: return

  org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.util.concurrent.Callable<V>, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lload         4
       6: lconst_0
       7: invokespecial #4                  // Method "<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/util/concurrent/Callable;JJ)V
      10: return

  org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, V, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
       5: aload_0
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #6                  // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;)V
      13: aload_0
      14: aload_0
      15: putfield      #7                  // Field outerTask:Ljava/util/concurrent/RunnableScheduledFuture;
      18: aload_0
      19: lload         5
      21: putfield      #8                  // Field nextRunTime:J
      24: aload_0
      25: lload         7
      27: putfield      #9                  // Field period:J
      30: aload_0
      31: invokestatic  #10                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.access$000:()Ljava/util/concurrent/atomic/AtomicLong;
      34: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      37: putfield      #12                 // Field sequenceNumber:J
      40: return

  public org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask(org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor, org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.util.concurrent.Callable, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #13                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/util/concurrent/Callable;)V
      11: aload_0
      12: aload_0
      13: putfield      #7                  // Field outerTask:Ljava/util/concurrent/RunnableScheduledFuture;
      16: aload_0
      17: lload         4
      19: putfield      #8                  // Field nextRunTime:J
      22: aload_0
      23: lload         6
      25: putfield      #9                  // Field period:J
      28: aload_0
      29: invokestatic  #10                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.access$000:()Ljava/util/concurrent/atomic/AtomicLong;
      32: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      35: putfield      #12                 // Field sequenceNumber:J
      38: return

  public long getDelay(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field nextRunTime:J
       5: aload_0
       6: getfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
       9: invokevirtual #14                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.now:()J
      12: lsub
      13: getstatic     #15                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      16: invokevirtual #16                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      19: lreturn

  public int compareTo(java.util.concurrent.Delayed);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      11: ifeq          61
      14: aload_1
      15: checkcast     #17                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      18: astore_2
      19: aload_0
      20: getfield      #8                  // Field nextRunTime:J
      23: aload_2
      24: getfield      #8                  // Field nextRunTime:J
      27: lsub
      28: lstore_3
      29: lload_3
      30: lconst_0
      31: lcmp
      32: ifge          37
      35: iconst_m1
      36: ireturn
      37: lload_3
      38: lconst_0
      39: lcmp
      40: ifle          45
      43: iconst_1
      44: ireturn
      45: aload_0
      46: getfield      #12                 // Field sequenceNumber:J
      49: aload_2
      50: getfield      #12                 // Field sequenceNumber:J
      53: lcmp
      54: ifge          59
      57: iconst_m1
      58: ireturn
      59: iconst_1
      60: ireturn
      61: aload_0
      62: getstatic     #15                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      65: invokevirtual #18                 // Method getDelay:(Ljava/util/concurrent/TimeUnit;)J
      68: aload_1
      69: getstatic     #15                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      72: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/Delayed.getDelay:(Ljava/util/concurrent/TimeUnit;)J
      77: lsub
      78: lstore_2
      79: lload_2
      80: lconst_0
      81: lcmp
      82: ifne          89
      85: iconst_0
      86: goto          100
      89: lload_2
      90: lconst_0
      91: lcmp
      92: ifge          99
      95: iconst_m1
      96: goto          100
      99: iconst_1
     100: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #17                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
       4: ifeq          24
       7: aload_0
       8: aload_1
       9: checkcast     #17                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask
      12: invokevirtual #20                 // Method compareTo:(Ljava/util/concurrent/Delayed;)I
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sequenceNumber:J
       4: aload_0
       5: getfield      #12                 // Field sequenceNumber:J
       8: bipush        32
      10: lushr
      11: lxor
      12: l2i
      13: ireturn

  public boolean isPeriodic();
    Code:
       0: aload_0
       1: getfield      #9                  // Field period:J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private void setNextRunTime();
    Code:
       0: aload_0
       1: getfield      #9                  // Field period:J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          24
      11: aload_0
      12: dup
      13: getfield      #8                  // Field nextRunTime:J
      16: lload_1
      17: ladd
      18: putfield      #8                  // Field nextRunTime:J
      21: goto          37
      24: aload_0
      25: aload_0
      26: getfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
      29: lload_1
      30: lneg
      31: invokevirtual #21                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.triggerTime:(J)J
      34: putfield      #8                  // Field nextRunTime:J
      37: return

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #22                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.cancel:(Z)Z
       5: istore_2
       6: iload_2
       7: ifeq          36
      10: aload_0
      11: getfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
      14: invokevirtual #23                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.getRemoveOnCancelPolicy:()Z
      17: ifeq          36
      20: aload_0
      21: getfield      #24                 // Field heapIndex:I
      24: iflt          36
      27: aload_0
      28: getfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
      31: aload_0
      32: invokevirtual #25                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.remove:(Ljava/lang/Runnable;)Z
      35: pop
      36: iload_2
      37: ireturn

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isPeriodic:()Z
       4: istore_1
       5: aload_0
       6: getfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
       9: iload_1
      10: invokevirtual #27                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.canRunInCurrentRunState:(Z)Z
      13: ifne          25
      16: aload_0
      17: iconst_0
      18: invokevirtual #28                 // Method cancel:(Z)Z
      21: pop
      22: goto          58
      25: iload_1
      26: ifne          36
      29: aload_0
      30: invokestatic  #29                 // Method access$101:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
      33: goto          58
      36: aload_0
      37: invokestatic  #30                 // Method access$201:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)Z
      40: ifeq          58
      43: aload_0
      44: invokespecial #31                 // Method setNextRunTime:()V
      47: aload_0
      48: getfield      #5                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
      51: aload_0
      52: getfield      #7                  // Field outerTask:Ljava/util/concurrent/RunnableScheduledFuture;
      55: invokevirtual #32                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.reExecutePeriodic:(Ljava/util/concurrent/RunnableScheduledFuture;)V
      58: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class java/util/concurrent/Delayed
       5: invokevirtual #20                 // Method compareTo:(Ljava/util/concurrent/Delayed;)I
       8: ireturn

  static void access$101(org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.run:()V
       4: return

  static boolean access$201(org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/FutureTask.runAndReset:()Z
       4: ireturn
}
