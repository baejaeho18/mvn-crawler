Compiled from "ManagedScheduledThreadPoolExecutor.java"
class org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$TriggerControllerFuture<V> extends org.glassfish.enterprise.concurrent.internal.ManagedFutureTask<V> implements java.util.concurrent.ScheduledFuture<V> {
  private final javax.enterprise.concurrent.Trigger trigger;

  private final java.util.Date taskScheduledTime;

  private final java.util.concurrent.Callable callable;

  private volatile org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask<V> currentFuture;

  private volatile javax.enterprise.concurrent.LastExecution lastExecution;

  private boolean skipped;

  private java.util.concurrent.locks.ReentrantLock lock;

  final org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor this$0;

  public org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$TriggerControllerFuture(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.util.concurrent.Callable<V>, javax.enterprise.concurrent.Trigger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #2                  // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/util/concurrent/Callable;)V
      11: aload_0
      12: new           #3                  // class java/util/concurrent/locks/ReentrantLock
      15: dup
      16: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      19: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      22: aload_0
      23: aload         4
      25: putfield      #6                  // Field trigger:Ljavax/enterprise/concurrent/Trigger;
      28: aload_0
      29: aload_3
      30: putfield      #7                  // Field callable:Ljava/util/concurrent/Callable;
      33: aload_0
      34: new           #8                  // class java/util/Date
      37: dup
      38: invokestatic  #9                  // Method java/lang/System.currentTimeMillis:()J
      41: invokespecial #10                 // Method java/util/Date."<init>":(J)V
      44: putfield      #11                 // Field taskScheduledTime:Ljava/util/Date;
      47: aload_0
      48: invokespecial #12                 // Method scheduleNextRun:()V
      51: aload_0
      52: invokevirtual #13                 // Method submitted:()V
      55: return

  public org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$TriggerControllerFuture(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, V, javax.enterprise.concurrent.Trigger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
       5: aload_0
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #14                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/lang/Runnable;Ljava/lang/Object;)V
      13: aload_0
      14: new           #3                  // class java/util/concurrent/locks/ReentrantLock
      17: dup
      18: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      21: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      24: aload_0
      25: aload         5
      27: putfield      #6                  // Field trigger:Ljavax/enterprise/concurrent/Trigger;
      30: aload_0
      31: aload_3
      32: invokestatic  #15                 // Method java/util/concurrent/Executors.callable:(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;
      35: putfield      #7                  // Field callable:Ljava/util/concurrent/Callable;
      38: aload_0
      39: new           #8                  // class java/util/Date
      42: dup
      43: invokestatic  #9                  // Method java/lang/System.currentTimeMillis:()J
      46: invokespecial #10                 // Method java/util/Date."<init>":(J)V
      49: putfield      #11                 // Field taskScheduledTime:Ljava/util/Date;
      52: aload_0
      53: invokespecial #12                 // Method scheduleNextRun:()V
      56: aload_0
      57: invokevirtual #13                 // Method submitted:()V
      60: return

  private void scheduleNextRun();
    Code:
       0: aload_0
       1: getfield      #6                  // Field trigger:Ljavax/enterprise/concurrent/Trigger;
       4: aload_0
       5: getfield      #16                 // Field lastExecution:Ljavax/enterprise/concurrent/LastExecution;
       8: aload_0
       9: getfield      #11                 // Field taskScheduledTime:Ljava/util/Date;
      12: invokeinterface #17,  3           // InterfaceMethod javax/enterprise/concurrent/Trigger.getNextRunTime:(Ljavax/enterprise/concurrent/LastExecution;Ljava/util/Date;)Ljava/util/Date;
      17: astore_1
      18: aload_1
      19: ifnonnull     33
      22: aload_0
      23: aconst_null
      24: invokevirtual #18                 // Method done:(Ljava/lang/Throwable;)V
      27: aload_0
      28: aconst_null
      29: invokevirtual #19                 // Method set:(Ljava/lang/Object;)V
      32: return
      33: aload_0
      34: getfield      #1                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
      37: aload_1
      38: invokevirtual #20                 // Method java/util/Date.getTime:()J
      41: invokestatic  #9                  // Method java/lang/System.currentTimeMillis:()J
      44: lsub
      45: getstatic     #21                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      48: invokestatic  #22                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.access$300:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;JLjava/util/concurrent/TimeUnit;)J
      51: lstore_2
      52: aload_0
      53: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      56: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      59: new           #24                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask
      62: dup
      63: aload_0
      64: getfield      #1                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
      67: aload_0
      68: getfield      #25                 // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      71: aload_0
      72: getfield      #7                  // Field callable:Ljava/util/concurrent/Callable;
      75: lload_2
      76: aload_1
      77: invokevirtual #20                 // Method java/util/Date.getTime:()J
      80: aload_0
      81: invokespecial #26                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;Ljava/util/concurrent/Callable;JJLorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture;)V
      84: astore        4
      86: aload_0
      87: getfield      #1                  // Field this$0:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;
      90: aload         4
      92: invokestatic  #27                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor.access$400:(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor;Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedScheduledFutureTask;)V
      95: aload_0
      96: aload         4
      98: putfield      #28                 // Field currentFuture:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask;
     101: aload_0
     102: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     105: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     108: goto          123
     111: astore        5
     113: aload_0
     114: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     117: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     120: aload         5
     122: athrow
     123: return
    Exception table:
       from    to  target type
          52   101   111   any
         111   113   111   any

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #30                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.cancel:(Z)Z
       5: pop
       6: aload_0
       7: invokespecial #31                 // Method getCurrentFuture:()Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask;
      10: iload_1
      11: invokevirtual #32                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask.cancel:(Z)Z
      14: ireturn

  public V get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field skipped:Z
       4: ifeq          15
       7: new           #34                 // class javax/enterprise/concurrent/SkippedException
      10: dup
      11: invokespecial #35                 // Method javax/enterprise/concurrent/SkippedException."<init>":()V
      14: athrow
      15: aload_0
      16: invokespecial #31                 // Method getCurrentFuture:()Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask;
      19: invokevirtual #36                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask.get:()Ljava/lang/Object;
      22: areturn

  public V get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field skipped:Z
       4: ifeq          15
       7: new           #34                 // class javax/enterprise/concurrent/SkippedException
      10: dup
      11: invokespecial #35                 // Method javax/enterprise/concurrent/SkippedException."<init>":()V
      14: athrow
      15: aload_0
      16: invokespecial #31                 // Method getCurrentFuture:()Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask;
      19: lload_1
      20: aload_3
      21: invokevirtual #37                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      24: areturn

  boolean skipRun(java.util.Date);
    Code:
       0: aload_0
       1: getfield      #6                  // Field trigger:Ljavax/enterprise/concurrent/Trigger;
       4: aload_0
       5: getfield      #16                 // Field lastExecution:Ljavax/enterprise/concurrent/LastExecution;
       8: aload_1
       9: invokeinterface #38,  3           // InterfaceMethod javax/enterprise/concurrent/Trigger.skipRun:(Ljavax/enterprise/concurrent/LastExecution;Ljava/util/Date;)Z
      14: istore_2
      15: iload_2
      16: ifeq          23
      19: aload_0
      20: invokespecial #12                 // Method scheduleNextRun:()V
      23: aload_0
      24: iload_2
      25: putfield      #33                 // Field skipped:Z
      28: iload_2
      29: ireturn

  void doneExecution(V, long, long, long);
    Code:
       0: aload_0
       1: new           #39                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture$LastExecutionImpl
       4: dup
       5: aload_0
       6: aload_1
       7: lload_2
       8: lload         4
      10: lload         6
      12: invokespecial #40                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture$LastExecutionImpl."<init>":(Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture;Ljava/lang/Object;JJJ)V
      15: putfield      #16                 // Field lastExecution:Ljavax/enterprise/concurrent/LastExecution;
      18: aload_0
      19: invokespecial #12                 // Method scheduleNextRun:()V
      22: return

  public long getDelay(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method getCurrentFuture:()Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask;
       4: aload_1
       5: invokevirtual #41                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask.getDelay:(Ljava/util/concurrent/TimeUnit;)J
       8: lreturn

  public int compareTo(java.util.concurrent.Delayed);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method getCurrentFuture:()Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask;
       4: aload_1
       5: invokevirtual #42                 // Method org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask.compareTo:(Ljava/util/concurrent/Delayed;)I
       8: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #43                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture
       4: ifeq          24
       7: aload_0
       8: aload_1
       9: checkcast     #43                 // class org/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$TriggerControllerFuture
      12: invokevirtual #44                 // Method compareTo:(Ljava/util/concurrent/Delayed;)I
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: iconst_0
      25: ireturn

  private org.glassfish.enterprise.concurrent.internal.ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask<V> getCurrentFuture();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #28                 // Field currentFuture:Lorg/glassfish/enterprise/concurrent/internal/ManagedScheduledThreadPoolExecutor$ManagedTriggerSingleFutureTask;
      11: astore_1
      12: aload_0
      13: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: aload_1
      20: areturn
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           0    12    21   any
          21    22    21   any

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class java/util/concurrent/Delayed
       5: invokevirtual #44                 // Method compareTo:(Ljava/util/concurrent/Delayed;)I
       8: ireturn
}
