Compiled from "ManagedFutureTask.java"
public class org.glassfish.enterprise.concurrent.internal.ManagedFutureTask<V> extends java.util.concurrent.FutureTask<V> implements java.util.concurrent.Future<V> {
  protected final org.glassfish.enterprise.concurrent.AbstractManagedExecutorService executor;

  protected final javax.enterprise.concurrent.ManagedTaskListener taskListener;

  protected org.glassfish.enterprise.concurrent.spi.ContextHandle contextHandleForSetup;

  protected org.glassfish.enterprise.concurrent.spi.ContextHandle contextHandleForReset;

  protected java.lang.Object task;

  protected java.lang.Throwable taskRunThrowable;

  protected org.glassfish.enterprise.concurrent.internal.TaskDoneCallback taskDoneCallback;

  final boolean isContextualCallback;

  java.lang.IllegalStateException contextSetupException;

  public org.glassfish.enterprise.concurrent.internal.ManagedFutureTask(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.lang.Runnable, V);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #1                  // Method java/util/concurrent/FutureTask."<init>":(Ljava/lang/Runnable;Ljava/lang/Object;)V
       6: aload_0
       7: aconst_null
       8: putfield      #2                  // Field contextHandleForSetup:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      11: aload_0
      12: aconst_null
      13: putfield      #3                  // Field contextHandleForReset:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      16: aload_0
      17: aconst_null
      18: putfield      #4                  // Field contextSetupException:Ljava/lang/IllegalStateException;
      21: aload_0
      22: aload_2
      23: putfield      #5                  // Field task:Ljava/lang/Object;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      31: aload_0
      32: aload_0
      33: aload_0
      34: getfield      #5                  // Field task:Ljava/lang/Object;
      37: invokespecial #7                  // Method getManagedTaskListener:(Ljava/lang/Object;)Ljavax/enterprise/concurrent/ManagedTaskListener;
      40: putfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      43: aload_0
      44: aload_0
      45: aload_0
      46: getfield      #5                  // Field task:Ljava/lang/Object;
      49: invokespecial #9                  // Method isTaskContextualCallback:(Ljava/lang/Object;)Z
      52: ifne          62
      55: aload_1
      56: invokevirtual #10                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.isContextualCallback:()Z
      59: ifeq          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: putfield      #11                 // Field isContextualCallback:Z
      70: aload_0
      71: aload_1
      72: invokevirtual #12                 // Method captureContext:(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;)V
      75: return

  public org.glassfish.enterprise.concurrent.internal.ManagedFutureTask(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService, java.util.concurrent.Callable);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #13                 // Method java/util/concurrent/FutureTask."<init>":(Ljava/util/concurrent/Callable;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field contextHandleForSetup:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field contextHandleForReset:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      15: aload_0
      16: aconst_null
      17: putfield      #4                  // Field contextSetupException:Ljava/lang/IllegalStateException;
      20: aload_0
      21: aload_2
      22: putfield      #5                  // Field task:Ljava/lang/Object;
      25: aload_0
      26: aload_1
      27: putfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      30: aload_0
      31: aload_0
      32: aload_0
      33: getfield      #5                  // Field task:Ljava/lang/Object;
      36: invokespecial #7                  // Method getManagedTaskListener:(Ljava/lang/Object;)Ljavax/enterprise/concurrent/ManagedTaskListener;
      39: putfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      42: aload_0
      43: aload_0
      44: aload_0
      45: getfield      #5                  // Field task:Ljava/lang/Object;
      48: invokespecial #9                  // Method isTaskContextualCallback:(Ljava/lang/Object;)Z
      51: ifne          61
      54: aload_1
      55: invokevirtual #10                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.isContextualCallback:()Z
      58: ifeq          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: putfield      #11                 // Field isContextualCallback:Z
      69: aload_0
      70: aload_1
      71: invokevirtual #12                 // Method captureContext:(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;)V
      74: return

  private javax.enterprise.concurrent.ManagedTaskListener getManagedTaskListener(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #14                 // class javax/enterprise/concurrent/ManagedTask
       4: ifeq          17
       7: aload_1
       8: checkcast     #14                 // class javax/enterprise/concurrent/ManagedTask
      11: invokeinterface #15,  1           // InterfaceMethod javax/enterprise/concurrent/ManagedTask.getManagedTaskListener:()Ljavax/enterprise/concurrent/ManagedTaskListener;
      16: areturn
      17: aconst_null
      18: areturn

  private boolean isTaskContextualCallback(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  protected final void captureContext(org.glassfish.enterprise.concurrent.AbstractManagedExecutorService);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getContextSetupProvider:()Lorg/glassfish/enterprise/concurrent/spi/ContextSetupProvider;
       4: astore_2
       5: aload_1
       6: invokevirtual #17                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getContextService:()Ljavax/enterprise/concurrent/ContextService;
       9: astore_3
      10: aload_3
      11: ifnull        29
      14: aload_2
      15: ifnull        29
      18: aload_0
      19: aload_2
      20: aload_3
      21: invokeinterface #18,  2           // InterfaceMethod org/glassfish/enterprise/concurrent/spi/ContextSetupProvider.saveContext:(Ljavax/enterprise/concurrent/ContextService;)Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      26: putfield      #2                  // Field contextHandleForSetup:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      29: return

  public void setupContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
       4: invokevirtual #16                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getContextSetupProvider:()Lorg/glassfish/enterprise/concurrent/spi/ContextSetupProvider;
       7: astore_1
       8: aload_1
       9: ifnull        35
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field contextHandleForSetup:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      18: invokeinterface #19,  2           // InterfaceMethod org/glassfish/enterprise/concurrent/spi/ContextSetupProvider.setup:(Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;)Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      23: putfield      #3                  // Field contextHandleForReset:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      26: goto          35
      29: astore_2
      30: aload_0
      31: aload_2
      32: putfield      #4                  // Field contextSetupException:Ljava/lang/IllegalStateException;
      35: return
    Exception table:
       from    to  target type
          12    26    29   Class java/lang/IllegalStateException

  public void resetContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field contextSetupException:Ljava/lang/IllegalStateException;
       4: ifnonnull     29
       7: aload_0
       8: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      11: invokevirtual #16                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getContextSetupProvider:()Lorg/glassfish/enterprise/concurrent/spi/ContextSetupProvider;
      14: astore_1
      15: aload_1
      16: ifnull        29
      19: aload_1
      20: aload_0
      21: getfield      #3                  // Field contextHandleForReset:Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;
      24: invokeinterface #21,  2           // InterfaceMethod org/glassfish/enterprise/concurrent/spi/ContextSetupProvider.reset:(Lorg/glassfish/enterprise/concurrent/spi/ContextHandle;)V
      29: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field contextSetupException:Ljava/lang/IllegalStateException;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #22                 // Method java/util/concurrent/FutureTask.run:()V
      11: goto          63
      14: new           #23                 // class javax/enterprise/concurrent/AbortedException
      17: dup
      18: aload_0
      19: getfield      #4                  // Field contextSetupException:Ljava/lang/IllegalStateException;
      22: invokevirtual #24                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
      25: invokespecial #25                 // Method javax/enterprise/concurrent/AbortedException."<init>":(Ljava/lang/String;)V
      28: astore_1
      29: aload_0
      30: aload_1
      31: invokevirtual #26                 // Method setException:(Ljava/lang/Throwable;)V
      34: aload_0
      35: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      38: ifnull        63
      41: aload_0
      42: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      45: aload_0
      46: aload_0
      47: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      50: invokevirtual #27                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getExecutorForTaskListener:()Ljavax/enterprise/concurrent/ManagedExecutorService;
      53: aload_0
      54: getfield      #5                  // Field task:Ljava/lang/Object;
      57: aload_1
      58: invokeinterface #28,  5           // InterfaceMethod javax/enterprise/concurrent/ManagedTaskListener.taskAborted:(Ljava/util/concurrent/Future;Ljavax/enterprise/concurrent/ManagedExecutorService;Ljava/lang/Object;Ljava/lang/Throwable;)V
      63: return

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #29                 // Method java/util/concurrent/FutureTask.cancel:(Z)Z
       5: istore_2
       6: iload_2
       7: ifeq          84
      10: aload_0
      11: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      14: ifnull        84
      17: aload_0
      18: getfield      #11                 // Field isContextualCallback:Z
      21: ifeq          28
      24: aload_0
      25: invokevirtual #30                 // Method setupContext:()V
      28: aload_0
      29: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      32: aload_0
      33: aload_0
      34: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      37: invokevirtual #27                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getExecutorForTaskListener:()Ljavax/enterprise/concurrent/ManagedExecutorService;
      40: aload_0
      41: getfield      #5                  // Field task:Ljava/lang/Object;
      44: new           #31                 // class java/util/concurrent/CancellationException
      47: dup
      48: invokespecial #32                 // Method java/util/concurrent/CancellationException."<init>":()V
      51: invokeinterface #28,  5           // InterfaceMethod javax/enterprise/concurrent/ManagedTaskListener.taskAborted:(Ljava/util/concurrent/Future;Ljavax/enterprise/concurrent/ManagedExecutorService;Ljava/lang/Object;Ljava/lang/Throwable;)V
      56: aload_0
      57: getfield      #11                 // Field isContextualCallback:Z
      60: ifeq          84
      63: aload_0
      64: invokevirtual #33                 // Method resetContext:()V
      67: goto          84
      70: astore_3
      71: aload_0
      72: getfield      #11                 // Field isContextualCallback:Z
      75: ifeq          82
      78: aload_0
      79: invokevirtual #33                 // Method resetContext:()V
      82: aload_3
      83: athrow
      84: iload_2
      85: ireturn
    Exception table:
       from    to  target type
          17    56    70   any
          70    71    70   any

  public void submitted();
    Code:
       0: aload_0
       1: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
       4: ifnull        67
       7: aload_0
       8: getfield      #11                 // Field isContextualCallback:Z
      11: ifeq          18
      14: aload_0
      15: invokevirtual #30                 // Method setupContext:()V
      18: aload_0
      19: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      22: aload_0
      23: aload_0
      24: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      27: invokevirtual #27                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getExecutorForTaskListener:()Ljavax/enterprise/concurrent/ManagedExecutorService;
      30: aload_0
      31: getfield      #5                  // Field task:Ljava/lang/Object;
      34: invokeinterface #34,  4           // InterfaceMethod javax/enterprise/concurrent/ManagedTaskListener.taskSubmitted:(Ljava/util/concurrent/Future;Ljavax/enterprise/concurrent/ManagedExecutorService;Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #11                 // Field isContextualCallback:Z
      43: ifeq          67
      46: aload_0
      47: invokevirtual #33                 // Method resetContext:()V
      50: goto          67
      53: astore_1
      54: aload_0
      55: getfield      #11                 // Field isContextualCallback:Z
      58: ifeq          65
      61: aload_0
      62: invokevirtual #33                 // Method resetContext:()V
      65: aload_1
      66: athrow
      67: return
    Exception table:
       from    to  target type
           7    39    53   any
          53    54    53   any

  protected void done();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method java/util/concurrent/FutureTask.done:()V
       4: aload_0
       5: getfield      #36                 // Field taskDoneCallback:Lorg/glassfish/enterprise/concurrent/internal/TaskDoneCallback;
       8: ifnull        21
      11: aload_0
      12: getfield      #36                 // Field taskDoneCallback:Lorg/glassfish/enterprise/concurrent/internal/TaskDoneCallback;
      15: aload_0
      16: invokeinterface #37,  2           // InterfaceMethod org/glassfish/enterprise/concurrent/internal/TaskDoneCallback.taskDone:(Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;)V
      21: aload_0
      22: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      25: ifnull        102
      28: aload_0
      29: invokevirtual #38                 // Method isCancelled:()Z
      32: ifeq          102
      35: aload_0
      36: getfield      #11                 // Field isContextualCallback:Z
      39: ifeq          46
      42: aload_0
      43: invokevirtual #30                 // Method setupContext:()V
      46: aload_0
      47: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      50: aload_0
      51: aload_0
      52: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      55: invokevirtual #27                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getExecutorForTaskListener:()Ljavax/enterprise/concurrent/ManagedExecutorService;
      58: aload_0
      59: getfield      #5                  // Field task:Ljava/lang/Object;
      62: new           #31                 // class java/util/concurrent/CancellationException
      65: dup
      66: invokespecial #32                 // Method java/util/concurrent/CancellationException."<init>":()V
      69: invokeinterface #39,  5           // InterfaceMethod javax/enterprise/concurrent/ManagedTaskListener.taskDone:(Ljava/util/concurrent/Future;Ljavax/enterprise/concurrent/ManagedExecutorService;Ljava/lang/Object;Ljava/lang/Throwable;)V
      74: aload_0
      75: getfield      #11                 // Field isContextualCallback:Z
      78: ifeq          102
      81: aload_0
      82: invokevirtual #33                 // Method resetContext:()V
      85: goto          102
      88: astore_1
      89: aload_0
      90: getfield      #11                 // Field isContextualCallback:Z
      93: ifeq          100
      96: aload_0
      97: invokevirtual #33                 // Method resetContext:()V
     100: aload_1
     101: athrow
     102: return
    Exception table:
       from    to  target type
          35    74    88   any
          88    89    88   any

  protected void setException(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method java/util/concurrent/FutureTask.setException:(Ljava/lang/Throwable;)V
       5: aload_0
       6: aload_1
       7: putfield      #41                 // Field taskRunThrowable:Ljava/lang/Throwable;
      10: return

  public void starting(java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
       4: invokevirtual #42                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getManagedThreadFactory:()Lorg/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl;
       7: ifnull        22
      10: aload_0
      11: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      14: invokevirtual #42                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getManagedThreadFactory:()Lorg/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl;
      17: aload_1
      18: aload_0
      19: invokevirtual #43                 // Method org/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl.taskStarting:(Ljava/lang/Thread;Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;)V
      22: aload_0
      23: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      26: ifnull        50
      29: aload_0
      30: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      33: aload_0
      34: aload_0
      35: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      38: invokevirtual #27                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getExecutorForTaskListener:()Ljavax/enterprise/concurrent/ManagedExecutorService;
      41: aload_0
      42: getfield      #5                  // Field task:Ljava/lang/Object;
      45: invokeinterface #44,  4           // InterfaceMethod javax/enterprise/concurrent/ManagedTaskListener.taskStarting:(Ljava/util/concurrent/Future;Ljavax/enterprise/concurrent/ManagedExecutorService;Ljava/lang/Object;)V
      50: return

  public void done(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
       4: invokevirtual #42                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getManagedThreadFactory:()Lorg/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl;
       7: ifnull        23
      10: aload_0
      11: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      14: invokevirtual #42                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getManagedThreadFactory:()Lorg/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl;
      17: invokestatic  #45                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      20: invokevirtual #46                 // Method org/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl.taskDone:(Ljava/lang/Thread;)V
      23: aload_0
      24: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      27: ifnull        63
      30: aload_0
      31: getfield      #8                  // Field taskListener:Ljavax/enterprise/concurrent/ManagedTaskListener;
      34: aload_0
      35: aload_0
      36: getfield      #6                  // Field executor:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;
      39: invokevirtual #27                 // Method org/glassfish/enterprise/concurrent/AbstractManagedExecutorService.getExecutorForTaskListener:()Ljavax/enterprise/concurrent/ManagedExecutorService;
      42: aload_0
      43: getfield      #5                  // Field task:Ljava/lang/Object;
      46: aload_1
      47: ifnull        54
      50: aload_1
      51: goto          58
      54: aload_0
      55: getfield      #41                 // Field taskRunThrowable:Ljava/lang/Throwable;
      58: invokeinterface #39,  5           // InterfaceMethod javax/enterprise/concurrent/ManagedTaskListener.taskDone:(Ljava/util/concurrent/Future;Ljavax/enterprise/concurrent/ManagedExecutorService;Ljava/lang/Object;Ljava/lang/Throwable;)V
      63: return

  public void setTaskDoneCallback(org.glassfish.enterprise.concurrent.internal.TaskDoneCallback);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field taskDoneCallback:Lorg/glassfish/enterprise/concurrent/internal/TaskDoneCallback;
       5: return

  public java.lang.String getTaskIdentityName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field task:Ljava/lang/Object;
       4: instanceof    #14                 // class javax/enterprise/concurrent/ManagedTask
       7: ifeq          45
      10: aload_0
      11: getfield      #5                  // Field task:Ljava/lang/Object;
      14: checkcast     #14                 // class javax/enterprise/concurrent/ManagedTask
      17: invokeinterface #47,  1           // InterfaceMethod javax/enterprise/concurrent/ManagedTask.getExecutionProperties:()Ljava/util/Map;
      22: astore_1
      23: aload_1
      24: ifnull        45
      27: aload_1
      28: ldc           #48                 // String javax.enterprise.concurrent.IDENTITY_NAME
      30: invokeinterface #49,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #50                 // class java/lang/String
      38: astore_2
      39: aload_2
      40: ifnull        45
      43: aload_2
      44: areturn
      45: aload_0
      46: getfield      #5                  // Field task:Ljava/lang/Object;
      49: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      52: areturn
}
