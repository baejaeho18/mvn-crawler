Compiled from "AbstractManagedExecutorService.java"
public abstract class org.glassfish.enterprise.concurrent.AbstractManagedExecutorService extends java.util.concurrent.AbstractExecutorService implements javax.enterprise.concurrent.ManagedExecutorService {
  protected final java.lang.String name;

  protected final org.glassfish.enterprise.concurrent.spi.ContextSetupProvider contextSetupProvider;

  protected final org.glassfish.enterprise.concurrent.ContextServiceImpl contextService;

  protected final org.glassfish.enterprise.concurrent.ManagedThreadFactoryImpl managedThreadFactory;

  protected org.glassfish.enterprise.concurrent.AbstractManagedExecutorService$RejectPolicy rejectPolicy;

  protected final boolean contextualCallback;

  protected boolean longRunningTasks;

  static final boolean $assertionsDisabled;

  public org.glassfish.enterprise.concurrent.AbstractManagedExecutorService(java.lang.String, org.glassfish.enterprise.concurrent.ManagedThreadFactoryImpl, long, boolean, org.glassfish.enterprise.concurrent.ContextServiceImpl, org.glassfish.enterprise.concurrent.spi.ContextSetupProvider, org.glassfish.enterprise.concurrent.AbstractManagedExecutorService$RejectPolicy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/AbstractExecutorService."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload         7
      12: putfield      #3                  // Field contextSetupProvider:Lorg/glassfish/enterprise/concurrent/spi/ContextSetupProvider;
      15: aload_0
      16: aload         6
      18: putfield      #4                  // Field contextService:Lorg/glassfish/enterprise/concurrent/ContextServiceImpl;
      21: aload_0
      22: aload         8
      24: putfield      #5                  // Field rejectPolicy:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService$RejectPolicy;
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field contextualCallback:Z
      32: aload_0
      33: iload         5
      35: putfield      #7                  // Field longRunningTasks:Z
      38: aload_2
      39: ifnonnull     71
      42: new           #8                  // class org/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl
      45: dup
      46: new           #9                  // class java/lang/StringBuilder
      49: dup
      50: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      53: aload_1
      54: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #12                 // String -ManagedThreadFactory
      59: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: aconst_null
      66: iconst_5
      67: invokespecial #14                 // Method org/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl."<init>":(Ljava/lang/String;Lorg/glassfish/enterprise/concurrent/ContextServiceImpl;I)V
      70: astore_2
      71: aload_2
      72: lload_3
      73: invokevirtual #15                 // Method org/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl.setHungTaskThreshold:(J)V
      76: aload_0
      77: aload_2
      78: putfield      #16                 // Field managedThreadFactory:Lorg/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl;
      81: return

  protected <T> T doInvokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, boolean, long) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #18                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_1
      13: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.size:()I
      18: istore        5
      20: iload         5
      22: ifne          33
      25: new           #20                 // class java/lang/IllegalArgumentException
      28: dup
      29: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":()V
      32: athrow
      33: new           #22                 // class java/util/ArrayList
      36: dup
      37: iload         5
      39: invokespecial #23                 // Method java/util/ArrayList."<init>":(I)V
      42: astore        6
      44: new           #24                 // class org/glassfish/enterprise/concurrent/ManagedExecutorCompletionService
      47: dup
      48: aload_0
      49: invokespecial #25                 // Method org/glassfish/enterprise/concurrent/ManagedExecutorCompletionService."<init>":(Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService;)V
      52: astore        7
      54: aconst_null
      55: astore        8
      57: iload_2
      58: ifeq          67
      61: invokestatic  #26                 // Method java/lang/System.nanoTime:()J
      64: goto          68
      67: lconst_0
      68: lstore        9
      70: aload_1
      71: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      76: astore        11
      78: aload         6
      80: aload         7
      82: aload         11
      84: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #29                 // class java/util/concurrent/Callable
      92: invokevirtual #30                 // Method org/glassfish/enterprise/concurrent/ManagedExecutorCompletionService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      95: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     100: pop
     101: iinc          5, -1
     104: iconst_1
     105: istore        12
     107: aload         7
     109: invokevirtual #32                 // Method org/glassfish/enterprise/concurrent/ManagedExecutorCompletionService.poll:()Ljava/util/concurrent/Future;
     112: astore        13
     114: aload         13
     116: ifnonnull     219
     119: iload         5
     121: ifle          156
     124: iinc          5, -1
     127: aload         6
     129: aload         7
     131: aload         11
     133: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #29                 // class java/util/concurrent/Callable
     141: invokevirtual #30                 // Method org/glassfish/enterprise/concurrent/ManagedExecutorCompletionService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
     144: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     149: pop
     150: iinc          12, 1
     153: goto          219
     156: iload         12
     158: ifne          164
     161: goto          307
     164: iload_2
     165: ifeq          212
     168: aload         7
     170: lload_3
     171: getstatic     #33                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     174: invokevirtual #34                 // Method org/glassfish/enterprise/concurrent/ManagedExecutorCompletionService.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
     177: astore        13
     179: aload         13
     181: ifnonnull     192
     184: new           #35                 // class java/util/concurrent/TimeoutException
     187: dup
     188: invokespecial #36                 // Method java/util/concurrent/TimeoutException."<init>":()V
     191: athrow
     192: invokestatic  #26                 // Method java/lang/System.nanoTime:()J
     195: lstore        14
     197: lload_3
     198: lload         14
     200: lload         9
     202: lsub
     203: lsub
     204: lstore_3
     205: lload         14
     207: lstore        9
     209: goto          219
     212: aload         7
     214: invokevirtual #37                 // Method org/glassfish/enterprise/concurrent/ManagedExecutorCompletionService.take:()Ljava/util/concurrent/Future;
     217: astore        13
     219: aload         13
     221: ifnull        304
     224: iinc          12, -1
     227: aload         13
     229: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
     234: astore        14
     236: aload         6
     238: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     243: astore        15
     245: aload         15
     247: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     252: ifeq          279
     255: aload         15
     257: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     262: checkcast     #41                 // class java/util/concurrent/Future
     265: astore        16
     267: aload         16
     269: iconst_1
     270: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     275: pop
     276: goto          245
     279: aload         14
     281: areturn
     282: astore        14
     284: aload         14
     286: astore        8
     288: goto          304
     291: astore        14
     293: new           #43                 // class java/util/concurrent/ExecutionException
     296: dup
     297: aload         14
     299: invokespecial #45                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
     302: astore        8
     304: goto          107
     307: aload         8
     309: ifnonnull     322
     312: new           #43                 // class java/util/concurrent/ExecutionException
     315: dup
     316: aconst_null
     317: invokespecial #45                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
     320: astore        8
     322: aload         8
     324: athrow
     325: astore        17
     327: aload         6
     329: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     334: astore        18
     336: aload         18
     338: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     343: ifeq          370
     346: aload         18
     348: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     353: checkcast     #41                 // class java/util/concurrent/Future
     356: astore        19
     358: aload         19
     360: iconst_1
     361: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     366: pop
     367: goto          336
     370: aload         17
     372: athrow
    Exception table:
       from    to  target type
         227   236   282   Class java/util/concurrent/ExecutionException
         227   236   291   Class java/lang/RuntimeException
          54   236   325   any
         282   327   325   any

  public org.glassfish.enterprise.concurrent.spi.ContextSetupProvider getContextSetupProvider();
    Code:
       0: aload_0
       1: getfield      #3                  // Field contextSetupProvider:Lorg/glassfish/enterprise/concurrent/spi/ContextSetupProvider;
       4: areturn

  public javax.enterprise.concurrent.ContextService getContextService();
    Code:
       0: aload_0
       1: getfield      #4                  // Field contextService:Lorg/glassfish/enterprise/concurrent/ContextServiceImpl;
       4: areturn

  public boolean isContextualCallback();
    Code:
       0: aload_0
       1: getfield      #6                  // Field contextualCallback:Z
       4: ireturn

  public java.util.Collection<org.glassfish.enterprise.concurrent.AbstractManagedThread> getHungThreads();
    Code:
       0: aload_0
       1: getfield      #7                  // Field longRunningTasks:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aconst_null
      10: astore_1
      11: aload_0
      12: invokevirtual #46                 // Method getThreads:()Ljava/util/Collection;
      15: astore_2
      16: aload_2
      17: ifnull        87
      20: invokestatic  #47                 // Method java/lang/System.currentTimeMillis:()J
      23: lstore_3
      24: aload_2
      25: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      30: astore        5
      32: aload         5
      34: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          87
      42: aload         5
      44: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #49                 // class org/glassfish/enterprise/concurrent/AbstractManagedThread
      52: astore        6
      54: aload         6
      56: lload_3
      57: invokevirtual #50                 // Method org/glassfish/enterprise/concurrent/AbstractManagedThread.isTaskHung:(J)Z
      60: ifeq          84
      63: aload_1
      64: ifnonnull     75
      67: new           #22                 // class java/util/ArrayList
      70: dup
      71: invokespecial #51                 // Method java/util/ArrayList."<init>":()V
      74: astore_1
      75: aload_1
      76: aload         6
      78: invokeinterface #52,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          32
      87: aload_1
      88: areturn

  public org.glassfish.enterprise.concurrent.ManagedThreadFactoryImpl getManagedThreadFactory();
    Code:
       0: aload_0
       1: getfield      #16                 // Field managedThreadFactory:Lorg/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean isLongRunningTasks();
    Code:
       0: aload_0
       1: getfield      #7                  // Field longRunningTasks:Z
       4: ireturn

  public org.glassfish.enterprise.concurrent.AbstractManagedExecutorService$RejectPolicy getRejectPolicy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rejectPolicy:Lorg/glassfish/enterprise/concurrent/AbstractManagedExecutorService$RejectPolicy;
       4: areturn

  public java.lang.String getObjectName();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Collection<org.glassfish.enterprise.concurrent.AbstractManagedThread> getThreads();
    Code:
       0: aload_0
       1: getfield      #16                 // Field managedThreadFactory:Lorg/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl;
       4: invokevirtual #53                 // Method org/glassfish/enterprise/concurrent/ManagedThreadFactoryImpl.getThreads:()Ljava/util/Collection;
       7: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #18                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: new           #22                 // class java/util/ArrayList
      15: dup
      16: aload_1
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.size:()I
      22: invokespecial #23                 // Method java/util/ArrayList."<init>":(I)V
      25: astore_2
      26: iconst_0
      27: istore_3
      28: aload_1
      29: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      34: astore        4
      36: aload         4
      38: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          84
      46: aload         4
      48: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #29                 // class java/util/concurrent/Callable
      56: astore        5
      58: aload_0
      59: aload         5
      61: invokevirtual #54                 // Method getNewTaskFor:(Ljava/util/concurrent/Callable;)Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;
      64: astore        6
      66: aload_2
      67: aload         6
      69: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: aload         6
      78: invokevirtual #55                 // Method executeManagedFutureTask:(Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;)V
      81: goto          36
      84: aload_2
      85: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      90: astore        4
      92: aload         4
      94: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          145
     102: aload         4
     104: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #41                 // class java/util/concurrent/Future
     112: astore        5
     114: aload         5
     116: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
     121: ifne          142
     124: aload         5
     126: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
     131: pop
     132: goto          142
     135: astore        6
     137: goto          142
     140: astore        6
     142: goto          92
     145: iconst_1
     146: istore_3
     147: aload_2
     148: astore        4
     150: iload_3
     151: ifne          196
     154: aload_2
     155: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     160: astore        5
     162: aload         5
     164: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     169: ifeq          196
     172: aload         5
     174: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     179: checkcast     #41                 // class java/util/concurrent/Future
     182: astore        6
     184: aload         6
     186: iconst_1
     187: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     192: pop
     193: goto          162
     196: aload         4
     198: areturn
     199: astore        7
     201: iload_3
     202: ifne          247
     205: aload_2
     206: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     211: astore        8
     213: aload         8
     215: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     220: ifeq          247
     223: aload         8
     225: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #41                 // class java/util/concurrent/Future
     233: astore        9
     235: aload         9
     237: iconst_1
     238: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     243: pop
     244: goto          213
     247: aload         7
     249: athrow
    Exception table:
       from    to  target type
         124   132   135   Class java/util/concurrent/CancellationException
         124   132   140   Class java/util/concurrent/ExecutionException
          28   150   199   any
         199   201   199   any

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ifnull        9
       4: aload         4
       6: ifnonnull     17
       9: new           #17                 // class java/lang/NullPointerException
      12: dup
      13: invokespecial #18                 // Method java/lang/NullPointerException."<init>":()V
      16: athrow
      17: aload         4
      19: lload_2
      20: invokevirtual #58                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      23: lstore        5
      25: new           #22                 // class java/util/ArrayList
      28: dup
      29: aload_1
      30: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.size:()I
      35: invokespecial #23                 // Method java/util/ArrayList."<init>":(I)V
      38: astore        7
      40: iconst_0
      41: istore        8
      43: aload_1
      44: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      49: astore        9
      51: aload         9
      53: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          90
      61: aload         9
      63: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #29                 // class java/util/concurrent/Callable
      71: astore        10
      73: aload         7
      75: aload_0
      76: aload         10
      78: invokevirtual #54                 // Method getNewTaskFor:(Ljava/util/concurrent/Callable;)Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;
      81: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      86: pop
      87: goto          51
      90: invokestatic  #26                 // Method java/lang/System.nanoTime:()J
      93: lstore        9
      95: aload         7
      97: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     102: astore        11
     104: aload         11
     106: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          215
     114: aload_0
     115: aload         11
     117: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #60                 // class org/glassfish/enterprise/concurrent/internal/ManagedFutureTask
     125: checkcast     #60                 // class org/glassfish/enterprise/concurrent/internal/ManagedFutureTask
     128: invokevirtual #55                 // Method executeManagedFutureTask:(Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;)V
     131: invokestatic  #26                 // Method java/lang/System.nanoTime:()J
     134: lstore        12
     136: lload         5
     138: lload         12
     140: lload         9
     142: lsub
     143: lsub
     144: lstore        5
     146: lload         12
     148: lstore        9
     150: lload         5
     152: lconst_0
     153: lcmp
     154: ifgt          212
     157: aload         7
     159: astore        14
     161: iload         8
     163: ifne          209
     166: aload         7
     168: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     173: astore        15
     175: aload         15
     177: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     182: ifeq          209
     185: aload         15
     187: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     192: checkcast     #41                 // class java/util/concurrent/Future
     195: astore        16
     197: aload         16
     199: iconst_1
     200: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     205: pop
     206: goto          175
     209: aload         14
     211: areturn
     212: goto          104
     215: aload         7
     217: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     222: astore        12
     224: aload         12
     226: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     231: ifeq          423
     234: aload         12
     236: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     241: checkcast     #41                 // class java/util/concurrent/Future
     244: astore        13
     246: aload         13
     248: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
     253: ifne          420
     256: lload         5
     258: lconst_0
     259: lcmp
     260: ifgt          318
     263: aload         7
     265: astore        14
     267: iload         8
     269: ifne          315
     272: aload         7
     274: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     279: astore        15
     281: aload         15
     283: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     288: ifeq          315
     291: aload         15
     293: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     298: checkcast     #41                 // class java/util/concurrent/Future
     301: astore        16
     303: aload         16
     305: iconst_1
     306: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     311: pop
     312: goto          281
     315: aload         14
     317: areturn
     318: aload         13
     320: lload         5
     322: getstatic     #33                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     325: invokeinterface #61,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
     330: pop
     331: goto          401
     334: astore        14
     336: goto          401
     339: astore        14
     341: goto          401
     344: astore        14
     346: aload         7
     348: astore        15
     350: iload         8
     352: ifne          398
     355: aload         7
     357: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     362: astore        16
     364: aload         16
     366: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     371: ifeq          398
     374: aload         16
     376: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     381: checkcast     #41                 // class java/util/concurrent/Future
     384: astore        17
     386: aload         17
     388: iconst_1
     389: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     394: pop
     395: goto          364
     398: aload         15
     400: areturn
     401: invokestatic  #26                 // Method java/lang/System.nanoTime:()J
     404: lstore        14
     406: lload         5
     408: lload         14
     410: lload         9
     412: lsub
     413: lsub
     414: lstore        5
     416: lload         14
     418: lstore        9
     420: goto          224
     423: iconst_1
     424: istore        8
     426: aload         7
     428: astore        12
     430: iload         8
     432: ifne          478
     435: aload         7
     437: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     442: astore        13
     444: aload         13
     446: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     451: ifeq          478
     454: aload         13
     456: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     461: checkcast     #41                 // class java/util/concurrent/Future
     464: astore        14
     466: aload         14
     468: iconst_1
     469: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     474: pop
     475: goto          444
     478: aload         12
     480: areturn
     481: astore        18
     483: iload         8
     485: ifne          531
     488: aload         7
     490: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     495: astore        19
     497: aload         19
     499: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     504: ifeq          531
     507: aload         19
     509: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     514: checkcast     #41                 // class java/util/concurrent/Future
     517: astore        20
     519: aload         20
     521: iconst_1
     522: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     527: pop
     528: goto          497
     531: aload         18
     533: athrow
    Exception table:
       from    to  target type
         318   331   334   Class java/util/concurrent/CancellationException
         318   331   339   Class java/util/concurrent/ExecutionException
         318   331   344   Class java/util/concurrent/TimeoutException
          43   161   481   any
         212   267   481   any
         318   350   481   any
         401   430   481   any
         481   483   481   any

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: lconst_0
       4: invokevirtual #62                 // Method doInvokeAny:(Ljava/util/Collection;ZJ)Ljava/lang/Object;
       7: areturn
       8: astore_2
       9: getstatic     #63                 // Field $assertionsDisabled:Z
      12: ifne          23
      15: new           #64                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #65                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aconst_null
      24: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/util/concurrent/TimeoutException

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload         4
       5: lload_2
       6: invokevirtual #58                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       9: invokevirtual #62                 // Method doInvokeAny:(Ljava/util/Collection;ZJ)Ljava/lang/Object;
      12: areturn

  public boolean isEventProvider();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isStateManageable();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isStatisticsProvider();
    Code:
       0: iconst_1
       1: ireturn

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #18                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: aconst_null
      15: invokevirtual #66                 // Method getNewTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;
      18: astore_2
      19: aload_0
      20: aload_2
      21: invokevirtual #55                 // Method executeManagedFutureTask:(Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;)V
      24: aload_2
      25: areturn

  public <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #18                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #66                 // Method getNewTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;
      18: astore_3
      19: aload_0
      20: aload_3
      21: invokevirtual #55                 // Method executeManagedFutureTask:(Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;)V
      24: aload_3
      25: areturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #18                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: invokevirtual #54                 // Method getNewTaskFor:(Ljava/util/concurrent/Callable;)Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;
      17: astore_2
      18: aload_0
      19: aload_2
      20: invokevirtual #55                 // Method executeManagedFutureTask:(Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;)V
      23: aload_2
      24: areturn

  protected abstract java.util.concurrent.ExecutorService getThreadPoolExecutor();

  public abstract void execute(java.lang.Runnable);

  protected void executeManagedFutureTask(org.glassfish.enterprise.concurrent.internal.ManagedFutureTask<?>);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.submitted:()V
       4: aload_0
       5: invokevirtual #68                 // Method getThreadPoolExecutor:()Ljava/util/concurrent/ExecutorService;
       8: aload_1
       9: invokeinterface #69,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      14: return

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getThreadPoolExecutor:()Ljava/util/concurrent/ExecutorService;
       4: lload_1
       5: aload_3
       6: invokeinterface #70,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getThreadPoolExecutor:()Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
       9: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getThreadPoolExecutor:()Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
       9: ireturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getThreadPoolExecutor:()Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #73,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
       9: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getThreadPoolExecutor:()Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #74,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       9: astore_1
      10: aload_1
      11: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          55
      26: aload_2
      27: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #75                 // class java/lang/Runnable
      35: astore_3
      36: aload_3
      37: instanceof    #60                 // class org/glassfish/enterprise/concurrent/internal/ManagedFutureTask
      40: ifeq          52
      43: aload_3
      44: checkcast     #60                 // class org/glassfish/enterprise/concurrent/internal/ManagedFutureTask
      47: iconst_1
      48: invokevirtual #76                 // Method org/glassfish/enterprise/concurrent/internal/ManagedFutureTask.cancel:(Z)Z
      51: pop
      52: goto          17
      55: aload_1
      56: areturn

  protected abstract <V> org.glassfish.enterprise.concurrent.internal.ManagedFutureTask<V> getNewTaskFor(java.lang.Runnable, V);

  protected abstract <V> org.glassfish.enterprise.concurrent.internal.ManagedFutureTask<V> getNewTaskFor(java.util.concurrent.Callable<V>);

  protected <T> java.util.concurrent.RunnableFuture<T> newTaskFor(java.lang.Runnable, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #66                 // Method getNewTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;
       6: areturn

  protected <T> java.util.concurrent.RunnableFuture<T> newTaskFor(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method getNewTaskFor:(Ljava/util/concurrent/Callable;)Lorg/glassfish/enterprise/concurrent/internal/ManagedFutureTask;
       5: areturn

  public abstract javax.enterprise.concurrent.ManagedExecutorService getExecutorForTaskListener();

  public abstract long getTaskCount();

  public abstract long getCompletedTaskCount();

  static {};
    Code:
       0: ldc_w         #77                 // class org/glassfish/enterprise/concurrent/AbstractManagedExecutorService
       3: invokevirtual #78                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #63                 // Field $assertionsDisabled:Z
      17: return
}
