Compiled from "Node.java"
public interface com.sun.el.parser.Node {
  public abstract void jjtOpen();

  public abstract void jjtClose();

  public abstract void jjtSetParent(com.sun.el.parser.Node);

  public abstract com.sun.el.parser.Node jjtGetParent();

  public abstract void jjtAddChild(com.sun.el.parser.Node, int);

  public abstract com.sun.el.parser.Node jjtGetChild(int);

  public abstract int jjtGetNumChildren();

  public abstract java.lang.String getImage();

  public abstract java.lang.Object getValue(com.sun.el.lang.EvaluationContext) throws javax.el.ELException;

  public abstract void setValue(com.sun.el.lang.EvaluationContext, java.lang.Object) throws javax.el.ELException;

  public abstract java.lang.Class getType(com.sun.el.lang.EvaluationContext) throws javax.el.ELException;

  public abstract javax.el.ValueReference getValueReference(com.sun.el.lang.EvaluationContext) throws javax.el.ELException;

  public abstract boolean isReadOnly(com.sun.el.lang.EvaluationContext) throws javax.el.ELException;

  public abstract void accept(com.sun.el.parser.NodeVisitor) throws javax.el.ELException;

  public abstract javax.el.MethodInfo getMethodInfo(com.sun.el.lang.EvaluationContext, java.lang.Class[]) throws javax.el.ELException;

  public abstract java.lang.Object invoke(com.sun.el.lang.EvaluationContext, java.lang.Class[], java.lang.Object[]) throws javax.el.ELException;

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();

  public abstract boolean isParametersProvided();
}
