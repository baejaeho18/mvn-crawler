Compiled from "AnnotationReader.java"
public interface com.sun.xml.bind.v2.model.annotation.AnnotationReader<T, C, F, M> {
  public abstract void setErrorHandler(com.sun.xml.bind.v2.model.core.ErrorHandler);

  public abstract <A extends java.lang.annotation.Annotation> A getFieldAnnotation(java.lang.Class<A>, F, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract boolean hasFieldAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>, F);

  public abstract boolean hasClassAnnotation(C, java.lang.Class<? extends java.lang.annotation.Annotation>);

  public abstract java.lang.annotation.Annotation[] getAllFieldAnnotations(F, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract <A extends java.lang.annotation.Annotation> A getMethodAnnotation(java.lang.Class<A>, M, M, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract boolean hasMethodAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.String, M, M, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract java.lang.annotation.Annotation[] getAllMethodAnnotations(M, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract <A extends java.lang.annotation.Annotation> A getMethodAnnotation(java.lang.Class<A>, M, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract boolean hasMethodAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>, M);

  public abstract <A extends java.lang.annotation.Annotation> A getMethodParameterAnnotation(java.lang.Class<A>, M, int, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract <A extends java.lang.annotation.Annotation> A getClassAnnotation(java.lang.Class<A>, C, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract <A extends java.lang.annotation.Annotation> A getPackageAnnotation(java.lang.Class<A>, C, com.sun.xml.bind.v2.model.annotation.Locatable);

  public abstract T getClassValue(java.lang.annotation.Annotation, java.lang.String);

  public abstract T[] getClassArrayValue(java.lang.annotation.Annotation, java.lang.String);
}
