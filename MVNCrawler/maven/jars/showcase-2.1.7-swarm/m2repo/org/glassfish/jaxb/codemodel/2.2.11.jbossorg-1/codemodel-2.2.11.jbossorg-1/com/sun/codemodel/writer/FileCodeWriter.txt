Compiled from "FileCodeWriter.java"
public class com.sun.codemodel.writer.FileCodeWriter extends com.sun.codemodel.CodeWriter {
  private final java.io.File target;

  private final boolean readOnly;

  private final java.util.Set<java.io.File> readonlyFiles;

  public com.sun.codemodel.writer.FileCodeWriter(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/io/File;Z)V
       6: return

  public com.sun.codemodel.writer.FileCodeWriter(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #2                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
       7: return

  public com.sun.codemodel.writer.FileCodeWriter(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #2                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
       7: return

  public com.sun.codemodel.writer.FileCodeWriter(java.io.File, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/sun/codemodel/CodeWriter."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashSet
       8: dup
       9: invokespecial #5                  // Method java/util/HashSet."<init>":()V
      12: putfield      #6                  // Field readonlyFiles:Ljava/util/Set;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field target:Ljava/io/File;
      20: aload_0
      21: iload_2
      22: putfield      #8                  // Field readOnly:Z
      25: aload_0
      26: aload_3
      27: putfield      #9                  // Field encoding:Ljava/lang/String;
      30: aload_1
      31: invokevirtual #10                 // Method java/io/File.exists:()Z
      34: ifeq          44
      37: aload_1
      38: invokevirtual #11                 // Method java/io/File.isDirectory:()Z
      41: ifne          71
      44: new           #12                 // class java/io/IOException
      47: dup
      48: new           #13                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      55: aload_1
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #16                 // String : non-existent directory
      61: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: return

  public java.io.OutputStream openBinary(com.sun.codemodel.JPackage, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #20                 // class java/io/FileOutputStream
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #21                 // Method getFile:(Lcom/sun/codemodel/JPackage;Ljava/lang/String;)Ljava/io/File;
      10: invokespecial #22                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      13: areturn

  protected java.io.File getFile(com.sun.codemodel.JPackage, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method com/sun/codemodel/JPackage.isUnnamed:()Z
       4: ifeq          15
       7: aload_0
       8: getfield      #7                  // Field target:Ljava/io/File;
      11: astore_3
      12: goto          31
      15: new           #24                 // class java/io/File
      18: dup
      19: aload_0
      20: getfield      #7                  // Field target:Ljava/io/File;
      23: aload_1
      24: invokestatic  #25                 // Method toDirName:(Lcom/sun/codemodel/JPackage;)Ljava/lang/String;
      27: invokespecial #26                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      30: astore_3
      31: aload_3
      32: invokevirtual #10                 // Method java/io/File.exists:()Z
      35: ifne          43
      38: aload_3
      39: invokevirtual #27                 // Method java/io/File.mkdirs:()Z
      42: pop
      43: new           #24                 // class java/io/File
      46: dup
      47: aload_3
      48: aload_2
      49: invokespecial #26                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      52: astore        4
      54: aload         4
      56: invokevirtual #10                 // Method java/io/File.exists:()Z
      59: ifeq          98
      62: aload         4
      64: invokevirtual #28                 // Method java/io/File.delete:()Z
      67: ifne          98
      70: new           #12                 // class java/io/IOException
      73: dup
      74: new           #13                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      81: aload         4
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #29                 // String : Can\'t delete previous version
      88: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: getfield      #8                  // Field readOnly:Z
     102: ifeq          117
     105: aload_0
     106: getfield      #6                  // Field readonlyFiles:Ljava/util/Set;
     109: aload         4
     111: invokeinterface #30,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     116: pop
     117: aload         4
     119: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field readonlyFiles:Ljava/util/Set;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          37
      19: aload_1
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #24                 // class java/io/File
      28: astore_2
      29: aload_2
      30: invokevirtual #34                 // Method java/io/File.setReadOnly:()Z
      33: pop
      34: goto          10
      37: return

  private static java.lang.String toDirName(com.sun.codemodel.JPackage);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method com/sun/codemodel/JPackage.name:()Ljava/lang/String;
       4: bipush        46
       6: getstatic     #36                 // Field java/io/File.separatorChar:C
       9: invokevirtual #37                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      12: areturn
}
