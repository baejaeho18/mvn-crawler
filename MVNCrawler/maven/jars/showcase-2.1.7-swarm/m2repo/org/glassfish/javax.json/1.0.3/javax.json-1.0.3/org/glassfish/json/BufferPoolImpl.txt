Compiled from "BufferPoolImpl.java"
class org.glassfish.json.BufferPoolImpl implements org.glassfish.json.api.BufferPool {
  private volatile java.lang.ref.WeakReference<java.util.concurrent.ConcurrentLinkedQueue<char[]>> queue;

  org.glassfish.json.BufferPoolImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public final char[] take();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method getQueue:()Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #3                  // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       7: checkcast     #4                  // class "[C"
      10: astore_1
      11: aload_1
      12: ifnonnull     21
      15: sipush        4096
      18: newarray       char
      20: areturn
      21: aload_1
      22: areturn

  private java.util.concurrent.ConcurrentLinkedQueue<char[]> getQueue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/lang/ref/WeakReference;
       4: astore_1
       5: aload_1
       6: ifnull        23
       9: aload_1
      10: invokevirtual #6                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      13: checkcast     #7                  // class java/util/concurrent/ConcurrentLinkedQueue
      16: astore_2
      17: aload_2
      18: ifnull        23
      21: aload_2
      22: areturn
      23: new           #7                  // class java/util/concurrent/ConcurrentLinkedQueue
      26: dup
      27: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      30: astore_2
      31: aload_0
      32: new           #9                  // class java/lang/ref/WeakReference
      35: dup
      36: aload_2
      37: invokespecial #10                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      40: putfield      #5                  // Field queue:Ljava/lang/ref/WeakReference;
      43: aload_2
      44: areturn

  public final void recycle(char[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method getQueue:()Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #11                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
       8: pop
       9: return
}
