Compiled from "JsonTokenizer.java"
final class org.glassfish.json.JsonTokenizer$JsonToken extends java.lang.Enum<org.glassfish.json.JsonTokenizer$JsonToken> {
  public static final org.glassfish.json.JsonTokenizer$JsonToken CURLYOPEN;

  public static final org.glassfish.json.JsonTokenizer$JsonToken SQUAREOPEN;

  public static final org.glassfish.json.JsonTokenizer$JsonToken COLON;

  public static final org.glassfish.json.JsonTokenizer$JsonToken COMMA;

  public static final org.glassfish.json.JsonTokenizer$JsonToken STRING;

  public static final org.glassfish.json.JsonTokenizer$JsonToken NUMBER;

  public static final org.glassfish.json.JsonTokenizer$JsonToken TRUE;

  public static final org.glassfish.json.JsonTokenizer$JsonToken FALSE;

  public static final org.glassfish.json.JsonTokenizer$JsonToken NULL;

  public static final org.glassfish.json.JsonTokenizer$JsonToken CURLYCLOSE;

  public static final org.glassfish.json.JsonTokenizer$JsonToken SQUARECLOSE;

  public static final org.glassfish.json.JsonTokenizer$JsonToken EOF;

  private final javax.json.stream.JsonParser$Event event;

  private final boolean value;

  private static final org.glassfish.json.JsonTokenizer$JsonToken[] $VALUES;

  public static org.glassfish.json.JsonTokenizer$JsonToken[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/glassfish/json/JsonTokenizer$JsonToken;
       3: invokevirtual #2                  // Method "[Lorg/glassfish/json/JsonTokenizer$JsonToken;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/glassfish/json/JsonTokenizer$JsonToken;"
       9: areturn

  public static org.glassfish.json.JsonTokenizer$JsonToken valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
      10: areturn

  private org.glassfish.json.JsonTokenizer$JsonToken(javax.json.stream.JsonParser$Event, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field event:Ljavax/json/stream/JsonParser$Event;
      11: aload_0
      12: iload         4
      14: putfield      #8                  // Field value:Z
      17: return

  javax.json.stream.JsonParser$Event getEvent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field event:Ljavax/json/stream/JsonParser$Event;
       4: areturn

  boolean isValue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field value:Z
       4: ireturn

  static {};
    Code:
       0: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
       3: dup
       4: ldc           #9                  // String CURLYOPEN
       6: iconst_0
       7: getstatic     #10                 // Field javax/json/stream/JsonParser$Event.START_OBJECT:Ljavax/json/stream/JsonParser$Event;
      10: iconst_0
      11: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
      14: putstatic     #12                 // Field CURLYOPEN:Lorg/glassfish/json/JsonTokenizer$JsonToken;
      17: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
      20: dup
      21: ldc           #13                 // String SQUAREOPEN
      23: iconst_1
      24: getstatic     #14                 // Field javax/json/stream/JsonParser$Event.START_ARRAY:Ljavax/json/stream/JsonParser$Event;
      27: iconst_0
      28: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
      31: putstatic     #15                 // Field SQUAREOPEN:Lorg/glassfish/json/JsonTokenizer$JsonToken;
      34: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
      37: dup
      38: ldc           #16                 // String COLON
      40: iconst_2
      41: aconst_null
      42: iconst_0
      43: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
      46: putstatic     #17                 // Field COLON:Lorg/glassfish/json/JsonTokenizer$JsonToken;
      49: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
      52: dup
      53: ldc           #18                 // String COMMA
      55: iconst_3
      56: aconst_null
      57: iconst_0
      58: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
      61: putstatic     #19                 // Field COMMA:Lorg/glassfish/json/JsonTokenizer$JsonToken;
      64: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
      67: dup
      68: ldc           #20                 // String STRING
      70: iconst_4
      71: getstatic     #21                 // Field javax/json/stream/JsonParser$Event.VALUE_STRING:Ljavax/json/stream/JsonParser$Event;
      74: iconst_1
      75: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
      78: putstatic     #22                 // Field STRING:Lorg/glassfish/json/JsonTokenizer$JsonToken;
      81: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
      84: dup
      85: ldc           #23                 // String NUMBER
      87: iconst_5
      88: getstatic     #24                 // Field javax/json/stream/JsonParser$Event.VALUE_NUMBER:Ljavax/json/stream/JsonParser$Event;
      91: iconst_1
      92: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
      95: putstatic     #25                 // Field NUMBER:Lorg/glassfish/json/JsonTokenizer$JsonToken;
      98: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
     101: dup
     102: ldc           #26                 // String TRUE
     104: bipush        6
     106: getstatic     #27                 // Field javax/json/stream/JsonParser$Event.VALUE_TRUE:Ljavax/json/stream/JsonParser$Event;
     109: iconst_1
     110: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
     113: putstatic     #28                 // Field TRUE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     116: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
     119: dup
     120: ldc           #29                 // String FALSE
     122: bipush        7
     124: getstatic     #30                 // Field javax/json/stream/JsonParser$Event.VALUE_FALSE:Ljavax/json/stream/JsonParser$Event;
     127: iconst_1
     128: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
     131: putstatic     #31                 // Field FALSE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     134: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
     137: dup
     138: ldc           #32                 // String NULL
     140: bipush        8
     142: getstatic     #33                 // Field javax/json/stream/JsonParser$Event.VALUE_NULL:Ljavax/json/stream/JsonParser$Event;
     145: iconst_1
     146: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
     149: putstatic     #34                 // Field NULL:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     152: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
     155: dup
     156: ldc           #35                 // String CURLYCLOSE
     158: bipush        9
     160: getstatic     #36                 // Field javax/json/stream/JsonParser$Event.END_OBJECT:Ljavax/json/stream/JsonParser$Event;
     163: iconst_0
     164: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
     167: putstatic     #37                 // Field CURLYCLOSE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     170: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
     173: dup
     174: ldc           #38                 // String SQUARECLOSE
     176: bipush        10
     178: getstatic     #39                 // Field javax/json/stream/JsonParser$Event.END_ARRAY:Ljavax/json/stream/JsonParser$Event;
     181: iconst_0
     182: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
     185: putstatic     #40                 // Field SQUARECLOSE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     188: new           #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
     191: dup
     192: ldc           #41                 // String EOF
     194: bipush        11
     196: aconst_null
     197: iconst_0
     198: invokespecial #11                 // Method "<init>":(Ljava/lang/String;ILjavax/json/stream/JsonParser$Event;Z)V
     201: putstatic     #42                 // Field EOF:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     204: bipush        12
     206: anewarray     #4                  // class org/glassfish/json/JsonTokenizer$JsonToken
     209: dup
     210: iconst_0
     211: getstatic     #12                 // Field CURLYOPEN:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     214: aastore
     215: dup
     216: iconst_1
     217: getstatic     #15                 // Field SQUAREOPEN:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     220: aastore
     221: dup
     222: iconst_2
     223: getstatic     #17                 // Field COLON:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     226: aastore
     227: dup
     228: iconst_3
     229: getstatic     #19                 // Field COMMA:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     232: aastore
     233: dup
     234: iconst_4
     235: getstatic     #22                 // Field STRING:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     238: aastore
     239: dup
     240: iconst_5
     241: getstatic     #25                 // Field NUMBER:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     244: aastore
     245: dup
     246: bipush        6
     248: getstatic     #28                 // Field TRUE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     251: aastore
     252: dup
     253: bipush        7
     255: getstatic     #31                 // Field FALSE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     258: aastore
     259: dup
     260: bipush        8
     262: getstatic     #34                 // Field NULL:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     265: aastore
     266: dup
     267: bipush        9
     269: getstatic     #37                 // Field CURLYCLOSE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     272: aastore
     273: dup
     274: bipush        10
     276: getstatic     #40                 // Field SQUARECLOSE:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     279: aastore
     280: dup
     281: bipush        11
     283: getstatic     #42                 // Field EOF:Lorg/glassfish/json/JsonTokenizer$JsonToken;
     286: aastore
     287: putstatic     #1                  // Field $VALUES:[Lorg/glassfish/json/JsonTokenizer$JsonToken;
     290: return
}
