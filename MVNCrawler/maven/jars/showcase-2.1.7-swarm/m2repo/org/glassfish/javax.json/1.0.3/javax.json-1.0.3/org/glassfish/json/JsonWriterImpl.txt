Compiled from "JsonWriterImpl.java"
class org.glassfish.json.JsonWriterImpl implements javax.json.JsonWriter {
  private static final java.nio.charset.Charset UTF_8;

  private final org.glassfish.json.JsonGeneratorImpl generator;

  private boolean writeDone;

  org.glassfish.json.JsonWriterImpl(java.io.Writer, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #1                  // Method "<init>":(Ljava/io/Writer;ZLorg/glassfish/json/api/BufferPool;)V
       7: return

  org.glassfish.json.JsonWriterImpl(java.io.Writer, boolean, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: ifeq          21
       9: new           #3                  // class org/glassfish/json/JsonPrettyGeneratorImpl
      12: dup
      13: aload_1
      14: aload_3
      15: invokespecial #4                  // Method org/glassfish/json/JsonPrettyGeneratorImpl."<init>":(Ljava/io/Writer;Lorg/glassfish/json/api/BufferPool;)V
      18: goto          30
      21: new           #5                  // class org/glassfish/json/JsonGeneratorImpl
      24: dup
      25: aload_1
      26: aload_3
      27: invokespecial #6                  // Method org/glassfish/json/JsonGeneratorImpl."<init>":(Ljava/io/Writer;Lorg/glassfish/json/api/BufferPool;)V
      30: putfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      33: return

  org.glassfish.json.JsonWriterImpl(java.io.OutputStream, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field UTF_8:Ljava/nio/charset/Charset;
       5: iconst_0
       6: aload_2
       7: invokespecial #9                  // Method "<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;ZLorg/glassfish/json/api/BufferPool;)V
      10: return

  org.glassfish.json.JsonWriterImpl(java.io.OutputStream, boolean, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #8                  // Field UTF_8:Ljava/nio/charset/Charset;
       5: iload_2
       6: aload_3
       7: invokespecial #9                  // Method "<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;ZLorg/glassfish/json/api/BufferPool;)V
      10: return

  org.glassfish.json.JsonWriterImpl(java.io.OutputStream, java.nio.charset.Charset, boolean, org.glassfish.json.api.BufferPool);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_3
       6: ifeq          23
       9: new           #3                  // class org/glassfish/json/JsonPrettyGeneratorImpl
      12: dup
      13: aload_1
      14: aload_2
      15: aload         4
      17: invokespecial #10                 // Method org/glassfish/json/JsonPrettyGeneratorImpl."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;Lorg/glassfish/json/api/BufferPool;)V
      20: goto          34
      23: new           #5                  // class org/glassfish/json/JsonGeneratorImpl
      26: dup
      27: aload_1
      28: aload_2
      29: aload         4
      31: invokespecial #11                 // Method org/glassfish/json/JsonGeneratorImpl."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;Lorg/glassfish/json/api/BufferPool;)V
      34: putfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      37: return

  public void writeArray(javax.json.JsonArray);
    Code:
       0: aload_0
       1: getfield      #12                 // Field writeDone:Z
       4: ifeq          17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #14                 // String write/writeObject/writeArray/close method is already called.
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #12                 // Field writeDone:Z
      22: aload_0
      23: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      26: invokevirtual #16                 // Method org/glassfish/json/JsonGeneratorImpl.writeStartArray:()Ljavax/json/stream/JsonGenerator;
      29: pop
      30: aload_1
      31: invokeinterface #17,  1           // InterfaceMethod javax/json/JsonArray.iterator:()Ljava/util/Iterator;
      36: astore_2
      37: aload_2
      38: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          68
      46: aload_2
      47: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #20                 // class javax/json/JsonValue
      55: astore_3
      56: aload_0
      57: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      60: aload_3
      61: invokevirtual #21                 // Method org/glassfish/json/JsonGeneratorImpl.write:(Ljavax/json/JsonValue;)Ljavax/json/stream/JsonGenerator;
      64: pop
      65: goto          37
      68: aload_0
      69: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      72: invokevirtual #22                 // Method org/glassfish/json/JsonGeneratorImpl.writeEnd:()Ljavax/json/stream/JsonGenerator;
      75: pop
      76: aload_0
      77: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      80: invokevirtual #23                 // Method org/glassfish/json/JsonGeneratorImpl.flushBuffer:()V
      83: return

  public void writeObject(javax.json.JsonObject);
    Code:
       0: aload_0
       1: getfield      #12                 // Field writeDone:Z
       4: ifeq          17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #14                 // String write/writeObject/writeArray/close method is already called.
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #12                 // Field writeDone:Z
      22: aload_0
      23: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      26: invokevirtual #24                 // Method org/glassfish/json/JsonGeneratorImpl.writeStartObject:()Ljavax/json/stream/JsonGenerator;
      29: pop
      30: aload_1
      31: invokeinterface #25,  1           // InterfaceMethod javax/json/JsonObject.entrySet:()Ljava/util/Set;
      36: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      41: astore_2
      42: aload_2
      43: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          90
      51: aload_2
      52: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #27                 // class java/util/Map$Entry
      60: astore_3
      61: aload_0
      62: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      65: aload_3
      66: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      71: checkcast     #29                 // class java/lang/String
      74: aload_3
      75: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      80: checkcast     #20                 // class javax/json/JsonValue
      83: invokevirtual #31                 // Method org/glassfish/json/JsonGeneratorImpl.write:(Ljava/lang/String;Ljavax/json/JsonValue;)Ljavax/json/stream/JsonGenerator;
      86: pop
      87: goto          42
      90: aload_0
      91: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
      94: invokevirtual #22                 // Method org/glassfish/json/JsonGeneratorImpl.writeEnd:()Ljavax/json/stream/JsonGenerator;
      97: pop
      98: aload_0
      99: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
     102: invokevirtual #23                 // Method org/glassfish/json/JsonGeneratorImpl.flushBuffer:()V
     105: return

  public void write(javax.json.JsonStructure);
    Code:
       0: aload_1
       1: instanceof    #32                 // class javax/json/JsonArray
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #32                 // class javax/json/JsonArray
      12: invokevirtual #33                 // Method writeArray:(Ljavax/json/JsonArray;)V
      15: goto          26
      18: aload_0
      19: aload_1
      20: checkcast     #34                 // class javax/json/JsonObject
      23: invokevirtual #35                 // Method writeObject:(Ljavax/json/JsonObject;)V
      26: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field writeDone:Z
       5: aload_0
       6: getfield      #7                  // Field generator:Lorg/glassfish/json/JsonGeneratorImpl;
       9: invokevirtual #36                 // Method org/glassfish/json/JsonGeneratorImpl.close:()V
      12: return

  static {};
    Code:
       0: ldc           #37                 // String UTF-8
       2: invokestatic  #38                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #8                  // Field UTF_8:Ljava/nio/charset/Charset;
       8: return
}
