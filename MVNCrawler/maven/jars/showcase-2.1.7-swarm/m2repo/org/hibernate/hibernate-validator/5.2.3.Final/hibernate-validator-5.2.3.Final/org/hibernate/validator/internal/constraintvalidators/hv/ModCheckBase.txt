Compiled from "ModCheckBase.java"
public abstract class org.hibernate.validator.internal.constraintvalidators.hv.ModCheckBase {
  private static final org.hibernate.validator.internal.util.logging.Log log;

  private static final java.util.regex.Pattern NUMBERS_ONLY_REGEXP;

  private static final int DEC_RADIX;

  private int startIndex;

  private int endIndex;

  private int checkDigitIndex;

  private boolean ignoreNonDigitCharacters;

  public org.hibernate.validator.internal.constraintvalidators.hv.ModCheckBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isValid(java.lang.CharSequence, javax.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokespecial #3                  // Method extractVerificationString:(Ljava/lang/String;)Ljava/lang/String;
      18: astore        4
      20: aload_0
      21: aload_3
      22: invokespecial #4                  // Method extractCheckDigit:(Ljava/lang/String;)C
      25: istore        5
      27: goto          34
      30: astore        6
      32: iconst_0
      33: ireturn
      34: aload_0
      35: aload         4
      37: invokespecial #6                  // Method stripNonDigitsIfRequired:(Ljava/lang/String;)Ljava/lang/String;
      40: astore        4
      42: aload_0
      43: aload         4
      45: invokespecial #7                  // Method extractDigits:(Ljava/lang/String;)Ljava/util/List;
      48: astore        6
      50: goto          57
      53: astore        7
      55: iconst_0
      56: ireturn
      57: aload_0
      58: aload         6
      60: iload         5
      62: invokevirtual #9                  // Method isCheckDigitValid:(Ljava/util/List;C)Z
      65: ireturn
    Exception table:
       from    to  target type
          13    27    30   Class java/lang/IndexOutOfBoundsException
          42    50    53   Class java/lang/NumberFormatException

  public abstract boolean isCheckDigitValid(java.util.List<java.lang.Integer>, char);

  protected void initialize(int, int, int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field startIndex:I
       5: aload_0
       6: iload_2
       7: putfield      #11                 // Field endIndex:I
      10: aload_0
      11: iload_3
      12: putfield      #12                 // Field checkDigitIndex:I
      15: aload_0
      16: iload         4
      18: putfield      #13                 // Field ignoreNonDigitCharacters:Z
      21: aload_0
      22: invokespecial #14                 // Method validateOptions:()Z
      25: pop
      26: return

  protected int extractDigit(char) throws java.lang.NumberFormatException;
    Code:
       0: iload_1
       1: invokestatic  #15                 // Method java/lang/Character.isDigit:(C)Z
       4: ifeq          14
       7: iload_1
       8: bipush        10
      10: invokestatic  #17                 // Method java/lang/Character.digit:(CI)I
      13: ireturn
      14: getstatic     #18                 // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
      17: iload_1
      18: invokeinterface #19,  2           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getCharacterIsNotADigitException:(C)Ljava/lang/NumberFormatException;
      23: athrow

  private java.util.List<java.lang.Integer> extractDigits(java.lang.String) throws java.lang.NumberFormatException;
    Code:
       0: new           #20                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokevirtual #21                 // Method java/lang/String.length:()I
       8: invokespecial #22                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_2
      12: aload_1
      13: invokevirtual #23                 // Method java/lang/String.toCharArray:()[C
      16: astore_3
      17: aload_3
      18: astore        4
      20: aload         4
      22: arraylength
      23: istore        5
      25: iconst_0
      26: istore        6
      28: iload         6
      30: iload         5
      32: if_icmpge     64
      35: aload         4
      37: iload         6
      39: caload
      40: istore        7
      42: aload_2
      43: aload_0
      44: iload         7
      46: invokevirtual #24                 // Method extractDigit:(C)I
      49: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: iinc          6, 1
      61: goto          28
      64: aload_2
      65: areturn

  private boolean validateOptions();
    Code:
       0: aload_0
       1: getfield      #10                 // Field startIndex:I
       4: ifge          20
       7: getstatic     #18                 // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
      10: aload_0
      11: getfield      #10                 // Field startIndex:I
      14: invokeinterface #27,  2           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getStartIndexCannotBeNegativeException:(I)Ljava/lang/IllegalArgumentException;
      19: athrow
      20: aload_0
      21: getfield      #11                 // Field endIndex:I
      24: ifge          40
      27: getstatic     #18                 // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
      30: aload_0
      31: getfield      #11                 // Field endIndex:I
      34: invokeinterface #28,  2           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getEndIndexCannotBeNegativeException:(I)Ljava/lang/IllegalArgumentException;
      39: athrow
      40: aload_0
      41: getfield      #10                 // Field startIndex:I
      44: aload_0
      45: getfield      #11                 // Field endIndex:I
      48: if_icmple     68
      51: getstatic     #18                 // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
      54: aload_0
      55: getfield      #10                 // Field startIndex:I
      58: aload_0
      59: getfield      #11                 // Field endIndex:I
      62: invokeinterface #29,  3           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getInvalidRangeException:(II)Ljava/lang/IllegalArgumentException;
      67: athrow
      68: aload_0
      69: getfield      #12                 // Field checkDigitIndex:I
      72: ifle          114
      75: aload_0
      76: getfield      #10                 // Field startIndex:I
      79: aload_0
      80: getfield      #12                 // Field checkDigitIndex:I
      83: if_icmpgt     114
      86: aload_0
      87: getfield      #11                 // Field endIndex:I
      90: aload_0
      91: getfield      #12                 // Field checkDigitIndex:I
      94: if_icmple     114
      97: getstatic     #18                 // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
     100: aload_0
     101: getfield      #10                 // Field startIndex:I
     104: aload_0
     105: getfield      #11                 // Field endIndex:I
     108: invokeinterface #30,  3           // InterfaceMethod org/hibernate/validator/internal/util/logging/Log.getInvalidCheckDigitException:(II)Ljava/lang/IllegalArgumentException;
     113: athrow
     114: iconst_1
     115: ireturn

  private java.lang.String stripNonDigitsIfRequired(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field ignoreNonDigitCharacters:Z
       4: ifeq          20
       7: getstatic     #31                 // Field NUMBERS_ONLY_REGEXP:Ljava/util/regex/Pattern;
      10: aload_1
      11: invokevirtual #32                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      14: ldc           #33                 // String
      16: invokevirtual #34                 // Method java/util/regex/Matcher.replaceAll:(Ljava/lang/String;)Ljava/lang/String;
      19: areturn
      20: aload_1
      21: areturn

  private java.lang.String extractVerificationString(java.lang.String) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field endIndex:I
       4: ldc           #36                 // int 2147483647
       6: if_icmpne     21
       9: aload_1
      10: iconst_0
      11: aload_1
      12: invokevirtual #21                 // Method java/lang/String.length:()I
      15: iconst_1
      16: isub
      17: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: areturn
      21: aload_0
      22: getfield      #12                 // Field checkDigitIndex:I
      25: iconst_m1
      26: if_icmpne     42
      29: aload_1
      30: aload_0
      31: getfield      #10                 // Field startIndex:I
      34: aload_0
      35: getfield      #11                 // Field endIndex:I
      38: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      41: areturn
      42: aload_1
      43: aload_0
      44: getfield      #10                 // Field startIndex:I
      47: aload_0
      48: getfield      #11                 // Field endIndex:I
      51: iconst_1
      52: iadd
      53: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      56: areturn

  private char extractCheckDigit(java.lang.String) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field checkDigitIndex:I
       4: iconst_m1
       5: if_icmpne     37
       8: aload_0
       9: getfield      #11                 // Field endIndex:I
      12: ldc           #36                 // int 2147483647
      14: if_icmpne     28
      17: aload_1
      18: aload_1
      19: invokevirtual #21                 // Method java/lang/String.length:()I
      22: iconst_1
      23: isub
      24: invokevirtual #38                 // Method java/lang/String.charAt:(I)C
      27: ireturn
      28: aload_1
      29: aload_0
      30: getfield      #11                 // Field endIndex:I
      33: invokevirtual #38                 // Method java/lang/String.charAt:(I)C
      36: ireturn
      37: aload_1
      38: aload_0
      39: getfield      #12                 // Field checkDigitIndex:I
      42: invokevirtual #38                 // Method java/lang/String.charAt:(I)C
      45: ireturn

  static {};
    Code:
       0: invokestatic  #39                 // Method org/hibernate/validator/internal/util/logging/LoggerFactory.make:()Lorg/hibernate/validator/internal/util/logging/Log;
       3: putstatic     #18                 // Field log:Lorg/hibernate/validator/internal/util/logging/Log;
       6: ldc           #40                 // String [^0-9]
       8: invokestatic  #41                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      11: putstatic     #31                 // Field NUMBERS_ONLY_REGEXP:Ljava/util/regex/Pattern;
      14: return
}
