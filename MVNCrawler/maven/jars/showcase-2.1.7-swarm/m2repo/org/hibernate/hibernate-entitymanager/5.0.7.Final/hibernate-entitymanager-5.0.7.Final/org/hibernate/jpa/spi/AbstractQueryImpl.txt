Compiled from "AbstractQueryImpl.java"
public abstract class org.hibernate.jpa.spi.AbstractQueryImpl<X> extends org.hibernate.jpa.spi.BaseQueryImpl implements javax.persistence.TypedQuery<X> {
  private javax.persistence.LockModeType jpaLockMode;

  public org.hibernate.jpa.spi.AbstractQueryImpl(org.hibernate.jpa.spi.HibernateEntityManagerImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/hibernate/jpa/spi/BaseQueryImpl."<init>":(Lorg/hibernate/jpa/spi/HibernateEntityManagerImplementor;)V
       5: aload_0
       6: getstatic     #2                  // Field javax/persistence/LockModeType.NONE:Ljavax/persistence/LockModeType;
       9: putfield      #3                  // Field jpaLockMode:Ljavax/persistence/LockModeType;
      12: return

  protected org.hibernate.jpa.spi.HibernateEntityManagerImplementor getEntityManager();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method entityManager:()Lorg/hibernate/jpa/spi/HibernateEntityManagerImplementor;
       4: areturn

  protected abstract int internalExecuteUpdate();

  public int executeUpdate();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #5                  // Method checkOpen:(Z)V
       5: aload_0
       6: invokevirtual #4                  // Method entityManager:()Lorg/hibernate/jpa/spi/HibernateEntityManagerImplementor;
       9: invokeinterface #6,  1            // InterfaceMethod org/hibernate/jpa/spi/HibernateEntityManagerImplementor.isTransactionInProgress:()Z
      14: ifne          37
      17: aload_0
      18: invokevirtual #4                  // Method entityManager:()Lorg/hibernate/jpa/spi/HibernateEntityManagerImplementor;
      21: new           #7                  // class javax/persistence/TransactionRequiredException
      24: dup
      25: ldc           #8                  // String Executing an update/delete query
      27: invokespecial #9                  // Method javax/persistence/TransactionRequiredException."<init>":(Ljava/lang/String;)V
      30: invokeinterface #10,  2           // InterfaceMethod org/hibernate/jpa/spi/HibernateEntityManagerImplementor.throwPersistenceException:(Ljavax/persistence/PersistenceException;)V
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #11                 // Method internalExecuteUpdate:()I
      41: ireturn
      42: astore_1
      43: new           #13                 // class java/lang/IllegalStateException
      46: dup
      47: aload_1
      48: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      51: athrow
      52: astore_1
      53: new           #16                 // class java/lang/IllegalArgumentException
      56: dup
      57: aload_1
      58: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      61: athrow
      62: astore_1
      63: aload_0
      64: invokevirtual #4                  // Method entityManager:()Lorg/hibernate/jpa/spi/HibernateEntityManagerImplementor;
      67: aload_1
      68: invokeinterface #19,  2           // InterfaceMethod org/hibernate/jpa/spi/HibernateEntityManagerImplementor.throwPersistenceException:(Lorg/hibernate/HibernateException;)V
      73: iconst_0
      74: ireturn
    Exception table:
       from    to  target type
           5    36    42   Class org/hibernate/hql/internal/QueryExecutionRequestException
          37    41    42   Class org/hibernate/hql/internal/QueryExecutionRequestException
           5    36    52   Class org/hibernate/TypeMismatchException
          37    41    52   Class org/hibernate/TypeMismatchException
           5    36    62   Class org/hibernate/HibernateException
          37    41    62   Class org/hibernate/HibernateException

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setMaxResults(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #20                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setMaxResults:(I)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       5: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
       8: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setFirstResult(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #22                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setFirstResult:(I)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       5: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
       8: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setHint(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #23                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setHint:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       6: pop
       7: aload_0
       8: areturn

  public java.util.Set<java.lang.String> getSupportedHints();
    Code:
       0: invokestatic  #24                 // Method org/hibernate/jpa/QueryHints.getDefinedHints:()Ljava/util/Set;
       3: areturn

  public javax.persistence.TypedQuery<X> setLockMode(javax.persistence.LockModeType);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #5                  // Method checkOpen:(Z)V
       5: aload_0
       6: invokevirtual #25                 // Method isNativeSqlQuery:()Z
       9: ifeq          22
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #26                 // String Illegal attempt to set lock mode on a native SQL query
      18: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: getstatic     #2                  // Field javax/persistence/LockModeType.NONE:Ljavax/persistence/LockModeType;
      25: aload_1
      26: invokevirtual #28                 // Method javax/persistence/LockModeType.equals:(Ljava/lang/Object;)Z
      29: ifne          49
      32: aload_0
      33: invokevirtual #29                 // Method isSelectQuery:()Z
      36: ifne          49
      39: new           #13                 // class java/lang/IllegalStateException
      42: dup
      43: ldc           #30                 // String Illegal attempt to set lock mode on a non-SELECT query
      45: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: invokevirtual #31                 // Method canApplyAliasSpecificLockModeHints:()Z
      53: ifne          66
      56: new           #13                 // class java/lang/IllegalStateException
      59: dup
      60: ldc           #32                 // String Not a JPAQL/Criteria query
      62: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: aload_1
      68: putfield      #3                  // Field jpaLockMode:Ljavax/persistence/LockModeType;
      71: aload_0
      72: aload_1
      73: invokevirtual #33                 // Method internalApplyLockMode:(Ljavax/persistence/LockModeType;)V
      76: aload_0
      77: areturn

  public javax.persistence.LockModeType getLockMode();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #5                  // Method checkOpen:(Z)V
       5: aload_0
       6: invokevirtual #25                 // Method isNativeSqlQuery:()Z
       9: ifeq          22
      12: new           #13                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #26                 // String Illegal attempt to set lock mode on a native SQL query
      18: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: invokevirtual #29                 // Method isSelectQuery:()Z
      26: ifne          39
      29: new           #13                 // class java/lang/IllegalStateException
      32: dup
      33: ldc           #30                 // String Illegal attempt to set lock mode on a non-SELECT query
      35: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #3                  // Field jpaLockMode:Ljavax/persistence/LockModeType;
      43: areturn

  public <T> org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(javax.persistence.Parameter<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #34                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(Ljavax/persistence/Parameter;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       6: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
       9: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(javax.persistence.Parameter<java.util.Calendar>, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #35                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(Ljavax/persistence/Parameter;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       7: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
      10: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(javax.persistence.Parameter<java.util.Date>, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #36                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(Ljavax/persistence/Parameter;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       7: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
      10: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #37                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       6: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
       9: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #38                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(Ljava/lang/String;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       7: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
      10: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #39                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(Ljava/lang/String;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       7: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
      10: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #40                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(ILjava/lang/Object;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       6: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
       9: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(int, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #41                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(ILjava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       7: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
      10: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setParameter(int, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #42                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setParameter:(ILjava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       7: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
      10: areturn

  public org.hibernate.jpa.spi.AbstractQueryImpl<X> setFlushMode(javax.persistence.FlushModeType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method org/hibernate/jpa/spi/BaseQueryImpl.setFlushMode:(Ljavax/persistence/FlushModeType;)Lorg/hibernate/jpa/spi/BaseQueryImpl;
       5: checkcast     #21                 // class org/hibernate/jpa/spi/AbstractQueryImpl
       8: areturn

  protected void checkTransaction();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jpaLockMode:Ljavax/persistence/LockModeType;
       4: ifnull        39
       7: aload_0
       8: getfield      #3                  // Field jpaLockMode:Ljavax/persistence/LockModeType;
      11: getstatic     #2                  // Field javax/persistence/LockModeType.NONE:Ljavax/persistence/LockModeType;
      14: if_acmpeq     39
      17: aload_0
      18: invokevirtual #44                 // Method getEntityManager:()Lorg/hibernate/jpa/spi/HibernateEntityManagerImplementor;
      21: invokeinterface #6,  1            // InterfaceMethod org/hibernate/jpa/spi/HibernateEntityManagerImplementor.isTransactionInProgress:()Z
      26: ifne          39
      29: new           #7                  // class javax/persistence/TransactionRequiredException
      32: dup
      33: ldc           #45                 // String no transaction is in progress
      35: invokespecial #9                  // Method javax/persistence/TransactionRequiredException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: return

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(int, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #46                 // Method setParameter:(ILjava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(int, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #47                 // Method setParameter:(ILjava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #48                 // Method setParameter:(ILjava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #49                 // Method setParameter:(Ljava/lang/String;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #50                 // Method setParameter:(Ljava/lang/String;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #51                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #52                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #53                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setParameter(javax.persistence.Parameter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #54                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setFlushMode(javax.persistence.FlushModeType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setFlushMode:(Ljavax/persistence/FlushModeType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setHint(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #56                 // Method setHint:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setMaxResults(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setMaxResults:(I)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public org.hibernate.jpa.spi.BaseQueryImpl setFirstResult(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setFirstResult:(I)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public javax.persistence.Query setLockMode(javax.persistence.LockModeType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method setLockMode:(Ljavax/persistence/LockModeType;)Ljavax/persistence/TypedQuery;
       5: areturn

  public javax.persistence.Query setFlushMode(javax.persistence.FlushModeType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setFlushMode:(Ljavax/persistence/FlushModeType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public javax.persistence.Query setParameter(int, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #46                 // Method setParameter:(ILjava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.Query setParameter(int, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #47                 // Method setParameter:(ILjava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.Query setParameter(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #48                 // Method setParameter:(ILjava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.Query setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #49                 // Method setParameter:(Ljava/lang/String;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.Query setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #50                 // Method setParameter:(Ljava/lang/String;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.Query setParameter(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #51                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #52                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.Query setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #53                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.Query setParameter(javax.persistence.Parameter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #54                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.Query setHint(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #56                 // Method setHint:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.Query setFirstResult(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setFirstResult:(I)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public javax.persistence.Query setMaxResults(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setMaxResults:(I)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public javax.persistence.TypedQuery setFlushMode(javax.persistence.FlushModeType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setFlushMode:(Ljavax/persistence/FlushModeType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public javax.persistence.TypedQuery setParameter(int, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #46                 // Method setParameter:(ILjava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.TypedQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #47                 // Method setParameter:(ILjava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.TypedQuery setParameter(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #48                 // Method setParameter:(ILjava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #49                 // Method setParameter:(Ljava/lang/String;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.TypedQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #50                 // Method setParameter:(Ljava/lang/String;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.TypedQuery setParameter(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #51                 // Method setParameter:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Date, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #52                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/util/Date;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.util.Calendar, javax.persistence.TemporalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #53                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/util/Calendar;Ljavax/persistence/TemporalType;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       7: areturn

  public javax.persistence.TypedQuery setParameter(javax.persistence.Parameter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #54                 // Method setParameter:(Ljavax/persistence/Parameter;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.TypedQuery setHint(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #56                 // Method setHint:(Ljava/lang/String;Ljava/lang/Object;)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       6: areturn

  public javax.persistence.TypedQuery setFirstResult(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setFirstResult:(I)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn

  public javax.persistence.TypedQuery setMaxResults(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setMaxResults:(I)Lorg/hibernate/jpa/spi/AbstractQueryImpl;
       5: areturn
}
