Compiled from "FromReferenceNode.java"
public abstract class org.hibernate.hql.internal.ast.tree.FromReferenceNode extends org.hibernate.hql.internal.ast.tree.AbstractSelectExpression implements org.hibernate.hql.internal.ast.tree.ResolvableNode,org.hibernate.hql.internal.ast.tree.DisplayableNode,org.hibernate.hql.internal.ast.tree.InitializeableNode,org.hibernate.hql.internal.ast.tree.PathNode {
  private static final org.hibernate.internal.CoreMessageLogger LOG;

  private org.hibernate.hql.internal.ast.tree.FromElement fromElement;

  private boolean resolved;

  public static final int ROOT_LEVEL;

  public org.hibernate.hql.internal.ast.tree.FromReferenceNode();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/hql/internal/ast/tree/AbstractSelectExpression."<init>":()V
       4: return

  public org.hibernate.hql.internal.ast.tree.FromElement getFromElement();
    Code:
       0: aload_0
       1: getfield      #2                  // Field fromElement:Lorg/hibernate/hql/internal/ast/tree/FromElement;
       4: areturn

  public void setFromElement(org.hibernate.hql.internal.ast.tree.FromElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field fromElement:Lorg/hibernate/hql/internal/ast/tree/FromElement;
       5: return

  public void resolveFirstChild() throws antlr.SemanticException;
    Code:
       0: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getOriginalText:()Ljava/lang/String;
       4: areturn

  public boolean isResolved();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resolved:Z
       4: ireturn

  public void setResolved();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field resolved:Z
       5: getstatic     #5                  // Field LOG:Lorg/hibernate/internal/CoreMessageLogger;
       8: invokeinterface #6,  1            // InterfaceMethod org/hibernate/internal/CoreMessageLogger.isDebugEnabled:()Z
      13: ifeq          34
      16: getstatic     #5                  // Field LOG:Lorg/hibernate/internal/CoreMessageLogger;
      19: ldc           #7                  // String Resolved : %s -> %s
      21: aload_0
      22: invokevirtual #8                  // Method getPath:()Ljava/lang/String;
      25: aload_0
      26: invokevirtual #9                  // Method getText:()Ljava/lang/String;
      29: invokeinterface #10,  4           // InterfaceMethod org/hibernate/internal/CoreMessageLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: return

  public java.lang.String getDisplayText();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #13                 // String {
      11: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #2                  // Field fromElement:Lorg/hibernate/hql/internal/ast/tree/FromElement;
      18: ifnonnull     26
      21: ldc           #15                 // String no fromElement
      23: goto          33
      26: aload_0
      27: getfield      #2                  // Field fromElement:Lorg/hibernate/hql/internal/ast/tree/FromElement;
      30: invokevirtual #16                 // Method org/hibernate/hql/internal/ast/tree/FromElement.getDisplayText:()Ljava/lang/String;
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_1
      38: ldc           #17                 // String }
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_1
      45: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  public void recursiveResolve(int, boolean, java.lang.String) throws antlr.SemanticException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aload_0
       5: invokevirtual #19                 // Method recursiveResolve:(IZLjava/lang/String;Lantlr/collections/AST;)V
       8: return

  public void recursiveResolve(int, boolean, java.lang.String, antlr.collections.AST) throws antlr.SemanticException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getFirstChild:()Lantlr/collections/AST;
       4: astore        5
       6: iload_1
       7: iconst_1
       8: iadd
       9: istore        6
      11: aload         5
      13: ifnull        33
      16: aload         5
      18: checkcast     #21                 // class org/hibernate/hql/internal/ast/tree/FromReferenceNode
      21: astore        7
      23: aload         7
      25: iload         6
      27: iload_2
      28: aconst_null
      29: aload_0
      30: invokevirtual #19                 // Method recursiveResolve:(IZLjava/lang/String;Lantlr/collections/AST;)V
      33: aload_0
      34: invokevirtual #22                 // Method resolveFirstChild:()V
      37: iconst_1
      38: istore        7
      40: iload_1
      41: ifne          51
      44: iload_2
      45: ifne          51
      48: iconst_0
      49: istore        7
      51: aload_0
      52: iconst_1
      53: iload         7
      55: aload_3
      56: aload         4
      58: invokevirtual #23                 // Method resolve:(ZZLjava/lang/String;Lantlr/collections/AST;)V
      61: return

  public boolean isReturnableEntity() throws antlr.SemanticException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method isScalar:()Z
       4: ifne          21
       7: aload_0
       8: getfield      #2                  // Field fromElement:Lorg/hibernate/hql/internal/ast/tree/FromElement;
      11: invokevirtual #25                 // Method org/hibernate/hql/internal/ast/tree/FromElement.isEntity:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void resolveInFunctionCall(boolean, boolean) throws antlr.SemanticException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #26                 // Method resolve:(ZZ)V
       6: return

  public void resolve(boolean, boolean) throws antlr.SemanticException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: invokevirtual #27                 // Method resolve:(ZZLjava/lang/String;)V
       7: return

  public void resolve(boolean, boolean, java.lang.String) throws antlr.SemanticException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #23                 // Method resolve:(ZZLjava/lang/String;Lantlr/collections/AST;)V
       8: return

  public void prepareForDot(java.lang.String) throws antlr.SemanticException;
    Code:
       0: return

  public org.hibernate.hql.internal.ast.tree.FromElement getImpliedJoin();
    Code:
       0: aconst_null
       1: areturn

  protected boolean isFromElementUpdateOrDeleteRoot(org.hibernate.hql.internal.ast.tree.FromElement);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/hibernate/hql/internal/ast/tree/FromElement.getFromClause:()Lorg/hibernate/hql/internal/ast/tree/FromClause;
       4: invokevirtual #29                 // Method org/hibernate/hql/internal/ast/tree/FromClause.getParentFromClause:()Lorg/hibernate/hql/internal/ast/tree/FromClause;
       7: ifnull        12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: invokevirtual #30                 // Method getWalker:()Lorg/hibernate/hql/internal/ast/HqlSqlWalker;
      16: invokevirtual #31                 // Method org/hibernate/hql/internal/ast/HqlSqlWalker.getStatementType:()I
      19: bipush        13
      21: if_icmpeq     36
      24: aload_0
      25: invokevirtual #30                 // Method getWalker:()Lorg/hibernate/hql/internal/ast/HqlSqlWalker;
      28: invokevirtual #31                 // Method org/hibernate/hql/internal/ast/HqlSqlWalker.getStatementType:()I
      31: bipush        50
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  static {};
    Code:
       0: ldc           #21                 // class org/hibernate/hql/internal/ast/tree/FromReferenceNode
       2: invokestatic  #33                 // Method org/hibernate/internal/CoreLogging.messageLogger:(Ljava/lang/Class;)Lorg/hibernate/internal/CoreMessageLogger;
       5: putstatic     #5                  // Field LOG:Lorg/hibernate/internal/CoreMessageLogger;
       8: return
}
