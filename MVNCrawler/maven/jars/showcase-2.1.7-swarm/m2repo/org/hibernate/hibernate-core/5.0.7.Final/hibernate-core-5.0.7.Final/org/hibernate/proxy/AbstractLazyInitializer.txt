Compiled from "AbstractLazyInitializer.java"
public abstract class org.hibernate.proxy.AbstractLazyInitializer implements org.hibernate.proxy.LazyInitializer {
  private static final org.jboss.logging.Logger log;

  private java.lang.String entityName;

  private java.io.Serializable id;

  private java.lang.Object target;

  private boolean initialized;

  private boolean readOnly;

  private boolean unwrap;

  private transient org.hibernate.engine.spi.SessionImplementor session;

  private java.lang.Boolean readOnlyBeforeAttachedToSession;

  private java.lang.String sessionFactoryUuid;

  private boolean allowLoadOutsideTransaction;

  protected org.hibernate.proxy.AbstractLazyInitializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.hibernate.proxy.AbstractLazyInitializer(java.lang.String, java.io.Serializable, org.hibernate.engine.spi.SessionImplementor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field entityName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field id:Ljava/io/Serializable;
      14: aload_3
      15: ifnonnull     25
      18: aload_0
      19: invokevirtual #4                  // Method unsetSession:()V
      22: goto          30
      25: aload_0
      26: aload_3
      27: invokevirtual #5                  // Method setSession:(Lorg/hibernate/engine/spi/SessionImplementor;)V
      30: return

  public final java.lang.String getEntityName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field entityName:Ljava/lang/String;
       4: areturn

  public final java.io.Serializable getIdentifier();
    Code:
       0: aload_0
       1: getfield      #3                  // Field id:Ljava/io/Serializable;
       4: areturn

  public final void setIdentifier(java.io.Serializable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field id:Ljava/io/Serializable;
       5: return

  public final boolean isUninitialized();
    Code:
       0: aload_0
       1: getfield      #6                  // Field initialized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final org.hibernate.engine.spi.SessionImplementor getSession();
    Code:
       0: aload_0
       1: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       4: areturn

  public final void setSession(org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       5: if_acmpeq     115
       8: aload_1
       9: ifnonnull     19
      12: aload_0
      13: invokevirtual #4                  // Method unsetSession:()V
      16: goto          115
      19: aload_0
      20: invokevirtual #8                  // Method isConnectedToSession:()Z
      23: ifeq          36
      26: new           #9                  // class org/hibernate/HibernateException
      29: dup
      30: ldc           #10                 // String illegally attempted to associate a proxy with two open Sessions
      32: invokespecial #11                 // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      41: aload_0
      42: getfield      #12                 // Field readOnlyBeforeAttachedToSession:Ljava/lang/Boolean;
      45: ifnonnull     99
      48: aload_1
      49: invokeinterface #13,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      54: aload_0
      55: getfield      #2                  // Field entityName:Ljava/lang/String;
      58: invokeinterface #14,  2           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getEntityPersister:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
      63: astore_2
      64: aload_0
      65: aload_1
      66: invokeinterface #15,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
      71: invokeinterface #16,  1           // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.isDefaultReadOnly:()Z
      76: ifne          88
      79: aload_2
      80: invokeinterface #17,  1           // InterfaceMethod org/hibernate/persister/entity/EntityPersister.isMutable:()Z
      85: ifne          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: invokevirtual #18                 // Method setReadOnly:(Z)V
      96: goto          115
      99: aload_0
     100: aload_0
     101: getfield      #12                 // Field readOnlyBeforeAttachedToSession:Ljava/lang/Boolean;
     104: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
     107: invokevirtual #18                 // Method setReadOnly:(Z)V
     110: aload_0
     111: aconst_null
     112: putfield      #12                 // Field readOnlyBeforeAttachedToSession:Ljava/lang/Boolean;
     115: return

  private static org.hibernate.engine.spi.EntityKey generateEntityKeyOrNull(java.io.Serializable, org.hibernate.engine.spi.SessionImplementor, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        12
       4: aload_1
       5: ifnull        12
       8: aload_2
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_1
      15: aload_0
      16: aload_1
      17: invokeinterface #13,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      22: aload_2
      23: invokeinterface #14,  2           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getEntityPersister:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
      28: invokeinterface #20,  3           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.generateEntityKey:(Ljava/io/Serializable;Lorg/hibernate/persister/entity/EntityPersister;)Lorg/hibernate/engine/spi/EntityKey;
      33: areturn

  public final void unsetSession();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method prepareForPossibleLoadingOutsideTransaction:()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       9: aload_0
      10: iconst_0
      11: putfield      #22                 // Field readOnly:Z
      14: aload_0
      15: aconst_null
      16: putfield      #12                 // Field readOnlyBeforeAttachedToSession:Ljava/lang/Boolean;
      19: return

  public final void initialize() throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field initialized:Z
       4: ifne          115
       7: aload_0
       8: getfield      #23                 // Field allowLoadOutsideTransaction:Z
      11: ifeq          21
      14: aload_0
      15: invokevirtual #24                 // Method permissiveInitialization:()V
      18: goto          119
      21: aload_0
      22: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      25: ifnonnull     38
      28: new           #25                 // class org/hibernate/LazyInitializationException
      31: dup
      32: ldc           #26                 // String could not initialize proxy - no Session
      34: invokespecial #27                 // Method org/hibernate/LazyInitializationException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      42: invokeinterface #28,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.isOpen:()Z
      47: ifne          60
      50: new           #25                 // class org/hibernate/LazyInitializationException
      53: dup
      54: ldc           #29                 // String could not initialize proxy - the owning Session was closed
      56: invokespecial #27                 // Method org/hibernate/LazyInitializationException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      64: invokeinterface #30,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.isConnected:()Z
      69: ifne          82
      72: new           #25                 // class org/hibernate/LazyInitializationException
      75: dup
      76: ldc           #31                 // String could not initialize proxy - the owning Session is disconnected
      78: invokespecial #27                 // Method org/hibernate/LazyInitializationException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: aload_0
      84: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      87: aload_0
      88: getfield      #2                  // Field entityName:Ljava/lang/String;
      91: aload_0
      92: getfield      #3                  // Field id:Ljava/io/Serializable;
      95: invokeinterface #32,  3           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.immediateLoad:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
     100: putfield      #33                 // Field target:Ljava/lang/Object;
     103: aload_0
     104: iconst_1
     105: putfield      #6                  // Field initialized:Z
     108: aload_0
     109: invokespecial #34                 // Method checkTargetState:()V
     112: goto          119
     115: aload_0
     116: invokespecial #34                 // Method checkTargetState:()V
     119: return

  protected void permissiveInitialization();
    Code:
       0: aload_0
       1: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       4: ifnonnull     235
       7: aload_0
       8: getfield      #35                 // Field sessionFactoryUuid:Ljava/lang/String;
      11: ifnonnull     24
      14: new           #25                 // class org/hibernate/LazyInitializationException
      17: dup
      18: ldc           #26                 // String could not initialize proxy - no Session
      20: invokespecial #27                 // Method org/hibernate/LazyInitializationException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: getstatic     #36                 // Field org/hibernate/internal/SessionFactoryRegistry.INSTANCE:Lorg/hibernate/internal/SessionFactoryRegistry;
      27: aload_0
      28: getfield      #35                 // Field sessionFactoryUuid:Ljava/lang/String;
      31: invokevirtual #37                 // Method org/hibernate/internal/SessionFactoryRegistry.getSessionFactory:(Ljava/lang/String;)Lorg/hibernate/SessionFactory;
      34: checkcast     #38                 // class org/hibernate/engine/spi/SessionFactoryImplementor
      37: astore_1
      38: aload_1
      39: invokeinterface #39,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.openSession:()Lorg/hibernate/Session;
      44: checkcast     #40                 // class org/hibernate/engine/spi/SessionImplementor
      47: astore_2
      48: aload_2
      49: invokeinterface #15,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
      54: iconst_1
      55: invokeinterface #41,  2           // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.setDefaultReadOnly:(Z)V
      60: aload_2
      61: getstatic     #42                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
      64: invokeinterface #43,  2           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.setFlushMode:(Lorg/hibernate/FlushMode;)V
      69: aload_2
      70: invokeinterface #44,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getTransactionCoordinator:()Lorg/hibernate/resource/transaction/TransactionCoordinator;
      75: invokeinterface #45,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator.getTransactionCoordinatorBuilder:()Lorg/hibernate/resource/transaction/TransactionCoordinatorBuilder;
      80: invokeinterface #46,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinatorBuilder.isJta:()Z
      85: istore_3
      86: iload_3
      87: ifne          100
      90: aload_2
      91: checkcast     #47                 // class org/hibernate/Session
      94: invokeinterface #48,  1           // InterfaceMethod org/hibernate/Session.beginTransaction:()Lorg/hibernate/Transaction;
      99: pop
     100: aload_0
     101: aload_2
     102: aload_0
     103: getfield      #2                  // Field entityName:Ljava/lang/String;
     106: aload_0
     107: getfield      #3                  // Field id:Ljava/io/Serializable;
     110: invokeinterface #32,  3           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.immediateLoad:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
     115: putfield      #33                 // Field target:Ljava/lang/Object;
     118: iload_3
     119: ifne          136
     122: aload_2
     123: checkcast     #47                 // class org/hibernate/Session
     126: invokeinterface #49,  1           // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     131: invokeinterface #50,  1           // InterfaceMethod org/hibernate/Transaction.commit:()V
     136: aload_2
     137: checkcast     #47                 // class org/hibernate/Session
     140: invokeinterface #51,  1           // InterfaceMethod org/hibernate/Session.close:()V
     145: goto          206
     148: astore        4
     150: getstatic     #53                 // Field log:Lorg/jboss/logging/Logger;
     153: ldc           #54                 // String Unable to close temporary session used to load lazy proxy associated to no session
     155: invokevirtual #55                 // Method org/jboss/logging/Logger.warn:(Ljava/lang/Object;)V
     158: goto          206
     161: astore        5
     163: iload_3
     164: ifne          181
     167: aload_2
     168: checkcast     #47                 // class org/hibernate/Session
     171: invokeinterface #49,  1           // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     176: invokeinterface #50,  1           // InterfaceMethod org/hibernate/Transaction.commit:()V
     181: aload_2
     182: checkcast     #47                 // class org/hibernate/Session
     185: invokeinterface #51,  1           // InterfaceMethod org/hibernate/Session.close:()V
     190: goto          203
     193: astore        6
     195: getstatic     #53                 // Field log:Lorg/jboss/logging/Logger;
     198: ldc           #54                 // String Unable to close temporary session used to load lazy proxy associated to no session
     200: invokevirtual #55                 // Method org/jboss/logging/Logger.warn:(Ljava/lang/Object;)V
     203: aload         5
     205: athrow
     206: aload_0
     207: iconst_1
     208: putfield      #6                  // Field initialized:Z
     211: aload_0
     212: invokespecial #34                 // Method checkTargetState:()V
     215: goto          302
     218: astore_1
     219: aload_1
     220: invokevirtual #56                 // Method java/lang/Exception.printStackTrace:()V
     223: new           #25                 // class org/hibernate/LazyInitializationException
     226: dup
     227: aload_1
     228: invokevirtual #57                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     231: invokespecial #27                 // Method org/hibernate/LazyInitializationException."<init>":(Ljava/lang/String;)V
     234: athrow
     235: aload_0
     236: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
     239: invokeinterface #28,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.isOpen:()Z
     244: ifeq          292
     247: aload_0
     248: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
     251: invokeinterface #30,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.isConnected:()Z
     256: ifeq          292
     259: aload_0
     260: aload_0
     261: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
     264: aload_0
     265: getfield      #2                  // Field entityName:Ljava/lang/String;
     268: aload_0
     269: getfield      #3                  // Field id:Ljava/io/Serializable;
     272: invokeinterface #32,  3           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.immediateLoad:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/lang/Object;
     277: putfield      #33                 // Field target:Ljava/lang/Object;
     280: aload_0
     281: iconst_1
     282: putfield      #6                  // Field initialized:Z
     285: aload_0
     286: invokespecial #34                 // Method checkTargetState:()V
     289: goto          302
     292: new           #25                 // class org/hibernate/LazyInitializationException
     295: dup
     296: ldc           #58                 // String could not initialize proxy - Session was closed or disced
     298: invokespecial #27                 // Method org/hibernate/LazyInitializationException."<init>":(Ljava/lang/String;)V
     301: athrow
     302: return
    Exception table:
       from    to  target type
         118   145   148   Class java/lang/Exception
         100   118   161   any
         163   190   193   Class java/lang/Exception
         161   163   161   any
          24   215   218   Class java/lang/Exception

  protected void prepareForPossibleLoadingOutsideTransaction();
    Code:
       0: aload_0
       1: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       4: ifnull        75
       7: aload_0
       8: aload_0
       9: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      12: invokeinterface #13,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      17: invokeinterface #59,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getSettings:()Lorg/hibernate/cfg/Settings;
      22: invokevirtual #60                 // Method org/hibernate/cfg/Settings.isInitializeLazyStateOutsideTransactionsEnabled:()Z
      25: putfield      #23                 // Field allowLoadOutsideTransaction:Z
      28: aload_0
      29: getfield      #23                 // Field allowLoadOutsideTransaction:Z
      32: ifeq          75
      35: aload_0
      36: getfield      #35                 // Field sessionFactoryUuid:Ljava/lang/String;
      39: ifnonnull     75
      42: aload_0
      43: aload_0
      44: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      47: invokeinterface #13,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      52: invokeinterface #61,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getReference:()Ljavax/naming/Reference;
      57: ldc           #62                 // String uuid
      59: invokevirtual #63                 // Method javax/naming/Reference.get:(Ljava/lang/String;)Ljavax/naming/RefAddr;
      62: invokevirtual #64                 // Method javax/naming/RefAddr.getContent:()Ljava/lang/Object;
      65: checkcast     #65                 // class java/lang/String
      68: putfield      #35                 // Field sessionFactoryUuid:Ljava/lang/String;
      71: goto          75
      74: astore_1
      75: return
    Exception table:
       from    to  target type
          42    71    74   Class javax/naming/NamingException

  private void checkTargetState();
    Code:
       0: aload_0
       1: getfield      #67                 // Field unwrap:Z
       4: ifne          41
       7: aload_0
       8: getfield      #33                 // Field target:Ljava/lang/Object;
      11: ifnonnull     41
      14: aload_0
      15: invokevirtual #68                 // Method getSession:()Lorg/hibernate/engine/spi/SessionImplementor;
      18: invokeinterface #13,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      23: invokeinterface #69,  1           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getEntityNotFoundDelegate:()Lorg/hibernate/proxy/EntityNotFoundDelegate;
      28: aload_0
      29: getfield      #2                  // Field entityName:Ljava/lang/String;
      32: aload_0
      33: getfield      #3                  // Field id:Ljava/io/Serializable;
      36: invokeinterface #70,  3           // InterfaceMethod org/hibernate/proxy/EntityNotFoundDelegate.handleEntityNotFound:(Ljava/lang/String;Ljava/io/Serializable;)V
      41: return

  protected final boolean isConnectedToSession();
    Code:
       0: aload_0
       1: invokespecial #71                 // Method getProxyOrNull:()Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private java.lang.Object getProxyOrNull();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getIdentifier:()Ljava/io/Serializable;
       4: aload_0
       5: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       8: aload_0
       9: invokevirtual #73                 // Method getEntityName:()Ljava/lang/String;
      12: invokestatic  #74                 // Method generateEntityKeyOrNull:(Ljava/io/Serializable;Lorg/hibernate/engine/spi/SessionImplementor;Ljava/lang/String;)Lorg/hibernate/engine/spi/EntityKey;
      15: astore_1
      16: aload_1
      17: ifnull        55
      20: aload_0
      21: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      24: ifnull        55
      27: aload_0
      28: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      31: invokeinterface #28,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.isOpen:()Z
      36: ifeq          55
      39: aload_0
      40: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      43: invokeinterface #15,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
      48: aload_1
      49: invokeinterface #75,  2           // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.getProxy:(Lorg/hibernate/engine/spi/EntityKey;)Ljava/lang/Object;
      54: areturn
      55: aconst_null
      56: areturn

  public final java.lang.Object getImplementation();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method initialize:()V
       4: aload_0
       5: getfield      #33                 // Field target:Ljava/lang/Object;
       8: areturn

  public final void setImplementation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field target:Ljava/lang/Object;
       5: aload_0
       6: iconst_1
       7: putfield      #6                  // Field initialized:Z
      10: return

  public final java.lang.Object getImplementation(org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getIdentifier:()Ljava/io/Serializable;
       4: aload_1
       5: aload_0
       6: invokevirtual #73                 // Method getEntityName:()Ljava/lang/String;
       9: invokestatic  #74                 // Method generateEntityKeyOrNull:(Ljava/io/Serializable;Lorg/hibernate/engine/spi/SessionImplementor;Ljava/lang/String;)Lorg/hibernate/engine/spi/EntityKey;
      12: astore_2
      13: aload_2
      14: ifnonnull     21
      17: aconst_null
      18: goto          33
      21: aload_1
      22: invokeinterface #15,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
      27: aload_2
      28: invokeinterface #77,  2           // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.getEntity:(Lorg/hibernate/engine/spi/EntityKey;)Ljava/lang/Object;
      33: areturn

  protected final java.lang.Object getTarget();
    Code:
       0: aload_0
       1: getfield      #33                 // Field target:Ljava/lang/Object;
       4: areturn

  public final boolean isReadOnlySettingAvailable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       4: ifnull        23
       7: aload_0
       8: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      11: invokeinterface #78,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.isClosed:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private void errorIfReadOnlySettingNotAvailable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       4: ifnonnull     17
       7: new           #79                 // class org/hibernate/TransientObjectException
      10: dup
      11: ldc           #80                 // String Proxy is detached (i.e, session is null). The read-only/modifiable setting is only accessible when the proxy is associated with an open session.
      13: invokespecial #81                 // Method org/hibernate/TransientObjectException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      21: invokeinterface #78,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.isClosed:()Z
      26: ifeq          39
      29: new           #82                 // class org/hibernate/SessionException
      32: dup
      33: ldc           #83                 // String Session is closed. The read-only/modifiable setting is only accessible when the proxy is associated with an open session.
      35: invokespecial #84                 // Method org/hibernate/SessionException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: return

  public final boolean isReadOnly();
    Code:
       0: aload_0
       1: invokespecial #85                 // Method errorIfReadOnlySettingNotAvailable:()V
       4: aload_0
       5: getfield      #22                 // Field readOnly:Z
       8: ireturn

  public final void setReadOnly(boolean);
    Code:
       0: aload_0
       1: invokespecial #85                 // Method errorIfReadOnlySettingNotAvailable:()V
       4: aload_0
       5: getfield      #22                 // Field readOnly:Z
       8: iload_1
       9: if_icmpeq     123
      12: aload_0
      13: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      16: invokeinterface #13,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getFactory:()Lorg/hibernate/engine/spi/SessionFactoryImplementor;
      21: aload_0
      22: getfield      #2                  // Field entityName:Ljava/lang/String;
      25: invokeinterface #14,  2           // InterfaceMethod org/hibernate/engine/spi/SessionFactoryImplementor.getEntityPersister:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
      30: astore_2
      31: aload_2
      32: invokeinterface #17,  1           // InterfaceMethod org/hibernate/persister/entity/EntityPersister.isMutable:()Z
      37: ifne          54
      40: iload_1
      41: ifne          54
      44: new           #86                 // class java/lang/IllegalStateException
      47: dup
      48: ldc           #87                 // String cannot make proxies for immutable entities modifiable
      50: invokespecial #88                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: iload_1
      56: putfield      #22                 // Field readOnly:Z
      59: aload_0
      60: getfield      #6                  // Field initialized:Z
      63: ifeq          123
      66: aload_0
      67: invokevirtual #72                 // Method getIdentifier:()Ljava/io/Serializable;
      70: aload_0
      71: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      74: aload_0
      75: invokevirtual #73                 // Method getEntityName:()Ljava/lang/String;
      78: invokestatic  #74                 // Method generateEntityKeyOrNull:(Ljava/io/Serializable;Lorg/hibernate/engine/spi/SessionImplementor;Ljava/lang/String;)Lorg/hibernate/engine/spi/EntityKey;
      81: astore_3
      82: aload_3
      83: ifnull        123
      86: aload_0
      87: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      90: invokeinterface #15,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
      95: aload_3
      96: invokeinterface #89,  2           // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.containsEntity:(Lorg/hibernate/engine/spi/EntityKey;)Z
     101: ifeq          123
     104: aload_0
     105: getfield      #7                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
     108: invokeinterface #15,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
     113: aload_0
     114: getfield      #33                 // Field target:Ljava/lang/Object;
     117: iload_1
     118: invokeinterface #90,  3           // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.setReadOnly:(Ljava/lang/Object;Z)V
     123: return

  protected final java.lang.Boolean isReadOnlyBeforeAttachedToSession();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method isReadOnlySettingAvailable:()Z
       4: ifeq          17
       7: new           #86                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #92                 // String Cannot call isReadOnlyBeforeAttachedToSession when isReadOnlySettingAvailable == true
      13: invokespecial #88                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #12                 // Field readOnlyBeforeAttachedToSession:Ljava/lang/Boolean;
      21: areturn

  final void setReadOnlyBeforeAttachedToSession(java.lang.Boolean);
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method isReadOnlySettingAvailable:()Z
       4: ifeq          17
       7: new           #86                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #93                 // String Cannot call setReadOnlyBeforeAttachedToSession when isReadOnlySettingAvailable == true
      13: invokespecial #88                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #12                 // Field readOnlyBeforeAttachedToSession:Ljava/lang/Boolean;
      22: return

  public boolean isUnwrap();
    Code:
       0: aload_0
       1: getfield      #67                 // Field unwrap:Z
       4: ireturn

  public void setUnwrap(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field unwrap:Z
       5: return

  static {};
    Code:
       0: ldc           #94                 // class org/hibernate/proxy/AbstractLazyInitializer
       2: invokestatic  #95                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #53                 // Field log:Lorg/jboss/logging/Logger;
       8: return
}
