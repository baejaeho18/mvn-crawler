Compiled from "Ingres9Dialect.java"
final class org.hibernate.dialect.Ingres9Dialect$1 extends org.hibernate.dialect.pagination.AbstractLimitHandler {
  org.hibernate.dialect.Ingres9Dialect$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/pagination/AbstractLimitHandler."<init>":()V
       4: return

  public java.lang.String processSql(java.lang.String, org.hibernate.engine.spi.RowSelection);
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #4                  // String  offset
       9: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_2
      13: invokevirtual #6                  // Method org/hibernate/engine/spi/RowSelection.getFirstRow:()Ljava/lang/Integer;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: astore_3
      23: new           #2                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #9                  // String  fetch first
      32: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: aload_2
      37: invokevirtual #10                 // Method getMaxOrLimit:(Lorg/hibernate/engine/spi/RowSelection;)I
      40: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #12                 // String  rows only
      45: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: astore        4
      53: new           #2                  // class java/lang/StringBuilder
      56: dup
      57: aload_1
      58: invokevirtual #13                 // Method java/lang/String.length:()I
      61: aload_3
      62: invokevirtual #13                 // Method java/lang/String.length:()I
      65: iadd
      66: aload         4
      68: invokevirtual #13                 // Method java/lang/String.length:()I
      71: iadd
      72: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(I)V
      75: aload_1
      76: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: astore        5
      81: aload_2
      82: invokestatic  #15                 // Method org/hibernate/dialect/pagination/LimitHelper.hasFirstRow:(Lorg/hibernate/engine/spi/RowSelection;)Z
      85: ifeq          95
      88: aload         5
      90: aload_3
      91: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: aload_2
      96: invokestatic  #16                 // Method org/hibernate/dialect/pagination/LimitHelper.hasMaxRows:(Lorg/hibernate/engine/spi/RowSelection;)Z
      99: ifeq          110
     102: aload         5
     104: aload         4
     106: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: pop
     110: aload         5
     112: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: areturn

  public boolean supportsLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsVariableLimit();
    Code:
       0: iconst_0
       1: ireturn
}
