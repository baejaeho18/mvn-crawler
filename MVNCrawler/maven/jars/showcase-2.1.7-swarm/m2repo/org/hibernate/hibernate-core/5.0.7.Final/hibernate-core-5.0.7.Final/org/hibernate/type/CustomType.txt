Compiled from "CustomType.java"
public class org.hibernate.type.CustomType extends org.hibernate.type.AbstractType implements org.hibernate.type.IdentifierType,org.hibernate.type.DiscriminatorType,org.hibernate.type.VersionType,org.hibernate.type.BasicType,org.hibernate.type.StringRepresentableType {
  private final org.hibernate.usertype.UserType userType;

  private final java.lang.String name;

  private final int[] types;

  private final org.hibernate.engine.jdbc.Size[] dictatedSizes;

  private final org.hibernate.engine.jdbc.Size[] defaultSizes;

  private final boolean customLogging;

  private final java.lang.String[] registrationKeys;

  public org.hibernate.type.CustomType(org.hibernate.usertype.UserType) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/hibernate/internal/util/collections/ArrayHelper.EMPTY_STRING_ARRAY:[Ljava/lang/String;
       5: invokespecial #2                  // Method "<init>":(Lorg/hibernate/usertype/UserType;[Ljava/lang/String;)V
       8: return

  public org.hibernate.type.CustomType(org.hibernate.usertype.UserType, java.lang.String[]) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/hibernate/type/AbstractType."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       9: aload_0
      10: aload_1
      11: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      17: putfield      #7                  // Field name:Ljava/lang/String;
      20: aload_0
      21: aload_1
      22: invokeinterface #8,  1            // InterfaceMethod org/hibernate/usertype/UserType.sqlTypes:()[I
      27: putfield      #9                  // Field types:[I
      30: aload_0
      31: ldc           #10                 // class org/hibernate/usertype/Sized
      33: aload_1
      34: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      37: ifeq          52
      40: aload_1
      41: checkcast     #10                 // class org/hibernate/usertype/Sized
      44: invokeinterface #12,  1           // InterfaceMethod org/hibernate/usertype/Sized.dictatedSizes:()[Lorg/hibernate/engine/jdbc/Size;
      49: goto          60
      52: aload_0
      53: getfield      #9                  // Field types:[I
      56: arraylength
      57: anewarray     #13                 // class org/hibernate/engine/jdbc/Size
      60: putfield      #14                 // Field dictatedSizes:[Lorg/hibernate/engine/jdbc/Size;
      63: aload_0
      64: ldc           #10                 // class org/hibernate/usertype/Sized
      66: aload_1
      67: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      70: ifeq          85
      73: aload_1
      74: checkcast     #10                 // class org/hibernate/usertype/Sized
      77: invokeinterface #15,  1           // InterfaceMethod org/hibernate/usertype/Sized.defaultSizes:()[Lorg/hibernate/engine/jdbc/Size;
      82: goto          93
      85: aload_0
      86: getfield      #9                  // Field types:[I
      89: arraylength
      90: anewarray     #13                 // class org/hibernate/engine/jdbc/Size
      93: putfield      #16                 // Field defaultSizes:[Lorg/hibernate/engine/jdbc/Size;
      96: aload_0
      97: ldc           #17                 // class org/hibernate/usertype/LoggableUserType
      99: aload_1
     100: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     103: putfield      #18                 // Field customLogging:Z
     106: aload_0
     107: aload_2
     108: putfield      #19                 // Field registrationKeys:[Ljava/lang/String;
     111: return

  public org.hibernate.usertype.UserType getUserType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: areturn

  public java.lang.String[] getRegistrationKeys();
    Code:
       0: aload_0
       1: getfield      #19                 // Field registrationKeys:[Ljava/lang/String;
       4: areturn

  public int[] sqlTypes(org.hibernate.engine.spi.Mapping);
    Code:
       0: aload_0
       1: getfield      #9                  // Field types:[I
       4: areturn

  public org.hibernate.engine.jdbc.Size[] dictatedSizes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field dictatedSizes:[Lorg/hibernate/engine/jdbc/Size;
       4: areturn

  public org.hibernate.engine.jdbc.Size[] defaultSizes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field defaultSizes:[Lorg/hibernate/engine/jdbc/Size;
       4: areturn

  public int getColumnSpan(org.hibernate.engine.spi.Mapping);
    Code:
       0: aload_0
       1: getfield      #9                  // Field types:[I
       4: arraylength
       5: ireturn

  public java.lang.Class getReturnedClass();
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: invokeinterface #20,  1           // InterfaceMethod org/hibernate/usertype/UserType.returnedClass:()Ljava/lang/Class;
       9: areturn

  public boolean isEqual(java.lang.Object, java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: aload_2
       6: invokeinterface #21,  3           // InterfaceMethod org/hibernate/usertype/UserType.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  public int getHashCode(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod org/hibernate/usertype/UserType.hashCode:(Ljava/lang/Object;)I
      10: ireturn

  public java.lang.Object nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SessionImplementor, java.lang.Object) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #23,  5           // InterfaceMethod org/hibernate/usertype/UserType.nullSafeGet:(Ljava/sql/ResultSet;[Ljava/lang/String;Lorg/hibernate/engine/spi/SessionImplementor;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public java.lang.Object nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SessionImplementor, java.lang.Object) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #24                 // class java/lang/String
       6: dup
       7: iconst_0
       8: aload_2
       9: aastore
      10: aload_3
      11: aload         4
      13: invokevirtual #25                 // Method nullSafeGet:(Ljava/sql/ResultSet;[Ljava/lang/String;Lorg/hibernate/engine/spi/SessionImplementor;Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public java.lang.Object assemble(java.io.Serializable, org.hibernate.engine.spi.SessionImplementor, java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: aload_3
       6: invokeinterface #26,  3           // InterfaceMethod org/hibernate/usertype/UserType.assemble:(Ljava/io/Serializable;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.io.Serializable disassemble(java.lang.Object, org.hibernate.engine.spi.SessionImplementor, java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod org/hibernate/usertype/UserType.disassemble:(Ljava/lang/Object;)Ljava/io/Serializable;
      10: areturn

  public java.lang.Object replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionImplementor, java.lang.Object, java.util.Map) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: aload_2
       6: aload         4
       8: invokeinterface #28,  4           // InterfaceMethod org/hibernate/usertype/UserType.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public void nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload         4
       2: iconst_0
       3: baload
       4: ifeq          21
       7: aload_0
       8: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      11: aload_1
      12: aload_2
      13: iload_3
      14: aload         5
      16: invokeinterface #29,  5           // InterfaceMethod org/hibernate/usertype/UserType.nullSafeSet:(Ljava/sql/PreparedStatement;Ljava/lang/Object;ILorg/hibernate/engine/spi/SessionImplementor;)V
      21: return

  public void nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: invokeinterface #29,  5           // InterfaceMethod org/hibernate/usertype/UserType.nullSafeSet:(Ljava/sql/PreparedStatement;Ljava/lang/Object;ILorg/hibernate/engine/spi/SessionImplementor;)V
      14: return

  public java.lang.String toXMLString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method toString:(Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.Object fromXMLString(java.lang.String, org.hibernate.engine.spi.Mapping);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method fromStringValue:(Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.Object deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod org/hibernate/usertype/UserType.deepCopy:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean isMutable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: invokeinterface #33,  1           // InterfaceMethod org/hibernate/usertype/UserType.isMutable:()Z
       9: ireturn

  public java.lang.Object stringToObject(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method fromStringValue:(Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  public java.lang.String objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: checkcast     #34                 // class org/hibernate/usertype/EnhancedUserType
       7: aload_1
       8: invokeinterface #35,  2           // InterfaceMethod org/hibernate/usertype/EnhancedUserType.objectToSQLString:(Ljava/lang/Object;)Ljava/lang/String;
      13: areturn

  public java.util.Comparator getComparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: checkcast     #36                 // class java/util/Comparator
       7: areturn

  public java.lang.Object next(java.lang.Object, org.hibernate.engine.spi.SessionImplementor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: checkcast     #37                 // class org/hibernate/usertype/UserVersionType
       7: aload_1
       8: aload_2
       9: invokeinterface #38,  3           // InterfaceMethod org/hibernate/usertype/UserVersionType.next:(Ljava/lang/Object;Lorg/hibernate/engine/spi/SessionImplementor;)Ljava/lang/Object;
      14: areturn

  public java.lang.Object seed(org.hibernate.engine.spi.SessionImplementor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       4: checkcast     #37                 // class org/hibernate/usertype/UserVersionType
       7: aload_1
       8: invokeinterface #39,  2           // InterfaceMethod org/hibernate/usertype/UserVersionType.seed:(Lorg/hibernate/engine/spi/SessionImplementor;)Ljava/lang/Object;
      13: areturn

  public java.lang.String toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #40                 // String null
       6: areturn
       7: aload_0
       8: getfield      #18                 // Field customLogging:Z
      11: ifeq          29
      14: aload_0
      15: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      18: checkcast     #17                 // class org/hibernate/usertype/LoggableUserType
      21: aload_1
      22: aload_2
      23: invokeinterface #41,  3           // InterfaceMethod org/hibernate/usertype/LoggableUserType.toLoggableString:(Ljava/lang/Object;Lorg/hibernate/engine/spi/SessionFactoryImplementor;)Ljava/lang/String;
      28: areturn
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokevirtual #42                 // Method toXMLString:(Ljava/lang/Object;Lorg/hibernate/engine/spi/SessionFactoryImplementor;)Ljava/lang/String;
      35: areturn

  public boolean[] toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #43                 // Method getColumnSpan:(Lorg/hibernate/engine/spi/Mapping;)I
       5: newarray       boolean
       7: astore_3
       8: aload_1
       9: ifnull        17
      12: aload_3
      13: iconst_1
      14: invokestatic  #44                 // Method java/util/Arrays.fill:([ZZ)V
      17: aload_3
      18: areturn

  public boolean isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_3
       1: iconst_0
       2: baload
       3: ifeq          21
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload         4
      11: invokevirtual #45                 // Method isDirty:(Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/engine/spi/SessionImplementor;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.lang.String toString(java.lang.Object) throws org.hibernate.HibernateException;
    Code:
       0: ldc           #46                 // class org/hibernate/type/StringRepresentableType
       2: aload_0
       3: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       6: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       9: ifeq          26
      12: aload_0
      13: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      16: checkcast     #46                 // class org/hibernate/type/StringRepresentableType
      19: aload_1
      20: invokeinterface #47,  2           // InterfaceMethod org/hibernate/type/StringRepresentableType.toString:(Ljava/lang/Object;)Ljava/lang/String;
      25: areturn
      26: aload_1
      27: ifnonnull     32
      30: aconst_null
      31: areturn
      32: ldc           #34                 // class org/hibernate/usertype/EnhancedUserType
      34: aload_0
      35: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      38: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      41: ifeq          58
      44: aload_0
      45: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      48: checkcast     #34                 // class org/hibernate/usertype/EnhancedUserType
      51: aload_1
      52: invokeinterface #48,  2           // InterfaceMethod org/hibernate/usertype/EnhancedUserType.toXMLString:(Ljava/lang/Object;)Ljava/lang/String;
      57: areturn
      58: aload_1
      59: invokevirtual #49                 // Method java/lang/Object.toString:()Ljava/lang/String;
      62: areturn

  public java.lang.Object fromStringValue(java.lang.String) throws org.hibernate.HibernateException;
    Code:
       0: ldc           #46                 // class org/hibernate/type/StringRepresentableType
       2: aload_0
       3: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
       6: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       9: ifeq          26
      12: aload_0
      13: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      16: checkcast     #46                 // class org/hibernate/type/StringRepresentableType
      19: aload_1
      20: invokeinterface #50,  2           // InterfaceMethod org/hibernate/type/StringRepresentableType.fromStringValue:(Ljava/lang/String;)Ljava/lang/Object;
      25: areturn
      26: ldc           #34                 // class org/hibernate/usertype/EnhancedUserType
      28: aload_0
      29: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      32: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      35: ifeq          52
      38: aload_0
      39: getfield      #4                  // Field userType:Lorg/hibernate/usertype/UserType;
      42: checkcast     #34                 // class org/hibernate/usertype/EnhancedUserType
      45: aload_1
      46: invokeinterface #51,  2           // InterfaceMethod org/hibernate/usertype/EnhancedUserType.fromXMLString:(Ljava/lang/String;)Ljava/lang/Object;
      51: areturn
      52: new           #52                 // class org/hibernate/HibernateException
      55: dup
      56: ldc           #53                 // String Could not process #fromStringValue, UserType class [%s] did not implement %s or %s
      58: iconst_3
      59: anewarray     #54                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_0
      65: getfield      #7                  // Field name:Ljava/lang/String;
      68: aastore
      69: dup
      70: iconst_1
      71: ldc           #46                 // class org/hibernate/type/StringRepresentableType
      73: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      76: aastore
      77: dup
      78: iconst_2
      79: ldc           #34                 // class org/hibernate/usertype/EnhancedUserType
      81: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      84: aastore
      85: invokestatic  #55                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      88: invokespecial #56                 // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;)V
      91: athrow
}
