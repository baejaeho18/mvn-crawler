Compiled from "SchemaUpdateTask.java"
public class org.hibernate.tool.hbm2ddl.SchemaUpdateTask extends org.apache.tools.ant.taskdefs.MatchingTask {
  private java.util.List<org.apache.tools.ant.types.FileSet> fileSets;

  private java.io.File propertiesFile;

  private java.io.File configurationFile;

  private java.io.File outputFile;

  private boolean quiet;

  private boolean text;

  private boolean haltOnError;

  private java.lang.String delimiter;

  private java.lang.String implicitNamingStrategy;

  private java.lang.String physicalNamingStrategy;

  public org.hibernate.tool.hbm2ddl.SchemaUpdateTask();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/tools/ant/taskdefs/MatchingTask."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field fileSets:Ljava/util/List;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field text:Z
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field implicitNamingStrategy:Ljava/lang/String;
      25: aload_0
      26: aconst_null
      27: putfield      #7                  // Field physicalNamingStrategy:Ljava/lang/String;
      30: return

  public void addFileset(org.apache.tools.ant.types.FileSet);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileSets:Ljava/util/List;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void setProperties(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/io/File.exists:()Z
       4: ifne          39
       7: new           #10                 // class org/apache/tools/ant/BuildException
      10: dup
      11: new           #11                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #13                 // String Properties file:
      20: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #16                 // String  does not exist.
      29: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #18                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: new           #11                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #19                 // String Using properties file
      49: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: iconst_4
      60: invokevirtual #21                 // Method log:(Ljava/lang/String;I)V
      63: aload_0
      64: aload_1
      65: putfield      #22                 // Field propertiesFile:Ljava/io/File;
      68: return

  public void setConfig(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field configurationFile:Ljava/io/File;
       5: return

  public void setText(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field text:Z
       5: return

  public void setQuiet(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field quiet:Z
       5: return

  public void setNamingStrategy(java.lang.String);
    Code:
       0: getstatic     #25                 // Field org/hibernate/internal/log/DeprecationLogger.DEPRECATION_LOGGER:Lorg/hibernate/internal/log/DeprecationLogger;
       3: invokeinterface #26,  1           // InterfaceMethod org/hibernate/internal/log/DeprecationLogger.logDeprecatedNamingStrategyAntArgument:()V
       8: return

  public void setImplicitNamingStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field implicitNamingStrategy:Ljava/lang/String;
       5: return

  public void setPhysicalNamingStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field physicalNamingStrategy:Ljava/lang/String;
       5: return

  public java.io.File getOutputFile();
    Code:
       0: aload_0
       1: getfield      #27                 // Field outputFile:Ljava/io/File;
       4: areturn

  public void setOutputFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field outputFile:Ljava/io/File;
       5: return

  public boolean isHaltOnError();
    Code:
       0: aload_0
       1: getfield      #28                 // Field haltOnError:Z
       4: ireturn

  public void setHaltOnError(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field haltOnError:Z
       5: return

  public java.lang.String getDelimiter();
    Code:
       0: aload_0
       1: getfield      #29                 // Field delimiter:Ljava/lang/String;
       4: areturn

  public void setDelimiter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field delimiter:Ljava/lang/String;
       5: return

  public void execute() throws org.apache.tools.ant.BuildException;
    Code:
       0: aload_0
       1: ldc           #30                 // String Running Hibernate Core SchemaUpdate.
       3: invokevirtual #31                 // Method log:(Ljava/lang/String;)V
       6: aload_0
       7: ldc           #32                 // String This is an Ant task supporting only mapping files, if you want to use annotations see http://tools.hibernate.org.
       9: invokevirtual #31                 // Method log:(Ljava/lang/String;)V
      12: new           #33                 // class org/hibernate/boot/registry/StandardServiceRegistryBuilder
      15: dup
      16: invokespecial #34                 // Method org/hibernate/boot/registry/StandardServiceRegistryBuilder."<init>":()V
      19: astore_1
      20: aload_0
      21: aload_1
      22: invokespecial #35                 // Method configure:(Lorg/hibernate/boot/registry/StandardServiceRegistryBuilder;)V
      25: aload_1
      26: invokevirtual #36                 // Method org/hibernate/boot/registry/StandardServiceRegistryBuilder.build:()Lorg/hibernate/boot/registry/StandardServiceRegistry;
      29: astore_2
      30: new           #37                 // class org/hibernate/boot/MetadataSources
      33: dup
      34: aload_2
      35: invokespecial #38                 // Method org/hibernate/boot/MetadataSources."<init>":(Lorg/hibernate/service/ServiceRegistry;)V
      38: astore_3
      39: aload_0
      40: aload_3
      41: invokespecial #39                 // Method configure:(Lorg/hibernate/boot/MetadataSources;)V
      44: aload_3
      45: invokevirtual #40                 // Method org/hibernate/boot/MetadataSources.getMetadataBuilder:()Lorg/hibernate/boot/MetadataBuilder;
      48: astore        4
      50: aload_0
      51: aload         4
      53: aload_2
      54: invokespecial #41                 // Method configure:(Lorg/hibernate/boot/MetadataBuilder;Lorg/hibernate/boot/registry/StandardServiceRegistry;)V
      57: aload         4
      59: invokeinterface #42,  1           // InterfaceMethod org/hibernate/boot/MetadataBuilder.build:()Lorg/hibernate/boot/Metadata;
      64: checkcast     #43                 // class org/hibernate/boot/spi/MetadataImplementor
      67: astore        5
      69: new           #44                 // class org/hibernate/tool/hbm2ddl/SchemaUpdate
      72: dup
      73: aload         5
      75: invokespecial #45                 // Method org/hibernate/tool/hbm2ddl/SchemaUpdate."<init>":(Lorg/hibernate/boot/spi/MetadataImplementor;)V
      78: astore        6
      80: aload         6
      82: aload_0
      83: getfield      #27                 // Field outputFile:Ljava/io/File;
      86: invokevirtual #46                 // Method java/io/File.getPath:()Ljava/lang/String;
      89: invokevirtual #47                 // Method org/hibernate/tool/hbm2ddl/SchemaUpdate.setOutputFile:(Ljava/lang/String;)V
      92: aload         6
      94: aload_0
      95: getfield      #29                 // Field delimiter:Ljava/lang/String;
      98: invokevirtual #48                 // Method org/hibernate/tool/hbm2ddl/SchemaUpdate.setDelimiter:(Ljava/lang/String;)V
     101: aload         6
     103: aload_0
     104: getfield      #28                 // Field haltOnError:Z
     107: invokevirtual #49                 // Method org/hibernate/tool/hbm2ddl/SchemaUpdate.setHaltOnError:(Z)V
     110: aload         6
     112: aload_0
     113: getfield      #24                 // Field quiet:Z
     116: ifne          123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: aload_0
     125: getfield      #5                  // Field text:Z
     128: ifne          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: invokevirtual #50                 // Method org/hibernate/tool/hbm2ddl/SchemaUpdate.execute:(ZZ)V
     139: goto          251
     142: astore_1
     143: new           #10                 // class org/apache/tools/ant/BuildException
     146: dup
     147: new           #11                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #52                 // String Schema text failed:
     156: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_1
     160: invokevirtual #53                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     163: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: aload_1
     170: invokespecial #54                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     173: athrow
     174: astore_1
     175: new           #10                 // class org/apache/tools/ant/BuildException
     178: dup
     179: new           #11                 // class java/lang/StringBuilder
     182: dup
     183: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     186: ldc           #56                 // String File not found:
     188: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_1
     192: invokevirtual #57                 // Method java/io/FileNotFoundException.getMessage:()Ljava/lang/String;
     195: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: aload_1
     202: invokespecial #54                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     205: athrow
     206: astore_1
     207: new           #10                 // class org/apache/tools/ant/BuildException
     210: dup
     211: new           #11                 // class java/lang/StringBuilder
     214: dup
     215: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     218: ldc           #59                 // String IOException :
     220: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: aload_1
     224: invokevirtual #60                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     227: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: aload_1
     234: invokespecial #54                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     237: athrow
     238: astore_1
     239: aload_1
     240: athrow
     241: astore_1
     242: new           #10                 // class org/apache/tools/ant/BuildException
     245: dup
     246: aload_1
     247: invokespecial #62                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/Throwable;)V
     250: athrow
     251: return
    Exception table:
       from    to  target type
          12   139   142   Class org/hibernate/HibernateException
          12   139   174   Class java/io/FileNotFoundException
          12   139   206   Class java/io/IOException
          12   139   238   Class org/apache/tools/ant/BuildException
          12   139   241   Class java/lang/Exception

  private void configure(org.hibernate.boot.registry.StandardServiceRegistryBuilder) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field configurationFile:Ljava/io/File;
       4: ifnull        16
       7: aload_1
       8: aload_0
       9: getfield      #23                 // Field configurationFile:Ljava/io/File;
      12: invokevirtual #63                 // Method org/hibernate/boot/registry/StandardServiceRegistryBuilder.configure:(Ljava/io/File;)Lorg/hibernate/boot/registry/StandardServiceRegistryBuilder;
      15: pop
      16: new           #64                 // class java/util/Properties
      19: dup
      20: invokespecial #65                 // Method java/util/Properties."<init>":()V
      23: astore_2
      24: aload_0
      25: getfield      #22                 // Field propertiesFile:Ljava/io/File;
      28: ifnonnull     45
      31: aload_2
      32: aload_0
      33: invokevirtual #66                 // Method getProject:()Lorg/apache/tools/ant/Project;
      36: invokevirtual #67                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
      39: invokevirtual #68                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      42: goto          60
      45: aload_2
      46: new           #69                 // class java/io/FileInputStream
      49: dup
      50: aload_0
      51: getfield      #22                 // Field propertiesFile:Ljava/io/File;
      54: invokespecial #70                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      57: invokevirtual #71                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      60: aload_1
      61: aload_2
      62: invokevirtual #72                 // Method org/hibernate/boot/registry/StandardServiceRegistryBuilder.applySettings:(Ljava/util/Map;)Lorg/hibernate/boot/registry/StandardServiceRegistryBuilder;
      65: pop
      66: return

  private void configure(org.hibernate.boot.MetadataSources);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method collectFiles:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     63
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: ldc           #74                 // String .jar
      27: invokevirtual #75                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      30: ifeq          50
      33: aload_1
      34: new           #76                 // class java/io/File
      37: dup
      38: aload         5
      40: invokespecial #77                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      43: invokevirtual #78                 // Method org/hibernate/boot/MetadataSources.addJar:(Ljava/io/File;)Lorg/hibernate/boot/MetadataSources;
      46: pop
      47: goto          57
      50: aload_1
      51: aload         5
      53: invokevirtual #79                 // Method org/hibernate/boot/MetadataSources.addFile:(Ljava/lang/String;)Lorg/hibernate/boot/MetadataSources;
      56: pop
      57: iinc          4, 1
      60: goto          11
      63: return

  private java.lang.String[] collectFiles();
    Code:
       0: new           #2                  // class java/util/LinkedList
       3: dup
       4: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field fileSets:Ljava/util/List;
      12: invokeinterface #80,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          136
      27: aload_2
      28: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #83                 // class org/apache/tools/ant/types/FileSet
      36: astore_3
      37: aload_3
      38: aload_0
      39: invokevirtual #66                 // Method getProject:()Lorg/apache/tools/ant/Project;
      42: invokevirtual #84                 // Method org/apache/tools/ant/types/FileSet.getDirectoryScanner:(Lorg/apache/tools/ant/Project;)Lorg/apache/tools/ant/DirectoryScanner;
      45: astore        4
      47: aload         4
      49: invokevirtual #85                 // Method org/apache/tools/ant/DirectoryScanner.getIncludedFiles:()[Ljava/lang/String;
      52: astore        5
      54: aload         5
      56: astore        6
      58: aload         6
      60: arraylength
      61: istore        7
      63: iconst_0
      64: istore        8
      66: iload         8
      68: iload         7
      70: if_icmpge     133
      73: aload         6
      75: iload         8
      77: aaload
      78: astore        9
      80: new           #76                 // class java/io/File
      83: dup
      84: aload         9
      86: invokespecial #77                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      89: astore        10
      91: aload         10
      93: invokevirtual #86                 // Method java/io/File.isFile:()Z
      96: ifne          115
      99: new           #76                 // class java/io/File
     102: dup
     103: aload         4
     105: invokevirtual #87                 // Method org/apache/tools/ant/DirectoryScanner.getBasedir:()Ljava/io/File;
     108: aload         9
     110: invokespecial #88                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     113: astore        10
     115: aload_1
     116: aload         10
     118: invokevirtual #89                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     121: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     126: pop
     127: iinc          8, 1
     130: goto          66
     133: goto          18
     136: aload_1
     137: invokestatic  #90                 // Method org/hibernate/internal/util/collections/ArrayHelper.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
     140: areturn

  private void configure(org.hibernate.boot.MetadataBuilder, org.hibernate.boot.registry.StandardServiceRegistry);
    Code:
       0: aload_2
       1: ldc           #91                 // class org/hibernate/boot/registry/classloading/spi/ClassLoaderService
       3: invokeinterface #92,  2           // InterfaceMethod org/hibernate/boot/registry/StandardServiceRegistry.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
       8: checkcast     #91                 // class org/hibernate/boot/registry/classloading/spi/ClassLoaderService
      11: astore_3
      12: aload_0
      13: getfield      #6                  // Field implicitNamingStrategy:Ljava/lang/String;
      16: ifnull        84
      19: aload_1
      20: aload_3
      21: aload_0
      22: getfield      #6                  // Field implicitNamingStrategy:Ljava/lang/String;
      25: invokeinterface #93,  2           // InterfaceMethod org/hibernate/boot/registry/classloading/spi/ClassLoaderService.classForName:(Ljava/lang/String;)Ljava/lang/Class;
      30: invokevirtual #94                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      33: checkcast     #95                 // class org/hibernate/boot/model/naming/ImplicitNamingStrategy
      36: invokeinterface #96,  2           // InterfaceMethod org/hibernate/boot/MetadataBuilder.applyImplicitNamingStrategy:(Lorg/hibernate/boot/model/naming/ImplicitNamingStrategy;)Lorg/hibernate/boot/MetadataBuilder;
      41: pop
      42: goto          84
      45: astore        4
      47: new           #10                 // class org/apache/tools/ant/BuildException
      50: dup
      51: new           #11                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #97                 // String Unable to instantiate specified ImplicitNamingStrategy [
      60: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #6                  // Field implicitNamingStrategy:Ljava/lang/String;
      67: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #98                 // String ]
      72: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: aload         4
      80: invokespecial #54                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      83: athrow
      84: aload_0
      85: getfield      #7                  // Field physicalNamingStrategy:Ljava/lang/String;
      88: ifnull        156
      91: aload_1
      92: aload_3
      93: aload_0
      94: getfield      #7                  // Field physicalNamingStrategy:Ljava/lang/String;
      97: invokeinterface #93,  2           // InterfaceMethod org/hibernate/boot/registry/classloading/spi/ClassLoaderService.classForName:(Ljava/lang/String;)Ljava/lang/Class;
     102: invokevirtual #94                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     105: checkcast     #99                 // class org/hibernate/boot/model/naming/PhysicalNamingStrategy
     108: invokeinterface #100,  2          // InterfaceMethod org/hibernate/boot/MetadataBuilder.applyPhysicalNamingStrategy:(Lorg/hibernate/boot/model/naming/PhysicalNamingStrategy;)Lorg/hibernate/boot/MetadataBuilder;
     113: pop
     114: goto          156
     117: astore        4
     119: new           #10                 // class org/apache/tools/ant/BuildException
     122: dup
     123: new           #11                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #101                // String Unable to instantiate specified PhysicalNamingStrategy [
     132: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_0
     136: getfield      #7                  // Field physicalNamingStrategy:Ljava/lang/String;
     139: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: ldc           #98                 // String ]
     144: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: aload         4
     152: invokespecial #54                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     155: athrow
     156: return
    Exception table:
       from    to  target type
          19    42    45   Class java/lang/Exception
          91   114   117   Class java/lang/Exception
}
