Compiled from "Ingres9Dialect.java"
public class org.hibernate.dialect.Ingres9Dialect extends org.hibernate.dialect.IngresDialect {
  private static final org.hibernate.dialect.pagination.LimitHandler LIMIT_HANDLER;

  public org.hibernate.dialect.Ingres9Dialect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/IngresDialect."<init>":()V
       4: aload_0
       5: invokevirtual #2                  // Method registerDateTimeFunctions:()V
       8: aload_0
       9: invokevirtual #3                  // Method registerDateTimeColumnTypes:()V
      12: aload_0
      13: ldc           #4                  // String concat
      15: new           #5                  // class org/hibernate/dialect/function/VarArgsSQLFunction
      18: dup
      19: getstatic     #6                  // Field org/hibernate/type/StandardBasicTypes.STRING:Lorg/hibernate/type/StringType;
      22: ldc           #7                  // String (
      24: ldc           #8                  // String ||
      26: ldc           #9                  // String )
      28: invokespecial #10                 // Method org/hibernate/dialect/function/VarArgsSQLFunction."<init>":(Lorg/hibernate/type/Type;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      31: invokevirtual #11                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
      34: return

  protected void registerDateTimeFunctions();
    Code:
       0: aload_0
       1: ldc           #12                 // String current_time
       3: new           #13                 // class org/hibernate/dialect/function/NoArgSQLFunction
       6: dup
       7: ldc           #12                 // String current_time
       9: getstatic     #14                 // Field org/hibernate/type/StandardBasicTypes.TIME:Lorg/hibernate/type/TimeType;
      12: iconst_0
      13: invokespecial #15                 // Method org/hibernate/dialect/function/NoArgSQLFunction."<init>":(Ljava/lang/String;Lorg/hibernate/type/Type;Z)V
      16: invokevirtual #11                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
      19: aload_0
      20: ldc           #16                 // String current_timestamp
      22: new           #13                 // class org/hibernate/dialect/function/NoArgSQLFunction
      25: dup
      26: ldc           #16                 // String current_timestamp
      28: getstatic     #17                 // Field org/hibernate/type/StandardBasicTypes.TIMESTAMP:Lorg/hibernate/type/TimestampType;
      31: iconst_0
      32: invokespecial #15                 // Method org/hibernate/dialect/function/NoArgSQLFunction."<init>":(Ljava/lang/String;Lorg/hibernate/type/Type;Z)V
      35: invokevirtual #11                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
      38: aload_0
      39: ldc           #18                 // String current_date
      41: new           #13                 // class org/hibernate/dialect/function/NoArgSQLFunction
      44: dup
      45: ldc           #18                 // String current_date
      47: getstatic     #19                 // Field org/hibernate/type/StandardBasicTypes.DATE:Lorg/hibernate/type/DateType;
      50: iconst_0
      51: invokespecial #15                 // Method org/hibernate/dialect/function/NoArgSQLFunction."<init>":(Ljava/lang/String;Lorg/hibernate/type/Type;Z)V
      54: invokevirtual #11                 // Method registerFunction:(Ljava/lang/String;Lorg/hibernate/dialect/function/SQLFunction;)V
      57: return

  protected void registerDateTimeColumnTypes();
    Code:
       0: aload_0
       1: bipush        91
       3: ldc           #21                 // String ansidate
       5: invokevirtual #22                 // Method registerColumnType:(ILjava/lang/String;)V
       8: aload_0
       9: bipush        93
      11: ldc           #23                 // String timestamp(9) with time zone
      13: invokevirtual #22                 // Method registerColumnType:(ILjava/lang/String;)V
      16: return

  public boolean supportsOuterJoinForUpdate();
    Code:
       0: iconst_0
       1: ireturn

  public boolean forUpdateOfColumns();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getIdentitySelectString();
    Code:
       0: ldc           #24                 // String select last_identity()
       2: areturn

  public java.lang.String getQuerySequencesString();
    Code:
       0: ldc           #25                 // String select seq_name from iisequences
       2: areturn

  public boolean supportsPooledSequences();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isCurrentTimestampSelectStringCallable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean supportsCurrentTimestampSelection();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getCurrentTimestampSelectString();
    Code:
       0: ldc           #26                 // String select current_timestamp
       2: areturn

  public java.lang.String getCurrentTimestampSQLFunctionName();
    Code:
       0: ldc           #16                 // String current_timestamp
       2: areturn

  public boolean supportsUnionAll();
    Code:
       0: iconst_1
       1: ireturn

  public boolean doesReadCommittedCauseWritersToBlockReaders();
    Code:
       0: iconst_1
       1: ireturn

  public boolean doesRepeatableReadCauseReadersToBlockWriters();
    Code:
       0: iconst_1
       1: ireturn

  public org.hibernate.dialect.pagination.LimitHandler getLimitHandler();
    Code:
       0: getstatic     #27                 // Field LIMIT_HANDLER:Lorg/hibernate/dialect/pagination/LimitHandler;
       3: areturn

  public boolean supportsLimitOffset();
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsVariableLimit();
    Code:
       0: iconst_0
       1: ireturn

  public boolean useMaxForLimit();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getLimitString(java.lang.String, int, int);
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: new           #28                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #30                 // String  offset
      13: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_2
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #34                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      26: astore        4
      28: new           #28                 // class java/lang/StringBuilder
      31: dup
      32: new           #28                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #35                 // String  fetch first
      41: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_3
      45: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #36                 // String  rows only
      50: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #34                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      59: astore        5
      61: new           #28                 // class java/lang/StringBuilder
      64: dup
      65: aload_1
      66: invokevirtual #37                 // Method java/lang/String.length:()I
      69: aload         4
      71: invokevirtual #38                 // Method java/lang/StringBuilder.length:()I
      74: iadd
      75: aload         5
      77: invokevirtual #38                 // Method java/lang/StringBuilder.length:()I
      80: iadd
      81: invokespecial #39                 // Method java/lang/StringBuilder."<init>":(I)V
      84: aload_1
      85: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: astore        6
      90: iload_2
      91: ifle          102
      94: aload         6
      96: aload         4
      98: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     101: pop
     102: iload_3
     103: ifle          114
     106: aload         6
     108: aload         5
     110: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     113: pop
     114: aload         6
     116: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: areturn

  static {};
    Code:
       0: new           #41                 // class org/hibernate/dialect/Ingres9Dialect$1
       3: dup
       4: invokespecial #42                 // Method org/hibernate/dialect/Ingres9Dialect$1."<init>":()V
       7: putstatic     #27                 // Field LIMIT_HANDLER:Lorg/hibernate/dialect/pagination/LimitHandler;
      10: return
}
