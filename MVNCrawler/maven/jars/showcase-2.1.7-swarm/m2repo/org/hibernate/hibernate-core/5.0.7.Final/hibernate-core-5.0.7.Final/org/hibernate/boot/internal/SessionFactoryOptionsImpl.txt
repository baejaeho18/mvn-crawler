Compiled from "SessionFactoryOptionsImpl.java"
public class org.hibernate.boot.internal.SessionFactoryOptionsImpl implements org.hibernate.boot.spi.SessionFactoryOptions {
  private final org.hibernate.boot.registry.StandardServiceRegistry serviceRegistry;

  private final java.lang.Object beanManagerReference;

  private final java.lang.Object validatorFactoryReference;

  private final java.lang.String sessionFactoryName;

  private final boolean sessionFactoryNameAlsoJndiName;

  private final boolean flushBeforeCompletionEnabled;

  private final boolean autoCloseSessionEnabled;

  private final boolean jtaTrackByThread;

  private final boolean preferUserTransaction;

  private final boolean statisticsEnabled;

  private final org.hibernate.Interceptor interceptor;

  private final org.hibernate.resource.jdbc.spi.StatementInspector statementInspector;

  private final org.hibernate.SessionFactoryObserver[] sessionFactoryObserverList;

  private final org.hibernate.cfg.BaselineSessionEventsListenerBuilder baselineSessionEventsListenerBuilder;

  private final org.hibernate.CustomEntityDirtinessStrategy customEntityDirtinessStrategy;

  private final org.hibernate.EntityNameResolver[] entityNameResolvers;

  private final org.hibernate.proxy.EntityNotFoundDelegate entityNotFoundDelegate;

  private final boolean identifierRollbackEnabled;

  private final org.hibernate.EntityMode defaultEntityMode;

  private final org.hibernate.tuple.entity.EntityTuplizerFactory entityTuplizerFactory;

  private boolean checkNullability;

  private final boolean initializeLazyStateOutsideTransactions;

  private final org.hibernate.hql.spi.id.MultiTableBulkIdStrategy multiTableBulkIdStrategy;

  private final org.hibernate.boot.TempTableDdlTransactionHandling tempTableDdlTransactionHandling;

  private final org.hibernate.loader.BatchFetchStyle batchFetchStyle;

  private final int defaultBatchFetchSize;

  private final java.lang.Integer maximumFetchDepth;

  private final org.hibernate.NullPrecedence defaultNullPrecedence;

  private final boolean orderUpdatesEnabled;

  private final boolean orderInsertsEnabled;

  private final org.hibernate.MultiTenancyStrategy multiTenancyStrategy;

  private final org.hibernate.context.spi.CurrentTenantIdentifierResolver currentTenantIdentifierResolver;

  private final java.util.Map querySubstitutions;

  private final boolean strictJpaQueryLanguageCompliance;

  private final boolean namedQueryStartupCheckingEnabled;

  private final boolean secondLevelCacheEnabled;

  private final boolean queryCacheEnabled;

  private final org.hibernate.cache.spi.QueryCacheFactory queryCacheFactory;

  private final java.lang.String cacheRegionPrefix;

  private final boolean minimalPutsEnabled;

  private final boolean structuredCacheEntriesEnabled;

  private final boolean directReferenceCacheEntriesEnabled;

  private final boolean autoEvictCollectionCache;

  private final org.hibernate.boot.SchemaAutoTooling schemaAutoTooling;

  private final boolean getGeneratedKeysEnabled;

  private final int jdbcBatchSize;

  private final boolean jdbcBatchVersionedData;

  private final java.lang.Integer jdbcFetchSize;

  private final boolean scrollableResultSetsEnabled;

  private final boolean commentsEnabled;

  private final org.hibernate.ConnectionReleaseMode connectionReleaseMode;

  private final boolean wrapResultSetsEnabled;

  private final java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction> sqlFunctions;

  public org.hibernate.boot.internal.SessionFactoryOptionsImpl(org.hibernate.boot.internal.SessionFactoryOptionsState);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getServiceRegistry:()Lorg/hibernate/boot/registry/StandardServiceRegistry;
      11: putfield      #3                  // Field serviceRegistry:Lorg/hibernate/boot/registry/StandardServiceRegistry;
      14: aload_0
      15: aload_1
      16: invokeinterface #4,  1            // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getBeanManagerReference:()Ljava/lang/Object;
      21: putfield      #5                  // Field beanManagerReference:Ljava/lang/Object;
      24: aload_0
      25: aload_1
      26: invokeinterface #6,  1            // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getValidatorFactoryReference:()Ljava/lang/Object;
      31: putfield      #7                  // Field validatorFactoryReference:Ljava/lang/Object;
      34: aload_0
      35: aload_1
      36: invokeinterface #8,  1            // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getSessionFactoryName:()Ljava/lang/String;
      41: putfield      #9                  // Field sessionFactoryName:Ljava/lang/String;
      44: aload_0
      45: aload_1
      46: invokeinterface #10,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isSessionFactoryNameAlsoJndiName:()Z
      51: putfield      #11                 // Field sessionFactoryNameAlsoJndiName:Z
      54: aload_0
      55: aload_1
      56: invokeinterface #12,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isFlushBeforeCompletionEnabled:()Z
      61: putfield      #13                 // Field flushBeforeCompletionEnabled:Z
      64: aload_0
      65: aload_1
      66: invokeinterface #14,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isAutoCloseSessionEnabled:()Z
      71: putfield      #15                 // Field autoCloseSessionEnabled:Z
      74: aload_0
      75: aload_1
      76: invokeinterface #16,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isJtaTrackByThread:()Z
      81: putfield      #17                 // Field jtaTrackByThread:Z
      84: aload_0
      85: aload_1
      86: invokeinterface #18,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isPreferUserTransaction:()Z
      91: putfield      #19                 // Field preferUserTransaction:Z
      94: aload_0
      95: aload_1
      96: invokeinterface #20,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isStatisticsEnabled:()Z
     101: putfield      #21                 // Field statisticsEnabled:Z
     104: aload_0
     105: aload_1
     106: invokeinterface #22,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getInterceptor:()Lorg/hibernate/Interceptor;
     111: putfield      #23                 // Field interceptor:Lorg/hibernate/Interceptor;
     114: aload_0
     115: aload_1
     116: invokeinterface #24,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getStatementInspector:()Lorg/hibernate/resource/jdbc/spi/StatementInspector;
     121: putfield      #25                 // Field statementInspector:Lorg/hibernate/resource/jdbc/spi/StatementInspector;
     124: aload_0
     125: aload_1
     126: invokeinterface #26,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getSessionFactoryObservers:()[Lorg/hibernate/SessionFactoryObserver;
     131: putfield      #27                 // Field sessionFactoryObserverList:[Lorg/hibernate/SessionFactoryObserver;
     134: aload_0
     135: aload_1
     136: invokeinterface #28,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getBaselineSessionEventsListenerBuilder:()Lorg/hibernate/cfg/BaselineSessionEventsListenerBuilder;
     141: putfield      #29                 // Field baselineSessionEventsListenerBuilder:Lorg/hibernate/cfg/BaselineSessionEventsListenerBuilder;
     144: aload_0
     145: aload_1
     146: invokeinterface #30,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getCustomEntityDirtinessStrategy:()Lorg/hibernate/CustomEntityDirtinessStrategy;
     151: putfield      #31                 // Field customEntityDirtinessStrategy:Lorg/hibernate/CustomEntityDirtinessStrategy;
     154: aload_0
     155: aload_1
     156: invokeinterface #32,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getEntityNameResolvers:()[Lorg/hibernate/EntityNameResolver;
     161: putfield      #33                 // Field entityNameResolvers:[Lorg/hibernate/EntityNameResolver;
     164: aload_0
     165: aload_1
     166: invokeinterface #34,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getEntityNotFoundDelegate:()Lorg/hibernate/proxy/EntityNotFoundDelegate;
     171: putfield      #35                 // Field entityNotFoundDelegate:Lorg/hibernate/proxy/EntityNotFoundDelegate;
     174: aload_0
     175: aload_1
     176: invokeinterface #36,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isIdentifierRollbackEnabled:()Z
     181: putfield      #37                 // Field identifierRollbackEnabled:Z
     184: aload_0
     185: aload_1
     186: invokeinterface #38,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getDefaultEntityMode:()Lorg/hibernate/EntityMode;
     191: putfield      #39                 // Field defaultEntityMode:Lorg/hibernate/EntityMode;
     194: aload_0
     195: aload_1
     196: invokeinterface #40,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getEntityTuplizerFactory:()Lorg/hibernate/tuple/entity/EntityTuplizerFactory;
     201: putfield      #41                 // Field entityTuplizerFactory:Lorg/hibernate/tuple/entity/EntityTuplizerFactory;
     204: aload_0
     205: aload_1
     206: invokeinterface #42,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isCheckNullability:()Z
     211: putfield      #43                 // Field checkNullability:Z
     214: aload_0
     215: aload_1
     216: invokeinterface #44,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isInitializeLazyStateOutsideTransactionsEnabled:()Z
     221: putfield      #45                 // Field initializeLazyStateOutsideTransactions:Z
     224: aload_0
     225: aload_1
     226: invokeinterface #46,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getMultiTableBulkIdStrategy:()Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
     231: putfield      #47                 // Field multiTableBulkIdStrategy:Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
     234: aload_0
     235: aload_1
     236: invokeinterface #48,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getTempTableDdlTransactionHandling:()Lorg/hibernate/boot/TempTableDdlTransactionHandling;
     241: putfield      #49                 // Field tempTableDdlTransactionHandling:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
     244: aload_0
     245: aload_1
     246: invokeinterface #50,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getBatchFetchStyle:()Lorg/hibernate/loader/BatchFetchStyle;
     251: putfield      #51                 // Field batchFetchStyle:Lorg/hibernate/loader/BatchFetchStyle;
     254: aload_0
     255: aload_1
     256: invokeinterface #52,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getDefaultBatchFetchSize:()I
     261: putfield      #53                 // Field defaultBatchFetchSize:I
     264: aload_0
     265: aload_1
     266: invokeinterface #54,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getMaximumFetchDepth:()Ljava/lang/Integer;
     271: putfield      #55                 // Field maximumFetchDepth:Ljava/lang/Integer;
     274: aload_0
     275: aload_1
     276: invokeinterface #56,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getDefaultNullPrecedence:()Lorg/hibernate/NullPrecedence;
     281: putfield      #57                 // Field defaultNullPrecedence:Lorg/hibernate/NullPrecedence;
     284: aload_0
     285: aload_1
     286: invokeinterface #58,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isOrderUpdatesEnabled:()Z
     291: putfield      #59                 // Field orderUpdatesEnabled:Z
     294: aload_0
     295: aload_1
     296: invokeinterface #60,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isOrderInsertsEnabled:()Z
     301: putfield      #61                 // Field orderInsertsEnabled:Z
     304: aload_0
     305: aload_1
     306: invokeinterface #62,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getMultiTenancyStrategy:()Lorg/hibernate/MultiTenancyStrategy;
     311: putfield      #63                 // Field multiTenancyStrategy:Lorg/hibernate/MultiTenancyStrategy;
     314: aload_0
     315: aload_1
     316: invokeinterface #64,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getCurrentTenantIdentifierResolver:()Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;
     321: putfield      #65                 // Field currentTenantIdentifierResolver:Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;
     324: aload_0
     325: aload_1
     326: invokeinterface #66,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getQuerySubstitutions:()Ljava/util/Map;
     331: putfield      #67                 // Field querySubstitutions:Ljava/util/Map;
     334: aload_0
     335: aload_1
     336: invokeinterface #68,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isStrictJpaQueryLanguageCompliance:()Z
     341: putfield      #69                 // Field strictJpaQueryLanguageCompliance:Z
     344: aload_0
     345: aload_1
     346: invokeinterface #70,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isNamedQueryStartupCheckingEnabled:()Z
     351: putfield      #71                 // Field namedQueryStartupCheckingEnabled:Z
     354: aload_0
     355: aload_1
     356: invokeinterface #72,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isSecondLevelCacheEnabled:()Z
     361: putfield      #73                 // Field secondLevelCacheEnabled:Z
     364: aload_0
     365: aload_1
     366: invokeinterface #74,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isQueryCacheEnabled:()Z
     371: putfield      #75                 // Field queryCacheEnabled:Z
     374: aload_0
     375: aload_1
     376: invokeinterface #76,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getQueryCacheFactory:()Lorg/hibernate/cache/spi/QueryCacheFactory;
     381: putfield      #77                 // Field queryCacheFactory:Lorg/hibernate/cache/spi/QueryCacheFactory;
     384: aload_0
     385: aload_1
     386: invokeinterface #78,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getCacheRegionPrefix:()Ljava/lang/String;
     391: putfield      #79                 // Field cacheRegionPrefix:Ljava/lang/String;
     394: aload_0
     395: aload_1
     396: invokeinterface #80,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isMinimalPutsEnabled:()Z
     401: putfield      #81                 // Field minimalPutsEnabled:Z
     404: aload_0
     405: aload_1
     406: invokeinterface #82,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isStructuredCacheEntriesEnabled:()Z
     411: putfield      #83                 // Field structuredCacheEntriesEnabled:Z
     414: aload_0
     415: aload_1
     416: invokeinterface #84,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isDirectReferenceCacheEntriesEnabled:()Z
     421: putfield      #85                 // Field directReferenceCacheEntriesEnabled:Z
     424: aload_0
     425: aload_1
     426: invokeinterface #86,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isAutoEvictCollectionCache:()Z
     431: putfield      #87                 // Field autoEvictCollectionCache:Z
     434: aload_0
     435: aload_1
     436: invokeinterface #88,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getSchemaAutoTooling:()Lorg/hibernate/boot/SchemaAutoTooling;
     441: putfield      #89                 // Field schemaAutoTooling:Lorg/hibernate/boot/SchemaAutoTooling;
     444: aload_0
     445: aload_1
     446: invokeinterface #90,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getConnectionReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
     451: putfield      #91                 // Field connectionReleaseMode:Lorg/hibernate/ConnectionReleaseMode;
     454: aload_0
     455: aload_1
     456: invokeinterface #92,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isGetGeneratedKeysEnabled:()Z
     461: putfield      #93                 // Field getGeneratedKeysEnabled:Z
     464: aload_0
     465: aload_1
     466: invokeinterface #94,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getJdbcBatchSize:()I
     471: putfield      #95                 // Field jdbcBatchSize:I
     474: aload_0
     475: aload_1
     476: invokeinterface #96,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isJdbcBatchVersionedData:()Z
     481: putfield      #97                 // Field jdbcBatchVersionedData:Z
     484: aload_0
     485: aload_1
     486: invokeinterface #98,  1           // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getJdbcFetchSize:()Ljava/lang/Integer;
     491: putfield      #99                 // Field jdbcFetchSize:Ljava/lang/Integer;
     494: aload_0
     495: aload_1
     496: invokeinterface #100,  1          // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isScrollableResultSetsEnabled:()Z
     501: putfield      #101                // Field scrollableResultSetsEnabled:Z
     504: aload_0
     505: aload_1
     506: invokeinterface #102,  1          // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isWrapResultSetsEnabled:()Z
     511: putfield      #103                // Field wrapResultSetsEnabled:Z
     514: aload_0
     515: aload_1
     516: invokeinterface #104,  1          // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.isCommentsEnabled:()Z
     521: putfield      #105                // Field commentsEnabled:Z
     524: aload_0
     525: aload_1
     526: invokeinterface #106,  1          // InterfaceMethod org/hibernate/boot/internal/SessionFactoryOptionsState.getCustomSqlFunctionMap:()Ljava/util/Map;
     531: putfield      #107                // Field sqlFunctions:Ljava/util/Map;
     534: return

  public org.hibernate.boot.registry.StandardServiceRegistry getServiceRegistry();
    Code:
       0: aload_0
       1: getfield      #3                  // Field serviceRegistry:Lorg/hibernate/boot/registry/StandardServiceRegistry;
       4: areturn

  public java.lang.Object getBeanManagerReference();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanManagerReference:Ljava/lang/Object;
       4: areturn

  public java.lang.Object getValidatorFactoryReference();
    Code:
       0: aload_0
       1: getfield      #7                  // Field validatorFactoryReference:Ljava/lang/Object;
       4: areturn

  public java.lang.String getSessionFactoryName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sessionFactoryName:Ljava/lang/String;
       4: areturn

  public boolean isSessionFactoryNameAlsoJndiName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field sessionFactoryNameAlsoJndiName:Z
       4: ireturn

  public boolean isFlushBeforeCompletionEnabled();
    Code:
       0: aload_0
       1: getfield      #13                 // Field flushBeforeCompletionEnabled:Z
       4: ireturn

  public boolean isAutoCloseSessionEnabled();
    Code:
       0: aload_0
       1: getfield      #15                 // Field autoCloseSessionEnabled:Z
       4: ireturn

  public boolean isStatisticsEnabled();
    Code:
       0: aload_0
       1: getfield      #21                 // Field statisticsEnabled:Z
       4: ireturn

  public org.hibernate.Interceptor getInterceptor();
    Code:
       0: aload_0
       1: getfield      #23                 // Field interceptor:Lorg/hibernate/Interceptor;
       4: areturn

  public org.hibernate.resource.jdbc.spi.StatementInspector getStatementInspector();
    Code:
       0: aload_0
       1: getfield      #25                 // Field statementInspector:Lorg/hibernate/resource/jdbc/spi/StatementInspector;
       4: areturn

  public org.hibernate.cfg.BaselineSessionEventsListenerBuilder getBaselineSessionEventsListenerBuilder();
    Code:
       0: aload_0
       1: getfield      #29                 // Field baselineSessionEventsListenerBuilder:Lorg/hibernate/cfg/BaselineSessionEventsListenerBuilder;
       4: areturn

  public org.hibernate.SessionFactoryObserver[] getSessionFactoryObservers();
    Code:
       0: aload_0
       1: getfield      #27                 // Field sessionFactoryObserverList:[Lorg/hibernate/SessionFactoryObserver;
       4: areturn

  public boolean isIdentifierRollbackEnabled();
    Code:
       0: aload_0
       1: getfield      #37                 // Field identifierRollbackEnabled:Z
       4: ireturn

  public org.hibernate.EntityMode getDefaultEntityMode();
    Code:
       0: aload_0
       1: getfield      #39                 // Field defaultEntityMode:Lorg/hibernate/EntityMode;
       4: areturn

  public org.hibernate.tuple.entity.EntityTuplizerFactory getEntityTuplizerFactory();
    Code:
       0: aload_0
       1: getfield      #41                 // Field entityTuplizerFactory:Lorg/hibernate/tuple/entity/EntityTuplizerFactory;
       4: areturn

  public boolean isCheckNullability();
    Code:
       0: aload_0
       1: getfield      #43                 // Field checkNullability:Z
       4: ireturn

  public boolean isInitializeLazyStateOutsideTransactionsEnabled();
    Code:
       0: aload_0
       1: getfield      #45                 // Field initializeLazyStateOutsideTransactions:Z
       4: ireturn

  public org.hibernate.hql.spi.id.MultiTableBulkIdStrategy getMultiTableBulkIdStrategy();
    Code:
       0: aload_0
       1: getfield      #47                 // Field multiTableBulkIdStrategy:Lorg/hibernate/hql/spi/id/MultiTableBulkIdStrategy;
       4: areturn

  public org.hibernate.boot.TempTableDdlTransactionHandling getTempTableDdlTransactionHandling();
    Code:
       0: aload_0
       1: getfield      #49                 // Field tempTableDdlTransactionHandling:Lorg/hibernate/boot/TempTableDdlTransactionHandling;
       4: areturn

  public org.hibernate.loader.BatchFetchStyle getBatchFetchStyle();
    Code:
       0: aload_0
       1: getfield      #51                 // Field batchFetchStyle:Lorg/hibernate/loader/BatchFetchStyle;
       4: areturn

  public int getDefaultBatchFetchSize();
    Code:
       0: aload_0
       1: getfield      #53                 // Field defaultBatchFetchSize:I
       4: ireturn

  public java.lang.Integer getMaximumFetchDepth();
    Code:
       0: aload_0
       1: getfield      #55                 // Field maximumFetchDepth:Ljava/lang/Integer;
       4: areturn

  public org.hibernate.NullPrecedence getDefaultNullPrecedence();
    Code:
       0: aload_0
       1: getfield      #57                 // Field defaultNullPrecedence:Lorg/hibernate/NullPrecedence;
       4: areturn

  public boolean isOrderUpdatesEnabled();
    Code:
       0: aload_0
       1: getfield      #59                 // Field orderUpdatesEnabled:Z
       4: ireturn

  public boolean isOrderInsertsEnabled();
    Code:
       0: aload_0
       1: getfield      #61                 // Field orderInsertsEnabled:Z
       4: ireturn

  public org.hibernate.MultiTenancyStrategy getMultiTenancyStrategy();
    Code:
       0: aload_0
       1: getfield      #63                 // Field multiTenancyStrategy:Lorg/hibernate/MultiTenancyStrategy;
       4: areturn

  public org.hibernate.context.spi.CurrentTenantIdentifierResolver getCurrentTenantIdentifierResolver();
    Code:
       0: aload_0
       1: getfield      #65                 // Field currentTenantIdentifierResolver:Lorg/hibernate/context/spi/CurrentTenantIdentifierResolver;
       4: areturn

  public boolean isJtaTrackByThread();
    Code:
       0: aload_0
       1: getfield      #17                 // Field jtaTrackByThread:Z
       4: ireturn

  public java.util.Map getQuerySubstitutions();
    Code:
       0: aload_0
       1: getfield      #67                 // Field querySubstitutions:Ljava/util/Map;
       4: areturn

  public boolean isStrictJpaQueryLanguageCompliance();
    Code:
       0: aload_0
       1: getfield      #69                 // Field strictJpaQueryLanguageCompliance:Z
       4: ireturn

  public boolean isNamedQueryStartupCheckingEnabled();
    Code:
       0: aload_0
       1: getfield      #71                 // Field namedQueryStartupCheckingEnabled:Z
       4: ireturn

  public boolean isSecondLevelCacheEnabled();
    Code:
       0: aload_0
       1: getfield      #73                 // Field secondLevelCacheEnabled:Z
       4: ireturn

  public boolean isQueryCacheEnabled();
    Code:
       0: aload_0
       1: getfield      #75                 // Field queryCacheEnabled:Z
       4: ireturn

  public org.hibernate.cache.spi.QueryCacheFactory getQueryCacheFactory();
    Code:
       0: aload_0
       1: getfield      #77                 // Field queryCacheFactory:Lorg/hibernate/cache/spi/QueryCacheFactory;
       4: areturn

  public java.lang.String getCacheRegionPrefix();
    Code:
       0: aload_0
       1: getfield      #79                 // Field cacheRegionPrefix:Ljava/lang/String;
       4: areturn

  public boolean isMinimalPutsEnabled();
    Code:
       0: aload_0
       1: getfield      #81                 // Field minimalPutsEnabled:Z
       4: ireturn

  public boolean isStructuredCacheEntriesEnabled();
    Code:
       0: aload_0
       1: getfield      #83                 // Field structuredCacheEntriesEnabled:Z
       4: ireturn

  public boolean isDirectReferenceCacheEntriesEnabled();
    Code:
       0: aload_0
       1: getfield      #85                 // Field directReferenceCacheEntriesEnabled:Z
       4: ireturn

  public boolean isAutoEvictCollectionCache();
    Code:
       0: aload_0
       1: getfield      #87                 // Field autoEvictCollectionCache:Z
       4: ireturn

  public org.hibernate.boot.SchemaAutoTooling getSchemaAutoTooling();
    Code:
       0: aload_0
       1: getfield      #89                 // Field schemaAutoTooling:Lorg/hibernate/boot/SchemaAutoTooling;
       4: areturn

  public int getJdbcBatchSize();
    Code:
       0: aload_0
       1: getfield      #95                 // Field jdbcBatchSize:I
       4: ireturn

  public boolean isJdbcBatchVersionedData();
    Code:
       0: aload_0
       1: getfield      #97                 // Field jdbcBatchVersionedData:Z
       4: ireturn

  public boolean isScrollableResultSetsEnabled();
    Code:
       0: aload_0
       1: getfield      #101                // Field scrollableResultSetsEnabled:Z
       4: ireturn

  public boolean isWrapResultSetsEnabled();
    Code:
       0: aload_0
       1: getfield      #103                // Field wrapResultSetsEnabled:Z
       4: ireturn

  public boolean isGetGeneratedKeysEnabled();
    Code:
       0: aload_0
       1: getfield      #93                 // Field getGeneratedKeysEnabled:Z
       4: ireturn

  public java.lang.Integer getJdbcFetchSize();
    Code:
       0: aload_0
       1: getfield      #99                 // Field jdbcFetchSize:Ljava/lang/Integer;
       4: areturn

  public org.hibernate.ConnectionReleaseMode getConnectionReleaseMode();
    Code:
       0: aload_0
       1: getfield      #91                 // Field connectionReleaseMode:Lorg/hibernate/ConnectionReleaseMode;
       4: areturn

  public boolean isCommentsEnabled();
    Code:
       0: aload_0
       1: getfield      #105                // Field commentsEnabled:Z
       4: ireturn

  public org.hibernate.CustomEntityDirtinessStrategy getCustomEntityDirtinessStrategy();
    Code:
       0: aload_0
       1: getfield      #31                 // Field customEntityDirtinessStrategy:Lorg/hibernate/CustomEntityDirtinessStrategy;
       4: areturn

  public org.hibernate.EntityNameResolver[] getEntityNameResolvers();
    Code:
       0: aload_0
       1: getfield      #33                 // Field entityNameResolvers:[Lorg/hibernate/EntityNameResolver;
       4: areturn

  public org.hibernate.proxy.EntityNotFoundDelegate getEntityNotFoundDelegate();
    Code:
       0: aload_0
       1: getfield      #35                 // Field entityNotFoundDelegate:Lorg/hibernate/proxy/EntityNotFoundDelegate;
       4: areturn

  public java.util.Map<java.lang.String, org.hibernate.dialect.function.SQLFunction> getCustomSqlFunctionMap();
    Code:
       0: aload_0
       1: getfield      #107                // Field sqlFunctions:Ljava/util/Map;
       4: areturn

  public void setCheckNullability(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field checkNullability:Z
       5: return

  public boolean isPreferUserTransaction();
    Code:
       0: aload_0
       1: getfield      #19                 // Field preferUserTransaction:Z
       4: ireturn
}
