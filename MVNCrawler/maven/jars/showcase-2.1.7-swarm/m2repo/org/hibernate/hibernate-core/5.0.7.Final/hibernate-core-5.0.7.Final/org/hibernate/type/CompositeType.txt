Compiled from "CompositeType.java"
public interface org.hibernate.type.CompositeType extends org.hibernate.type.Type {
  public abstract org.hibernate.type.Type[] getSubtypes();

  public abstract java.lang.String[] getPropertyNames();

  public abstract boolean[] getPropertyNullability();

  public abstract java.lang.Object[] getPropertyValues(java.lang.Object, org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException;

  public abstract java.lang.Object[] getPropertyValues(java.lang.Object, org.hibernate.EntityMode) throws org.hibernate.HibernateException;

  public abstract java.lang.Object getPropertyValue(java.lang.Object, int, org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException;

  public abstract void setPropertyValues(java.lang.Object, java.lang.Object[], org.hibernate.EntityMode) throws org.hibernate.HibernateException;

  public abstract org.hibernate.engine.spi.CascadeStyle getCascadeStyle(int);

  public abstract org.hibernate.FetchMode getFetchMode(int);

  public abstract boolean isMethodOf(java.lang.reflect.Method);

  public abstract boolean isEmbedded();

  public abstract boolean hasNotNullProperty();

  public abstract int getPropertyIndex(java.lang.String);
}
