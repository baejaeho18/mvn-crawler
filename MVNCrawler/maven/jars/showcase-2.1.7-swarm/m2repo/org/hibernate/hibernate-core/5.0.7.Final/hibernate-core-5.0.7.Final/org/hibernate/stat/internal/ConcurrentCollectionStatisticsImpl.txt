Compiled from "ConcurrentCollectionStatisticsImpl.java"
public class org.hibernate.stat.internal.ConcurrentCollectionStatisticsImpl extends org.hibernate.stat.internal.CategorizedStatistics implements org.hibernate.stat.CollectionStatistics {
  private java.util.concurrent.atomic.AtomicLong loadCount;

  private java.util.concurrent.atomic.AtomicLong fetchCount;

  private java.util.concurrent.atomic.AtomicLong updateCount;

  private java.util.concurrent.atomic.AtomicLong removeCount;

  private java.util.concurrent.atomic.AtomicLong recreateCount;

  org.hibernate.stat.internal.ConcurrentCollectionStatisticsImpl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/hibernate/stat/internal/CategorizedStatistics."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      13: putfield      #4                  // Field loadCount:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      24: putfield      #5                  // Field fetchCount:Ljava/util/concurrent/atomic/AtomicLong;
      27: aload_0
      28: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      31: dup
      32: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      35: putfield      #6                  // Field updateCount:Ljava/util/concurrent/atomic/AtomicLong;
      38: aload_0
      39: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      42: dup
      43: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      46: putfield      #7                  // Field removeCount:Ljava/util/concurrent/atomic/AtomicLong;
      49: aload_0
      50: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      53: dup
      54: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      57: putfield      #8                  // Field recreateCount:Ljava/util/concurrent/atomic/AtomicLong;
      60: return

  public long getLoadCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field loadCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getFetchCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fetchCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getRecreateCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field recreateCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getRemoveCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field removeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getUpdateCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field updateCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String CollectionStatistics
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #14                 // String [loadCount=
      14: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: getfield      #4                  // Field loadCount:Ljava/util/concurrent/atomic/AtomicLong;
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: ldc           #16                 // String ,fetchCount=
      26: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #5                  // Field fetchCount:Ljava/util/concurrent/atomic/AtomicLong;
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #17                 // String ,recreateCount=
      38: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #8                  // Field recreateCount:Ljava/util/concurrent/atomic/AtomicLong;
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #18                 // String ,removeCount=
      50: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #7                  // Field removeCount:Ljava/util/concurrent/atomic/AtomicLong;
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #19                 // String ,updateCount=
      62: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #6                  // Field updateCount:Ljava/util/concurrent/atomic/AtomicLong;
      69: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: bipush        93
      74: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      77: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  void incrementLoadCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field loadCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: pop2
       8: return

  void incrementFetchCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fetchCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: pop2
       8: return

  void incrementUpdateCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field updateCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: pop2
       8: return

  void incrementRecreateCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field recreateCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: pop2
       8: return

  void incrementRemoveCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field removeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: pop2
       8: return
}
