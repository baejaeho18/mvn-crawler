Compiled from "BoundedConcurrentHashMap.java"
final class org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU<K, V> extends java.util.LinkedHashMap<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>, V> implements org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EvictionPolicy<K, V> {
  private static final long serialVersionUID;

  private final java.util.concurrent.ConcurrentLinkedQueue<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>> accessQueue;

  private final org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Segment<K, V> segment;

  private final int maxBatchQueueSize;

  private final int trimDownSize;

  private final float batchThresholdFactor;

  private final java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>> evicted;

  public org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LRU(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Segment<K, V>, int, float, int, float);
    Code:
       0: aload_0
       1: iload_2
       2: fload_3
       3: iconst_1
       4: invokespecial #1                  // Method java/util/LinkedHashMap."<init>":(IFZ)V
       7: aload_0
       8: aload_1
       9: putfield      #2                  // Field segment:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Segment;
      12: aload_0
      13: iload_2
      14: putfield      #3                  // Field trimDownSize:I
      17: aload_0
      18: iload         4
      20: bipush        64
      22: if_icmple     30
      25: bipush        64
      27: goto          32
      30: iload         4
      32: putfield      #5                  // Field maxBatchQueueSize:I
      35: aload_0
      36: fload         5
      38: putfield      #6                  // Field batchThresholdFactor:F
      41: aload_0
      42: new           #7                  // class java/util/concurrent/ConcurrentLinkedQueue
      45: dup
      46: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      49: putfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      52: aload_0
      53: new           #10                 // class java/util/HashSet
      56: dup
      57: invokespecial #11                 // Method java/util/HashSet."<init>":()V
      60: putfield      #12                 // Field evicted:Ljava/util/Set;
      63: return

  public java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>> execute();
    Code:
       0: new           #10                 // class java/util/HashSet
       3: dup
       4: invokespecial #11                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      12: invokevirtual #13                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          48
      25: aload_2
      26: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #16                 // class org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry
      34: astore_3
      35: aload_0
      36: aload_3
      37: aload_3
      38: getfield      #17                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry.value:Ljava/lang/Object;
      41: invokevirtual #18                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: goto          16
      48: aload_1
      49: aload_0
      50: getfield      #12                 // Field evicted:Ljava/util/Set;
      53: invokeinterface #19,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      58: pop
      59: aload_0
      60: getfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      63: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.clear:()V
      66: aload_0
      67: getfield      #12                 // Field evicted:Ljava/util/Set;
      70: invokeinterface #21,  1           // InterfaceMethod java/util/Set.clear:()V
      75: aload_1
      76: areturn

  public java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>> onEntryMiss(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #17                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry.value:Ljava/lang/Object;
       6: invokevirtual #18                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #12                 // Field evicted:Ljava/util/Set;
      14: invokeinterface #22,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      19: ifne          52
      22: new           #10                 // class java/util/HashSet
      25: dup
      26: invokespecial #11                 // Method java/util/HashSet."<init>":()V
      29: astore_2
      30: aload_2
      31: aload_0
      32: getfield      #12                 // Field evicted:Ljava/util/Set;
      35: invokeinterface #19,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      40: pop
      41: aload_0
      42: getfield      #12                 // Field evicted:Ljava/util/Set;
      45: invokeinterface #21,  1           // InterfaceMethod java/util/Set.clear:()V
      50: aload_2
      51: areturn
      52: invokestatic  #23                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      55: areturn

  public boolean onEntryHit(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #24                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: getfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      13: invokevirtual #25                 // Method java/util/concurrent/ConcurrentLinkedQueue.size:()I
      16: i2f
      17: aload_0
      18: getfield      #5                  // Field maxBatchQueueSize:I
      21: i2f
      22: aload_0
      23: getfield      #6                  // Field batchThresholdFactor:F
      26: fmul
      27: fcmpl
      28: iflt          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public boolean thresholdExpired();
    Code:
       0: aload_0
       1: getfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #25                 // Method java/util/concurrent/ConcurrentLinkedQueue.size:()I
       7: aload_0
       8: getfield      #5                  // Field maxBatchQueueSize:I
      11: if_icmplt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void onEntryRemove(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method remove:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: getfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      10: aload_1
      11: invokevirtual #27                 // Method java/util/concurrent/ConcurrentLinkedQueue.remove:(Ljava/lang/Object;)Z
      14: ifeq          20
      17: goto          6
      20: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/util/LinkedHashMap.clear:()V
       4: aload_0
       5: getfield      #9                  // Field accessQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       8: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.clear:()V
      11: return

  public org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction strategy();
    Code:
       0: getstatic     #29                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Eviction.LRU:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Eviction;
       3: areturn

  protected boolean isAboveThreshold();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method size:()I
       4: aload_0
       5: getfield      #3                  // Field trimDownSize:I
       8: if_icmple     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  protected boolean removeEldestEntry(java.util.Map$Entry<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>, V>);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method isAboveThreshold:()Z
       4: istore_2
       5: iload_2
       6: ifeq          63
       9: aload_1
      10: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      15: checkcast     #16                 // class org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry
      18: astore_3
      19: aload_0
      20: getfield      #2                  // Field segment:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Segment;
      23: getfield      #33                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Segment.evictionListener:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$EvictionListener;
      26: aload_3
      27: getfield      #17                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry.value:Ljava/lang/Object;
      30: invokeinterface #34,  2           // InterfaceMethod org/hibernate/internal/util/collections/BoundedConcurrentHashMap$EvictionListener.onEntryChosenForEviction:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #2                  // Field segment:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Segment;
      39: aload_3
      40: getfield      #35                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry.key:Ljava/lang/Object;
      43: aload_3
      44: getfield      #36                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry.hash:I
      47: aconst_null
      48: invokevirtual #37                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Segment.remove:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload_0
      53: getfield      #12                 // Field evicted:Ljava/util/Set;
      56: aload_3
      57: invokeinterface #38,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      62: pop
      63: iload_2
      64: ireturn

  public org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V> createNewEntry(K, int, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>, V);
    Code:
       0: new           #16                 // class org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokespecial #39                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry."<init>":(Ljava/lang/Object;ILorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry;Ljava/lang/Object;)V
      12: areturn
}
