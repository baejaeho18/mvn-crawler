Compiled from "EntityEntry.java"
public interface org.hibernate.engine.spi.EntityEntry {
  public abstract org.hibernate.LockMode getLockMode();

  public abstract void setLockMode(org.hibernate.LockMode);

  public abstract org.hibernate.engine.spi.Status getStatus();

  public abstract void setStatus(org.hibernate.engine.spi.Status);

  public abstract java.io.Serializable getId();

  public abstract java.lang.Object[] getLoadedState();

  public abstract java.lang.Object[] getDeletedState();

  public abstract void setDeletedState(java.lang.Object[]);

  public abstract boolean isExistsInDatabase();

  public abstract java.lang.Object getVersion();

  public abstract org.hibernate.persister.entity.EntityPersister getPersister();

  public abstract org.hibernate.engine.spi.EntityKey getEntityKey();

  public abstract java.lang.String getEntityName();

  public abstract boolean isBeingReplicated();

  public abstract java.lang.Object getRowId();

  public abstract void postUpdate(java.lang.Object, java.lang.Object[], java.lang.Object);

  public abstract void postDelete();

  public abstract void postInsert(java.lang.Object[]);

  public abstract boolean isNullifiable(boolean, org.hibernate.engine.spi.SessionImplementor);

  public abstract java.lang.Object getLoadedValue(java.lang.String);

  public abstract boolean requiresDirtyCheck(java.lang.Object);

  public abstract boolean isModifiableEntity();

  public abstract void forceLocked(java.lang.Object, java.lang.Object);

  public abstract boolean isReadOnly();

  public abstract void setReadOnly(boolean, java.lang.Object);

  public abstract java.lang.String toString();

  public abstract boolean isLoadedWithLazyPropertiesUnfetched();

  public abstract void serialize(java.io.ObjectOutputStream) throws java.io.IOException;

  public abstract void addExtraState(org.hibernate.engine.spi.EntityEntryExtraState);

  public abstract <T extends org.hibernate.engine.spi.EntityEntryExtraState> T getExtraState(java.lang.Class<T>);
}
