Compiled from "BoundedConcurrentHashMap.java"
final class org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry<K, V> extends org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V> {
  private org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry<K, V> previousInStack;

  private org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry<K, V> nextInStack;

  private org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry<K, V> previousInQueue;

  private org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry<K, V> nextInQueue;

  volatile org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Recency state;

  org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS<K, V> owner;

  org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRS<K, V>, K, int, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>, V);
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: aload         4
       5: aload         5
       7: invokespecial #8                  // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry."<init>":(Ljava/lang/Object;ILorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry;Ljava/lang/Object;)V
      10: aload_0
      11: aload_1
      12: putfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      15: aload_0
      16: getstatic     #10                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.HIR_RESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      19: putfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      22: aload_0
      23: aload_0
      24: putfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      27: aload_0
      28: aload_0
      29: putfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      32: aload_0
      33: aload_0
      34: putfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      37: aload_0
      38: aload_0
      39: putfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      42: return

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        31
       6: imul
       7: aload_0
       8: getfield      #13                 // Field hash:I
      11: iadd
      12: istore_1
      13: iload_1
      14: bipush        31
      16: imul
      17: aload_0
      18: getfield      #14                 // Field key:Ljava/lang/Object;
      21: invokevirtual #15                 // Method java/lang/Object.hashCode:()I
      24: iadd
      25: istore_1
      26: iload_1
      27: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #16                 // class org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry
      17: astore_2
      18: aload_0
      19: getfield      #13                 // Field hash:I
      22: aload_2
      23: getfield      #17                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry.hash:I
      26: if_icmpne     47
      29: aload_0
      30: getfield      #14                 // Field key:Ljava/lang/Object;
      33: aload_2
      34: getfield      #18                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$HashEntry.key:Ljava/lang/Object;
      37: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public boolean inStack();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean inQueue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void hit(java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>);
    Code:
       0: getstatic     #20                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$1.$SwitchMap$org$hibernate$internal$util$collections$BoundedConcurrentHashMap$Recency:[I
       3: aload_0
       4: getfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       7: invokevirtual #21                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 44
                     3: 52
               default: 62
          }
      36: aload_0
      37: aload_1
      38: invokespecial #22                 // Method hotHit:(Ljava/util/Set;)V
      41: goto          92
      44: aload_0
      45: aload_1
      46: invokespecial #23                 // Method coldHit:(Ljava/util/Set;)V
      49: goto          92
      52: new           #24                 // class java/lang/IllegalStateException
      55: dup
      56: ldc           #25                 // String Can\'t hit a non-resident entry!
      58: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: new           #27                 // class java/lang/AssertionError
      65: dup
      66: new           #28                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #30                 // String Hit with unknown status:
      75: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: getfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      82: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #34                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      91: athrow
      92: return

  private void hotHit(java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
       4: invokestatic  #35                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$100:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       7: aload_0
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: istore_2
      17: aload_0
      18: invokespecial #36                 // Method moveToStackTop:()V
      21: iload_2
      22: ifeq          33
      25: aload_0
      26: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      29: aload_1
      30: invokestatic  #37                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$200:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;Ljava/util/Set;)V
      33: return

  private void coldHit(java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method inStack:()Z
       4: istore_2
       5: aload_0
       6: invokespecial #36                 // Method moveToStackTop:()V
       9: iload_2
      10: ifeq          42
      13: aload_0
      14: invokespecial #39                 // Method hot:()V
      17: aload_0
      18: invokespecial #40                 // Method removeFromQueue:()V
      21: aload_0
      22: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      25: invokestatic  #35                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$100:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      28: invokespecial #41                 // Method migrateToQueue:()V
      31: aload_0
      32: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      35: aload_1
      36: invokestatic  #37                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$200:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;Ljava/util/Set;)V
      39: goto          46
      42: aload_0
      43: invokespecial #42                 // Method moveToQueueEnd:()V
      46: return

  private java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>> miss();
    Code:
       0: invokestatic  #43                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: astore_1
       4: aload_0
       5: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
       8: invokestatic  #44                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$300:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      11: aload_0
      12: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      15: invokestatic  #45                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$400:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      18: if_icmpge     28
      21: aload_0
      22: invokespecial #46                 // Method warmupMiss:()V
      25: goto          41
      28: new           #47                 // class java/util/HashSet
      31: dup
      32: invokespecial #48                 // Method java/util/HashSet."<init>":()V
      35: astore_1
      36: aload_0
      37: aload_1
      38: invokespecial #49                 // Method fullMiss:(Ljava/util/Set;)V
      41: aload_0
      42: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      45: invokestatic  #50                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$508:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      48: pop
      49: aload_1
      50: areturn

  private void warmupMiss();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method hot:()V
       4: aload_0
       5: invokespecial #36                 // Method moveToStackTop:()V
       8: return

  private void fullMiss(java.util.Set<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$HashEntry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
       4: invokestatic  #51                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$500:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
       7: aload_0
       8: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      11: invokestatic  #52                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$600:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      14: if_icmplt     33
      17: aload_0
      18: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      21: invokestatic  #53                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$700:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      24: astore_2
      25: aload_1
      26: aload_2
      27: invokeinterface #54,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      32: pop
      33: aload_0
      34: invokevirtual #38                 // Method inStack:()Z
      37: istore_2
      38: aload_0
      39: invokespecial #36                 // Method moveToStackTop:()V
      42: iload_2
      43: ifeq          71
      46: aload_0
      47: invokespecial #39                 // Method hot:()V
      50: aload_0
      51: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      54: invokestatic  #35                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$100:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      57: invokespecial #41                 // Method migrateToQueue:()V
      60: aload_0
      61: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      64: aload_1
      65: invokestatic  #37                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$200:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;Ljava/util/Set;)V
      68: goto          75
      71: aload_0
      72: invokespecial #55                 // Method cold:()V
      75: return

  private void hot();
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       4: getstatic     #56                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.LIR_RESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       7: if_acmpeq     18
      10: aload_0
      11: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      14: invokestatic  #57                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$308:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      17: pop
      18: aload_0
      19: getstatic     #56                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.LIR_RESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      22: putfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      25: return

  private void cold();
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       4: getstatic     #56                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.LIR_RESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       7: if_acmpne     18
      10: aload_0
      11: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      14: invokestatic  #58                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$310:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      17: pop
      18: aload_0
      19: getstatic     #10                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.HIR_RESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      22: putfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      25: aload_0
      26: invokespecial #42                 // Method moveToQueueEnd:()V
      29: return

  private void nonResident();
    Code:
       0: getstatic     #20                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$1.$SwitchMap$org$hibernate$internal$util$collections$BoundedConcurrentHashMap$Recency:[I
       3: aload_0
       4: getfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       7: invokevirtual #21                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 44
               default: 52
          }
      36: aload_0
      37: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      40: invokestatic  #58                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$310:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      43: pop
      44: aload_0
      45: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      48: invokestatic  #59                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$510:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)I
      51: pop
      52: aload_0
      53: getstatic     #60                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.HIR_NONRESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      56: putfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
      59: return

  public boolean isResident();
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       4: getstatic     #60                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.HIR_NONRESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void tempRemoveFromStack();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method inStack:()Z
       4: ifeq          29
       7: aload_0
       8: getfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      11: aload_0
      12: getfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      15: putfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      18: aload_0
      19: getfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      22: aload_0
      23: getfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      26: putfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      29: return

  private void removeFromStack();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method tempRemoveFromStack:()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       9: aload_0
      10: aconst_null
      11: putfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      14: return

  private void addToStackBefore(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       5: putfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       8: aload_0
       9: aload_1
      10: putfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      13: aload_0
      14: getfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      17: aload_0
      18: putfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      21: aload_0
      22: getfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      25: aload_0
      26: putfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      29: return

  private void moveToStackTop();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method tempRemoveFromStack:()V
       4: aload_0
       5: aload_0
       6: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
       9: invokestatic  #62                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$800:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      12: getfield      #12                 // Field nextInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      15: invokespecial #63                 // Method addToStackBefore:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;)V
      18: return

  private void moveToStackBottom();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method tempRemoveFromStack:()V
       4: aload_0
       5: aload_0
       6: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
       9: invokestatic  #62                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$800:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      12: invokespecial #63                 // Method addToStackBefore:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;)V
      15: return

  private void tempRemoveFromQueue();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method inQueue:()Z
       4: ifeq          29
       7: aload_0
       8: getfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      11: aload_0
      12: getfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      15: putfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      18: aload_0
      19: getfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      22: aload_0
      23: getfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      26: putfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      29: return

  private void removeFromQueue();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method tempRemoveFromQueue:()V
       4: aload_0
       5: aconst_null
       6: putfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       9: aload_0
      10: aconst_null
      11: putfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      14: return

  private void addToQueueBefore(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       5: putfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       8: aload_0
       9: aload_1
      10: putfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      13: aload_0
      14: getfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      17: aload_0
      18: putfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      21: aload_0
      22: getfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      25: aload_0
      26: putfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      29: return

  private void moveToQueueEnd();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method tempRemoveFromQueue:()V
       4: aload_0
       5: aload_0
       6: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
       9: invokestatic  #62                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$800:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      12: invokespecial #66                 // Method addToQueueBefore:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;)V
      15: return

  private void migrateToQueue();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method removeFromStack:()V
       4: aload_0
       5: invokespecial #55                 // Method cold:()V
       8: return

  private void migrateToStack();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method removeFromQueue:()V
       4: aload_0
       5: invokevirtual #38                 // Method inStack:()Z
       8: ifne          15
      11: aload_0
      12: invokespecial #67                 // Method moveToStackBottom:()V
      15: aload_0
      16: invokespecial #39                 // Method hot:()V
      19: return

  private void evict();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method removeFromQueue:()V
       4: aload_0
       5: invokespecial #7                  // Method removeFromStack:()V
       8: aload_0
       9: invokespecial #68                 // Method nonResident:()V
      12: aload_0
      13: aconst_null
      14: putfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      17: return

  private V remove();
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       4: getstatic     #56                 // Field org/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency.LIR_RESIDENT:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$Recency;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: aload_0
      17: getfield      #69                 // Field value:Ljava/lang/Object;
      20: astore_2
      21: aload_0
      22: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      25: ifnull        38
      28: aload_0
      29: getfield      #9                  // Field owner:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;
      32: invokestatic  #70                 // Method org/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS.access$900:(Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRS;)Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
      35: goto          39
      38: aconst_null
      39: astore_3
      40: aload_0
      41: invokespecial #5                  // Method evict:()V
      44: iload_1
      45: ifeq          56
      48: aload_3
      49: ifnull        56
      52: aload_3
      53: invokespecial #71                 // Method migrateToStack:()V
      56: aload_2
      57: areturn

  static void access$1000(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method removeFromStack:()V
       4: return

  static java.util.Set access$1100(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method miss:()Ljava/util/Set;
       4: areturn

  static void access$1200(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method evict:()V
       4: return

  static java.lang.Object access$1300(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method remove:()Ljava/lang/Object;
       4: areturn

  static org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry access$1400(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry);
    Code:
       0: aload_0
       1: getfield      #3                  // Field previousInStack:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       4: areturn

  static org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry access$1500(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nextInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       4: areturn

  static org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry access$1600(org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry);
    Code:
       0: aload_0
       1: getfield      #1                  // Field previousInQueue:Lorg/hibernate/internal/util/collections/BoundedConcurrentHashMap$LIRSHashEntry;
       4: areturn
}
