Compiled from "Oracle9iDialect.java"
final class org.hibernate.dialect.Oracle9iDialect$1 extends org.hibernate.dialect.pagination.AbstractLimitHandler {
  org.hibernate.dialect.Oracle9iDialect$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/pagination/AbstractLimitHandler."<init>":()V
       4: return

  public java.lang.String processSql(java.lang.String, org.hibernate.engine.spi.RowSelection);
    Code:
       0: aload_2
       1: invokestatic  #2                  // Method org/hibernate/dialect/pagination/LimitHelper.hasFirstRow:(Lorg/hibernate/engine/spi/RowSelection;)Z
       4: istore_3
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/String.trim:()Ljava/lang/String;
       9: astore_1
      10: aconst_null
      11: astore        4
      13: iconst_0
      14: istore        5
      16: aload_1
      17: getstatic     #4                  // Field java/util/Locale.ROOT:Ljava/util/Locale;
      20: invokevirtual #5                  // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      23: ldc           #6                  // String for update
      25: invokevirtual #7                  // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      28: istore        6
      30: iload         6
      32: iconst_m1
      33: if_icmple     57
      36: aload_1
      37: iload         6
      39: invokevirtual #8                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      42: astore        4
      44: aload_1
      45: iconst_0
      46: iload         6
      48: iconst_1
      49: isub
      50: invokevirtual #9                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      53: astore_1
      54: iconst_1
      55: istore        5
      57: new           #10                 // class java/lang/StringBuilder
      60: dup
      61: aload_1
      62: invokevirtual #11                 // Method java/lang/String.length:()I
      65: bipush        100
      67: iadd
      68: invokespecial #12                 // Method java/lang/StringBuilder."<init>":(I)V
      71: astore        7
      73: iload_3
      74: ifeq          88
      77: aload         7
      79: ldc           #13                 // String select * from ( select row_.*, rownum rownum_ from (
      81: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: pop
      85: goto          96
      88: aload         7
      90: ldc           #15                 // String select * from (
      92: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: pop
      96: aload         7
      98: aload_1
      99: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: pop
     103: iload_3
     104: ifeq          118
     107: aload         7
     109: ldc           #16                 // String  ) row_ where rownum <= ?) where rownum_ > ?
     111: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: goto          126
     118: aload         7
     120: ldc           #17                 // String  ) where rownum <= ?
     122: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: pop
     126: iload         5
     128: ifeq          147
     131: aload         7
     133: ldc           #18                 // String
     135: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: pop
     139: aload         7
     141: aload         4
     143: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload         7
     149: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: areturn

  public boolean supportsLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean bindLimitParametersInReverseOrder();
    Code:
       0: iconst_1
       1: ireturn

  public boolean useMaxForLimit();
    Code:
       0: iconst_1
       1: ireturn
}
