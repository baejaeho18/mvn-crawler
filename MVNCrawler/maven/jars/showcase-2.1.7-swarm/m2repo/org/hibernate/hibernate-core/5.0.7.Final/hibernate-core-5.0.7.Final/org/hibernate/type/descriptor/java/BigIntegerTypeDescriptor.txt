Compiled from "BigIntegerTypeDescriptor.java"
public class org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor extends org.hibernate.type.descriptor.java.AbstractTypeDescriptor<java.math.BigInteger> {
  public static final org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor INSTANCE;

  public org.hibernate.type.descriptor.java.BigIntegerTypeDescriptor();
    Code:
       0: aload_0
       1: ldc           #1                  // class java/math/BigInteger
       3: invokespecial #2                  // Method org/hibernate/type/descriptor/java/AbstractTypeDescriptor."<init>":(Ljava/lang/Class;)V
       6: return

  public java.lang.String toString(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/math/BigInteger.toString:()Ljava/lang/String;
       4: areturn

  public java.math.BigInteger fromString(java.lang.String);
    Code:
       0: new           #1                  // class java/math/BigInteger
       3: dup
       4: aload_1
       5: invokespecial #4                  // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
       8: areturn

  public int extractHashCode(java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method java/math/BigInteger.intValue:()I
       4: ireturn

  public boolean areEqual(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpeq     21
       5: aload_1
       6: ifnull        25
       9: aload_2
      10: ifnull        25
      13: aload_1
      14: aload_2
      15: invokevirtual #6                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public <X> X unwrap(java.math.BigInteger, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #1                  // class java/math/BigInteger
       8: aload_2
       9: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          17
      15: aload_1
      16: areturn
      17: ldc           #8                  // class java/math/BigDecimal
      19: aload_2
      20: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      23: ifeq          35
      26: new           #8                  // class java/math/BigDecimal
      29: dup
      30: aload_1
      31: invokespecial #9                  // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      34: areturn
      35: ldc           #10                 // class java/lang/Byte
      37: aload_2
      38: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      41: ifeq          52
      44: aload_1
      45: invokevirtual #11                 // Method java/math/BigInteger.byteValue:()B
      48: invokestatic  #12                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      51: areturn
      52: ldc           #13                 // class java/lang/Short
      54: aload_2
      55: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      58: ifeq          69
      61: aload_1
      62: invokevirtual #14                 // Method java/math/BigInteger.shortValue:()S
      65: invokestatic  #15                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      68: areturn
      69: ldc           #16                 // class java/lang/Integer
      71: aload_2
      72: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      75: ifeq          86
      78: aload_1
      79: invokevirtual #5                  // Method java/math/BigInteger.intValue:()I
      82: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      85: areturn
      86: ldc           #18                 // class java/lang/Long
      88: aload_2
      89: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      92: ifeq          103
      95: aload_1
      96: invokevirtual #19                 // Method java/math/BigInteger.longValue:()J
      99: invokestatic  #20                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     102: areturn
     103: ldc           #21                 // class java/lang/Double
     105: aload_2
     106: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     109: ifeq          120
     112: aload_1
     113: invokevirtual #22                 // Method java/math/BigInteger.doubleValue:()D
     116: invokestatic  #23                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     119: areturn
     120: ldc           #24                 // class java/lang/Float
     122: aload_2
     123: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     126: ifeq          137
     129: aload_1
     130: invokevirtual #25                 // Method java/math/BigInteger.floatValue:()F
     133: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     136: areturn
     137: aload_0
     138: aload_2
     139: invokevirtual #27                 // Method unknownUnwrap:(Ljava/lang/Class;)Lorg/hibernate/HibernateException;
     142: athrow

  public <X> java.math.BigInteger wrap(X, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #1                  // class java/math/BigInteger
       8: aload_1
       9: invokevirtual #28                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      12: ifeq          20
      15: aload_1
      16: checkcast     #1                  // class java/math/BigInteger
      19: areturn
      20: ldc           #8                  // class java/math/BigDecimal
      22: aload_1
      23: invokevirtual #28                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      26: ifeq          37
      29: aload_1
      30: checkcast     #8                  // class java/math/BigDecimal
      33: invokevirtual #29                 // Method java/math/BigDecimal.toBigIntegerExact:()Ljava/math/BigInteger;
      36: areturn
      37: ldc           #30                 // class java/lang/Number
      39: aload_1
      40: invokevirtual #28                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      43: ifeq          57
      46: aload_1
      47: checkcast     #30                 // class java/lang/Number
      50: invokevirtual #31                 // Method java/lang/Number.longValue:()J
      53: invokestatic  #32                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      56: areturn
      57: aload_0
      58: aload_1
      59: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: invokevirtual #34                 // Method unknownWrap:(Ljava/lang/Class;)Lorg/hibernate/HibernateException;
      65: athrow

  public boolean areEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigInteger
       5: aload_2
       6: checkcast     #1                  // class java/math/BigInteger
       9: invokevirtual #35                 // Method areEqual:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Z
      12: ireturn

  public int extractHashCode(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigInteger
       5: invokevirtual #36                 // Method extractHashCode:(Ljava/math/BigInteger;)I
       8: ireturn

  public java.lang.Object wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #37                 // Method wrap:(Ljava/lang/Object;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/math/BigInteger;
       6: areturn

  public java.lang.Object unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigInteger
       5: aload_2
       6: aload_3
       7: invokevirtual #38                 // Method unwrap:(Ljava/math/BigInteger;Ljava/lang/Class;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object fromString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method fromString:(Ljava/lang/String;)Ljava/math/BigInteger;
       5: areturn

  public java.lang.String toString(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/math/BigInteger
       5: invokevirtual #40                 // Method toString:(Ljava/math/BigInteger;)Ljava/lang/String;
       8: areturn

  static {};
    Code:
       0: new           #41                 // class org/hibernate/type/descriptor/java/BigIntegerTypeDescriptor
       3: dup
       4: invokespecial #42                 // Method "<init>":()V
       7: putstatic     #43                 // Field INSTANCE:Lorg/hibernate/type/descriptor/java/BigIntegerTypeDescriptor;
      10: return
}
