Compiled from "TransactionImpl.java"
public class org.hibernate.engine.transaction.internal.TransactionImpl implements org.hibernate.Transaction {
  private static final org.jboss.logging.Logger LOG;

  private final org.hibernate.resource.transaction.TransactionCoordinator transactionCoordinator;

  private final org.hibernate.resource.transaction.TransactionCoordinator$TransactionDriver transactionDriverControl;

  private boolean valid;

  public org.hibernate.engine.transaction.internal.TransactionImpl(org.hibernate.resource.transaction.TransactionCoordinator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field valid:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/TransactionCoordinator;
      14: aload_0
      15: aload_1
      16: invokeinterface #4,  1            // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
      21: putfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
      24: return

  public void begin();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
       4: invokeinterface #6,  1            // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       9: astore_1
      10: aload_0
      11: getfield      #2                  // Field valid:Z
      14: ifne          27
      17: new           #7                  // class org/hibernate/TransactionException
      20: dup
      21: ldc           #8                  // String Transaction instance is no longer valid
      23: invokespecial #9                  // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_1
      28: getstatic     #10                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      31: if_acmpne     35
      34: return
      35: getstatic     #11                 // Field LOG:Lorg/jboss/logging/Logger;
      38: ldc           #12                 // String begin
      40: invokevirtual #13                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
      47: invokeinterface #14,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.begin:()V
      52: return

  public void commit();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
       4: invokeinterface #6,  1            // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       9: astore_1
      10: aload_1
      11: getstatic     #10                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      14: if_acmpeq     27
      17: new           #7                  // class org/hibernate/TransactionException
      20: dup
      21: ldc           #15                 // String Transaction not successfully started
      23: invokespecial #9                  // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: getstatic     #11                 // Field LOG:Lorg/jboss/logging/Logger;
      30: ldc           #16                 // String committing
      32: invokevirtual #13                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
      39: invokeinterface #17,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.commit:()V
      44: aload_0
      45: invokevirtual #18                 // Method invalidate:()V
      48: goto          58
      51: astore_2
      52: aload_0
      53: invokevirtual #18                 // Method invalidate:()V
      56: aload_2
      57: athrow
      58: return
    Exception table:
       from    to  target type
          35    44    51   any

  public void rollback();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
       4: invokeinterface #6,  1            // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       9: astore_1
      10: aload_1
      11: getstatic     #19                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.ROLLED_BACK:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      14: if_acmpeq     24
      17: aload_1
      18: getstatic     #20                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.NOT_ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      21: if_acmpne     37
      24: getstatic     #11                 // Field LOG:Lorg/jboss/logging/Logger;
      27: ldc           #21                 // String rollback() called on an inactive transaction
      29: invokevirtual #13                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      32: aload_0
      33: invokevirtual #18                 // Method invalidate:()V
      36: return
      37: aload_1
      38: invokevirtual #22                 // Method org/hibernate/resource/transaction/spi/TransactionStatus.canRollback:()Z
      41: ifne          79
      44: new           #7                  // class org/hibernate/TransactionException
      47: dup
      48: new           #23                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #25                 // String Cannot rollback transaction in current status [
      57: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #27                 // Method org/hibernate/resource/transaction/spi/TransactionStatus.name:()Ljava/lang/String;
      64: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #28                 // String ]
      69: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #9                  // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: getstatic     #11                 // Field LOG:Lorg/jboss/logging/Logger;
      82: ldc           #30                 // String rolling back
      84: invokevirtual #13                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      87: aload_1
      88: getstatic     #31                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.FAILED_COMMIT:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      91: if_acmpne     101
      94: aload_0
      95: invokevirtual #32                 // Method allowFailedCommitToPhysicallyRollback:()Z
      98: ifeq          124
     101: aload_0
     102: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
     105: invokeinterface #33,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.rollback:()V
     110: aload_0
     111: invokevirtual #18                 // Method invalidate:()V
     114: goto          124
     117: astore_2
     118: aload_0
     119: invokevirtual #18                 // Method invalidate:()V
     122: aload_2
     123: athrow
     124: return
    Exception table:
       from    to  target type
         101   110   117   any

  public org.hibernate.resource.transaction.spi.TransactionStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
       4: invokeinterface #6,  1            // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       9: areturn

  public void registerSynchronization(javax.transaction.Synchronization) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/TransactionCoordinator;
       4: invokeinterface #34,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator.getLocalSynchronizations:()Lorg/hibernate/resource/transaction/SynchronizationRegistry;
       9: aload_1
      10: invokeinterface #35,  2           // InterfaceMethod org/hibernate/resource/transaction/SynchronizationRegistry.registerSynchronization:(Ljavax/transaction/Synchronization;)V
      15: return

  public void setTimeout(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/TransactionCoordinator;
       4: iload_1
       5: invokeinterface #36,  2           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator.setTimeOut:(I)V
      10: return

  public int getTimeout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/TransactionCoordinator;
       4: invokeinterface #37,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator.getTimeOut:()I
       9: ireturn

  public void markRollbackOnly();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver;
       4: invokeinterface #38,  1           // InterfaceMethod org/hibernate/resource/transaction/TransactionCoordinator$TransactionDriver.markRollbackOnly:()V
       9: return

  public void invalidate();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field valid:Z
       5: return

  protected boolean allowFailedCommitToPhysicallyRollback();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: ldc           #39                 // class org/hibernate/engine/transaction/internal/TransactionImpl
       2: invokestatic  #40                 // Method org/hibernate/internal/CoreLogging.logger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #11                 // Field LOG:Lorg/jboss/logging/Logger;
       8: return
}
