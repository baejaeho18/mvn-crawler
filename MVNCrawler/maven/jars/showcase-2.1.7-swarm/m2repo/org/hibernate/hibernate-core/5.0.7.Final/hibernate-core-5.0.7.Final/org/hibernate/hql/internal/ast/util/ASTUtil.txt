Compiled from "ASTUtil.java"
public final class org.hibernate.hql.internal.ast.util.ASTUtil {
  private org.hibernate.hql.internal.ast.util.ASTUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static antlr.collections.AST create(antlr.ASTFactory, int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #2                  // Method antlr/ASTFactory.create:(ILjava/lang/String;)Lantlr/collections/AST;
       6: areturn

  public static antlr.collections.AST createSibling(antlr.ASTFactory, int, java.lang.String, antlr.collections.AST);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #2                  // Method antlr/ASTFactory.create:(ILjava/lang/String;)Lantlr/collections/AST;
       6: astore        4
       8: aload         4
      10: aload_3
      11: invokestatic  #3                  // Method insertSibling:(Lantlr/collections/AST;Lantlr/collections/AST;)Lantlr/collections/AST;
      14: areturn

  public static antlr.collections.AST insertSibling(antlr.collections.AST, antlr.collections.AST);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
       7: invokeinterface #5,  2            // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      12: aload_1
      13: aload_0
      14: invokeinterface #5,  2            // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      19: aload_0
      20: areturn

  public static antlr.collections.AST createBinarySubtree(antlr.ASTFactory, int, java.lang.String, antlr.collections.AST, antlr.collections.AST);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: aload_2
       4: aload_3
       5: invokestatic  #6                  // Method createAstArray:(Lantlr/ASTFactory;IILjava/lang/String;Lantlr/collections/AST;)Lantlr/collections/impl/ASTArray;
       8: astore        5
      10: aload         5
      12: aload         4
      14: invokevirtual #7                  // Method antlr/collections/impl/ASTArray.add:(Lantlr/collections/AST;)Lantlr/collections/impl/ASTArray;
      17: pop
      18: aload_0
      19: aload         5
      21: invokevirtual #8                  // Method antlr/ASTFactory.make:(Lantlr/collections/impl/ASTArray;)Lantlr/collections/AST;
      24: areturn

  public static antlr.collections.AST createParent(antlr.ASTFactory, int, java.lang.String, antlr.collections.AST);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: aload_2
       4: aload_3
       5: invokestatic  #6                  // Method createAstArray:(Lantlr/ASTFactory;IILjava/lang/String;Lantlr/collections/AST;)Lantlr/collections/impl/ASTArray;
       8: astore        4
      10: aload_0
      11: aload         4
      13: invokevirtual #8                  // Method antlr/ASTFactory.make:(Lantlr/collections/impl/ASTArray;)Lantlr/collections/AST;
      16: areturn

  public static antlr.collections.AST createTree(antlr.ASTFactory, antlr.collections.AST[]);
    Code:
       0: iconst_2
       1: anewarray     #9                  // class antlr/collections/AST
       4: astore_2
       5: aload_1
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_3
      10: iload_3
      11: istore        4
      13: iload         4
      15: iflt          52
      18: iload         4
      20: iload_3
      21: if_icmpeq     46
      24: aload_2
      25: iconst_1
      26: aload_1
      27: iload         4
      29: iconst_1
      30: iadd
      31: aaload
      32: aastore
      33: aload_2
      34: iconst_0
      35: aload_1
      36: iload         4
      38: aaload
      39: aastore
      40: aload_0
      41: aload_2
      42: invokevirtual #10                 // Method antlr/ASTFactory.make:([Lantlr/collections/AST;)Lantlr/collections/AST;
      45: pop
      46: iinc          4, -1
      49: goto          13
      52: aload_2
      53: iconst_0
      54: aaload
      55: areturn

  public static boolean isSubtreeChild(antlr.collections.AST, antlr.collections.AST);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
       6: astore_2
       7: aload_2
       8: ifnull        47
      11: aload_2
      12: aload_1
      13: if_acmpne     18
      16: iconst_1
      17: ireturn
      18: aload_2
      19: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      24: ifnull        37
      27: aload_2
      28: aload_1
      29: invokestatic  #12                 // Method isSubtreeChild:(Lantlr/collections/AST;Lantlr/collections/AST;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: aload_2
      38: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      43: astore_2
      44: goto          7
      47: iconst_0
      48: ireturn

  public static antlr.collections.AST findTypeInChildren(antlr.collections.AST, int);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
       6: astore_2
       7: aload_2
       8: ifnull        31
      11: aload_2
      12: invokeinterface #13,  1           // InterfaceMethod antlr/collections/AST.getType:()I
      17: iload_1
      18: if_icmpeq     31
      21: aload_2
      22: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      27: astore_2
      28: goto          7
      31: aload_2
      32: areturn

  public static antlr.collections.AST getLastChild(antlr.collections.AST);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
       6: invokestatic  #14                 // Method getLastSibling:(Lantlr/collections/AST;)Lantlr/collections/AST;
       9: areturn

  private static antlr.collections.AST getLastSibling(antlr.collections.AST);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: ifnull        18
       6: aload_0
       7: astore_1
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      14: astore_0
      15: goto          2
      18: aload_1
      19: areturn

  public static java.lang.String getDebugString(antlr.collections.AST);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #17                 // String [
      11: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: ifnonnull     25
      20: ldc           #19                 // String {null}
      22: goto          31
      25: aload_0
      26: invokeinterface #20,  1           // InterfaceMethod antlr/collections/AST.toStringTree:()Ljava/lang/String;
      31: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: aload_1
      36: ldc           #21                 // String  ]
      38: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_1
      43: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public static antlr.collections.AST findPreviousSibling(antlr.collections.AST, antlr.collections.AST);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
       8: astore_3
       9: aload_3
      10: ifnull        32
      13: aload_3
      14: aload_1
      15: if_acmpne     20
      18: aload_2
      19: areturn
      20: aload_3
      21: astore_2
      22: aload_3
      23: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      28: astore_3
      29: goto          9
      32: new           #23                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #24                 // String Child not found in parent!
      38: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow

  public static void makeSiblingOfParent(antlr.collections.AST, antlr.collections.AST);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method findPreviousSibling:(Lantlr/collections/AST;Lantlr/collections/AST;)Lantlr/collections/AST;
       5: astore_2
       6: aload_2
       7: ifnull        25
      10: aload_2
      11: aload_1
      12: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      17: invokeinterface #5,  2            // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      22: goto          37
      25: aload_0
      26: aload_1
      27: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      32: invokeinterface #27,  2           // InterfaceMethod antlr/collections/AST.setFirstChild:(Lantlr/collections/AST;)V
      37: aload_1
      38: aload_0
      39: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      44: invokeinterface #5,  2            // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      49: aload_0
      50: aload_1
      51: invokeinterface #5,  2            // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      56: return

  public static java.lang.String getPathText(antlr.collections.AST);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokestatic  #28                 // Method getPathText:(Ljava/lang/StringBuilder;Lantlr/collections/AST;)V
      13: aload_1
      14: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  private static void getPathText(java.lang.StringBuilder, antlr.collections.AST);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
       6: astore_2
       7: aload_2
       8: ifnull        16
      11: aload_0
      12: aload_2
      13: invokestatic  #28                 // Method getPathText:(Ljava/lang/StringBuilder;Lantlr/collections/AST;)V
      16: aload_0
      17: aload_1
      18: invokeinterface #29,  1           // InterfaceMethod antlr/collections/AST.getText:()Ljava/lang/String;
      23: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_2
      28: ifnull        50
      31: aload_2
      32: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      37: ifnull        50
      40: aload_0
      41: aload_2
      42: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      47: invokestatic  #28                 // Method getPathText:(Ljava/lang/StringBuilder;Lantlr/collections/AST;)V
      50: return

  public static boolean hasExactlyOneChild(antlr.collections.AST);
    Code:
       0: aload_0
       1: ifnull        31
       4: aload_0
       5: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      10: ifnull        31
      13: aload_0
      14: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      19: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      24: ifnonnull     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public static void appendSibling(antlr.collections.AST, antlr.collections.AST);
    Code:
       0: aload_0
       1: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
       6: ifnull        19
       9: aload_0
      10: invokeinterface #4,  1            // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      15: astore_0
      16: goto          0
      19: aload_0
      20: aload_1
      21: invokeinterface #5,  2            // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      26: return

  public static void insertChild(antlr.collections.AST, antlr.collections.AST);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
       6: ifnonnull     19
       9: aload_0
      10: aload_1
      11: invokeinterface #27,  2           // InterfaceMethod antlr/collections/AST.setFirstChild:(Lantlr/collections/AST;)V
      16: goto          40
      19: aload_0
      20: invokeinterface #11,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      25: astore_2
      26: aload_0
      27: aload_1
      28: invokeinterface #27,  2           // InterfaceMethod antlr/collections/AST.setFirstChild:(Lantlr/collections/AST;)V
      33: aload_1
      34: aload_2
      35: invokeinterface #5,  2            // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      40: return

  private static antlr.collections.impl.ASTArray createAstArray(antlr.ASTFactory, int, int, java.lang.String, antlr.collections.AST);
    Code:
       0: new           #30                 // class antlr/collections/impl/ASTArray
       3: dup
       4: iload_1
       5: invokespecial #31                 // Method antlr/collections/impl/ASTArray."<init>":(I)V
       8: astore        5
      10: aload         5
      12: aload_0
      13: iload_2
      14: aload_3
      15: invokevirtual #2                  // Method antlr/ASTFactory.create:(ILjava/lang/String;)Lantlr/collections/AST;
      18: invokevirtual #7                  // Method antlr/collections/impl/ASTArray.add:(Lantlr/collections/AST;)Lantlr/collections/impl/ASTArray;
      21: pop
      22: aload         5
      24: aload         4
      26: invokevirtual #7                  // Method antlr/collections/impl/ASTArray.add:(Lantlr/collections/AST;)Lantlr/collections/impl/ASTArray;
      29: pop
      30: aload         5
      32: areturn

  public static java.util.List collectChildren(antlr.collections.AST, org.hibernate.hql.internal.ast.util.ASTUtil$FilterPredicate);
    Code:
       0: new           #32                 // class org/hibernate/hql/internal/ast/util/ASTUtil$CollectingNodeVisitor
       3: dup
       4: aload_1
       5: invokespecial #33                 // Method org/hibernate/hql/internal/ast/util/ASTUtil$CollectingNodeVisitor."<init>":(Lorg/hibernate/hql/internal/ast/util/ASTUtil$FilterPredicate;)V
       8: aload_0
       9: invokevirtual #34                 // Method org/hibernate/hql/internal/ast/util/ASTUtil$CollectingNodeVisitor.collect:(Lantlr/collections/AST;)Ljava/util/List;
      12: areturn

  public static java.util.Map generateTokenNameCache(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
       4: astore_1
       5: new           #36                 // class java/util/HashMap
       8: dup
       9: aload_1
      10: arraylength
      11: i2d
      12: ldc2_w        #37                 // double 0.75d
      15: dmul
      16: d2i
      17: iconst_1
      18: iadd
      19: invokespecial #39                 // Method java/util/HashMap."<init>":(I)V
      22: astore_2
      23: aload_1
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     85
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: invokevirtual #40                 // Method java/lang/reflect/Field.getModifiers:()I
      50: invokestatic  #41                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      53: ifeq          79
      56: aload_2
      57: aload         6
      59: aconst_null
      60: invokevirtual #42                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: aload         6
      65: invokevirtual #43                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      68: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          79
      77: astore        7
      79: iinc          5, 1
      82: goto          32
      85: aload_2
      86: areturn
    Exception table:
       from    to  target type
          56    74    77   Class java/lang/Throwable

  public static java.lang.String getConstantName(java.lang.Class, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #46                 // Method getTokenTypeName:(Ljava/lang/Class;I)Ljava/lang/String;
       5: areturn

  public static java.lang.String getTokenTypeName(java.lang.Class, int);
    Code:
       0: iload_1
       1: invokestatic  #47                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: ifnull        75
       9: aload_0
      10: invokevirtual #35                 // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
      13: astore_3
      14: aload_3
      15: astore        4
      17: aload         4
      19: arraylength
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         6
      27: iload         5
      29: if_icmpge     75
      32: aload         4
      34: iload         6
      36: aaload
      37: astore        7
      39: aload         7
      41: invokestatic  #48                 // Method extractIntegerValue:(Ljava/lang/reflect/Field;)Ljava/lang/Integer;
      44: astore        8
      46: aload         8
      48: ifnull        69
      51: aload         8
      53: invokevirtual #49                 // Method java/lang/Integer.intValue:()I
      56: iload_1
      57: if_icmpne     69
      60: aload         7
      62: invokevirtual #43                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      65: astore_2
      66: goto          75
      69: iinc          6, 1
      72: goto          25
      75: aload_2
      76: areturn

  private static java.lang.Integer extractIntegerValue(java.lang.reflect.Field);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: aconst_null
       4: invokevirtual #42                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: instanceof    #50                 // class java/lang/Integer
      12: ifeq          23
      15: aload_2
      16: checkcast     #50                 // class java/lang/Integer
      19: astore_1
      20: goto          76
      23: aload_2
      24: instanceof    #51                 // class java/lang/Short
      27: ifeq          44
      30: aload_2
      31: checkcast     #51                 // class java/lang/Short
      34: invokevirtual #52                 // Method java/lang/Short.intValue:()I
      37: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: astore_1
      41: goto          76
      44: aload_2
      45: instanceof    #54                 // class java/lang/Long
      48: ifeq          76
      51: aload_2
      52: checkcast     #54                 // class java/lang/Long
      55: invokevirtual #55                 // Method java/lang/Long.longValue:()J
      58: ldc2_w        #56                 // long 2147483647l
      61: lcmp
      62: ifgt          76
      65: aload_2
      66: checkcast     #54                 // class java/lang/Long
      69: invokevirtual #58                 // Method java/lang/Long.intValue:()I
      72: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: astore_1
      76: goto          80
      79: astore_2
      80: aload_1
      81: areturn
    Exception table:
       from    to  target type
           2    76    79   Class java/lang/IllegalAccessException
}
