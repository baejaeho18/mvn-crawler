Compiled from "ClobTypeDescriptor.java"
public class org.hibernate.type.descriptor.java.ClobTypeDescriptor extends org.hibernate.type.descriptor.java.AbstractTypeDescriptor<java.sql.Clob> {
  public static final org.hibernate.type.descriptor.java.ClobTypeDescriptor INSTANCE;

  public org.hibernate.type.descriptor.java.ClobTypeDescriptor();
    Code:
       0: aload_0
       1: ldc           #1                  // class java/sql/Clob
       3: getstatic     #2                  // Field org/hibernate/type/descriptor/java/ClobTypeDescriptor$ClobMutabilityPlan.INSTANCE:Lorg/hibernate/type/descriptor/java/ClobTypeDescriptor$ClobMutabilityPlan;
       6: invokespecial #3                  // Method org/hibernate/type/descriptor/java/AbstractTypeDescriptor."<init>":(Ljava/lang/Class;Lorg/hibernate/type/descriptor/java/MutabilityPlan;)V
       9: return

  public java.lang.String toString(java.sql.Clob);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method org/hibernate/type/descriptor/java/DataHelper.extractString:(Ljava/sql/Clob;)Ljava/lang/String;
       4: areturn

  public java.sql.Clob fromString(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method org/hibernate/engine/jdbc/ClobProxy.generateProxy:(Ljava/lang/String;)Ljava/sql/Clob;
       4: areturn

  public java.util.Comparator<java.sql.Clob> getComparator();
    Code:
       0: getstatic     #6                  // Field org/hibernate/type/descriptor/java/IncomparableComparator.INSTANCE:Lorg/hibernate/type/descriptor/java/IncomparableComparator;
       3: areturn

  public int extractHashCode(java.sql.Clob);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: ireturn

  public boolean areEqual(java.sql.Clob, java.sql.Clob);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public <X> X unwrap(java.sql.Clob, java.lang.Class<X>, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #8                  // class org/hibernate/engine/jdbc/CharacterStream
       8: aload_2
       9: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          51
      15: ldc           #10                 // class org/hibernate/engine/jdbc/ClobImplementer
      17: aload_1
      18: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      21: ifeq          34
      24: aload_1
      25: checkcast     #10                 // class org/hibernate/engine/jdbc/ClobImplementer
      28: invokeinterface #12,  1           // InterfaceMethod org/hibernate/engine/jdbc/ClobImplementer.getUnderlyingStream:()Lorg/hibernate/engine/jdbc/CharacterStream;
      33: areturn
      34: new           #13                 // class org/hibernate/engine/jdbc/internal/CharacterStreamImpl
      37: dup
      38: aload_1
      39: invokeinterface #14,  1           // InterfaceMethod java/sql/Clob.getCharacterStream:()Ljava/io/Reader;
      44: invokestatic  #15                 // Method org/hibernate/type/descriptor/java/DataHelper.extractString:(Ljava/io/Reader;)Ljava/lang/String;
      47: invokespecial #16                 // Method org/hibernate/engine/jdbc/internal/CharacterStreamImpl."<init>":(Ljava/lang/String;)V
      50: areturn
      51: ldc           #1                  // class java/sql/Clob
      53: aload_2
      54: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      57: ifeq          87
      60: ldc           #17                 // class org/hibernate/engine/jdbc/WrappedClob
      62: aload_1
      63: invokevirtual #11                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      66: ifeq          81
      69: aload_1
      70: checkcast     #17                 // class org/hibernate/engine/jdbc/WrappedClob
      73: invokeinterface #18,  1           // InterfaceMethod org/hibernate/engine/jdbc/WrappedClob.getWrappedClob:()Ljava/sql/Clob;
      78: goto          82
      81: aload_1
      82: astore        4
      84: aload         4
      86: areturn
      87: goto          104
      90: astore        4
      92: new           #20                 // class org/hibernate/HibernateException
      95: dup
      96: ldc           #21                 // String Unable to access clob stream
      98: aload         4
     100: invokespecial #22                 // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     103: athrow
     104: aload_0
     105: aload_2
     106: invokevirtual #23                 // Method unknownUnwrap:(Ljava/lang/Class;)Lorg/hibernate/HibernateException;
     109: athrow
    Exception table:
       from    to  target type
           6    33    90   Class java/sql/SQLException
          34    50    90   Class java/sql/SQLException
          51    86    90   Class java/sql/SQLException

  public <X> java.sql.Clob wrap(X, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #1                  // class java/sql/Clob
       8: aload_1
       9: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      15: ifeq          34
      18: aload_2
      19: invokeinterface #25,  1           // InterfaceMethod org/hibernate/type/descriptor/WrapperOptions.getLobCreator:()Lorg/hibernate/engine/jdbc/LobCreator;
      24: aload_1
      25: checkcast     #1                  // class java/sql/Clob
      28: invokeinterface #26,  2           // InterfaceMethod org/hibernate/engine/jdbc/LobCreator.wrap:(Ljava/sql/Clob;)Ljava/sql/Clob;
      33: areturn
      34: ldc           #27                 // class java/io/Reader
      36: aload_1
      37: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      43: ifeq          67
      46: aload_1
      47: checkcast     #27                 // class java/io/Reader
      50: astore_3
      51: aload_2
      52: invokeinterface #25,  1           // InterfaceMethod org/hibernate/type/descriptor/WrapperOptions.getLobCreator:()Lorg/hibernate/engine/jdbc/LobCreator;
      57: aload_3
      58: invokestatic  #15                 // Method org/hibernate/type/descriptor/java/DataHelper.extractString:(Ljava/io/Reader;)Ljava/lang/String;
      61: invokeinterface #28,  2           // InterfaceMethod org/hibernate/engine/jdbc/LobCreator.createClob:(Ljava/lang/String;)Ljava/sql/Clob;
      66: areturn
      67: aload_0
      68: aload_1
      69: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #29                 // Method unknownWrap:(Ljava/lang/Class;)Lorg/hibernate/HibernateException;
      75: athrow

  public boolean areEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/sql/Clob
       5: aload_2
       6: checkcast     #1                  // class java/sql/Clob
       9: invokevirtual #30                 // Method areEqual:(Ljava/sql/Clob;Ljava/sql/Clob;)Z
      12: ireturn

  public int extractHashCode(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/sql/Clob
       5: invokevirtual #31                 // Method extractHashCode:(Ljava/sql/Clob;)I
       8: ireturn

  public java.lang.Object wrap(java.lang.Object, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #32                 // Method wrap:(Ljava/lang/Object;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/sql/Clob;
       6: areturn

  public java.lang.Object unwrap(java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/sql/Clob
       5: aload_2
       6: aload_3
       7: invokevirtual #33                 // Method unwrap:(Ljava/sql/Clob;Ljava/lang/Class;Lorg/hibernate/type/descriptor/WrapperOptions;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object fromString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method fromString:(Ljava/lang/String;)Ljava/sql/Clob;
       5: areturn

  public java.lang.String toString(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class java/sql/Clob
       5: invokevirtual #35                 // Method toString:(Ljava/sql/Clob;)Ljava/lang/String;
       8: areturn

  static {};
    Code:
       0: new           #36                 // class org/hibernate/type/descriptor/java/ClobTypeDescriptor
       3: dup
       4: invokespecial #37                 // Method "<init>":()V
       7: putstatic     #38                 // Field INSTANCE:Lorg/hibernate/type/descriptor/java/ClobTypeDescriptor;
      10: return
}
