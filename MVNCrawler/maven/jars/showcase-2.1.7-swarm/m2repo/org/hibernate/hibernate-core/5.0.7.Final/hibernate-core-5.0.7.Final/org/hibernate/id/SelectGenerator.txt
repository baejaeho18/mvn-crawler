Compiled from "SelectGenerator.java"
public class org.hibernate.id.SelectGenerator extends org.hibernate.id.AbstractPostInsertGenerator implements org.hibernate.id.Configurable {
  private java.lang.String uniqueKeyPropertyName;

  public org.hibernate.id.SelectGenerator();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/hibernate/id/AbstractPostInsertGenerator."<init>":()V
       4: return

  public void configure(org.hibernate.type.Type, java.util.Properties, org.hibernate.service.ServiceRegistry) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: aload_2
       2: ldc           #3                  // String key
       4: invokevirtual #4                  // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: putfield      #5                  // Field uniqueKeyPropertyName:Ljava/lang/String;
      10: return

  public org.hibernate.id.insert.InsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate(org.hibernate.id.PostInsertIdentityPersister, org.hibernate.dialect.Dialect, boolean) throws org.hibernate.HibernateException;
    Code:
       0: new           #6                  // class org/hibernate/id/SelectGenerator$SelectGeneratorDelegate
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #5                  // Field uniqueKeyPropertyName:Ljava/lang/String;
      10: aconst_null
      11: invokespecial #7                  // Method org/hibernate/id/SelectGenerator$SelectGeneratorDelegate."<init>":(Lorg/hibernate/id/PostInsertIdentityPersister;Lorg/hibernate/dialect/Dialect;Ljava/lang/String;Lorg/hibernate/id/SelectGenerator$1;)V
      14: areturn

  private static java.lang.String determineNameOfPropertyToUse(org.hibernate.id.PostInsertIdentityPersister, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        6
       4: aload_1
       5: areturn
       6: aload_0
       7: invokeinterface #8,  1            // InterfaceMethod org/hibernate/id/PostInsertIdentityPersister.getNaturalIdentifierProperties:()[I
      12: astore_2
      13: aload_2
      14: ifnonnull     27
      17: new           #9                  // class org/hibernate/id/IdentifierGenerationException
      20: dup
      21: ldc           #10                 // String no natural-id property defined; need to specify [key] in generator parameters
      23: invokespecial #11                 // Method org/hibernate/id/IdentifierGenerationException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_2
      28: arraylength
      29: iconst_1
      30: if_icmple     43
      33: new           #9                  // class org/hibernate/id/IdentifierGenerationException
      36: dup
      37: ldc           #12                 // String select generator does not currently support composite natural-id properties; need to specify [key] in generator parameters
      39: invokespecial #11                 // Method org/hibernate/id/IdentifierGenerationException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokeinterface #13,  1           // InterfaceMethod org/hibernate/id/PostInsertIdentityPersister.getEntityMetamodel:()Lorg/hibernate/tuple/entity/EntityMetamodel;
      49: invokevirtual #14                 // Method org/hibernate/tuple/entity/EntityMetamodel.isNaturalIdentifierInsertGenerated:()Z
      52: ifeq          65
      55: new           #9                  // class org/hibernate/id/IdentifierGenerationException
      58: dup
      59: ldc           #15                 // String natural-id also defined as insert-generated; need to specify [key] in generator parameters
      61: invokespecial #11                 // Method org/hibernate/id/IdentifierGenerationException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: invokeinterface #16,  1           // InterfaceMethod org/hibernate/id/PostInsertIdentityPersister.getPropertyNames:()[Ljava/lang/String;
      71: aload_2
      72: iconst_0
      73: iaload
      74: aaload
      75: areturn

  static java.lang.String access$100(org.hibernate.id.PostInsertIdentityPersister, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method determineNameOfPropertyToUse:(Lorg/hibernate/id/PostInsertIdentityPersister;Ljava/lang/String;)Ljava/lang/String;
       5: areturn
}
