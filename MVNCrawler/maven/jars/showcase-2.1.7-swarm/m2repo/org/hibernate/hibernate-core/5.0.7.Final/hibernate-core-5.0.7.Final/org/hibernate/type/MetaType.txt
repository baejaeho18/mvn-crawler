Compiled from "MetaType.java"
public class org.hibernate.type.MetaType extends org.hibernate.type.AbstractType {
  public static final java.lang.String[] REGISTRATION_KEYS;

  private final org.hibernate.type.Type baseType;

  private final java.util.Map<java.lang.Object, java.lang.String> discriminatorValuesToEntityNameMap;

  private final java.util.Map<java.lang.String, java.lang.Object> entityNameToDiscriminatorValueMap;

  public org.hibernate.type.MetaType(java.util.Map<java.lang.Object, java.lang.String>, org.hibernate.type.Type);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/type/AbstractType."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field discriminatorValuesToEntityNameMap:Ljava/util/Map;
      14: aload_0
      15: new           #4                  // class java/util/HashMap
      18: dup
      19: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      22: putfield      #6                  // Field entityNameToDiscriminatorValueMap:Ljava/util/Map;
      25: aload_1
      26: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          84
      46: aload_3
      47: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #11                 // class java/util/Map$Entry
      55: astore        4
      57: aload_0
      58: getfield      #6                  // Field entityNameToDiscriminatorValueMap:Ljava/util/Map;
      61: aload         4
      63: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: aload         4
      70: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      75: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          37
      84: return

  public java.lang.String[] getRegistrationKeys();
    Code:
       0: getstatic     #15                 // Field REGISTRATION_KEYS:[Ljava/lang/String;
       3: areturn

  public java.util.Map<java.lang.Object, java.lang.String> getDiscriminatorValuesToEntityNameMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field discriminatorValuesToEntityNameMap:Ljava/util/Map;
       4: areturn

  public int[] sqlTypes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/hibernate/type/Type.sqlTypes:(Lorg/hibernate/engine/spi/Mapping;)[I
      10: areturn

  public org.hibernate.engine.jdbc.Size[] dictatedSizes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/hibernate/type/Type.dictatedSizes:(Lorg/hibernate/engine/spi/Mapping;)[Lorg/hibernate/engine/jdbc/Size;
      10: areturn

  public org.hibernate.engine.jdbc.Size[] defaultSizes(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/hibernate/type/Type.defaultSizes:(Lorg/hibernate/engine/spi/Mapping;)[Lorg/hibernate/engine/jdbc/Size;
      10: areturn

  public int getColumnSpan(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/hibernate/type/Type.getColumnSpan:(Lorg/hibernate/engine/spi/Mapping;)I
      10: ireturn

  public java.lang.Class getReturnedClass();
    Code:
       0: ldc           #20                 // class java/lang/String
       2: areturn

  public java.lang.Object nullSafeGet(java.sql.ResultSet, java.lang.String[], org.hibernate.engine.spi.SessionImplementor, java.lang.Object) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #21,  5           // InterfaceMethod org/hibernate/type/Type.nullSafeGet:(Ljava/sql/ResultSet;[Ljava/lang/String;Lorg/hibernate/engine/spi/SessionImplementor;Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        5
      16: aload         5
      18: ifnonnull     25
      21: aconst_null
      22: goto          39
      25: aload_0
      26: getfield      #3                  // Field discriminatorValuesToEntityNameMap:Ljava/util/Map;
      29: aload         5
      31: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #20                 // class java/lang/String
      39: areturn

  public java.lang.Object nullSafeGet(java.sql.ResultSet, java.lang.String, org.hibernate.engine.spi.SessionImplementor, java.lang.Object) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #23,  5           // InterfaceMethod org/hibernate/type/Type.nullSafeGet:(Ljava/sql/ResultSet;Ljava/lang/String;Lorg/hibernate/engine/spi/SessionImplementor;Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        5
      16: aload         5
      18: ifnonnull     25
      21: aconst_null
      22: goto          39
      25: aload_0
      26: getfield      #3                  // Field discriminatorValuesToEntityNameMap:Ljava/util/Map;
      29: aload         5
      31: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #20                 // class java/lang/String
      39: areturn

  public void nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: aload_1
       5: aload_2
       6: ifnonnull     13
       9: aconst_null
      10: goto          23
      13: aload_0
      14: getfield      #6                  // Field entityNameToDiscriminatorValueMap:Ljava/util/Map;
      17: aload_2
      18: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: iload_3
      24: aload         4
      26: invokeinterface #24,  5           // InterfaceMethod org/hibernate/type/Type.nullSafeSet:(Ljava/sql/PreparedStatement;Ljava/lang/Object;ILorg/hibernate/engine/spi/SessionImplementor;)V
      31: return

  public void nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int, boolean[], org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException, java.sql.SQLException;
    Code:
       0: aload         4
       2: iconst_0
       3: baload
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: aload_2
      10: iload_3
      11: aload         5
      13: invokevirtual #25                 // Method nullSafeSet:(Ljava/sql/PreparedStatement;Ljava/lang/Object;ILorg/hibernate/engine/spi/SessionImplementor;)V
      16: return

  public java.lang.String toLoggableString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #26                 // Method toXMLString:(Ljava/lang/Object;Lorg/hibernate/engine/spi/SessionFactoryImplementor;)Ljava/lang/String;
       6: areturn

  public java.lang.String toXMLString(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_1
       1: checkcast     #20                 // class java/lang/String
       4: areturn

  public java.lang.Object fromXMLString(java.lang.String, org.hibernate.engine.spi.Mapping) throws org.hibernate.HibernateException;
    Code:
       0: aload_1
       1: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseType:Lorg/hibernate/type/Type;
       4: invokeinterface #27,  1           // InterfaceMethod org/hibernate/type/Type.getName:()Ljava/lang/String;
       9: areturn

  public java.lang.Object deepCopy(java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_1
       1: areturn

  public java.lang.Object replace(java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionImplementor, java.lang.Object, java.util.Map);
    Code:
       0: aload_1
       1: areturn

  public boolean isMutable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean[] toColumnNullness(java.lang.Object, org.hibernate.engine.spi.Mapping);
    Code:
       0: new           #28                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #29                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isDirty(java.lang.Object, java.lang.Object, boolean[], org.hibernate.engine.spi.SessionImplementor) throws org.hibernate.HibernateException;
    Code:
       0: aload_3
       1: iconst_0
       2: baload
       3: ifeq          21
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload         4
      11: invokevirtual #30                 // Method isDirty:(Ljava/lang/Object;Ljava/lang/Object;Lorg/hibernate/engine/spi/SessionImplementor;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #20                 // class java/lang/String
       4: putstatic     #15                 // Field REGISTRATION_KEYS:[Ljava/lang/String;
       7: return
}
