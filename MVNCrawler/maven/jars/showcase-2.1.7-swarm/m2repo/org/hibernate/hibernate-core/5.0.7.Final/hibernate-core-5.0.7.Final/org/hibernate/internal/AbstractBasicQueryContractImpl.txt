Compiled from "AbstractBasicQueryContractImpl.java"
public abstract class org.hibernate.internal.AbstractBasicQueryContractImpl implements org.hibernate.BasicQueryContract {
  private final org.hibernate.engine.spi.SessionImplementor session;

  private org.hibernate.FlushMode flushMode;

  private org.hibernate.CacheMode cacheMode;

  private boolean cacheable;

  private java.lang.String cacheRegion;

  private boolean readOnly;

  private org.hibernate.engine.spi.RowSelection selection;

  protected org.hibernate.internal.AbstractBasicQueryContractImpl(org.hibernate.engine.spi.SessionImplementor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/hibernate/engine/spi/RowSelection
       8: dup
       9: invokespecial #3                  // Method org/hibernate/engine/spi/RowSelection."<init>":()V
      12: putfield      #4                  // Field selection:Lorg/hibernate/engine/spi/RowSelection;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
      20: aload_0
      21: aload_1
      22: invokeinterface #6,  1            // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.getPersistenceContext:()Lorg/hibernate/engine/spi/PersistenceContext;
      27: invokeinterface #7,  1            // InterfaceMethod org/hibernate/engine/spi/PersistenceContext.isDefaultReadOnly:()Z
      32: putfield      #8                  // Field readOnly:Z
      35: return

  protected org.hibernate.engine.spi.SessionImplementor session();
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lorg/hibernate/engine/spi/SessionImplementor;
       4: areturn

  public org.hibernate.FlushMode getFlushMode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field flushMode:Lorg/hibernate/FlushMode;
       4: areturn

  public org.hibernate.BasicQueryContract setFlushMode(org.hibernate.FlushMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field flushMode:Lorg/hibernate/FlushMode;
       5: aload_0
       6: areturn

  public org.hibernate.CacheMode getCacheMode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cacheMode:Lorg/hibernate/CacheMode;
       4: areturn

  public org.hibernate.BasicQueryContract setCacheMode(org.hibernate.CacheMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field cacheMode:Lorg/hibernate/CacheMode;
       5: aload_0
       6: areturn

  public boolean isCacheable();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cacheable:Z
       4: ireturn

  public org.hibernate.BasicQueryContract setCacheable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field cacheable:Z
       5: aload_0
       6: areturn

  public java.lang.String getCacheRegion();
    Code:
       0: aload_0
       1: getfield      #12                 // Field cacheRegion:Ljava/lang/String;
       4: areturn

  public org.hibernate.BasicQueryContract setCacheRegion(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
       9: putfield      #12                 // Field cacheRegion:Ljava/lang/String;
      12: aload_0
      13: areturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #8                  // Field readOnly:Z
       4: ireturn

  public org.hibernate.BasicQueryContract setReadOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field readOnly:Z
       5: aload_0
       6: areturn

  public java.lang.Integer getTimeout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field selection:Lorg/hibernate/engine/spi/RowSelection;
       4: invokevirtual #14                 // Method org/hibernate/engine/spi/RowSelection.getTimeout:()Ljava/lang/Integer;
       7: areturn

  public org.hibernate.BasicQueryContract setTimeout(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field selection:Lorg/hibernate/engine/spi/RowSelection;
       4: iload_1
       5: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #16                 // Method org/hibernate/engine/spi/RowSelection.setTimeout:(Ljava/lang/Integer;)V
      11: aload_0
      12: areturn

  public java.lang.Integer getFetchSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field selection:Lorg/hibernate/engine/spi/RowSelection;
       4: invokevirtual #17                 // Method org/hibernate/engine/spi/RowSelection.getFetchSize:()Ljava/lang/Integer;
       7: areturn

  public org.hibernate.BasicQueryContract setFetchSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field selection:Lorg/hibernate/engine/spi/RowSelection;
       4: iload_1
       5: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #18                 // Method org/hibernate/engine/spi/RowSelection.setFetchSize:(Ljava/lang/Integer;)V
      11: aload_0
      12: areturn

  public org.hibernate.engine.spi.QueryParameters buildQueryParametersObject();
    Code:
       0: new           #19                 // class org/hibernate/engine/spi/QueryParameters
       3: dup
       4: invokespecial #20                 // Method org/hibernate/engine/spi/QueryParameters."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field selection:Lorg/hibernate/engine/spi/RowSelection;
      13: invokevirtual #21                 // Method org/hibernate/engine/spi/QueryParameters.setRowSelection:(Lorg/hibernate/engine/spi/RowSelection;)V
      16: aload_1
      17: aload_0
      18: getfield      #11                 // Field cacheable:Z
      21: invokevirtual #22                 // Method org/hibernate/engine/spi/QueryParameters.setCacheable:(Z)V
      24: aload_1
      25: aload_0
      26: getfield      #12                 // Field cacheRegion:Ljava/lang/String;
      29: invokevirtual #23                 // Method org/hibernate/engine/spi/QueryParameters.setCacheRegion:(Ljava/lang/String;)V
      32: aload_1
      33: aload_0
      34: getfield      #8                  // Field readOnly:Z
      37: invokevirtual #24                 // Method org/hibernate/engine/spi/QueryParameters.setReadOnly:(Z)V
      40: aload_1
      41: areturn
}
