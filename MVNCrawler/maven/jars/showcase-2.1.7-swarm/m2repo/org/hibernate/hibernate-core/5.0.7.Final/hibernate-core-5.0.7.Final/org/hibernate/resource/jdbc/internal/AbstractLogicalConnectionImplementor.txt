Compiled from "AbstractLogicalConnectionImplementor.java"
public abstract class org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor implements org.hibernate.resource.jdbc.spi.LogicalConnectionImplementor,org.hibernate.resource.jdbc.spi.PhysicalJdbcTransaction {
  private static final org.jboss.logging.Logger log;

  private org.hibernate.resource.transaction.spi.TransactionStatus status;

  protected org.hibernate.resource.jdbc.ResourceRegistry resourceRegistry;

  public org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/hibernate/resource/transaction/spi/TransactionStatus.NOT_ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       8: putfield      #3                  // Field status:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      11: return

  public org.hibernate.resource.jdbc.spi.PhysicalJdbcTransaction getPhysicalJdbcTransaction();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method errorIfClosed:()V
       4: aload_0
       5: areturn

  protected void errorIfClosed();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method isOpen:()Z
       4: ifne          37
       7: new           #6                  // class org/hibernate/ResourceClosedException
      10: dup
      11: new           #7                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      22: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #11                 // String  is closed
      27: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #13                 // Method org/hibernate/ResourceClosedException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: return

  public org.hibernate.resource.jdbc.ResourceRegistry getResourceRegistry();
    Code:
       0: aload_0
       1: getfield      #14                 // Field resourceRegistry:Lorg/hibernate/resource/jdbc/ResourceRegistry;
       4: areturn

  public void afterStatement();
    Code:
       0: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #16                 // String LogicalConnection#afterStatement
       5: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: return

  public void afterTransaction();
    Code:
       0: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #18                 // String LogicalConnection#afterTransaction
       5: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: getfield      #14                 // Field resourceRegistry:Lorg/hibernate/resource/jdbc/ResourceRegistry;
      12: invokeinterface #19,  1           // InterfaceMethod org/hibernate/resource/jdbc/ResourceRegistry.releaseResources:()V
      17: return

  protected abstract java.sql.Connection getConnectionForTransactionManagement();

  public void begin();
    Code:
       0: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #20                 // String Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
       5: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: invokevirtual #21                 // Method getConnectionForTransactionManagement:()Ljava/sql/Connection;
      12: iconst_0
      13: invokeinterface #22,  2           // InterfaceMethod java/sql/Connection.setAutoCommit:(Z)V
      18: aload_0
      19: getstatic     #23                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      22: putfield      #3                  // Field status:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      25: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
      28: ldc           #24                 // String Transaction begun via JDBC Connection.setAutoCommit(false)
      30: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      33: goto          48
      36: astore_1
      37: new           #26                 // class org/hibernate/TransactionException
      40: dup
      41: ldc           #27                 // String JDBC begin transaction failed:
      43: aload_1
      44: invokespecial #28                 // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0    33    36   Class java/sql/SQLException

  public void commit();
    Code:
       0: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #29                 // String Preparing to commit transaction via JDBC Connection.commit()
       5: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: invokevirtual #21                 // Method getConnectionForTransactionManagement:()Ljava/sql/Connection;
      12: invokeinterface #30,  1           // InterfaceMethod java/sql/Connection.commit:()V
      17: aload_0
      18: getstatic     #31                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.COMMITTED:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      21: putfield      #3                  // Field status:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      24: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
      27: ldc           #32                 // String Transaction committed via JDBC Connection.commit()
      29: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      32: goto          54
      35: astore_1
      36: aload_0
      37: getstatic     #33                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.FAILED_COMMIT:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      40: putfield      #3                  // Field status:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      43: new           #26                 // class org/hibernate/TransactionException
      46: dup
      47: ldc           #34                 // String Unable to commit against JDBC Connection
      49: aload_1
      50: invokespecial #28                 // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: aload_0
      55: invokevirtual #35                 // Method afterCompletion:()V
      58: return
    Exception table:
       from    to  target type
           0    32    35   Class java/sql/SQLException

  protected void afterCompletion();
    Code:
       0: return

  protected void resetConnection(boolean);
    Code:
       0: iload_1
       1: ifeq          29
       4: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
       7: ldc           #36                 // String re-enabling auto-commit on JDBC Connection after completion of JDBC-based transaction
       9: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      12: aload_0
      13: invokevirtual #21                 // Method getConnectionForTransactionManagement:()Ljava/sql/Connection;
      16: iconst_1
      17: invokeinterface #22,  2           // InterfaceMethod java/sql/Connection.setAutoCommit:(Z)V
      22: aload_0
      23: getstatic     #2                  // Field org/hibernate/resource/transaction/spi/TransactionStatus.NOT_ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      26: putfield      #3                  // Field status:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      29: goto          58
      32: astore_2
      33: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
      36: new           #7                  // class java/lang/StringBuilder
      39: dup
      40: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #38                 // String Could not re-enable auto-commit on JDBC Connection after completion of JDBC-based transaction :
      45: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_2
      49: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #40                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      58: return
    Exception table:
       from    to  target type
           0    29    32   Class java/lang/Exception

  public void rollback();
    Code:
       0: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #41                 // String Preparing to rollback transaction via JDBC Connection.rollback()
       5: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: invokevirtual #21                 // Method getConnectionForTransactionManagement:()Ljava/sql/Connection;
      12: invokeinterface #42,  1           // InterfaceMethod java/sql/Connection.rollback:()V
      17: aload_0
      18: getstatic     #43                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.ROLLED_BACK:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      21: putfield      #3                  // Field status:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      24: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
      27: ldc           #44                 // String Transaction rolled-back via JDBC Connection.rollback()
      29: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      32: goto          47
      35: astore_1
      36: new           #26                 // class org/hibernate/TransactionException
      39: dup
      40: ldc           #45                 // String Unable to rollback against JDBC Connection
      42: aload_1
      43: invokespecial #28                 // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: athrow
      47: aload_0
      48: invokevirtual #35                 // Method afterCompletion:()V
      51: return
    Exception table:
       from    to  target type
           0    32    35   Class java/sql/SQLException

  protected static boolean determineInitialAutoCommitMode(java.sql.Connection);
    Code:
       0: aload_0
       1: invokeinterface #46,  1           // InterfaceMethod java/sql/Connection.getAutoCommit:()Z
       6: ireturn
       7: astore_1
       8: getstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
      11: ldc           #47                 // String Unable to ascertain initial auto-commit state of provided connection; assuming auto-commit
      13: invokevirtual #40                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      16: iconst_1
      17: ireturn
    Exception table:
       from    to  target type
           0     6     7   Class java/sql/SQLException

  public org.hibernate.resource.transaction.spi.TransactionStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       4: areturn

  static {};
    Code:
       0: ldc           #48                 // class org/hibernate/resource/jdbc/internal/AbstractLogicalConnectionImplementor
       2: invokestatic  #49                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #15                 // Field log:Lorg/jboss/logging/Logger;
       8: return
}
