Compiled from "SessionFactoryImplementor.java"
public interface org.hibernate.engine.spi.SessionFactoryImplementor extends org.hibernate.engine.spi.Mapping,org.hibernate.SessionFactory {
  public abstract org.hibernate.engine.spi.SessionBuilderImplementor withOptions();

  public abstract org.hibernate.type.TypeResolver getTypeResolver();

  public abstract java.util.Properties getProperties();

  public abstract org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String) throws org.hibernate.MappingException;

  public abstract java.util.Map<java.lang.String, org.hibernate.persister.entity.EntityPersister> getEntityPersisters();

  public abstract org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String) throws org.hibernate.MappingException;

  public abstract java.util.Map<java.lang.String, org.hibernate.persister.collection.CollectionPersister> getCollectionPersisters();

  public abstract org.hibernate.engine.jdbc.spi.JdbcServices getJdbcServices();

  public abstract org.hibernate.dialect.Dialect getDialect();

  public abstract org.hibernate.Interceptor getInterceptor();

  public abstract org.hibernate.engine.query.spi.QueryPlanCache getQueryPlanCache();

  public abstract org.hibernate.type.Type[] getReturnTypes(java.lang.String) throws org.hibernate.HibernateException;

  public abstract java.lang.String[] getReturnAliases(java.lang.String) throws org.hibernate.HibernateException;

  public abstract java.lang.String[] getImplementors(java.lang.String) throws org.hibernate.MappingException;

  public abstract java.lang.String getImportedClassName(java.lang.String);

  public abstract org.hibernate.cache.spi.QueryCache getQueryCache();

  public abstract org.hibernate.cache.spi.QueryCache getQueryCache(java.lang.String) throws org.hibernate.HibernateException;

  public abstract org.hibernate.cache.spi.UpdateTimestampsCache getUpdateTimestampsCache();

  public abstract org.hibernate.stat.spi.StatisticsImplementor getStatisticsImplementor();

  public abstract org.hibernate.engine.spi.NamedQueryDefinition getNamedQuery(java.lang.String);

  public abstract void registerNamedQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition);

  public abstract org.hibernate.engine.spi.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String);

  public abstract void registerNamedSQLQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition);

  public abstract org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String);

  public abstract org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String);

  public abstract org.hibernate.cache.spi.Region getSecondLevelCacheRegion(java.lang.String);

  public abstract org.hibernate.cache.spi.access.RegionAccessStrategy getSecondLevelCacheRegionAccessStrategy(java.lang.String);

  public abstract org.hibernate.cache.spi.Region getNaturalIdCacheRegion(java.lang.String);

  public abstract org.hibernate.cache.spi.access.RegionAccessStrategy getNaturalIdCacheRegionAccessStrategy(java.lang.String);

  public abstract java.util.Map getAllSecondLevelCacheRegions();

  public abstract org.hibernate.exception.spi.SQLExceptionConverter getSQLExceptionConverter();

  public abstract org.hibernate.engine.jdbc.spi.SqlExceptionHelper getSQLExceptionHelper();

  public abstract org.hibernate.cfg.Settings getSettings();

  public abstract org.hibernate.Session openTemporarySession() throws org.hibernate.HibernateException;

  public abstract java.util.Set<java.lang.String> getCollectionRolesByEntityParticipant(java.lang.String);

  public abstract org.hibernate.proxy.EntityNotFoundDelegate getEntityNotFoundDelegate();

  public abstract org.hibernate.dialect.function.SQLFunctionRegistry getSqlFunctionRegistry();

  public abstract org.hibernate.engine.profile.FetchProfile getFetchProfile(java.lang.String);

  public abstract org.hibernate.service.spi.ServiceRegistryImplementor getServiceRegistry();

  public abstract void addObserver(org.hibernate.SessionFactoryObserver);

  public abstract org.hibernate.CustomEntityDirtinessStrategy getCustomEntityDirtinessStrategy();

  public abstract org.hibernate.context.spi.CurrentTenantIdentifierResolver getCurrentTenantIdentifierResolver();

  public abstract org.hibernate.internal.NamedQueryRepository getNamedQueryRepository();

  public abstract java.lang.Iterable<org.hibernate.EntityNameResolver> iterateEntityNameResolvers();

  public abstract org.hibernate.persister.entity.EntityPersister locateEntityPersister(java.lang.Class);

  public abstract org.hibernate.persister.entity.EntityPersister locateEntityPersister(java.lang.String);

  public abstract org.hibernate.engine.spi.SessionFactoryImplementor$DeserializationResolver getDeserializationResolver();
}
