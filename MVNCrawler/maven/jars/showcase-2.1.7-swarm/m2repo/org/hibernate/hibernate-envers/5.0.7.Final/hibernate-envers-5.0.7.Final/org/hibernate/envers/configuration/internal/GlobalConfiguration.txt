Compiled from "GlobalConfiguration.java"
public class org.hibernate.envers.configuration.internal.GlobalConfiguration {
  private final org.hibernate.envers.boot.internal.EnversService enversService;

  private final boolean generateRevisionsForCollections;

  private final boolean doNotAuditOptimisticLockingField;

  private final boolean storeDataAtDelete;

  private final java.lang.String defaultSchemaName;

  private final java.lang.String defaultCatalogName;

  private boolean trackEntitiesChangedInRevision;

  private final java.lang.Class<? extends org.hibernate.envers.RevisionListener> revisionListenerClass;

  private boolean globalWithModifiedFlag;

  private boolean hasGlobalSettingForWithModifiedFlag;

  private java.lang.String modifiedFlagSuffix;

  private final boolean useRevisionEntityWithNativeId;

  private final boolean cascadeDeleteRevision;

  private final boolean allowIdentifierReuse;

  private final java.lang.String correlatedSubqueryOperator;

  public org.hibernate.envers.configuration.internal.GlobalConfiguration(org.hibernate.envers.boot.internal.EnversService, java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field enversService:Lorg/hibernate/envers/boot/internal/EnversService;
       9: aload_0
      10: ldc           #4                  // String org.hibernate.envers.revision_on_collection_change
      12: aload_2
      13: iconst_1
      14: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
      17: putfield      #6                  // Field generateRevisionsForCollections:Z
      20: aload_0
      21: ldc           #7                  // String org.hibernate.envers.do_not_audit_optimistic_locking_field
      23: aload_2
      24: iconst_1
      25: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
      28: putfield      #8                  // Field doNotAuditOptimisticLockingField:Z
      31: aload_0
      32: ldc           #9                  // String org.hibernate.envers.store_data_at_delete
      34: aload_2
      35: iconst_0
      36: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
      39: putfield      #10                 // Field storeDataAtDelete:Z
      42: aload_0
      43: aload_2
      44: ldc           #11                 // String org.hibernate.envers.default_schema
      46: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #13                 // class java/lang/String
      54: putfield      #14                 // Field defaultSchemaName:Ljava/lang/String;
      57: aload_0
      58: aload_2
      59: ldc           #15                 // String org.hibernate.envers.default_catalog
      61: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #13                 // class java/lang/String
      69: putfield      #16                 // Field defaultCatalogName:Ljava/lang/String;
      72: aload_0
      73: ldc           #17                 // class org/hibernate/dialect/HSQLDialect
      75: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;
      78: aload_2
      79: ldc           #20                 // String hibernate.dialect
      81: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      86: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      89: ifeq          97
      92: ldc           #22                 // String in
      94: goto          99
      97: ldc           #23                 // String =
      99: putfield      #24                 // Field correlatedSubqueryOperator:Ljava/lang/String;
     102: aload_0
     103: ldc           #25                 // String org.hibernate.envers.track_entities_changed_in_revision
     105: aload_2
     106: iconst_0
     107: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
     110: putfield      #26                 // Field trackEntitiesChangedInRevision:Z
     113: aload_0
     114: ldc           #27                 // String org.hibernate.envers.cascade_delete_revision
     116: aload_2
     117: iconst_0
     118: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
     121: putfield      #28                 // Field cascadeDeleteRevision:Z
     124: aload_0
     125: ldc           #29                 // String org.hibernate.envers.use_revision_entity_with_native_id
     127: aload_2
     128: iconst_1
     129: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
     132: putfield      #30                 // Field useRevisionEntityWithNativeId:Z
     135: aload_0
     136: aload_2
     137: ldc           #31                 // String org.hibernate.envers.global_with_modified_flag
     139: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     144: ifnull        151
     147: iconst_1
     148: goto          152
     151: iconst_0
     152: putfield      #32                 // Field hasGlobalSettingForWithModifiedFlag:Z
     155: aload_0
     156: ldc           #31                 // String org.hibernate.envers.global_with_modified_flag
     158: aload_2
     159: iconst_0
     160: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
     163: putfield      #33                 // Field globalWithModifiedFlag:Z
     166: aload_0
     167: ldc           #34                 // String org.hibernate.envers.modified_flag_suffix
     169: aload_2
     170: ldc           #35                 // String _MOD
     172: invokestatic  #36                 // Method org/hibernate/internal/util/config/ConfigurationHelper.getString:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
     175: putfield      #37                 // Field modifiedFlagSuffix:Ljava/lang/String;
     178: aload_2
     179: ldc           #38                 // String org.hibernate.envers.revision_listener
     181: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     186: checkcast     #13                 // class java/lang/String
     189: astore_3
     190: aload_3
     191: ifnull        247
     194: aload_0
     195: aload_3
     196: aload_1
     197: invokeinterface #39,  1           // InterfaceMethod org/hibernate/envers/boot/internal/EnversService.getClassLoaderService:()Lorg/hibernate/boot/registry/classloading/spi/ClassLoaderService;
     202: invokestatic  #40                 // Method org/hibernate/envers/internal/tools/ReflectionTools.loadClass:(Ljava/lang/String;Lorg/hibernate/boot/registry/classloading/spi/ClassLoaderService;)Ljava/lang/Class;
     205: putfield      #41                 // Field revisionListenerClass:Ljava/lang/Class;
     208: goto          252
     211: astore        4
     213: new           #43                 // class org/hibernate/MappingException
     216: dup
     217: new           #44                 // class java/lang/StringBuilder
     220: dup
     221: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     224: ldc           #46                 // String Revision listener class not found:
     226: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: aload_3
     230: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: ldc           #48                 // String .
     235: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     241: aload         4
     243: invokespecial #50                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     246: athrow
     247: aload_0
     248: aconst_null
     249: putfield      #41                 // Field revisionListenerClass:Ljava/lang/Class;
     252: aload_0
     253: ldc           #51                 // String org.hibernate.envers.allow_identifier_reuse
     255: aload_2
     256: iconst_0
     257: invokestatic  #5                  // Method org/hibernate/internal/util/config/ConfigurationHelper.getBoolean:(Ljava/lang/String;Ljava/util/Map;Z)Z
     260: putfield      #52                 // Field allowIdentifierReuse:Z
     263: return
    Exception table:
       from    to  target type
         194   208   211   Class org/hibernate/boot/registry/classloading/spi/ClassLoadingException

  public org.hibernate.envers.boot.internal.EnversService getEnversService();
    Code:
       0: aload_0
       1: getfield      #2                  // Field enversService:Lorg/hibernate/envers/boot/internal/EnversService;
       4: areturn

  public boolean isGenerateRevisionsForCollections();
    Code:
       0: aload_0
       1: getfield      #6                  // Field generateRevisionsForCollections:Z
       4: ireturn

  public boolean isDoNotAuditOptimisticLockingField();
    Code:
       0: aload_0
       1: getfield      #8                  // Field doNotAuditOptimisticLockingField:Z
       4: ireturn

  public java.lang.String getCorrelatedSubqueryOperator();
    Code:
       0: aload_0
       1: getfield      #24                 // Field correlatedSubqueryOperator:Ljava/lang/String;
       4: areturn

  public boolean isStoreDataAtDelete();
    Code:
       0: aload_0
       1: getfield      #10                 // Field storeDataAtDelete:Z
       4: ireturn

  public java.lang.String getDefaultSchemaName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field defaultSchemaName:Ljava/lang/String;
       4: areturn

  public java.lang.String getDefaultCatalogName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field defaultCatalogName:Ljava/lang/String;
       4: areturn

  public boolean isTrackEntitiesChangedInRevision();
    Code:
       0: aload_0
       1: getfield      #26                 // Field trackEntitiesChangedInRevision:Z
       4: ireturn

  public void setTrackEntitiesChangedInRevision(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field trackEntitiesChangedInRevision:Z
       5: return

  public java.lang.Class<? extends org.hibernate.envers.RevisionListener> getRevisionListenerClass();
    Code:
       0: aload_0
       1: getfield      #41                 // Field revisionListenerClass:Ljava/lang/Class;
       4: areturn

  public boolean hasSettingForUsingModifiedFlag();
    Code:
       0: aload_0
       1: getfield      #32                 // Field hasGlobalSettingForWithModifiedFlag:Z
       4: ireturn

  public boolean isGlobalWithModifiedFlag();
    Code:
       0: aload_0
       1: getfield      #33                 // Field globalWithModifiedFlag:Z
       4: ireturn

  public java.lang.String getModifiedFlagSuffix();
    Code:
       0: aload_0
       1: getfield      #37                 // Field modifiedFlagSuffix:Ljava/lang/String;
       4: areturn

  public boolean isUseRevisionEntityWithNativeId();
    Code:
       0: aload_0
       1: getfield      #30                 // Field useRevisionEntityWithNativeId:Z
       4: ireturn

  public boolean isCascadeDeleteRevision();
    Code:
       0: aload_0
       1: getfield      #28                 // Field cascadeDeleteRevision:Z
       4: ireturn

  public boolean isAllowIdentifierReuse();
    Code:
       0: aload_0
       1: getfield      #52                 // Field allowIdentifierReuse:Z
       4: ireturn
}
