Compiled from "TypeFactory.java"
class org.hibernate.annotations.common.reflection.java.generics.TypeFactory {
  org.hibernate.annotations.common.reflection.java.generics.TypeFactory();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  static java.lang.reflect.ParameterizedType createParameterizedType(java.lang.reflect.Type, java.lang.reflect.Type[], java.lang.reflect.Type);
    Code:
       0: new           #4                  // class org/hibernate/annotations/common/reflection/java/generics/TypeFactory$1
       3: dup
       4: aload_1
       5: aload_0
       6: aload_2
       7: invokespecial #5                  // Method org/hibernate/annotations/common/reflection/java/generics/TypeFactory$1."<init>":([Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
      10: areturn

  static java.lang.reflect.Type createArrayType(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: instanceof    #6                  // class java/lang/Class
       4: ifeq          19
       7: aload_0
       8: checkcast     #6                  // class java/lang/Class
      11: iconst_0
      12: invokestatic  #7                  // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      15: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: areturn
      19: aload_0
      20: invokestatic  #9                  // Method createGenericArrayType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;
      23: areturn

  private static java.lang.reflect.GenericArrayType createGenericArrayType(java.lang.reflect.Type);
    Code:
       0: new           #10                 // class org/hibernate/annotations/common/reflection/java/generics/TypeFactory$2
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method org/hibernate/annotations/common/reflection/java/generics/TypeFactory$2."<init>":(Ljava/lang/reflect/Type;)V
       8: areturn

  private static boolean safeEquals(java.lang.reflect.Type, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: aload_1
       5: ifnonnull     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
      14: aload_0
      15: aload_1
      16: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ireturn

  private static int safeHashCode(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: invokevirtual #13                 // Method java/lang/Object.hashCode:()I
      10: ireturn

  static boolean access$000(java.lang.reflect.Type, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method safeEquals:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
       5: ireturn

  static int access$100(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method safeHashCode:(Ljava/lang/Object;)I
       4: ireturn
}
