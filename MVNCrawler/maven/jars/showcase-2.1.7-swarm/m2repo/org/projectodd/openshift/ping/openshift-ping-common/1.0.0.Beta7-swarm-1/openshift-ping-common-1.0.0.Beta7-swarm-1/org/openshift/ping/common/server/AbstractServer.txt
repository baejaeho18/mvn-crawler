Compiled from "AbstractServer.java"
public abstract class org.openshift.ping.common.server.AbstractServer implements org.openshift.ping.common.server.Server {
  protected final int port;

  protected final java.util.Map<java.lang.String, org.jgroups.Channel> CHANNELS;

  protected org.openshift.ping.common.server.AbstractServer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field CHANNELS:Ljava/util/Map;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field port:I
      20: return

  public final org.jgroups.Channel getChannel(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        32
       4: aload_0
       5: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
       8: dup
       9: astore_2
      10: monitorenter
      11: aload_0
      12: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #7                  // class org/jgroups/Channel
      24: aload_2
      25: monitorexit
      26: areturn
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: aconst_null
      33: areturn
    Exception table:
       from    to  target type
          11    26    27   any
          27    30    27   any

  protected final void addChannel(org.jgroups.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getClusterName:(Lorg/jgroups/Channel;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        41
      10: aload_0
      11: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
      14: dup
      15: astore_3
      16: monitorenter
      17: aload_0
      18: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
      21: aload_2
      22: aload_1
      23: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_3
      30: monitorexit
      31: goto          41
      34: astore        4
      36: aload_3
      37: monitorexit
      38: aload         4
      40: athrow
      41: return
    Exception table:
       from    to  target type
          17    31    34   any
          34    38    34   any

  protected final void removeChannel(org.jgroups.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method getClusterName:(Lorg/jgroups/Channel;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        40
      10: aload_0
      11: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
      14: dup
      15: astore_3
      16: monitorenter
      17: aload_0
      18: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
      21: aload_2
      22: invokeinterface #10,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_3
      29: monitorexit
      30: goto          40
      33: astore        4
      35: aload_3
      36: monitorexit
      37: aload         4
      39: athrow
      40: return
    Exception table:
       from    to  target type
          17    30    33   any
          33    37    33   any

  protected final boolean hasChannels();
    Code:
       0: aload_0
       1: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field CHANNELS:Ljava/util/Map;
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: aload_1
      25: monitorexit
      26: ireturn
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
    Exception table:
       from    to  target type
           7    26    27   any
          27    30    27   any

  private java.lang.String getClusterName(org.jgroups.Channel);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_1
       5: invokevirtual #12                 // Method org/jgroups/Channel.getClusterName:()Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnonnull     43
      13: aload_1
      14: instanceof    #13                 // class org/jgroups/JChannel
      17: ifeq          43
      20: ldc           #13                 // class org/jgroups/JChannel
      22: ldc           #14                 // String cluster_name
      24: invokevirtual #15                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      27: astore_3
      28: aload_3
      29: iconst_1
      30: invokevirtual #16                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      33: aload_3
      34: aload_1
      35: invokevirtual #17                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #18                 // class java/lang/String
      41: areturn
      42: astore_3
      43: aconst_null
      44: areturn
    Exception table:
       from    to  target type
          20    41    42   Class java/lang/Throwable

  protected final void handlePingRequest(org.jgroups.Channel, java.io.InputStream) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/jgroups/Channel.getProtocolStack:()Lorg/jgroups/stack/ProtocolStack;
       4: ldc           #21                 // class org/openshift/ping/common/OpenshiftPing
       6: invokevirtual #22                 // Method org/jgroups/stack/ProtocolStack.findProtocol:(Ljava/lang/Class;)Lorg/jgroups/stack/Protocol;
       9: checkcast     #21                 // class org/openshift/ping/common/OpenshiftPing
      12: astore_3
      13: aload_3
      14: aload_2
      15: invokevirtual #23                 // Method org/openshift/ping/common/OpenshiftPing.handlePingRequest:(Ljava/io/InputStream;)V
      18: return
}
