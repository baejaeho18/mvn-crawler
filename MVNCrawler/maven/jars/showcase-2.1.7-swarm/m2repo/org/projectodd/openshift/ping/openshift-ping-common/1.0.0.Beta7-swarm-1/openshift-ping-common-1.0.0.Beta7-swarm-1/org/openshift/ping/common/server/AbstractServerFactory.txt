Compiled from "AbstractServerFactory.java"
public abstract class org.openshift.ping.common.server.AbstractServerFactory implements org.openshift.ping.common.server.ServerFactory {
  private static final java.util.Map<java.lang.Integer, org.openshift.ping.common.server.Server> SERVERS;

  public org.openshift.ping.common.server.AbstractServerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public final synchronized org.openshift.ping.common.server.Server getServer(int);
    Code:
       0: getstatic     #2                  // Field SERVERS:Ljava/util/Map;
       3: iload_1
       4: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #5                  // class org/openshift/ping/common/server/Server
      15: astore_2
      16: aload_2
      17: ifnonnull     40
      20: aload_0
      21: iload_1
      22: invokevirtual #6                  // Method createServer:(I)Lorg/openshift/ping/common/server/Server;
      25: astore_2
      26: getstatic     #2                  // Field SERVERS:Ljava/util/Map;
      29: iload_1
      30: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aload_2
      34: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: areturn

  public abstract org.openshift.ping.common.server.Server createServer(int);

  static {};
    Code:
       0: new           #8                  // class java/util/HashMap
       3: dup
       4: invokespecial #9                  // Method java/util/HashMap."<init>":()V
       7: putstatic     #2                  // Field SERVERS:Ljava/util/Map;
      10: return
}
