Compiled from "BaseStreamProvider.java"
public abstract class org.openshift.ping.common.stream.BaseStreamProvider implements org.openshift.ping.common.stream.StreamProvider {
  private static final java.util.logging.Logger log;

  public org.openshift.ping.common.stream.BaseStreamProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.net.URLConnection openConnection(java.lang.String, java.util.Map<java.lang.String, java.lang.String>, int, int) throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field log:Ljava/util/logging/Logger;
       3: getstatic     #3                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #4                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          63
      12: getstatic     #2                  // Field log:Ljava/util/logging/Logger;
      15: getstatic     #3                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      18: ldc           #5                  // String %s opening connection: url [%s], headers [%s], connectTimeout [%s], readTimeout [%s]
      20: iconst_5
      21: anewarray     #6                  // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: invokevirtual #8                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      33: aastore
      34: dup
      35: iconst_1
      36: aload_1
      37: aastore
      38: dup
      39: iconst_2
      40: aload_2
      41: aastore
      42: dup
      43: iconst_3
      44: iload_3
      45: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aastore
      49: dup
      50: iconst_4
      51: iload         4
      53: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aastore
      57: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: invokevirtual #11                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      63: new           #12                 // class java/net/URL
      66: dup
      67: aload_1
      68: invokespecial #13                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
      71: invokevirtual #14                 // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
      74: astore        5
      76: aload_2
      77: ifnull        143
      80: aload_2
      81: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      86: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      91: astore        6
      93: aload         6
      95: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          143
     103: aload         6
     105: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #19                 // class java/util/Map$Entry
     113: astore        7
     115: aload         5
     117: aload         7
     119: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     124: checkcast     #21                 // class java/lang/String
     127: aload         7
     129: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     134: checkcast     #21                 // class java/lang/String
     137: invokevirtual #23                 // Method java/net/URLConnection.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
     140: goto          93
     143: iload_3
     144: iflt          152
     147: iload         4
     149: ifge          184
     152: new           #24                 // class java/lang/IllegalArgumentException
     155: dup
     156: ldc           #25                 // String Neither connectTimeout [%s] nor readTimeout [%s] can be less than 0 for URLConnection.
     158: iconst_2
     159: anewarray     #6                  // class java/lang/Object
     162: dup
     163: iconst_0
     164: iload_3
     165: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     168: aastore
     169: dup
     170: iconst_1
     171: iload         4
     173: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     176: aastore
     177: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     180: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     183: athrow
     184: aload         5
     186: iload_3
     187: invokevirtual #27                 // Method java/net/URLConnection.setConnectTimeout:(I)V
     190: aload         5
     192: iload         4
     194: invokevirtual #28                 // Method java/net/URLConnection.setReadTimeout:(I)V
     197: aload         5
     199: areturn

  static {};
    Code:
       0: ldc           #29                 // class org/openshift/ping/common/stream/BaseStreamProvider
       2: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #31                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #2                  // Field log:Ljava/util/logging/Logger;
      11: return
}
