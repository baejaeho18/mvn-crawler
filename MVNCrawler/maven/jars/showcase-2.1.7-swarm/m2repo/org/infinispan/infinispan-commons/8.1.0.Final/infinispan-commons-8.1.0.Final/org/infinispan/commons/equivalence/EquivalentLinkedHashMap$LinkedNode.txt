Compiled from "EquivalentLinkedHashMap.java"
final class org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode<K, V> extends org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V> {
  org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode<K, V> before;

  org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode<K, V> after;

  private org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode(K, int, V, org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/infinispan/commons/equivalence/EquivalentHashMap$Node."<init>":(Ljava/lang/Object;ILjava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;)V
       9: return

  private V remove();
    Code:
       0: aload_0
       1: getfield      #5                  // Field before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
       4: aload_0
       5: getfield      #6                  // Field after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
       8: putfield      #6                  // Field after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      11: aload_0
      12: getfield      #6                  // Field after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      15: aload_0
      16: getfield      #5                  // Field before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      19: putfield      #5                  // Field before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      22: aload_0
      23: getfield      #7                  // Field value:Ljava/lang/Object;
      26: areturn

  private void addBefore(org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
       5: aload_0
       6: aload_1
       7: getfield      #5                  // Field before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      10: putfield      #5                  // Field before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      13: aload_0
      14: getfield      #5                  // Field before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      17: aload_0
      18: putfield      #6                  // Field after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      21: aload_0
      22: getfield      #6                  // Field after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      25: aload_0
      26: putfield      #5                  // Field before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      29: return

  V recordAccess(org.infinispan.commons.equivalence.EquivalentHashMap<K, V>);
    Code:
       0: aload_1
       1: checkcast     #8                  // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap
       4: astore_2
       5: aload_2
       6: invokestatic  #9                  // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap.access$300:(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap;)Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$IterationOrder;
       9: getstatic     #10                 // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap$IterationOrder.ACCESS_ORDER:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$IterationOrder;
      12: if_acmpne     38
      15: aload_2
      16: dup
      17: getfield      #11                 // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap.modCount:I
      20: iconst_1
      21: iadd
      22: putfield      #11                 // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap.modCount:I
      25: aload_0
      26: invokespecial #1                  // Method remove:()Ljava/lang/Object;
      29: pop
      30: aload_0
      31: aload_2
      32: invokestatic  #12                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap.access$400:(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap;)Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      35: invokespecial #2                  // Method addBefore:(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;)V
      38: aload_0
      39: getfield      #7                  // Field value:Ljava/lang/Object;
      42: areturn

  protected V setValue(V, org.infinispan.commons.equivalence.EquivalentHashMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$Node.setValue:(Ljava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: aload_2
       9: invokevirtual #14                 // Method recordAccess:(Lorg/infinispan/commons/equivalence/EquivalentHashMap;)Ljava/lang/Object;
      12: pop
      13: aload_3
      14: areturn

  org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode(java.lang.Object, int, java.lang.Object, org.infinispan.commons.equivalence.EquivalentHashMap$Node, org.infinispan.commons.equivalence.EquivalentLinkedHashMap$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #3                  // Method "<init>":(Ljava/lang/Object;ILjava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;)V
       9: return

  static void access$100(org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode, org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method addBefore:(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;)V
       5: return

  static java.lang.Object access$200(org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method remove:()Ljava/lang/Object;
       4: areturn
}
