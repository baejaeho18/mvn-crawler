Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
final class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$SingleEntrySizeCalculator implements org.infinispan.commons.util.concurrent.jdk8backported.EntrySizeCalculator<java.lang.Object, java.lang.Object> {
  private static final org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$SingleEntrySizeCalculator SINGLETON;

  private org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$SingleEntrySizeCalculator();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public long calculateSize(java.lang.Object, java.lang.Object);
    Code:
       0: lconst_1
       1: lreturn

  static org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$SingleEntrySizeCalculator access$500();
    Code:
       0: getstatic     #1                  // Field SINGLETON:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SingleEntrySizeCalculator;
       3: areturn

  static {};
    Code:
       0: new           #3                  // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SingleEntrySizeCalculator
       3: dup
       4: invokespecial #4                  // Method "<init>":()V
       7: putstatic     #1                  // Field SINGLETON:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SingleEntrySizeCalculator;
      10: return
}
