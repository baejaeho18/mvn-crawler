Compiled from "EquivalentHashSet.java"
public class org.infinispan.commons.equivalence.EquivalentHashSet<E> extends java.util.AbstractSet<E> {
  private final org.infinispan.commons.equivalence.Equivalence<? super E> entryEq;

  private final org.infinispan.commons.equivalence.EquivalentHashMap<E, java.lang.Boolean> m;

  public org.infinispan.commons.equivalence.EquivalentHashSet(org.infinispan.commons.equivalence.Equivalence<? super E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field entryEq:Lorg/infinispan/commons/equivalence/Equivalence;
       9: aload_0
      10: new           #3                  // class org/infinispan/commons/equivalence/EquivalentHashMap
      13: dup
      14: aload_1
      15: getstatic     #4                  // Field org/infinispan/commons/equivalence/AnyEquivalence.BOOLEAN:Lorg/infinispan/commons/equivalence/AnyEquivalence;
      18: invokespecial #5                  // Method org/infinispan/commons/equivalence/EquivalentHashMap."<init>":(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      21: putfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
      24: return

  public org.infinispan.commons.equivalence.EquivalentHashSet(int, org.infinispan.commons.equivalence.Equivalence<? super E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field entryEq:Lorg/infinispan/commons/equivalence/Equivalence;
       9: aload_0
      10: new           #3                  // class org/infinispan/commons/equivalence/EquivalentHashMap
      13: dup
      14: iload_1
      15: aload_2
      16: getstatic     #4                  // Field org/infinispan/commons/equivalence/AnyEquivalence.BOOLEAN:Lorg/infinispan/commons/equivalence/AnyEquivalence;
      19: invokespecial #7                  // Method org/infinispan/commons/equivalence/EquivalentHashMap."<init>":(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      22: putfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
      25: return

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: invokevirtual #8                  // Method org/infinispan/commons/equivalence/EquivalentHashMap.keySet:()Ljava/util/Set;
       7: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: invokevirtual #10                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: invokevirtual #11                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.isEmpty:()Z
       7: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: aload_1
       5: invokevirtual #12                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean add(E);
    Code:
       0: aload_0
       1: getfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: aload_1
       5: getstatic     #13                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       8: invokevirtual #14                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: aload_1
       5: invokevirtual #15                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field m:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: invokevirtual #16                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.clear:()V
       7: return

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #17                 // Method iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          43
      16: aload_2
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: ifnull        40
      27: iload_1
      28: aload_0
      29: getfield      #2                  // Field entryEq:Lorg/infinispan/commons/equivalence/Equivalence;
      32: aload_3
      33: invokeinterface #20,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      38: iadd
      39: istore_1
      40: goto          7
      43: iload_1
      44: ireturn
}
