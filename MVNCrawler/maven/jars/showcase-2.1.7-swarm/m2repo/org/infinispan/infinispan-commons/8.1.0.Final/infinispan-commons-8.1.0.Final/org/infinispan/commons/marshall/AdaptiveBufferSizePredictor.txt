Compiled from "AdaptiveBufferSizePredictor.java"
public class org.infinispan.commons.marshall.AdaptiveBufferSizePredictor implements org.infinispan.commons.marshall.BufferSizePredictor {
  private static final org.infinispan.commons.logging.Log log;

  private static final boolean isTrace;

  static final int DEFAULT_MINIMUM;

  static final int DEFAULT_INITIAL;

  static final int DEFAULT_MAXIMUM;

  private static final int INDEX_INCREMENT;

  private static final int INDEX_DECREMENT;

  private static final int[] SIZE_TABLE;

  private final int minIndex;

  private final int maxIndex;

  private int index;

  private int nextBufferSize;

  private boolean decreaseNow;

  private static int getSizeTableIndex(int);
    Code:
       0: iload_0
       1: bipush        16
       3: if_icmpgt     10
       6: iload_0
       7: iconst_1
       8: isub
       9: ireturn
      10: iconst_0
      11: istore_1
      12: iload_0
      13: istore_2
      14: iload_2
      15: iconst_1
      16: iushr
      17: istore_2
      18: iinc          1, 1
      21: iload_2
      22: ifne          14
      25: iload_1
      26: iconst_3
      27: ishl
      28: istore_3
      29: iload_3
      30: bipush        18
      32: isub
      33: istore        4
      35: iload_3
      36: bipush        25
      38: isub
      39: istore        5
      41: iload         4
      43: istore        6
      45: iload         6
      47: iload         5
      49: if_icmplt     71
      52: iload_0
      53: getstatic     #1                  // Field SIZE_TABLE:[I
      56: iload         6
      58: iaload
      59: if_icmplt     65
      62: iload         6
      64: ireturn
      65: iinc          6, -1
      68: goto          45
      71: new           #2                  // class java/lang/RuntimeException
      74: dup
      75: ldc           #3                  // String Shouldn\'t reach here; please file a bug report.
      77: invokespecial #4                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      80: athrow

  public org.infinispan.commons.marshall.AdaptiveBufferSizePredictor();
    Code:
       0: aload_0
       1: bipush        16
       3: sipush        512
       6: ldc           #6                  // int 65536
       8: invokespecial #7                  // Method "<init>":(III)V
      11: return

  public org.infinispan.commons.marshall.AdaptiveBufferSizePredictor(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifgt          35
       8: new           #9                  // class java/lang/IllegalArgumentException
      11: dup
      12: new           #10                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #12                 // String minimum:
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_2
      36: iload_1
      37: if_icmpge     67
      40: new           #9                  // class java/lang/IllegalArgumentException
      43: dup
      44: new           #10                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #17                 // String initial:
      53: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_2
      57: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: iload_3
      68: iload_2
      69: if_icmpge     99
      72: new           #9                  // class java/lang/IllegalArgumentException
      75: dup
      76: new           #10                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #18                 // String maximum:
      85: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: iload_3
      89: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: iload_1
     100: invokestatic  #19                 // Method getSizeTableIndex:(I)I
     103: istore        4
     105: getstatic     #1                  // Field SIZE_TABLE:[I
     108: iload         4
     110: iaload
     111: iload_1
     112: if_icmpge     126
     115: aload_0
     116: iload         4
     118: iconst_1
     119: iadd
     120: putfield      #20                 // Field minIndex:I
     123: goto          132
     126: aload_0
     127: iload         4
     129: putfield      #20                 // Field minIndex:I
     132: iload_3
     133: invokestatic  #19                 // Method getSizeTableIndex:(I)I
     136: istore        5
     138: getstatic     #1                  // Field SIZE_TABLE:[I
     141: iload         5
     143: iaload
     144: iload_3
     145: if_icmple     159
     148: aload_0
     149: iload         5
     151: iconst_1
     152: isub
     153: putfield      #21                 // Field maxIndex:I
     156: goto          165
     159: aload_0
     160: iload         5
     162: putfield      #21                 // Field maxIndex:I
     165: aload_0
     166: iload_2
     167: invokestatic  #19                 // Method getSizeTableIndex:(I)I
     170: putfield      #22                 // Field index:I
     173: aload_0
     174: getstatic     #1                  // Field SIZE_TABLE:[I
     177: aload_0
     178: getfield      #22                 // Field index:I
     181: iaload
     182: putfield      #23                 // Field nextBufferSize:I
     185: return

  public int nextSize(java.lang.Object);
    Code:
       0: getstatic     #24                 // Field isTrace:Z
       3: ifeq          39
       6: getstatic     #25                 // Field log:Lorg/infinispan/commons/logging/Log;
       9: ldc           #26                 // String Next predicted buffer size for object type \'%s\' will be %d
      11: aload_1
      12: ifnonnull     20
      15: ldc           #27                 // String Null
      17: goto          27
      20: aload_1
      21: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      27: aload_0
      28: getfield      #23                 // Field nextBufferSize:I
      31: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokeinterface #31,  4           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #23                 // Field nextBufferSize:I
      43: ireturn

  public void recordSize(int);
    Code:
       0: iload_1
       1: getstatic     #1                  // Field SIZE_TABLE:[I
       4: iconst_0
       5: aload_0
       6: getfield      #22                 // Field index:I
       9: iconst_1
      10: isub
      11: iconst_1
      12: isub
      13: invokestatic  #32                 // Method java/lang/Math.max:(II)I
      16: iaload
      17: if_icmpgt     72
      20: aload_0
      21: getfield      #33                 // Field decreaseNow:Z
      24: ifeq          64
      27: aload_0
      28: aload_0
      29: getfield      #22                 // Field index:I
      32: iconst_1
      33: isub
      34: aload_0
      35: getfield      #20                 // Field minIndex:I
      38: invokestatic  #32                 // Method java/lang/Math.max:(II)I
      41: putfield      #22                 // Field index:I
      44: aload_0
      45: getstatic     #1                  // Field SIZE_TABLE:[I
      48: aload_0
      49: getfield      #22                 // Field index:I
      52: iaload
      53: putfield      #23                 // Field nextBufferSize:I
      56: aload_0
      57: iconst_0
      58: putfield      #33                 // Field decreaseNow:Z
      61: goto          114
      64: aload_0
      65: iconst_1
      66: putfield      #33                 // Field decreaseNow:Z
      69: goto          114
      72: iload_1
      73: aload_0
      74: getfield      #23                 // Field nextBufferSize:I
      77: if_icmplt     114
      80: aload_0
      81: aload_0
      82: getfield      #22                 // Field index:I
      85: iconst_4
      86: iadd
      87: aload_0
      88: getfield      #21                 // Field maxIndex:I
      91: invokestatic  #34                 // Method java/lang/Math.min:(II)I
      94: putfield      #22                 // Field index:I
      97: aload_0
      98: getstatic     #1                  // Field SIZE_TABLE:[I
     101: aload_0
     102: getfield      #22                 // Field index:I
     105: iaload
     106: putfield      #23                 // Field nextBufferSize:I
     109: aload_0
     110: iconst_0
     111: putfield      #33                 // Field decreaseNow:Z
     114: return

  static {};
    Code:
       0: ldc           #5                  // class org/infinispan/commons/marshall/AdaptiveBufferSizePredictor
       2: invokestatic  #35                 // Method org/infinispan/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/commons/logging/Log;
       5: putstatic     #25                 // Field log:Lorg/infinispan/commons/logging/Log;
       8: getstatic     #25                 // Field log:Lorg/infinispan/commons/logging/Log;
      11: invokeinterface #36,  1           // InterfaceMethod org/infinispan/commons/logging/Log.isTraceEnabled:()Z
      16: putstatic     #24                 // Field isTrace:Z
      19: new           #37                 // class java/util/ArrayList
      22: dup
      23: invokespecial #38                 // Method java/util/ArrayList."<init>":()V
      26: astore_0
      27: iconst_1
      28: istore_1
      29: iload_1
      30: bipush        8
      32: if_icmpgt     52
      35: aload_0
      36: iload_1
      37: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: iinc          1, 1
      49: goto          29
      52: iconst_4
      53: istore_1
      54: iload_1
      55: bipush        32
      57: if_icmpge     138
      60: lconst_1
      61: iload_1
      62: lshl
      63: lstore_2
      64: lload_2
      65: iconst_4
      66: lushr
      67: lstore        4
      69: lload_2
      70: lload         4
      72: iconst_3
      73: lshl
      74: lsub
      75: lstore_2
      76: iconst_0
      77: istore        6
      79: iload         6
      81: bipush        8
      83: if_icmpge     132
      86: lload_2
      87: lload         4
      89: ladd
      90: lstore_2
      91: lload_2
      92: ldc2_w        #41                 // long 2147483647l
      95: lcmp
      96: ifle          114
      99: aload_0
     100: ldc           #43                 // int 2147483647
     102: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     105: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     110: pop
     111: goto          126
     114: aload_0
     115: lload_2
     116: l2i
     117: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     120: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     125: pop
     126: iinc          6, 1
     129: goto          79
     132: iinc          1, 1
     135: goto          54
     138: aload_0
     139: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
     144: newarray       int
     146: putstatic     #1                  // Field SIZE_TABLE:[I
     149: iconst_0
     150: istore_1
     151: iload_1
     152: getstatic     #1                  // Field SIZE_TABLE:[I
     155: arraylength
     156: if_icmpge     183
     159: getstatic     #1                  // Field SIZE_TABLE:[I
     162: iload_1
     163: aload_0
     164: iload_1
     165: invokeinterface #45,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     170: checkcast     #40                 // class java/lang/Integer
     173: invokevirtual #46                 // Method java/lang/Integer.intValue:()I
     176: iastore
     177: iinc          1, 1
     180: goto          151
     183: return
}
