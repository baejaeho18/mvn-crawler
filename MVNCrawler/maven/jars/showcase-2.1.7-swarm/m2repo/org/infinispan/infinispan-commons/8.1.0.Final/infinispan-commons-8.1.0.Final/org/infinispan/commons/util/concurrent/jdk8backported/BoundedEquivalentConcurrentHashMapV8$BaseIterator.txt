Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$BaseIterator<K, V> extends org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Traverser<K, V> {
  final org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V> map;

  K lastKey;

  K key;

  V value;

  org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$BaseIterator(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>[], int, int, int, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #1                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;III)V
       9: aload_0
      10: aload         5
      12: putfield      #2                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      15: aload_0
      16: invokevirtual #3                  // Method advanceUntilValidValue:()V
      19: return

  final org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V> advance();
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  final void advanceUntilValidValue();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser.advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
       4: astore_1
       5: aload_1
       6: ifnull        62
       9: aload_0
      10: aload_1
      11: getfield      #7                  // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
      14: putfield      #8                  // Field value:Ljava/lang/Object;
      17: aload_0
      18: getfield      #8                  // Field value:Ljava/lang/Object;
      21: ifnull        45
      24: aload_0
      25: getfield      #8                  // Field value:Ljava/lang/Object;
      28: getstatic     #9                  // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
      31: if_acmpeq     45
      34: aload_0
      35: aload_1
      36: getfield      #10                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      39: putfield      #11                 // Field key:Ljava/lang/Object;
      42: goto          72
      45: aload_0
      46: aconst_null
      47: putfield      #11                 // Field key:Ljava/lang/Object;
      50: aload_0
      51: invokespecial #6                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser.advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      54: dup
      55: astore_1
      56: ifnonnull     9
      59: goto          72
      62: aload_0
      63: aconst_null
      64: putfield      #11                 // Field key:Ljava/lang/Object;
      67: aload_0
      68: aconst_null
      69: putfield      #8                  // Field value:Ljava/lang/Object;
      72: return

  public final boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #11                 // Field key:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final boolean hasMoreElements();
    Code:
       0: aload_0
       1: getfield      #11                 // Field key:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final void remove();
    Code:
       0: aload_0
       1: getfield      #12                 // Field lastKey:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: ifnonnull     17
       9: new           #13                 // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
      17: aload_0
      18: aconst_null
      19: putfield      #12                 // Field lastKey:Ljava/lang/Object;
      22: aload_0
      23: getfield      #2                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      26: aload_1
      27: aconst_null
      28: aconst_null
      29: invokevirtual #15                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.replaceNode:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: return
}
