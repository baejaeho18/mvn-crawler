Compiled from "StrippedConcurrentLinkedDeque.java"
class org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque<E> {
  volatile transient org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> head;

  volatile transient org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> tail;

  static final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<java.lang.Object> PREV_TERMINATOR;

  static final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<java.lang.Object> NEXT_TERMINATOR;

  final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> DEFAULT;

  private static final int HOPS;

  private static final sun.misc.Unsafe UNSAFE;

  private static final long headOffset;

  private static final long tailOffset;

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> prevTerminator();
    Code:
       0: getstatic     #1                  // Field PREV_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       3: areturn

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> nextTerminator();
    Code:
       0: getstatic     #2                  // Field NEXT_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       3: areturn

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> defaultNode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field DEFAULT:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: areturn

  public org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
       8: dup
       9: invokespecial #6                  // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":()V
      12: putfield      #3                  // Field DEFAULT:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      15: aload_0
      16: aload_0
      17: aload_0
      18: invokevirtual #7                  // Method defaultNode:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      21: dup_x1
      22: putfield      #8                  // Field tail:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      25: putfield      #9                  // Field head:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      28: return

  public E pollFirst();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method first:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_1
       5: aload_1
       6: ifnull        43
       9: aload_1
      10: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: ifnull        34
      18: aload_1
      19: aload_2
      20: aconst_null
      21: invokevirtual #12                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
      24: ifeq          34
      27: aload_0
      28: aload_1
      29: invokevirtual #13                 // Method unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      32: aload_2
      33: areturn
      34: aload_0
      35: aload_1
      36: invokevirtual #14                 // Method succ:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      39: astore_1
      40: goto          5
      43: aconst_null
      44: areturn

  public boolean pollFirstNode(java.lang.Object[]);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method first:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_2
       6: ifnull        51
       9: aload_2
      10: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      13: astore_3
      14: aload_3
      15: ifnull        42
      18: aload_2
      19: aload_3
      20: aconst_null
      21: invokevirtual #12                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
      24: ifeq          42
      27: aload_0
      28: aload_2
      29: invokevirtual #13                 // Method unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      32: aload_1
      33: iconst_0
      34: aload_2
      35: aastore
      36: aload_1
      37: iconst_1
      38: aload_3
      39: aastore
      40: iconst_1
      41: ireturn
      42: aload_0
      43: aload_2
      44: invokevirtual #14                 // Method succ:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      47: astore_2
      48: goto          5
      51: iconst_0
      52: ireturn

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> first();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_1
       5: aload_1
       6: astore_2
       7: aload_2
       8: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      11: dup
      12: astore_3
      13: ifnull        46
      16: aload_3
      17: dup
      18: astore_2
      19: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      22: dup
      23: astore_3
      24: ifnull        46
      27: aload_1
      28: aload_0
      29: getfield      #9                  // Field head:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      32: dup
      33: astore_1
      34: if_acmpeq     41
      37: aload_1
      38: goto          42
      41: aload_3
      42: astore_2
      43: goto          7
      46: aload_2
      47: aload_1
      48: if_acmpeq     60
      51: aload_0
      52: aload_1
      53: aload_2
      54: invokespecial #16                 // Method casHead:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      57: ifeq          0
      60: aload_2
      61: areturn

  final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> succ(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aload_1
       1: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_1
       6: aload_2
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #10                 // Method first:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      14: goto          18
      17: aload_2
      18: areturn

  void linkLast(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tail:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      11: dup
      12: astore        4
      14: ifnull        50
      17: aload         4
      19: dup
      20: astore_3
      21: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      24: dup
      25: astore        4
      27: ifnull        50
      30: aload_2
      31: aload_0
      32: getfield      #8                  // Field tail:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      35: dup
      36: astore_2
      37: if_acmpeq     44
      40: aload_2
      41: goto          46
      44: aload         4
      46: astore_3
      47: goto          7
      50: aload_3
      51: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      54: aload_3
      55: if_acmpne     61
      58: goto          0
      61: aload_1
      62: aload_3
      63: invokevirtual #18                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.lazySetPrev:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      66: aload_3
      67: aconst_null
      68: aload_1
      69: invokevirtual #19                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casNext:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      72: ifeq          7
      75: aload_3
      76: aload_2
      77: if_acmpeq     87
      80: aload_0
      81: aload_2
      82: aload_1
      83: invokespecial #20                 // Method casTail:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      86: pop
      87: return

  void unlink(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aload_1
       1: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_1
       6: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       9: astore_3
      10: aload_2
      11: ifnonnull     21
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokespecial #21                 // Method unlinkFirst:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      20: return
      21: aload_3
      22: ifnonnull     32
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #22                 // Method unlinkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      31: return
      32: iconst_1
      33: istore        8
      35: aload_2
      36: astore        9
      38: aload         9
      40: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      43: ifnull        56
      46: aload         9
      48: astore        4
      50: iconst_0
      51: istore        6
      53: goto          107
      56: aload         9
      58: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      61: astore        10
      63: aload         10
      65: ifnonnull     89
      68: aload         9
      70: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      73: aload         9
      75: if_acmpne     79
      78: return
      79: aload         9
      81: astore        4
      83: iconst_1
      84: istore        6
      86: goto          107
      89: aload         9
      91: aload         10
      93: if_acmpne     97
      96: return
      97: aload         10
      99: astore        9
     101: iinc          8, 1
     104: goto          38
     107: aload_3
     108: astore        9
     110: aload         9
     112: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
     115: ifnull        128
     118: aload         9
     120: astore        5
     122: iconst_0
     123: istore        7
     125: goto          179
     128: aload         9
     130: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     133: astore        10
     135: aload         10
     137: ifnonnull     161
     140: aload         9
     142: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     145: aload         9
     147: if_acmpne     151
     150: return
     151: aload         9
     153: astore        5
     155: iconst_1
     156: istore        7
     158: goto          179
     161: aload         9
     163: aload         10
     165: if_acmpne     169
     168: return
     169: aload         10
     171: astore        9
     173: iinc          8, 1
     176: goto          110
     179: iload         8
     181: iconst_2
     182: if_icmpge     194
     185: iload         6
     187: iload         7
     189: ior
     190: ifeq          194
     193: return
     194: aload_0
     195: aload         4
     197: invokevirtual #24                 // Method skipDeletedSuccessors:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     200: aload_0
     201: aload         5
     203: invokevirtual #25                 // Method skipDeletedPredecessors:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     206: iload         6
     208: iload         7
     210: ior
     211: ifeq          325
     214: aload         4
     216: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     219: aload         5
     221: if_acmpne     325
     224: aload         5
     226: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     229: aload         4
     231: if_acmpne     325
     234: iload         6
     236: ifeq          250
     239: aload         4
     241: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     244: ifnonnull     325
     247: goto          258
     250: aload         4
     252: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
     255: ifnull        325
     258: iload         7
     260: ifeq          274
     263: aload         5
     265: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     268: ifnonnull     325
     271: goto          282
     274: aload         5
     276: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
     279: ifnull        325
     282: aload_0
     283: invokespecial #26                 // Method updateHead:()V
     286: aload_0
     287: invokespecial #27                 // Method updateTail:()V
     290: aload_1
     291: iload         6
     293: ifeq          303
     296: aload_0
     297: invokevirtual #28                 // Method prevTerminator:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     300: goto          304
     303: aload_1
     304: invokevirtual #18                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.lazySetPrev:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     307: aload_1
     308: iload         7
     310: ifeq          320
     313: aload_0
     314: invokevirtual #29                 // Method nextTerminator:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     317: goto          321
     320: aload_1
     321: invokevirtual #30                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.lazySetNext:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     324: return
     325: return

  private void unlinkFirst(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>, org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: astore        4
       5: aload         4
       7: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      10: ifnonnull     24
      13: aload         4
      15: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      18: dup
      19: astore        5
      21: ifnonnull     108
      24: aload_3
      25: ifnull        107
      28: aload         4
      30: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      33: aload         4
      35: if_acmpeq     107
      38: aload_1
      39: aload_2
      40: aload         4
      42: invokevirtual #19                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casNext:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      45: ifeq          107
      48: aload_0
      49: aload         4
      51: invokevirtual #25                 // Method skipDeletedPredecessors:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      54: aload_1
      55: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      58: ifnonnull     107
      61: aload         4
      63: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      66: ifnull        77
      69: aload         4
      71: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      74: ifnull        107
      77: aload         4
      79: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      82: aload_1
      83: if_acmpne     107
      86: aload_0
      87: invokespecial #26                 // Method updateHead:()V
      90: aload_0
      91: invokespecial #27                 // Method updateTail:()V
      94: aload_3
      95: aload_3
      96: invokevirtual #30                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.lazySetNext:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      99: aload_3
     100: aload_0
     101: invokevirtual #28                 // Method prevTerminator:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     104: invokevirtual #18                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.lazySetPrev:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     107: return
     108: aload         4
     110: aload         5
     112: if_acmpne     116
     115: return
     116: aload         4
     118: astore_3
     119: aload         5
     121: astore        4
     123: goto          5

  private void unlinkLast(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>, org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: astore        4
       5: aload         4
       7: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      10: ifnonnull     24
      13: aload         4
      15: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      18: dup
      19: astore        5
      21: ifnonnull     108
      24: aload_3
      25: ifnull        107
      28: aload         4
      30: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      33: aload         4
      35: if_acmpeq     107
      38: aload_1
      39: aload_2
      40: aload         4
      42: invokevirtual #31                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casPrev:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      45: ifeq          107
      48: aload_0
      49: aload         4
      51: invokevirtual #24                 // Method skipDeletedSuccessors:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      54: aload_1
      55: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      58: ifnonnull     107
      61: aload         4
      63: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      66: ifnull        77
      69: aload         4
      71: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      74: ifnull        107
      77: aload         4
      79: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      82: aload_1
      83: if_acmpne     107
      86: aload_0
      87: invokespecial #26                 // Method updateHead:()V
      90: aload_0
      91: invokespecial #27                 // Method updateTail:()V
      94: aload_3
      95: aload_3
      96: invokevirtual #18                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.lazySetPrev:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      99: aload_3
     100: aload_0
     101: invokevirtual #29                 // Method nextTerminator:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     104: invokevirtual #30                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.lazySetNext:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     107: return
     108: aload         4
     110: aload         5
     112: if_acmpne     116
     115: return
     116: aload         4
     118: astore_3
     119: aload         5
     121: astore        4
     123: goto          5

  private final void updateHead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: dup
       5: astore_1
       6: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
       9: ifnonnull     67
      12: aload_1
      13: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      16: dup
      17: astore_2
      18: ifnull        67
      21: aload_2
      22: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      25: dup
      26: astore_3
      27: ifnull        41
      30: aload_3
      31: dup
      32: astore_2
      33: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      36: dup
      37: astore_3
      38: ifnonnull     51
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokespecial #16                 // Method casHead:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      47: ifeq          0
      50: return
      51: aload_1
      52: aload_0
      53: getfield      #9                  // Field head:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      56: if_acmpeq     62
      59: goto          0
      62: aload_3
      63: astore_2
      64: goto          21
      67: return

  private final void updateTail();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tail:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: dup
       5: astore_1
       6: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
       9: ifnonnull     67
      12: aload_1
      13: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      16: dup
      17: astore_2
      18: ifnull        67
      21: aload_2
      22: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      25: dup
      26: astore_3
      27: ifnull        41
      30: aload_3
      31: dup
      32: astore_2
      33: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      36: dup
      37: astore_3
      38: ifnonnull     51
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokespecial #20                 // Method casTail:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      47: ifeq          0
      50: return
      51: aload_1
      52: aload_0
      53: getfield      #8                  // Field tail:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      56: if_acmpeq     62
      59: goto          0
      62: aload_3
      63: astore_2
      64: goto          21
      67: return

  void skipDeletedPredecessors(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aload_1
       1: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      11: ifnull        17
      14: goto          54
      17: aload_3
      18: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      21: astore        4
      23: aload         4
      25: ifnonnull     39
      28: aload_3
      29: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      32: aload_3
      33: if_acmpne     54
      36: goto          69
      39: aload_3
      40: aload         4
      42: if_acmpne     48
      45: goto          69
      48: aload         4
      50: astore_3
      51: goto          7
      54: aload_2
      55: aload_3
      56: if_acmpeq     68
      59: aload_1
      60: aload_2
      61: aload_3
      62: invokevirtual #31                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casPrev:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      65: ifeq          69
      68: return
      69: aload_1
      70: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      73: ifnonnull     0
      76: aload_1
      77: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      80: ifnull        0
      83: return

  void skipDeletedSuccessors(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aload_1
       1: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      11: ifnull        17
      14: goto          54
      17: aload_3
      18: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      21: astore        4
      23: aload         4
      25: ifnonnull     39
      28: aload_3
      29: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      32: aload_3
      33: if_acmpne     54
      36: goto          69
      39: aload_3
      40: aload         4
      42: if_acmpne     48
      45: goto          69
      48: aload         4
      50: astore_3
      51: goto          7
      54: aload_2
      55: aload_3
      56: if_acmpeq     68
      59: aload_1
      60: aload_2
      61: aload_3
      62: invokevirtual #19                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casNext:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      65: ifeq          69
      68: return
      69: aload_1
      70: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      73: ifnonnull     0
      76: aload_1
      77: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      80: ifnull        0
      83: return

  final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> pred(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: aload_1
       1: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_1
       6: aload_2
       7: if_acmpne     17
      10: aload_0
      11: invokevirtual #32                 // Method last:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      14: goto          18
      17: aload_2
      18: areturn

  public org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> peekFirstNode();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method first:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_1
      19: areturn
      20: aload_0
      21: aload_1
      22: invokevirtual #14                 // Method succ:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      25: astore_1
      26: goto          5
      29: aconst_null
      30: areturn

  public org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> peekLastNode();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method last:()Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: getfield      #11                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_1
      19: areturn
      20: aload_0
      21: aload_1
      22: invokevirtual #33                 // Method pred:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      25: astore_1
      26: goto          5
      29: aconst_null
      30: areturn

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E> last();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tail:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_1
       5: aload_1
       6: astore_2
       7: aload_2
       8: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      11: dup
      12: astore_3
      13: ifnull        46
      16: aload_3
      17: dup
      18: astore_2
      19: getfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      22: dup
      23: astore_3
      24: ifnull        46
      27: aload_1
      28: aload_0
      29: getfield      #8                  // Field tail:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      32: dup
      33: astore_1
      34: if_acmpeq     41
      37: aload_1
      38: goto          42
      41: aload_3
      42: astore_2
      43: goto          7
      46: aload_2
      47: aload_1
      48: if_acmpeq     60
      51: aload_0
      52: aload_1
      53: aload_2
      54: invokespecial #20                 // Method casTail:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)Z
      57: ifeq          0
      60: aload_2
      61: areturn

  private boolean casHead(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>, org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: getstatic     #34                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #35                 // Field headOffset:J
       7: aload_1
       8: aload_2
       9: invokevirtual #36                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  private boolean casTail(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>, org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<E>);
    Code:
       0: getstatic     #34                 // Field UNSAFE:Lsun/misc/Unsafe;
       3: aload_0
       4: getstatic     #37                 // Field tailOffset:J
       7: aload_1
       8: aload_2
       9: invokevirtual #36                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  static sun.misc.Unsafe getUnsafe();
    Code:
       0: invokestatic  #38                 // Method sun/misc/Unsafe.getUnsafe:()Lsun/misc/Unsafe;
       3: areturn
       4: astore_0
       5: new           #40                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$1
       8: dup
       9: invokespecial #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$1."<init>":()V
      12: invokestatic  #42                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      15: checkcast     #43                 // class sun/misc/Unsafe
      18: areturn
      19: astore_0
      20: new           #45                 // class java/lang/RuntimeException
      23: dup
      24: ldc           #46                 // String Could not initialize intrinsics
      26: aload_0
      27: invokevirtual #47                 // Method java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
      30: invokespecial #48                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      33: athrow
    Exception table:
       from    to  target type
           0     3     4   Class java/lang/SecurityException
           5    18    19   Class java/security/PrivilegedActionException

  static {};
    Code:
       0: new           #5                  // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
       3: dup
       4: invokespecial #6                  // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":()V
       7: putstatic     #1                  // Field PREV_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      10: getstatic     #1                  // Field PREV_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      13: getstatic     #1                  // Field PREV_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      16: putfield      #17                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      19: new           #5                  // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      22: dup
      23: invokespecial #6                  // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":()V
      26: putstatic     #2                  // Field NEXT_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      29: getstatic     #2                  // Field NEXT_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      32: getstatic     #2                  // Field NEXT_TERMINATOR:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      35: putfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.prev:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      38: invokestatic  #49                 // Method getUnsafe:()Lsun/misc/Unsafe;
      41: putstatic     #34                 // Field UNSAFE:Lsun/misc/Unsafe;
      44: ldc           #23                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque
      46: astore_0
      47: getstatic     #34                 // Field UNSAFE:Lsun/misc/Unsafe;
      50: aload_0
      51: ldc           #50                 // String head
      53: invokevirtual #51                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      56: invokevirtual #52                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      59: putstatic     #35                 // Field headOffset:J
      62: getstatic     #34                 // Field UNSAFE:Lsun/misc/Unsafe;
      65: aload_0
      66: ldc           #53                 // String tail
      68: invokevirtual #51                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      71: invokevirtual #52                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      74: putstatic     #37                 // Field tailOffset:J
      77: goto          90
      80: astore_0
      81: new           #55                 // class java/lang/Error
      84: dup
      85: aload_0
      86: invokespecial #56                 // Method java/lang/Error."<init>":(Ljava/lang/Throwable;)V
      89: athrow
      90: return
    Exception table:
       from    to  target type
          38    77    80   Class java/lang/Exception
}
