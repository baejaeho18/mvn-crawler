Compiled from "AsyncCache.java"
public interface org.infinispan.commons.api.AsyncCache<K, V> {
  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> putAsync(K, V);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> putAsync(K, V, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> putAsync(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> putAllAsync(java.util.Map<? extends K, ? extends V>);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> putAllAsync(java.util.Map<? extends K, ? extends V>, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> putAllAsync(java.util.Map<? extends K, ? extends V>, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> clearAsync();

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> putIfAbsentAsync(K, V);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> putIfAbsentAsync(K, V, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> putIfAbsentAsync(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> removeAsync(java.lang.Object);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> removeAsync(java.lang.Object, java.lang.Object);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> replaceAsync(K, V);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> replaceAsync(K, V, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> replaceAsync(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> replaceAsync(K, V, V);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> replaceAsync(K, V, V, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> replaceAsync(K, V, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);

  public abstract org.infinispan.commons.util.concurrent.NotifyingFuture<V> getAsync(K);
}
