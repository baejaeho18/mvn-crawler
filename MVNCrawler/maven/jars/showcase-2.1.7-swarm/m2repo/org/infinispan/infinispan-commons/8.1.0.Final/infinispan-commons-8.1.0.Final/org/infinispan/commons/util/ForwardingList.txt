Compiled from "ForwardingList.java"
public abstract class org.infinispan.commons.util.ForwardingList<E> implements java.util.List<E> {
  protected org.infinispan.commons.util.ForwardingList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected abstract java.util.List<E> delegate();

  public void add(int, E);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: iload_1
       5: aload_2
       6: invokeinterface #3,  3            // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      11: return

  public boolean addAll(int, java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: iload_1
       5: aload_2
       6: invokeinterface #4,  3            // InterfaceMethod java/util/List.addAll:(ILjava/util/Collection;)Z
      11: ireturn

  public E get(int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: iload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: areturn

  public int indexOf(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      10: ireturn

  public int lastIndexOf(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/List.lastIndexOf:(Ljava/lang/Object;)I
      10: ireturn

  public java.util.ListIterator<E> listIterator();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
       9: areturn

  public java.util.ListIterator<E> listIterator(int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: iload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      10: areturn

  public E remove(int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: iload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      10: areturn

  public E set(int, E);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: iload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.util.List<E> subList(int, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: iload_1
       5: iload_2
       6: invokeinterface #12,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      11: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     18
       5: aload_0
       6: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       9: aload_1
      10: invokeinterface #13,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.hashCode:()I
       9: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
       9: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: areturn

  public boolean add(E);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method delegate:()Ljava/util/List;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/List.clear:()V
       9: return
}
