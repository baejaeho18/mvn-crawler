Compiled from "EquivalentConcurrentHashMapV8.java"
class org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$BaseIterator<K, V> extends org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Traverser<K, V> {
  final org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8<K, V> map;

  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V> lastReturned;

  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$BaseIterator(org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V>[], int, int, int, org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #1                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Traverser."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;III)V
       9: aload_0
      10: aload         5
      12: putfield      #2                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      15: aload_0
      16: invokevirtual #3                  // Method advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      19: pop
      20: return

  public final boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final boolean hasMoreElements();
    Code:
       0: aload_0
       1: getfield      #4                  // Field next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final void remove();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lastReturned:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
       4: dup
       5: astore_1
       6: ifnonnull     17
       9: new           #6                  // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
      17: aload_0
      18: aconst_null
      19: putfield      #5                  // Field lastReturned:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      22: aload_0
      23: getfield      #2                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      26: aload_1
      27: getfield      #8                  // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      30: aconst_null
      31: aconst_null
      32: invokevirtual #9                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.replaceNode:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: return
}
