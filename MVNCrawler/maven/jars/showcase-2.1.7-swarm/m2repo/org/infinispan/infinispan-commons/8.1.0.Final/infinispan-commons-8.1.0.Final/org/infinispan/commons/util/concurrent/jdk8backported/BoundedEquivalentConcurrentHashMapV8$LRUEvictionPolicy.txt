Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LRUEvictionPolicy<K, V> implements org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionPolicy<K, V> {
  final org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V> map;

  final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>> deque;

  volatile long maxSize;

  final java.util.concurrent.atomic.AtomicReference<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting> currentSize;

  final org.infinispan.commons.util.concurrent.jdk8backported.EntrySizeCalculator<? super K, ? super V> sizeCalculator;

  final boolean countingMemory;

  static final long NODE_ARRAY_BASE_OFFSET;

  static final long NODE_ARRAY_OFFSET;

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LRUEvictionPolicy(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V>, long, org.infinispan.commons.util.concurrent.jdk8backported.EntrySizeCalculator<? super K, ? super V>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque
       8: dup
       9: invokespecial #3                  // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque."<init>":()V
      12: putfield      #4                  // Field deque:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: new           #6                  // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
      23: dup
      24: lconst_0
      25: lconst_0
      26: invokespecial #7                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting."<init>":(JJ)V
      29: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      32: putfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      35: aload_0
      36: aload_1
      37: putfield      #10                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      40: aload_0
      41: lload_2
      42: putfield      #11                 // Field maxSize:J
      45: aload_0
      46: aload         4
      48: putfield      #12                 // Field sizeCalculator:Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;
      51: aload_0
      52: iload         5
      54: putfield      #13                 // Field countingMemory:Z
      57: iload         5
      59: ifeq          189
      62: invokestatic  #14                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.getUnsafe:()Lsun/misc/Unsafe;
      65: astore        6
      67: aload         6
      69: pop
      70: getstatic     #15                 // Field sun/misc/Unsafe.ADDRESS_SIZE:I
      73: aload         6
      75: pop
      76: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_OBJECT_INDEX_SCALE:I
      79: iadd
      80: i2l
      81: lstore        7
      83: lload         7
      85: aload         6
      87: pop
      88: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_OBJECT_INDEX_SCALE:I
      91: iconst_4
      92: imul
      93: i2l
      94: ladd
      95: lstore        7
      97: lload         7
      99: ldc2_w        #17                 // long 9l
     102: ladd
     103: lstore        7
     105: aload         6
     107: pop
     108: getstatic     #15                 // Field sun/misc/Unsafe.ADDRESS_SIZE:I
     111: aload         6
     113: pop
     114: getstatic     #16                 // Field sun/misc/Unsafe.ARRAY_OBJECT_INDEX_SCALE:I
     117: iadd
     118: i2l
     119: lstore        9
     121: lload         9
     123: getstatic     #19                 // Field NODE_ARRAY_BASE_OFFSET:J
     126: ldc2_w        #20                 // long 2l
     129: lmul
     130: ladd
     131: lstore        9
     133: lload         9
     135: ldc2_w        #22                 // long 28l
     138: ladd
     139: lstore        9
     141: lload         9
     143: aload         6
     145: ldc           #24                 // class "[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$CounterCell;"
     147: invokevirtual #25                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
     150: i2l
     151: ladd
     152: lstore        9
     154: lload         9
     156: aload         6
     158: pop
     159: getstatic     #15                 // Field sun/misc/Unsafe.ADDRESS_SIZE:I
     162: bipush        8
     164: imul
     165: i2l
     166: ladd
     167: lstore        9
     169: aload_0
     170: getfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     173: lload         7
     175: invokestatic  #26                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.roundUpToNearest8:(J)J
     178: lload         9
     180: invokestatic  #26                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.roundUpToNearest8:(J)J
     183: ladd
     184: lconst_0
     185: invokestatic  #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
     188: pop
     189: return

  public void onEntryHitRead(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V);
    Code:
       0: aload_1
       1: getfield      #28                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
       4: checkcast     #29                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode
       7: astore_3
       8: aload_3
       9: dup
      10: astore        4
      12: monitorenter
      13: aload_3
      14: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      17: ifnull        93
      20: aload_3
      21: getfield      #31                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.removed:Z
      24: ifne          93
      27: aload_3
      28: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      31: getfield      #32                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      34: checkcast     #33                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node
      37: astore        5
      39: aload         5
      41: ifnull        93
      44: aload_3
      45: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      48: aload         5
      50: aconst_null
      51: invokevirtual #34                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          93
      57: aload_0
      58: getfield      #4                  // Field deque:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      61: aload_3
      62: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      65: invokevirtual #35                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      68: new           #36                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      71: dup
      72: aload_1
      73: invokespecial #37                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
      76: astore        6
      78: aload_3
      79: aload         6
      81: putfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      84: aload_0
      85: getfield      #4                  // Field deque:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      88: aload         6
      90: invokevirtual #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      93: aload         4
      95: monitorexit
      96: goto          107
      99: astore        7
     101: aload         4
     103: monitorexit
     104: aload         7
     106: athrow
     107: return
    Exception table:
       from    to  target type
          13    96    99   any
          99   104    99   any

  public void onEntryHitWrite(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #39                 // Method onEntryHitRead:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Ljava/lang/Object;)V
       6: return

  public void onEntryMiss(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V);
    Code:
       0: aload_1
       1: getfield      #28                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
       4: checkcast     #29                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode
       7: astore_3
       8: aload_3
       9: dup
      10: astore        4
      12: monitorenter
      13: aload_3
      14: getfield      #31                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.removed:Z
      17: ifne          68
      20: new           #36                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      23: dup
      24: aload_1
      25: invokespecial #37                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
      28: astore        5
      30: aload_3
      31: aload         5
      33: putfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      36: aload_0
      37: getfield      #4                  // Field deque:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      40: aload         5
      42: invokevirtual #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      45: aload_0
      46: getfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_0
      50: getfield      #12                 // Field sizeCalculator:Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;
      53: aload_1
      54: getfield      #40                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      57: aload_2
      58: invokeinterface #41,  3           // InterfaceMethod org/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator.calculateSize:(Ljava/lang/Object;Ljava/lang/Object;)J
      63: lconst_0
      64: invokestatic  #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
      67: pop
      68: aload         4
      70: monitorexit
      71: goto          82
      74: astore        6
      76: aload         4
      78: monitorexit
      79: aload         6
      81: athrow
      82: return
    Exception table:
       from    to  target type
          13    71    74   any
          74    79    74   any

  public void onEntryRemove(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>);
    Code:
       0: aload_1
       1: getfield      #28                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
       4: checkcast     #29                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode
       7: astore_2
       8: aload_2
       9: dup
      10: astore_3
      11: monitorenter
      12: aload_2
      13: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      16: ifnull        65
      19: aload_2
      20: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      23: getfield      #32                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      26: checkcast     #33                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node
      29: astore        4
      31: aload         4
      33: ifnull        60
      36: aload_2
      37: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      40: aload         4
      42: aconst_null
      43: invokevirtual #34                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          60
      49: aload_0
      50: getfield      #4                  // Field deque:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      53: aload_2
      54: getfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      57: invokevirtual #35                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      60: aload_2
      61: aconst_null
      62: putfield      #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      65: aload_2
      66: getfield      #31                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.removed:Z
      69: ifne          104
      72: aload_2
      73: iconst_1
      74: putfield      #31                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.removed:Z
      77: aload_0
      78: getfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      81: aload_0
      82: getfield      #12                 // Field sizeCalculator:Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;
      85: aload_1
      86: getfield      #40                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      89: aload_1
      90: getfield      #42                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
      93: invokeinterface #41,  3           // InterfaceMethod org/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator.calculateSize:(Ljava/lang/Object;Ljava/lang/Object;)J
      98: lneg
      99: lconst_0
     100: invokestatic  #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
     103: pop
     104: aload_3
     105: monitorexit
     106: goto          116
     109: astore        5
     111: aload_3
     112: monitorexit
     113: aload         5
     115: athrow
     116: return
    Exception table:
       from    to  target type
          12   106   109   any
         109   113   109   any

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V> createNewEntry(K, int, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionEntry<K, V>);
    Code:
       0: new           #33                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node
       3: dup
       4: iload_2
       5: aload_0
       6: getfield      #10                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       9: getfield      #43                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.nodeEq:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;
      12: aload_1
      13: aload         4
      15: aload_3
      16: invokespecial #44                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)V
      19: astore        6
      21: aload         5
      23: ifnonnull     43
      26: aload         6
      28: new           #29                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode
      31: dup
      32: aload         6
      34: invokespecial #45                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode."<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)V
      37: invokevirtual #46                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.lazySetEviction:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      40: goto          50
      43: aload         6
      45: aload         5
      47: invokevirtual #46                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.lazySetEviction:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      50: aload         6
      52: areturn

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$TreeNode<K, V> createNewEntry(K, int, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$TreeNode<K, V>, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$TreeNode<K, V>, V, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionEntry<K, V>);
    Code:
       0: aload         6
       2: ifnonnull     46
       5: new           #47                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode
       8: dup
       9: iload_2
      10: aload_0
      11: getfield      #10                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      14: getfield      #43                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.nodeEq:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;
      17: aload_1
      18: aload         5
      20: aload_3
      21: aload         4
      23: aconst_null
      24: invokespecial #48                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      27: astore        7
      29: aload         7
      31: new           #29                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode
      34: dup
      35: aload         7
      37: invokespecial #45                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode."<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)V
      40: invokevirtual #49                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode.lazySetEviction:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      43: goto          71
      46: new           #47                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode
      49: dup
      50: iload_2
      51: aload_0
      52: getfield      #10                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      55: getfield      #43                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.nodeEq:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;
      58: aload_1
      59: aload         5
      61: aload_3
      62: aload         4
      64: aload         6
      66: invokespecial #48                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      69: astore        7
      71: aload         7
      73: areturn

  public java.util.Collection<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>> findIfEntriesNeedEvicting();
    Code:
       0: aload_0
       1: getfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
      10: astore_3
      11: aload_3
      12: invokestatic  #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$000:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
      15: lstore        4
      17: aload_3
      18: invokestatic  #52                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$100:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
      21: lstore        6
      23: lload         4
      25: lload         6
      27: lsub
      28: aload_0
      29: getfield      #11                 // Field maxSize:J
      32: lsub
      33: dup2
      34: lstore_1
      35: lconst_0
      36: lcmp
      37: ifle          74
      40: new           #6                  // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
      43: dup
      44: lload         4
      46: lload         6
      48: lload_1
      49: ladd
      50: invokespecial #7                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting."<init>":(JJ)V
      53: astore        8
      55: aload_0
      56: getfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      59: aload_3
      60: aload         8
      62: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      65: ifeq          71
      68: goto          74
      71: goto          0
      74: aconst_null
      75: astore_3
      76: lload_1
      77: lconst_0
      78: lcmp
      79: ifle          248
      82: new           #54                 // class java/util/ArrayList
      85: dup
      86: lload_1
      87: l2i
      88: ldc           #55                 // int 2147483647
      90: iand
      91: invokespecial #56                 // Method java/util/ArrayList."<init>":(I)V
      94: astore_3
      95: lconst_0
      96: lstore        4
      98: lload         4
     100: lload_1
     101: lcmp
     102: ifge          232
     105: aload_0
     106: getfield      #4                  // Field deque:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     109: invokevirtual #57                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.pollFirst:()Ljava/lang/Object;
     112: checkcast     #33                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node
     115: astore        6
     117: iconst_0
     118: istore        7
     120: aload         6
     122: ifnull        172
     125: aload         6
     127: getfield      #28                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
     130: checkcast     #29                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode
     133: astore        8
     135: aload         8
     137: dup
     138: astore        9
     140: monitorenter
     141: aload         8
     143: getfield      #31                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.removed:Z
     146: ifne          158
     149: aload         8
     151: iconst_1
     152: putfield      #31                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LRUNode.removed:Z
     155: iconst_1
     156: istore        7
     158: aload         9
     160: monitorexit
     161: goto          172
     164: astore        10
     166: aload         9
     168: monitorexit
     169: aload         10
     171: athrow
     172: iload         7
     174: ifeq          232
     177: aload_0
     178: getfield      #10                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     181: aload         6
     183: getfield      #40                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
     186: aconst_null
     187: aconst_null
     188: iconst_1
     189: invokevirtual #58                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.replaceNode:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
     192: astore        8
     194: aload         8
     196: ifnull        229
     199: aload_3
     200: aload         6
     202: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     207: pop
     208: lload         4
     210: aload_0
     211: getfield      #12                 // Field sizeCalculator:Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;
     214: aload         6
     216: getfield      #40                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
     219: aload         8
     221: invokeinterface #41,  3           // InterfaceMethod org/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator.calculateSize:(Ljava/lang/Object;Ljava/lang/Object;)J
     226: ladd
     227: lstore        4
     229: goto          98
     232: aload_0
     233: getfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     236: lload         4
     238: lneg
     239: lload_1
     240: lneg
     241: invokestatic  #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
     244: pop
     245: goto          252
     248: invokestatic  #60                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
     251: astore_3
     252: aload_3
     253: areturn
    Exception table:
       from    to  target type
         141   161   164   any
         164   169   164   any

  public void onResize(long, long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field countingMemory:Z
       4: ifeq          29
       7: lload_3
       8: lload_1
       9: lcmp
      10: ifle          29
      13: aload_0
      14: getfield      #9                  // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      17: lload_3
      18: lload_1
      19: lsub
      20: getstatic     #61                 // Field NODE_ARRAY_OFFSET:J
      23: lmul
      24: lconst_0
      25: invokestatic  #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
      28: pop
      29: return

  public void resize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field maxSize:J
       5: return

  static {};
    Code:
       0: invokestatic  #14                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.getUnsafe:()Lsun/misc/Unsafe;
       3: ldc           #62                 // class "[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;"
       5: invokevirtual #25                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
       8: i2l
       9: putstatic     #19                 // Field NODE_ARRAY_BASE_OFFSET:J
      12: invokestatic  #14                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.getUnsafe:()Lsun/misc/Unsafe;
      15: ldc           #62                 // class "[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;"
      17: invokevirtual #63                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      20: i2l
      21: putstatic     #61                 // Field NODE_ARRAY_OFFSET:J
      24: return
}
