Compiled from "MarshallableTypeHints.java"
public final class org.infinispan.commons.marshall.MarshallableTypeHints {
  private static final org.infinispan.commons.logging.Log log;

  private static final boolean trace;

  private final java.util.concurrent.ConcurrentMap<java.lang.Class<?>, org.infinispan.commons.marshall.MarshallableTypeHints$MarshallingType> typeHints;

  public org.infinispan.commons.marshall.MarshallableTypeHints();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
      11: return

  public org.infinispan.commons.marshall.BufferSizePredictor getBufferSizePredictor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
      13: astore_2
      14: aload_2
      15: ifnonnull     79
      18: new           #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
      21: dup
      22: aconst_null
      23: new           #6                  // class org/infinispan/commons/marshall/AdaptiveBufferSizePredictor
      26: dup
      27: invokespecial #7                  // Method org/infinispan/commons/marshall/AdaptiveBufferSizePredictor."<init>":()V
      30: aconst_null
      31: invokespecial #8                  // Method org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType."<init>":(Ljava/lang/Boolean;Lorg/infinispan/commons/marshall/BufferSizePredictor;Lorg/infinispan/commons/marshall/MarshallableTypeHints$1;)V
      34: astore_2
      35: aload_0
      36: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
      39: aload_1
      40: aload_2
      41: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
      49: astore_3
      50: aload_3
      51: ifnull        59
      54: aload_3
      55: astore_2
      56: goto          79
      59: getstatic     #10                 // Field trace:Z
      62: ifeq          79
      65: getstatic     #11                 // Field log:Lorg/infinispan/commons/logging/Log;
      68: ldc           #12                 // String Cache a buffer size predictor for \'%s\' assuming its serializability is unknown
      70: aload_1
      71: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      74: invokeinterface #14,  3           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      79: aload_2
      80: getfield      #15                 // Field org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType.sizePredictor:Lorg/infinispan/commons/marshall/BufferSizePredictor;
      83: areturn

  public boolean isKnownMarshallable(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
      13: astore_2
      14: aload_2
      15: ifnull        29
      18: aload_2
      19: getfield      #16                 // Field org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType.isMarshallable:Ljava/lang/Boolean;
      22: ifnull        29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean isMarshallable(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
      13: astore_2
      14: aload_2
      15: ifnull        36
      18: aload_2
      19: getfield      #16                 // Field org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType.isMarshallable:Ljava/lang/Boolean;
      22: astore_3
      23: aload_3
      24: ifnull        34
      27: aload_3
      28: invokevirtual #17                 // Method java/lang/Boolean.booleanValue:()Z
      31: goto          35
      34: iconst_0
      35: ireturn
      36: iconst_0
      37: ireturn

  public void markMarshallable(java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
      13: astore_3
      14: aload_0
      15: iload_2
      16: aload_3
      17: invokespecial #18                 // Method marshallableUpdateRequired:(ZLorg/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType;)Z
      20: ifeq          84
      23: aload_0
      24: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
      27: aload_1
      28: aload_3
      29: new           #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
      32: dup
      33: iload_2
      34: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: aload_3
      38: getfield      #15                 // Field org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType.sizePredictor:Lorg/infinispan/commons/marshall/BufferSizePredictor;
      41: aconst_null
      42: invokespecial #8                  // Method org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType."<init>":(Ljava/lang/Boolean;Lorg/infinispan/commons/marshall/BufferSizePredictor;Lorg/infinispan/commons/marshall/MarshallableTypeHints$1;)V
      45: invokeinterface #20,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      50: istore        4
      52: iload         4
      54: ifeq          81
      57: getstatic     #10                 // Field trace:Z
      60: ifeq          81
      63: getstatic     #11                 // Field log:Lorg/infinispan/commons/logging/Log;
      66: ldc           #21                 // String Replacing \'%s\' type to be marshallable=%b
      68: aload_1
      69: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      72: iload_2
      73: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      76: invokeinterface #22,  4           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      81: goto          142
      84: aload_3
      85: ifnonnull     142
      88: getstatic     #10                 // Field trace:Z
      91: ifeq          112
      94: getstatic     #11                 // Field log:Lorg/infinispan/commons/logging/Log;
      97: ldc           #23                 // String Cache \'%s\' type to be marshallable=%b
      99: aload_1
     100: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
     103: iload_2
     104: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     107: invokeinterface #22,  4           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     112: aload_0
     113: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
     116: aload_1
     117: new           #5                  // class org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType
     120: dup
     121: iload_2
     122: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     125: new           #6                  // class org/infinispan/commons/marshall/AdaptiveBufferSizePredictor
     128: dup
     129: invokespecial #7                  // Method org/infinispan/commons/marshall/AdaptiveBufferSizePredictor."<init>":()V
     132: aconst_null
     133: invokespecial #8                  // Method org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType."<init>":(Ljava/lang/Boolean;Lorg/infinispan/commons/marshall/BufferSizePredictor;Lorg/infinispan/commons/marshall/MarshallableTypeHints$1;)V
     136: invokeinterface #24,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: pop
     142: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeHints:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  private boolean marshallableUpdateRequired(boolean, org.infinispan.commons.marshall.MarshallableTypeHints$MarshallingType);
    Code:
       0: aload_2
       1: ifnull        26
       4: aload_2
       5: getfield      #16                 // Field org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType.isMarshallable:Ljava/lang/Boolean;
       8: ifnull        22
      11: aload_2
      12: getfield      #16                 // Field org/infinispan/commons/marshall/MarshallableTypeHints$MarshallingType.isMarshallable:Ljava/lang/Boolean;
      15: invokevirtual #17                 // Method java/lang/Boolean.booleanValue:()Z
      18: iload_1
      19: if_icmpeq     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  static {};
    Code:
       0: ldc           #26                 // class org/infinispan/commons/marshall/MarshallableTypeHints
       2: invokestatic  #27                 // Method org/infinispan/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/commons/logging/Log;
       5: putstatic     #11                 // Field log:Lorg/infinispan/commons/logging/Log;
       8: getstatic     #11                 // Field log:Lorg/infinispan/commons/logging/Log;
      11: invokeinterface #28,  1           // InterfaceMethod org/infinispan/commons/logging/Log.isTraceEnabled:()Z
      16: putstatic     #10                 // Field trace:Z
      19: return
}
