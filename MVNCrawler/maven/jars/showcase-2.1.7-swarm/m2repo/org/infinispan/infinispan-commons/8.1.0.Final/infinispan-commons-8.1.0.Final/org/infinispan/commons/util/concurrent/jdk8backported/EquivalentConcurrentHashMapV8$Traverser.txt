Compiled from "EquivalentConcurrentHashMapV8.java"
class org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Traverser<K, V> {
  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V>[] tab;

  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V> next;

  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$TableStack<K, V> stack;

  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$TableStack<K, V> spare;

  int index;

  int baseIndex;

  int baseLimit;

  final int baseSize;

  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Traverser(org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V>[], int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field baseSize:I
      14: aload_0
      15: aload_0
      16: iload_3
      17: dup_x1
      18: putfield      #4                  // Field index:I
      21: putfield      #5                  // Field baseIndex:I
      24: aload_0
      25: iload         4
      27: putfield      #6                  // Field baseLimit:I
      30: aload_0
      31: aconst_null
      32: putfield      #7                  // Field next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      35: return

  final org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V> advance();
    Code:
       0: aload_0
       1: getfield      #7                  // Field next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
       4: dup
       5: astore_1
       6: ifnull        14
       9: aload_1
      10: getfield      #8                  // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      13: astore_1
      14: aload_1
      15: ifnull        25
      18: aload_0
      19: aload_1
      20: dup_x1
      21: putfield      #7                  // Field next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      24: areturn
      25: aload_0
      26: getfield      #5                  // Field baseIndex:I
      29: aload_0
      30: getfield      #6                  // Field baseLimit:I
      33: if_icmpge     63
      36: aload_0
      37: getfield      #2                  // Field tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      40: dup
      41: astore_2
      42: ifnull        63
      45: aload_2
      46: arraylength
      47: dup
      48: istore        4
      50: aload_0
      51: getfield      #4                  // Field index:I
      54: dup
      55: istore_3
      56: if_icmple     63
      59: iload_3
      60: ifge          70
      63: aload_0
      64: aconst_null
      65: dup_x1
      66: putfield      #7                  // Field next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      69: areturn
      70: aload_2
      71: iload_3
      72: invokestatic  #9                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.tabAt:([Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;I)Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      75: dup
      76: astore_1
      77: ifnull        138
      80: aload_1
      81: getfield      #10                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node.hash:I
      84: ifge          138
      87: aload_1
      88: instanceof    #11                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$ForwardingNode
      91: ifeq          118
      94: aload_0
      95: aload_1
      96: checkcast     #11                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$ForwardingNode
      99: getfield      #12                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$ForwardingNode.nextTable:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
     102: putfield      #2                  // Field tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
     105: aconst_null
     106: astore_1
     107: aload_0
     108: aload_2
     109: iload_3
     110: iload         4
     112: invokespecial #13                 // Method pushState:([Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;II)V
     115: goto          14
     118: aload_1
     119: instanceof    #14                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TreeBin
     122: ifeq          136
     125: aload_1
     126: checkcast     #14                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TreeBin
     129: getfield      #15                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TreeBin.first:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TreeNode;
     132: astore_1
     133: goto          138
     136: aconst_null
     137: astore_1
     138: aload_0
     139: getfield      #16                 // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
     142: ifnull        154
     145: aload_0
     146: iload         4
     148: invokespecial #17                 // Method recoverState:(I)V
     151: goto          185
     154: aload_0
     155: iload_3
     156: aload_0
     157: getfield      #3                  // Field baseSize:I
     160: iadd
     161: dup_x1
     162: putfield      #4                  // Field index:I
     165: iload         4
     167: if_icmplt     185
     170: aload_0
     171: aload_0
     172: dup
     173: getfield      #5                  // Field baseIndex:I
     176: iconst_1
     177: iadd
     178: dup_x1
     179: putfield      #5                  // Field baseIndex:I
     182: putfield      #4                  // Field index:I
     185: goto          14

  private void pushState(org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V>[], int, int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field spare:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
       4: astore        4
       6: aload         4
       8: ifnull        23
      11: aload_0
      12: aload         4
      14: getfield      #19                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      17: putfield      #18                 // Field spare:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      20: goto          32
      23: new           #20                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack
      26: dup
      27: invokespecial #21                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack."<init>":()V
      30: astore        4
      32: aload         4
      34: aload_1
      35: putfield      #22                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      38: aload         4
      40: iload_3
      41: putfield      #23                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.length:I
      44: aload         4
      46: iload_2
      47: putfield      #24                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.index:I
      50: aload         4
      52: aload_0
      53: getfield      #16                 // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      56: putfield      #19                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      59: aload_0
      60: aload         4
      62: putfield      #16                 // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      65: return

  private void recoverState(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
       4: dup
       5: astore_2
       6: ifnull        80
       9: aload_0
      10: dup
      11: getfield      #4                  // Field index:I
      14: aload_2
      15: getfield      #23                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.length:I
      18: dup
      19: istore_3
      20: iadd
      21: dup_x1
      22: putfield      #4                  // Field index:I
      25: iload_1
      26: if_icmplt     80
      29: iload_3
      30: istore_1
      31: aload_0
      32: aload_2
      33: getfield      #24                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.index:I
      36: putfield      #4                  // Field index:I
      39: aload_0
      40: aload_2
      41: getfield      #22                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      44: putfield      #2                  // Field tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      47: aload_2
      48: aconst_null
      49: putfield      #22                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      52: aload_2
      53: getfield      #19                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      56: astore        4
      58: aload_2
      59: aload_0
      60: getfield      #18                 // Field spare:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      63: putfield      #19                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack.next:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      66: aload_0
      67: aload         4
      69: putfield      #16                 // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      72: aload_0
      73: aload_2
      74: putfield      #18                 // Field spare:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$TableStack;
      77: goto          0
      80: aload_2
      81: ifnonnull     117
      84: aload_0
      85: dup
      86: getfield      #4                  // Field index:I
      89: aload_0
      90: getfield      #3                  // Field baseSize:I
      93: iadd
      94: dup_x1
      95: putfield      #4                  // Field index:I
      98: iload_1
      99: if_icmplt     117
     102: aload_0
     103: aload_0
     104: dup
     105: getfield      #5                  // Field baseIndex:I
     108: iconst_1
     109: iadd
     110: dup_x1
     111: putfield      #5                  // Field baseIndex:I
     114: putfield      #4                  // Field index:I
     117: return
}
