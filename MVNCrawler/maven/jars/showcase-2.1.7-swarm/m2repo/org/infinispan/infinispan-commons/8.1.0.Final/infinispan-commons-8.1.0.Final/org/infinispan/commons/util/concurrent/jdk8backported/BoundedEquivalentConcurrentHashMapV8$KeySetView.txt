Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
public class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$KeySetView<K, V> extends org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$CollectionView<K, V, K> implements java.util.Set<K>, java.io.Serializable {
  private static final long serialVersionUID;

  private final V value;

  org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$KeySetView(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V>, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$CollectionView."<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field value:Ljava/lang/Object;
      10: return

  public V getMappedValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: aload_1
       5: invokevirtual #4                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: aload_1
       5: invokevirtual #5                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.util.Iterator<K> iterator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: astore_2
       5: aload_2
       6: getfield      #6                  // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
       9: dup
      10: astore_1
      11: ifnonnull     18
      14: iconst_0
      15: goto          20
      18: aload_1
      19: arraylength
      20: istore_3
      21: new           #7                  // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$KeyIterator
      24: dup
      25: aload_1
      26: iload_3
      27: iconst_0
      28: iload_3
      29: aload_2
      30: invokespecial #8                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$KeyIterator."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;IIILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;)V
      33: areturn

  public boolean add(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: ifnonnull     17
       9: new           #9                  // class java/lang/UnsupportedOperationException
      12: dup
      13: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":()V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      21: aload_1
      22: aload_2
      23: iconst_1
      24: invokevirtual #11                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.putVal:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
      27: ifnonnull     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean addAll(java.util.Collection<? extends K>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field value:Ljava/lang/Object;
       6: dup
       7: astore_3
       8: ifnonnull     19
      11: new           #9                  // class java/lang/UnsupportedOperationException
      14: dup
      15: invokespecial #10                 // Method java/lang/UnsupportedOperationException."<init>":()V
      18: athrow
      19: aload_1
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          65
      37: aload         4
      39: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: astore        5
      46: aload_0
      47: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      50: aload         5
      52: aload_3
      53: iconst_1
      54: invokevirtual #11                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.putVal:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
      57: ifnonnull     62
      60: iconst_1
      61: istore_2
      62: goto          27
      65: iload_2
      66: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #15                 // Method iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: iload_1
      24: aload_0
      25: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      28: getfield      #16                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      31: aload_3
      32: invokeinterface #17,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      37: iadd
      38: istore_1
      39: goto          7
      42: iload_1
      43: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #18                 // class java/util/Set
       4: ifeq          39
       7: aload_1
       8: checkcast     #18                 // class java/util/Set
      11: dup
      12: astore_2
      13: aload_0
      14: if_acmpeq     35
      17: aload_0
      18: aload_2
      19: invokevirtual #19                 // Method containsAll:(Ljava/util/Collection;)Z
      22: ifeq          39
      25: aload_2
      26: aload_0
      27: invokeinterface #20,  2           // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$ConcurrentHashMapSpliterator<K> spliteratorV8();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: astore_2
       5: aload_2
       6: invokevirtual #21                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.sumCount:()J
       9: lstore_3
      10: aload_2
      11: getfield      #6                  // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      14: dup
      15: astore_1
      16: ifnonnull     23
      19: iconst_0
      20: goto          25
      23: aload_1
      24: arraylength
      25: istore        5
      27: new           #22                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$KeySpliterator
      30: dup
      31: aload_1
      32: iload         5
      34: iconst_0
      35: iload         5
      37: lload_3
      38: lconst_0
      39: lcmp
      40: ifge          47
      43: lconst_0
      44: goto          48
      47: lload_3
      48: invokespecial #23                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$KeySpliterator."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;IIIJ)V
      51: areturn

  public void forEach(java.util.function.Consumer<? super K>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #24                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #25                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #3                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      16: getfield      #6                  // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      19: dup
      20: astore_2
      21: ifnull        73
      24: new           #26                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser
      27: dup
      28: aload_2
      29: aload_2
      30: arraylength
      31: iconst_0
      32: aload_2
      33: arraylength
      34: invokespecial #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;III)V
      37: astore_3
      38: aload_3
      39: invokevirtual #28                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser.advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      42: dup
      43: astore        4
      45: ifnull        73
      48: aload         4
      50: getfield      #29                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
      53: getstatic     #30                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
      56: if_acmpeq     38
      59: aload_1
      60: aload         4
      62: getfield      #31                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      65: invokeinterface #32,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      70: goto          38
      73: return

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8 getMap();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$CollectionView.getMap:()Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: areturn
}
