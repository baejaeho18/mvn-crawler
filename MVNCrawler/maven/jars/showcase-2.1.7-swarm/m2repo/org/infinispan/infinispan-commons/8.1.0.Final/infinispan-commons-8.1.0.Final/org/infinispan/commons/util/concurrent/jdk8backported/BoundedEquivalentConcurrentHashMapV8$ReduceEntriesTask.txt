Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
final class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask<K, V> extends org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$BulkTask<K, V, java.util.Map$Entry<K, V>> {
  final java.util.function.BiFunction<java.util.Map$Entry<K, V>, java.util.Map$Entry<K, V>, ? extends java.util.Map$Entry<K, V>> reducer;

  java.util.Map$Entry<K, V> result;

  org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask<K, V> rights;

  org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask<K, V> nextRight;

  org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$BulkTask<K, V, ?>, int, int, int, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>[], org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask<K, V>, java.util.function.BiFunction<java.util.Map$Entry<K, V>, java.util.Map$Entry<K, V>, ? extends java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokespecial #1                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$BulkTask."<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$BulkTask;III[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)V
      11: aload_0
      12: aload         6
      14: putfield      #2                  // Field nextRight:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask;
      17: aload_0
      18: aload         7
      20: putfield      #3                  // Field reducer:Ljava/util/function/BiFunction;
      23: return

  public final java.util.Map$Entry<K, V> getRawResult();
    Code:
       0: aload_0
       1: getfield      #4                  // Field result:Ljava/util/Map$Entry;
       4: areturn

  public final void compute();
    Code:
       0: aload_0
       1: getfield      #3                  // Field reducer:Ljava/util/function/BiFunction;
       4: dup
       5: astore_1
       6: ifnull        226
       9: aload_0
      10: getfield      #5                  // Field baseIndex:I
      13: istore_2
      14: aload_0
      15: getfield      #6                  // Field batch:I
      18: ifle          91
      21: aload_0
      22: getfield      #7                  // Field baseLimit:I
      25: dup
      26: istore_3
      27: iload_2
      28: iadd
      29: iconst_1
      30: iushr
      31: dup
      32: istore        4
      34: iload_2
      35: if_icmple     91
      38: aload_0
      39: iconst_1
      40: invokevirtual #8                  // Method addToPendingCount:(I)V
      43: aload_0
      44: new           #9                  // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask
      47: dup
      48: aload_0
      49: aload_0
      50: dup
      51: getfield      #6                  // Field batch:I
      54: iconst_1
      55: iushr
      56: dup_x1
      57: putfield      #6                  // Field batch:I
      60: aload_0
      61: iload         4
      63: dup_x1
      64: putfield      #7                  // Field baseLimit:I
      67: iload_3
      68: aload_0
      69: getfield      #10                 // Field tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      72: aload_0
      73: getfield      #11                 // Field rights:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask;
      76: aload_1
      77: invokespecial #12                 // Method "<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$BulkTask;III[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask;Ljava/util/function/BiFunction;)V
      80: dup_x1
      81: putfield      #11                 // Field rights:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask;
      84: invokevirtual #13                 // Method fork:()Ljava/util/concurrent/ForkJoinTask;
      87: pop
      88: goto          14
      91: aconst_null
      92: astore_2
      93: aload_0
      94: invokevirtual #14                 // Method advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      97: dup
      98: astore_3
      99: ifnull        125
     102: aload_2
     103: ifnonnull     110
     106: aload_3
     107: goto          121
     110: aload_1
     111: aload_2
     112: aload_3
     113: invokeinterface #15,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     118: checkcast     #16                 // class java/util/Map$Entry
     121: astore_2
     122: goto          93
     125: aload_0
     126: aload_2
     127: putfield      #4                  // Field result:Ljava/util/Map$Entry;
     130: aload_0
     131: invokevirtual #17                 // Method firstComplete:()Ljava/util/concurrent/CountedCompleter;
     134: astore_3
     135: aload_3
     136: ifnull        226
     139: aload_3
     140: checkcast     #9                  // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask
     143: astore        4
     145: aload         4
     147: getfield      #11                 // Field rights:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask;
     150: astore        5
     152: aload         5
     154: ifnull        218
     157: aload         5
     159: getfield      #4                  // Field result:Ljava/util/Map$Entry;
     162: dup
     163: astore        7
     165: ifnull        202
     168: aload         4
     170: aload         4
     172: getfield      #4                  // Field result:Ljava/util/Map$Entry;
     175: dup
     176: astore        6
     178: ifnonnull     186
     181: aload         7
     183: goto          199
     186: aload_1
     187: aload         6
     189: aload         7
     191: invokeinterface #15,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     196: checkcast     #16                 // class java/util/Map$Entry
     199: putfield      #4                  // Field result:Ljava/util/Map$Entry;
     202: aload         4
     204: aload         5
     206: getfield      #2                  // Field nextRight:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask;
     209: dup_x1
     210: putfield      #11                 // Field rights:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$ReduceEntriesTask;
     213: astore        5
     215: goto          152
     218: aload_3
     219: invokevirtual #18                 // Method java/util/concurrent/CountedCompleter.nextComplete:()Ljava/util/concurrent/CountedCompleter;
     222: astore_3
     223: goto          135
     226: return

  public java.lang.Object getRawResult();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getRawResult:()Ljava/util/Map$Entry;
       4: areturn
}
