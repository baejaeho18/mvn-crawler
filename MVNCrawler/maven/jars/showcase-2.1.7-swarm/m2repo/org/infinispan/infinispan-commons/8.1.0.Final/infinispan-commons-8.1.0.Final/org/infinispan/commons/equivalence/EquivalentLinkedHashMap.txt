Compiled from "EquivalentLinkedHashMap.java"
public class org.infinispan.commons.equivalence.EquivalentLinkedHashMap<K, V> extends org.infinispan.commons.equivalence.EquivalentHashMap<K, V> {
  private transient org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode<K, V> header;

  private final org.infinispan.commons.equivalence.EquivalentLinkedHashMap$IterationOrder iterationOrder;

  public org.infinispan.commons.equivalence.EquivalentLinkedHashMap(int, float, org.infinispan.commons.equivalence.EquivalentLinkedHashMap$IterationOrder, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: aload         4
       5: aload         5
       7: invokespecial #3                  // Method org/infinispan/commons/equivalence/EquivalentHashMap."<init>":(IFLorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      10: aload_0
      11: aload_3
      12: putfield      #2                  // Field iterationOrder:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$IterationOrder;
      15: aload_0
      16: invokespecial #4                  // Method addFirstEntry:()V
      19: return

  private void addFirstEntry();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #5                  // Method createLinkedNode:()Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
       5: putfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
       8: aload_0
       9: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      12: aload_0
      13: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      16: putfield      #6                  // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      19: aload_0
      20: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      23: aload_0
      24: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      27: putfield      #7                  // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      30: return

  void addEntry(int, K, V, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokespecial #8                  // Method org/infinispan/commons/equivalence/EquivalentHashMap.addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
       9: aload_0
      10: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      13: getfield      #7                  // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      16: astore        5
      18: aload_0
      19: aload         5
      21: invokevirtual #9                  // Method removeEldestEntry:(Ljava/util/Map$Entry;)Z
      24: ifeq          37
      27: aload_0
      28: aload         5
      30: invokevirtual #10                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.getKey:()Ljava/lang/Object;
      33: invokevirtual #11                 // Method remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: return

  protected boolean removeEldestEntry(java.util.Map$Entry<K, V>);
    Code:
       0: iconst_0
       1: ireturn

  private <K, V> org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode<K, V> createLinkedNode();
    Code:
       0: new           #12                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode
       3: dup
       4: aconst_null
       5: iconst_m1
       6: aconst_null
       7: aconst_null
       8: aconst_null
       9: invokespecial #13                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode."<init>":(Ljava/lang/Object;ILjava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$1;)V
      12: areturn

  org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V> createNode(K, V, int, org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V>);
    Code:
       0: new           #12                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode
       3: dup
       4: aload_1
       5: iload_3
       6: aload_2
       7: aload         4
       9: aconst_null
      10: invokespecial #13                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode."<init>":(Ljava/lang/Object;ILjava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$1;)V
      13: astore        5
      15: aload         5
      17: aload_0
      18: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      21: invokestatic  #14                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.access$100:(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;)V
      24: aload         5
      26: areturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getNode:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #12                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode
       8: astore_2
       9: aload_2
      10: ifnonnull     17
      13: aconst_null
      14: goto          22
      17: aload_2
      18: aload_0
      19: invokevirtual #16                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.recordAccess:(Lorg/infinispan/commons/equivalence/EquivalentHashMap;)Ljava/lang/Object;
      22: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method removeNode:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #12                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode
       8: astore_2
       9: aload_2
      10: ifnonnull     17
      13: aconst_null
      14: goto          21
      17: aload_2
      18: invokestatic  #18                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.access$200:(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;)Ljava/lang/Object;
      21: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.clear:()V
       4: aload_0
       5: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
       8: aload_0
       9: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      12: putfield      #6                  // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.before:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      15: aload_0
      16: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      19: aload_0
      20: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      23: putfield      #7                  // Field org/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode.after:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
      26: return

  java.util.Iterator<K> newKeyIterator();
    Code:
       0: new           #20                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap$KeyIterator
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #21                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$KeyIterator."<init>":(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap;Lorg/infinispan/commons/equivalence/EquivalentHashMap;)V
       9: areturn

  java.util.Iterator<V> newValueIterator();
    Code:
       0: new           #22                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap$ValueIterator
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #23                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$ValueIterator."<init>":(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap;Lorg/infinispan/commons/equivalence/EquivalentHashMap;)V
       9: areturn

  java.util.Iterator<java.util.Map$Entry<K, V>> newEntryIterator();
    Code:
       0: new           #24                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap$EntryIterator
       3: dup
       4: aload_0
       5: aload_0
       6: invokespecial #25                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$EntryIterator."<init>":(Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap;Lorg/infinispan/commons/equivalence/EquivalentHashMap;)V
       9: areturn

  static org.infinispan.commons.equivalence.EquivalentLinkedHashMap$IterationOrder access$300(org.infinispan.commons.equivalence.EquivalentLinkedHashMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field iterationOrder:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$IterationOrder;
       4: areturn

  static org.infinispan.commons.equivalence.EquivalentLinkedHashMap$LinkedNode access$400(org.infinispan.commons.equivalence.EquivalentLinkedHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field header:Lorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$LinkedNode;
       4: areturn
}
