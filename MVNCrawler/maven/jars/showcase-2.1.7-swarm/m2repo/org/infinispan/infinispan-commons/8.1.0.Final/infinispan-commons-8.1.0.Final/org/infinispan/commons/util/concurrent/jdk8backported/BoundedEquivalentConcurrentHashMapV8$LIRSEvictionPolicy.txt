Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
final class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSEvictionPolicy<K, V> implements org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionPolicy<K, V> {
  private static final float L_LIRS;

  final org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V> map;

  final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>> stack;

  final org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>> queue;

  private volatile long maximumHotSize;

  private volatile long maximumSize;

  private final java.util.concurrent.atomic.AtomicLong hotSize;

  private final java.util.concurrent.atomic.AtomicLong hotDemotion;

  private final java.util.concurrent.atomic.AtomicReference<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting> currentSize;

  final java.lang.ThreadLocal<java.util.Collection<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>>> nodesToEvictTL;

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSEvictionPolicy(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V>, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque
       8: dup
       9: invokespecial #4                  // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque."<init>":()V
      12: putfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      15: aload_0
      16: new           #3                  // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque
      19: dup
      20: invokespecial #4                  // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque."<init>":()V
      23: putfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      34: putfield      #9                  // Field hotSize:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      41: dup
      42: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      45: putfield      #10                 // Field hotDemotion:Ljava/util/concurrent/atomic/AtomicLong;
      48: aload_0
      49: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      52: dup
      53: new           #12                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
      56: dup
      57: lconst_0
      58: lconst_0
      59: invokespecial #13                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting."<init>":(JJ)V
      62: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      65: putfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      68: aload_0
      69: new           #16                 // class java/lang/ThreadLocal
      72: dup
      73: invokespecial #17                 // Method java/lang/ThreadLocal."<init>":()V
      76: putfield      #18                 // Field nodesToEvictTL:Ljava/lang/ThreadLocal;
      79: aload_0
      80: aload_1
      81: putfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      84: aload_0
      85: lload_2
      86: putfield      #20                 // Field maximumSize:J
      89: aload_0
      90: lload_2
      91: invokestatic  #21                 // Method calculateLIRSize:(J)J
      94: putfield      #22                 // Field maximumHotSize:J
      97: return

  private static long calculateLIRSize(long);
    Code:
       0: ldc           #24                 // float 0.95f
       2: lload_0
       3: l2f
       4: fmul
       5: f2l
       6: lstore_2
       7: lload_2
       8: lload_0
       9: lcmp
      10: ifne          19
      13: lload_0
      14: lconst_1
      15: lsub
      16: goto          20
      19: lload_2
      20: lreturn

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V> createNewEntry(K, int, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionEntry<K, V>);
    Code:
       0: new           #25                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node
       3: dup
       4: iload_2
       5: aload_0
       6: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       9: getfield      #26                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.nodeEq:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;
      12: aload_1
      13: aload         4
      15: aload_3
      16: invokespecial #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)V
      19: astore        6
      21: aload         5
      23: ifnonnull     42
      26: aload         6
      28: new           #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      31: dup
      32: aload_1
      33: invokespecial #29                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode."<init>":(Ljava/lang/Object;)V
      36: invokevirtual #30                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.lazySetEviction:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      39: goto          49
      42: aload         6
      44: aload         5
      46: invokevirtual #30                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.lazySetEviction:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      49: aload         6
      51: areturn

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$TreeNode<K, V> createNewEntry(K, int, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$TreeNode<K, V>, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$TreeNode<K, V>, V, org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionEntry<K, V>);
    Code:
       0: aload         6
       2: ifnonnull     45
       5: new           #31                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode
       8: dup
       9: iload_2
      10: aload_0
      11: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      14: getfield      #26                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.nodeEq:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;
      17: aload_1
      18: aload         5
      20: aload_3
      21: aload         4
      23: aconst_null
      24: invokespecial #32                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      27: astore        7
      29: aload         7
      31: new           #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      34: dup
      35: aload_1
      36: invokespecial #29                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode."<init>":(Ljava/lang/Object;)V
      39: invokevirtual #33                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode.lazySetEviction:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      42: goto          70
      45: new           #31                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode
      48: dup
      49: iload_2
      50: aload_0
      51: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      54: getfield      #26                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.nodeEq:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;
      57: aload_1
      58: aload         5
      60: aload_3
      61: aload         4
      63: aload         6
      65: invokespecial #32                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$TreeNode;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;)V
      68: astore        7
      70: aload         7
      72: areturn

  boolean addToLIRIfNotFullHot(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field hotSize:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: dup2
       8: lstore_3
       9: aload_0
      10: getfield      #22                 // Field maximumHotSize:J
      13: lcmp
      14: ifge          79
      17: aload_0
      18: getfield      #9                  // Field hotSize:Ljava/util/concurrent/atomic/AtomicLong;
      21: lload_3
      22: lload_3
      23: lconst_1
      24: ladd
      25: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      28: ifeq          0
      31: iload_2
      32: ifeq          45
      35: aload_0
      36: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      39: lconst_1
      40: lconst_0
      41: invokestatic  #36                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
      44: pop
      45: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      48: dup
      49: aload_1
      50: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
      53: astore        5
      55: aload_1
      56: aload         5
      58: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      61: aload_1
      62: getstatic     #40                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.LIR_RESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      65: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
      68: aload_0
      69: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      72: aload         5
      74: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      77: iconst_1
      78: ireturn
      79: iconst_0
      80: ireturn

  public void onEntryMiss(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V);
    Code:
       0: lconst_0
       1: lstore_3
       2: iconst_0
       3: istore        5
       5: aload_1
       6: getfield      #43                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
       9: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      12: astore        7
      14: aload         7
      16: dup
      17: astore        8
      19: monitorenter
      20: aload         7
      22: getfield      #44                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.created:Z
      25: istore        6
      27: aload         7
      29: iconst_1
      30: putfield      #44                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.created:Z
      33: aload         7
      35: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      38: astore        9
      40: aload         9
      42: ifnonnull     162
      45: iload         6
      47: ifeq          60
      50: new           #46                 // class java/lang/IllegalStateException
      53: dup
      54: ldc           #47                 // String Created should always be false for anewly created evictio node!
      56: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: aload         7
      63: iconst_1
      64: invokevirtual #49                 // Method addToLIRIfNotFullHot:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode;Z)Z
      67: ifeq          74
      70: aload         8
      72: monitorexit
      73: return
      74: aload_0
      75: getfield      #9                  // Field hotSize:Ljava/util/concurrent/atomic/AtomicLong;
      78: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      81: aload_0
      82: getfield      #22                 // Field maximumHotSize:J
      85: lsub
      86: dup2
      87: lstore        10
      89: lconst_0
      90: lcmp
      91: ifle          97
      94: lload         10
      96: lstore_3
      97: aload         7
      99: getstatic     #50                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_RESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     102: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
     105: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     108: dup
     109: aload         7
     111: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     114: astore        12
     116: aload         7
     118: aload         12
     120: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     123: aload_0
     124: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     127: aload         12
     129: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     132: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     135: dup
     136: aload         7
     138: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     141: astore        13
     143: aload         7
     145: aload         13
     147: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     150: aload_0
     151: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     154: aload         13
     156: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     159: goto          350
     162: iload         6
     164: ifeq          350
     167: getstatic     #52                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$2.$SwitchMap$org$infinispan$commons$util$concurrent$jdk8backported$BoundedEquivalentConcurrentHashMapV8$Recency:[I
     170: aload         9
     172: invokevirtual #53                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.ordinal:()I
     175: iaload
     176: tableswitch   { // 1 to 6
                     1: 216
                     2: 249
                     3: 322
                     4: 322
                     5: 350
                     6: 350
               default: 350
          }
     216: aload_1
     217: aload_2
     218: putfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     221: aload_0
     222: aload         7
     224: iconst_1
     225: invokevirtual #49                 // Method addToLIRIfNotFullHot:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode;Z)Z
     228: ifeq          235
     231: aload         8
     233: monitorexit
     234: return
     235: aload_0
     236: aload         7
     238: invokevirtual #55                 // Method promoteHIRToLIR:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode;)V
     241: lconst_1
     242: lstore_3
     243: iconst_0
     244: istore        6
     246: goto          350
     249: aload_1
     250: aload_2
     251: putfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     254: iconst_1
     255: istore        5
     257: aload         7
     259: getstatic     #50                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_RESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     262: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
     265: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     268: dup
     269: aload         7
     271: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     274: astore        10
     276: aload         7
     278: aload         10
     280: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     283: aload_0
     284: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     287: aload         10
     289: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     292: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     295: dup
     296: aload         7
     298: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     301: astore        11
     303: aload         7
     305: aload         11
     307: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     310: aload_0
     311: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     314: aload         11
     316: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     319: goto          350
     322: new           #46                 // class java/lang/IllegalStateException
     325: dup
     326: new           #56                 // class java/lang/StringBuilder
     329: dup
     330: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     333: ldc           #58                 // String Cannot have a miss on a key and then get a node in
     335: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     338: aload         9
     340: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     343: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     346: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     349: athrow
     350: aload         8
     352: monitorexit
     353: goto          364
     356: astore        14
     358: aload         8
     360: monitorexit
     361: aload         14
     363: athrow
     364: lload_3
     365: lconst_0
     366: lcmp
     367: ifle          379
     370: aload_0
     371: getfield      #10                 // Field hotDemotion:Ljava/util/concurrent/atomic/AtomicLong;
     374: lload_3
     375: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     378: pop2
     379: iload         6
     381: ifeq          389
     384: iload         5
     386: ifeq          399
     389: aload_0
     390: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     393: lconst_1
     394: lconst_0
     395: invokestatic  #36                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
     398: pop
     399: return
    Exception table:
       from    to  target type
          20    73   356   any
          74   234   356   any
         235   353   356   any
         356   361   356   any

  void demoteLowestLIR();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: ifne          123
       6: aload_0
       7: invokevirtual #63                 // Method pruneIncludingLIR:()[Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     16
      15: return
      16: aload_2
      17: iconst_0
      18: aaload
      19: checkcast     #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      22: astore_3
      23: aload_2
      24: iconst_1
      25: aaload
      26: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      29: astore        4
      31: aload         4
      33: dup
      34: astore        5
      36: monitorenter
      37: aload_3
      38: aload         4
      40: getfield      #64                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      43: if_acmpeq     52
      46: aload         5
      48: monitorexit
      49: goto          2
      52: aload         4
      54: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      57: getstatic     #65                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.REMOVED:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      60: if_acmpeq     106
      63: aload         4
      65: getstatic     #50                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_RESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      68: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
      71: aload         4
      73: aconst_null
      74: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      77: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      80: dup
      81: aload         4
      83: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
      86: astore        6
      88: aload         4
      90: aload         6
      92: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      95: aload_0
      96: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      99: aload         6
     101: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     104: iconst_1
     105: istore_1
     106: aload         5
     108: monitorexit
     109: goto          120
     112: astore        7
     114: aload         5
     116: monitorexit
     117: aload         7
     119: athrow
     120: goto          2
     123: return
    Exception table:
       from    to  target type
          37    49   112   any
          52   109   112   any
         112   117   112   any

  java.lang.Object[] pruneIncludingLIR();
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_2
       3: anewarray     #66                 // class java/lang/Object
       6: astore_2
       7: aload_0
       8: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      11: aload_2
      12: invokevirtual #67                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.pollFirstNode:([Ljava/lang/Object;)Z
      15: ifne          48
      18: aload_0
      19: getfield      #9                  // Field hotSize:Ljava/util/concurrent/atomic/AtomicLong;
      22: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      25: dup2
      26: lstore_3
      27: lconst_0
      28: lcmp
      29: ifge          7
      32: aload_0
      33: getfield      #9                  // Field hotSize:Ljava/util/concurrent/atomic/AtomicLong;
      36: lload_3
      37: lload_3
      38: lconst_1
      39: ladd
      40: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      43: ifeq          18
      46: aconst_null
      47: areturn
      48: aload_2
      49: iconst_0
      50: aaload
      51: checkcast     #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      54: astore_3
      55: aload_2
      56: iconst_1
      57: aaload
      58: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      61: astore_1
      62: aload_1
      63: dup
      64: astore        4
      66: monitorenter
      67: aload_3
      68: aload_1
      69: getfield      #64                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      72: if_acmpeq     81
      75: aload         4
      77: monitorexit
      78: goto          7
      81: getstatic     #52                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$2.$SwitchMap$org$infinispan$commons$util$concurrent$jdk8backported$BoundedEquivalentConcurrentHashMapV8$Recency:[I
      84: aload_1
      85: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      88: invokevirtual #53                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.ordinal:()I
      91: iaload
      92: tableswitch   { // 1 to 6
                     1: 137
                     2: 196
                     3: 196
                     4: 196
                     5: 188
                     6: 132
               default: 196
          }
     132: aload_2
     133: aload         4
     135: monitorexit
     136: areturn
     137: aload_1
     138: getstatic     #68                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.EVICTING:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     141: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
     144: aload_0
     145: getfield      #18                 // Field nodesToEvictTL:Ljava/lang/ThreadLocal;
     148: invokevirtual #69                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
     151: checkcast     #70                 // class java/util/Collection
     154: astore        5
     156: aload         5
     158: ifnonnull     179
     161: new           #71                 // class java/util/ArrayList
     164: dup
     165: invokespecial #72                 // Method java/util/ArrayList."<init>":()V
     168: astore        5
     170: aload_0
     171: getfield      #18                 // Field nodesToEvictTL:Ljava/lang/ThreadLocal;
     174: aload         5
     176: invokevirtual #73                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     179: aload         5
     181: aload_1
     182: invokeinterface #74,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     187: pop
     188: aload_1
     189: aconst_null
     190: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     193: goto          196
     196: aload         4
     198: monitorexit
     199: goto          210
     202: astore        6
     204: aload         4
     206: monitorexit
     207: aload         6
     209: athrow
     210: goto          7
    Exception table:
       from    to  target type
          67    78   202   any
          81   136   202   any
         137   199   202   any
         202   207   202   any

  void promoteHIRToLIR(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>);
    Code:
       0: aload_1
       1: getfield      #64                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       4: astore_2
       5: aload_2
       6: ifnull        43
       9: aload_2
      10: getfield      #75                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      13: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      16: astore_3
      17: aload_3
      18: ifnull        38
      21: aload_2
      22: aload_3
      23: aconst_null
      24: invokevirtual #76                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
      27: ifeq          38
      30: aload_0
      31: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      34: aload_2
      35: invokevirtual #77                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      38: aload_1
      39: aconst_null
      40: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      43: aload_1
      44: getfield      #78                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      47: astore_3
      48: aload_3
      49: ifnull        89
      52: aload_3
      53: getfield      #75                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
      56: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      59: astore        4
      61: aload         4
      63: ifnull        84
      66: aload_3
      67: aload         4
      69: aconst_null
      70: invokevirtual #76                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
      73: ifeq          84
      76: aload_0
      77: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
      80: aload_3
      81: invokevirtual #77                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      84: aload_1
      85: aconst_null
      86: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
      89: aload_1
      90: getstatic     #40                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.LIR_RESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      93: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
      96: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
      99: dup
     100: aload_1
     101: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     104: astore_2
     105: aload_1
     106: aload_2
     107: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     110: aload_0
     111: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     114: aload_2
     115: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     118: return

  public void onEntryHitRead(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: getfield      #43                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
       6: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
       9: astore        4
      11: aload         4
      13: dup
      14: astore        5
      16: monitorenter
      17: aload         4
      19: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      22: astore        6
      24: aload         6
      26: getstatic     #79                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_NONRESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      29: if_acmpeq     40
      32: aload         6
      34: getstatic     #68                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.EVICTING:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      37: if_acmpne     45
      40: iconst_1
      41: istore_3
      42: goto          51
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokevirtual #80                 // Method onEntryHitWrite:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Ljava/lang/Object;)V
      51: aload         5
      53: monitorexit
      54: goto          65
      57: astore        7
      59: aload         5
      61: monitorexit
      62: aload         7
      64: athrow
      65: iload_3
      66: ifeq          227
      69: aload_0
      70: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      73: getfield      #81                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      76: aload         4
      78: invokevirtual #82                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.getKey:()Ljava/lang/Object;
      81: invokeinterface #83,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      86: invokestatic  #84                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.spread:(I)I
      89: istore        5
      91: aload_0
      92: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      95: getfield      #85                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      98: astore        6
     100: aload         6
     102: ifnull        227
     105: aload         6
     107: arraylength
     108: dup
     109: istore        8
     111: ifeq          227
     114: aload         6
     116: iload         8
     118: iconst_1
     119: isub
     120: iload         5
     122: iand
     123: dup
     124: istore        9
     126: invokestatic  #86                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.tabAt:([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;I)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     129: dup
     130: astore        7
     132: ifnonnull     138
     135: goto          227
     138: aload         7
     140: getfield      #87                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.hash:I
     143: iconst_m1
     144: if_icmpne     163
     147: aload_0
     148: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     151: aload         6
     153: aload         7
     155: invokevirtual #88                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.helpTransfer:([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     158: astore        6
     160: goto          224
     163: aload         7
     165: dup
     166: astore        10
     168: monitorenter
     169: aload         6
     171: iload         9
     173: invokestatic  #86                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.tabAt:([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;I)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     176: aload         7
     178: if_acmpne     207
     181: aload         4
     183: dup
     184: astore        11
     186: monitorenter
     187: aload_0
     188: aload_1
     189: aload_2
     190: invokevirtual #80                 // Method onEntryHitWrite:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Ljava/lang/Object;)V
     193: aload         11
     195: monitorexit
     196: goto          207
     199: astore        12
     201: aload         11
     203: monitorexit
     204: aload         12
     206: athrow
     207: aload         10
     209: monitorexit
     210: goto          221
     213: astore        13
     215: aload         10
     217: monitorexit
     218: aload         13
     220: athrow
     221: goto          227
     224: goto          100
     227: return
    Exception table:
       from    to  target type
          17    54    57   any
          57    62    57   any
         187   196   199   any
         199   204   199   any
         169   210   213   any
         213   218   213   any

  public void onEntryHitWrite(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>, V);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: aload_1
       6: getfield      #43                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
       9: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
      12: astore        5
      14: aload         5
      16: dup
      17: astore        6
      19: monitorenter
      20: aload         5
      22: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      25: astore        7
      27: aload         7
      29: ifnonnull     60
      32: aload_0
      33: aload         5
      35: iconst_0
      36: invokevirtual #49                 // Method addToLIRIfNotFullHot:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode;Z)Z
      39: ifeq          46
      42: aload         6
      44: monitorexit
      45: return
      46: getstatic     #40                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.LIR_RESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      49: astore        7
      51: aload         5
      53: aload         7
      55: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
      58: iconst_1
      59: istore_3
      60: getstatic     #52                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$2.$SwitchMap$org$infinispan$commons$util$concurrent$jdk8backported$BoundedEquivalentConcurrentHashMapV8$Recency:[I
      63: aload         7
      65: invokevirtual #53                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.ordinal:()I
      68: iaload
      69: tableswitch   { // 1 to 6
                     1: 185
                     2: 240
                     3: 403
                     4: 237
                     5: 275
                     6: 108
               default: 403
          }
     108: aload         5
     110: getfield      #64                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     113: astore        8
     115: aload         8
     117: ifnull        155
     120: aload         8
     122: getfield      #75                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
     125: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
     128: astore        9
     130: aload         9
     132: ifnull        155
     135: aload         8
     137: aload         9
     139: aconst_null
     140: invokevirtual #76                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
     143: ifeq          155
     146: aload_0
     147: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     150: aload         8
     152: invokevirtual #77                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     155: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     158: dup
     159: aload         5
     161: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     164: astore        9
     166: aload         5
     168: aload         9
     170: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     173: aload_0
     174: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     177: aload         9
     179: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     182: goto          403
     185: aload_1
     186: getfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     189: getstatic     #89                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
     192: if_acmpne     209
     195: aload_1
     196: aload_2
     197: putfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     200: aload_0
     201: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     204: lconst_1
     205: iconst_m1
     206: invokestatic  #90                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.access$200:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;JI)V
     209: aload_0
     210: aload         5
     212: iconst_1
     213: invokevirtual #49                 // Method addToLIRIfNotFullHot:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode;Z)Z
     216: ifeq          223
     219: aload         6
     221: monitorexit
     222: return
     223: aload_0
     224: aload         5
     226: invokevirtual #55                 // Method promoteHIRToLIR:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode;)V
     229: iconst_1
     230: istore        4
     232: iconst_1
     233: istore_3
     234: goto          403
     237: goto          403
     240: iconst_1
     241: istore        4
     243: aload         5
     245: getstatic     #50                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_RESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     248: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
     251: aload_1
     252: getfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     255: getstatic     #89                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
     258: if_acmpne     275
     261: aload_1
     262: aload_2
     263: putfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     266: aload_0
     267: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     270: lconst_1
     271: iconst_m1
     272: invokestatic  #90                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.access$200:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;JI)V
     275: aload         5
     277: getfield      #64                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     280: ifnull        294
     283: aload_0
     284: aload         5
     286: invokevirtual #55                 // Method promoteHIRToLIR:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode;)V
     289: iconst_1
     290: istore_3
     291: goto          403
     294: aload         5
     296: getfield      #78                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     299: ifnull        346
     302: aload         5
     304: getfield      #78                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     307: getfield      #75                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
     310: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
     313: astore        10
     315: aload         10
     317: ifnull        346
     320: aload         5
     322: getfield      #78                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     325: aload         10
     327: aconst_null
     328: invokevirtual #76                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
     331: ifeq          346
     334: aload_0
     335: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     338: aload         5
     340: getfield      #78                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     343: invokevirtual #77                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     346: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     349: dup
     350: aload         5
     352: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     355: astore        9
     357: aload         5
     359: aload         9
     361: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     364: aload_0
     365: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     368: aload         9
     370: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     373: new           #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     376: dup
     377: aload         5
     379: invokespecial #38                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode."<init>":(Ljava/lang/Object;)V
     382: astore        10
     384: aload         5
     386: aload         10
     388: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     391: aload_0
     392: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     395: aload         10
     397: invokevirtual #42                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.linkLast:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     400: goto          403
     403: aload         6
     405: monitorexit
     406: goto          417
     409: astore        11
     411: aload         6
     413: monitorexit
     414: aload         11
     416: athrow
     417: iload_3
     418: ifeq          429
     421: aload_0
     422: getfield      #10                 // Field hotDemotion:Ljava/util/concurrent/atomic/AtomicLong;
     425: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     428: pop2
     429: iload         4
     431: ifeq          444
     434: aload_0
     435: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     438: lconst_1
     439: lconst_0
     440: invokestatic  #36                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
     443: pop
     444: return
    Exception table:
       from    to  target type
          20    45   409   any
          46   222   409   any
         223   406   409   any
         409   414   409   any

  public void onEntryRemove(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>);
    Code:
       0: aload_1
       1: getfield      #43                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.eviction:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionEntry;
       4: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
       7: astore_2
       8: aload_2
       9: dup
      10: astore_3
      11: monitorenter
      12: getstatic     #52                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$2.$SwitchMap$org$infinispan$commons$util$concurrent$jdk8backported$BoundedEquivalentConcurrentHashMapV8$Recency:[I
      15: aload_2
      16: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      19: invokevirtual #53                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.ordinal:()I
      22: iaload
      23: tableswitch   { // 1 to 6
                     1: 80
                     2: 80
                     3: 90
                     4: 90
                     5: 68
                     6: 60
               default: 90
          }
      60: aload_0
      61: getfield      #9                  // Field hotSize:Ljava/util/concurrent/atomic/AtomicLong;
      64: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      67: pop2
      68: aload_0
      69: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      72: ldc2_w        #93                 // long -1l
      75: lconst_0
      76: invokestatic  #36                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
      79: pop
      80: aload_2
      81: getstatic     #65                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.REMOVED:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      84: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
      87: goto          90
      90: aload_2
      91: getfield      #78                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      94: astore        4
      96: aload         4
      98: ifnull        141
     101: aload         4
     103: getfield      #75                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
     106: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
     109: astore        5
     111: aload         5
     113: ifnull        136
     116: aload         4
     118: aload         5
     120: aconst_null
     121: invokevirtual #76                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
     124: ifeq          136
     127: aload_0
     128: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     131: aload         4
     133: invokevirtual #77                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     136: aload_2
     137: aconst_null
     138: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     141: aload_2
     142: aconst_null
     143: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     146: aload_2
     147: getfield      #64                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     150: astore        5
     152: aload         5
     154: ifnull        197
     157: aload         5
     159: getfield      #75                 // Field org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.item:Ljava/lang/Object;
     162: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
     165: astore        6
     167: aload         6
     169: ifnull        192
     172: aload         5
     174: aload         6
     176: aconst_null
     177: invokevirtual #76                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z
     180: ifeq          192
     183: aload_0
     184: getfield      #5                  // Field stack:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     187: aload         5
     189: invokevirtual #77                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.unlink:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     192: aload_2
     193: aconst_null
     194: invokevirtual #39                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setStackNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     197: aload_3
     198: monitorexit
     199: goto          209
     202: astore        7
     204: aload_3
     205: monitorexit
     206: aload         7
     208: athrow
     209: return
    Exception table:
       from    to  target type
          12   199   202   any
         202   206   202   any

  public java.util.Collection<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>> findIfEntriesNeedEvicting();
    Code:
       0: aload_0
       1: getfield      #10                 // Field hotDemotion:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: dup2
       8: lstore_1
       9: lconst_0
      10: lcmp
      11: ifle          29
      14: aload_0
      15: getfield      #10                 // Field hotDemotion:Ljava/util/concurrent/atomic/AtomicLong;
      18: lload_1
      19: lconst_0
      20: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      23: ifeq          0
      26: goto          29
      29: lconst_0
      30: lstore_3
      31: lload_3
      32: lload_1
      33: lcmp
      34: ifge          48
      37: aload_0
      38: invokevirtual #95                 // Method demoteLowestLIR:()V
      41: lload_3
      42: lconst_1
      43: ladd
      44: lstore_3
      45: goto          31
      48: aload_0
      49: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
      52: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      55: checkcast     #12                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
      58: astore        4
      60: aload         4
      62: invokestatic  #97                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$000:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
      65: lstore        5
      67: aload         4
      69: invokestatic  #98                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$100:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
      72: lstore        7
      74: lload         5
      76: lload         7
      78: lsub
      79: aload_0
      80: getfield      #20                 // Field maximumSize:J
      83: lsub
      84: lstore        9
      86: lload         9
      88: lconst_0
      89: lcmp
      90: ifle          129
      93: lload         9
      95: l2i
      96: ldc           #99                 // int 2147483647
      98: iand
      99: istore_3
     100: aload_0
     101: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     104: aload         4
     106: new           #12                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
     109: dup
     110: lload         5
     112: lload         7
     114: iload_3
     115: i2l
     116: ladd
     117: invokespecial #13                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting."<init>":(JJ)V
     120: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     123: ifeq          134
     126: goto          137
     129: iconst_0
     130: istore_3
     131: goto          137
     134: goto          48
     137: aload_0
     138: getfield      #18                 // Field nodesToEvictTL:Ljava/lang/ThreadLocal;
     141: invokevirtual #69                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
     144: checkcast     #70                 // class java/util/Collection
     147: astore        4
     149: aload         4
     151: ifnonnull     162
     154: invokestatic  #101                // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
     157: astore        4
     159: goto          169
     162: aload_0
     163: getfield      #18                 // Field nodesToEvictTL:Ljava/lang/ThreadLocal;
     166: invokevirtual #102                // Method java/lang/ThreadLocal.remove:()V
     169: iload_3
     170: ifne          183
     173: aload         4
     175: invokeinterface #103,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
     180: ifne          949
     183: iload_3
     184: aload         4
     186: invokeinterface #104,  1          // InterfaceMethod java/util/Collection.size:()I
     191: iadd
     192: anewarray     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
     195: astore        5
     197: aload         4
     199: invokeinterface #105,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     204: astore        6
     206: iconst_0
     207: istore        7
     209: aload         6
     211: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     216: ifeq          242
     219: aload         5
     221: iload_3
     222: iload         7
     224: iadd
     225: aload         6
     227: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     232: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
     235: aastore
     236: iinc          7, 1
     239: goto          209
     242: iload_3
     243: istore        8
     245: iload_3
     246: istore        9
     248: iconst_2
     249: anewarray     #66                 // class java/lang/Object
     252: astore        10
     254: iconst_0
     255: istore        11
     257: iload         11
     259: iload_3
     260: if_icmpge     547
     263: iconst_0
     264: istore        12
     266: iload         12
     268: ifne          541
     271: aload_0
     272: getfield      #6                  // Field queue:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque;
     275: aload         10
     277: invokevirtual #67                 // Method org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque.pollFirstNode:([Ljava/lang/Object;)Z
     280: ifne          373
     283: aload_0
     284: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     287: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     290: checkcast     #12                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
     293: astore        13
     295: aload         13
     297: invokestatic  #97                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$000:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
     300: aload         13
     302: invokestatic  #98                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$100:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
     305: lsub
     306: aload_0
     307: getfield      #20                 // Field maximumSize:J
     310: lcmp
     311: ifge          358
     314: new           #12                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting
     317: dup
     318: aload         13
     320: invokestatic  #97                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$000:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
     323: aload         13
     325: invokestatic  #98                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting.access$100:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;)J
     328: lconst_1
     329: lsub
     330: invokespecial #13                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting."<init>":(JJ)V
     333: astore        14
     335: aload_0
     336: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     339: aload         13
     341: aload         14
     343: invokevirtual #100                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     346: ifeq          358
     349: iinc          8, -1
     352: iinc          9, -1
     355: goto          541
     358: getstatic     #108                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     361: ldc2_w        #109                // long 10l
     364: invokevirtual #111                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     367: invokestatic  #112                // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
     370: goto          266
     373: aload         10
     375: iconst_0
     376: aaload
     377: checkcast     #37                 // class org/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode
     380: astore        13
     382: aload         10
     384: iconst_1
     385: aaload
     386: checkcast     #28                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode
     389: astore        14
     391: aload         14
     393: dup
     394: astore        15
     396: monitorenter
     397: aload         14
     399: getfield      #78                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     402: aload         13
     404: if_acmpeq     413
     407: aload         15
     409: monitorexit
     410: goto          266
     413: aload         14
     415: aconst_null
     416: invokevirtual #51                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setQueueNode:(Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;)V
     419: getstatic     #52                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$2.$SwitchMap$org$infinispan$commons$util$concurrent$jdk8backported$BoundedEquivalentConcurrentHashMapV8$Recency:[I
     422: aload         14
     424: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     427: invokevirtual #53                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.ordinal:()I
     430: iaload
     431: tableswitch   { // 1 to 6
                     1: 524
                     2: 524
                     3: 515
                     4: 524
                     5: 468
                     6: 524
               default: 524
          }
     468: aload         14
     470: getfield      #64                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
     473: ifnull        494
     476: aload         14
     478: getstatic     #79                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_NONRESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     481: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
     484: aload         5
     486: iload         11
     488: aload         14
     490: aastore
     491: goto          509
     494: aload         14
     496: getstatic     #68                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.EVICTING:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     499: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
     502: aload         5
     504: iload         11
     506: aload         14
     508: aastore
     509: iconst_1
     510: istore        12
     512: goto          524
     515: iinc          8, -1
     518: iconst_1
     519: istore        12
     521: goto          524
     524: aload         15
     526: monitorexit
     527: goto          538
     530: astore        16
     532: aload         15
     534: monitorexit
     535: aload         16
     537: athrow
     538: goto          266
     541: iinc          11, 1
     544: goto          257
     547: aload_0
     548: getfield      #15                 // Field currentSize:Ljava/util/concurrent/atomic/AtomicReference;
     551: iload         8
     553: ineg
     554: i2l
     555: iload         9
     557: ineg
     558: i2l
     559: invokestatic  #36                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.incrementSizeEviction:(Ljava/util/concurrent/atomic/AtomicReference;JJ)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$SizeAndEvicting;
     562: pop
     563: new           #71                 // class java/util/ArrayList
     566: dup
     567: aload         5
     569: arraylength
     570: invokespecial #113                // Method java/util/ArrayList."<init>":(I)V
     573: astore        11
     575: iconst_0
     576: istore        12
     578: iload         12
     580: aload         5
     582: arraylength
     583: if_icmpge     946
     586: aload         5
     588: iload         12
     590: aaload
     591: astore        13
     593: aload         13
     595: ifnonnull     601
     598: goto          940
     601: aload         13
     603: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     606: getstatic     #68                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.EVICTING:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     609: if_acmpeq     623
     612: aload         13
     614: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     617: getstatic     #79                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_NONRESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     620: if_acmpne     940
     623: aload_0
     624: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     627: getfield      #81                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
     630: aload         13
     632: invokevirtual #82                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.getKey:()Ljava/lang/Object;
     635: invokeinterface #83,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
     640: invokestatic  #84                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.spread:(I)I
     643: istore        14
     645: aload_0
     646: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     649: getfield      #85                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     652: astore        15
     654: aload         15
     656: ifnull        940
     659: aload         15
     661: arraylength
     662: dup
     663: istore        17
     665: ifeq          940
     668: aload         15
     670: iload         17
     672: iconst_1
     673: isub
     674: iload         14
     676: iand
     677: dup
     678: istore        18
     680: invokestatic  #86                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.tabAt:([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;I)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     683: dup
     684: astore        16
     686: ifnonnull     692
     689: goto          940
     692: aload         16
     694: getfield      #87                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.hash:I
     697: iconst_m1
     698: if_icmpne     717
     701: aload_0
     702: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     705: aload         15
     707: aload         16
     709: invokevirtual #88                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.helpTransfer:([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     712: astore        15
     714: goto          937
     717: aload         16
     719: dup
     720: astore        19
     722: monitorenter
     723: aload         15
     725: iload         18
     727: invokestatic  #86                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.tabAt:([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;I)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     730: aload         16
     732: if_acmpne     923
     735: aload         13
     737: dup
     738: astore        20
     740: monitorenter
     741: aload         13
     743: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     746: getstatic     #68                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.EVICTING:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     749: if_acmpne     805
     752: aload         13
     754: getstatic     #114                // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.EVICTED:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     757: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.setState:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;)V
     760: aload_0
     761: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     764: aload         13
     766: invokevirtual #82                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.getKey:()Ljava/lang/Object;
     769: aconst_null
     770: aconst_null
     771: iconst_1
     772: invokevirtual #115                // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.replaceNode:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
     775: astore        21
     777: aload         11
     779: new           #25                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node
     782: dup
     783: iconst_m1
     784: aconst_null
     785: aload         13
     787: invokevirtual #82                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.getKey:()Ljava/lang/Object;
     790: aload         21
     792: aconst_null
     793: invokespecial #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)V
     796: invokeinterface #74,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     801: pop
     802: goto          903
     805: aload         13
     807: getfield      #45                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     810: getstatic     #79                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency.HIR_NONRESIDENT:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
     813: if_acmpne     903
     816: aload         16
     818: iload         14
     820: aload         13
     822: invokevirtual #82                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.getKey:()Ljava/lang/Object;
     825: invokevirtual #116                // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.find:(ILjava/lang/Object;)Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
     828: astore        21
     830: aload         21
     832: getfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     835: astore        22
     837: aload         22
     839: getstatic     #89                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
     842: if_acmpeq     903
     845: aload         21
     847: getstatic     #89                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
     850: putfield      #54                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
     853: aload_0
     854: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     857: ldc2_w        #93                 // long -1l
     860: iconst_m1
     861: invokestatic  #90                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.access$200:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;JI)V
     864: new           #25                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node
     867: dup
     868: iconst_m1
     869: aconst_null
     870: aload         13
     872: invokevirtual #82                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$LIRSNode.getKey:()Ljava/lang/Object;
     875: aload         22
     877: aconst_null
     878: invokespecial #27                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node."<init>":(ILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$NodeEquivalence;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;)V
     881: astore        23
     883: aload         11
     885: aload         23
     887: invokeinterface #74,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     892: pop
     893: aload_0
     894: getfield      #19                 // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
     897: aload         23
     899: iconst_1
     900: invokestatic  #117                // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.access$300:(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;Z)V
     903: aload         20
     905: monitorexit
     906: goto          917
     909: astore        24
     911: aload         20
     913: monitorexit
     914: aload         24
     916: athrow
     917: aload         19
     919: monitorexit
     920: goto          940
     923: aload         19
     925: monitorexit
     926: goto          937
     929: astore        25
     931: aload         19
     933: monitorexit
     934: aload         25
     936: athrow
     937: goto          654
     940: iinc          12, 1
     943: goto          578
     946: aload         11
     948: areturn
     949: invokestatic  #118                // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
     952: areturn
    Exception table:
       from    to  target type
         397   410   530   any
         413   527   530   any
         530   535   530   any
         741   906   909   any
         909   914   909   any
         723   920   929   any
         923   926   929   any
         929   934   929   any

  public void onResize(long, long);
    Code:
       0: return

  public void resize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #20                 // Field maximumSize:J
       5: aload_0
       6: aload_0
       7: getfield      #20                 // Field maximumSize:J
      10: invokestatic  #21                 // Method calculateLIRSize:(J)J
      13: putfield      #22                 // Field maximumHotSize:J
      16: return
}
