Compiled from "ByteBufferImpl.java"
public class org.infinispan.commons.io.ByteBufferImpl implements org.infinispan.commons.io.ByteBuffer {
  private final byte[] buf;

  private final int offset;

  private final int length;

  public org.infinispan.commons.io.ByteBufferImpl(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #5                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #6                  // String Null buff not allowed!
      14: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: arraylength
      20: iload_2
      21: iload_3
      22: iadd
      23: if_icmpge     72
      26: new           #5                  // class java/lang/IllegalArgumentException
      29: dup
      30: new           #8                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #10                 // String Incorrect arguments: buff.length
      39: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: arraylength
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: ldc           #13                 // String , offset=
      49: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_2
      53: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #14                 // String , length=
      58: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: iload_3
      62: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: aload_1
      74: putfield      #2                  // Field buf:[B
      77: aload_0
      78: iload_2
      79: putfield      #1                  // Field offset:I
      82: aload_0
      83: iload_3
      84: putfield      #3                  // Field length:I
      87: return

  public byte[] getBuf();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:[B
       4: areturn

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #1                  // Field offset:I
       4: ireturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field length:I
       4: ireturn

  public org.infinispan.commons.io.ByteBufferImpl copy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:[B
       4: ifnull        16
       7: aload_0
       8: getfield      #3                  // Field length:I
      11: newarray       byte
      13: goto          17
      16: aconst_null
      17: astore_1
      18: aload_1
      19: ifnull        27
      22: aload_1
      23: arraylength
      24: goto          28
      27: iconst_0
      28: istore_2
      29: aload_1
      30: ifnull        50
      33: aload_0
      34: getfield      #2                  // Field buf:[B
      37: aload_0
      38: getfield      #1                  // Field offset:I
      41: aload_1
      42: iconst_0
      43: aload_0
      44: getfield      #3                  // Field length:I
      47: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: new           #17                 // class org/infinispan/commons/io/ByteBufferImpl
      53: dup
      54: aload_1
      55: iconst_0
      56: iload_2
      57: invokespecial #18                 // Method "<init>":([BII)V
      60: areturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field length:I
      13: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: ldc           #19                 // String  bytes
      18: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: getfield      #1                  // Field offset:I
      26: ifle          48
      29: aload_1
      30: ldc           #20                 // String  (offset=
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #1                  // Field offset:I
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #21                 // String )
      44: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_1
      49: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/infinispan/commons/io/ByteBufferImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #17                 // class org/infinispan/commons/io/ByteBufferImpl
      20: astore_2
      21: aload_0
      22: getfield      #3                  // Field length:I
      25: aload_2
      26: getfield      #3                  // Field length:I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: iconst_0
      35: istore_3
      36: iload_3
      37: aload_0
      38: getfield      #3                  // Field length:I
      41: if_icmpge     77
      44: aload_0
      45: getfield      #2                  // Field buf:[B
      48: aload_0
      49: getfield      #1                  // Field offset:I
      52: iload_3
      53: iadd
      54: baload
      55: aload_2
      56: getfield      #2                  // Field buf:[B
      59: aload_2
      60: getfield      #1                  // Field offset:I
      63: iload_3
      64: iadd
      65: baload
      66: if_icmpeq     71
      69: iconst_0
      70: ireturn
      71: iinc          3, 1
      74: goto          36
      77: iconst_1
      78: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:[B
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: iconst_1
      10: istore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_0
      15: getfield      #3                  // Field length:I
      18: if_icmpge     44
      21: bipush        31
      23: iload_1
      24: imul
      25: aload_0
      26: getfield      #2                  // Field buf:[B
      29: aload_0
      30: getfield      #1                  // Field offset:I
      33: iload_2
      34: iadd
      35: baload
      36: iadd
      37: istore_1
      38: iinc          2, 1
      41: goto          13
      44: iload_1
      45: ireturn

  public java.io.InputStream getStream();
    Code:
       0: new           #22                 // class java/io/ByteArrayInputStream
       3: dup
       4: aload_0
       5: invokevirtual #23                 // Method getBuf:()[B
       8: aload_0
       9: invokevirtual #24                 // Method getOffset:()I
      12: aload_0
      13: invokevirtual #25                 // Method getLength:()I
      16: invokespecial #26                 // Method java/io/ByteArrayInputStream."<init>":([BII)V
      19: areturn

  public java.nio.ByteBuffer toJDKByteBuffer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:[B
       4: aload_0
       5: getfield      #1                  // Field offset:I
       8: aload_0
       9: getfield      #3                  // Field length:I
      12: invokestatic  #27                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      15: areturn

  public org.infinispan.commons.io.ByteBuffer copy();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method copy:()Lorg/infinispan/commons/io/ByteBufferImpl;
       4: areturn

  static int access$000(org.infinispan.commons.io.ByteBufferImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field length:I
       4: ireturn

  static byte[] access$100(org.infinispan.commons.io.ByteBufferImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:[B
       4: areturn

  static int access$200(org.infinispan.commons.io.ByteBufferImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field offset:I
       4: ireturn
}
