Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LRUNode<K, V> implements org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionEntry<K, V> {
  private final org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V> attachedNode;

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>> queueNode;

  boolean removed;

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LRUNode(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Node<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field attachedNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
       9: return

  public K getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field attachedNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
       4: getfield      #3                  // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
       7: areturn
}
