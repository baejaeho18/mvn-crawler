Compiled from "FastCopyHashMap.java"
public class org.infinispan.commons.util.FastCopyHashMap<K, V> extends org.infinispan.commons.util.AbstractMap<K, V> implements java.util.Map<K, V>, java.lang.Cloneable, java.io.Serializable {
  private static final org.infinispan.commons.logging.Log log;

  private static final boolean trace;

  private static final long serialVersionUID;

  private static final int DEFAULT_CAPACITY;

  private static final int MAXIMUM_CAPACITY;

  private static final float DEFAULT_LOAD_FACTOR;

  private transient org.infinispan.commons.util.FastCopyHashMap$Entry<K, V>[] table;

  private transient int size;

  private transient int threshold;

  private final float loadFactor;

  private transient int modCount;

  public org.infinispan.commons.util.FastCopyHashMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/infinispan/commons/util/AbstractMap."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #7                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #8                  // String Can not have a negative size table!
      14: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_1
      19: ldc           #11                 // int 1073741824
      21: if_icmple     27
      24: ldc           #11                 // int 1073741824
      26: istore_1
      27: fload_2
      28: fconst_0
      29: fcmpl
      30: ifle          39
      33: fload_2
      34: fconst_1
      35: fcmpg
      36: ifle          49
      39: new           #7                  // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #12                 // String Load factor must be greater than 0 and less than or equal to 1
      45: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: fload_2
      51: putfield      #13                 // Field loadFactor:F
      54: aload_0
      55: iload_1
      56: fload_2
      57: invokespecial #14                 // Method init:(IF)V
      60: return

  public org.infinispan.commons.util.FastCopyHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/infinispan/commons/util/AbstractMap."<init>":()V
       4: aload_1
       5: instanceof    #10                 // class org/infinispan/commons/util/FastCopyHashMap
       8: ifeq          60
      11: aload_1
      12: checkcast     #10                 // class org/infinispan/commons/util/FastCopyHashMap
      15: astore_2
      16: aload_0
      17: aload_2
      18: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      21: invokevirtual #15                 // Method "[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;".clone:()Ljava/lang/Object;
      24: checkcast     #16                 // class "[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;"
      27: checkcast     #16                 // class "[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;"
      30: putfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      33: aload_0
      34: aload_2
      35: getfield      #13                 // Field loadFactor:F
      38: putfield      #13                 // Field loadFactor:F
      41: aload_0
      42: aload_2
      43: getfield      #3                  // Field size:I
      46: putfield      #3                  // Field size:I
      49: aload_0
      50: aload_2
      51: getfield      #17                 // Field threshold:I
      54: putfield      #17                 // Field threshold:I
      57: goto          85
      60: aload_0
      61: ldc           #18                 // float 0.67f
      63: putfield      #13                 // Field loadFactor:F
      66: aload_0
      67: aload_1
      68: invokeinterface #19,  1           // InterfaceMethod java/util/Map.size:()I
      73: aload_0
      74: getfield      #13                 // Field loadFactor:F
      77: invokespecial #14                 // Method init:(IF)V
      80: aload_0
      81: aload_1
      82: invokevirtual #20                 // Method putAll:(Ljava/util/Map;)V
      85: return

  private void init(int, float);
    Code:
       0: iconst_1
       1: istore_3
       2: iload_3
       3: iload_1
       4: if_icmpge     14
       7: iload_3
       8: iconst_1
       9: ishl
      10: istore_3
      11: goto          2
      14: aload_0
      15: iload_3
      16: anewarray     #21                 // class org/infinispan/commons/util/FastCopyHashMap$Entry
      19: putfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      22: aload_0
      23: iload_3
      24: i2f
      25: fload_2
      26: fmul
      27: f2i
      28: putfield      #17                 // Field threshold:I
      31: return

  public org.infinispan.commons.util.FastCopyHashMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #18                 // float 0.67f
       4: invokespecial #22                 // Method "<init>":(IF)V
       7: return

  public org.infinispan.commons.util.FastCopyHashMap();
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #23                 // Method "<init>":(I)V
       6: return

  private int nextIndex(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iconst_1
       3: isub
       4: if_icmplt     11
       7: iconst_0
       8: goto          14
      11: iload_1
      12: iconst_1
      13: iadd
      14: istore_1
      15: iload_1
      16: ireturn

  private static int index(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iconst_1
       3: isub
       4: iand
       5: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: invokestatic  #25                 // Method hash:(Ljava/lang/Object;)I
       8: istore_2
       9: aload_0
      10: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      13: arraylength
      14: istore_3
      15: iload_2
      16: iload_3
      17: invokestatic  #1                  // Method index:(II)I
      20: istore        4
      22: aload_0
      23: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      26: iload         4
      28: aaload
      29: astore        5
      31: aload         5
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: aload         5
      40: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      43: iload_2
      44: if_icmpne     65
      47: aload_1
      48: aload         5
      50: getfield      #27                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.key:Ljava/lang/Object;
      53: invokestatic  #28                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      56: ifeq          65
      59: aload         5
      61: getfield      #29                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.value:Ljava/lang/Object;
      64: areturn
      65: aload_0
      66: iload         4
      68: iload_3
      69: invokespecial #2                  // Method nextIndex:(II)I
      72: istore        4
      74: goto          22

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_1
       5: invokestatic  #25                 // Method hash:(Ljava/lang/Object;)I
       8: istore_2
       9: aload_0
      10: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      13: arraylength
      14: istore_3
      15: iload_2
      16: iload_3
      17: invokestatic  #1                  // Method index:(II)I
      20: istore        4
      22: aload_0
      23: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      26: iload         4
      28: aaload
      29: astore        5
      31: aload         5
      33: ifnonnull     38
      36: iconst_0
      37: ireturn
      38: aload         5
      40: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      43: iload_2
      44: if_icmpne     61
      47: aload_1
      48: aload         5
      50: getfield      #27                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.key:Ljava/lang/Object;
      53: invokestatic  #28                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      56: ifeq          61
      59: iconst_1
      60: ireturn
      61: aload_0
      62: iload         4
      64: iload_3
      65: invokespecial #2                  // Method nextIndex:(II)I
      68: istore        4
      70: goto          22

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method entrySet:()Ljava/util/Set;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifne          22
      19: ldc           #33                 // String {}
      21: areturn
      22: new           #34                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      29: astore_2
      30: aload_2
      31: bipush        123
      33: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: pop
      37: aload_1
      38: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #38                 // class java/util/Map$Entry
      46: astore_3
      47: aload_3
      48: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: astore        4
      55: aload_3
      56: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      61: astore        5
      63: aload_2
      64: aload         4
      66: aload_0
      67: if_acmpne     75
      70: ldc           #41                 // String (this Map)
      72: goto          77
      75: aload         4
      77: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: pop
      81: aload_2
      82: bipush        61
      84: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      87: pop
      88: aload_2
      89: aload         5
      91: aload_0
      92: if_acmpne     100
      95: ldc           #41                 // String (this Map)
      97: goto          102
     100: aload         5
     102: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: pop
     106: aload_1
     107: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifne          125
     115: aload_2
     116: bipush        125
     118: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     121: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: areturn
     125: aload_2
     126: ldc           #44                 // String ,
     128: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: goto          37

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     48
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: ifnull        42
      28: aload_1
      29: aload         5
      31: getfield      #29                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.value:Ljava/lang/Object;
      34: invokestatic  #28                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: iinc          4, 1
      45: goto          11
      48: iconst_0
      49: ireturn

  public V put(K, V);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
       8: astore_3
       9: aload_1
      10: invokestatic  #25                 // Method hash:(Ljava/lang/Object;)I
      13: istore        4
      15: aload_3
      16: arraylength
      17: istore        5
      19: iload         4
      21: iload         5
      23: invokestatic  #1                  // Method index:(II)I
      26: istore        6
      28: iload         6
      30: istore        7
      32: aload_3
      33: iload         7
      35: aaload
      36: astore        8
      38: aload         8
      40: ifnonnull     46
      43: goto          126
      46: aload         8
      48: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      51: iload         4
      53: if_icmpne     96
      56: aload_1
      57: aload         8
      59: getfield      #27                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.key:Ljava/lang/Object;
      62: invokestatic  #28                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      65: ifeq          96
      68: aload_3
      69: iload         7
      71: new           #21                 // class org/infinispan/commons/util/FastCopyHashMap$Entry
      74: dup
      75: aload         8
      77: getfield      #27                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.key:Ljava/lang/Object;
      80: aload         8
      82: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      85: aload_2
      86: invokespecial #46                 // Method org/infinispan/commons/util/FastCopyHashMap$Entry."<init>":(Ljava/lang/Object;ILjava/lang/Object;)V
      89: aastore
      90: aload         8
      92: getfield      #29                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.value:Ljava/lang/Object;
      95: areturn
      96: aload_0
      97: iload         7
      99: iload         5
     101: invokespecial #2                  // Method nextIndex:(II)I
     104: istore        7
     106: iload         7
     108: iload         6
     110: if_icmpne     123
     113: new           #47                 // class java/lang/IllegalStateException
     116: dup
     117: ldc           #48                 // String Table is full!
     119: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: goto          32
     126: aload_0
     127: dup
     128: getfield      #5                  // Field modCount:I
     131: iconst_1
     132: iadd
     133: putfield      #5                  // Field modCount:I
     136: aload_3
     137: iload         7
     139: new           #21                 // class org/infinispan/commons/util/FastCopyHashMap$Entry
     142: dup
     143: aload_1
     144: iload         4
     146: aload_2
     147: invokespecial #46                 // Method org/infinispan/commons/util/FastCopyHashMap$Entry."<init>":(Ljava/lang/Object;ILjava/lang/Object;)V
     150: aastore
     151: aload_0
     152: dup
     153: getfield      #3                  // Field size:I
     156: iconst_1
     157: iadd
     158: dup_x1
     159: putfield      #3                  // Field size:I
     162: aload_0
     163: getfield      #17                 // Field threshold:I
     166: if_icmplt     175
     169: aload_0
     170: iload         5
     172: invokespecial #50                 // Method resize:(I)V
     175: aconst_null
     176: areturn

  private void resize(int);
    Code:
       0: iload_1
       1: iconst_1
       2: ishl
       3: istore_2
       4: iload_2
       5: ldc           #11                 // int 1073741824
       7: if_icmpgt     15
      10: iload_2
      11: iload_1
      12: if_icmpgt     16
      15: return
      16: iload_2
      17: anewarray     #21                 // class org/infinispan/commons/util/FastCopyHashMap$Entry
      20: astore_3
      21: aload_0
      22: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      25: astore        4
      27: aload         4
      29: astore        5
      31: aload         5
      33: arraylength
      34: istore        6
      36: iconst_0
      37: istore        7
      39: iload         7
      41: iload         6
      43: if_icmpge     103
      46: aload         5
      48: iload         7
      50: aaload
      51: astore        8
      53: aload         8
      55: ifnonnull     61
      58: goto          97
      61: aload         8
      63: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      66: iload_2
      67: invokestatic  #1                  // Method index:(II)I
      70: istore        9
      72: aload_3
      73: iload         9
      75: aaload
      76: ifnull        91
      79: aload_0
      80: iload         9
      82: iload_2
      83: invokespecial #2                  // Method nextIndex:(II)I
      86: istore        9
      88: goto          72
      91: aload_3
      92: iload         9
      94: aload         8
      96: aastore
      97: iinc          7, 1
     100: goto          39
     103: aload_0
     104: aload_0
     105: getfield      #13                 // Field loadFactor:F
     108: iload_2
     109: i2f
     110: fmul
     111: f2i
     112: putfield      #17                 // Field threshold:I
     115: aload_0
     116: aload_3
     117: putfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
     120: return

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Map.size:()I
       6: istore_2
       7: iload_2
       8: ifne          12
      11: return
      12: iload_2
      13: aload_0
      14: getfield      #17                 // Field threshold:I
      17: if_icmple     52
      20: iload_2
      21: ldc           #11                 // int 1073741824
      23: if_icmple     29
      26: ldc           #11                 // int 1073741824
      28: istore_2
      29: aload_0
      30: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      33: arraylength
      34: istore_3
      35: iload_3
      36: iload_2
      37: if_icmpge     47
      40: iload_3
      41: iconst_1
      42: ishl
      43: istore_3
      44: goto          35
      47: aload_0
      48: iload_3
      49: invokespecial #50                 // Method resize:(I)V
      52: aload_1
      53: invokeinterface #51,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      58: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      63: astore_3
      64: aload_3
      65: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          106
      73: aload_3
      74: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #38                 // class java/util/Map$Entry
      82: astore        4
      84: aload_0
      85: aload         4
      87: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      92: aload         4
      94: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      99: invokevirtual #52                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: goto          64
     106: return

  public V remove(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: aload_1
      13: invokestatic  #25                 // Method hash:(Ljava/lang/Object;)I
      16: istore        4
      18: iload         4
      20: iload_3
      21: invokestatic  #1                  // Method index:(II)I
      24: istore        5
      26: iload         5
      28: istore        6
      30: aload_2
      31: iload         6
      33: aaload
      34: astore        7
      36: aload         7
      38: ifnonnull     43
      41: aconst_null
      42: areturn
      43: aload         7
      45: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      48: iload         4
      50: if_icmpne     102
      53: aload_1
      54: aload         7
      56: getfield      #27                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.key:Ljava/lang/Object;
      59: invokestatic  #28                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      62: ifeq          102
      65: aload_2
      66: iload         6
      68: aconst_null
      69: aastore
      70: aload_0
      71: iload         6
      73: invokespecial #53                 // Method relocate:(I)V
      76: aload_0
      77: dup
      78: getfield      #5                  // Field modCount:I
      81: iconst_1
      82: iadd
      83: putfield      #5                  // Field modCount:I
      86: aload_0
      87: dup
      88: getfield      #3                  // Field size:I
      91: iconst_1
      92: isub
      93: putfield      #3                  // Field size:I
      96: aload         7
      98: getfield      #29                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.value:Ljava/lang/Object;
     101: areturn
     102: aload_0
     103: iload         6
     105: iload_3
     106: invokespecial #2                  // Method nextIndex:(II)I
     109: istore        6
     111: iload         6
     113: iload         5
     115: if_icmpne     120
     118: aconst_null
     119: areturn
     120: goto          30

  private void relocate(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: aload_0
       9: iload_1
      10: iload_3
      11: invokespecial #2                  // Method nextIndex:(II)I
      14: istore        4
      16: aload_2
      17: iload         4
      19: aaload
      20: astore        5
      22: aload         5
      24: ifnonnull     28
      27: return
      28: aload         5
      30: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      33: iload_3
      34: invokestatic  #1                  // Method index:(II)I
      37: istore        6
      39: iload         4
      41: iload         6
      43: if_icmpge     58
      46: iload         6
      48: iload_1
      49: if_icmple     70
      52: iload_1
      53: iload         4
      55: if_icmple     70
      58: iload         6
      60: iload_1
      61: if_icmpgt     83
      64: iload_1
      65: iload         4
      67: if_icmpgt     83
      70: aload_2
      71: iload_1
      72: aload         5
      74: aastore
      75: aload_2
      76: iload         4
      78: aconst_null
      79: aastore
      80: iload         4
      82: istore_1
      83: aload_0
      84: iload         4
      86: iload_3
      87: invokespecial #2                  // Method nextIndex:(II)I
      90: istore        4
      92: goto          16

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #5                  // Field modCount:I
      10: aload_0
      11: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      14: astore_1
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_1
      19: arraylength
      20: if_icmpge     33
      23: aload_1
      24: iload_2
      25: aconst_null
      26: aastore
      27: iinc          2, 1
      30: goto          17
      33: aload_0
      34: iconst_0
      35: putfield      #3                  // Field size:I
      38: return

  public org.infinispan.commons.util.FastCopyHashMap<K, V> clone();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #10                 // class org/infinispan/commons/util/FastCopyHashMap
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      13: invokevirtual #55                 // Method "[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;".clone:()Ljava/lang/Object;
      16: checkcast     #16                 // class "[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;"
      19: putfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      22: aload_1
      23: aconst_null
      24: putfield      #56                 // Field entrySet:Ljava/util/Set;
      27: aload_1
      28: aconst_null
      29: putfield      #57                 // Field values:Ljava/util/Collection;
      32: aload_1
      33: aconst_null
      34: putfield      #58                 // Field keySet:Ljava/util/Set;
      37: aload_1
      38: areturn
      39: astore_1
      40: new           #47                 // class java/lang/IllegalStateException
      43: dup
      44: aload_1
      45: invokespecial #60                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      48: athrow
    Exception table:
       from    to  target type
           0    38    39   Class java/lang/CloneNotSupportedException

  public void printDebugStats();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: iconst_0
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: aload_0
      15: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      18: arraylength
      19: if_icmpge     99
      22: aload_0
      23: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      26: iload         5
      28: aaload
      29: astore        6
      31: aload         6
      33: ifnull        93
      36: iinc          2, 1
      39: aload         6
      41: getfield      #26                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.hash:I
      44: aload_0
      45: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      48: arraylength
      49: invokestatic  #1                  // Method index:(II)I
      52: istore        7
      54: iload         5
      56: iload         7
      58: if_icmpne     67
      61: iinc          1, 1
      64: goto          93
      67: iload         5
      69: iload         7
      71: isub
      72: invokestatic  #61                 // Method java/lang/Math.abs:(I)I
      75: istore        8
      77: iload         8
      79: iload         4
      81: if_icmple     88
      84: iload         8
      86: istore        4
      88: iload_3
      89: iload         8
      91: iadd
      92: istore_3
      93: iinc          5, 1
      96: goto          12
      99: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
     102: new           #34                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #63                 // String  Size:
     111: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #3                  // Field size:I
     118: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     121: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     127: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
     130: new           #34                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #66                 // String  Real Size:
     139: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: iload_2
     143: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     146: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     152: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
     155: new           #34                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #67                 // String  Optimal:
     164: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: iload_1
     168: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     171: ldc           #68                 // String  (
     173: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: iload_1
     177: i2f
     178: ldc           #69                 // float 100.0f
     180: fmul
     181: iload_2
     182: i2f
     183: fdiv
     184: invokevirtual #70                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     187: ldc           #71                 // String %)
     189: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     198: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
     201: new           #34                 // class java/lang/StringBuilder
     204: dup
     205: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     208: ldc           #72                 // String  Average Distnce:
     210: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: iload_3
     214: i2f
     215: iload_2
     216: iload_1
     217: isub
     218: i2f
     219: fdiv
     220: invokevirtual #70                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     223: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     226: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     229: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
     232: new           #34                 // class java/lang/StringBuilder
     235: dup
     236: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     239: ldc           #73                 // String  Max Distance:
     241: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: iload         4
     246: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     249: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokevirtual #65                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     255: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #75                 // Method java/io/ObjectInputStream.readInt:()I
       8: istore_2
       9: aload_0
      10: iload_2
      11: aload_0
      12: getfield      #13                 // Field loadFactor:F
      15: invokespecial #14                 // Method init:(IF)V
      18: iconst_0
      19: istore_3
      20: iload_3
      21: iload_2
      22: if_icmpge     51
      25: aload_1
      26: invokevirtual #76                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      29: astore        4
      31: aload_1
      32: invokevirtual #76                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      35: astore        5
      37: aload_0
      38: aload         4
      40: aload         5
      42: invokespecial #77                 // Method putForCreate:(Ljava/lang/Object;Ljava/lang/Object;)V
      45: iinc          3, 1
      48: goto          20
      51: return

  private void putForCreate(K, V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
       4: astore_3
       5: aload_1
       6: invokestatic  #25                 // Method hash:(Ljava/lang/Object;)I
       9: istore        4
      11: aload_3
      12: arraylength
      13: istore        5
      15: iload         4
      17: iload         5
      19: invokestatic  #1                  // Method index:(II)I
      22: istore        6
      24: aload_3
      25: iload         6
      27: aaload
      28: astore        7
      30: aload         7
      32: ifnull        54
      35: aload_0
      36: iload         6
      38: iload         5
      40: invokespecial #2                  // Method nextIndex:(II)I
      43: istore        6
      45: aload_3
      46: iload         6
      48: aaload
      49: astore        7
      51: goto          30
      54: aload_3
      55: iload         6
      57: new           #21                 // class org/infinispan/commons/util/FastCopyHashMap$Entry
      60: dup
      61: aload_1
      62: iload         4
      64: aload_2
      65: invokespecial #46                 // Method org/infinispan/commons/util/FastCopyHashMap$Entry."<init>":(Ljava/lang/Object;ILjava/lang/Object;)V
      68: aastore
      69: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #78                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field size:I
       9: invokevirtual #79                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      12: aload_0
      13: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
      16: astore_2
      17: aload_2
      18: arraylength
      19: istore_3
      20: iconst_0
      21: istore        4
      23: iload         4
      25: iload_3
      26: if_icmpge     64
      29: aload_2
      30: iload         4
      32: aaload
      33: astore        5
      35: aload         5
      37: ifnull        58
      40: aload_1
      41: aload         5
      43: getfield      #27                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.key:Ljava/lang/Object;
      46: invokevirtual #80                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      49: aload_1
      50: aload         5
      52: getfield      #29                 // Field org/infinispan/commons/util/FastCopyHashMap$Entry.value:Ljava/lang/Object;
      55: invokevirtual #80                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      58: iinc          4, 1
      61: goto          23
      64: return

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #57                 // Field values:Ljava/util/Collection;
       4: ifnonnull     19
       7: aload_0
       8: new           #81                 // class org/infinispan/commons/util/FastCopyHashMap$Values
      11: dup
      12: aload_0
      13: invokespecial #82                 // Method org/infinispan/commons/util/FastCopyHashMap$Values."<init>":(Lorg/infinispan/commons/util/FastCopyHashMap;)V
      16: putfield      #57                 // Field values:Ljava/util/Collection;
      19: aload_0
      20: getfield      #57                 // Field values:Ljava/util/Collection;
      23: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #58                 // Field keySet:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: new           #83                 // class org/infinispan/commons/util/FastCopyHashMap$KeySet
      11: dup
      12: aload_0
      13: invokespecial #84                 // Method org/infinispan/commons/util/FastCopyHashMap$KeySet."<init>":(Lorg/infinispan/commons/util/FastCopyHashMap;)V
      16: putfield      #58                 // Field keySet:Ljava/util/Set;
      19: aload_0
      20: getfield      #58                 // Field keySet:Ljava/util/Set;
      23: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #56                 // Field entrySet:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: new           #85                 // class org/infinispan/commons/util/FastCopyHashMap$EntrySet
      11: dup
      12: aload_0
      13: invokespecial #86                 // Method org/infinispan/commons/util/FastCopyHashMap$EntrySet."<init>":(Lorg/infinispan/commons/util/FastCopyHashMap;)V
      16: putfield      #56                 // Field entrySet:Ljava/util/Set;
      19: aload_0
      20: getfield      #56                 // Field entrySet:Ljava/util/Set;
      23: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method clone:()Lorg/infinispan/commons/util/FastCopyHashMap;
       4: areturn

  static int access$000(org.infinispan.commons.util.FastCopyHashMap);
    Code:
       0: aload_0
       1: getfield      #5                  // Field modCount:I
       4: ireturn

  static org.infinispan.commons.util.FastCopyHashMap$Entry[] access$100(org.infinispan.commons.util.FastCopyHashMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field table:[Lorg/infinispan/commons/util/FastCopyHashMap$Entry;
       4: areturn

  static int access$210(org.infinispan.commons.util.FastCopyHashMap);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field size:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #3                  // Field size:I
      11: ireturn

  static int access$300(org.infinispan.commons.util.FastCopyHashMap, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #2                  // Method nextIndex:(II)I
       6: ireturn

  static int access$400(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #1                  // Method index:(II)I
       5: ireturn

  static {};
    Code:
       0: ldc           #10                 // class org/infinispan/commons/util/FastCopyHashMap
       2: invokestatic  #88                 // Method org/infinispan/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/commons/logging/Log;
       5: putstatic     #89                 // Field log:Lorg/infinispan/commons/logging/Log;
       8: getstatic     #89                 // Field log:Lorg/infinispan/commons/logging/Log;
      11: invokeinterface #90,  1           // InterfaceMethod org/infinispan/commons/logging/Log.isTraceEnabled:()Z
      16: putstatic     #91                 // Field trace:Z
      19: return
}
