Compiled from "WeakValueHashMap.java"
public final class org.infinispan.commons.util.WeakValueHashMap<K, V> extends java.util.AbstractMap<K, V> {
  private java.util.Map<K, org.infinispan.commons.util.WeakValueHashMap$ValueRef<K, V>> map;

  private java.lang.ref.ReferenceQueue<V> queue;

  public org.infinispan.commons.util.WeakValueHashMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #5                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_0
      17: iload_1
      18: fload_2
      19: invokespecial #6                  // Method createMap:(IF)Ljava/util/Map;
      22: putfield      #1                  // Field map:Ljava/util/Map;
      25: return

  public org.infinispan.commons.util.WeakValueHashMap(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #5                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_0
      17: iload_1
      18: invokespecial #7                  // Method createMap:(I)Ljava/util/Map;
      21: putfield      #1                  // Field map:Ljava/util/Map;
      24: return

  public org.infinispan.commons.util.WeakValueHashMap();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #4                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #5                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_0
      17: invokevirtual #8                  // Method createMap:()Ljava/util/Map;
      20: putfield      #1                  // Field map:Ljava/util/Map;
      23: return

  public org.infinispan.commons.util.WeakValueHashMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: iconst_2
       2: aload_1
       3: invokeinterface #9,  1            // InterfaceMethod java/util/Map.size:()I
       8: imul
       9: bipush        11
      11: invokestatic  #10                 // Method java/lang/Math.max:(II)I
      14: ldc           #11                 // float 0.75f
      16: invokespecial #12                 // Method "<init>":(IF)V
      19: aload_0
      20: aload_1
      21: invokevirtual #13                 // Method putAll:(Ljava/util/Map;)V
      24: return

  private org.infinispan.commons.util.WeakValueHashMap$ValueRef<K, V> create(K, V, java.lang.ref.ReferenceQueue<V>);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #14                 // Method org/infinispan/commons/util/WeakValueHashMap$WeakValueRef.create:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Lorg/infinispan/commons/util/WeakValueHashMap$WeakValueRef;
       6: areturn

  private java.util.Map<K, org.infinispan.commons.util.WeakValueHashMap$ValueRef<K, V>> createMap(int, float);
    Code:
       0: new           #15                 // class java/util/HashMap
       3: dup
       4: iload_1
       5: fload_2
       6: invokespecial #16                 // Method java/util/HashMap."<init>":(IF)V
       9: areturn

  private java.util.Map<K, org.infinispan.commons.util.WeakValueHashMap$ValueRef<K, V>> createMap(int);
    Code:
       0: new           #15                 // class java/util/HashMap
       3: dup
       4: iload_1
       5: invokespecial #17                 // Method java/util/HashMap."<init>":(I)V
       8: areturn

  protected java.util.Map<K, org.infinispan.commons.util.WeakValueHashMap$ValueRef<K, V>> createMap();
    Code:
       0: new           #15                 // class java/util/HashMap
       3: dup
       4: invokespecial #18                 // Method java/util/HashMap."<init>":()V
       7: areturn

  public int size();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method processQueue:()V
       4: aload_0
       5: getfield      #1                  // Field map:Ljava/util/Map;
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Map.size:()I
      13: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method processQueue:()V
       4: aload_0
       5: getfield      #1                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #20,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method processQueue:()V
       4: aload_0
       5: getfield      #1                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #22                 // class org/infinispan/commons/util/WeakValueHashMap$ValueRef
      17: astore_2
      18: aload_2
      19: ifnull        29
      22: aload_2
      23: invokeinterface #23,  1           // InterfaceMethod org/infinispan/commons/util/WeakValueHashMap$ValueRef.get:()Ljava/lang/Object;
      28: areturn
      29: aconst_null
      30: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method processQueue:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #5                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      11: invokespecial #24                 // Method create:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Lorg/infinispan/commons/util/WeakValueHashMap$ValueRef;
      14: astore_3
      15: aload_0
      16: getfield      #1                  // Field map:Ljava/util/Map;
      19: aload_1
      20: aload_3
      21: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #22                 // class org/infinispan/commons/util/WeakValueHashMap$ValueRef
      29: astore        4
      31: aload         4
      33: ifnull        44
      36: aload         4
      38: invokeinterface #23,  1           // InterfaceMethod org/infinispan/commons/util/WeakValueHashMap$ValueRef.get:()Ljava/lang/Object;
      43: areturn
      44: aconst_null
      45: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method processQueue:()V
       4: aload_0
       5: getfield      #1                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #26,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #22                 // class org/infinispan/commons/util/WeakValueHashMap$ValueRef
      17: astore_2
      18: aload_2
      19: ifnull        29
      22: aload_2
      23: invokeinterface #23,  1           // InterfaceMethod org/infinispan/commons/util/WeakValueHashMap$ValueRef.get:()Ljava/lang/Object;
      28: areturn
      29: aconst_null
      30: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method processQueue:()V
       4: new           #27                 // class org/infinispan/commons/util/WeakValueHashMap$EntrySet
       7: dup
       8: aload_0
       9: aconst_null
      10: invokespecial #28                 // Method org/infinispan/commons/util/WeakValueHashMap$EntrySet."<init>":(Lorg/infinispan/commons/util/WeakValueHashMap;Lorg/infinispan/commons/util/WeakValueHashMap$1;)V
      13: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method processQueue:()V
       4: aload_0
       5: getfield      #1                  // Field map:Ljava/util/Map;
       8: invokeinterface #29,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/Map;
       4: invokevirtual #30                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  private void processQueue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #31                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #22                 // class org/infinispan/commons/util/WeakValueHashMap$ValueRef
      10: astore_1
      11: aload_1
      12: ifnull        64
      15: aload_1
      16: aload_0
      17: getfield      #1                  // Field map:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #32,  1           // InterfaceMethod org/infinispan/commons/util/WeakValueHashMap$ValueRef.getKey:()Ljava/lang/Object;
      26: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: if_acmpne     50
      34: aload_0
      35: getfield      #1                  // Field map:Ljava/util/Map;
      38: aload_1
      39: invokeinterface #32,  1           // InterfaceMethod org/infinispan/commons/util/WeakValueHashMap$ValueRef.getKey:()Ljava/lang/Object;
      44: invokeinterface #26,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #5                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      54: invokevirtual #31                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      57: checkcast     #22                 // class org/infinispan/commons/util/WeakValueHashMap$ValueRef
      60: astore_1
      61: goto          11
      64: return

  static java.util.Map access$100(org.infinispan.commons.util.WeakValueHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/Map;
       4: areturn
}
