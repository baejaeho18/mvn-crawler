Compiled from "CollectionFactory.java"
public class org.infinispan.commons.util.CollectionFactory {
  public org.infinispan.commons.util.CollectionFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap();
    Code:
       0: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap(int);
    Code:
       0: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: iload_0
       5: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
       8: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap(int, int);
    Code:
       0: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: iload_0
       5: ldc           #5                  // float 0.75f
       7: iload_1
       8: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      11: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentParallelMap(int, int);
    Code:
       0: new           #7                  // class org/infinispan/commons/util/concurrent/jdk8backported/ConcurrentParallelHashMapV8
       3: dup
       4: iload_0
       5: invokestatic  #8                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
       8: invokestatic  #8                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      11: invokespecial #9                  // Method org/infinispan/commons/util/concurrent/jdk8backported/ConcurrentParallelHashMapV8."<init>":(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      14: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap(int, float, int);
    Code:
       0: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: iload_0
       5: fload_1
       6: iload_2
       7: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      10: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap(org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       5: ifeq          18
       8: new           #11                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #12                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8."<init>":(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      17: areturn
      18: invokestatic  #13                 // Method makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      21: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap(int, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       5: ifeq          19
       8: new           #11                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8
      11: dup
      12: iload_0
      13: aload_1
      14: aload_2
      15: invokespecial #14                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8."<init>":(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      18: areturn
      19: iload_0
      20: invokestatic  #15                 // Method makeConcurrentMap:(I)Ljava/util/concurrent/ConcurrentMap;
      23: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap(int, int, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_2
       1: aload_3
       2: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       5: ifeq          21
       8: new           #11                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8
      11: dup
      12: iload_0
      13: iload_1
      14: i2f
      15: aload_2
      16: aload_3
      17: invokespecial #16                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8."<init>":(IFLorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      20: areturn
      21: iload_0
      22: iload_1
      23: invokestatic  #17                 // Method makeConcurrentMap:(II)Ljava/util/concurrent/ConcurrentMap;
      26: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentParallelMap(int, int, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_2
       1: aload_3
       2: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       5: ifeq          21
       8: new           #7                  // class org/infinispan/commons/util/concurrent/jdk8backported/ConcurrentParallelHashMapV8
      11: dup
      12: iload_0
      13: iload_1
      14: i2f
      15: aload_2
      16: aload_3
      17: invokespecial #18                 // Method org/infinispan/commons/util/concurrent/jdk8backported/ConcurrentParallelHashMapV8."<init>":(IFLorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      20: areturn
      21: iload_0
      22: iload_1
      23: invokestatic  #19                 // Method makeConcurrentParallelMap:(II)Ljava/util/concurrent/ConcurrentMap;
      26: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeConcurrentMap(int, float, int, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_3
       1: aload         4
       3: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       6: ifeq          23
       9: new           #11                 // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8
      12: dup
      13: iload_0
      14: fload_1
      15: iload_2
      16: aload_3
      17: aload         4
      19: invokespecial #20                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8."<init>":(IFILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      22: areturn
      23: iload_0
      24: fload_1
      25: iload_2
      26: invokestatic  #21                 // Method makeConcurrentMap:(IFI)Ljava/util/concurrent/ConcurrentMap;
      29: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> makeBoundedConcurrentMap(int);
    Code:
       0: new           #22                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8
       3: dup
       4: iload_0
       5: i2l
       6: invokestatic  #8                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
       9: invokestatic  #8                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      12: invokespecial #23                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8."<init>":(JLorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      15: areturn

  public static <K, V> java.util.Map<K, V> makeMap(org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       5: ifeq          18
       8: new           #24                 // class org/infinispan/commons/equivalence/EquivalentHashMap
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #25                 // Method org/infinispan/commons/equivalence/EquivalentHashMap."<init>":(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      17: areturn
      18: new           #26                 // class java/util/HashMap
      21: dup
      22: invokespecial #27                 // Method java/util/HashMap."<init>":()V
      25: areturn

  public static <K, V> java.util.Map<K, V> makeMap(int, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       5: ifeq          19
       8: new           #24                 // class org/infinispan/commons/equivalence/EquivalentHashMap
      11: dup
      12: iload_0
      13: aload_1
      14: aload_2
      15: invokespecial #28                 // Method org/infinispan/commons/equivalence/EquivalentHashMap."<init>":(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      18: areturn
      19: new           #26                 // class java/util/HashMap
      22: dup
      23: iload_0
      24: invokespecial #29                 // Method java/util/HashMap."<init>":(I)V
      27: areturn

  public static <K, V> java.util.Map<K, V> makeMap(java.util.Map<? extends K, ? extends V>, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       5: ifeq          19
       8: new           #24                 // class org/infinispan/commons/equivalence/EquivalentHashMap
      11: dup
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #30                 // Method org/infinispan/commons/equivalence/EquivalentHashMap."<init>":(Ljava/util/Map;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      18: areturn
      19: new           #26                 // class java/util/HashMap
      22: dup
      23: aload_0
      24: invokespecial #31                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      27: areturn

  public static <K, V> java.util.Map<K, V> makeLinkedMap(int, float, org.infinispan.commons.equivalence.EquivalentLinkedHashMap$IterationOrder, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_3
       1: aload         4
       3: invokestatic  #10                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Z
       6: ifeq          23
       9: new           #32                 // class org/infinispan/commons/equivalence/EquivalentLinkedHashMap
      12: dup
      13: iload_0
      14: fload_1
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokespecial #33                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap."<init>":(IFLorg/infinispan/commons/equivalence/EquivalentLinkedHashMap$IterationOrder;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      22: areturn
      23: new           #34                 // class java/util/LinkedHashMap
      26: dup
      27: iload_0
      28: fload_1
      29: aload_2
      30: invokevirtual #35                 // Method org/infinispan/commons/equivalence/EquivalentLinkedHashMap$IterationOrder.toJdkAccessOrder:()Z
      33: invokespecial #36                 // Method java/util/LinkedHashMap."<init>":(IFZ)V
      36: areturn

  public static <T> java.util.Set<T> makeSet(org.infinispan.commons.equivalence.Equivalence<? super T>);
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;)Z
       4: ifeq          16
       7: new           #38                 // class org/infinispan/commons/equivalence/EquivalentHashSet
      10: dup
      11: aload_0
      12: invokespecial #39                 // Method org/infinispan/commons/equivalence/EquivalentHashSet."<init>":(Lorg/infinispan/commons/equivalence/Equivalence;)V
      15: areturn
      16: new           #40                 // class java/util/HashSet
      19: dup
      20: invokespecial #41                 // Method java/util/HashSet."<init>":()V
      23: areturn

  public static <T> java.util.Set<T> makeSet(int, org.infinispan.commons.equivalence.Equivalence<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method requiresEquivalent:(Lorg/infinispan/commons/equivalence/Equivalence;)Z
       4: ifeq          17
       7: new           #38                 // class org/infinispan/commons/equivalence/EquivalentHashSet
      10: dup
      11: iload_0
      12: aload_1
      13: invokespecial #42                 // Method org/infinispan/commons/equivalence/EquivalentHashSet."<init>":(ILorg/infinispan/commons/equivalence/Equivalence;)V
      16: areturn
      17: new           #40                 // class java/util/HashSet
      20: dup
      21: iload_0
      22: invokespecial #43                 // Method java/util/HashSet."<init>":(I)V
      25: areturn

  public static <T> java.util.Set<T> makeSet(T...);
    Code:
       0: new           #40                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokestatic  #44                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokespecial #45                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: areturn

  private static <K, V> boolean requiresEquivalent(org.infinispan.commons.equivalence.Equivalence<K>, org.infinispan.commons.equivalence.Equivalence<V>);
    Code:
       0: invokestatic  #8                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
       3: astore_2
       4: aload_0
       5: aload_2
       6: if_acmpne     14
       9: aload_1
      10: aload_2
      11: if_acmpeq     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static <T> boolean requiresEquivalent(org.infinispan.commons.equivalence.Equivalence<T>);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
       4: if_acmpeq     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
