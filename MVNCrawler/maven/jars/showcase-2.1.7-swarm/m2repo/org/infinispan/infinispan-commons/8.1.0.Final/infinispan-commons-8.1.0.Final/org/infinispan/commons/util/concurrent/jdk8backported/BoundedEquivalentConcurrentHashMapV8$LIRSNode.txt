Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
final class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V> implements org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EvictionEntry<K, V> {
  org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Recency state;

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>> stackNode;

  org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>> queueNode;

  boolean created;

  final K key;

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode(K);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field key:Ljava/lang/Object;
       9: return

  public void setState(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$Recency);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
       5: return

  public void setStackNode(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       5: return

  public void setQueueNode(org.infinispan.commons.util.concurrent.jdk8backported.StrippedConcurrentLinkedDeque$DequeNode<org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$LIRSNode<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #8                  // String LIRSNode [state=
       9: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field state:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Recency;
      16: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #11                 // String , stackNode=
      21: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field stackNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      28: invokestatic  #12                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      31: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #14                 // String , queueNode=
      36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #5                  // Field queueNode:Lorg/infinispan/commons/util/concurrent/jdk8backported/StrippedConcurrentLinkedDeque$DequeNode;
      43: invokestatic  #12                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #15                 // String , key=
      51: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #2                  // Field key:Ljava/lang/Object;
      58: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc           #16                 // String ]
      63: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: areturn

  public K getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: areturn
}
