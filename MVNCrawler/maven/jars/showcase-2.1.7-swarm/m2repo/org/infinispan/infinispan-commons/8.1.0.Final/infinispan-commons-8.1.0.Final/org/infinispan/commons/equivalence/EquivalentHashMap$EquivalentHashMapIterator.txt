Compiled from "EquivalentHashMap.java"
abstract class org.infinispan.commons.equivalence.EquivalentHashMap$EquivalentHashMapIterator<E> implements java.util.Iterator<E> {
  org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V> next;

  int expectedCount;

  int index;

  org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V> current;

  final org.infinispan.commons.equivalence.EquivalentHashMap this$0;

  org.infinispan.commons.equivalence.EquivalentHashMap$EquivalentHashMapIterator(org.infinispan.commons.equivalence.EquivalentHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_1
      11: getfield      #3                  // Field org/infinispan/commons/equivalence/EquivalentHashMap.modCount:I
      14: putfield      #4                  // Field expectedCount:I
      17: aload_1
      18: getfield      #5                  // Field org/infinispan/commons/equivalence/EquivalentHashMap.size:I
      21: ifle          62
      24: aload_1
      25: invokestatic  #6                  // Method org/infinispan/commons/equivalence/EquivalentHashMap.access$600:(Lorg/infinispan/commons/equivalence/EquivalentHashMap;)[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      28: astore_2
      29: aload_0
      30: getfield      #7                  // Field index:I
      33: aload_2
      34: arraylength
      35: if_icmpge     62
      38: aload_0
      39: aload_2
      40: aload_0
      41: dup
      42: getfield      #7                  // Field index:I
      45: dup_x1
      46: iconst_1
      47: iadd
      48: putfield      #7                  // Field index:I
      51: aaload
      52: dup_x1
      53: putfield      #8                  // Field next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      56: ifnonnull     62
      59: goto          29
      62: return

  public final boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #8                  // Field next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  final java.util.Map$Entry<K, V> nextEntry();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: getfield      #3                  // Field org/infinispan/commons/equivalence/EquivalentHashMap.modCount:I
       7: aload_0
       8: getfield      #4                  // Field expectedCount:I
      11: if_icmpeq     22
      14: new           #9                  // class java/util/ConcurrentModificationException
      17: dup
      18: invokespecial #10                 // Method java/util/ConcurrentModificationException."<init>":()V
      21: athrow
      22: aload_0
      23: getfield      #8                  // Field next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      26: astore_1
      27: aload_1
      28: ifnonnull     39
      31: new           #11                 // class java/util/NoSuchElementException
      34: dup
      35: invokespecial #12                 // Method java/util/NoSuchElementException."<init>":()V
      38: athrow
      39: aload_0
      40: aload_1
      41: getfield      #13                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      44: dup_x1
      45: putfield      #8                  // Field next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      48: ifnonnull     92
      51: aload_0
      52: getfield      #1                  // Field this$0:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
      55: invokestatic  #6                  // Method org/infinispan/commons/equivalence/EquivalentHashMap.access$600:(Lorg/infinispan/commons/equivalence/EquivalentHashMap;)[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      58: astore_2
      59: aload_0
      60: getfield      #7                  // Field index:I
      63: aload_2
      64: arraylength
      65: if_icmpge     92
      68: aload_0
      69: aload_2
      70: aload_0
      71: dup
      72: getfield      #7                  // Field index:I
      75: dup_x1
      76: iconst_1
      77: iadd
      78: putfield      #7                  // Field index:I
      81: aaload
      82: dup_x1
      83: putfield      #8                  // Field next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      86: ifnonnull     92
      89: goto          59
      92: aload_0
      93: aload_1
      94: putfield      #14                 // Field current:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      97: new           #15                 // class org/infinispan/commons/equivalence/EquivalentHashMap$MapEntry
     100: dup
     101: aload_1
     102: getfield      #16                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.key:Ljava/lang/Object;
     105: aload_1
     106: getfield      #17                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.value:Ljava/lang/Object;
     109: aload_0
     110: getfield      #1                  // Field this$0:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
     113: invokespecial #18                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$MapEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap;)V
     116: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
       4: getfield      #3                  // Field org/infinispan/commons/equivalence/EquivalentHashMap.modCount:I
       7: aload_0
       8: getfield      #4                  // Field expectedCount:I
      11: if_icmpeq     22
      14: new           #9                  // class java/util/ConcurrentModificationException
      17: dup
      18: invokespecial #10                 // Method java/util/ConcurrentModificationException."<init>":()V
      21: athrow
      22: aload_0
      23: getfield      #14                 // Field current:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      26: ifnonnull     37
      29: new           #19                 // class java/lang/IllegalStateException
      32: dup
      33: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":()V
      36: athrow
      37: aload_0
      38: getfield      #14                 // Field current:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      41: getfield      #16                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.key:Ljava/lang/Object;
      44: astore_1
      45: aload_0
      46: aconst_null
      47: putfield      #14                 // Field current:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      50: aload_0
      51: getfield      #1                  // Field this$0:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
      54: aload_1
      55: invokevirtual #21                 // Method org/infinispan/commons/equivalence/EquivalentHashMap.removeNode:(Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload_0
      60: aload_0
      61: getfield      #1                  // Field this$0:Lorg/infinispan/commons/equivalence/EquivalentHashMap;
      64: getfield      #3                  // Field org/infinispan/commons/equivalence/EquivalentHashMap.modCount:I
      67: putfield      #4                  // Field expectedCount:I
      70: return
}
