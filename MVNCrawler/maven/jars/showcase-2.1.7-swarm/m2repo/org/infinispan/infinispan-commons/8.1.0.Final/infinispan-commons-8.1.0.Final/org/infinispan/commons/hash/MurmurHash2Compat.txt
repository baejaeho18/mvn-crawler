Compiled from "MurmurHash2Compat.java"
public class org.infinispan.commons.hash.MurmurHash2Compat implements org.infinispan.commons.hash.Hash {
  private static final int M;

  private static final int R;

  private static final int H;

  public org.infinispan.commons.hash.MurmurHash2Compat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public final int hash(byte[]);
    Code:
       0: iconst_m1
       1: istore_2
       2: aload_1
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload_3
       9: iconst_4
      10: if_icmplt     104
      13: aload_1
      14: iload         4
      16: baload
      17: istore        5
      19: iload         5
      21: aload_1
      22: iload         4
      24: iconst_1
      25: iadd
      26: baload
      27: bipush        8
      29: ishl
      30: ior
      31: istore        5
      33: iload         5
      35: aload_1
      36: iload         4
      38: iconst_2
      39: iadd
      40: baload
      41: bipush        16
      43: ishl
      44: ior
      45: istore        5
      47: iload         5
      49: aload_1
      50: iload         4
      52: iconst_3
      53: iadd
      54: baload
      55: bipush        24
      57: ishl
      58: ior
      59: istore        5
      61: iload         5
      63: ldc           #3                  // int 1540483477
      65: imul
      66: istore        5
      68: iload         5
      70: iload         5
      72: bipush        24
      74: ishr
      75: ixor
      76: istore        5
      78: iload         5
      80: ldc           #3                  // int 1540483477
      82: imul
      83: istore        5
      85: iload_2
      86: ldc           #3                  // int 1540483477
      88: imul
      89: istore_2
      90: iload_2
      91: iload         5
      93: ixor
      94: istore_2
      95: iinc          3, -4
      98: iinc          4, 4
     101: goto          8
     104: iload_3
     105: tableswitch   { // 1 to 3
                     1: 156
                     2: 144
                     3: 132
               default: 168
          }
     132: iload_2
     133: aload_1
     134: iload         4
     136: iconst_2
     137: iadd
     138: baload
     139: bipush        16
     141: ishl
     142: ixor
     143: istore_2
     144: iload_2
     145: aload_1
     146: iload         4
     148: iconst_1
     149: iadd
     150: baload
     151: bipush        8
     153: ishl
     154: ixor
     155: istore_2
     156: iload_2
     157: aload_1
     158: iload         4
     160: baload
     161: ixor
     162: istore_2
     163: iload_2
     164: ldc           #3                  // int 1540483477
     166: imul
     167: istore_2
     168: iload_2
     169: iload_2
     170: bipush        13
     172: ishr
     173: ixor
     174: istore_2
     175: iload_2
     176: ldc           #3                  // int 1540483477
     178: imul
     179: istore_2
     180: iload_2
     181: iload_2
     182: bipush        15
     184: ishr
     185: ixor
     186: istore_2
     187: iload_2
     188: ireturn

  public final int hash(int);
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore_2
       4: aload_2
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: aload_2
      10: iconst_1
      11: iload_1
      12: bipush        8
      14: ishr
      15: i2b
      16: bastore
      17: aload_2
      18: iconst_2
      19: iload_1
      20: bipush        16
      22: ishr
      23: i2b
      24: bastore
      25: aload_2
      26: iconst_3
      27: iload_1
      28: bipush        24
      30: ishr
      31: i2b
      32: bastore
      33: aload_0
      34: aload_2
      35: invokevirtual #4                  // Method hash:([B)I
      38: ireturn

  public final int hash(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class "[B"
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #5                  // class "[B"
      12: checkcast     #5                  // class "[B"
      15: invokevirtual #4                  // Method hash:([B)I
      18: ireturn
      19: aload_1
      20: instanceof    #6                  // class java/lang/String
      23: ifeq          38
      26: aload_0
      27: aload_1
      28: checkcast     #6                  // class java/lang/String
      31: invokevirtual #7                  // Method java/lang/String.getBytes:()[B
      34: invokevirtual #4                  // Method hash:([B)I
      37: ireturn
      38: aload_0
      39: aload_1
      40: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
      43: invokevirtual #9                  // Method hash:(I)I
      46: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: aload_0
       9: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: if_acmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #11                 // String MurmurHash2Compat
       2: areturn
}
