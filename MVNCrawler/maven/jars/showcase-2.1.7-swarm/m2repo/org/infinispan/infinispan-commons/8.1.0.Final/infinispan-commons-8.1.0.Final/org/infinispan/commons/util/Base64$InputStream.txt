Compiled from "Base64.java"
public class org.infinispan.commons.util.Base64$InputStream extends java.io.FilterInputStream {
  private boolean encode;

  private int position;

  private byte[] buffer;

  private int bufferLength;

  private int numSigBytes;

  private int lineLength;

  private boolean breakLines;

  public org.infinispan.commons.util.Base64$InputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;I)V
       6: return

  public org.infinispan.commons.util.Base64$InputStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: iload_2
       7: bipush        8
       9: iand
      10: bipush        8
      12: if_icmpeq     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: putfield      #4                  // Field breakLines:Z
      23: aload_0
      24: iload_2
      25: iconst_1
      26: iand
      27: iconst_1
      28: if_icmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: putfield      #5                  // Field encode:Z
      39: aload_0
      40: aload_0
      41: getfield      #5                  // Field encode:Z
      44: ifeq          51
      47: iconst_4
      48: goto          52
      51: iconst_3
      52: putfield      #6                  // Field bufferLength:I
      55: aload_0
      56: aload_0
      57: getfield      #6                  // Field bufferLength:I
      60: newarray       byte
      62: putfield      #7                  // Field buffer:[B
      65: aload_0
      66: iconst_m1
      67: putfield      #8                  // Field position:I
      70: aload_0
      71: iconst_0
      72: putfield      #9                  // Field lineLength:I
      75: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field position:I
       4: ifge          199
       7: aload_0
       8: getfield      #5                  // Field encode:Z
      11: ifeq          102
      14: iconst_3
      15: newarray       byte
      17: astore_1
      18: iconst_0
      19: istore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: iconst_3
      24: if_icmpge     68
      27: aload_0
      28: getfield      #10                 // Field in:Ljava/io/InputStream;
      31: invokevirtual #11                 // Method java/io/InputStream.read:()I
      34: istore        4
      36: iload         4
      38: iflt          50
      41: aload_1
      42: iload_3
      43: iload         4
      45: i2b
      46: bastore
      47: iinc          2, 1
      50: goto          62
      53: astore        4
      55: iload_3
      56: ifne          62
      59: aload         4
      61: athrow
      62: iinc          3, 1
      65: goto          22
      68: iload_2
      69: ifle          97
      72: aload_1
      73: iconst_0
      74: iload_2
      75: aload_0
      76: getfield      #7                  // Field buffer:[B
      79: iconst_0
      80: invokestatic  #13                 // Method org/infinispan/commons/util/Base64.access$000:([BII[BI)[B
      83: pop
      84: aload_0
      85: iconst_0
      86: putfield      #8                  // Field position:I
      89: aload_0
      90: iconst_4
      91: putfield      #14                 // Field numSigBytes:I
      94: goto          99
      97: iconst_m1
      98: ireturn
      99: goto          199
     102: iconst_4
     103: newarray       byte
     105: astore_1
     106: iconst_0
     107: istore_2
     108: iload_2
     109: iconst_4
     110: if_icmpge     156
     113: aload_0
     114: getfield      #10                 // Field in:Ljava/io/InputStream;
     117: invokevirtual #11                 // Method java/io/InputStream.read:()I
     120: istore_3
     121: iload_3
     122: iflt          138
     125: invokestatic  #15                 // Method org/infinispan/commons/util/Base64.access$100:()[B
     128: iload_3
     129: bipush        127
     131: iand
     132: baload
     133: bipush        -5
     135: if_icmple     113
     138: iload_3
     139: ifge          145
     142: goto          156
     145: aload_1
     146: iload_2
     147: iload_3
     148: i2b
     149: bastore
     150: iinc          2, 1
     153: goto          108
     156: iload_2
     157: iconst_4
     158: if_icmpne     183
     161: aload_0
     162: aload_1
     163: iconst_0
     164: aload_0
     165: getfield      #7                  // Field buffer:[B
     168: iconst_0
     169: invokestatic  #16                 // Method org/infinispan/commons/util/Base64.access$200:([BI[BI)I
     172: putfield      #14                 // Field numSigBytes:I
     175: aload_0
     176: iconst_0
     177: putfield      #8                  // Field position:I
     180: goto          199
     183: iload_2
     184: ifne          189
     187: iconst_m1
     188: ireturn
     189: new           #12                 // class java/io/IOException
     192: dup
     193: ldc           #17                 // String Improperly padded Base64 input.
     195: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: aload_0
     200: getfield      #8                  // Field position:I
     203: iflt          299
     206: aload_0
     207: getfield      #8                  // Field position:I
     210: aload_0
     211: getfield      #14                 // Field numSigBytes:I
     214: if_icmplt     219
     217: iconst_m1
     218: ireturn
     219: aload_0
     220: getfield      #5                  // Field encode:Z
     223: ifeq          250
     226: aload_0
     227: getfield      #4                  // Field breakLines:Z
     230: ifeq          250
     233: aload_0
     234: getfield      #9                  // Field lineLength:I
     237: bipush        76
     239: if_icmplt     250
     242: aload_0
     243: iconst_0
     244: putfield      #9                  // Field lineLength:I
     247: bipush        10
     249: ireturn
     250: aload_0
     251: dup
     252: getfield      #9                  // Field lineLength:I
     255: iconst_1
     256: iadd
     257: putfield      #9                  // Field lineLength:I
     260: aload_0
     261: getfield      #7                  // Field buffer:[B
     264: aload_0
     265: dup
     266: getfield      #8                  // Field position:I
     269: dup_x1
     270: iconst_1
     271: iadd
     272: putfield      #8                  // Field position:I
     275: baload
     276: istore_1
     277: aload_0
     278: getfield      #8                  // Field position:I
     281: aload_0
     282: getfield      #6                  // Field bufferLength:I
     285: if_icmplt     293
     288: aload_0
     289: iconst_m1
     290: putfield      #8                  // Field position:I
     293: iload_1
     294: sipush        255
     297: iand
     298: ireturn
     299: new           #12                 // class java/io/IOException
     302: dup
     303: ldc           #19                 // String Error in Base64 code reading stream.
     305: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     308: athrow
    Exception table:
       from    to  target type
          27    50    53   Class java/io/IOException

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     45
       9: aload_0
      10: invokevirtual #20                 // Method read:()I
      13: istore        5
      15: iload         5
      17: iflt          32
      20: aload_1
      21: iload_2
      22: iload         4
      24: iadd
      25: iload         5
      27: i2b
      28: bastore
      29: goto          39
      32: iload         4
      34: ifne          45
      37: iconst_m1
      38: ireturn
      39: iinc          4, 1
      42: goto          3
      45: iload         4
      47: ireturn
}
