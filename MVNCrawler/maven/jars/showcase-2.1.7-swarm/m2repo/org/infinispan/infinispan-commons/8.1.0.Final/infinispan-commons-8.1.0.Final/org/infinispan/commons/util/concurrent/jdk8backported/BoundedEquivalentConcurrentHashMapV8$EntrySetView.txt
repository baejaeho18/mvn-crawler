Compiled from "BoundedEquivalentConcurrentHashMapV8.java"
final class org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EntrySetView<K, V> extends org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$CollectionView<K, V, java.util.Map$Entry<K, V>> implements java.util.Set<java.util.Map$Entry<K, V>>, java.io.Serializable {
  private static final long serialVersionUID;

  org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$EntrySetView(org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$CollectionView."<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;)V
       5: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class java/util/Map$Entry
       4: ifeq          78
       7: aload_1
       8: checkcast     #2                  // class java/util/Map$Entry
      11: dup
      12: astore        5
      14: invokeinterface #3,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      19: dup
      20: astore_2
      21: ifnull        78
      24: aload_0
      25: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      28: aload_2
      29: invokevirtual #5                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: dup
      33: astore        4
      35: ifnull        78
      38: aload         5
      40: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: dup
      46: astore_3
      47: ifnull        78
      50: aload_3
      51: aload         4
      53: if_acmpeq     74
      56: aload_0
      57: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      60: getfield      #7                  // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.valueEq:Lorg/infinispan/commons/equivalence/Equivalence;
      63: aload         4
      65: aload_3
      66: invokeinterface #8,  3            // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class java/util/Map$Entry
       4: ifeq          52
       7: aload_1
       8: checkcast     #2                  // class java/util/Map$Entry
      11: dup
      12: astore        4
      14: invokeinterface #3,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      19: dup
      20: astore_2
      21: ifnull        52
      24: aload         4
      26: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      31: dup
      32: astore_3
      33: ifnull        52
      36: aload_0
      37: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      40: aload_2
      41: aload_3
      42: invokevirtual #9                  // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: astore_1
       5: aload_1
       6: getfield      #10                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
       9: dup
      10: astore_2
      11: ifnonnull     18
      14: iconst_0
      15: goto          20
      18: aload_2
      19: arraylength
      20: istore_3
      21: new           #11                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EntryIterator
      24: dup
      25: aload_2
      26: iload_3
      27: iconst_0
      28: iload_3
      29: aload_1
      30: invokespecial #12                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EntryIterator."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;IIILorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;)V
      33: areturn

  public boolean add(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      10: aload_1
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: iconst_0
      17: invokevirtual #13                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.putVal:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
      20: ifnonnull     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean addAll(java.util.Collection<? extends java.util.Map$Entry<K, V>>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_3
      19: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #2                  // class java/util/Map$Entry
      27: astore        4
      29: aload_0
      30: aload         4
      32: invokevirtual #17                 // Method add:(Ljava/util/Map$Entry;)Z
      35: ifeq          40
      38: iconst_1
      39: istore_2
      40: goto          9
      43: iload_2
      44: ireturn

  public final int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       6: getfield      #10                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
       9: dup
      10: astore_2
      11: ifnull        71
      14: new           #18                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser
      17: dup
      18: aload_2
      19: aload_2
      20: arraylength
      21: iconst_0
      22: aload_2
      23: arraylength
      24: invokespecial #19                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;III)V
      27: astore_3
      28: aload_3
      29: invokevirtual #20                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser.advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      32: dup
      33: astore        4
      35: ifnull        71
      38: aload         4
      40: getfield      #21                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
      43: astore        5
      45: aload         5
      47: getstatic     #22                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
      50: if_acmpeq     68
      53: iload_1
      54: aload         4
      56: aload         4
      58: getfield      #23                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      61: aload         5
      63: invokevirtual #24                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.hashCode:(Ljava/lang/Object;Ljava/lang/Object;)I
      66: iadd
      67: istore_1
      68: goto          28
      71: iload_1
      72: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #25                 // class java/util/Set
       4: ifeq          39
       7: aload_1
       8: checkcast     #25                 // class java/util/Set
      11: dup
      12: astore_2
      13: aload_0
      14: if_acmpeq     35
      17: aload_0
      18: aload_2
      19: invokevirtual #26                 // Method containsAll:(Ljava/util/Collection;)Z
      22: ifeq          39
      25: aload_2
      26: aload_0
      27: invokeinterface #27,  2           // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public org.infinispan.commons.util.concurrent.jdk8backported.BoundedEquivalentConcurrentHashMapV8$ConcurrentHashMapSpliterator<java.util.Map$Entry<K, V>> spliteratorV8();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
       4: astore_2
       5: aload_2
       6: invokevirtual #28                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.sumCount:()J
       9: lstore_3
      10: aload_2
      11: getfield      #10                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      14: dup
      15: astore_1
      16: ifnonnull     23
      19: iconst_0
      20: goto          25
      23: aload_1
      24: arraylength
      25: istore        5
      27: new           #29                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EntrySpliterator
      30: dup
      31: aload_1
      32: iload         5
      34: iconst_0
      35: iload         5
      37: lload_3
      38: lconst_0
      39: lcmp
      40: ifge          47
      43: lconst_0
      44: goto          48
      47: lload_3
      48: aload_2
      49: invokespecial #30                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EntrySpliterator."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;IIIJLorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;)V
      52: areturn

  public void forEach(java.util.function.Consumer<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #31                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #32                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      16: getfield      #10                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.table:[Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      19: dup
      20: astore_2
      21: ifnull        90
      24: new           #18                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser
      27: dup
      28: aload_2
      29: aload_2
      30: arraylength
      31: iconst_0
      32: aload_2
      33: arraylength
      34: invokespecial #19                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;III)V
      37: astore_3
      38: aload_3
      39: invokevirtual #20                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Traverser.advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node;
      42: dup
      43: astore        4
      45: ifnull        90
      48: aload         4
      50: getfield      #21                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.val:Ljava/lang/Object;
      53: astore        5
      55: aload         5
      57: getstatic     #22                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.NULL_VALUE:Ljava/lang/Object;
      60: if_acmpeq     87
      63: aload_1
      64: new           #33                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$MapEntry
      67: dup
      68: aload         4
      70: getfield      #23                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      73: aload         5
      75: aload_0
      76: getfield      #4                  // Field map:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;
      79: invokespecial #34                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$MapEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8;)V
      82: invokeinterface #35,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      87: goto          38
      90: return

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class java/util/Map$Entry
       5: invokevirtual #17                 // Method add:(Ljava/util/Map$Entry;)Z
       8: ireturn
}
