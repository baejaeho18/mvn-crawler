Compiled from "EquivalentHashMap.java"
public class org.infinispan.commons.equivalence.EquivalentHashMap<K, V> extends org.infinispan.commons.util.AbstractMap<K, V> {
  private static final int DEFAULT_INITIAL_CAPACITY;

  private static final float DEFAULT_LOAD_FACTOR;

  private static final int MAXIMUM_CAPACITY;

  private org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V>[] table;

  int size;

  private int threshold;

  private final float loadFactor;

  int modCount;

  private final org.infinispan.commons.equivalence.Equivalence<? super K> keyEq;

  private final org.infinispan.commons.equivalence.Equivalence<? super V> valueEq;

  public org.infinispan.commons.equivalence.EquivalentHashMap(org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_0
       1: bipush        16
       3: aload_1
       4: aload_2
       5: invokespecial #5                  // Method "<init>":(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
       8: return

  public org.infinispan.commons.equivalence.EquivalentHashMap(int, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #6                  // float 0.75f
       4: aload_2
       5: aload_3
       6: invokespecial #7                  // Method "<init>":(IFLorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
       9: return

  public org.infinispan.commons.equivalence.EquivalentHashMap(int, float, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/infinispan/commons/util/AbstractMap."<init>":()V
       4: iconst_1
       5: istore        5
       7: iload         5
       9: iload_1
      10: if_icmpge     22
      13: iload         5
      15: iconst_1
      16: ishl
      17: istore        5
      19: goto          7
      22: aload_0
      23: fload_2
      24: putfield      #9                  // Field loadFactor:F
      27: aload_0
      28: iload         5
      30: i2f
      31: fload_2
      32: fmul
      33: f2i
      34: putfield      #10                 // Field threshold:I
      37: aload_0
      38: iload         5
      40: anewarray     #11                 // class org/infinispan/commons/equivalence/EquivalentHashMap$Node
      43: putfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      46: aload_0
      47: aload_3
      48: putfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      51: aload_0
      52: aload         4
      54: putfield      #2                  // Field valueEq:Lorg/infinispan/commons/equivalence/Equivalence;
      57: return

  public org.infinispan.commons.equivalence.EquivalentHashMap(java.util.Map<? extends K, ? extends V>, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.equivalence.Equivalence<? super V>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/infinispan/commons/util/AbstractMap."<init>":()V
       4: aload_1
       5: instanceof    #4                  // class org/infinispan/commons/equivalence/EquivalentHashMap
       8: ifeq          65
      11: aload_1
      12: checkcast     #4                  // class org/infinispan/commons/equivalence/EquivalentHashMap
      15: astore        4
      17: aload_0
      18: aload         4
      20: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      23: invokevirtual #12                 // Method "[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;".clone:()Ljava/lang/Object;
      26: checkcast     #13                 // class "[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;"
      29: checkcast     #13                 // class "[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;"
      32: putfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      35: aload_0
      36: aload         4
      38: getfield      #9                  // Field loadFactor:F
      41: putfield      #9                  // Field loadFactor:F
      44: aload_0
      45: aload         4
      47: getfield      #14                 // Field size:I
      50: putfield      #14                 // Field size:I
      53: aload_0
      54: aload         4
      56: getfield      #10                 // Field threshold:I
      59: putfield      #10                 // Field threshold:I
      62: goto          90
      65: aload_0
      66: ldc           #6                  // float 0.75f
      68: putfield      #9                  // Field loadFactor:F
      71: aload_0
      72: aload_1
      73: invokeinterface #15,  1           // InterfaceMethod java/util/Map.size:()I
      78: aload_0
      79: getfield      #9                  // Field loadFactor:F
      82: invokespecial #16                 // Method init:(IF)V
      85: aload_0
      86: aload_1
      87: invokevirtual #17                 // Method putAll:(Ljava/util/Map;)V
      90: aload_0
      91: aload_2
      92: putfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      95: aload_0
      96: aload_3
      97: putfield      #2                  // Field valueEq:Lorg/infinispan/commons/equivalence/Equivalence;
     100: return

  private void init(int, float);
    Code:
       0: iconst_1
       1: istore_3
       2: iload_3
       3: iload_1
       4: if_icmpge     14
       7: iload_3
       8: iconst_1
       9: ishl
      10: istore_3
      11: goto          2
      14: aload_0
      15: iload_3
      16: anewarray     #11                 // class org/infinispan/commons/equivalence/EquivalentHashMap$Node
      19: putfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      22: aload_0
      23: iload_3
      24: i2f
      25: fload_2
      26: fmul
      27: f2i
      28: putfield      #10                 // Field threshold:I
      31: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #14                 // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
       8: aload_1
       9: invokeinterface #19,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      14: invokestatic  #20                 // Method spread:(I)I
      17: istore_2
      18: aload_0
      19: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      22: arraylength
      23: istore_3
      24: iload_2
      25: iload_3
      26: invokestatic  #21                 // Method index:(II)I
      29: istore        4
      31: aload_0
      32: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      35: iload         4
      37: aaload
      38: astore        5
      40: aload         5
      42: ifnull        84
      45: aload         5
      47: getfield      #22                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.hash:I
      50: iload_2
      51: if_icmpne     74
      54: aload_0
      55: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      58: aload         5
      60: getfield      #23                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.key:Ljava/lang/Object;
      63: aload_1
      64: invokeinterface #24,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ifeq          74
      72: iconst_1
      73: ireturn
      74: aload         5
      76: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      79: astore        5
      81: goto          40
      84: iconst_0
      85: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     64
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: ifnull        58
      28: aload_0
      29: getfield      #2                  // Field valueEq:Lorg/infinispan/commons/equivalence/Equivalence;
      32: aload         5
      34: getfield      #26                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.value:Ljava/lang/Object;
      37: aload_1
      38: invokeinterface #24,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: aload         5
      50: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      53: astore        5
      55: goto          23
      58: iinc          4, 1
      61: goto          11
      64: iconst_0
      65: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method getNode:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #11                 // class org/infinispan/commons/equivalence/EquivalentHashMap$Node
       8: astore_2
       9: aload_2
      10: ifnonnull     17
      13: aconst_null
      14: goto          21
      17: aload_2
      18: getfield      #26                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.value:Ljava/lang/Object;
      21: areturn

  <T> T getNode(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
       8: aload_1
       9: invokeinterface #19,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      14: invokestatic  #20                 // Method spread:(I)I
      17: istore_2
      18: aload_0
      19: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      22: arraylength
      23: istore_3
      24: iload_2
      25: iload_3
      26: invokestatic  #21                 // Method index:(II)I
      29: istore        4
      31: aload_0
      32: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      35: iload         4
      37: aaload
      38: astore        5
      40: aload         5
      42: ifnull        85
      45: aload         5
      47: getfield      #22                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.hash:I
      50: iload_2
      51: if_icmpne     75
      54: aload_0
      55: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      58: aload         5
      60: getfield      #23                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.key:Ljava/lang/Object;
      63: aload_1
      64: invokeinterface #24,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      69: ifeq          75
      72: aload         5
      74: areturn
      75: aload         5
      77: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      80: astore        5
      82: goto          40
      85: aconst_null
      86: areturn

  public V put(K, V);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
       8: astore_3
       9: aload_0
      10: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      13: aload_1
      14: invokeinterface #19,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      19: invokestatic  #20                 // Method spread:(I)I
      22: istore        4
      24: aload_3
      25: arraylength
      26: istore        5
      28: iload         4
      30: iload         5
      32: invokestatic  #21                 // Method index:(II)I
      35: istore        6
      37: aload_3
      38: iload         6
      40: aaload
      41: astore        7
      43: aload         7
      45: ifnull        104
      48: aload         7
      50: getfield      #22                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.hash:I
      53: iload         4
      55: if_icmpne     94
      58: aload_0
      59: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      62: aload         7
      64: getfield      #23                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.key:Ljava/lang/Object;
      67: aload_1
      68: invokeinterface #24,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      73: ifeq          94
      76: aload         7
      78: getfield      #26                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.value:Ljava/lang/Object;
      81: astore        8
      83: aload         7
      85: aload_2
      86: aload_0
      87: invokevirtual #28                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$Node.setValue:(Ljava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap;)Ljava/lang/Object;
      90: pop
      91: aload         8
      93: areturn
      94: aload         7
      96: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      99: astore        7
     101: goto          43
     104: aload_0
     105: dup
     106: getfield      #29                 // Field modCount:I
     109: iconst_1
     110: iadd
     111: putfield      #29                 // Field modCount:I
     114: aload_0
     115: iload         6
     117: aload_1
     118: aload_2
     119: iload         4
     121: invokevirtual #30                 // Method addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
     124: aconst_null
     125: areturn

  void addEntry(int, K, V, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #14                 // Field size:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #14                 // Field size:I
      11: aload_0
      12: getfield      #10                 // Field threshold:I
      15: if_icmplt     49
      18: aload_0
      19: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      22: iload_1
      23: aaload
      24: ifnull        49
      27: aload_0
      28: aload_0
      29: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      32: arraylength
      33: iconst_1
      34: ishl
      35: invokevirtual #31                 // Method resize:(I)V
      38: iload         4
      40: aload_0
      41: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      44: arraylength
      45: invokestatic  #21                 // Method index:(II)I
      48: istore_1
      49: aload_0
      50: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      53: iload_1
      54: aaload
      55: astore        5
      57: aload_0
      58: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      61: iload_1
      62: aload_0
      63: aload_2
      64: aload_3
      65: iload         4
      67: aload         5
      69: invokevirtual #32                 // Method createNode:(Ljava/lang/Object;Ljava/lang/Object;ILorg/infinispan/commons/equivalence/EquivalentHashMap$Node;)Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      72: aastore
      73: return

  org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V> createNode(K, V, int, org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V>);
    Code:
       0: new           #11                 // class org/infinispan/commons/equivalence/EquivalentHashMap$Node
       3: dup
       4: aload_1
       5: iload_3
       6: aload_2
       7: aload         4
       9: invokespecial #33                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$Node."<init>":(Ljava/lang/Object;ILjava/lang/Object;Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;)V
      12: areturn

  void resize(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iload_3
       9: ldc           #34                 // int 1073741824
      11: if_icmpne     21
      14: aload_0
      15: ldc           #36                 // int 2147483647
      17: putfield      #10                 // Field threshold:I
      20: return
      21: iload_1
      22: anewarray     #11                 // class org/infinispan/commons/equivalence/EquivalentHashMap$Node
      25: astore        4
      27: aload_0
      28: aload         4
      30: invokevirtual #37                 // Method transfer:([Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;)V
      33: aload_0
      34: aload         4
      36: putfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      39: aload_0
      40: iload_1
      41: i2f
      42: aload_0
      43: getfield      #9                  // Field loadFactor:F
      46: fmul
      47: ldc           #38                 // float 1.07374182E9f
      49: invokestatic  #39                 // Method java/lang/Math.min:(FF)F
      52: f2i
      53: putfield      #10                 // Field threshold:I
      56: return

  void transfer(org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V>[]);
    Code:
       0: aload_1
       1: arraylength
       2: istore_2
       3: aload_0
       4: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     91
      22: aload_3
      23: iload         5
      25: aaload
      26: astore        6
      28: aload         6
      30: ifnull        85
      33: aload         6
      35: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      38: astore        7
      40: aload_0
      41: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      44: aload         6
      46: getfield      #23                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.key:Ljava/lang/Object;
      49: invokeinterface #19,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      54: invokestatic  #20                 // Method spread:(I)I
      57: iload_2
      58: invokestatic  #21                 // Method index:(II)I
      61: istore        8
      63: aload         6
      65: aload_1
      66: iload         8
      68: aaload
      69: putfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      72: aload_1
      73: iload         8
      75: aload         6
      77: aastore
      78: aload         7
      80: astore        6
      82: goto          28
      85: iinc          5, 1
      88: goto          15
      91: return

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method removeNode:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #11                 // class org/infinispan/commons/equivalence/EquivalentHashMap$Node
       8: astore_2
       9: aload_2
      10: ifnonnull     17
      13: aconst_null
      14: goto          21
      17: aload_2
      18: getfield      #26                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.value:Ljava/lang/Object;
      21: areturn

  <T> T removeNode(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method assertKeyNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: aload_0
      13: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      16: aload_1
      17: invokeinterface #19,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      22: invokestatic  #20                 // Method spread:(I)I
      25: istore        4
      27: iload         4
      29: iload_3
      30: invokestatic  #21                 // Method index:(II)I
      33: istore        5
      35: aload_2
      36: iload         5
      38: aaload
      39: astore        6
      41: aconst_null
      42: astore        7
      44: aload         6
      46: ifnull        141
      49: aload         6
      51: getfield      #22                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.hash:I
      54: iload         4
      56: if_icmpne     127
      59: aload_0
      60: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      63: aload         6
      65: getfield      #23                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.key:Ljava/lang/Object;
      68: aload_1
      69: invokeinterface #24,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      74: ifeq          127
      77: aload         7
      79: ifnull        95
      82: aload         7
      84: aload         6
      86: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      89: putfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      92: goto          104
      95: aload_2
      96: iload         5
      98: aload         6
     100: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
     103: aastore
     104: aload_0
     105: dup
     106: getfield      #29                 // Field modCount:I
     109: iconst_1
     110: iadd
     111: putfield      #29                 // Field modCount:I
     114: aload_0
     115: dup
     116: getfield      #14                 // Field size:I
     119: iconst_1
     120: isub
     121: putfield      #14                 // Field size:I
     124: aload         6
     126: areturn
     127: aload         6
     129: astore        7
     131: aload         6
     133: getfield      #25                 // Field org/infinispan/commons/equivalence/EquivalentHashMap$Node.next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
     136: astore        6
     138: goto          44
     141: aconst_null
     142: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Map.size:()I
       6: istore_2
       7: iload_2
       8: ifne          12
      11: return
      12: iload_2
      13: aload_0
      14: getfield      #10                 // Field threshold:I
      17: if_icmple     52
      20: iload_2
      21: ldc           #34                 // int 1073741824
      23: if_icmple     29
      26: ldc           #34                 // int 1073741824
      28: istore_2
      29: aload_0
      30: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      33: arraylength
      34: istore_3
      35: iload_3
      36: iload_2
      37: if_icmpge     47
      40: iload_3
      41: iconst_1
      42: ishl
      43: istore_3
      44: goto          35
      47: aload_0
      48: iload_3
      49: invokevirtual #31                 // Method resize:(I)V
      52: aload_1
      53: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      58: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      63: astore_3
      64: aload_3
      65: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          106
      73: aload_3
      74: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #45                 // class java/util/Map$Entry
      82: astore        4
      84: aload_0
      85: aload         4
      87: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      92: aload         4
      94: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      99: invokevirtual #48                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: goto          64
     106: return

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: getfield      #29                 // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #29                 // Field modCount:I
      10: aload_0
      11: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      14: astore_1
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_1
      19: arraylength
      20: if_icmpge     33
      23: aload_1
      24: iload_2
      25: aconst_null
      26: aastore
      27: iinc          2, 1
      30: goto          17
      33: aload_0
      34: iconst_0
      35: putfield      #14                 // Field size:I
      38: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #49                 // class java/util/Map
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #49                 // class java/util/Map
      20: astore_2
      21: aload_2
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Map.size:()I
      27: aload_0
      28: invokevirtual #50                 // Method size:()I
      31: if_icmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: invokevirtual #51                 // Method entrySet:()Ljava/util/Set;
      40: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      45: astore_3
      46: aload_3
      47: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          140
      55: aload_3
      56: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #45                 // class java/util/Map$Entry
      64: astore        4
      66: aload         4
      68: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      73: astore        5
      75: aload         4
      77: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: astore        6
      84: aload         6
      86: ifnonnull     113
      89: aload_2
      90: aload         5
      92: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: ifnonnull     111
     100: aload_2
     101: aload         5
     103: invokeinterface #53,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     108: ifne          137
     111: iconst_0
     112: ireturn
     113: aload_0
     114: getfield      #2                  // Field valueEq:Lorg/infinispan/commons/equivalence/Equivalence;
     117: aload         6
     119: aload_2
     120: aload         5
     122: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     127: invokeinterface #24,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     132: ifne          137
     135: iconst_0
     136: ireturn
     137: goto          46
     140: goto          149
     143: astore_3
     144: iconst_0
     145: ireturn
     146: astore_3
     147: iconst_0
     148: ireturn
     149: iconst_1
     150: ireturn
    Exception table:
       from    to  target type
          36   112   143   Class java/lang/ClassCastException
         113   136   143   Class java/lang/ClassCastException
         137   140   143   Class java/lang/ClassCastException
          36   112   146   Class java/lang/NullPointerException
         113   136   146   Class java/lang/NullPointerException
         137   140   146   Class java/lang/NullPointerException

  public org.infinispan.commons.equivalence.Equivalence<? super K> getKeyEquivalence();
    Code:
       0: aload_0
       1: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
       4: areturn

  public org.infinispan.commons.equivalence.Equivalence<? super V> getValueEquivalence();
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueEq:Lorg/infinispan/commons/equivalence/Equivalence;
       4: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #56                 // Field keySet:Ljava/util/Set;
       4: ifnonnull     20
       7: aload_0
       8: new           #57                 // class org/infinispan/commons/equivalence/EquivalentHashMap$KeySet
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #58                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$KeySet."<init>":(Lorg/infinispan/commons/equivalence/EquivalentHashMap;Lorg/infinispan/commons/equivalence/EquivalentHashMap$1;)V
      17: putfield      #56                 // Field keySet:Ljava/util/Set;
      20: aload_0
      21: getfield      #56                 // Field keySet:Ljava/util/Set;
      24: areturn

  java.util.Iterator<K> newKeyIterator();
    Code:
       0: new           #59                 // class org/infinispan/commons/equivalence/EquivalentHashMap$KeyIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #60                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$KeyIterator."<init>":(Lorg/infinispan/commons/equivalence/EquivalentHashMap;Lorg/infinispan/commons/equivalence/EquivalentHashMap$1;)V
       9: areturn

  java.util.Iterator<V> newValueIterator();
    Code:
       0: new           #61                 // class org/infinispan/commons/equivalence/EquivalentHashMap$ValueIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #62                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$ValueIterator."<init>":(Lorg/infinispan/commons/equivalence/EquivalentHashMap;Lorg/infinispan/commons/equivalence/EquivalentHashMap$1;)V
       9: areturn

  java.util.Iterator<java.util.Map$Entry<K, V>> newEntryIterator();
    Code:
       0: new           #63                 // class org/infinispan/commons/equivalence/EquivalentHashMap$EntryIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #64                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$EntryIterator."<init>":(Lorg/infinispan/commons/equivalence/EquivalentHashMap;Lorg/infinispan/commons/equivalence/EquivalentHashMap$1;)V
       9: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #65                 // Field values:Ljava/util/Collection;
       4: ifnonnull     19
       7: aload_0
       8: new           #66                 // class org/infinispan/commons/equivalence/EquivalentHashMap$Values
      11: dup
      12: aload_0
      13: invokespecial #67                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$Values."<init>":(Lorg/infinispan/commons/equivalence/EquivalentHashMap;)V
      16: putfield      #65                 // Field values:Ljava/util/Collection;
      19: aload_0
      20: getfield      #65                 // Field values:Ljava/util/Collection;
      23: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #68                 // Field entrySet:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: new           #69                 // class org/infinispan/commons/equivalence/EquivalentHashMap$EntrySet
      11: dup
      12: aload_0
      13: invokespecial #70                 // Method org/infinispan/commons/equivalence/EquivalentHashMap$EntrySet."<init>":(Lorg/infinispan/commons/equivalence/EquivalentHashMap;)V
      16: putfield      #68                 // Field entrySet:Ljava/util/Set;
      19: aload_0
      20: getfield      #68                 // Field entrySet:Ljava/util/Set;
      23: areturn

  private static int spread(int);
    Code:
       0: iload_0
       1: iload_0
       2: bipush        20
       4: iushr
       5: iload_0
       6: bipush        12
       8: iushr
       9: ixor
      10: ixor
      11: istore_0
      12: iload_0
      13: iload_0
      14: bipush        7
      16: iushr
      17: ixor
      18: iload_0
      19: iconst_4
      20: iushr
      21: ixor
      22: ireturn

  private static int index(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iconst_1
       3: isub
       4: iand
       5: ireturn

  static org.infinispan.commons.equivalence.Equivalence access$000(org.infinispan.commons.equivalence.EquivalentHashMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
       4: areturn

  static org.infinispan.commons.equivalence.Equivalence access$100(org.infinispan.commons.equivalence.EquivalentHashMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueEq:Lorg/infinispan/commons/equivalence/Equivalence;
       4: areturn

  static org.infinispan.commons.equivalence.EquivalentHashMap$Node[] access$600(org.infinispan.commons.equivalence.EquivalentHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field table:[Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
       4: areturn
}
