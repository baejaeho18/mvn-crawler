Compiled from "EquivalentHashMap.java"
public class org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V> implements java.util.Map$Entry<K, V> {
  final K key;

  final int hash;

  V value;

  org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V> next;

  protected org.infinispan.commons.equivalence.EquivalentHashMap$Node(K, int, V, org.infinispan.commons.equivalence.EquivalentHashMap$Node<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field key:Ljava/lang/Object;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field hash:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field value:Ljava/lang/Object;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field next:Lorg/infinispan/commons/equivalence/EquivalentHashMap$Node;
      25: return

  public K getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: areturn

  public V getValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: areturn

  public V setValue(V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #4                  // Field value:Ljava/lang/Object;
      10: aload_2
      11: areturn

  protected V setValue(V, org.infinispan.commons.equivalence.EquivalentHashMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method setValue:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn
}
