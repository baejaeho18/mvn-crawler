Compiled from "EquivalentConcurrentHashMapV8.java"
final class org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$KeySpliterator<K, V> extends org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Traverser<K, V> implements org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$ConcurrentHashMapSpliterator<K> {
  long est;

  org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$KeySpliterator(org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$Node<K, V>[], int, int, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #1                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Traverser."<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;III)V
       9: aload_0
      10: lload         5
      12: putfield      #2                  // Field est:J
      15: return

  public org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8$ConcurrentHashMapSpliterator<K> trySplit();
    Code:
       0: aload_0
       1: getfield      #3                  // Field baseIndex:I
       4: dup
       5: istore_1
       6: aload_0
       7: getfield      #4                  // Field baseLimit:I
      10: dup
      11: istore_2
      12: iadd
      13: iconst_1
      14: iushr
      15: dup
      16: istore_3
      17: iload_1
      18: if_icmpgt     25
      21: aconst_null
      22: goto          58
      25: new           #5                  // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$KeySpliterator
      28: dup
      29: aload_0
      30: getfield      #6                  // Field tab:[Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      33: aload_0
      34: getfield      #7                  // Field baseSize:I
      37: aload_0
      38: iload_3
      39: dup_x1
      40: putfield      #4                  // Field baseLimit:I
      43: iload_2
      44: aload_0
      45: dup
      46: getfield      #2                  // Field est:J
      49: iconst_1
      50: lushr
      51: dup2_x1
      52: putfield      #2                  // Field est:J
      55: invokespecial #8                  // Method "<init>":([Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;IIIJ)V
      58: areturn

  public void forEachRemaining(java.util.function.Consumer<? super K>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #9                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #10                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #11                 // Method advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      16: dup
      17: astore_2
      18: ifnull        34
      21: aload_1
      22: aload_2
      23: getfield      #12                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      26: invokeinterface #13,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      31: goto          12
      34: return

  public boolean tryAdvance(java.util.function.Consumer<? super K>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #9                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #10                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #11                 // Method advance:()Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node;
      16: dup
      17: astore_2
      18: ifnonnull     23
      21: iconst_0
      22: ireturn
      23: aload_1
      24: aload_2
      25: getfield      #12                 // Field org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8$Node.key:Ljava/lang/Object;
      28: invokeinterface #13,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      33: iconst_1
      34: ireturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field est:J
       4: lreturn
}
