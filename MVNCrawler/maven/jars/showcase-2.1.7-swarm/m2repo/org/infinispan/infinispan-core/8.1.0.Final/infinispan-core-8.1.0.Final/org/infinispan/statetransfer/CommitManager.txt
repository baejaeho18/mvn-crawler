Compiled from "CommitManager.java"
public class org.infinispan.statetransfer.CommitManager {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private final org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8<java.lang.Object, org.infinispan.statetransfer.CommitManager$DiscardPolicy> tracker;

  private org.infinispan.container.DataContainer dataContainer;

  private volatile boolean trackStateTransfer;

  private volatile boolean trackXSiteStateTransfer;

  public org.infinispan.statetransfer.CommitManager(org.infinispan.commons.equivalence.Equivalence<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8
       8: dup
       9: aload_1
      10: invokestatic  #3                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      13: invokespecial #4                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8."<init>":(Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      16: putfield      #5                  // Field tracker:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      19: return

  public final void inject(org.infinispan.container.DataContainer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
       5: return

  public final void startTrack(org.infinispan.context.Flag);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #7                  // Method setTrack:(Lorg/infinispan/context/Flag;Z)V
       6: return

  public final void stopTrack(org.infinispan.context.Flag);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #7                  // Method setTrack:(Lorg/infinispan/context/Flag;Z)V
       6: aload_0
       7: getfield      #8                  // Field trackStateTransfer:Z
      10: ifne          50
      13: aload_0
      14: getfield      #9                  // Field trackXSiteStateTransfer:Z
      17: ifne          50
      20: getstatic     #10                 // Field trace:Z
      23: ifeq          40
      26: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      29: ldc           #12                 // String Tracking is disabled. Clear tracker: %s
      31: aload_0
      32: getfield      #5                  // Field tracker:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      35: invokeinterface #13,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #5                  // Field tracker:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      44: invokevirtual #14                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.clear:()V
      47: goto          112
      50: aload_0
      51: getfield      #5                  // Field tracker:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      54: invokevirtual #15                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.entrySet:()Ljava/util/Set;
      57: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      62: astore_2
      63: aload_2
      64: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          112
      72: aload_2
      73: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #19                 // class java/util/Map$Entry
      81: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      86: checkcast     #21                 // class org/infinispan/statetransfer/CommitManager$DiscardPolicy
      89: aload_0
      90: getfield      #8                  // Field trackStateTransfer:Z
      93: aload_0
      94: getfield      #9                  // Field trackXSiteStateTransfer:Z
      97: invokevirtual #22                 // Method org/infinispan/statetransfer/CommitManager$DiscardPolicy.update:(ZZ)Z
     100: ifeq          63
     103: aload_2
     104: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.remove:()V
     109: goto          63
     112: return

  public final void commit(org.infinispan.container.entries.CacheEntry, org.infinispan.metadata.Metadata, org.infinispan.context.Flag, boolean);
    Code:
       0: getstatic     #10                 // Field trace:Z
       3: ifeq          28
       6: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #24                 // String Trying to commit. Key=%s. Operation Flag=%s, L1 invalidation=%s
      11: aload_1
      12: invokeinterface #25,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      17: aload_3
      18: iload         4
      20: invokestatic  #26                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      23: invokeinterface #27,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      28: iload         4
      30: ifne          51
      33: aload_3
      34: ifnonnull     85
      37: aload_0
      38: getfield      #8                  // Field trackStateTransfer:Z
      41: ifne          85
      44: aload_0
      45: getfield      #9                  // Field trackXSiteStateTransfer:Z
      48: ifne          85
      51: getstatic     #10                 // Field trace:Z
      54: ifeq          73
      57: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      60: ldc           #28                 // String Committing key=%s. It is a L1 invalidation or a normal put and no tracking is enabled!
      62: aload_1
      63: invokeinterface #25,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      68: invokeinterface #13,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      73: aload_1
      74: aload_0
      75: getfield      #6                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
      78: aload_2
      79: invokeinterface #29,  3           // InterfaceMethod org/infinispan/container/entries/CacheEntry.commit:(Lorg/infinispan/container/DataContainer;Lorg/infinispan/metadata/Metadata;)V
      84: return
      85: aload_0
      86: aload_3
      87: invokespecial #30                 // Method isTrackDisabled:(Lorg/infinispan/context/Flag;)Z
      90: ifeq          116
      93: getstatic     #10                 // Field trace:Z
      96: ifeq          115
      99: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
     102: ldc           #31                 // String Not committing key=%s. It is a state transfer key but no track is enabled!
     104: aload_1
     105: invokeinterface #25,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
     110: invokeinterface #13,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     115: return
     116: aload_0
     117: getfield      #5                  // Field tracker:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
     120: aload_1
     121: invokeinterface #25,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
     126: aload_0
     127: aload_3
     128: aload_1
     129: aload_2
     130: invokedynamic #32,  0             // InvokeDynamic #0:apply:(Lorg/infinispan/statetransfer/CommitManager;Lorg/infinispan/context/Flag;Lorg/infinispan/container/entries/CacheEntry;Lorg/infinispan/metadata/Metadata;)Ljava/util/function/BiFunction;
     135: invokevirtual #33                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
     138: pop
     139: return

  public final boolean isTracking(org.infinispan.context.Flag);
    Code:
       0: getstatic     #34                 // Field org/infinispan/statetransfer/CommitManager$1.$SwitchMap$org$infinispan$context$Flag:[I
       3: aload_1
       4: invokevirtual #35                 // Method org/infinispan/context/Flag.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 41
               default: 46
          }
      36: aload_0
      37: getfield      #8                  // Field trackStateTransfer:Z
      40: ireturn
      41: aload_0
      42: getfield      #9                  // Field trackXSiteStateTransfer:Z
      45: ireturn
      46: iconst_0
      47: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tracker:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       4: invokevirtual #36                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.isEmpty:()Z
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // String CommitManager{tracker=
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field tracker:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      16: invokevirtual #41                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.size:()I
      19: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      22: ldc           #43                 // String  key(s)
      24: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #44                 // String , trackStateTransfer=
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #8                  // Field trackStateTransfer:Z
      36: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      39: ldc           #46                 // String , trackXSiteStateTransfer=
      41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #9                  // Field trackXSiteStateTransfer:Z
      48: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      51: bipush        125
      53: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  private void setTrack(org.infinispan.context.Flag, boolean);
    Code:
       0: getstatic     #10                 // Field trace:Z
       3: ifeq          21
       6: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #49                 // String Set track to %s = %s
      11: aload_1
      12: iload_2
      13: invokestatic  #26                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      16: invokeinterface #50,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: getstatic     #34                 // Field org/infinispan/statetransfer/CommitManager$1.$SwitchMap$org$infinispan$context$Flag:[I
      24: aload_1
      25: invokevirtual #35                 // Method org/infinispan/context/Flag.ordinal:()I
      28: iaload
      29: lookupswitch  { // 2
                     1: 56
                     2: 64
               default: 69
          }
      56: aload_0
      57: iload_2
      58: putfield      #8                  // Field trackStateTransfer:Z
      61: goto          69
      64: aload_0
      65: iload_2
      66: putfield      #9                  // Field trackXSiteStateTransfer:Z
      69: return

  private boolean isTrackDisabled(org.infinispan.context.Flag);
    Code:
       0: aload_1
       1: getstatic     #51                 // Field org/infinispan/context/Flag.PUT_FOR_STATE_TRANSFER:Lorg/infinispan/context/Flag;
       4: if_acmpne     14
       7: aload_0
       8: getfield      #8                  // Field trackStateTransfer:Z
      11: ifeq          28
      14: aload_1
      15: getstatic     #52                 // Field org/infinispan/context/Flag.PUT_FOR_X_SITE_STATE_TRANSFER:Lorg/infinispan/context/Flag;
      18: if_acmpne     32
      21: aload_0
      22: getfield      #9                  // Field trackXSiteStateTransfer:Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private org.infinispan.statetransfer.CommitManager$DiscardPolicy calculateDiscardPolicy();
    Code:
       0: aload_0
       1: getfield      #9                  // Field trackXSiteStateTransfer:Z
       4: ifne          16
       7: aload_0
       8: getfield      #8                  // Field trackStateTransfer:Z
      11: ifne          16
      14: aconst_null
      15: areturn
      16: new           #21                 // class org/infinispan/statetransfer/CommitManager$DiscardPolicy
      19: dup
      20: aload_0
      21: getfield      #8                  // Field trackStateTransfer:Z
      24: aload_0
      25: getfield      #9                  // Field trackXSiteStateTransfer:Z
      28: aconst_null
      29: invokespecial #53                 // Method org/infinispan/statetransfer/CommitManager$DiscardPolicy."<init>":(ZZLorg/infinispan/statetransfer/CommitManager$1;)V
      32: areturn

  private org.infinispan.statetransfer.CommitManager$DiscardPolicy lambda$commit$29(org.infinispan.context.Flag, org.infinispan.container.entries.CacheEntry, org.infinispan.metadata.Metadata, java.lang.Object, org.infinispan.statetransfer.CommitManager$DiscardPolicy);
    Code:
       0: aload         5
       2: ifnull        41
       5: aload         5
       7: aload_1
       8: invokevirtual #54                 // Method org/infinispan/statetransfer/CommitManager$DiscardPolicy.ignore:(Lorg/infinispan/context/Flag;)Z
      11: ifeq          41
      14: getstatic     #10                 // Field trace:Z
      17: ifeq          38
      20: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      23: ldc           #55                 // String Not committing key=%s. It was already overwritten! Discard policy=%s
      25: aload_2
      26: invokeinterface #25,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      31: aload         5
      33: invokeinterface #50,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload         5
      40: areturn
      41: aload_2
      42: aload_0
      43: getfield      #6                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
      46: aload_3
      47: invokeinterface #29,  3           // InterfaceMethod org/infinispan/container/entries/CacheEntry.commit:(Lorg/infinispan/container/DataContainer;Lorg/infinispan/metadata/Metadata;)V
      52: aload_0
      53: invokespecial #56                 // Method calculateDiscardPolicy:()Lorg/infinispan/statetransfer/CommitManager$DiscardPolicy;
      56: astore        6
      58: getstatic     #10                 // Field trace:Z
      61: ifeq          84
      64: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      67: ldc           #57                 // String Committed key=%s. Old discard policy=%s. New discard policy=%s
      69: aload_2
      70: invokeinterface #25,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      75: aload         5
      77: aload         6
      79: invokeinterface #27,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      84: aload         6
      86: areturn

  static {};
    Code:
       0: ldc           #58                 // class org/infinispan/statetransfer/CommitManager
       2: invokestatic  #59                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #60,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #10                 // Field trace:Z
      19: return
}
