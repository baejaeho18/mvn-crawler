Compiled from "BatchingInterceptor.java"
public class org.infinispan.interceptors.BatchingInterceptor extends org.infinispan.interceptors.base.CommandInterceptor {
  private org.infinispan.batch.BatchContainer batchContainer;

  private javax.transaction.TransactionManager transactionManager;

  private org.infinispan.context.InvocationContextFactory invocationContextFactory;

  private static final org.infinispan.util.logging.Log log;

  public org.infinispan.interceptors.BatchingInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/interceptors/base/CommandInterceptor."<init>":()V
       4: return

  protected org.infinispan.util.logging.Log getLog();
    Code:
       0: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  private void inject(org.infinispan.batch.BatchContainer, javax.transaction.TransactionManager, org.infinispan.context.InvocationContextFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field batchContainer:Lorg/infinispan/batch/BatchContainer;
       5: aload_0
       6: aload_2
       7: putfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      10: aload_0
      11: aload_3
      12: putfield      #5                  // Field invocationContextFactory:Lorg/infinispan/context/InvocationContextFactory;
      15: return

  public java.lang.Object visitEvictCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.EvictCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #6                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: areturn

  protected java.lang.Object handleDefault(org.infinispan.context.InvocationContext, org.infinispan.commands.VisitableCommand) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/infinispan/context/InvocationContext.isOriginLocal:()Z
       6: ifne          16
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #6                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      15: areturn
      16: aload_0
      17: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      20: invokeinterface #8,  1            // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      25: ifnonnull     40
      28: aload_0
      29: getfield      #3                  // Field batchContainer:Lorg/infinispan/batch/BatchContainer;
      32: invokevirtual #9                  // Method org/infinispan/batch/BatchContainer.getBatchTransaction:()Ljavax/transaction/Transaction;
      35: dup
      36: astore_3
      37: ifnonnull     47
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokevirtual #6                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      46: areturn
      47: aload_0
      48: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      51: aload_3
      52: invokeinterface #10,  2           // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
      57: aload_1
      58: astore        4
      60: aload_1
      61: invokeinterface #11,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isInTxScope:()Z
      66: ifne          93
      69: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
      72: ldc           #12                 // String Called with a non-tx invocation context: %s
      74: aload_1
      75: invokeinterface #13,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      80: aload_0
      81: getfield      #5                  // Field invocationContextFactory:Lorg/infinispan/context/InvocationContextFactory;
      84: iconst_1
      85: iconst_m1
      86: invokeinterface #14,  3           // InterfaceMethod org/infinispan/context/InvocationContextFactory.createInvocationContext:(ZI)Lorg/infinispan/context/InvocationContext;
      91: astore        4
      93: aload_0
      94: aload         4
      96: aload_2
      97: invokevirtual #6                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
     100: astore        5
     102: aload_0
     103: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
     106: invokeinterface #8,  1            // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
     111: ifnull        134
     114: aload_0
     115: getfield      #3                  // Field batchContainer:Lorg/infinispan/batch/BatchContainer;
     118: invokevirtual #15                 // Method org/infinispan/batch/BatchContainer.isSuspendTxAfterInvocation:()Z
     121: ifeq          134
     124: aload_0
     125: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
     128: invokeinterface #16,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
     133: pop
     134: aload         5
     136: areturn
     137: astore        6
     139: aload_0
     140: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
     143: invokeinterface #8,  1            // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
     148: ifnull        171
     151: aload_0
     152: getfield      #3                  // Field batchContainer:Lorg/infinispan/batch/BatchContainer;
     155: invokevirtual #15                 // Method org/infinispan/batch/BatchContainer.isSuspendTxAfterInvocation:()Z
     158: ifeq          171
     161: aload_0
     162: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
     165: invokeinterface #16,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
     170: pop
     171: aload         6
     173: athrow
    Exception table:
       from    to  target type
          47   102   137   any
         137   139   137   any

  static {};
    Code:
       0: ldc           #17                 // class org/infinispan/interceptors/BatchingInterceptor
       2: invokestatic  #18                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
