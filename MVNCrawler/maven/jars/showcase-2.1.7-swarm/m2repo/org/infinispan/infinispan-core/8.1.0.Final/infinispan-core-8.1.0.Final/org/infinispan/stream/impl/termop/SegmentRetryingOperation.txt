Compiled from "SegmentRetryingOperation.java"
public class org.infinispan.stream.impl.termop.SegmentRetryingOperation<E, T, S extends java.util.stream.BaseStream<T, S>> extends org.infinispan.stream.impl.termop.BaseTerminalOperation implements org.infinispan.stream.impl.TerminalOperation<E> {
  private static final org.infinispan.util.logging.Log log;

  private static final java.util.stream.BaseStream<?, ?> EMPTY;

  private final java.util.function.Function<S, ? extends E> function;

  private transient java.util.concurrent.atomic.AtomicReference<java.util.stream.BaseStream<?, ?>> streamRef;

  private transient java.util.concurrent.atomic.AtomicBoolean continueTrying;

  public org.infinispan.stream.impl.termop.SegmentRetryingOperation(java.lang.Iterable<org.infinispan.stream.impl.intops.IntermediateOperation>, java.util.function.Supplier<? extends java.util.stream.Stream<?>>, java.util.function.Function<S, ? extends E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/infinispan/stream/impl/termop/BaseTerminalOperation."<init>":(Ljava/lang/Iterable;Ljava/util/function/Supplier;)V
       6: aload_0
       7: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      10: dup
      11: getstatic     #3                  // Field EMPTY:Ljava/util/stream/BaseStream;
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      17: putfield      #5                  // Field streamRef:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      24: dup
      25: iconst_1
      26: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      29: putfield      #8                  // Field continueTrying:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: aload_0
      33: aload_3
      34: putfield      #9                  // Field function:Ljava/util/function/Function;
      37: return

  public boolean lostSegment(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field streamRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class java/util/stream/BaseStream
      10: astore_2
      11: aload_0
      12: getfield      #8                  // Field continueTrying:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: iload_1
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      27: aload_2
      28: ifnull        68
      31: aload_2
      32: getstatic     #3                  // Field EMPTY:Ljava/util/stream/BaseStream;
      35: if_acmpeq     63
      38: aload_0
      39: getfield      #5                  // Field streamRef:Ljava/util/concurrent/atomic/AtomicReference;
      42: aload_2
      43: getstatic     #3                  // Field EMPTY:Ljava/util/stream/BaseStream;
      46: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: dup
      50: istore_3
      51: ifeq          70
      54: aload_2
      55: invokeinterface #14,  1           // InterfaceMethod java/util/stream/BaseStream.close:()V
      60: goto          70
      63: iconst_1
      64: istore_3
      65: goto          70
      68: iconst_0
      69: istore_3
      70: iload_3
      71: ireturn

  private E innerPerformOperation(java.util.stream.BaseStream<?, ?>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field intermediateOperations:Ljava/lang/Iterable;
       4: invokeinterface #16,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_2
      20: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #19                 // class org/infinispan/stream/impl/intops/IntermediateOperation
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #20,  2           // InterfaceMethod org/infinispan/stream/impl/intops/IntermediateOperation.perform:(Ljava/util/stream/BaseStream;)Ljava/util/stream/BaseStream;
      36: astore_1
      37: goto          10
      40: aload_0
      41: getfield      #9                  // Field function:Ljava/util/function/Function;
      44: aload_1
      45: invokeinterface #21,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      50: areturn

  public E performOperation();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #22                 // Field supplier:Ljava/util/function/Supplier;
       6: invokeinterface #23,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      11: checkcast     #11                 // class java/util/stream/BaseStream
      14: astore_2
      15: aload_0
      16: getfield      #5                  // Field streamRef:Ljava/util/concurrent/atomic/AtomicReference;
      19: aload_2
      20: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      23: aload_0
      24: aload_2
      25: invokespecial #25                 // Method innerPerformOperation:(Ljava/util/stream/BaseStream;)Ljava/lang/Object;
      28: astore_3
      29: getstatic     #26                 // Field log:Lorg/infinispan/util/logging/Log;
      32: ldc           #27                 // String Completed an operation, trying to see if we are done.
      34: invokeinterface #28,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #5                  // Field streamRef:Ljava/util/concurrent/atomic/AtomicReference;
      43: aload_2
      44: aconst_null
      45: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          63
      51: aload_0
      52: getfield      #8                  // Field continueTrying:Ljava/util/concurrent/atomic/AtomicBoolean;
      55: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      58: dup
      59: istore_1
      60: ifne          2
      63: getstatic     #26                 // Field log:Lorg/infinispan/util/logging/Log;
      66: new           #30                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #32                 // String Operation now done, due to try denial:
      75: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: iload_1
      79: ifne          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      90: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: iconst_0
      94: anewarray     #36                 // class java/lang/Object
      97: invokeinterface #37,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
     102: iload_1
     103: ifeq          110
     106: aload_3
     107: goto          111
     110: aconst_null
     111: areturn

  public java.util.function.Function<S, ? extends E> getFunction();
    Code:
       0: aload_0
       1: getfield      #9                  // Field function:Ljava/util/function/Function;
       4: areturn

  static {};
    Code:
       0: ldc           #38                 // class org/infinispan/stream/impl/termop/SegmentRetryingOperation
       2: invokestatic  #39                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #26                 // Field log:Lorg/infinispan/util/logging/Log;
       8: invokestatic  #40                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      11: putstatic     #3                  // Field EMPTY:Ljava/util/stream/BaseStream;
      14: return
}
