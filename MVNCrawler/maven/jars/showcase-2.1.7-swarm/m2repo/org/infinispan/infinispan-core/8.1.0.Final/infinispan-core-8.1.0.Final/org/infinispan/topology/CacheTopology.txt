Compiled from "CacheTopology.java"
public class org.infinispan.topology.CacheTopology {
  private static org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private final int topologyId;

  private final int rebalanceId;

  private final org.infinispan.distribution.ch.ConsistentHash currentCH;

  private final org.infinispan.distribution.ch.ConsistentHash pendingCH;

  private final transient org.infinispan.distribution.ch.ConsistentHash unionCH;

  private java.util.List<org.infinispan.remoting.transport.Address> actualMembers;

  public org.infinispan.topology.CacheTopology(int, int, org.infinispan.distribution.ch.ConsistentHash, org.infinispan.distribution.ch.ConsistentHash, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: aload         5
       9: invokespecial #7                  // Method "<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
      12: return

  public org.infinispan.topology.CacheTopology(int, int, org.infinispan.distribution.ch.ConsistentHash, org.infinispan.distribution.ch.ConsistentHash, org.infinispan.distribution.ch.ConsistentHash, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload         4
       6: ifnull        40
       9: aload         4
      11: invokeinterface #9,  1            // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      16: aload_3
      17: invokeinterface #9,  1            // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      22: invokeinterface #10,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      27: ifne          40
      30: new           #11                 // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #12                 // String A cache topology\'s pending consistent hash must contain all the current consistent hash\'s members
      36: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #6                  // Field topologyId:I
      45: aload_0
      46: iload_2
      47: putfield      #5                  // Field rebalanceId:I
      50: aload_0
      51: aload_3
      52: putfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      55: aload_0
      56: aload         4
      58: putfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      61: aload_0
      62: aload         5
      64: putfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      67: aload_0
      68: aload         6
      70: putfield      #1                  // Field actualMembers:Ljava/util/List;
      73: return

  public int getTopologyId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field topologyId:I
       4: ireturn

  public org.infinispan.distribution.ch.ConsistentHash getCurrentCH();
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  public org.infinispan.distribution.ch.ConsistentHash getPendingCH();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  public org.infinispan.distribution.ch.ConsistentHash getUnionCH();
    Code:
       0: aload_0
       1: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  public int getRebalanceId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rebalanceId:I
       4: ireturn

  public java.util.List<org.infinispan.remoting.transport.Address> getMembers();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: ifnull        17
       7: aload_0
       8: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      11: invokeinterface #9,  1            // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      16: areturn
      17: aload_0
      18: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      21: ifnull        34
      24: aload_0
      25: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      28: invokeinterface #9,  1            // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      33: areturn
      34: invokestatic  #14                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
      37: areturn

  public java.util.List<org.infinispan.remoting.transport.Address> getActualMembers();
    Code:
       0: aload_0
       1: getfield      #1                  // Field actualMembers:Ljava/util/List;
       4: areturn

  public org.infinispan.distribution.ch.ConsistentHash getReadConsistentHash();
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  public org.infinispan.distribution.ch.ConsistentHash getWriteConsistentHash();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: ifnull        29
       7: aload_0
       8: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      11: ifnonnull     24
      14: new           #15                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #16                 // String Need a union CH when a pending CH is set
      20: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      28: areturn
      29: aload_0
      30: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      33: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #19                 // class org/infinispan/topology/CacheTopology
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field topologyId:I
      33: aload_2
      34: getfield      #6                  // Field topologyId:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #5                  // Field rebalanceId:I
      46: aload_2
      47: getfield      #5                  // Field rebalanceId:I
      50: if_icmpeq     55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      59: ifnull        79
      62: aload_0
      63: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      66: aload_2
      67: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      70: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifne          88
      76: goto          86
      79: aload_2
      80: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      83: ifnull        88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      92: ifnull        112
      95: aload_0
      96: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      99: aload_2
     100: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
     103: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     106: ifne          121
     109: goto          119
     112: aload_2
     113: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
     116: ifnull        121
     119: iconst_0
     120: ireturn
     121: aload_0
     122: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
     125: ifnull        145
     128: aload_0
     129: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
     132: aload_2
     133: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
     136: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     139: ifne          154
     142: goto          152
     145: aload_2
     146: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
     149: ifnull        154
     152: iconst_0
     153: ireturn
     154: aload_0
     155: getfield      #1                  // Field actualMembers:Ljava/util/List;
     158: ifnull        180
     161: aload_0
     162: getfield      #1                  // Field actualMembers:Ljava/util/List;
     165: aload_2
     166: getfield      #1                  // Field actualMembers:Ljava/util/List;
     169: invokeinterface #21,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     174: ifne          189
     177: goto          187
     180: aload_2
     181: getfield      #1                  // Field actualMembers:Ljava/util/List;
     184: ifnull        189
     187: iconst_0
     188: ireturn
     189: iconst_1
     190: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field topologyId:I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #5                  // Field rebalanceId:I
      13: iadd
      14: istore_1
      15: bipush        31
      17: iload_1
      18: imul
      19: aload_0
      20: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      23: ifnull        36
      26: aload_0
      27: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      30: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      33: goto          37
      36: iconst_0
      37: iadd
      38: istore_1
      39: bipush        31
      41: iload_1
      42: imul
      43: aload_0
      44: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      47: ifnull        60
      50: aload_0
      51: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      54: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      57: goto          61
      60: iconst_0
      61: iadd
      62: istore_1
      63: bipush        31
      65: iload_1
      66: imul
      67: aload_0
      68: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      71: ifnull        84
      74: aload_0
      75: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      78: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      81: goto          85
      84: iconst_0
      85: iadd
      86: istore_1
      87: bipush        31
      89: iload_1
      90: imul
      91: aload_0
      92: getfield      #1                  // Field actualMembers:Ljava/util/List;
      95: ifnull        110
      98: aload_0
      99: getfield      #1                  // Field actualMembers:Ljava/util/List;
     102: invokeinterface #23,  1           // InterfaceMethod java/util/List.hashCode:()I
     107: goto          111
     110: iconst_0
     111: iadd
     112: istore_1
     113: iload_1
     114: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String CacheTopology{id=
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field topologyId:I
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #29                 // String , rebalanceId=
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field rebalanceId:I
      28: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #30                 // String , currentCH=
      33: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #32                 // String , pendingCH=
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      52: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #33                 // String , unionCH=
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      64: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #34                 // String , actualMembers=
      69: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #1                  // Field actualMembers:Ljava/util/List;
      76: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: bipush        125
      81: invokevirtual #35                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      84: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public final void logRoutingTableInformation();
    Code:
       0: getstatic     #37                 // Field trace:Z
       3: ifeq          77
       6: getstatic     #38                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #39                 // String Current consistent hash\'s routing table: %s
      11: aload_0
      12: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      15: invokeinterface #40,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getRoutingTableAsString:()Ljava/lang/String;
      20: invokeinterface #41,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      29: ifnull        51
      32: getstatic     #38                 // Field log:Lorg/infinispan/util/logging/Log;
      35: ldc           #42                 // String Pending consistent hash\'s routing table: %s
      37: aload_0
      38: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      41: invokeinterface #40,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getRoutingTableAsString:()Ljava/lang/String;
      46: invokeinterface #41,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      51: aload_0
      52: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      55: ifnull        77
      58: getstatic     #38                 // Field log:Lorg/infinispan/util/logging/Log;
      61: ldc           #43                 // String Union consistent hash\'s routing table: %s
      63: aload_0
      64: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
      67: invokeinterface #40,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getRoutingTableAsString:()Ljava/lang/String;
      72: invokeinterface #41,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      77: return

  static int access$000(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #6                  // Field topologyId:I
       4: ireturn

  static int access$100(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #5                  // Field rebalanceId:I
       4: ireturn

  static org.infinispan.distribution.ch.ConsistentHash access$200(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  static org.infinispan.distribution.ch.ConsistentHash access$300(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pendingCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  static org.infinispan.distribution.ch.ConsistentHash access$400(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #2                  // Field unionCH:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  static java.util.List access$500(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #1                  // Field actualMembers:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #19                 // class org/infinispan/topology/CacheTopology
       2: invokestatic  #44                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #38                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #38                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #45,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #37                 // Field trace:Z
      19: return
}
