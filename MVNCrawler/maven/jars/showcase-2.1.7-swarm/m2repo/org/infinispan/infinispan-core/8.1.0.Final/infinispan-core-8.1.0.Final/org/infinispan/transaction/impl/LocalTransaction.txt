Compiled from "LocalTransaction.java"
public abstract class org.infinispan.transaction.impl.LocalTransaction extends org.infinispan.transaction.impl.AbstractCacheTransaction {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private java.util.Set<org.infinispan.remoting.transport.Address> remoteLockedNodes;

  private java.util.Set<java.lang.Object> readKeys;

  private final javax.transaction.Transaction transaction;

  private final boolean implicitTransaction;

  private volatile boolean isFromRemoteSite;

  private boolean prepareSent;

  private boolean commitOrRollbackSent;

  public org.infinispan.transaction.impl.LocalTransaction(javax.transaction.Transaction, org.infinispan.transaction.xa.GlobalTransaction, boolean, int, org.infinispan.commons.equivalence.Equivalence<java.lang.Object>, long);
    Code:
       0: aload_0
       1: aload_2
       2: iload         4
       4: aload         5
       6: lload         6
       8: invokespecial #1                  // Method org/infinispan/transaction/impl/AbstractCacheTransaction."<init>":(Lorg/infinispan/transaction/xa/GlobalTransaction;ILorg/infinispan/commons/equivalence/Equivalence;J)V
      11: aload_0
      12: aconst_null
      13: putfield      #2                  // Field readKeys:Ljava/util/Set;
      16: aload_0
      17: aload_1
      18: putfield      #3                  // Field transaction:Ljavax/transaction/Transaction;
      21: aload_0
      22: iload_3
      23: putfield      #4                  // Field implicitTransaction:Z
      26: return

  public final void addModification(org.infinispan.commands.write.WriteCommand);
    Code:
       0: getstatic     #5                  // Field trace:Z
       3: ifeq          21
       6: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #7                  // String Adding modification %s. Mod list is %s
      11: aload_1
      12: aload_0
      13: getfield      #8                  // Field modifications:Ljava/util/List;
      16: invokeinterface #9,  4            // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #8                  // Field modifications:Ljava/util/List;
      25: ifnonnull     42
      28: aload_0
      29: new           #10                 // class java/util/LinkedList
      32: dup
      33: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      36: invokestatic  #12                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      39: putfield      #8                  // Field modifications:Ljava/util/List;
      42: aload_1
      43: getstatic     #13                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
      46: invokeinterface #14,  2           // InterfaceMethod org/infinispan/commands/write/WriteCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      51: ifeq          59
      54: aload_0
      55: iconst_1
      56: putfield      #15                 // Field hasLocalOnlyModifications:Z
      59: aload_0
      60: getfield      #8                  // Field modifications:Ljava/util/List;
      63: aload_1
      64: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: return

  public void locksAcquired(java.util.Collection<org.infinispan.remoting.transport.Address>);
    Code:
       0: getstatic     #5                  // Field trace:Z
       3: ifeq          21
       6: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #17                 // String Adding remote locks on %s. Remote locks are %s
      11: aload_1
      12: aload_0
      13: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
      16: invokeinterface #9,  4            // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
      25: ifnonnull     43
      28: aload_0
      29: new           #19                 // class java/util/HashSet
      32: dup
      33: aload_1
      34: invokespecial #20                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      37: putfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
      40: goto          54
      43: aload_0
      44: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
      47: aload_1
      48: invokeinterface #21,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: return

  public java.util.Collection<org.infinispan.remoting.transport.Address> getRemoteLocksAcquired();
    Code:
       0: aload_0
       1: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
       4: ifnonnull     11
       7: invokestatic  #22                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
      15: areturn

  public void clearRemoteLocksAcquired();
    Code:
       0: aload_0
       1: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
       4: ifnull        16
       7: aload_0
       8: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
      11: invokeinterface #23,  1           // InterfaceMethod java/util/Set.clear:()V
      16: return

  public javax.transaction.Transaction getTransaction();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transaction:Ljavax/transaction/Transaction;
       4: areturn

  public java.util.Map<java.lang.Object, org.infinispan.container.entries.CacheEntry> getLookedUpEntries();
    Code:
       0: aload_0
       1: getfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
       4: ifnonnull     13
       7: invokestatic  #25                 // Method org/infinispan/commons/util/InfinispanCollections.emptyMap:()Ljava/util/Map;
      10: goto          17
      13: aload_0
      14: getfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
      17: areturn

  public boolean isImplicitTransaction();
    Code:
       0: aload_0
       1: getfield      #4                  // Field implicitTransaction:Z
       4: ireturn

  public void putLookedUpEntry(java.lang.Object, org.infinispan.container.entries.CacheEntry);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isMarkedForRollback:()Z
       4: ifeq          17
       7: new           #27                 // class org/infinispan/commons/CacheException
      10: dup
      11: ldc           #28                 // String This transaction is marked for rollback and cannot acquire locks!
      13: invokespecial #29                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
      21: ifnonnull     39
      24: aload_0
      25: iconst_4
      26: aload_0
      27: getfield      #30                 // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      30: invokestatic  #31                 // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      33: invokestatic  #32                 // Method org/infinispan/commons/util/CollectionFactory.makeMap:(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/Map;
      36: putfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
      39: aload_0
      40: getfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
      43: aload_1
      44: aload_2
      45: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: return

  public void putLookedUpEntries(java.util.Map<java.lang.Object, org.infinispan.container.entries.CacheEntry>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isMarkedForRollback:()Z
       4: ifeq          17
       7: new           #27                 // class org/infinispan/commons/CacheException
      10: dup
      11: ldc           #28                 // String This transaction is marked for rollback and cannot acquire locks!
      13: invokespecial #29                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
      21: ifnonnull     42
      24: aload_0
      25: aload_1
      26: aload_0
      27: getfield      #30                 // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      30: invokestatic  #31                 // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      33: invokestatic  #34                 // Method org/infinispan/commons/util/CollectionFactory.makeMap:(Ljava/util/Map;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/Map;
      36: putfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
      39: goto          52
      42: aload_0
      43: getfield      #24                 // Field lookedUpEntries:Ljava/util/Map;
      46: aload_1
      47: invokeinterface #35,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      52: return

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #8                  // Field modifications:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #8                  // Field modifications:Ljava/util/List;
      11: invokeinterface #36,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public abstract boolean isEnlisted();

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #38                 // class org/infinispan/transaction/impl/LocalTransaction
      28: astore_2
      29: aload_0
      30: getfield      #39                 // Field tx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      33: invokevirtual #40                 // Method org/infinispan/transaction/xa/GlobalTransaction.getId:()J
      36: aload_2
      37: getfield      #39                 // Field tx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      40: invokevirtual #40                 // Method org/infinispan/transaction/xa/GlobalTransaction.getId:()J
      43: lcmp
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #39                 // Field tx:Lorg/infinispan/transaction/xa/GlobalTransaction;
       4: invokevirtual #40                 // Method org/infinispan/transaction/xa/GlobalTransaction.getId:()J
       7: lstore_1
       8: lload_1
       9: lload_1
      10: bipush        32
      12: lushr
      13: lxor
      14: l2i
      15: ireturn

  public java.lang.String toString();
    Code:
       0: new           #41                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #43                 // String LocalTransaction{remoteLockedNodes=
       9: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #18                 // Field remoteLockedNodes:Ljava/util/Set;
      16: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #46                 // String , isMarkedForRollback=
      21: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #26                 // Method isMarkedForRollback:()Z
      28: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: ldc           #48                 // String , lockedKeys=
      33: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #49                 // Field lockedKeys:Ljava/util/Set;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #50                 // String , backupKeyLocks=
      45: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #51                 // Field backupKeyLocks:Ljava/util/Set;
      52: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #52                 // String , topologyId=
      57: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #53                 // Field topologyId:I
      64: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #55                 // String , stateTransferFlag=
      69: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #56                 // Method getStateTransferFlag:()Lorg/infinispan/context/Flag;
      76: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #57                 // String }
      81: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokespecial #58                 // Method java/lang/Object.toString:()Ljava/lang/String;
      88: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  public void addReadKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field readKeys:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: new           #19                 // class java/util/HashSet
      11: dup
      12: iconst_2
      13: invokespecial #60                 // Method java/util/HashSet."<init>":(I)V
      16: putfield      #2                  // Field readKeys:Ljava/util/Set;
      19: aload_0
      20: getfield      #2                  // Field readKeys:Ljava/util/Set;
      23: aload_1
      24: invokeinterface #61,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      29: pop
      30: return

  public boolean keyRead(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field readKeys:Ljava/util/Set;
       4: ifnull        24
       7: aload_0
       8: getfield      #2                  // Field readKeys:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #62,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void setStateTransferFlag(org.infinispan.context.Flag);
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getStateTransferFlag:()Lorg/infinispan/context/Flag;
       4: ifnonnull     26
       7: aload_1
       8: getstatic     #63                 // Field org/infinispan/context/Flag.PUT_FOR_STATE_TRANSFER:Lorg/infinispan/context/Flag;
      11: if_acmpeq     21
      14: aload_1
      15: getstatic     #64                 // Field org/infinispan/context/Flag.PUT_FOR_X_SITE_STATE_TRANSFER:Lorg/infinispan/context/Flag;
      18: if_acmpne     26
      21: aload_0
      22: aload_1
      23: invokevirtual #65                 // Method internalSetStateTransferFlag:(Lorg/infinispan/context/Flag;)V
      26: return

  public boolean isFromRemoteSite();
    Code:
       0: aload_0
       1: getfield      #66                 // Field isFromRemoteSite:Z
       4: ireturn

  public void setFromRemoteSite(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field isFromRemoteSite:Z
       5: return

  public java.util.Collection<org.infinispan.remoting.transport.Address> getCommitNodes(java.util.Collection<org.infinispan.remoting.transport.Address>, int, java.util.Collection<org.infinispan.remoting.transport.Address>);
    Code:
       0: getstatic     #5                  // Field trace:Z
       3: ifeq          45
       6: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #67                 // String getCommitNodes recipients=%s, currentTopologyId=%s, members=%s, txTopologyId=%s
      11: iconst_4
      12: anewarray     #68                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_1
      18: aastore
      19: dup
      20: iconst_1
      21: iload_2
      22: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_3
      29: aastore
      30: dup
      31: iconst_3
      32: aload_0
      33: invokevirtual #70                 // Method getTopologyId:()I
      36: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: invokeinterface #71,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      45: aload_0
      46: ldc           #72                 // class org/infinispan/commands/write/ClearCommand
      48: invokevirtual #73                 // Method hasModification:(Ljava/lang/Class;)Z
      51: ifeq          56
      54: aload_3
      55: areturn
      56: aload_1
      57: ifnonnull     62
      60: aconst_null
      61: areturn
      62: aload_0
      63: invokevirtual #70                 // Method getTopologyId:()I
      66: iload_2
      67: if_icmpne     72
      70: aload_1
      71: areturn
      72: new           #19                 // class java/util/HashSet
      75: dup
      76: aload_0
      77: invokevirtual #74                 // Method getRemoteLocksAcquired:()Ljava/util/Collection;
      80: invokespecial #20                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      83: astore        4
      85: aload         4
      87: aload_1
      88: invokeinterface #21,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      93: pop
      94: aload         4
      96: aload_3
      97: invokeinterface #75,  2           // InterfaceMethod java/util/Set.retainAll:(Ljava/util/Collection;)Z
     102: pop
     103: getstatic     #5                  // Field trace:Z
     106: ifeq          121
     109: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
     112: ldc           #76                 // String The merged list of nodes to send commit/rollback is %s
     114: aload         4
     116: invokeinterface #77,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     121: aload         4
     123: areturn

  public final void markPrepareSent();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #78                 // Field prepareSent:Z
       5: return

  public final boolean isPrepareSent();
    Code:
       0: aload_0
       1: getfield      #78                 // Field prepareSent:Z
       4: ireturn

  public final void markCommitOrRollbackSent();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #79                 // Field commitOrRollbackSent:Z
       5: return

  public final boolean isCommitOrRollbackSent();
    Code:
       0: aload_0
       1: getfield      #79                 // Field commitOrRollbackSent:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #38                 // class org/infinispan/transaction/impl/LocalTransaction
       2: invokestatic  #80                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #81,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #5                  // Field trace:Z
      19: return
}
