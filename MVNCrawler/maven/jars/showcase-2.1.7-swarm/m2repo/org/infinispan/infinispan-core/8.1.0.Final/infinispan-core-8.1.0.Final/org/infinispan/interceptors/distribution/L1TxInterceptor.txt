Compiled from "L1TxInterceptor.java"
public class org.infinispan.interceptors.distribution.L1TxInterceptor extends org.infinispan.interceptors.distribution.L1NonTxInterceptor {
  public org.infinispan.interceptors.distribution.L1TxInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/interceptors/distribution/L1NonTxInterceptor."<init>":()V
       4: return

  public java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_1
       5: iconst_1
       6: invokevirtual #2                  // Method performCommandWithL1WriteIfAble:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/DataCommand;ZZZ)Ljava/lang/Object;
       9: areturn

  public java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutMapCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #3                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.ReplaceCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_1
       5: iconst_1
       6: invokevirtual #2                  // Method performCommandWithL1WriteIfAble:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/DataCommand;ZZZ)Ljava/lang/Object;
       9: areturn

  public java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.RemoveCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_1
       5: iconst_0
       6: invokevirtual #2                  // Method performCommandWithL1WriteIfAble:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/DataCommand;ZZZ)Ljava/lang/Object;
       9: areturn

  public java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.PrepareCommand) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method org/infinispan/commands/tx/PrepareCommand.isOnePhaseCommit:()Z
       4: ifeq          24
       7: aload_0
       8: aload_1
       9: invokespecial #5                  // Method shouldFlushL1:(Lorg/infinispan/context/impl/TxInvocationContext;)Z
      12: ifeq          24
      15: aload_0
      16: aload_0
      17: aload_1
      18: invokespecial #6                  // Method flushL1Caches:(Lorg/infinispan/context/impl/TxInvocationContext;)Ljava/util/concurrent/Future;
      21: invokespecial #7                  // Method blockOnL1FutureIfNeeded:(Ljava/util/concurrent/Future;)V
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #3                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      30: areturn

  public java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.CommitCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method shouldFlushL1:(Lorg/infinispan/context/impl/TxInvocationContext;)Z
       5: ifeq          17
       8: aload_0
       9: aload_0
      10: aload_1
      11: invokespecial #6                  // Method flushL1Caches:(Lorg/infinispan/context/impl/TxInvocationContext;)Ljava/util/concurrent/Future;
      14: invokespecial #7                  // Method blockOnL1FutureIfNeeded:(Ljava/util/concurrent/Future;)V
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #3                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      23: areturn

  protected boolean skipL1Lookup(org.infinispan.commands.LocalFlagAffectedCommand, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method org/infinispan/interceptors/distribution/L1NonTxInterceptor.skipL1Lookup:(Lorg/infinispan/commands/LocalFlagAffectedCommand;Ljava/lang/Object;)Z
       6: ireturn

  private boolean shouldFlushL1(org.infinispan.context.impl.TxInvocationContext);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getAffectedKeys:()Ljava/util/Set;
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private java.util.concurrent.Future<?> flushL1Caches(org.infinispan.context.impl.TxInvocationContext);
    Code:
       0: aload_0
       1: getfield      #11                 // Field l1Manager:Lorg/infinispan/distribution/L1Manager;
       4: aload_1
       5: invokeinterface #9,  1            // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getAffectedKeys:()Ljava/util/Set;
      10: aload_1
      11: invokeinterface #12,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getOrigin:()Lorg/infinispan/remoting/transport/Address;
      16: iconst_1
      17: invokeinterface #13,  4           // InterfaceMethod org/infinispan/distribution/L1Manager.flushCache:(Ljava/util/Collection;Lorg/infinispan/remoting/transport/Address;Z)Ljava/util/concurrent/Future;
      22: areturn

  private void blockOnL1FutureIfNeeded(java.util.concurrent.Future<?>);
    Code:
       0: aload_1
       1: ifnull        48
       4: aload_0
       5: getfield      #14                 // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
       8: invokevirtual #15                 // Method org/infinispan/configuration/cache/Configuration.transaction:()Lorg/infinispan/configuration/cache/TransactionConfiguration;
      11: invokevirtual #16                 // Method org/infinispan/configuration/cache/TransactionConfiguration.syncCommitPhase:()Z
      14: ifeq          48
      17: aload_1
      18: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      23: pop
      24: goto          48
      27: astore_2
      28: aload_2
      29: invokevirtual #19                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
      32: instanceof    #20                 // class org/infinispan/remoting/transport/jgroups/SuspectException
      35: ifne          48
      38: aload_0
      39: invokevirtual #21                 // Method getLog:()Lorg/infinispan/util/logging/Log;
      42: aload_2
      43: invokeinterface #22,  2           // InterfaceMethod org/infinispan/util/logging/Log.failedInvalidatingRemoteCache:(Ljava/lang/Exception;)V
      48: return
    Exception table:
       from    to  target type
          17    24    27   Class java/lang/Exception
}
