Compiled from "PersistenceManager.java"
public interface org.infinispan.persistence.manager.PersistenceManager extends org.infinispan.commons.api.Lifecycle {
  public abstract void preload();

  public abstract void disableStore(java.lang.String);

  public abstract <T> java.util.Set<T> getStores(java.lang.Class<T>);

  public abstract java.util.Collection<java.lang.String> getStoresAsString();

  public abstract void purgeExpired();

  public abstract void clearAllStores(org.infinispan.persistence.manager.PersistenceManager$AccessMode);

  public abstract boolean deleteFromAllStores(java.lang.Object, org.infinispan.persistence.manager.PersistenceManager$AccessMode);

  public abstract void processOnAllStores(org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean);

  public abstract void processOnAllStores(java.util.concurrent.Executor, org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean);

  public abstract void processOnAllStores(org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean, org.infinispan.persistence.manager.PersistenceManager$AccessMode);

  public abstract void processOnAllStores(java.util.concurrent.Executor, org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean, org.infinispan.persistence.manager.PersistenceManager$AccessMode);

  public abstract org.infinispan.marshall.core.MarshalledEntry loadFromAllStores(java.lang.Object, org.infinispan.context.InvocationContext);

  public abstract void writeToAllStores(org.infinispan.marshall.core.MarshalledEntry, org.infinispan.persistence.manager.PersistenceManager$AccessMode);

  public abstract org.infinispan.persistence.spi.AdvancedCacheLoader getStateTransferProvider();

  public abstract int size();

  public abstract void setClearOnStop(boolean);
}
