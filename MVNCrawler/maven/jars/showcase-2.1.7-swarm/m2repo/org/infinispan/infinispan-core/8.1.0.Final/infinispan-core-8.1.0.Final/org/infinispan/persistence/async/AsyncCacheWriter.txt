Compiled from "AsyncCacheWriter.java"
public class org.infinispan.persistence.async.AsyncCacheWriter extends org.infinispan.persistence.support.DelegatingCacheWriter {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private static final java.util.concurrent.atomic.AtomicInteger threadId;

  private java.util.concurrent.ExecutorService executor;

  private java.lang.Thread coordinator;

  private int concurrencyLevel;

  private java.lang.String cacheName;

  protected org.infinispan.persistence.async.BufferLock stateLock;

  protected final java.util.concurrent.atomic.AtomicReference<org.infinispan.persistence.async.State> state;

  private boolean stopped;

  protected org.infinispan.configuration.cache.AsyncStoreConfiguration asyncConfiguration;

  public org.infinispan.persistence.async.AsyncCacheWriter(org.infinispan.persistence.spi.CacheWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method org/infinispan/persistence/support/DelegatingCacheWriter."<init>":(Lorg/infinispan/persistence/spi/CacheWriter;)V
       5: aload_0
       6: new           #8                  // class java/util/concurrent/atomic/AtomicReference
       9: dup
      10: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      13: putfield      #10                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      16: return

  public void init(org.infinispan.persistence.spi.InitializationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method org/infinispan/persistence/support/DelegatingCacheWriter.init:(Lorg/infinispan/persistence/spi/InitializationContext;)V
       5: aload_0
       6: aload_1
       7: invokeinterface #12,  1           // InterfaceMethod org/infinispan/persistence/spi/InitializationContext.getConfiguration:()Lorg/infinispan/configuration/cache/StoreConfiguration;
      12: invokeinterface #13,  1           // InterfaceMethod org/infinispan/configuration/cache/StoreConfiguration.async:()Lorg/infinispan/configuration/cache/AsyncStoreConfiguration;
      17: putfield      #14                 // Field asyncConfiguration:Lorg/infinispan/configuration/cache/AsyncStoreConfiguration;
      20: aload_1
      21: invokeinterface #15,  1           // InterfaceMethod org/infinispan/persistence/spi/InitializationContext.getCache:()Lorg/infinispan/Cache;
      26: astore_2
      27: aload_2
      28: ifnull        40
      31: aload_2
      32: invokeinterface #16,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      37: goto          41
      40: aconst_null
      41: astore_3
      42: aload_0
      43: aload_3
      44: ifnull        57
      47: aload_3
      48: invokevirtual #17                 // Method org/infinispan/configuration/cache/Configuration.locking:()Lorg/infinispan/configuration/cache/LockingConfiguration;
      51: invokevirtual #18                 // Method org/infinispan/configuration/cache/LockingConfiguration.concurrencyLevel:()I
      54: goto          59
      57: bipush        16
      59: putfield      #19                 // Field concurrencyLevel:I
      62: aload_0
      63: aload_2
      64: ifnull        76
      67: aload_2
      68: invokeinterface #20,  1           // InterfaceMethod org/infinispan/Cache.getName:()Ljava/lang/String;
      73: goto          77
      76: aconst_null
      77: putfield      #6                  // Field cacheName:Ljava/lang/String;
      80: return

  public void start();
    Code:
       0: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #21                 // String Async cache loader starting %s
       5: aload_0
       6: invokeinterface #22,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #10                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: iconst_0
      17: aconst_null
      18: invokevirtual #23                 // Method newState:(ZLorg/infinispan/persistence/async/State;)Lorg/infinispan/persistence/async/State;
      21: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      24: aload_0
      25: iconst_0
      26: putfield      #3                  // Field stopped:Z
      29: aload_0
      30: new           #25                 // class org/infinispan/persistence/async/BufferLock
      33: dup
      34: aload_0
      35: getfield      #14                 // Field asyncConfiguration:Lorg/infinispan/configuration/cache/AsyncStoreConfiguration;
      38: invokevirtual #26                 // Method org/infinispan/configuration/cache/AsyncStoreConfiguration.modificationQueueSize:()I
      41: invokespecial #27                 // Method org/infinispan/persistence/async/BufferLock."<init>":(I)V
      44: putfield      #28                 // Field stateLock:Lorg/infinispan/persistence/async/BufferLock;
      47: aload_0
      48: getfield      #14                 // Field asyncConfiguration:Lorg/infinispan/configuration/cache/AsyncStoreConfiguration;
      51: invokevirtual #29                 // Method org/infinispan/configuration/cache/AsyncStoreConfiguration.threadPoolSize:()I
      54: istore_1
      55: aload_0
      56: new           #30                 // class java/util/concurrent/ThreadPoolExecutor
      59: dup
      60: iload_1
      61: iload_1
      62: ldc2_w        #31                 // long 120l
      65: getstatic     #33                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      68: new           #34                 // class java/util/concurrent/LinkedBlockingQueue
      71: dup
      72: invokespecial #35                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      75: new           #36                 // class org/infinispan/persistence/async/AsyncCacheWriter$1
      78: dup
      79: aload_0
      80: invokespecial #37                 // Method org/infinispan/persistence/async/AsyncCacheWriter$1."<init>":(Lorg/infinispan/persistence/async/AsyncCacheWriter;)V
      83: invokespecial #38                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      86: putfield      #2                  // Field executor:Ljava/util/concurrent/ExecutorService;
      89: aload_0
      90: getfield      #2                  // Field executor:Ljava/util/concurrent/ExecutorService;
      93: checkcast     #30                 // class java/util/concurrent/ThreadPoolExecutor
      96: iconst_1
      97: invokevirtual #39                 // Method java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
     100: aload_0
     101: new           #40                 // class java/lang/Thread
     104: dup
     105: new           #41                 // class org/infinispan/persistence/async/AsyncCacheWriter$AsyncStoreCoordinator
     108: dup
     109: aload_0
     110: aconst_null
     111: invokespecial #42                 // Method org/infinispan/persistence/async/AsyncCacheWriter$AsyncStoreCoordinator."<init>":(Lorg/infinispan/persistence/async/AsyncCacheWriter;Lorg/infinispan/persistence/async/AsyncCacheWriter$1;)V
     114: new           #43                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #45                 // String AsyncStoreCoordinator-
     123: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: getfield      #6                  // Field cacheName:Ljava/lang/String;
     130: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #48                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
     139: putfield      #49                 // Field coordinator:Ljava/lang/Thread;
     142: aload_0
     143: getfield      #49                 // Field coordinator:Ljava/lang/Thread;
     146: iconst_1
     147: invokevirtual #50                 // Method java/lang/Thread.setDaemon:(Z)V
     150: aload_0
     151: getfield      #49                 // Field coordinator:Ljava/lang/Thread;
     154: invokevirtual #51                 // Method java/lang/Thread.start:()V
     157: return

  public void stop();
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ifeq          17
       6: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #52                 // String Stop async store %s
      11: aload_0
      12: invokeinterface #53,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #28                 // Field stateLock:Lorg/infinispan/persistence/async/BufferLock;
      21: iconst_0
      22: invokevirtual #54                 // Method org/infinispan/persistence/async/BufferLock.writeLock:(I)V
      25: aload_0
      26: iconst_1
      27: putfield      #3                  // Field stopped:Z
      30: aload_0
      31: getfield      #28                 // Field stateLock:Lorg/infinispan/persistence/async/BufferLock;
      34: invokevirtual #55                 // Method org/infinispan/persistence/async/BufferLock.writeUnlock:()V
      37: aload_0
      38: getfield      #49                 // Field coordinator:Ljava/lang/Thread;
      41: invokevirtual #56                 // Method java/lang/Thread.join:()V
      44: aload_0
      45: getfield      #2                  // Field executor:Ljava/util/concurrent/ExecutorService;
      48: invokeinterface #57,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      53: aload_0
      54: getfield      #2                  // Field executor:Ljava/util/concurrent/ExecutorService;
      57: lconst_1
      58: getstatic     #33                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      61: invokeinterface #58,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      66: ifne          77
      69: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      72: invokeinterface #59,  1           // InterfaceMethod org/infinispan/util/logging/Log.errorAsyncStoreNotStopped:()V
      77: goto          96
      80: astore_1
      81: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      84: aload_1
      85: invokeinterface #61,  2           // InterfaceMethod org/infinispan/util/logging/Log.interruptedWaitingAsyncStorePush:(Ljava/lang/InterruptedException;)V
      90: invokestatic  #62                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      93: invokevirtual #63                 // Method java/lang/Thread.interrupt:()V
      96: return
    Exception table:
       from    to  target type
          37    77    80   Class java/lang/InterruptedException

  public void write(org.infinispan.marshall.core.MarshalledEntry);
    Code:
       0: aload_0
       1: new           #64                 // class org/infinispan/persistence/modifications/Store
       4: dup
       5: aload_1
       6: invokeinterface #65,  1           // InterfaceMethod org/infinispan/marshall/core/MarshalledEntry.getKey:()Ljava/lang/Object;
      11: aload_1
      12: invokespecial #66                 // Method org/infinispan/persistence/modifications/Store."<init>":(Ljava/lang/Object;Lorg/infinispan/marshall/core/MarshalledEntry;)V
      15: iconst_1
      16: invokespecial #67                 // Method put:(Lorg/infinispan/persistence/modifications/Modification;I)V
      19: return

  public boolean delete(java.lang.Object);
    Code:
       0: aload_0
       1: new           #68                 // class org/infinispan/persistence/modifications/Remove
       4: dup
       5: aload_1
       6: invokespecial #69                 // Method org/infinispan/persistence/modifications/Remove."<init>":(Ljava/lang/Object;)V
       9: iconst_1
      10: invokespecial #67                 // Method put:(Lorg/infinispan/persistence/modifications/Modification;I)V
      13: iconst_1
      14: ireturn

  protected void applyModificationsSync(java.util.List<org.infinispan.persistence.modifications.Modification>) throws org.infinispan.persistence.spi.PersistenceException;
    Code:
       0: aload_1
       1: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          138
      16: aload_2
      17: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #73                 // class org/infinispan/persistence/modifications/Modification
      25: astore_3
      26: getstatic     #74                 // Field org/infinispan/persistence/async/AsyncCacheWriter$2.$SwitchMap$org$infinispan$persistence$modifications$Modification$Type:[I
      29: aload_3
      30: invokeinterface #75,  1           // InterfaceMethod org/infinispan/persistence/modifications/Modification.getType:()Lorg/infinispan/persistence/modifications/Modification$Type;
      35: invokevirtual #76                 // Method org/infinispan/persistence/modifications/Modification$Type.ordinal:()I
      38: iaload
      39: lookupswitch  { // 2
                     1: 64
                     2: 83
               default: 103
          }
      64: aload_0
      65: getfield      #77                 // Field actual:Lorg/infinispan/persistence/spi/CacheWriter;
      68: aload_3
      69: checkcast     #64                 // class org/infinispan/persistence/modifications/Store
      72: invokevirtual #78                 // Method org/infinispan/persistence/modifications/Store.getStoredValue:()Lorg/infinispan/marshall/core/MarshalledEntry;
      75: invokeinterface #79,  2           // InterfaceMethod org/infinispan/persistence/spi/CacheWriter.write:(Lorg/infinispan/marshall/core/MarshalledEntry;)V
      80: goto          135
      83: aload_0
      84: getfield      #77                 // Field actual:Lorg/infinispan/persistence/spi/CacheWriter;
      87: aload_3
      88: checkcast     #68                 // class org/infinispan/persistence/modifications/Remove
      91: invokevirtual #80                 // Method org/infinispan/persistence/modifications/Remove.getKey:()Ljava/lang/Object;
      94: invokeinterface #81,  2           // InterfaceMethod org/infinispan/persistence/spi/CacheWriter.delete:(Ljava/lang/Object;)Z
      99: pop
     100: goto          135
     103: new           #82                 // class java/lang/IllegalArgumentException
     106: dup
     107: new           #43                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #83                 // String Unknown modification type
     116: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_3
     120: invokeinterface #75,  1           // InterfaceMethod org/infinispan/persistence/modifications/Modification.getType:()Lorg/infinispan/persistence/modifications/Modification$Type;
     125: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #85                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: goto          7
     138: return

  protected org.infinispan.persistence.async.State newState(boolean, org.infinispan.persistence.async.State);
    Code:
       0: bipush        64
       2: aload_0
       3: getfield      #19                 // Field concurrencyLevel:I
       6: invokestatic  #86                 // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:(II)Ljava/util/concurrent/ConcurrentMap;
       9: astore_3
      10: new           #87                 // class org/infinispan/persistence/async/State
      13: dup
      14: iload_1
      15: aload_3
      16: aload_2
      17: invokespecial #88                 // Method org/infinispan/persistence/async/State."<init>":(ZLjava/util/concurrent/ConcurrentMap;Lorg/infinispan/persistence/async/State;)V
      20: areturn

  void assertNotStopped() throws org.infinispan.commons.CacheException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field stopped:Z
       4: ifeq          17
       7: new           #89                 // class org/infinispan/commons/CacheException
      10: dup
      11: ldc           #90                 // String AsyncCacheWriter stopped; no longer accepting more entries.
      13: invokespecial #91                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private void put(org.infinispan.persistence.modifications.Modification, int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field stateLock:Lorg/infinispan/persistence/async/BufferLock;
       4: iload_2
       5: invokevirtual #54                 // Method org/infinispan/persistence/async/BufferLock.writeLock:(I)V
       8: getstatic     #4                  // Field trace:Z
      11: ifeq          25
      14: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      17: ldc           #92                 // String Queue modification: %s
      19: aload_1
      20: invokeinterface #53,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: invokevirtual #93                 // Method assertNotStopped:()V
      29: aload_0
      30: getfield      #10                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      33: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      36: checkcast     #87                 // class org/infinispan/persistence/async/State
      39: aload_1
      40: invokevirtual #95                 // Method org/infinispan/persistence/async/State.put:(Lorg/infinispan/persistence/modifications/Modification;)V
      43: aload_0
      44: getfield      #28                 // Field stateLock:Lorg/infinispan/persistence/async/BufferLock;
      47: invokevirtual #55                 // Method org/infinispan/persistence/async/BufferLock.writeUnlock:()V
      50: goto          63
      53: astore_3
      54: aload_0
      55: getfield      #28                 // Field stateLock:Lorg/infinispan/persistence/async/BufferLock;
      58: invokevirtual #55                 // Method org/infinispan/persistence/async/BufferLock.writeUnlock:()V
      61: aload_3
      62: athrow
      63: return
    Exception table:
       from    to  target type
           8    43    53   any

  public java.util.concurrent.atomic.AtomicReference<org.infinispan.persistence.async.State> getState();
    Code:
       0: aload_0
       1: getfield      #10                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  protected void clearStore();
    Code:
       0: return

  static java.lang.String access$000(org.infinispan.persistence.async.AsyncCacheWriter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cacheName:Ljava/lang/String;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$100();
    Code:
       0: getstatic     #5                  // Field threadId:Ljava/util/concurrent/atomic/AtomicInteger;
       3: areturn

  static boolean access$300();
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ireturn

  static boolean access$400(org.infinispan.persistence.async.AsyncCacheWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field stopped:Z
       4: ireturn

  static java.util.concurrent.ExecutorService access$500(org.infinispan.persistence.async.AsyncCacheWriter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static org.infinispan.util.logging.Log access$600();
    Code:
       0: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #96                 // class org/infinispan/persistence/async/AsyncCacheWriter
       2: invokestatic  #97                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #98,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #4                  // Field trace:Z
      19: new           #99                 // class java/util/concurrent/atomic/AtomicInteger
      22: dup
      23: iconst_0
      24: invokespecial #100                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      27: putstatic     #5                  // Field threadId:Ljava/util/concurrent/atomic/AtomicInteger;
      30: return
}
