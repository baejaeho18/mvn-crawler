Compiled from "OfflineStatus.java"
public class org.infinispan.xsite.OfflineStatus {
  private static org.infinispan.util.logging.Log log;

  private final org.infinispan.util.TimeService timeService;

  private volatile org.infinispan.configuration.cache.TakeOfflineConfiguration takeOffline;

  private boolean recordingOfflineStatus;

  private long firstFailureTime;

  private int failureCount;

  private volatile boolean forceOffline;

  public org.infinispan.xsite.OfflineStatus(org.infinispan.configuration.cache.TakeOfflineConfiguration, org.infinispan.util.TimeService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field recordingOfflineStatus:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field forceOffline:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field timeService:Lorg/infinispan/util/TimeService;
      24: return

  public synchronized void updateOnCommunicationFailure(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field recordingOfflineStatus:Z
       4: ifne          17
       7: aload_0
       8: iconst_1
       9: putfield      #2                  // Field recordingOfflineStatus:Z
      12: aload_0
      13: lload_1
      14: putfield      #6                  // Field firstFailureTime:J
      17: aload_0
      18: dup
      19: getfield      #7                  // Field failureCount:I
      22: iconst_1
      23: iadd
      24: putfield      #7                  // Field failureCount:I
      27: return

  public synchronized boolean isOffline();
    Code:
       0: aload_0
       1: getfield      #3                  // Field forceOffline:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field recordingOfflineStatus:Z
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      22: invokevirtual #8                  // Method org/infinispan/configuration/cache/TakeOfflineConfiguration.minTimeToWait:()J
      25: lconst_0
      26: lcmp
      27: ifle          39
      30: aload_0
      31: invokevirtual #9                  // Method minTimeHasElapsed:()Z
      34: ifne          39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      43: invokevirtual #10                 // Method org/infinispan/configuration/cache/TakeOfflineConfiguration.afterFailures:()I
      46: ifle          67
      49: aload_0
      50: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      53: invokevirtual #10                 // Method org/infinispan/configuration/cache/TakeOfflineConfiguration.afterFailures:()I
      56: aload_0
      57: getfield      #7                  // Field failureCount:I
      60: if_icmpgt     65
      63: iconst_1
      64: ireturn
      65: iconst_0
      66: ireturn
      67: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      70: ldc           #12                 // String Site is failed: minTimeToWait elapsed and we don\'t have a min failure number to wait for.
      72: invokeinterface #13,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
      77: iconst_1
      78: ireturn

  public synchronized boolean minTimeHasElapsed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
       4: invokevirtual #8                  // Method org/infinispan/configuration/cache/TakeOfflineConfiguration.minTimeToWait:()J
       7: lconst_0
       8: lcmp
       9: ifgt          22
      12: new           #14                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #15                 // String Cannot invoke this method if minTimeToWait is not enabled
      18: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: invokevirtual #17                 // Method millisSinceFirstFailure:()J
      26: lstore_1
      27: lload_1
      28: aload_0
      29: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      32: invokevirtual #8                  // Method org/infinispan/configuration/cache/TakeOfflineConfiguration.minTimeToWait:()J
      35: lcmp
      36: iflt          59
      39: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      42: ldc           #18                 // String The minTimeToWait has passed: minTime=%s, timeSinceFirstFailure=%s
      44: aload_0
      45: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      48: invokevirtual #8                  // Method org/infinispan/configuration/cache/TakeOfflineConfiguration.minTimeToWait:()J
      51: lload_1
      52: invokeinterface #19,  6           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;JJ)V
      57: iconst_1
      58: ireturn
      59: iconst_0
      60: ireturn

  public synchronized long millisSinceFirstFailure();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeService:Lorg/infinispan/util/TimeService;
       4: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       7: aload_0
       8: getfield      #6                  // Field firstFailureTime:J
      11: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      14: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokeinterface #22,  4           // InterfaceMethod org/infinispan/util/TimeService.timeDuration:(JLjava/util/concurrent/TimeUnit;)J
      22: lreturn

  public synchronized boolean bringOnline();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isOffline:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #24                 // Method reset:()V
      13: iconst_1
      14: ireturn

  public synchronized int getFailureCount();
    Code:
       0: aload_0
       1: getfield      #7                  // Field failureCount:I
       4: ireturn

  public synchronized boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
       4: invokevirtual #25                 // Method org/infinispan/configuration/cache/TakeOfflineConfiguration.enabled:()Z
       7: ireturn

  public void amend(org.infinispan.configuration.cache.TakeOfflineConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
       5: aload_0
       6: invokevirtual #24                 // Method reset:()V
       9: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field recordingOfflineStatus:Z
       5: aload_0
       6: iconst_0
       7: putfield      #7                  // Field failureCount:I
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field forceOffline:Z
      15: return

  public org.infinispan.configuration.cache.TakeOfflineConfiguration getTakeOffline();
    Code:
       0: aload_0
       1: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
       4: areturn

  public boolean forceOffline();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isOffline:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field forceOffline:Z
      14: iconst_1
      15: ireturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // String OfflineStatus{takeOffline=
       9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field takeOffline:Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #31                 // String , recordingOfflineStatus=
      21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field recordingOfflineStatus:Z
      28: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: ldc           #33                 // String , firstFailureTime=
      33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field firstFailureTime:J
      40: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #35                 // String , forceOffline=
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #3                  // Field forceOffline:Z
      52: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      55: ldc           #36                 // String , failureCount=
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #7                  // Field failureCount:I
      64: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: bipush        125
      69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public void amend(java.lang.Integer, java.lang.Long);
    Code:
       0: new           #40                 // class org/infinispan/configuration/cache/TakeOfflineConfigurationBuilder
       3: dup
       4: aconst_null
       5: aconst_null
       6: invokespecial #41                 // Method org/infinispan/configuration/cache/TakeOfflineConfigurationBuilder."<init>":(Lorg/infinispan/configuration/cache/ConfigurationBuilder;Lorg/infinispan/configuration/cache/BackupConfigurationBuilder;)V
       9: astore_3
      10: aload_3
      11: aload_0
      12: invokevirtual #42                 // Method getTakeOffline:()Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      15: invokevirtual #43                 // Method org/infinispan/configuration/cache/TakeOfflineConfigurationBuilder.read:(Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;)Lorg/infinispan/configuration/cache/TakeOfflineConfigurationBuilder;
      18: pop
      19: aload_1
      20: ifnull        32
      23: aload_3
      24: aload_1
      25: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
      28: invokevirtual #45                 // Method org/infinispan/configuration/cache/TakeOfflineConfigurationBuilder.afterFailures:(I)Lorg/infinispan/configuration/cache/TakeOfflineConfigurationBuilder;
      31: pop
      32: aload_2
      33: ifnull        45
      36: aload_3
      37: aload_2
      38: invokevirtual #46                 // Method java/lang/Long.longValue:()J
      41: invokevirtual #47                 // Method org/infinispan/configuration/cache/TakeOfflineConfigurationBuilder.minTimeToWait:(J)Lorg/infinispan/configuration/cache/TakeOfflineConfigurationBuilder;
      44: pop
      45: aload_0
      46: aload_3
      47: invokevirtual #48                 // Method org/infinispan/configuration/cache/TakeOfflineConfigurationBuilder.create:()Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
      50: invokevirtual #49                 // Method amend:(Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;)V
      53: return

  static {};
    Code:
       0: ldc           #50                 // class org/infinispan/xsite/OfflineStatus
       2: invokestatic  #51                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
