Compiled from "NumericVersionGenerator.java"
public class org.infinispan.container.versioning.NumericVersionGenerator implements org.infinispan.container.versioning.VersionGenerator {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  final java.util.concurrent.atomic.AtomicInteger versionCounter;

  final java.util.concurrent.atomic.AtomicLong versionPrefix;

  private static final org.infinispan.container.versioning.NumericVersion NON_EXISTING;

  private org.infinispan.Cache<?, ?> cache;

  private boolean isClustered;

  public org.infinispan.container.versioning.NumericVersionGenerator();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #6                  // Field versionCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #9                  // Field versionPrefix:Ljava/util/concurrent/atomic/AtomicLong;
      26: return

  public void init(org.infinispan.Cache<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field cache:Lorg/infinispan/Cache;
       5: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #11,  1           // InterfaceMethod org/infinispan/Cache.getCacheManager:()Lorg/infinispan/manager/EmbeddedCacheManager;
       9: new           #12                 // class org/infinispan/container/versioning/NumericVersionGenerator$RankCalculator
      12: dup
      13: aload_0
      14: invokespecial #13                 // Method org/infinispan/container/versioning/NumericVersionGenerator$RankCalculator."<init>":(Lorg/infinispan/container/versioning/NumericVersionGenerator;)V
      17: invokestatic  #14                 // Method org/infinispan/container/versioning/SecurityActions.addCacheManagerListener:(Lorg/infinispan/manager/EmbeddedCacheManager;Ljava/lang/Object;)V
      20: aload_0
      21: aload_0
      22: getfield      #10                 // Field cache:Lorg/infinispan/Cache;
      25: invokeinterface #15,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      30: invokestatic  #16                 // Method org/infinispan/container/versioning/SecurityActions.getCacheConfiguration:(Lorg/infinispan/AdvancedCache;)Lorg/infinispan/configuration/cache/Configuration;
      33: invokevirtual #17                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      36: invokevirtual #18                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
      39: invokevirtual #19                 // Method org/infinispan/configuration/cache/CacheMode.isClustered:()Z
      42: putfield      #20                 // Field isClustered:Z
      45: aload_0
      46: getfield      #20                 // Field isClustered:Z
      49: ifeq          102
      52: aload_0
      53: getfield      #10                 // Field cache:Lorg/infinispan/Cache;
      56: invokeinterface #15,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      61: invokestatic  #21                 // Method org/infinispan/container/versioning/SecurityActions.getCacheComponentRegistry:(Lorg/infinispan/AdvancedCache;)Lorg/infinispan/factories/ComponentRegistry;
      64: astore_1
      65: aload_1
      66: invokevirtual #22                 // Method org/infinispan/factories/ComponentRegistry.getGlobalComponentRegistry:()Lorg/infinispan/factories/GlobalComponentRegistry;
      69: ldc           #23                 // class org/infinispan/remoting/transport/Transport
      71: invokevirtual #24                 // Method org/infinispan/factories/GlobalComponentRegistry.getComponent:(Ljava/lang/Class;)Ljava/lang/Object;
      74: checkcast     #23                 // class org/infinispan/remoting/transport/Transport
      77: astore_2
      78: aload_0
      79: aload_2
      80: invokeinterface #25,  1           // InterfaceMethod org/infinispan/remoting/transport/Transport.getAddress:()Lorg/infinispan/remoting/transport/Address;
      85: aload_2
      86: invokeinterface #26,  1           // InterfaceMethod org/infinispan/remoting/transport/Transport.getMembers:()Ljava/util/List;
      91: aload_2
      92: invokeinterface #27,  1           // InterfaceMethod org/infinispan/remoting/transport/Transport.getViewId:()I
      97: i2l
      98: invokevirtual #28                 // Method calculateRank:(Lorg/infinispan/remoting/transport/Address;Ljava/util/List;J)J
     101: pop2
     102: return

  public org.infinispan.container.versioning.NumericVersionGenerator clustered(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field isClustered:Z
       5: aload_0
       6: areturn

  public org.infinispan.container.versioning.IncrementableEntryVersion generateNew();
    Code:
       0: aload_0
       1: getfield      #6                  // Field versionCounter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: i2l
       8: lstore_1
       9: aload_0
      10: lload_1
      11: invokespecial #30                 // Method createNumericVersion:(J)Lorg/infinispan/container/versioning/IncrementableEntryVersion;
      14: areturn

  private org.infinispan.container.versioning.IncrementableEntryVersion createNumericVersion(long);
    Code:
       0: aload_0
       1: getfield      #20                 // Field isClustered:Z
       4: ifeq          26
       7: new           #31                 // class org/infinispan/container/versioning/NumericVersion
      10: dup
      11: aload_0
      12: getfield      #9                  // Field versionPrefix:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      18: lload_1
      19: lor
      20: invokespecial #33                 // Method org/infinispan/container/versioning/NumericVersion."<init>":(J)V
      23: goto          34
      26: new           #31                 // class org/infinispan/container/versioning/NumericVersion
      29: dup
      30: lload_1
      31: invokespecial #33                 // Method org/infinispan/container/versioning/NumericVersion."<init>":(J)V
      34: areturn

  public org.infinispan.container.versioning.IncrementableEntryVersion increment(org.infinispan.container.versioning.IncrementableEntryVersion);
    Code:
       0: aload_1
       1: instanceof    #31                 // class org/infinispan/container/versioning/NumericVersion
       4: ifeq          25
       7: aload_1
       8: checkcast     #31                 // class org/infinispan/container/versioning/NumericVersion
      11: astore_2
      12: aload_2
      13: invokevirtual #34                 // Method org/infinispan/container/versioning/NumericVersion.getVersion:()J
      16: lconst_1
      17: ladd
      18: lstore_3
      19: aload_0
      20: lload_3
      21: invokespecial #30                 // Method createNumericVersion:(J)Lorg/infinispan/container/versioning/IncrementableEntryVersion;
      24: areturn
      25: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      28: aload_1
      29: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      35: invokeinterface #37,  2           // InterfaceMethod org/infinispan/util/logging/Log.unexpectedInitialVersion:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      40: athrow

  public org.infinispan.container.versioning.IncrementableEntryVersion nonExistingVersion();
    Code:
       0: getstatic     #38                 // Field NON_EXISTING:Lorg/infinispan/container/versioning/NumericVersion;
       3: areturn

  long calculateRank(org.infinispan.remoting.transport.Address, java.util.List<org.infinispan.remoting.transport.Address>, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #39                 // Method findAddressRank:(Lorg/infinispan/remoting/transport/Address;Ljava/util/List;I)I
       7: i2l
       8: lstore        5
      10: lload_3
      11: bipush        48
      13: lshl
      14: lload         5
      16: bipush        32
      18: lshl
      19: lor
      20: lstore        7
      22: aload_0
      23: getfield      #9                  // Field versionPrefix:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: getfield      #9                  // Field versionPrefix:Ljava/util/concurrent/atomic/AtomicLong;
      30: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      33: lload         7
      35: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      38: pop
      39: aload_0
      40: getfield      #9                  // Field versionPrefix:Ljava/util/concurrent/atomic/AtomicLong;
      43: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      46: lreturn

  void resetCounter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field versionCounter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_0
       5: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: return

  private int findAddressRank(org.infinispan.remoting.transport.Address, java.util.List<org.infinispan.remoting.transport.Address>, int);
    Code:
       0: aload_1
       1: aload_2
       2: iconst_0
       3: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       8: invokevirtual #43                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: iload_3
      15: ireturn
      16: aload_0
      17: aload_1
      18: aload_2
      19: iconst_1
      20: aload_2
      21: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
      26: invokeinterface #45,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      31: iload_3
      32: iconst_1
      33: iadd
      34: invokespecial #39                 // Method findAddressRank:(Lorg/infinispan/remoting/transport/Address;Ljava/util/List;I)I
      37: ireturn

  static boolean access$000();
    Code:
       0: getstatic     #2                  // Field trace:Z
       3: ireturn

  static org.infinispan.util.logging.Log access$100();
    Code:
       0: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #46                 // class org/infinispan/container/versioning/NumericVersionGenerator
       2: invokestatic  #47                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #48,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #2                  // Field trace:Z
      19: new           #31                 // class org/infinispan/container/versioning/NumericVersion
      22: dup
      23: lconst_0
      24: invokespecial #33                 // Method org/infinispan/container/versioning/NumericVersion."<init>":(J)V
      27: putstatic     #38                 // Field NON_EXISTING:Lorg/infinispan/container/versioning/NumericVersion;
      30: return
}
