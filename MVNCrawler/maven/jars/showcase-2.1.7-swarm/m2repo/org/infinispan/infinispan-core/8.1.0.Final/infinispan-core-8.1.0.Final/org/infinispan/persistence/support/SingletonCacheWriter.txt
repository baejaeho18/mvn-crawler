Compiled from "SingletonCacheWriter.java"
public class org.infinispan.persistence.support.SingletonCacheWriter extends org.infinispan.persistence.support.DelegatingCacheWriter {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private org.infinispan.configuration.cache.SingletonStoreConfiguration singletonConfiguration;

  private static final java.lang.String THREAD_NAME;

  protected final java.util.concurrent.ExecutorService executor;

  java.util.concurrent.Future<?> pushStateFuture;

  private org.infinispan.remoting.transport.Address localAddress;

  protected volatile boolean active;

  public org.infinispan.persistence.support.SingletonCacheWriter(org.infinispan.persistence.spi.CacheWriter, org.infinispan.configuration.cache.SingletonStoreConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/infinispan/persistence/support/DelegatingCacheWriter."<init>":(Lorg/infinispan/persistence/spi/CacheWriter;)V
       5: aload_0
       6: new           #5                  // class org/infinispan/persistence/support/SingletonCacheWriter$1
       9: dup
      10: aload_0
      11: invokespecial #6                  // Method org/infinispan/persistence/support/SingletonCacheWriter$1."<init>":(Lorg/infinispan/persistence/support/SingletonCacheWriter;)V
      14: invokestatic  #7                  // Method java/util/concurrent/Executors.newSingleThreadExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      17: putfield      #8                  // Field executor:Ljava/util/concurrent/ExecutorService;
      20: aload_0
      21: aload_2
      22: putfield      #9                  // Field singletonConfiguration:Lorg/infinispan/configuration/cache/SingletonStoreConfiguration;
      25: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctx:Lorg/infinispan/persistence/spi/InitializationContext;
       4: invokeinterface #11,  1           // InterfaceMethod org/infinispan/persistence/spi/InitializationContext.getCache:()Lorg/infinispan/Cache;
       9: invokeinterface #12,  1           // InterfaceMethod org/infinispan/Cache.getCacheManager:()Lorg/infinispan/manager/EmbeddedCacheManager;
      14: new           #13                 // class org/infinispan/persistence/support/SingletonCacheWriter$SingletonStoreListener
      17: dup
      18: aload_0
      19: invokespecial #14                 // Method org/infinispan/persistence/support/SingletonCacheWriter$SingletonStoreListener."<init>":(Lorg/infinispan/persistence/support/SingletonCacheWriter;)V
      22: invokeinterface #15,  2           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.addListener:(Ljava/lang/Object;)V
      27: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field executor:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       9: pop
      10: return

  public void write(org.infinispan.marshall.core.MarshalledEntry);
    Code:
       0: aload_0
       1: getfield      #17                 // Field active:Z
       4: ifeq          38
       7: getstatic     #18                 // Field trace:Z
      10: ifeq          30
      13: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      16: ldc           #19                 // String Storing key %s.  Instance: %s
      18: aload_1
      19: invokeinterface #20,  1           // InterfaceMethod org/infinispan/marshall/core/MarshalledEntry.getKey:()Ljava/lang/Object;
      24: aload_0
      25: invokeinterface #21,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      30: aload_0
      31: aload_1
      32: invokespecial #22                 // Method org/infinispan/persistence/support/DelegatingCacheWriter.write:(Lorg/infinispan/marshall/core/MarshalledEntry;)V
      35: goto          61
      38: getstatic     #18                 // Field trace:Z
      41: ifeq          61
      44: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      47: ldc           #23                 // String Not storing key %s.  Instance: %s
      49: aload_1
      50: invokeinterface #20,  1           // InterfaceMethod org/infinispan/marshall/core/MarshalledEntry.getKey:()Ljava/lang/Object;
      55: aload_0
      56: invokeinterface #21,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      61: return

  public boolean delete(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #17                 // Field active:Z
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: invokespecial #24                 // Method org/infinispan/persistence/support/DelegatingCacheWriter.delete:(Ljava/lang/Object;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  protected java.util.concurrent.Callable<?> createPushStateTask();
    Code:
       0: new           #25                 // class org/infinispan/persistence/support/SingletonCacheWriter$2
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method org/infinispan/persistence/support/SingletonCacheWriter$2."<init>":(Lorg/infinispan/persistence/support/SingletonCacheWriter;)V
       8: areturn

  protected void pushState(org.infinispan.Cache) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       6: invokeinterface #28,  1           // InterfaceMethod org/infinispan/AdvancedCache.getDataContainer:()Lorg/infinispan/container/DataContainer;
      11: astore_2
      12: aload_2
      13: invokeinterface #29,  1           // InterfaceMethod org/infinispan/container/DataContainer.keySet:()Ljava/util/Set;
      18: astore_3
      19: aload_3
      20: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          105
      37: aload         4
      39: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: astore        5
      46: aload_2
      47: aload         5
      49: invokeinterface #33,  2           // InterfaceMethod org/infinispan/container/DataContainer.get:(Ljava/lang/Object;)Lorg/infinispan/container/entries/InternalCacheEntry;
      54: astore        6
      56: aload         6
      58: ifnull        102
      61: aload_0
      62: getfield      #10                 // Field ctx:Lorg/infinispan/persistence/spi/InitializationContext;
      65: invokeinterface #34,  1           // InterfaceMethod org/infinispan/persistence/spi/InitializationContext.getMarshalledEntryFactory:()Lorg/infinispan/marshall/core/MarshalledEntryFactory;
      70: aload         6
      72: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getKey:()Ljava/lang/Object;
      77: aload         6
      79: invokeinterface #36,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getValue:()Ljava/lang/Object;
      84: aload         6
      86: invokestatic  #37                 // Method org/infinispan/persistence/PersistenceUtil.internalMetadata:(Lorg/infinispan/container/entries/InternalCacheEntry;)Lorg/infinispan/metadata/InternalMetadata;
      89: invokeinterface #38,  4           // InterfaceMethod org/infinispan/marshall/core/MarshalledEntryFactory.newMarshalledEntry:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/InternalMetadata;)Lorg/infinispan/marshall/core/MarshalledEntry;
      94: astore        7
      96: aload_0
      97: aload         7
      99: invokevirtual #39                 // Method write:(Lorg/infinispan/marshall/core/MarshalledEntry;)V
     102: goto          27
     105: return

  protected void awaitForPushToFinish(java.util.concurrent.Future<?>, long, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
       3: invokeinterface #40,  1           // InterfaceMethod org/infinispan/util/logging/Log.isDebugEnabled:()Z
       8: istore        5
      10: iload         5
      12: ifeq          25
      15: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      18: ldc           #41                 // String wait for state push to cache loader to finish
      20: invokeinterface #42,  2           // InterfaceMethod org/infinispan/util/logging/Log.debug:(Ljava/lang/Object;)V
      25: aload_1
      26: lload_2
      27: aload         4
      29: invokeinterface #43,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      34: pop
      35: goto          102
      38: astore        6
      40: iload         5
      42: ifeq          55
      45: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      48: ldc           #45                 // String timed out waiting for state push to cache loader to finish
      50: invokeinterface #42,  2           // InterfaceMethod org/infinispan/util/logging/Log.debug:(Ljava/lang/Object;)V
      55: goto          102
      58: astore        6
      60: iload         5
      62: ifeq          75
      65: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      68: ldc           #47                 // String exception reported waiting for state push to cache loader to finish
      70: invokeinterface #42,  2           // InterfaceMethod org/infinispan/util/logging/Log.debug:(Ljava/lang/Object;)V
      75: goto          102
      78: astore        6
      80: invokestatic  #49                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      83: invokevirtual #50                 // Method java/lang/Thread.interrupt:()V
      86: getstatic     #18                 // Field trace:Z
      89: ifeq          102
      92: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      95: ldc           #51                 // String wait for state push to cache loader to finish was interrupted
      97: invokeinterface #52,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
     102: return
    Exception table:
       from    to  target type
          10    35    38   Class java/util/concurrent/TimeoutException
          10    35    58   Class java/util/concurrent/ExecutionException
          10    35    78   Class java/lang/InterruptedException

  protected void activeStatusChanged(boolean) throws org.infinispan.persistence.support.SingletonCacheWriter$PushStateException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field active:Z
       5: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
       8: ldc           #53                 // String changed mode %s
      10: aload_0
      11: invokeinterface #54,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #17                 // Field active:Z
      20: ifeq          37
      23: aload_0
      24: getfield      #9                  // Field singletonConfiguration:Lorg/infinispan/configuration/cache/SingletonStoreConfiguration;
      27: invokevirtual #55                 // Method org/infinispan/configuration/cache/SingletonStoreConfiguration.pushStateWhenCoordinator:()Z
      30: ifeq          37
      33: aload_0
      34: invokespecial #56                 // Method doPushState:()V
      37: return

  private boolean isCoordinator(java.util.List<org.infinispan.remoting.transport.Address>, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field localAddress:Lorg/infinispan/remoting/transport/Address;
       5: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ifne          16
      11: aload_0
      12: aload_2
      13: putfield      #2                  // Field localAddress:Lorg/infinispan/remoting/transport/Address;
      16: aload_1
      17: invokeinterface #58,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      22: ifne          46
      25: aload_0
      26: getfield      #2                  // Field localAddress:Lorg/infinispan/remoting/transport/Address;
      29: aload_1
      30: iconst_0
      31: invokeinterface #59,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      36: invokevirtual #57                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  private void doPushState() throws org.infinispan.persistence.support.SingletonCacheWriter$PushStateException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field pushStateFuture:Ljava/util/concurrent/Future;
       4: ifnull        19
       7: aload_0
       8: getfield      #60                 // Field pushStateFuture:Ljava/util/concurrent/Future;
      11: invokeinterface #61,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
      16: ifeq          74
      19: aload_0
      20: invokevirtual #62                 // Method createPushStateTask:()Ljava/util/concurrent/Callable;
      23: astore_1
      24: aload_0
      25: aload_0
      26: getfield      #8                  // Field executor:Ljava/util/concurrent/ExecutorService;
      29: aload_1
      30: invokeinterface #63,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      35: putfield      #60                 // Field pushStateFuture:Ljava/util/concurrent/Future;
      38: aload_0
      39: aload_0
      40: getfield      #60                 // Field pushStateFuture:Ljava/util/concurrent/Future;
      43: aload_0
      44: getfield      #9                  // Field singletonConfiguration:Lorg/infinispan/configuration/cache/SingletonStoreConfiguration;
      47: invokevirtual #64                 // Method org/infinispan/configuration/cache/SingletonStoreConfiguration.pushStateTimeout:()J
      50: getstatic     #65                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      53: invokespecial #66                 // Method waitForTaskToFinish:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V
      56: goto          71
      59: astore_2
      60: new           #68                 // class org/infinispan/persistence/support/SingletonCacheWriter$PushStateException
      63: dup
      64: ldc           #69                 // String unable to complete in memory state push to cache loader
      66: aload_2
      67: invokespecial #70                 // Method org/infinispan/persistence/support/SingletonCacheWriter$PushStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
      71: goto          92
      74: aload_0
      75: aload_0
      76: getfield      #60                 // Field pushStateFuture:Ljava/util/concurrent/Future;
      79: aload_0
      80: getfield      #9                  // Field singletonConfiguration:Lorg/infinispan/configuration/cache/SingletonStoreConfiguration;
      83: invokevirtual #64                 // Method org/infinispan/configuration/cache/SingletonStoreConfiguration.pushStateTimeout:()J
      86: getstatic     #65                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      89: invokevirtual #71                 // Method awaitForPushToFinish:(Ljava/util/concurrent/Future;JLjava/util/concurrent/TimeUnit;)V
      92: return
    Exception table:
       from    to  target type
          38    56    59   Class java/lang/Exception

  private void waitForTaskToFinish(java.util.concurrent.Future<?>, long, java.util.concurrent.TimeUnit) throws java.lang.Exception;
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: invokeinterface #43,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: iconst_1
      12: invokeinterface #72,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: goto          83
      21: astore        5
      23: new           #67                 // class java/lang/Exception
      26: dup
      27: ldc           #73                 // String task timed out
      29: aload         5
      31: invokespecial #74                 // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: athrow
      35: astore        5
      37: invokestatic  #49                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      40: invokevirtual #50                 // Method java/lang/Thread.interrupt:()V
      43: getstatic     #18                 // Field trace:Z
      46: ifeq          59
      49: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      52: ldc           #75                 // String task was interrupted
      54: invokeinterface #52,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
      59: aload_1
      60: iconst_1
      61: invokeinterface #72,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      66: pop
      67: goto          83
      70: astore        6
      72: aload_1
      73: iconst_1
      74: invokeinterface #72,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      79: pop
      80: aload         6
      82: athrow
      83: return
    Exception table:
       from    to  target type
           0    10    21   Class java/util/concurrent/TimeoutException
           0    10    35   Class java/lang/InterruptedException
           0    10    70   any
          21    59    70   any
          70    72    70   any

  public java.lang.String toString();
    Code:
       0: new           #76                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #78                 // String SingletonStore: localAddress=
       9: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field localAddress:Lorg/infinispan/remoting/transport/Address;
      16: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #81                 // String , active=
      21: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #17                 // Field active:Z
      28: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: invokevirtual #83                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  static org.infinispan.util.logging.Log access$000();
    Code:
       0: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  static org.infinispan.remoting.transport.Address access$102(org.infinispan.persistence.support.SingletonCacheWriter, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field localAddress:Lorg/infinispan/remoting/transport/Address;
       6: areturn

  static boolean access$200(org.infinispan.persistence.support.SingletonCacheWriter, java.util.List, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method isCoordinator:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;)Z
       6: ireturn

  static {};
    Code:
       0: ldc           #84                 // class org/infinispan/persistence/support/SingletonCacheWriter
       2: invokestatic  #85                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #86,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #18                 // Field trace:Z
      19: return
}
