Compiled from "ConfigurationManager.java"
public class org.infinispan.configuration.ConfigurationManager {
  private final org.infinispan.configuration.global.GlobalConfiguration globalConfiguration;

  private final org.infinispan.configuration.cache.Configuration defaultConfiguration;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.infinispan.configuration.cache.Configuration> namedConfiguration;

  public org.infinispan.configuration.ConfigurationManager(org.infinispan.configuration.parsing.ConfigurationBuilderHolder, org.infinispan.configuration.parsing.ConfigurationBuilderHolder, java.util.Optional<org.infinispan.configuration.parsing.ConfigurationBuilderHolder>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method org/infinispan/configuration/parsing/ConfigurationBuilderHolder.getGlobalConfigurationBuilder:()Lorg/infinispan/configuration/global/GlobalConfigurationBuilder;
       9: invokevirtual #4                  // Method org/infinispan/configuration/global/GlobalConfigurationBuilder.build:()Lorg/infinispan/configuration/global/GlobalConfiguration;
      12: putfield      #5                  // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
      15: aload_0
      16: aload_2
      17: invokevirtual #6                  // Method org/infinispan/configuration/parsing/ConfigurationBuilderHolder.getDefaultConfigurationBuilder:()Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      20: aload_0
      21: getfield      #5                  // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
      24: invokevirtual #7                  // Method org/infinispan/configuration/cache/ConfigurationBuilder.build:(Lorg/infinispan/configuration/global/GlobalConfiguration;)Lorg/infinispan/configuration/cache/Configuration;
      27: putfield      #8                  // Field defaultConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      30: aload_0
      31: invokestatic  #9                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      34: putfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
      37: aload_3
      38: invokevirtual #11                 // Method java/util/Optional.isPresent:()Z
      41: ifeq          133
      44: aload_3
      45: invokevirtual #12                 // Method java/util/Optional.get:()Ljava/lang/Object;
      48: checkcast     #13                 // class org/infinispan/configuration/parsing/ConfigurationBuilderHolder
      51: invokevirtual #14                 // Method org/infinispan/configuration/parsing/ConfigurationBuilderHolder.getNamedConfigurationBuilders:()Ljava/util/Map;
      54: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      59: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      64: astore        4
      66: aload         4
      68: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          133
      76: aload         4
      78: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #19                 // class java/util/Map$Entry
      86: astore        5
      88: aload         5
      90: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      95: checkcast     #21                 // class org/infinispan/configuration/cache/ConfigurationBuilder
      98: astore        6
     100: aload         6
     102: aload_0
     103: getfield      #5                  // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
     106: invokevirtual #7                  // Method org/infinispan/configuration/cache/ConfigurationBuilder.build:(Lorg/infinispan/configuration/global/GlobalConfiguration;)Lorg/infinispan/configuration/cache/Configuration;
     109: astore        7
     111: aload_0
     112: getfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
     115: aload         5
     117: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     122: aload         7
     124: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: goto          66
     133: return

  public org.infinispan.configuration.ConfigurationManager(org.infinispan.configuration.parsing.ConfigurationBuilderHolder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: aload_1
       4: invokestatic  #24                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       7: invokespecial #25                 // Method "<init>":(Lorg/infinispan/configuration/parsing/ConfigurationBuilderHolder;Lorg/infinispan/configuration/parsing/ConfigurationBuilderHolder;Ljava/util/Optional;)V
      10: return

  public org.infinispan.configuration.ConfigurationManager(org.infinispan.configuration.global.GlobalConfiguration, org.infinispan.configuration.cache.Configuration);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
       9: aload_0
      10: aload_2
      11: putfield      #8                  // Field defaultConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      14: aload_0
      15: invokestatic  #9                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      18: putfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
      21: return

  public org.infinispan.configuration.global.GlobalConfiguration getGlobalConfiguration();
    Code:
       0: aload_0
       1: getfield      #5                  // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
       4: areturn

  public org.infinispan.configuration.cache.Configuration getDefaultConfiguration();
    Code:
       0: aload_0
       1: getfield      #8                  // Field defaultConfiguration:Lorg/infinispan/configuration/cache/Configuration;
       4: areturn

  public org.infinispan.configuration.cache.Configuration getConfiguration(java.lang.String);
    Code:
       0: ldc           #26                 // String ___defaultcache
       2: aload_1
       3: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          16
       9: aload_0
      10: getfield      #8                  // Field defaultConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      13: goto          29
      16: aload_0
      17: getfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
      20: aload_1
      21: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #29                 // class org/infinispan/configuration/cache/Configuration
      29: areturn

  public org.infinispan.configuration.cache.Configuration getConfigurationOrDefault(java.lang.String);
    Code:
       0: ldc           #26                 // String ___defaultcache
       2: aload_1
       3: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          22
       9: aload_0
      10: getfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: invokeinterface #30,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      19: ifne          44
      22: new           #21                 // class org/infinispan/configuration/cache/ConfigurationBuilder
      25: dup
      26: invokespecial #31                 // Method org/infinispan/configuration/cache/ConfigurationBuilder."<init>":()V
      29: aload_0
      30: getfield      #8                  // Field defaultConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      33: invokevirtual #32                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.read:(Lorg/infinispan/configuration/cache/Configuration;)Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      36: aload_0
      37: getfield      #5                  // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
      40: invokevirtual #7                  // Method org/infinispan/configuration/cache/ConfigurationBuilder.build:(Lorg/infinispan/configuration/global/GlobalConfiguration;)Lorg/infinispan/configuration/cache/Configuration;
      43: areturn
      44: aload_0
      45: getfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
      48: aload_1
      49: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #29                 // class org/infinispan/configuration/cache/Configuration
      57: areturn

  public org.infinispan.configuration.cache.Configuration putConfiguration(java.lang.String, org.infinispan.configuration.cache.ConfigurationBuilder);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #5                  // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
       5: invokevirtual #7                  // Method org/infinispan/configuration/cache/ConfigurationBuilder.build:(Lorg/infinispan/configuration/global/GlobalConfiguration;)Lorg/infinispan/configuration/cache/Configuration;
       8: astore_3
       9: aload_0
      10: getfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: aload_3
      15: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_3
      22: areturn

  public void removeConfiguration(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.util.Collection<java.lang.String> getDefinedCaches();
    Code:
       0: aload_0
       1: getfield      #10                 // Field namedConfiguration:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokestatic  #35                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      12: areturn
}
