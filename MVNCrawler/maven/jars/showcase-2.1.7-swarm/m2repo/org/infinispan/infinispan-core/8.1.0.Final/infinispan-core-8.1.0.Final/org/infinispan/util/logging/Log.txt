Compiled from "Log.java"
public interface org.infinispan.util.logging.Log extends org.jboss.logging.BasicLogger {
  public abstract void unableToLoadFromCacheLoader(java.lang.Object, org.infinispan.persistence.spi.PersistenceException);

  public abstract void fieldNotFound(java.lang.String);

  public abstract void propertyCouldNotBeReplaced(java.lang.String);

  public abstract void errorReadingProperties(java.io.IOException);

  public abstract void unableToCopyEntryForUpdate(java.lang.Object);

  public abstract void remoteExecutionFailed(org.infinispan.remoting.transport.Address, java.lang.Throwable);

  public abstract void localExecutionFailed(java.lang.Throwable);

  public abstract void cannotSelectRandomMembers(int, java.util.List<org.infinispan.remoting.transport.Address>);

  public abstract void distributionManagerNotJoined();

  public abstract void distributionManagerNotStarted();

  public abstract void problemApplyingStateForKey(java.lang.String, java.lang.Object, java.lang.Throwable);

  public abstract void unableToApplyPrepare(org.infinispan.commands.tx.PrepareCommand, java.lang.Throwable);

  public abstract void couldNotAcquireSharedLock();

  public abstract void expectedJustOneResponse(java.util.Map<org.infinispan.remoting.transport.Address, org.infinispan.remoting.responses.Response>);

  public abstract void notStartingEvictionThread();

  public abstract void exceptionPurgingDataContainer(java.lang.Exception);

  public abstract void couldNotAcquireLockForEviction(java.lang.Object, java.lang.Exception);

  public abstract void unableToPassivateEntry(java.lang.Object, java.lang.Exception);

  public abstract void passivatingAllEntries();

  public abstract void passivatedEntries(int, java.lang.String);

  public abstract void mbeansSuccessfullyRegistered();

  public abstract void problemsUnregisteringMBeans(java.lang.Exception);

  public abstract void unableToUnregisterMBeanWithPattern(java.lang.String, javax.management.MBeanRegistrationException);

  public abstract org.infinispan.jmx.JmxDomainConflictException jmxMBeanAlreadyRegistered(java.lang.String, java.lang.String);

  public abstract void couldNotFindDescriptionField();

  public abstract void couldNotFindAttribute(java.lang.String);

  public abstract void failedToUpdateAttribute(java.lang.String, java.lang.Object);

  public abstract void ignoringManagedAttribute(java.lang.String);

  public abstract void invalidManagedAttributeMethod(java.lang.String);

  public abstract void readManagedAttributeAlreadyPresent(java.lang.reflect.Method);

  public abstract void writeManagedAttributeAlreadyPresent(java.lang.String);

  public abstract void queriedAttributeNotFound(java.lang.String);

  public abstract void errorWritingValueForAttribute(java.lang.String, java.lang.Exception);

  public abstract void couldNotInvokeSetOnAttribute(java.lang.String, java.lang.Object);

  public abstract void problemPurgingExpired(java.lang.Exception);

  public abstract void unknownResponsesFromRemoteCache(java.util.Collection<org.infinispan.remoting.responses.Response>);

  public abstract void errorDoingRemoteCall(java.lang.Exception);

  public abstract void interruptedWaitingAsyncStorePush(java.lang.InterruptedException);

  public abstract void unexpectedErrorInAsyncProcessor(java.lang.Throwable);

  public abstract void interruptedAcquiringLock(long, java.lang.InterruptedException);

  public abstract void unableToProcessAsyncModifications(int);

  public abstract void unexpectedErrorInAsyncStoreCoordinator(java.lang.Throwable);

  public abstract void errorChangingSingletonStoreStatus(org.infinispan.persistence.support.SingletonCacheWriter$PushStateException);

  public abstract void problemsRemovingFile(java.io.File);

  public abstract void problemsPurgingFile(java.io.File, org.infinispan.persistence.spi.PersistenceException);

  public abstract void unableToAcquireLockToPurgeStore();

  public abstract void errorReadingFromFile(java.io.File, java.lang.Exception);

  public abstract void problemsCreatingDirectory(java.io.File);

  public abstract void errorMarshallingObject(java.io.IOException, java.lang.Object);

  public abstract void unableToReadVersionId();

  public abstract void waitForCacheToStart(java.lang.String);

  public abstract void namedCacheDoesNotExist(java.lang.String);

  public abstract void exceptionHandlingCommand(org.infinispan.commands.ReplicableCommand, java.lang.Throwable);

  public abstract void failedReplicatingQueue(int, java.lang.Throwable);

  public abstract void unexpectedErrorReplicating(java.lang.Throwable);

  public abstract void msgOrMsgBufferEmpty();

  public abstract void startingJGroupsChannel(java.lang.String);

  public abstract void localAndPhysicalAddress(java.lang.String, org.infinispan.remoting.transport.Address, java.util.List<org.infinispan.remoting.transport.Address>);

  public abstract void disconnectJGroups(java.lang.String);

  public abstract void problemClosingChannel(java.lang.Exception, java.lang.String);

  public abstract void stoppingRpcDispatcher(java.lang.String);

  public abstract void wrongTypeForJGroupsChannelLookup(java.lang.String, java.lang.Exception);

  public abstract void errorInstantiatingJGroupsChannelLookup(java.lang.String, java.lang.Exception);

  public abstract org.infinispan.commons.CacheConfigurationException errorCreatingChannelFromConfigFile(java.lang.String, java.lang.Exception);

  public abstract org.infinispan.commons.CacheConfigurationException errorCreatingChannelFromXML(java.lang.String, java.lang.Exception);

  public abstract org.infinispan.commons.CacheConfigurationException errorCreatingChannelFromConfigString(java.lang.String, java.lang.Exception);

  public abstract void unableToUseJGroupsPropertiesProvided(org.infinispan.commons.util.TypedProperties);

  public abstract void interruptedWaitingForCoordinator(java.lang.InterruptedException);

  public abstract void channelNotSetUp();

  public abstract void receivedMergedView(java.lang.String, org.jgroups.View);

  public abstract void receivedClusterView(java.lang.String, org.jgroups.View);

  public abstract void errorProcessing1pcPrepareCommand(java.lang.Throwable);

  public abstract void errorRollingBack(java.lang.Throwable);

  public abstract void unprocessedTxLogEntries(int);

  public abstract void unfinishedTransactionsRemain(int, int);

  public abstract void failedSynchronizationRegistration(java.lang.Exception);

  public abstract void unableToRollbackGlobalTx(org.infinispan.transaction.xa.GlobalTransaction, java.lang.Throwable);

  public abstract void remoteTxAlreadyRegistered();

  public abstract void fallingBackToDummyTm();

  public abstract void failedToCreateInitialCtx(javax.naming.NamingException);

  public abstract void unableToInvokeWebsphereStaticGetTmMethod(java.lang.Exception, java.lang.String);

  public abstract void retrievingTm(javax.transaction.TransactionManager);

  public abstract void errorEnlistingResource(javax.transaction.xa.XAException);

  public abstract void beforeCompletionFailed(javax.transaction.Synchronization, java.lang.Throwable);

  public abstract void unexpectedErrorFromResourceManager(java.lang.Throwable);

  public abstract void afterCompletionFailed(javax.transaction.Synchronization, java.lang.Throwable);

  public abstract void errorCommittingTx(javax.transaction.xa.XAException);

  public abstract void unbindingDummyTmFailed(javax.naming.NamingException);

  public abstract void unsupportedTransactionConfiguration(boolean, boolean, boolean);

  public abstract void recoveryIgnored();

  public abstract void missingListPreparedTransactions(java.lang.Object, java.lang.Object);

  public abstract void preparedTxAlreadyExists(org.infinispan.transaction.xa.recovery.RecoveryAwareTransaction, org.infinispan.transaction.xa.recovery.RecoveryAwareRemoteTransaction);

  public abstract void couldNotLoadModuleAtUrl(java.net.URL, java.lang.Exception);

  public abstract void couldNotInitializeModule(java.lang.Object, java.lang.Exception);

  public abstract void ignoringException(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void unableToSetValue(java.lang.Exception);

  public abstract void unableToConvertStringPropertyToInt(java.lang.String, int);

  public abstract void unableToConvertStringPropertyToLong(java.lang.String, long);

  public abstract void unableToConvertStringPropertyToBoolean(java.lang.String, boolean);

  public abstract void unableToInvokeGetterOnConfiguration(java.lang.reflect.Method, java.lang.Exception);

  public abstract void failedToCallStopAfterFailure(java.lang.Throwable);

  public abstract void stopBeforeDestroyFailed(org.infinispan.commons.CacheException);

  public abstract void version(java.lang.String);

  public abstract void cacheNotStarted();

  public abstract void abortingJoin(java.lang.Exception);

  public abstract void joinRehashCompleted(org.infinispan.remoting.transport.Address, java.lang.String);

  public abstract void joinRehashAborted(org.infinispan.remoting.transport.Address, java.lang.String);

  public abstract void noAnnotateMethodsFoundInListener(java.lang.Class<?>);

  public abstract void unableToInvokeListenerMethodAndRemoveListener(java.lang.reflect.Method, java.lang.Object, java.lang.Throwable);

  public abstract void unableToLockToInvalidate(java.lang.Object, org.infinispan.remoting.transport.Address);

  public abstract void executionError(java.lang.String, java.util.Collection<?>, java.lang.Throwable);

  public abstract void failedInvalidatingRemoteCache(java.lang.Exception);

  public abstract void couldNotRegisterObjectName(javax.management.ObjectName, javax.management.InstanceAlreadyExistsException);

  public abstract void couldNotResolveConfigurationSchema(java.lang.String, java.lang.String, java.lang.String);

  public abstract void lazyDeserializationDeprecated();

  public abstract void couldNotRollbackPrepared1PcTransaction(org.infinispan.transaction.impl.LocalTransaction, java.lang.Throwable);

  public abstract void keyDoesNotMapToLocalNode(java.lang.Object, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void failedLoadingValueFromCacheStore(java.lang.Object, java.lang.Exception);

  public abstract void failedToInvalidateKeys(java.lang.Exception);

  public abstract void invalidTimeoutValue(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract void staleEntriesWithoutFetchPersistentStateOrPurgeOnStartup();

  public abstract void rehashCommandReceivedOnNonDistributedCache();

  public abstract void errorFlushingToFileChannel(java.nio.channels.FileChannel, java.lang.Exception);

  public abstract void passivationWithoutEviction();

  public abstract void unableToUnlockRebalancedKeys(org.infinispan.transaction.xa.GlobalTransaction, java.util.List<java.lang.Object>, org.infinispan.remoting.transport.Address, java.lang.Throwable);

  public abstract void errorUnblockingTransactions(java.lang.Exception);

  public abstract void couldNotCompleteInjectedTransaction(java.lang.Throwable);

  public abstract void usingBatchModeTransactionManager();

  public abstract void couldNotInstantiateTransactionManager(java.lang.Exception);

  public abstract void cacheLoaderIgnoringUnexpectedFile(java.lang.Object, java.lang.String);

  public abstract void cacheViewRollbackIdMismatch(int, int);

  public abstract void warnStrictPeerToPeerWithInjectedChannel();

  public abstract void customInterceptorExpectsInjection(java.lang.String);

  public abstract void errorReadingConfiguration(java.lang.Exception);

  public abstract void failedToCloseResource(java.lang.Throwable);

  public abstract void evictionWakeUpIntervalDeprecated(java.lang.Long);

  public abstract void randomCacheModeSynonymsDeprecated(java.lang.String, java.lang.String, java.util.List<java.lang.String>);

  public abstract void alwaysProvideInMemoryStateDeprecated();

  public abstract void initialRetryWaitTimeDeprecated();

  public abstract void logFlushTimeoutDeprecated();

  public abstract void maxProgressingLogWritesDeprecated();

  public abstract void numRetriesDeprecated();

  public abstract void retryWaitTimeIncreaseFactorDeprecated();

  public abstract void stateRetrievalConfigurationDeprecated();

  public abstract void hashRehashEnabledDeprecated();

  public abstract void hashRehashRpcTimeoutDeprecated();

  public abstract void hashRehashWaitDeprecated();

  public abstract void errorProcessing2pcCommitCommand(java.lang.Throwable);

  public abstract void componentFailedToStop(java.lang.Throwable);

  public abstract void deprecatedLoaderAsStoreConfiguration();

  public abstract void localIndexingWithSharedCacheLoaderRequiresPreload();

  public abstract void hashNumVirtualNodesDeprecated();

  public abstract void consistentHashDeprecated();

  public abstract void failedLoadingKeysFromCacheStore(java.lang.Exception);

  public abstract void rebalanceError(java.lang.String, org.infinispan.remoting.transport.Address, java.lang.Throwable);

  public abstract void failedToRecoverClusterState(java.lang.Throwable);

  public abstract void errorUpdatingMembersList(java.lang.Throwable);

  public abstract void unableToRegisterMBeans();

  public abstract void unableToRegisterMBeans(java.lang.String);

  public abstract void unableToRegisterCacheManagerMBeans();

  public abstract void cacheBackupsDataToSameSite(java.lang.String);

  public abstract void warnXsiteBackupFailed(java.lang.String, java.lang.String, java.lang.Object);

  public abstract void cannotRespondToRollback(org.infinispan.transaction.xa.GlobalTransaction, java.lang.String);

  public abstract void cannotRespondToCommit(org.infinispan.transaction.xa.GlobalTransaction, java.lang.String);

  public abstract void tryingToBringOnlineNonexistentSite(java.lang.String);

  public abstract void couldNotExecuteCancellationLocally(java.lang.String);

  public abstract void couldNotInterruptThread(java.util.UUID);

  public abstract void noLiveOwnersFoundForSegment(int, java.lang.String, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void failedToRetrieveTransactionsForSegments(java.util.Collection<java.lang.Integer>, java.lang.String, org.infinispan.remoting.transport.Address, java.lang.Exception);

  public abstract void failedToRequestSegments(java.util.Collection<java.lang.Integer>, java.lang.String, org.infinispan.remoting.transport.Address, java.lang.Throwable);

  public abstract void unableToLoadClass(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void unableToRemoveEntryAfterActivation(java.lang.Object, java.lang.Exception);

  public abstract java.lang.Exception unknownMigrator(java.lang.String);

  public abstract void entriesMigrated(long, java.lang.String, java.lang.String);

  public abstract org.infinispan.remoting.RemoteException remoteException(org.infinispan.remoting.transport.Address, java.lang.Throwable);

  public abstract void timeoutWaitingUntilTransactionPrepared(java.lang.String);

  public abstract void shutdownHandlingCommand(org.infinispan.commands.ReplicableCommand);

  public abstract void errorUnMarshallingCommand(java.lang.Throwable);

  public abstract void unexpectedResponse(java.lang.String, java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException customInterceptorMissingClass();

  public abstract void suggestCustomInterceptorInheritance(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException multipleCustomInterceptorPositions(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException missingCustomInterceptorPosition(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException sslInitializationException(java.lang.Throwable);

  public abstract void warnConcurrentUpdateSupportCannotBeConfigured();

  public abstract void failedToRecoverCacheState(java.lang.String, java.lang.Throwable);

  public abstract java.lang.IllegalArgumentException unexpectedInitialVersion(java.lang.String);

  public abstract void rebalanceStartError(java.lang.String, java.lang.Throwable);

  public abstract java.lang.IllegalStateException requireDistOrReplCache(java.lang.String);

  public abstract java.lang.IllegalStateException invalidCacheState(java.lang.String);

  public abstract java.lang.IllegalArgumentException parserRootElementAlreadyRegistered(javax.xml.namespace.QName);

  public abstract org.infinispan.commons.CacheConfigurationException parserDoesNotDeclareNamespaces(java.lang.String);

  public abstract org.infinispan.persistence.spi.PersistenceException purgingExpiredEntriesFailed(java.lang.Throwable);

  public abstract org.infinispan.persistence.spi.PersistenceException timedOutWaitingForExpiredEntriesToBePurged(java.lang.Throwable);

  public abstract org.infinispan.commons.CacheConfigurationException directoryCannotBeCreated(java.lang.String);

  public abstract java.io.IOException externalizerTableStopped(java.lang.String);

  public abstract java.io.IOException pushReadInterruptionDueToCacheManagerShutdown(int, java.lang.InterruptedException);

  public abstract org.infinispan.commons.CacheException cannotResolveExternalizerReader(org.infinispan.lifecycle.ComponentStatus, int);

  public abstract org.infinispan.commons.CacheException missingForeignExternalizer(int);

  public abstract org.infinispan.commons.CacheException unknownExternalizerReaderIndex(int);

  public abstract org.infinispan.commons.CacheConfigurationException advanceExternalizerTypeClassesUndefined(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException duplicateExternalizerIdFound(int, java.lang.Class<?>, java.lang.String, int);

  public abstract org.infinispan.commons.CacheConfigurationException internalExternalizerIdLimitExceeded(org.infinispan.commons.marshall.AdvancedExternalizer<?>, int, int);

  public abstract org.infinispan.commons.CacheConfigurationException foreignExternalizerUsingNegativeId(org.infinispan.commons.marshall.AdvancedExternalizer<?>, int);

  public abstract org.infinispan.commons.CacheConfigurationException multipleCacheStoresWithFetchPersistentState();

  public abstract org.infinispan.commons.CacheConfigurationException loaderConfigurationDoesNotSpecifyLoaderClass(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException incompatibleLoaderConfiguration(java.lang.String, java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException cacheLoaderConfigurationCannotBeNull();

  public abstract void errorExecutingParallelStoreTask(java.lang.Throwable);

  public abstract org.infinispan.commons.CacheConfigurationException invalidCacheLoaderClass(java.lang.String);

  public abstract void strictPeerToPeerDeprecated();

  public abstract void errorProcessingPrepare(java.lang.Throwable);

  public abstract void configuratorSAXParseError(java.lang.Exception);

  public abstract void configuratorSAXError(java.lang.Exception);

  public abstract void configuratorError(java.lang.Exception);

  public abstract void errorAsyncStoreNotStopped();

  public abstract void exceptionExecutingInboundCommand(java.lang.Exception);

  public abstract void failedOutBoundTransferExecution(java.lang.Throwable);

  public abstract void failedToEnlistTransactionXaAdapter(java.lang.Throwable);

  public abstract void warnFifoStrategyIsDeprecated();

  public abstract void warnL1NotHavingReaperThread();

  public abstract void unableToResetGlobalComponentRegistryAfterRestart(java.lang.Exception);

  public abstract void unableToResetGlobalComponentRegistryAfterRestart(java.lang.String, java.lang.String, java.lang.Exception);

  public abstract void unableToCreateInterceptor(java.lang.Class, java.lang.Exception);

  public abstract void unableToRollbackEvictionsDuringPrepare(java.lang.Throwable);

  public abstract void warnGridFSMetadataCacheRequiresSync();

  public abstract void warnCouldNotCommitLocalTx(java.lang.Object, java.lang.Exception);

  public abstract void warnCouldNotRollbackLocalTx(java.lang.Object, java.lang.Exception);

  public abstract void warnExceptionRemovingRecovery(java.lang.Exception);

  public abstract org.infinispan.commons.CacheConfigurationException invalidConfigurationIndexingWithInvalidation();

  public abstract void persistenceWithoutCacheLoaderInterceptor();

  public abstract void persistenceWithoutCacheWriteInterceptor();

  public abstract org.infinispan.commons.CacheException missingMigrationData(java.lang.String);

  public abstract void keyMigrationFailed(java.lang.String, java.lang.Throwable);

  public abstract org.infinispan.commons.CacheConfigurationException invalidConfigurationIndexingWithoutModule();

  public abstract org.infinispan.persistence.spi.PersistenceException errorReadingFileStore(java.lang.String, long);

  public abstract org.infinispan.commons.CacheListenerException exceptionInvokingListener(java.lang.String, java.lang.reflect.Method, java.lang.Object, java.lang.Throwable);

  public abstract org.infinispan.remoting.transport.jgroups.SuspectException thirdPartySuspected(org.infinispan.remoting.transport.Address, org.infinispan.remoting.transport.jgroups.SuspectException);

  public abstract org.infinispan.commons.CacheConfigurationException invocationBatchingNeedsTransactionalCache();

  public abstract org.infinispan.commons.CacheConfigurationException invocationBatchingCannotBeRecoverable();

  public abstract void clusterListenerInstallationFailure(java.lang.Throwable);

  public abstract void unsuccessfulResponseForClusterListeners(org.infinispan.remoting.transport.Address, org.infinispan.remoting.responses.Response);

  public abstract void exceptionDuringClusterListenerRetrieval(org.infinispan.remoting.transport.Address, java.lang.Throwable);

  public abstract java.lang.SecurityException unauthorizedAccess(java.lang.String, java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException invalidPrincipalRoleMapper();

  public abstract void unableToSendXSiteState(java.lang.String, java.lang.Throwable);

  public abstract void unableToWaitForXSiteStateAcks(java.lang.String, java.lang.Throwable);

  public abstract void unableToApplyXSiteState(java.lang.Throwable);

  public abstract void unrecognizedAttribute(java.lang.String);

  public abstract void ignoreXmlAttribute(java.lang.Object);

  public abstract void ignoreXmlElement(java.lang.Object);

  public abstract org.infinispan.commons.CacheConfigurationException undefinedThreadPoolName(java.lang.String);

  public abstract java.lang.IllegalArgumentException invalidPermission(java.security.Permission);

  public abstract java.lang.SecurityException readOnlyPermissionCollection();

  public abstract void authorizationEnabledWithoutSecurityManager();

  public abstract org.infinispan.util.concurrent.TimeoutException unableToAcquireLock(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);

  public abstract org.infinispan.commons.CacheException exceptionProcessingEntryRetrievalValues(java.lang.Throwable);

  public abstract org.infinispan.commons.CacheException exceptionProcessingIteratorResponse(java.util.UUID, java.lang.Throwable);

  public abstract void unsuccessfulResponseRetrievingTransactionsForSegments(org.infinispan.remoting.transport.Address, org.infinispan.remoting.responses.Response);

  public abstract void ambiguousConfigurationFiles(java.lang.String);

  public abstract org.infinispan.partitionhandling.AvailabilityException partitionDegraded();

  public abstract org.infinispan.partitionhandling.AvailabilityException degradedModeKeyUnavailable(java.lang.Object);

  public abstract org.infinispan.partitionhandling.AvailabilityException clearDisallowedWhilePartitioned();

  public abstract void rebalancingEnabled();

  public abstract void rebalancingSuspended();

  public abstract void startRebalance(java.lang.String, org.infinispan.topology.CacheTopology);

  public abstract void outdatedTopology(java.lang.Throwable);

  public abstract void lostDataBecauseOfGracefulLeaver(java.lang.String, org.infinispan.remoting.transport.Address);

  public abstract void lostDataBecauseOfAbruptLeavers(java.lang.String, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void minorityPartition(java.lang.String, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void unexpectedAvailabilityMode(org.infinispan.partitionhandling.AvailabilityMode, java.lang.String, org.infinispan.topology.CacheTopology);

  public abstract void enteringDegradedModeGracefulLeaver(java.lang.String, org.infinispan.remoting.transport.Address);

  public abstract void enteringDegradedModeLostData(java.lang.String, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void enteringDegradedModeMinorityPartition(java.lang.String, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void keepingDegradedModeAfterMergeDataLost(java.lang.String, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void keepingDegradedModeAfterMergeMinorityPartition(java.lang.String, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<org.infinispan.remoting.transport.Address>);

  public abstract void stopOrderIgnored();

  public abstract void failedToRestartXSiteStateTransfer(java.lang.String, java.lang.Throwable);

  public abstract org.infinispan.IllegalLifecycleStateException cacheIsTerminated(java.lang.String);

  public abstract org.infinispan.IllegalLifecycleStateException cacheIsStopping(java.lang.String);

  public abstract java.lang.RuntimeException creatingTmpCacheTimedOut(java.lang.String, org.infinispan.remoting.transport.Address);

  public abstract void remoteTransactionTimeout(org.infinispan.transaction.xa.GlobalTransaction, long);

  public abstract org.infinispan.commons.CacheConfigurationException unsupportedConfiguration(java.lang.String, java.lang.String);

  public abstract void rebalanceCompleted(java.lang.String, org.infinispan.remoting.transport.Address, int);

  public abstract void errorReadingRebalancingStatus(org.infinispan.remoting.transport.Address, java.lang.Exception);

  public abstract void distributedTaskFailover(org.infinispan.remoting.transport.Address, org.infinispan.remoting.transport.Address, java.lang.Exception);

  public abstract void unableToInvokeListenerMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Throwable);

  public abstract org.infinispan.commons.CacheException orphanTransactionRolledBack(org.infinispan.transaction.xa.GlobalTransaction);

  public abstract org.infinispan.commons.CacheConfigurationException backupSiteNullName();

  public abstract org.infinispan.commons.CacheConfigurationException customBackupFailurePolicyClassNotSpecified();

  public abstract org.infinispan.commons.CacheConfigurationException twoPhaseCommitAsyncBackup();

  public abstract void clusterWideRebalanceCompleted(java.lang.String, int);

  public abstract org.infinispan.commons.CacheConfigurationException backupMissingSite();

  public abstract org.infinispan.commons.CacheConfigurationException missingBackupFailurePolicyClass();

  public abstract org.infinispan.commons.CacheConfigurationException backupForNullCache();

  public abstract org.infinispan.commons.CacheConfigurationException backupForMissingParameters();

  public abstract java.lang.IllegalStateException asyncPropertiesConfigOnSyncCache();

  public abstract java.lang.IllegalStateException syncPropertiesConfigOnAsyncCache();

  public abstract org.infinispan.commons.CacheConfigurationException missingTransportConfiguration();

  public abstract org.infinispan.commons.CacheConfigurationException invalidReaperWakeUpInterval(long);

  public abstract org.infinispan.commons.CacheConfigurationException invalidCompletedTxTimeout(long);

  public abstract org.infinispan.commons.CacheConfigurationException invalidTxModeForTotalOrder(org.infinispan.transaction.TransactionMode);

  public abstract org.infinispan.commons.CacheConfigurationException invalidCacheModeForTotalOrder(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException unavailableTotalOrderWithTxRecovery();

  public abstract org.infinispan.commons.CacheConfigurationException invalidLockingModeForTotalOrder(org.infinispan.transaction.LockingMode);

  public abstract org.infinispan.commons.CacheConfigurationException l1OnlyForDistributedCache(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException l1InvalidLifespan();

  public abstract org.infinispan.commons.CacheConfigurationException noReplicationQueueDistributedCache();

  public abstract org.infinispan.commons.CacheConfigurationException replicationQueueOnlyForAsyncCaches();

  public abstract org.infinispan.commons.CacheConfigurationException interceptorClassAndInstanceDefined(java.lang.String, java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException unableToInstantiateClass(java.lang.Class<?>);

  public abstract org.infinispan.commons.CacheConfigurationException evictionSizeTooLarge(long);

  public abstract void xaResourceEndFailed(javax.transaction.xa.XAResource, java.lang.Throwable);

  public abstract org.infinispan.commons.CacheConfigurationException existingConfigForInternalCache(java.lang.String);

  public abstract org.infinispan.partitionhandling.AvailabilityException degradedModeKeysUnavailable(java.util.Collection<?>);

  public abstract void evictionExecutorDeprecated();

  public abstract org.infinispan.commons.CacheException remoteTransactionAlreadyRolledBack(org.infinispan.transaction.xa.GlobalTransaction);

  public abstract org.infinispan.util.concurrent.TimeoutException remoteTransactionStatusMissing(org.infinispan.transaction.xa.GlobalTransaction);

  public abstract void noFilterIndexingServiceProviderFound(java.lang.String);

  public abstract org.infinispan.commons.CacheException clusterListenerRegisteredWithOnlyPreEvents(java.lang.Class<?>);

  public abstract org.infinispan.commons.CacheConfigurationException jgroupsConfigurationNotFound(java.lang.String);

  public abstract java.lang.IllegalArgumentException unableToAddNullCustomStore();

  public abstract void topologyUpdateError(int, java.lang.Throwable);

  public abstract void memoryApproximationUnsupportedVM(java.lang.String);

  public abstract void ignoreAsyncMarshalling();

  public abstract java.lang.IllegalArgumentException illegalCacheName(java.lang.String);

  public abstract java.lang.IllegalStateException configurationInUse(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException statisticsEnabledNotAvailable();

  public abstract org.infinispan.commons.CacheConfigurationException templateConfigurationStartAttempt(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException undeclaredConfiguration(java.lang.String, java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException noConfiguration(java.lang.String);

  public abstract java.lang.UnsupportedOperationException interceptorStackNotSupported();

  public abstract java.lang.UnsupportedOperationException lockOperationsNotSupported();

  public abstract org.infinispan.commons.CacheConfigurationException invocationBatchingNotEnabled();

  public abstract org.infinispan.commons.CacheConfigurationException mapReduceNotSupported();

  public abstract org.infinispan.commons.CacheConfigurationException distributedExecutorsNotSupported();

  public abstract org.infinispan.commons.CacheConfigurationException notSupportedInSimpleCache();

  public abstract void missingGlobalStatePersistentLocation();

  public abstract void evictionMaxEntriesDeprecated();

  public abstract java.lang.RuntimeException unableToBroadcastInvalidation(java.lang.Throwable);

  public abstract void dataContainerConfigurationDeprecated();

  public abstract org.infinispan.commons.CacheConfigurationException failedReadingPersistentState(java.io.IOException, java.io.File);

  public abstract org.infinispan.commons.CacheConfigurationException failedWritingGlobalState(java.io.IOException, java.io.File);

  public abstract org.infinispan.commons.CacheConfigurationException nonWritableStateFile(java.io.File);

  public abstract void globalStateLoad(java.lang.String, java.lang.String);

  public abstract void globalStateWrite(java.lang.String, java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException recoveryNotSupportedWithNonTxCache();

  public abstract org.infinispan.commons.CacheConfigurationException recoveryNotSupportedWithSynchronization();

  public abstract org.infinispan.commons.CacheConfigurationException recoveryNotSupportedWithAsync(java.lang.String);

  public abstract org.infinispan.commons.CacheConfigurationException recoveryNotSupportedWithAsyncCommit();

  public abstract void transactionNotificationsDisabled();

  public abstract void ignoringUnsolicitedState(org.infinispan.remoting.transport.Address, int, java.lang.String);
}
