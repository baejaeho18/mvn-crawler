Compiled from "PerKeyLockContainer.java"
public class org.infinispan.util.concurrent.locks.impl.PerKeyLockContainer implements org.infinispan.util.concurrent.locks.impl.LockContainer {
  private static final int INITIAL_CAPACITY;

  private final org.infinispan.commons.util.concurrent.jdk8backported.EquivalentConcurrentHashMapV8<java.lang.Object, org.infinispan.util.concurrent.locks.impl.InfinispanLock> lockMap;

  private org.infinispan.util.TimeService timeService;

  public org.infinispan.util.concurrent.locks.impl.PerKeyLockContainer(int, org.infinispan.commons.equivalence.Equivalence<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8
       8: dup
       9: bipush        32
      11: iload_1
      12: i2f
      13: aload_2
      14: invokestatic  #4                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      17: invokespecial #5                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8."<init>":(IFLorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)V
      20: putfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      23: return

  public void inject(org.infinispan.util.TimeService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field timeService:Lorg/infinispan/util/TimeService;
       5: aload_0
       6: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       9: invokevirtual #8                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.values:()Ljava/util/Collection;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          45
      27: aload_2
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #12                 // class org/infinispan/util/concurrent/locks/impl/InfinispanLock
      36: astore_3
      37: aload_3
      38: aload_1
      39: invokevirtual #13                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.setTimeService:(Lorg/infinispan/util/TimeService;)V
      42: goto          18
      45: return

  public org.infinispan.util.concurrent.locks.ExtendedLockPromise acquire(java.lang.Object, java.lang.Object, long, java.util.concurrent.TimeUnit);
    Code:
       0: aconst_null
       1: invokestatic  #14                 // Method org/infinispan/commons/util/ByRef.create:(Ljava/lang/Object;)Lorg/infinispan/commons/util/ByRef;
       4: astore        6
       6: aload_0
       7: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      10: aload_1
      11: aload_0
      12: aload         6
      14: aload_2
      15: lload_3
      16: aload         5
      18: invokedynamic #15,  0             // InvokeDynamic #0:apply:(Lorg/infinispan/util/concurrent/locks/impl/PerKeyLockContainer;Lorg/infinispan/commons/util/ByRef;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/util/function/BiFunction;
      23: invokevirtual #16                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      26: pop
      27: aload         6
      29: invokevirtual #17                 // Method org/infinispan/commons/util/ByRef.get:()Ljava/lang/Object;
      32: checkcast     #18                 // class org/infinispan/util/concurrent/locks/ExtendedLockPromise
      35: areturn

  public org.infinispan.util.concurrent.locks.impl.InfinispanLock getLock(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       4: aload_1
       5: invokevirtual #19                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #12                 // class org/infinispan/util/concurrent/locks/impl/InfinispanLock
      11: areturn

  public void release(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       4: aload_1
       5: aload_2
       6: invokedynamic #20,  0             // InvokeDynamic #1:apply:(Ljava/lang/Object;)Ljava/util/function/BiFunction;
      11: invokevirtual #21                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      14: pop
      15: return

  public int getNumLocksHeld();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       6: invokevirtual #8                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.values:()Ljava/util/Collection;
       9: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          47
      24: aload_2
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #12                 // class org/infinispan/util/concurrent/locks/impl/InfinispanLock
      33: astore_3
      34: aload_3
      35: invokevirtual #22                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.isLocked:()Z
      38: ifeq          44
      41: iinc          1, 1
      44: goto          15
      47: iload_1
      48: ireturn

  public boolean isLocked(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       4: aload_1
       5: invokevirtual #19                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #12                 // class org/infinispan/util/concurrent/locks/impl/InfinispanLock
      11: astore_2
      12: aload_2
      13: ifnull        27
      16: aload_2
      17: invokevirtual #22                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.isLocked:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       4: invokevirtual #23                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.size:()I
       7: ireturn

  public void deadlockCheck(org.infinispan.util.concurrent.locks.DeadlockChecker);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       4: invokevirtual #8                  // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.values:()Ljava/util/Collection;
       7: aload_1
       8: invokedynamic #24,  0             // InvokeDynamic #2:accept:(Lorg/infinispan/util/concurrent/locks/DeadlockChecker;)Ljava/util/function/Consumer;
      13: invokeinterface #25,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      18: return

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // String PerKeyLockContainer{locks=
       9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private org.infinispan.util.concurrent.locks.impl.InfinispanLock createInfinispanLock(java.lang.Object);
    Code:
       0: new           #12                 // class org/infinispan/util/concurrent/locks/impl/InfinispanLock
       3: dup
       4: aload_0
       5: getfield      #7                  // Field timeService:Lorg/infinispan/util/TimeService;
       8: aload_0
       9: aload_1
      10: invokedynamic #33,  0             // InvokeDynamic #3:run:(Lorg/infinispan/util/concurrent/locks/impl/PerKeyLockContainer;Ljava/lang/Object;)Ljava/lang/Runnable;
      15: invokespecial #34                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock."<init>":(Lorg/infinispan/util/TimeService;Ljava/lang/Runnable;)V
      18: areturn

  private void lambda$createInfinispanLock$57(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lockMap:Lorg/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8;
       4: aload_1
       5: invokedynamic #35,  0             // InvokeDynamic #4:apply:()Ljava/util/function/BiFunction;
      10: invokevirtual #21                 // Method org/infinispan/commons/util/concurrent/jdk8backported/EquivalentConcurrentHashMapV8.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      13: checkcast     #12                 // class org/infinispan/util/concurrent/locks/impl/InfinispanLock
      16: pop
      17: return

  private static org.infinispan.util.concurrent.locks.impl.InfinispanLock lambda$null$56(java.lang.Object, org.infinispan.util.concurrent.locks.impl.InfinispanLock);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.isLocked:()Z
       4: ifeq          11
       7: aload_1
       8: goto          12
      11: aconst_null
      12: areturn

  private static void lambda$deadlockCheck$55(org.infinispan.util.concurrent.locks.DeadlockChecker, org.infinispan.util.concurrent.locks.impl.InfinispanLock);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #36                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.deadlockCheck:(Lorg/infinispan/util/concurrent/locks/DeadlockChecker;)V
       5: return

  private static org.infinispan.util.concurrent.locks.impl.InfinispanLock lambda$release$54(java.lang.Object, java.lang.Object, org.infinispan.util.concurrent.locks.impl.InfinispanLock);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #37                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.release:(Ljava/lang/Object;)V
       5: aload_2
       6: invokevirtual #22                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.isLocked:()Z
       9: ifne          16
      12: aconst_null
      13: goto          17
      16: aload_2
      17: areturn

  private org.infinispan.util.concurrent.locks.impl.InfinispanLock lambda$acquire$53(org.infinispan.commons.util.ByRef, java.lang.Object, long, java.util.concurrent.TimeUnit, java.lang.Object, org.infinispan.util.concurrent.locks.impl.InfinispanLock);
    Code:
       0: aload         7
       2: ifnonnull     13
       5: aload_0
       6: aload         6
       8: invokespecial #38                 // Method createInfinispanLock:(Ljava/lang/Object;)Lorg/infinispan/util/concurrent/locks/impl/InfinispanLock;
      11: astore        7
      13: aload_1
      14: aload         7
      16: aload_2
      17: lload_3
      18: aload         5
      20: invokevirtual #39                 // Method org/infinispan/util/concurrent/locks/impl/InfinispanLock.acquire:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/util/concurrent/locks/ExtendedLockPromise;
      23: invokevirtual #40                 // Method org/infinispan/commons/util/ByRef.set:(Ljava/lang/Object;)V
      26: aload         7
      28: areturn
}
