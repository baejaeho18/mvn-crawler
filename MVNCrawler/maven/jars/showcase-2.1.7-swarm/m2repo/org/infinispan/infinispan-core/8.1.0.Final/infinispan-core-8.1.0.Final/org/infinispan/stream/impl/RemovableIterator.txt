Compiled from "RemovableIterator.java"
public class org.infinispan.stream.impl.RemovableIterator<K, C> implements java.util.Iterator<C> {
  protected final java.util.Iterator<C> realIterator;

  protected final org.infinispan.Cache<K, ?> cache;

  protected final java.util.function.Function<? super C, K> removeFunction;

  protected C previousValue;

  protected C currentValue;

  public org.infinispan.stream.impl.RemovableIterator(java.util.Iterator<C>, org.infinispan.Cache<K, ?>, java.util.function.Function<? super C, K>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field realIterator:Ljava/util/Iterator;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field cache:Lorg/infinispan/Cache;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field removeFunction:Ljava/util/function/Function;
      19: return

  protected C getNextFromIterator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field realIterator:Ljava/util/Iterator;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ifeq          22
      12: aload_0
      13: getfield      #2                  // Field realIterator:Ljava/util/Iterator;
      16: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: areturn
      22: aconst_null
      23: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentValue:Ljava/lang/Object;
       4: ifnonnull     19
       7: aload_0
       8: aload_0
       9: invokevirtual #8                  // Method getNextFromIterator:()Ljava/lang/Object;
      12: dup_x1
      13: putfield      #7                  // Field currentValue:Ljava/lang/Object;
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public C next();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method hasNext:()Z
       4: ifne          15
       7: new           #10                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #11                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: aload_0
      17: getfield      #7                  // Field currentValue:Ljava/lang/Object;
      20: putfield      #12                 // Field previousValue:Ljava/lang/Object;
      23: aload_0
      24: aconst_null
      25: putfield      #7                  // Field currentValue:Ljava/lang/Object;
      28: aload_0
      29: getfield      #12                 // Field previousValue:Ljava/lang/Object;
      32: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #12                 // Field previousValue:Ljava/lang/Object;
       4: ifnonnull     15
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      19: aload_0
      20: getfield      #4                  // Field removeFunction:Ljava/util/function/Function;
      23: aload_0
      24: getfield      #12                 // Field previousValue:Ljava/lang/Object;
      27: invokeinterface #15,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: invokeinterface #16,  2           // InterfaceMethod org/infinispan/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: aconst_null
      40: putfield      #12                 // Field previousValue:Ljava/lang/Object;
      43: return
}
