Compiled from "AbstractDataCommand.java"
public abstract class org.infinispan.commands.read.AbstractDataCommand extends org.infinispan.commands.AbstractFlagAffectedCommand implements org.infinispan.commands.DataCommand {
  protected java.lang.Object key;

  public java.lang.Object getKey();
    Code:
       0: aload_0
       1: getfield      #1                  // Field key:Ljava/lang/Object;
       4: areturn

  public void setKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field key:Ljava/lang/Object;
       5: return

  protected org.infinispan.commands.read.AbstractDataCommand(java.lang.Object, java.util.Set<org.infinispan.context.Flag>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/infinispan/commands/AbstractFlagAffectedCommand."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field key:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field flags:Ljava/util/Set;
      14: return

  protected org.infinispan.commands.read.AbstractDataCommand();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/infinispan/commands/AbstractFlagAffectedCommand."<init>":()V
       4: return

  public abstract void setParameters(int, java.lang.Object[]);

  public abstract java.lang.Object[] getParameters();

  public boolean shouldInvoke(org.infinispan.context.InvocationContext);
    Code:
       0: iconst_1
       1: ireturn

  public boolean ignoreCommandOnStatus(org.infinispan.lifecycle.ComponentStatus);
    Code:
       0: iconst_0
       1: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #5                  // class org/infinispan/commands/read/AbstractDataCommand
      30: astore_2
      31: aload_0
      32: getfield      #1                  // Field key:Ljava/lang/Object;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #1                  // Field key:Ljava/lang/Object;
      42: ifnull        63
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #1                  // Field key:Ljava/lang/Object;
      51: aload_2
      52: getfield      #1                  // Field key:Ljava/lang/Object;
      55: invokevirtual #6                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #3                  // Field flags:Ljava/util/Set;
      67: ifnonnull     79
      70: aload_2
      71: getfield      #3                  // Field flags:Ljava/util/Set;
      74: ifnull        97
      77: iconst_0
      78: ireturn
      79: aload_0
      80: getfield      #3                  // Field flags:Ljava/util/Set;
      83: aload_2
      84: getfield      #3                  // Field flags:Ljava/util/Set;
      87: invokeinterface #7,  2            // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      92: ifne          97
      95: iconst_0
      96: ireturn
      97: iconst_1
      98: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field key:Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: getfield      #1                  // Field key:Ljava/lang/Object;
      11: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public java.lang.String toString();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #10                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: ldc           #12                 // String  {key=
      16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #1                  // Field key:Ljava/lang/Object;
      23: invokestatic  #14                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #15                 // String , flags=
      31: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #3                  // Field flags:Ljava/util/Set;
      38: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #17                 // String }
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  public boolean isReturnValueExpected();
    Code:
       0: iconst_1
       1: ireturn

  public boolean canBlock();
    Code:
       0: iconst_0
       1: ireturn
}
