Compiled from "DefaultTopologyRunnable.java"
public class org.infinispan.remoting.inboundhandler.DefaultTopologyRunnable extends org.infinispan.remoting.inboundhandler.BaseBlockingRunnable {
  private final org.infinispan.remoting.inboundhandler.TopologyMode topologyMode;

  private final int commandTopologyId;

  public org.infinispan.remoting.inboundhandler.DefaultTopologyRunnable(org.infinispan.remoting.inboundhandler.BasePerCacheInboundInvocationHandler, org.infinispan.commands.remote.CacheRpcCommand, org.infinispan.remoting.inboundhandler.Reply, org.infinispan.remoting.inboundhandler.TopologyMode, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/infinispan/remoting/inboundhandler/BaseBlockingRunnable."<init>":(Lorg/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler;Lorg/infinispan/commands/remote/CacheRpcCommand;Lorg/infinispan/remoting/inboundhandler/Reply;)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field topologyMode:Lorg/infinispan/remoting/inboundhandler/TopologyMode;
      13: aload_0
      14: iload         5
      16: putfield      #3                  // Field commandTopologyId:I
      19: return

  public boolean isReady();
    Code:
       0: getstatic     #4                  // Field org/infinispan/remoting/inboundhandler/DefaultTopologyRunnable$1.$SwitchMap$org$infinispan$remoting$inboundhandler$TopologyMode:[I
       3: aload_0
       4: getfield      #2                  // Field topologyMode:Lorg/infinispan/remoting/inboundhandler/TopologyMode;
       7: invokevirtual #5                  // Method org/infinispan/remoting/inboundhandler/TopologyMode.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 53
               default: 70
          }
      36: aload_0
      37: getfield      #6                  // Field handler:Lorg/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler;
      40: invokevirtual #7                  // Method org/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler.getStateTransferLock:()Lorg/infinispan/statetransfer/StateTransferLock;
      43: aload_0
      44: invokespecial #8                  // Method waitTopology:()I
      47: invokeinterface #9,  2            // InterfaceMethod org/infinispan/statetransfer/StateTransferLock.topologyReceived:(I)Z
      52: ireturn
      53: aload_0
      54: getfield      #6                  // Field handler:Lorg/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler;
      57: invokevirtual #7                  // Method org/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler.getStateTransferLock:()Lorg/infinispan/statetransfer/StateTransferLock;
      60: aload_0
      61: invokespecial #8                  // Method waitTopology:()I
      64: invokeinterface #10,  2           // InterfaceMethod org/infinispan/statetransfer/StateTransferLock.transactionDataReceived:(I)Z
      69: ireturn
      70: iconst_1
      71: ireturn

  protected org.infinispan.remoting.responses.Response beforeInvoke() throws java.lang.Exception;
    Code:
       0: getstatic     #4                  // Field org/infinispan/remoting/inboundhandler/DefaultTopologyRunnable$1.$SwitchMap$org$infinispan$remoting$inboundhandler$TopologyMode:[I
       3: aload_0
       4: getfield      #2                  // Field topologyMode:Lorg/infinispan/remoting/inboundhandler/TopologyMode;
       7: invokevirtual #5                  // Method org/infinispan/remoting/inboundhandler/TopologyMode.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     3: 36
                     4: 59
               default: 82
          }
      36: aload_0
      37: getfield      #6                  // Field handler:Lorg/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler;
      40: invokevirtual #7                  // Method org/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler.getStateTransferLock:()Lorg/infinispan/statetransfer/StateTransferLock;
      43: aload_0
      44: invokespecial #8                  // Method waitTopology:()I
      47: lconst_1
      48: getstatic     #11                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      51: invokeinterface #12,  5           // InterfaceMethod org/infinispan/statetransfer/StateTransferLock.waitForTopology:(IJLjava/util/concurrent/TimeUnit;)V
      56: goto          82
      59: aload_0
      60: getfield      #6                  // Field handler:Lorg/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler;
      63: invokevirtual #7                  // Method org/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler.getStateTransferLock:()Lorg/infinispan/statetransfer/StateTransferLock;
      66: aload_0
      67: invokespecial #8                  // Method waitTopology:()I
      70: lconst_1
      71: getstatic     #11                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      74: invokeinterface #13,  5           // InterfaceMethod org/infinispan/statetransfer/StateTransferLock.waitForTransactionData:(IJLjava/util/concurrent/TimeUnit;)V
      79: goto          82
      82: aload_0
      83: getfield      #6                  // Field handler:Lorg/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler;
      86: aload_0
      87: getfield      #3                  // Field commandTopologyId:I
      90: invokevirtual #14                 // Method org/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler.isCommandSentBeforeFirstTopology:(I)Z
      93: ifeq          100
      96: getstatic     #15                 // Field org/infinispan/remoting/responses/CacheNotFoundResponse.INSTANCE:Lorg/infinispan/remoting/responses/CacheNotFoundResponse;
      99: areturn
     100: aload_0
     101: invokespecial #16                 // Method org/infinispan/remoting/inboundhandler/BaseBlockingRunnable.beforeInvoke:()Lorg/infinispan/remoting/responses/Response;
     104: areturn

  private int waitTopology();
    Code:
       0: aload_0
       1: getfield      #3                  // Field commandTopologyId:I
       4: iconst_0
       5: invokestatic  #17                 // Method java/lang/Math.max:(II)I
       8: ireturn
}
