Compiled from "MapOperation.java"
public class org.infinispan.stream.impl.intops.object.MapOperation<I, O> implements org.infinispan.stream.impl.intops.IntermediateOperation<I, java.util.stream.Stream<I>, O, java.util.stream.Stream<O>> {
  private final java.util.function.Function<? super I, ? extends O> function;

  public org.infinispan.stream.impl.intops.object.MapOperation(java.util.function.Function<? super I, ? extends O>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field function:Ljava/util/function/Function;
       9: return

  public java.util.stream.Stream<O> perform(java.util.stream.Stream<I>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field function:Ljava/util/function/Function;
       5: invokeinterface #3,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      10: areturn

  public void handleInjection(org.infinispan.factories.ComponentRegistry);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field function:Ljava/util/function/Function;
       5: invokevirtual #4                  // Method org/infinispan/factories/ComponentRegistry.wireDependencies:(Ljava/lang/Object;)V
       8: return

  public java.util.function.Function<? super I, ? extends O> getFunction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field function:Ljava/util/function/Function;
       4: areturn

  public java.util.stream.BaseStream perform(java.util.stream.BaseStream);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/util/stream/Stream
       5: invokevirtual #6                  // Method perform:(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
       8: areturn
}
