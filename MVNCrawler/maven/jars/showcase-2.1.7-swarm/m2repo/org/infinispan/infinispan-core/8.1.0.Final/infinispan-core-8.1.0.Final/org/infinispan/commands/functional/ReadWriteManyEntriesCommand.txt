Compiled from "ReadWriteManyEntriesCommand.java"
public final class org.infinispan.commands.functional.ReadWriteManyEntriesCommand<K, V, R> implements org.infinispan.commands.write.WriteCommand {
  public static final byte COMMAND_ID;

  private java.util.Map<? extends K, ? extends V> entries;

  private java.util.function.BiFunction<V, org.infinispan.commons.api.functional.EntryView$ReadWriteEntryView<K, V>, R> f;

  private int topologyId;

  boolean isForwarded;

  private java.util.List<R> remoteReturns;

  public org.infinispan.commands.functional.ReadWriteManyEntriesCommand(java.util.Map<? extends K, ? extends V>, java.util.function.BiFunction<V, org.infinispan.commons.api.functional.EntryView$ReadWriteEntryView<K, V>, R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field topologyId:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isForwarded:Z
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field remoteReturns:Ljava/util/List;
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field entries:Ljava/util/Map;
      30: aload_0
      31: aload_2
      32: putfield      #8                  // Field f:Ljava/util/function/BiFunction;
      35: return

  public org.infinispan.commands.functional.ReadWriteManyEntriesCommand();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field topologyId:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isForwarded:Z
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field remoteReturns:Ljava/util/List;
      25: return

  public org.infinispan.commands.functional.ReadWriteManyEntriesCommand(org.infinispan.commands.functional.ReadWriteManyEntriesCommand);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field topologyId:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isForwarded:Z
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field remoteReturns:Ljava/util/List;
      25: aload_0
      26: aload_1
      27: getfield      #7                  // Field entries:Ljava/util/Map;
      30: putfield      #7                  // Field entries:Ljava/util/Map;
      33: aload_0
      34: aload_1
      35: getfield      #8                  // Field f:Ljava/util/function/BiFunction;
      38: putfield      #8                  // Field f:Ljava/util/function/BiFunction;
      41: return

  public java.util.Map<? extends K, ? extends V> getEntries();
    Code:
       0: aload_0
       1: getfield      #7                  // Field entries:Ljava/util/Map;
       4: areturn

  public void setEntries(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field entries:Ljava/util/Map;
       5: return

  public byte getCommandId();
    Code:
       0: bipush        53
       2: ireturn

  public void setParameters(int, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_2
       2: iconst_0
       3: aaload
       4: checkcast     #10                 // class java/util/Map
       7: putfield      #7                  // Field entries:Ljava/util/Map;
      10: aload_0
      11: aload_2
      12: iconst_1
      13: aaload
      14: checkcast     #11                 // class java/util/function/BiFunction
      17: putfield      #8                  // Field f:Ljava/util/function/BiFunction;
      20: aload_0
      21: aload_2
      22: iconst_2
      23: aaload
      24: checkcast     #12                 // class java/lang/Boolean
      27: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      30: putfield      #3                  // Field isForwarded:Z
      33: return

  public java.lang.Object[] getParameters();
    Code:
       0: iconst_3
       1: anewarray     #14                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #7                  // Field entries:Ljava/util/Map;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #8                  // Field f:Ljava/util/function/BiFunction;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #3                  // Field isForwarded:Z
      24: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: aastore
      28: areturn

  public boolean isForwarded();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isForwarded:Z
       4: ireturn

  public void setForwarded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field isForwarded:Z
       5: return

  public boolean isReturnValueExpected();
    Code:
       0: iconst_1
       1: ireturn

  public int getTopologyId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field topologyId:I
       4: ireturn

  public void setTopologyId(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field topologyId:I
       5: return

  public void addAllRemoteReturns(java.util.List<R>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field remoteReturns:Ljava/util/List;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: return

  public boolean shouldInvoke(org.infinispan.context.InvocationContext);
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext, org.infinispan.commands.Visitor) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokeinterface #17,  3           // InterfaceMethod org/infinispan/commands/Visitor.visitReadWriteManyEntriesCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/functional/ReadWriteManyEntriesCommand;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object perform(org.infinispan.context.InvocationContext) throws java.lang.Throwable;
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #6                  // Field remoteReturns:Ljava/util/List;
       8: invokespecial #18                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_0
      13: getfield      #7                  // Field entries:Ljava/util/Map;
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokedynamic #19,  0             // InvokeDynamic #0:accept:(Lorg/infinispan/commands/functional/ReadWriteManyEntriesCommand;Lorg/infinispan/context/InvocationContext;Ljava/util/List;)Ljava/util/function/BiConsumer;
      24: invokeinterface #20,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      29: aload_2
      30: areturn

  public boolean isSuccessful();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isConditional();
    Code:
       0: iconst_0
       1: ireturn

  public org.infinispan.commands.write.ValueMatcher getValueMatcher();
    Code:
       0: getstatic     #21                 // Field org/infinispan/commands/write/ValueMatcher.MATCH_ALWAYS:Lorg/infinispan/commands/write/ValueMatcher;
       3: areturn

  public void setValueMatcher(org.infinispan.commands.write.ValueMatcher);
    Code:
       0: return

  public java.util.Set<java.lang.Object> getAffectedKeys();
    Code:
       0: aconst_null
       1: areturn

  public void updateStatusFromRemoteResponse(java.lang.Object);
    Code:
       0: return

  public boolean canBlock();
    Code:
       0: iconst_0
       1: ireturn

  public boolean ignoreCommandOnStatus(org.infinispan.lifecycle.ComponentStatus);
    Code:
       0: iconst_0
       1: ireturn

  public boolean readsExistingValues();
    Code:
       0: iconst_1
       1: ireturn

  public boolean alwaysReadsExistingValues();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Set<org.infinispan.context.Flag> getFlags();
    Code:
       0: aconst_null
       1: areturn

  public void setFlags(java.util.Set<org.infinispan.context.Flag>);
    Code:
       0: return

  public void setFlags(org.infinispan.context.Flag...);
    Code:
       0: return

  public boolean hasFlag(org.infinispan.context.Flag);
    Code:
       0: iconst_0
       1: ireturn

  public org.infinispan.metadata.Metadata getMetadata();
    Code:
       0: aconst_null
       1: areturn

  public void setMetadata(org.infinispan.metadata.Metadata);
    Code:
       0: return

  private void lambda$perform$12(org.infinispan.context.InvocationContext, java.util.List, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #22,  2           // InterfaceMethod org/infinispan/context/InvocationContext.lookupEntry:(Ljava/lang/Object;)Lorg/infinispan/container/entries/CacheEntry;
       7: astore        5
       9: aload         5
      11: ifnull        44
      14: aload_0
      15: getfield      #8                  // Field f:Ljava/util/function/BiFunction;
      18: aload         4
      20: aload         5
      22: invokestatic  #23                 // Method org/infinispan/functional/impl/EntryViews.readWrite:(Lorg/infinispan/container/entries/CacheEntry;)Lorg/infinispan/commons/api/functional/EntryView$ReadWriteEntryView;
      25: invokeinterface #24,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: astore        6
      32: aload_2
      33: aload         6
      35: invokestatic  #25                 // Method org/infinispan/functional/impl/EntryViews.snapshot:(Ljava/lang/Object;)Ljava/lang/Object;
      38: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: return
}
