Compiled from "IteratorAsSpliterator.java"
public class org.infinispan.stream.impl.spliterators.IteratorAsSpliterator<T> implements org.infinispan.commons.util.CloseableSpliterator<T> {
  private org.infinispan.commons.util.CloseableIterator<? extends T> iterator;

  private final int characteristics;

  private final int batchIncrease;

  private final int maxBatchSize;

  private long estimateRemaining;

  private int currentBatchSize;

  private org.infinispan.stream.impl.spliterators.IteratorAsSpliterator(org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder<T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.access$100:(Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;)Lorg/infinispan/commons/util/CloseableIterator;
       9: putfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      12: aload_0
      13: aload_1
      14: invokestatic  #5                  // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.access$200:(Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;)I
      17: putfield      #6                  // Field characteristics:I
      20: aload_0
      21: aload_1
      22: invokestatic  #7                  // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.access$300:(Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;)I
      25: putfield      #8                  // Field batchIncrease:I
      28: aload_0
      29: aload_1
      30: invokestatic  #9                  // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.access$400:(Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;)I
      33: putfield      #10                 // Field maxBatchSize:I
      36: aload_0
      37: aload_1
      38: invokestatic  #11                 // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.access$500:(Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;)J
      41: putfield      #12                 // Field estimateRemaining:J
      44: return

  public java.util.Spliterator<T> trySplit();
    Code:
       0: aload_0
       1: getfield      #12                 // Field estimateRemaining:J
       4: lconst_1
       5: lcmp
       6: ifle          129
       9: aload_0
      10: getfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      13: invokeinterface #13,  1           // InterfaceMethod org/infinispan/commons/util/CloseableIterator.hasNext:()Z
      18: ifeq          129
      21: aload_0
      22: getfield      #14                 // Field currentBatchSize:I
      25: aload_0
      26: getfield      #8                  // Field batchIncrease:I
      29: iadd
      30: istore_1
      31: iload_1
      32: i2l
      33: aload_0
      34: getfield      #12                 // Field estimateRemaining:J
      37: lcmp
      38: ifle          47
      41: aload_0
      42: getfield      #12                 // Field estimateRemaining:J
      45: l2i
      46: istore_1
      47: iload_1
      48: aload_0
      49: getfield      #10                 // Field maxBatchSize:I
      52: if_icmple     60
      55: aload_0
      56: getfield      #10                 // Field maxBatchSize:I
      59: istore_1
      60: iload_1
      61: anewarray     #15                 // class java/lang/Object
      64: astore_2
      65: iconst_0
      66: istore_3
      67: aload_0
      68: getfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      71: invokeinterface #13,  1           // InterfaceMethod org/infinispan/commons/util/CloseableIterator.hasNext:()Z
      76: ifeq          102
      79: iload_3
      80: iload_1
      81: if_icmpge     102
      84: aload_2
      85: iload_3
      86: aload_0
      87: getfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      90: invokeinterface #16,  1           // InterfaceMethod org/infinispan/commons/util/CloseableIterator.next:()Ljava/lang/Object;
      95: aastore
      96: iinc          3, 1
      99: goto          67
     102: aload_0
     103: iload_1
     104: putfield      #14                 // Field currentBatchSize:I
     107: aload_0
     108: dup
     109: getfield      #12                 // Field estimateRemaining:J
     112: iload_3
     113: i2l
     114: lsub
     115: putfield      #12                 // Field estimateRemaining:J
     118: aload_2
     119: iconst_0
     120: iload_3
     121: aload_0
     122: getfield      #6                  // Field characteristics:I
     125: invokestatic  #17                 // Method java/util/Spliterators.spliterator:([Ljava/lang/Object;III)Ljava/util/Spliterator;
     128: areturn
     129: aconst_null
     130: areturn

  public void forEachRemaining(java.util.function.Consumer<? super T>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #18                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #19                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      16: aload_1
      17: invokeinterface #20,  2           // InterfaceMethod org/infinispan/commons/util/CloseableIterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      22: return

  public boolean tryAdvance(java.util.function.Consumer<? super T>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #18                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #19                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      16: invokeinterface #13,  1           // InterfaceMethod org/infinispan/commons/util/CloseableIterator.hasNext:()Z
      21: ifeq          41
      24: aload_1
      25: aload_0
      26: getfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      29: invokeinterface #16,  1           // InterfaceMethod org/infinispan/commons/util/CloseableIterator.next:()Ljava/lang/Object;
      34: invokeinterface #21,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field estimateRemaining:J
       4: lreturn

  public int characteristics();
    Code:
       0: aload_0
       1: getfield      #6                  // Field characteristics:I
       4: ireturn

  public java.util.Comparator<? super T> getComparator();
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #23                 // Method hasCharacteristics:(I)Z
       5: ifeq          10
       8: aconst_null
       9: areturn
      10: new           #24                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
       4: invokeinterface #26,  1           // InterfaceMethod org/infinispan/commons/util/CloseableIterator.close:()V
       9: return

  org.infinispan.stream.impl.spliterators.IteratorAsSpliterator(org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder, org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;)V
       5: return
}
