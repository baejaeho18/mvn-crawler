Compiled from "IsMarshallableInterceptor.java"
public class org.infinispan.interceptors.IsMarshallableInterceptor extends org.infinispan.interceptors.base.CommandInterceptor {
  private org.infinispan.commons.marshall.StreamingMarshaller marshaller;

  private org.infinispan.distribution.DistributionManager distManager;

  private boolean storeAsBinary;

  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  public org.infinispan.interceptors.IsMarshallableInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/interceptors/base/CommandInterceptor."<init>":()V
       4: return

  protected org.infinispan.util.logging.Log getLog();
    Code:
       0: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  protected void injectMarshaller(org.infinispan.commons.marshall.StreamingMarshaller, org.infinispan.distribution.DistributionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field marshaller:Lorg/infinispan/commons/marshall/StreamingMarshaller;
       5: aload_0
       6: aload_2
       7: putfield      #4                  // Field distManager:Lorg/infinispan/distribution/DistributionManager;
      10: return

  protected void start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
       5: invokevirtual #6                  // Method org/infinispan/configuration/cache/Configuration.storeAsBinary:()Lorg/infinispan/configuration/cache/StoreAsBinaryConfiguration;
       8: invokevirtual #7                  // Method org/infinispan/configuration/cache/StoreAsBinaryConfiguration.enabled:()Z
      11: ifeq          44
      14: aload_0
      15: getfield      #5                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      18: invokevirtual #6                  // Method org/infinispan/configuration/cache/Configuration.storeAsBinary:()Lorg/infinispan/configuration/cache/StoreAsBinaryConfiguration;
      21: invokevirtual #8                  // Method org/infinispan/configuration/cache/StoreAsBinaryConfiguration.storeKeysAsBinary:()Z
      24: ifne          40
      27: aload_0
      28: getfield      #5                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      31: invokevirtual #6                  // Method org/infinispan/configuration/cache/Configuration.storeAsBinary:()Lorg/infinispan/configuration/cache/StoreAsBinaryConfiguration;
      34: invokevirtual #9                  // Method org/infinispan/configuration/cache/StoreAsBinaryConfiguration.storeValuesAsBinary:()Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: putfield      #10                 // Field storeAsBinary:Z
      48: return

  public java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: invokevirtual #11                 // Method org/infinispan/commands/read/GetKeyValueCommand.getKey:()Ljava/lang/Object;
       4: astore_3
       5: aload_0
       6: invokespecial #12                 // Method isStoreAsBinary:()Z
       9: ifne          22
      12: aload_0
      13: aload_1
      14: aload_3
      15: aload_2
      16: invokespecial #13                 // Method getMightGoRemote:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      19: ifeq          27
      22: aload_0
      23: aload_3
      24: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #15                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitGetKeyValueCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/GetKeyValueCommand;)Ljava/lang/Object;
      33: areturn

  public java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetCacheEntryCommand) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: invokevirtual #16                 // Method org/infinispan/commands/read/GetCacheEntryCommand.getKey:()Ljava/lang/Object;
       4: astore_3
       5: aload_0
       6: invokespecial #12                 // Method isStoreAsBinary:()Z
       9: ifne          22
      12: aload_0
      13: aload_1
      14: aload_3
      15: aload_2
      16: invokespecial #13                 // Method getMightGoRemote:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      19: ifeq          27
      22: aload_0
      23: aload_3
      24: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #17                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitGetCacheEntryCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/GetCacheEntryCommand;)Ljava/lang/Object;
      33: areturn

  public java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetAllCommand) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: invokevirtual #18                 // Method org/infinispan/commands/read/GetAllCommand.getKeys:()Ljava/util/Collection;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          54
      19: aload_3
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: astore        4
      27: aload_0
      28: invokespecial #12                 // Method isStoreAsBinary:()Z
      31: ifne          45
      34: aload_0
      35: aload_1
      36: aload         4
      38: aload_2
      39: invokespecial #13                 // Method getMightGoRemote:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      42: ifeq          51
      45: aload_0
      46: aload         4
      48: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      51: goto          10
      54: aload_0
      55: aload_1
      56: aload_2
      57: invokespecial #22                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitGetAllCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/GetAllCommand;)Ljava/lang/Object;
      60: areturn

  public java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.control.LockControlCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method isStoreAsBinary:()Z
       4: ifne          16
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #23                 // Method isClusterInvocation:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      13: ifeq          52
      16: aload_2
      17: invokevirtual #24                 // Method org/infinispan/commands/control/LockControlCommand.getKeys:()Ljava/util/Collection;
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          52
      35: aload_3
      36: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: astore        4
      43: aload_0
      44: aload         4
      46: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      49: goto          26
      52: aload_0
      53: aload_1
      54: aload_2
      55: invokespecial #25                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitLockControlCommand:(Lorg/infinispan/context/impl/TxInvocationContext;Lorg/infinispan/commands/control/LockControlCommand;)Ljava/lang/Object;
      58: areturn

  public java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method isStoreAsBinary:()Z
       4: ifne          24
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #23                 // Method isClusterInvocation:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      13: ifne          24
      16: aload_0
      17: aload_2
      18: invokespecial #26                 // Method isStoreInvocation:(Lorg/infinispan/commands/FlagAffectedCommand;)Z
      21: ifeq          40
      24: aload_0
      25: aload_2
      26: invokevirtual #27                 // Method org/infinispan/commands/write/PutKeyValueCommand.getKey:()Ljava/lang/Object;
      29: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      32: aload_0
      33: aload_2
      34: invokevirtual #28                 // Method org/infinispan/commands/write/PutKeyValueCommand.getValue:()Ljava/lang/Object;
      37: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokespecial #29                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitPutKeyValueCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/PutKeyValueCommand;)Ljava/lang/Object;
      46: areturn

  public java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutMapCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method isStoreAsBinary:()Z
       4: ifne          24
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #23                 // Method isClusterInvocation:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      13: ifne          24
      16: aload_0
      17: aload_2
      18: invokespecial #26                 // Method isStoreInvocation:(Lorg/infinispan/commands/FlagAffectedCommand;)Z
      21: ifeq          32
      24: aload_0
      25: aload_2
      26: invokevirtual #30                 // Method org/infinispan/commands/write/PutMapCommand.getMap:()Ljava/util/Map;
      29: invokespecial #31                 // Method checkMarshallable:(Ljava/util/Map;)V
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #32                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitPutMapCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/PutMapCommand;)Ljava/lang/Object;
      38: areturn

  public java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.RemoveCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method isStoreAsBinary:()Z
       4: ifne          24
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #23                 // Method isClusterInvocation:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      13: ifne          24
      16: aload_0
      17: aload_2
      18: invokespecial #26                 // Method isStoreInvocation:(Lorg/infinispan/commands/FlagAffectedCommand;)Z
      21: ifeq          32
      24: aload_0
      25: aload_2
      26: invokevirtual #33                 // Method org/infinispan/commands/write/RemoveCommand.getKey:()Ljava/lang/Object;
      29: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #34                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitRemoveCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/RemoveCommand;)Ljava/lang/Object;
      38: areturn

  public java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.ReplaceCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method isStoreAsBinary:()Z
       4: ifne          24
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #23                 // Method isClusterInvocation:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)Z
      13: ifne          24
      16: aload_0
      17: aload_2
      18: invokespecial #26                 // Method isStoreInvocation:(Lorg/infinispan/commands/FlagAffectedCommand;)Z
      21: ifeq          40
      24: aload_0
      25: aload_2
      26: invokevirtual #35                 // Method org/infinispan/commands/write/ReplaceCommand.getKey:()Ljava/lang/Object;
      29: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      32: aload_0
      33: aload_2
      34: invokevirtual #36                 // Method org/infinispan/commands/write/ReplaceCommand.getNewValue:()Ljava/lang/Object;
      37: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokespecial #37                 // Method org/infinispan/interceptors/base/CommandInterceptor.visitReplaceCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/ReplaceCommand;)Ljava/lang/Object;
      46: areturn

  private boolean isClusterInvocation(org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: aload_1
       1: invokeinterface #38,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isOriginLocal:()Z
       6: ifeq          41
       9: aload_0
      10: getfield      #5                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      13: invokevirtual #39                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      16: invokevirtual #40                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
      19: invokevirtual #41                 // Method org/infinispan/configuration/cache/CacheMode.isClustered:()Z
      22: ifeq          41
      25: aload_2
      26: getstatic     #42                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
      29: invokeinterface #43,  2           // InterfaceMethod org/infinispan/commands/FlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean isStoreInvocation(org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #39                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
       7: invokevirtual #40                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
      10: invokevirtual #41                 // Method org/infinispan/configuration/cache/CacheMode.isClustered:()Z
      13: ifne          50
      16: aload_0
      17: getfield      #5                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      20: invokevirtual #44                 // Method org/infinispan/configuration/cache/Configuration.persistence:()Lorg/infinispan/configuration/cache/PersistenceConfiguration;
      23: invokevirtual #45                 // Method org/infinispan/configuration/cache/PersistenceConfiguration.stores:()Ljava/util/List;
      26: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      31: ifne          50
      34: aload_1
      35: getstatic     #47                 // Field org/infinispan/context/Flag.SKIP_CACHE_STORE:Lorg/infinispan/context/Flag;
      38: invokeinterface #43,  2           // InterfaceMethod org/infinispan/commands/FlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  private boolean isStoreAsBinary();
    Code:
       0: aload_0
       1: getfield      #10                 // Field storeAsBinary:Z
       4: ireturn

  private boolean getMightGoRemote(org.infinispan.context.InvocationContext, java.lang.Object, org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: aload_1
       1: invokeinterface #38,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isOriginLocal:()Z
       6: ifeq          69
       9: aload_0
      10: getfield      #5                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      13: invokevirtual #39                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      16: invokevirtual #40                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
      19: invokevirtual #48                 // Method org/infinispan/configuration/cache/CacheMode.isDistributed:()Z
      22: ifeq          69
      25: aload_3
      26: getstatic     #49                 // Field org/infinispan/context/Flag.SKIP_REMOTE_LOOKUP:Lorg/infinispan/context/Flag;
      29: invokeinterface #43,  2           // InterfaceMethod org/infinispan/commands/FlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      34: ifne          69
      37: aload_3
      38: getstatic     #42                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
      41: invokeinterface #43,  2           // InterfaceMethod org/infinispan/commands/FlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      46: ifne          69
      49: aload_0
      50: getfield      #4                  // Field distManager:Lorg/infinispan/distribution/DistributionManager;
      53: aload_2
      54: invokeinterface #50,  2           // InterfaceMethod org/infinispan/distribution/DistributionManager.getLocality:(Ljava/lang/Object;)Lorg/infinispan/distribution/DataLocality;
      59: invokevirtual #51                 // Method org/infinispan/distribution/DataLocality.isLocal:()Z
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  private void checkMarshallable(java.lang.Object) throws org.infinispan.commons.marshall.NotSerializableException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #3                  // Field marshaller:Lorg/infinispan/commons/marshall/StreamingMarshaller;
       6: aload_1
       7: invokeinterface #52,  2           // InterfaceMethod org/infinispan/commons/marshall/StreamingMarshaller.isMarshallable:(Ljava/lang/Object;)Z
      12: istore_2
      13: goto          23
      16: astore_3
      17: aload_0
      18: aload_1
      19: aload_3
      20: invokespecial #54                 // Method throwNotSerializable:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      23: iload_2
      24: ifne          33
      27: aload_0
      28: aload_1
      29: aconst_null
      30: invokespecial #54                 // Method throwNotSerializable:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
           2    13    16   Class java/lang/Exception

  private void throwNotSerializable(java.lang.Object, java.lang.Throwable);
    Code:
       0: ldc           #55                 // String Object of type %s expected to be marshallable
       2: iconst_1
       3: anewarray     #56                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: aastore
      13: invokestatic  #58                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: astore_3
      17: aload_2
      18: ifnonnull     30
      21: new           #59                 // class org/infinispan/commons/marshall/NotSerializableException
      24: dup
      25: aload_3
      26: invokespecial #60                 // Method org/infinispan/commons/marshall/NotSerializableException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: new           #59                 // class org/infinispan/commons/marshall/NotSerializableException
      33: dup
      34: aload_3
      35: aload_2
      36: invokespecial #61                 // Method org/infinispan/commons/marshall/NotSerializableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      39: athrow

  private void checkMarshallable(java.util.Map<java.lang.Object, java.lang.Object>) throws org.infinispan.commons.marshall.NotSerializableException;
    Code:
       0: aload_1
       1: invokeinterface #62,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          54
      21: aload_2
      22: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #64                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #65,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_3
      43: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: invokespecial #14                 // Method checkMarshallable:(Ljava/lang/Object;)V
      51: goto          12
      54: return

  static {};
    Code:
       0: ldc           #67                 // class org/infinispan/interceptors/IsMarshallableInterceptor
       2: invokestatic  #68                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #69,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #70                 // Field trace:Z
      19: return
}
