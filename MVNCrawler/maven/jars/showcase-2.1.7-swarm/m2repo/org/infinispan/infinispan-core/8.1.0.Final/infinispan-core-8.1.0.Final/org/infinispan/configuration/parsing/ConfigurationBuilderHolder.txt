Compiled from "ConfigurationBuilderHolder.java"
public class org.infinispan.configuration.parsing.ConfigurationBuilderHolder {
  private final org.infinispan.configuration.global.GlobalConfigurationBuilder globalConfigurationBuilder;

  private final org.infinispan.configuration.cache.ConfigurationBuilder defaultConfigurationBuilder;

  private final java.util.Map<java.lang.String, org.infinispan.configuration.cache.ConfigurationBuilder> namedConfigurationBuilders;

  private org.infinispan.configuration.cache.ConfigurationBuilder currentConfigurationBuilder;

  private final java.util.Map<java.lang.Class<? extends org.infinispan.configuration.parsing.ConfigurationParser>, org.infinispan.configuration.parsing.ParserContext> parserContexts;

  private final java.lang.ref.WeakReference<java.lang.ClassLoader> classLoader;

  private java.lang.String defaultCacheName;

  public org.infinispan.configuration.parsing.ConfigurationBuilderHolder();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: invokevirtual #2                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       7: invokespecial #3                  // Method "<init>":(Ljava/lang/ClassLoader;)V
      10: return

  public org.infinispan.configuration.parsing.ConfigurationBuilderHolder(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class org/infinispan/configuration/global/GlobalConfigurationBuilder
       8: dup
       9: invokespecial #6                  // Method org/infinispan/configuration/global/GlobalConfigurationBuilder."<init>":()V
      12: putfield      #7                  // Field globalConfigurationBuilder:Lorg/infinispan/configuration/global/GlobalConfigurationBuilder;
      15: aload_0
      16: new           #8                  // class org/infinispan/configuration/cache/ConfigurationBuilder
      19: dup
      20: invokespecial #9                  // Method org/infinispan/configuration/cache/ConfigurationBuilder."<init>":()V
      23: putfield      #10                 // Field defaultConfigurationBuilder:Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      26: aload_0
      27: new           #11                 // class java/util/HashMap
      30: dup
      31: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      34: putfield      #13                 // Field namedConfigurationBuilders:Ljava/util/Map;
      37: aload_0
      38: aload_0
      39: getfield      #10                 // Field defaultConfigurationBuilder:Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      42: putfield      #14                 // Field currentConfigurationBuilder:Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      45: aload_0
      46: new           #11                 // class java/util/HashMap
      49: dup
      50: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      53: putfield      #15                 // Field parserContexts:Ljava/util/Map;
      56: aload_0
      57: new           #16                 // class java/lang/ref/WeakReference
      60: dup
      61: aload_1
      62: invokespecial #17                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      65: putfield      #18                 // Field classLoader:Ljava/lang/ref/WeakReference;
      68: return

  public org.infinispan.configuration.global.GlobalConfigurationBuilder getGlobalConfigurationBuilder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field globalConfigurationBuilder:Lorg/infinispan/configuration/global/GlobalConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.ConfigurationBuilder newConfigurationBuilder(java.lang.String);
    Code:
       0: new           #8                  // class org/infinispan/configuration/cache/ConfigurationBuilder
       3: dup
       4: invokespecial #9                  // Method org/infinispan/configuration/cache/ConfigurationBuilder."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #19                 // Method getDefaultConfigurationBuilder:()Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      13: iconst_0
      14: invokevirtual #20                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.build:(Z)Lorg/infinispan/configuration/cache/Configuration;
      17: invokevirtual #21                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.read:(Lorg/infinispan/configuration/cache/Configuration;)Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      20: pop
      21: aload_0
      22: getfield      #13                 // Field namedConfigurationBuilders:Ljava/util/Map;
      25: aload_1
      26: aload_2
      27: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: aload_2
      35: putfield      #14                 // Field currentConfigurationBuilder:Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      38: aload_2
      39: areturn

  public org.infinispan.configuration.cache.ConfigurationBuilder getDefaultConfigurationBuilder();
    Code:
       0: aload_0
       1: getfield      #13                 // Field namedConfigurationBuilders:Ljava/util/Map;
       4: aload_0
       5: getfield      #23                 // Field defaultCacheName:Ljava/lang/String;
       8: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #8                  // class org/infinispan/configuration/cache/ConfigurationBuilder
      16: astore_1
      17: aload_1
      18: ifnonnull     28
      21: aload_0
      22: getfield      #10                 // Field defaultConfigurationBuilder:Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      25: goto          29
      28: aload_1
      29: areturn

  public java.util.Map<java.lang.String, org.infinispan.configuration.cache.ConfigurationBuilder> getNamedConfigurationBuilders();
    Code:
       0: aload_0
       1: getfield      #13                 // Field namedConfigurationBuilders:Ljava/util/Map;
       4: areturn

  public org.infinispan.configuration.cache.ConfigurationBuilder getCurrentConfigurationBuilder();
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentConfigurationBuilder:Lorg/infinispan/configuration/cache/ConfigurationBuilder;
       4: areturn

  public <T extends org.infinispan.configuration.parsing.ParserContext> T getParserContext(java.lang.Class<? extends org.infinispan.configuration.parsing.ConfigurationParser>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field parserContexts:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class org/infinispan/configuration/parsing/ParserContext
      13: areturn

  public void setParserContext(java.lang.Class<? extends org.infinispan.configuration.parsing.ConfigurationParser>, org.infinispan.configuration.parsing.ParserContext);
    Code:
       0: aload_0
       1: getfield      #15                 // Field parserContexts:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #18                 // Field classLoader:Ljava/lang/ref/WeakReference;
       4: invokevirtual #26                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: checkcast     #27                 // class java/lang/ClassLoader
      10: areturn

  java.util.Map<java.lang.Class<? extends org.infinispan.configuration.parsing.ConfigurationParser>, org.infinispan.configuration.parsing.ParserContext> getParserContexts();
    Code:
       0: aload_0
       1: getfield      #15                 // Field parserContexts:Ljava/util/Map;
       4: areturn

  public void setDefaultCacheName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field defaultCacheName:Ljava/lang/String;
       5: return
}
