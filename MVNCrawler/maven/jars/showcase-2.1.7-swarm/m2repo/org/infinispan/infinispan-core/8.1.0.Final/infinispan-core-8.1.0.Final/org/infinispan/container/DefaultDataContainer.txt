Compiled from "DefaultDataContainer.java"
public class org.infinispan.container.DefaultDataContainer<K, V> implements org.infinispan.container.DataContainer<K, V> {
  private static final org.infinispan.commons.logging.Log log;

  private static final boolean trace;

  private final java.util.concurrent.ConcurrentMap<K, org.infinispan.container.entries.InternalCacheEntry<K, V>> entries;

  protected org.infinispan.container.InternalEntryFactory entryFactory;

  private org.infinispan.eviction.EvictionManager evictionManager;

  private org.infinispan.eviction.PassivationManager passivator;

  private org.infinispan.eviction.ActivationManager activator;

  private org.infinispan.persistence.manager.PersistenceManager pm;

  private org.infinispan.util.TimeService timeService;

  private org.infinispan.notifications.cachelistener.CacheNotifier cacheNotifier;

  private org.infinispan.expiration.ExpirationManager<K, V> expirationManager;

  public org.infinispan.container.DefaultDataContainer(int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        128
       8: iload_1
       9: invokestatic  #8                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentParallelMap:(II)Ljava/util/concurrent/ConcurrentMap;
      12: putfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public org.infinispan.container.DefaultDataContainer(int, org.infinispan.commons.equivalence.Equivalence<? super K>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        128
       8: iload_1
       9: aload_2
      10: invokestatic  #9                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      13: invokestatic  #10                 // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentParallelMap:(IILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/concurrent/ConcurrentMap;
      16: putfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      19: return

  protected org.infinispan.container.DefaultDataContainer(int, long, org.infinispan.eviction.EvictionStrategy, org.infinispan.eviction.EvictionThreadPolicy, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.eviction.EvictionType);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: getstatic     #11                 // Field org/infinispan/container/DefaultDataContainer$1.$SwitchMap$org$infinispan$eviction$EvictionThreadPolicy:[I
       7: aload         5
       9: invokevirtual #12                 // Method org/infinispan/eviction/EvictionThreadPolicy.ordinal:()I
      12: iaload
      13: lookupswitch  { // 2
                     1: 40
                     2: 40
               default: 54
          }
      40: new           #13                 // class org/infinispan/container/DefaultDataContainer$DefaultEvictionListener
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #14                 // Method org/infinispan/container/DefaultDataContainer$DefaultEvictionListener."<init>":(Lorg/infinispan/container/DefaultDataContainer;Lorg/infinispan/container/DefaultDataContainer$1;)V
      49: astore        8
      51: goto          82
      54: new           #15                 // class java/lang/IllegalArgumentException
      57: dup
      58: new           #16                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #18                 // String No such eviction thread policy
      67: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload         4
      72: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: getstatic     #23                 // Field org/infinispan/container/DefaultDataContainer$1.$SwitchMap$org$infinispan$eviction$EvictionStrategy:[I
      85: aload         4
      87: invokevirtual #24                 // Method org/infinispan/eviction/EvictionStrategy.ordinal:()I
      90: iaload
      91: tableswitch   { // 1 to 4
                     1: 120
                     2: 120
                     3: 120
                     4: 128
               default: 151
          }
     120: getstatic     #25                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction.LRU:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction;
     123: astore        9
     125: goto          179
     128: getstatic     #26                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction.LIRS:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction;
     131: astore        9
     133: aload         7
     135: getstatic     #27                 // Field org/infinispan/eviction/EvictionType.MEMORY:Lorg/infinispan/eviction/EvictionType;
     138: if_acmpne     179
     141: new           #15                 // class java/lang/IllegalArgumentException
     144: dup
     145: ldc           #28                 // String Memory based approximation eviction cannot be used with LIRS!
     147: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: new           #15                 // class java/lang/IllegalArgumentException
     154: dup
     155: new           #16                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #29                 // String No such eviction strategy
     164: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload         4
     169: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     172: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: aload         7
     181: getstatic     #27                 // Field org/infinispan/eviction/EvictionType.MEMORY:Lorg/infinispan/eviction/EvictionType;
     184: if_acmpne     204
     187: new           #30                 // class org/infinispan/container/entries/CacheEntrySizeCalculator
     190: dup
     191: new           #31                 // class org/infinispan/container/entries/MarshalledValueEntrySizeCalculator
     194: dup
     195: invokespecial #32                 // Method org/infinispan/container/entries/MarshalledValueEntrySizeCalculator."<init>":()V
     198: invokespecial #33                 // Method org/infinispan/container/entries/CacheEntrySizeCalculator."<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;)V
     201: goto          205
     204: aconst_null
     205: astore        10
     207: aload_0
     208: new           #34                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8
     211: dup
     212: lload_2
     213: aload         9
     215: aload         8
     217: aload         6
     219: invokestatic  #9                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
     222: aload         10
     224: invokespecial #35                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8."<init>":(JLorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionListener;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;)V
     227: putfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
     230: return

  protected org.infinispan.container.DefaultDataContainer(int, long, org.infinispan.eviction.EvictionStrategy, org.infinispan.eviction.EvictionThreadPolicy, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.util.concurrent.jdk8backported.EntrySizeCalculator<? super K, ? super V>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: getstatic     #11                 // Field org/infinispan/container/DefaultDataContainer$1.$SwitchMap$org$infinispan$eviction$EvictionThreadPolicy:[I
       7: aload         5
       9: invokevirtual #12                 // Method org/infinispan/eviction/EvictionThreadPolicy.ordinal:()I
      12: iaload
      13: lookupswitch  { // 2
                     1: 40
                     2: 40
               default: 54
          }
      40: new           #13                 // class org/infinispan/container/DefaultDataContainer$DefaultEvictionListener
      43: dup
      44: aload_0
      45: aconst_null
      46: invokespecial #14                 // Method org/infinispan/container/DefaultDataContainer$DefaultEvictionListener."<init>":(Lorg/infinispan/container/DefaultDataContainer;Lorg/infinispan/container/DefaultDataContainer$1;)V
      49: astore        8
      51: goto          82
      54: new           #15                 // class java/lang/IllegalArgumentException
      57: dup
      58: new           #16                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #18                 // String No such eviction thread policy
      67: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload         4
      72: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: new           #30                 // class org/infinispan/container/entries/CacheEntrySizeCalculator
      85: dup
      86: aload         7
      88: invokespecial #33                 // Method org/infinispan/container/entries/CacheEntrySizeCalculator."<init>":(Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;)V
      91: astore        9
      93: aload_0
      94: new           #34                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8
      97: dup
      98: lload_2
      99: getstatic     #25                 // Field org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction.LRU:Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction;
     102: aload         8
     104: aload         6
     106: invokestatic  #9                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
     109: aload         9
     111: invokespecial #35                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8."<init>":(JLorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$Eviction;Lorg/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8$EvictionListener;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;)V
     114: putfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
     117: return

  public void initialize(org.infinispan.eviction.EvictionManager, org.infinispan.eviction.PassivationManager, org.infinispan.container.InternalEntryFactory, org.infinispan.eviction.ActivationManager, org.infinispan.persistence.manager.PersistenceManager, org.infinispan.util.TimeService, org.infinispan.notifications.cachelistener.CacheNotifier, org.infinispan.expiration.ExpirationManager<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field evictionManager:Lorg/infinispan/eviction/EvictionManager;
       5: aload_0
       6: aload_2
       7: putfield      #5                  // Field passivator:Lorg/infinispan/eviction/PassivationManager;
      10: aload_0
      11: aload_3
      12: putfield      #36                 // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field activator:Lorg/infinispan/eviction/ActivationManager;
      21: aload_0
      22: aload         5
      24: putfield      #3                  // Field pm:Lorg/infinispan/persistence/manager/PersistenceManager;
      27: aload_0
      28: aload         6
      30: putfield      #2                  // Field timeService:Lorg/infinispan/util/TimeService;
      33: aload_0
      34: aload         7
      36: putfield      #37                 // Field cacheNotifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      39: aload_0
      40: aload         8
      42: putfield      #38                 // Field expirationManager:Lorg/infinispan/expiration/ExpirationManager;
      45: return

  public static <K, V> org.infinispan.container.DefaultDataContainer<K, V> boundedDataContainer(int, long, org.infinispan.eviction.EvictionStrategy, org.infinispan.eviction.EvictionThreadPolicy, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.eviction.EvictionType);
    Code:
       0: new           #39                 // class org/infinispan/container/DefaultDataContainer
       3: dup
       4: iload_0
       5: lload_1
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokespecial #40                 // Method "<init>":(IJLorg/infinispan/eviction/EvictionStrategy;Lorg/infinispan/eviction/EvictionThreadPolicy;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/eviction/EvictionType;)V
      16: areturn

  public static <K, V> org.infinispan.container.DefaultDataContainer<K, V> boundedDataContainer(int, long, org.infinispan.eviction.EvictionStrategy, org.infinispan.eviction.EvictionThreadPolicy, org.infinispan.commons.equivalence.Equivalence<? super K>, org.infinispan.commons.util.concurrent.jdk8backported.EntrySizeCalculator<? super K, ? super V>);
    Code:
       0: new           #39                 // class org/infinispan/container/DefaultDataContainer
       3: dup
       4: iload_0
       5: lload_1
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokespecial #41                 // Method "<init>":(IJLorg/infinispan/eviction/EvictionStrategy;Lorg/infinispan/eviction/EvictionThreadPolicy;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;)V
      16: areturn

  public static <K, V> org.infinispan.container.DefaultDataContainer<K, V> unBoundedDataContainer(int, org.infinispan.commons.equivalence.Equivalence<? super K>);
    Code:
       0: new           #39                 // class org/infinispan/container/DefaultDataContainer
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #42                 // Method "<init>":(ILorg/infinispan/commons/equivalence/Equivalence;)V
       9: areturn

  public static <K, V> org.infinispan.container.DefaultDataContainer<K, V> unBoundedDataContainer(int);
    Code:
       0: new           #39                 // class org/infinispan/container/DefaultDataContainer
       3: dup
       4: iload_0
       5: invokespecial #43                 // Method "<init>":(I)V
       8: areturn

  public org.infinispan.container.entries.InternalCacheEntry<K, V> peek(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: instanceof    #44                 // class org/infinispan/commons/util/PeekableMap
       7: ifeq          27
      10: aload_0
      11: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      14: checkcast     #44                 // class org/infinispan/commons/util/PeekableMap
      17: aload_1
      18: invokeinterface #45,  2           // InterfaceMethod org/infinispan/commons/util/PeekableMap.peek:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #46                 // class org/infinispan/container/entries/InternalCacheEntry
      26: areturn
      27: aload_0
      28: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      31: aload_1
      32: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #46                 // class org/infinispan/container/entries/InternalCacheEntry
      40: areturn

  public org.infinispan.container.entries.InternalCacheEntry<K, V> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #46                 // class org/infinispan/container/entries/InternalCacheEntry
      13: astore_2
      14: aload_2
      15: ifnull        70
      18: aload_2
      19: invokeinterface #48,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.canExpire:()Z
      24: ifeq          70
      27: aload_0
      28: getfield      #2                  // Field timeService:Lorg/infinispan/util/TimeService;
      31: invokeinterface #49,  1           // InterfaceMethod org/infinispan/util/TimeService.wallClockTime:()J
      36: lstore_3
      37: aload_2
      38: lload_3
      39: invokeinterface #50,  3           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.isExpired:(J)Z
      44: ifeq          63
      47: aload_0
      48: getfield      #38                 // Field expirationManager:Lorg/infinispan/expiration/ExpirationManager;
      51: aload_2
      52: lload_3
      53: invokeinterface #51,  4           // InterfaceMethod org/infinispan/expiration/ExpirationManager.handleInMemoryExpiration:(Lorg/infinispan/container/entries/InternalCacheEntry;J)V
      58: aconst_null
      59: astore_2
      60: goto          70
      63: aload_2
      64: lload_3
      65: invokeinterface #52,  3           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.touch:(J)V
      70: aload_2
      71: areturn

  public void put(K, V, org.infinispan.metadata.Metadata);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_3
       4: instanceof    #53                 // class org/infinispan/metadata/impl/L1Metadata
       7: ifeq          21
      10: aload_3
      11: checkcast     #53                 // class org/infinispan/metadata/impl/L1Metadata
      14: invokevirtual #54                 // Method org/infinispan/metadata/impl/L1Metadata.metadata:()Lorg/infinispan/metadata/Metadata;
      17: astore_3
      18: iconst_1
      19: istore        4
      21: aload_0
      22: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      25: aload_1
      26: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #46                 // class org/infinispan/container/entries/InternalCacheEntry
      34: astore        5
      36: getstatic     #55                 // Field trace:Z
      39: ifeq          56
      42: getstatic     #56                 // Field log:Lorg/infinispan/commons/logging/Log;
      45: ldc           #57                 // String Creating new ICE for writing. Existing=%s, metadata=%s, new value=%s
      47: aload         5
      49: aload_3
      50: aload_2
      51: invokeinterface #58,  5           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      56: iload         4
      58: ifeq          78
      61: aload_0
      62: getfield      #36                 // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
      65: aload_1
      66: aload_2
      67: aload_3
      68: invokeinterface #59,  4           // InterfaceMethod org/infinispan/container/InternalEntryFactory.createL1:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)Lorg/infinispan/container/entries/InternalCacheEntry;
      73: astore        6
      75: goto          115
      78: aload         5
      80: ifnull        101
      83: aload_0
      84: getfield      #36                 // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
      87: aload         5
      89: aload_2
      90: aload_3
      91: invokeinterface #60,  4           // InterfaceMethod org/infinispan/container/InternalEntryFactory.update:(Lorg/infinispan/container/entries/InternalCacheEntry;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)Lorg/infinispan/container/entries/InternalCacheEntry;
      96: astore        6
      98: goto          115
     101: aload_0
     102: getfield      #36                 // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
     105: aload_1
     106: aload_2
     107: aload_3
     108: invokeinterface #61,  4           // InterfaceMethod org/infinispan/container/InternalEntryFactory.create:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)Lorg/infinispan/container/entries/InternalCacheEntry;
     113: astore        6
     115: getstatic     #55                 // Field trace:Z
     118: ifeq          133
     121: getstatic     #56                 // Field log:Lorg/infinispan/commons/logging/Log;
     124: ldc           #62                 // String Store %s in container
     126: aload         6
     128: invokeinterface #63,  3           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     133: aload_0
     134: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
     137: aload         6
     139: invokeinterface #64,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getKey:()Ljava/lang/Object;
     144: aload_0
     145: aload         6
     147: invokedynamic #65,  0             // InvokeDynamic #0:apply:(Lorg/infinispan/container/DefaultDataContainer;Lorg/infinispan/container/entries/InternalCacheEntry;)Ljava/util/function/BiFunction;
     152: invokeinterface #66,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
     157: pop
     158: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method peek:(Ljava/lang/Object;)Lorg/infinispan/container/entries/InternalCacheEntry;
       5: astore_2
       6: aload_2
       7: ifnull        50
      10: aload_2
      11: invokeinterface #48,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.canExpire:()Z
      16: ifeq          50
      19: aload_2
      20: aload_0
      21: getfield      #2                  // Field timeService:Lorg/infinispan/util/TimeService;
      24: invokeinterface #49,  1           // InterfaceMethod org/infinispan/util/TimeService.wallClockTime:()J
      29: invokeinterface #50,  3           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.isExpired:(J)Z
      34: ifeq          50
      37: aload_0
      38: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      41: aload_1
      42: invokeinterface #68,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aconst_null
      49: astore_2
      50: aload_2
      51: ifnull        58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public org.infinispan.container.entries.InternalCacheEntry<K, V> remove(java.lang.Object);
    Code:
       0: iconst_1
       1: anewarray     #46                 // class org/infinispan/container/entries/InternalCacheEntry
       4: astore_2
       5: aload_0
       6: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       9: aload_1
      10: aload_0
      11: aload_2
      12: invokedynamic #69,  0             // InvokeDynamic #1:apply:(Lorg/infinispan/container/DefaultDataContainer;[Lorg/infinispan/container/entries/InternalCacheEntry;)Ljava/util/function/BiFunction;
      17: invokeinterface #66,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      22: pop
      23: aload_2
      24: iconst_0
      25: aaload
      26: astore_3
      27: aload_3
      28: ifnull        58
      31: aload_3
      32: invokeinterface #48,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.canExpire:()Z
      37: ifeq          62
      40: aload_3
      41: aload_0
      42: getfield      #2                  // Field timeService:Lorg/infinispan/util/TimeService;
      45: invokeinterface #49,  1           // InterfaceMethod org/infinispan/util/TimeService.wallClockTime:()J
      50: invokeinterface #50,  3           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.isExpired:(J)Z
      55: ifeq          62
      58: aconst_null
      59: goto          63
      62: aload_3
      63: areturn

  public long capacity();
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: instanceof    #34                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8
       7: ifeq          23
      10: aload_0
      11: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      14: checkcast     #34                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8
      17: astore_1
      18: aload_1
      19: invokevirtual #70                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.capacity:()J
      22: lreturn
      23: new           #71                 // class java/lang/UnsupportedOperationException
      26: dup
      27: invokespecial #72                 // Method java/lang/UnsupportedOperationException."<init>":()V
      30: athrow

  public void resize(long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: instanceof    #34                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8
       7: ifeq          26
      10: aload_0
      11: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      14: checkcast     #34                 // class org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8
      17: astore_3
      18: aload_3
      19: lload_1
      20: invokevirtual #73                 // Method org/infinispan/commons/util/concurrent/jdk8backported/BoundedEquivalentConcurrentHashMapV8.resize:(J)V
      23: goto          35
      26: getstatic     #56                 // Field log:Lorg/infinispan/commons/logging/Log;
      29: invokeinterface #74,  1           // InterfaceMethod org/infinispan/commons/logging/Log.cannotResizeUnboundedContainer:()Ljava/lang/UnsupportedOperationException;
      34: athrow
      35: return

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #75                 // Method iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: pop
      23: iinc          1, 1
      26: iload_1
      27: ldc           #79                 // int 2147483647
      29: if_icmpne     7
      32: ldc           #79                 // int 2147483647
      34: ireturn
      35: iload_1
      36: ireturn

  public int sizeIncludingExpired();
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #80,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public void clear();
    Code:
       0: getstatic     #56                 // Field log:Lorg/infinispan/commons/logging/Log;
       3: ldc           #81                 // String Clearing data container
       5: iconst_0
       6: anewarray     #82                 // class java/lang/Object
       9: invokeinterface #83,  3           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      18: invokeinterface #84,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      23: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #85,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokestatic  #86                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public java.util.Collection<V> values();
    Code:
       0: new           #87                 // class org/infinispan/container/DefaultDataContainer$Values
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #88                 // Method org/infinispan/container/DefaultDataContainer$Values."<init>":(Lorg/infinispan/container/DefaultDataContainer;Lorg/infinispan/container/DefaultDataContainer$1;)V
       9: areturn

  public java.util.Set<org.infinispan.container.entries.InternalCacheEntry<K, V>> entrySet();
    Code:
       0: new           #89                 // class org/infinispan/container/DefaultDataContainer$EntrySet
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #90                 // Method org/infinispan/container/DefaultDataContainer$EntrySet."<init>":(Lorg/infinispan/container/DefaultDataContainer;Lorg/infinispan/container/DefaultDataContainer$1;)V
       9: areturn

  public void purgeExpired();
    Code:
       0: aload_0
       1: getfield      #38                 // Field expirationManager:Lorg/infinispan/expiration/ExpirationManager;
       4: invokeinterface #91,  1           // InterfaceMethod org/infinispan/expiration/ExpirationManager.processExpiration:()V
       9: return

  public void evict(K);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: invokedynamic #92,  0             // InvokeDynamic #2:apply:(Lorg/infinispan/container/DefaultDataContainer;)Ljava/util/function/BiFunction;
      11: invokeinterface #93,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      16: pop
      17: return

  public org.infinispan.container.entries.InternalCacheEntry<K, V> compute(K, org.infinispan.container.DataContainer$ComputeAction<K, V>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: aload_2
       7: invokedynamic #94,  0             // InvokeDynamic #3:apply:(Lorg/infinispan/container/DefaultDataContainer;Lorg/infinispan/container/DataContainer$ComputeAction;)Ljava/util/function/BiFunction;
      12: invokeinterface #66,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      17: checkcast     #46                 // class org/infinispan/container/entries/InternalCacheEntry
      20: areturn

  public java.util.Iterator<org.infinispan.container.entries.InternalCacheEntry<K, V>> iterator();
    Code:
       0: new           #95                 // class org/infinispan/container/DefaultDataContainer$EntryIterator
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       9: invokeinterface #96,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      14: invokeinterface #97,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: iconst_0
      20: invokespecial #98                 // Method org/infinispan/container/DefaultDataContainer$EntryIterator."<init>":(Lorg/infinispan/container/DefaultDataContainer;Ljava/util/Iterator;Z)V
      23: areturn

  public java.util.Iterator<org.infinispan.container.entries.InternalCacheEntry<K, V>> iteratorIncludingExpired();
    Code:
       0: new           #95                 // class org/infinispan/container/DefaultDataContainer$EntryIterator
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       9: invokeinterface #96,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      14: invokeinterface #97,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: iconst_1
      20: invokespecial #98                 // Method org/infinispan/container/DefaultDataContainer$EntryIterator."<init>":(Lorg/infinispan/container/DefaultDataContainer;Ljava/util/Iterator;Z)V
      23: areturn

  public void executeTask(org.infinispan.filter.KeyFilter<? super K>, java.util.function.BiConsumer<? super K, org.infinispan.container.entries.InternalCacheEntry<K, V>>) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #15                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #99                 // String No filter specified
      10: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #15                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #100                // String No action specified
      24: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      32: checkcast     #101                // class org/infinispan/commons/util/concurrent/ParallelIterableMap
      35: astore_3
      36: aload_3
      37: ldc2_w        #102                // long 32l
      40: aload_1
      41: aload_2
      42: invokedynamic #104,  0            // InvokeDynamic #4:accept:(Lorg/infinispan/filter/KeyFilter;Ljava/util/function/BiConsumer;)Ljava/util/function/BiConsumer;
      47: invokeinterface #105,  4          // InterfaceMethod org/infinispan/commons/util/concurrent/ParallelIterableMap.forEach:(JLjava/util/function/BiConsumer;)V
      52: invokestatic  #106                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      55: invokevirtual #107                // Method java/lang/Thread.isInterrupted:()Z
      58: ifeq          69
      61: new           #108                // class java/lang/InterruptedException
      64: dup
      65: invokespecial #109                // Method java/lang/InterruptedException."<init>":()V
      68: athrow
      69: return

  public void executeTask(org.infinispan.filter.KeyValueFilter<? super K, ? super V>, java.util.function.BiConsumer<? super K, org.infinispan.container.entries.InternalCacheEntry<K, V>>) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #15                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #99                 // String No filter specified
      10: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #15                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #100                // String No action specified
      24: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
      32: checkcast     #101                // class org/infinispan/commons/util/concurrent/ParallelIterableMap
      35: astore_3
      36: aload_3
      37: ldc2_w        #102                // long 32l
      40: aload_1
      41: aload_2
      42: invokedynamic #110,  0            // InvokeDynamic #5:accept:(Lorg/infinispan/filter/KeyValueFilter;Ljava/util/function/BiConsumer;)Ljava/util/function/BiConsumer;
      47: invokeinterface #105,  4          // InterfaceMethod org/infinispan/commons/util/concurrent/ParallelIterableMap.forEach:(JLjava/util/function/BiConsumer;)V
      52: invokestatic  #106                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      55: invokevirtual #107                // Method java/lang/Thread.isInterrupted:()Z
      58: ifeq          69
      61: new           #108                // class java/lang/InterruptedException
      64: dup
      65: invokespecial #109                // Method java/lang/InterruptedException."<init>":()V
      68: athrow
      69: return

  private static void lambda$executeTask$196(org.infinispan.filter.KeyValueFilter, java.util.function.BiConsumer, java.lang.Object, org.infinispan.container.entries.InternalCacheEntry);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokeinterface #111,  1          // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getValue:()Ljava/lang/Object;
       8: aload_3
       9: invokeinterface #112,  1          // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
      14: invokeinterface #113,  4          // InterfaceMethod org/infinispan/filter/KeyValueFilter.accept:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)Z
      19: ifeq          30
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokeinterface #114,  3          // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      30: return

  private static void lambda$executeTask$195(org.infinispan.filter.KeyFilter, java.util.function.BiConsumer, java.lang.Object, org.infinispan.container.entries.InternalCacheEntry);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #115,  2          // InterfaceMethod org/infinispan/filter/KeyFilter.accept:(Ljava/lang/Object;)Z
       7: ifeq          18
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokeinterface #114,  3          // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      18: return

  private org.infinispan.container.entries.InternalCacheEntry lambda$compute$194(org.infinispan.container.DataContainer$ComputeAction, java.lang.Object, org.infinispan.container.entries.InternalCacheEntry);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload_0
       4: getfield      #36                 // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
       7: invokeinterface #116,  4          // InterfaceMethod org/infinispan/container/DataContainer$ComputeAction.compute:(Ljava/lang/Object;Lorg/infinispan/container/entries/InternalCacheEntry;Lorg/infinispan/container/InternalEntryFactory;)Lorg/infinispan/container/entries/InternalCacheEntry;
      12: astore        4
      14: aload         4
      16: aload_3
      17: if_acmpne     22
      20: aload_3
      21: areturn
      22: aload         4
      24: ifnonnull     40
      27: aload_0
      28: getfield      #4                  // Field activator:Lorg/infinispan/eviction/ActivationManager;
      31: aload_2
      32: iconst_0
      33: invokeinterface #117,  3          // InterfaceMethod org/infinispan/eviction/ActivationManager.onRemove:(Ljava/lang/Object;Z)V
      38: aconst_null
      39: areturn
      40: aload_0
      41: getfield      #4                  // Field activator:Lorg/infinispan/eviction/ActivationManager;
      44: aload_2
      45: aload_3
      46: ifnonnull     53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: invokeinterface #118,  3          // InterfaceMethod org/infinispan/eviction/ActivationManager.onUpdate:(Ljava/lang/Object;Z)V
      59: getstatic     #55                 // Field trace:Z
      62: ifeq          77
      65: getstatic     #56                 // Field log:Lorg/infinispan/commons/logging/Log;
      68: ldc           #62                 // String Store %s in container
      70: aload         4
      72: invokeinterface #63,  3           // InterfaceMethod org/infinispan/commons/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      77: aload         4
      79: areturn

  private org.infinispan.container.entries.InternalCacheEntry lambda$evict$193(java.lang.Object, org.infinispan.container.entries.InternalCacheEntry);
    Code:
       0: aload_0
       1: getfield      #5                  // Field passivator:Lorg/infinispan/eviction/PassivationManager;
       4: aload_2
       5: invokeinterface #119,  2          // InterfaceMethod org/infinispan/eviction/PassivationManager.passivate:(Lorg/infinispan/container/entries/InternalCacheEntry;)V
      10: aconst_null
      11: areturn

  private org.infinispan.container.entries.InternalCacheEntry lambda$remove$192(org.infinispan.container.entries.InternalCacheEntry[], java.lang.Object, org.infinispan.container.entries.InternalCacheEntry);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activator:Lorg/infinispan/eviction/ActivationManager;
       4: aload_2
       5: aload_3
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokeinterface #117,  3          // InterfaceMethod org/infinispan/eviction/ActivationManager.onRemove:(Ljava/lang/Object;Z)V
      19: aload_1
      20: iconst_0
      21: aload_3
      22: aastore
      23: aconst_null
      24: areturn

  private org.infinispan.container.entries.InternalCacheEntry lambda$put$191(org.infinispan.container.entries.InternalCacheEntry, java.lang.Object, org.infinispan.container.entries.InternalCacheEntry);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activator:Lorg/infinispan/eviction/ActivationManager;
       4: aload_2
       5: aload_3
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokeinterface #118,  3          // InterfaceMethod org/infinispan/eviction/ActivationManager.onUpdate:(Ljava/lang/Object;Z)V
      19: aload_1
      20: areturn

  static org.infinispan.eviction.EvictionManager access$300(org.infinispan.container.DefaultDataContainer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field evictionManager:Lorg/infinispan/eviction/EvictionManager;
       4: areturn

  static org.infinispan.eviction.PassivationManager access$400(org.infinispan.container.DefaultDataContainer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field passivator:Lorg/infinispan/eviction/PassivationManager;
       4: areturn

  static org.infinispan.eviction.ActivationManager access$500(org.infinispan.container.DefaultDataContainer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activator:Lorg/infinispan/eviction/ActivationManager;
       4: areturn

  static org.infinispan.persistence.manager.PersistenceManager access$600(org.infinispan.container.DefaultDataContainer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pm:Lorg/infinispan/persistence/manager/PersistenceManager;
       4: areturn

  static org.infinispan.util.TimeService access$700(org.infinispan.container.DefaultDataContainer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field timeService:Lorg/infinispan/util/TimeService;
       4: areturn

  static java.util.concurrent.ConcurrentMap access$800(org.infinispan.container.DefaultDataContainer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static {};
    Code:
       0: ldc           #39                 // class org/infinispan/container/DefaultDataContainer
       2: invokestatic  #120                // Method org/infinispan/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/commons/logging/Log;
       5: putstatic     #56                 // Field log:Lorg/infinispan/commons/logging/Log;
       8: getstatic     #56                 // Field log:Lorg/infinispan/commons/logging/Log;
      11: invokeinterface #121,  1          // InterfaceMethod org/infinispan/commons/logging/Log.isTraceEnabled:()Z
      16: putstatic     #55                 // Field trace:Z
      19: return
}
