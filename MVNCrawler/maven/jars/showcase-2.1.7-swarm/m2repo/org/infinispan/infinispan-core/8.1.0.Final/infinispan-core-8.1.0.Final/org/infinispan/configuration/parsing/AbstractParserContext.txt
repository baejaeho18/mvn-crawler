Compiled from "AbstractParserContext.java"
public class org.infinispan.configuration.parsing.AbstractParserContext implements org.infinispan.configuration.parsing.ParserContext {
  java.util.List<org.infinispan.configuration.parsing.ParserContextListener> listeners;

  public org.infinispan.configuration.parsing.AbstractParserContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field listeners:Ljava/util/List;
      15: return

  public void addParsingCompleteListener(org.infinispan.configuration.parsing.ParserContextListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void fireParsingComplete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #9                  // class org/infinispan/configuration/parsing/ParserContextListener
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokeinterface #10,  2           // InterfaceMethod org/infinispan/configuration/parsing/ParserContextListener.parsingComplete:(Lorg/infinispan/configuration/parsing/ParserContext;)V
      36: goto          10
      39: return
}
