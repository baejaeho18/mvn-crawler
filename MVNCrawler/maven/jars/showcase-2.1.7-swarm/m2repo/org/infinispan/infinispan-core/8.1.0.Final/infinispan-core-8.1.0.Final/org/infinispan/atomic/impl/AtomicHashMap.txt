Compiled from "AtomicHashMap.java"
public final class org.infinispan.atomic.impl.AtomicHashMap<K, V> implements org.infinispan.atomic.AtomicMap<K, V>, org.infinispan.atomic.CopyableDeltaAware, java.lang.Cloneable {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  protected final org.infinispan.commons.util.FastCopyHashMap<K, V> delegate;

  private org.infinispan.atomic.impl.AtomicHashMapDelta delta;

  private volatile org.infinispan.atomic.impl.AtomicHashMapProxy<K, V> proxy;

  volatile boolean copied;

  volatile boolean removed;

  public static <K, V> org.infinispan.atomic.impl.AtomicHashMap<K, V> newInstance(org.infinispan.Cache<java.lang.Object, java.lang.Object>, java.lang.Object);
    Code:
       0: new           #4                  // class org/infinispan/atomic/impl/AtomicHashMap
       3: dup
       4: invokespecial #5                  // Method "<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokeinterface #6,  3            // InterfaceMethod org/infinispan/Cache.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: astore_3
      17: aload_3
      18: ifnull        26
      21: aload_3
      22: checkcast     #4                  // class org/infinispan/atomic/impl/AtomicHashMap
      25: astore_2
      26: aload_2
      27: areturn

  public org.infinispan.atomic.impl.AtomicHashMap();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field copied:Z
      14: aload_0
      15: iconst_0
      16: putfield      #10                 // Field removed:Z
      19: aload_0
      20: new           #11                 // class org/infinispan/commons/util/FastCopyHashMap
      23: dup
      24: invokespecial #12                 // Method org/infinispan/commons/util/FastCopyHashMap."<init>":()V
      27: putfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
      30: return

  private org.infinispan.atomic.impl.AtomicHashMap(org.infinispan.commons.util.FastCopyHashMap<K, V>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field copied:Z
      14: aload_0
      15: iconst_0
      16: putfield      #10                 // Field removed:Z
      19: aload_0
      20: aload_1
      21: putfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
      24: return

  public org.infinispan.atomic.impl.AtomicHashMap(boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method "<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #9                  // Field copied:Z
       9: return

  private org.infinispan.atomic.impl.AtomicHashMap(org.infinispan.commons.util.FastCopyHashMap<K, V>, org.infinispan.atomic.impl.AtomicHashMapProxy<K, V>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field copied:Z
      14: aload_0
      15: iconst_0
      16: putfield      #10                 // Field removed:Z
      19: aload_0
      20: aload_1
      21: putfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
      24: aload_0
      25: aload_2
      26: putfield      #14                 // Field proxy:Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
      29: aload_0
      30: iconst_1
      31: putfield      #9                  // Field copied:Z
      34: return

  public void commit();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #9                  // Field copied:Z
       5: aload_0
       6: aconst_null
       7: putfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      10: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: invokevirtual #15                 // Method org/infinispan/commons/util/FastCopyHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: invokevirtual #16                 // Method org/infinispan/commons/util/FastCopyHashMap.isEmpty:()Z
       7: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: aload_1
       5: invokevirtual #17                 // Method org/infinispan/commons/util/FastCopyHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: aload_1
       5: invokevirtual #18                 // Method org/infinispan/commons/util/FastCopyHashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: aload_1
       5: invokevirtual #19                 // Method org/infinispan/commons/util/FastCopyHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_2
       9: getstatic     #3                  // Field trace:Z
      12: ifeq          27
      15: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
      18: ldc           #20                 // String Atomic hash map get(key=%s) returns %s
      20: aload_1
      21: aload_2
      22: invokeinterface #21,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_2
      28: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: invokevirtual #22                 // Method org/infinispan/commons/util/FastCopyHashMap.keySet:()Ljava/util/Set;
       7: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: invokevirtual #23                 // Method org/infinispan/commons/util/FastCopyHashMap.values:()Ljava/util/Collection;
       7: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: invokevirtual #24                 // Method org/infinispan/commons/util/FastCopyHashMap.entrySet:()Ljava/util/Set;
       7: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #25                 // Method org/infinispan/commons/util/FastCopyHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_3
      10: new           #26                 // class org/infinispan/atomic/impl/PutOperation
      13: dup
      14: aload_1
      15: aload_3
      16: aload_2
      17: invokespecial #27                 // Method org/infinispan/atomic/impl/PutOperation."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      20: astore        4
      22: aload_0
      23: invokevirtual #28                 // Method getDelta:()Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      26: aload         4
      28: invokevirtual #29                 // Method org/infinispan/atomic/impl/AtomicHashMapDelta.addOperation:(Lorg/infinispan/atomic/impl/Operation;)V
      31: aload_3
      32: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: aload_1
       5: invokevirtual #30                 // Method org/infinispan/commons/util/FastCopyHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_2
       9: new           #31                 // class org/infinispan/atomic/impl/RemoveOperation
      12: dup
      13: aload_1
      14: aload_2
      15: invokespecial #32                 // Method org/infinispan/atomic/impl/RemoveOperation."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      18: astore_3
      19: aload_0
      20: invokevirtual #28                 // Method getDelta:()Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      23: aload_3
      24: invokevirtual #29                 // Method org/infinispan/atomic/impl/AtomicHashMapDelta.addOperation:(Lorg/infinispan/atomic/impl/Operation;)V
      27: aload_2
      28: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          51
      21: aload_2
      22: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #37                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: invokevirtual #40                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: goto          12
      51: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: invokevirtual #41                 // Method org/infinispan/commons/util/FastCopyHashMap.clone:()Lorg/infinispan/commons/util/FastCopyHashMap;
       7: astore_1
       8: new           #42                 // class org/infinispan/atomic/impl/ClearOperation
      11: dup
      12: aload_1
      13: invokespecial #43                 // Method org/infinispan/atomic/impl/ClearOperation."<init>":(Lorg/infinispan/commons/util/FastCopyHashMap;)V
      16: astore_2
      17: aload_0
      18: invokevirtual #28                 // Method getDelta:()Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      21: aload_2
      22: invokevirtual #29                 // Method org/infinispan/atomic/impl/AtomicHashMapDelta.addOperation:(Lorg/infinispan/atomic/impl/Operation;)V
      25: aload_0
      26: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
      29: invokevirtual #44                 // Method org/infinispan/commons/util/FastCopyHashMap.clear:()V
      32: return

  public org.infinispan.atomic.impl.AtomicHashMapProxy<K, V> getProxy(org.infinispan.AdvancedCache<java.lang.Object, java.lang.Object>, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #14                 // Field proxy:Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
       4: ifnonnull     66
       7: aload_0
       8: dup
       9: astore        4
      11: monitorenter
      12: aload_0
      13: getfield      #14                 // Field proxy:Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
      16: ifnonnull     52
      19: iload_3
      20: ifeq          39
      23: aload_0
      24: new           #45                 // class org/infinispan/atomic/impl/FineGrainedAtomicHashMapProxy
      27: dup
      28: aload_1
      29: aload_2
      30: invokespecial #46                 // Method org/infinispan/atomic/impl/FineGrainedAtomicHashMapProxy."<init>":(Lorg/infinispan/AdvancedCache;Ljava/lang/Object;)V
      33: putfield      #14                 // Field proxy:Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
      36: goto          52
      39: aload_0
      40: new           #47                 // class org/infinispan/atomic/impl/AtomicHashMapProxy
      43: dup
      44: aload_1
      45: aload_2
      46: invokespecial #48                 // Method org/infinispan/atomic/impl/AtomicHashMapProxy."<init>":(Lorg/infinispan/AdvancedCache;Ljava/lang/Object;)V
      49: putfield      #14                 // Field proxy:Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
      52: aload         4
      54: monitorexit
      55: goto          66
      58: astore        5
      60: aload         4
      62: monitorexit
      63: aload         5
      65: athrow
      66: aload_0
      67: getfield      #14                 // Field proxy:Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
      70: areturn
    Exception table:
       from    to  target type
          12    55    58   any
          58    63    58   any

  public void markRemoved(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field removed:Z
       5: return

  public org.infinispan.atomic.Delta delta();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
       4: ifnonnull     13
       7: getstatic     #49                 // Field org/infinispan/atomic/NullDelta.INSTANCE:Lorg/infinispan/atomic/NullDelta;
      10: goto          17
      13: aload_0
      14: getfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      17: astore_1
      18: aload_0
      19: aconst_null
      20: putfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      23: aload_1
      24: areturn

  public org.infinispan.atomic.impl.AtomicHashMap<K, V> copy();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/infinispan/commons/util/FastCopyHashMap;
       4: invokevirtual #41                 // Method org/infinispan/commons/util/FastCopyHashMap.clone:()Lorg/infinispan/commons/util/FastCopyHashMap;
       7: astore_1
       8: new           #4                  // class org/infinispan/atomic/impl/AtomicHashMap
      11: dup
      12: aload_1
      13: aload_0
      14: getfield      #14                 // Field proxy:Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
      17: invokespecial #50                 // Method "<init>":(Lorg/infinispan/commons/util/FastCopyHashMap;Lorg/infinispan/atomic/impl/AtomicHashMapProxy;)V
      20: areturn

  public java.lang.String toString();
    Code:
       0: new           #51                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #53                 // String AtomicHashMap{size=
       9: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #55                 // Method size:()I
      16: invokevirtual #56                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #57                 // String }
      21: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void initForWriting();
    Code:
       0: aload_0
       1: new           #59                 // class org/infinispan/atomic/impl/AtomicHashMapDelta
       4: dup
       5: invokespecial #60                 // Method org/infinispan/atomic/impl/AtomicHashMapDelta."<init>":()V
       8: putfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      11: return

  org.infinispan.atomic.impl.AtomicHashMapDelta getDelta();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
       4: ifnonnull     18
       7: aload_0
       8: new           #59                 // class org/infinispan/atomic/impl/AtomicHashMapDelta
      11: dup
      12: invokespecial #60                 // Method org/infinispan/atomic/impl/AtomicHashMapDelta."<init>":()V
      15: putfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      18: aload_0
      19: getfield      #8                  // Field delta:Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      22: areturn

  public org.infinispan.atomic.CopyableDeltaAware copy();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method copy:()Lorg/infinispan/atomic/impl/AtomicHashMap;
       4: areturn

  static boolean access$000();
    Code:
       0: getstatic     #3                  // Field trace:Z
       3: ireturn

  static org.infinispan.util.logging.Log access$100();
    Code:
       0: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  org.infinispan.atomic.impl.AtomicHashMap(org.infinispan.commons.util.FastCopyHashMap, org.infinispan.atomic.impl.AtomicHashMap$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/infinispan/commons/util/FastCopyHashMap;)V
       5: return

  static {};
    Code:
       0: ldc           #4                  // class org/infinispan/atomic/impl/AtomicHashMap
       2: invokestatic  #62                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #63,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #3                  // Field trace:Z
      19: return
}
