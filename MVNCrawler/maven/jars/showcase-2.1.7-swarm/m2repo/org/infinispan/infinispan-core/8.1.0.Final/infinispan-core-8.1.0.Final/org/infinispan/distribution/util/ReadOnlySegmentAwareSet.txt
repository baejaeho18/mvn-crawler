Compiled from "ReadOnlySegmentAwareSet.java"
public class org.infinispan.distribution.util.ReadOnlySegmentAwareSet<E> extends org.infinispan.util.AbstractDelegatingSet<E> {
  protected final java.util.Set<E> set;

  protected final org.infinispan.distribution.ch.ConsistentHash ch;

  protected final java.util.Set<java.lang.Integer> allowedSegments;

  public org.infinispan.distribution.util.ReadOnlySegmentAwareSet(java.util.Set<E>, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/util/AbstractDelegatingSet."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       9: putfield      #3                  // Field set:Ljava/util/Set;
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field ch:Lorg/infinispan/distribution/ch/ConsistentHash;
      17: aload_0
      18: aload_3
      19: putfield      #5                  // Field allowedSegments:Ljava/util/Set;
      22: return

  protected java.util.Set<E> delegate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field set:Ljava/util/Set;
       4: areturn

  protected boolean valueAllowed(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ch:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getSegment:(Ljava/lang/Object;)I
      10: istore_2
      11: aload_0
      12: getfield      #5                  // Field allowedSegments:Ljava/util/Set;
      15: iload_2
      16: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokeinterface #8,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method valueAllowed:(Ljava/lang/Object;)Z
       5: ifeq          14
       8: aload_0
       9: aload_1
      10: invokespecial #10                 // Method org/infinispan/util/AbstractDelegatingSet.contains:(Ljava/lang/Object;)Z
      13: ireturn
      14: iconst_0
      15: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          44
      16: aload_2
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: aload_3
      25: invokevirtual #9                  // Method valueAllowed:(Ljava/lang/Object;)Z
      28: ifeq          41
      31: aload_0
      32: aload_3
      33: invokespecial #10                 // Method org/infinispan/util/AbstractDelegatingSet.contains:(Ljava/lang/Object;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: goto          7
      44: iconst_1
      45: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method iterator:()Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method iterator:()Ljava/util/Iterator;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          29
      16: aload_1
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: pop
      23: iinc          2, 1
      26: goto          7
      29: iload_2
      30: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #15                 // class org/infinispan/distribution/util/ReadOnlySegmentAwareIterator
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method org/infinispan/util/AbstractDelegatingSet.iterator:()Ljava/util/Iterator;
       8: aload_0
       9: getfield      #4                  // Field ch:Lorg/infinispan/distribution/ch/ConsistentHash;
      12: aload_0
      13: getfield      #5                  // Field allowedSegments:Ljava/util/Set;
      16: invokespecial #17                 // Method org/infinispan/distribution/util/ReadOnlySegmentAwareIterator."<init>":(Ljava/util/Iterator;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/Set;)V
      19: areturn

  protected java.util.Collection delegate();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method delegate:()Ljava/util/Set;
       4: areturn
}
