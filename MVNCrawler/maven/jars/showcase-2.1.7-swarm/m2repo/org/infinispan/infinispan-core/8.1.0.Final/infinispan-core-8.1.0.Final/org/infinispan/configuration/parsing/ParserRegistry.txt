Compiled from "ParserRegistry.java"
public class org.infinispan.configuration.parsing.ParserRegistry implements org.infinispan.configuration.parsing.NamespaceMappingParser {
  private static final org.infinispan.util.logging.Log log;

  private final java.lang.ref.WeakReference<java.lang.ClassLoader> cl;

  private final java.util.concurrent.ConcurrentMap<javax.xml.namespace.QName, org.infinispan.configuration.parsing.ConfigurationParser> parserMappings;

  public org.infinispan.configuration.parsing.ParserRegistry();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: invokevirtual #3                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       7: invokespecial #4                  // Method "<init>":(Ljava/lang/ClassLoader;)V
      10: return

  public org.infinispan.configuration.parsing.ParserRegistry(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #5                  // Method "<init>":(Ljava/lang/ClassLoader;Z)V
       6: return

  public org.infinispan.configuration.parsing.ParserRegistry(java.lang.ClassLoader, boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #8                  // Field parserMappings:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: new           #9                  // class java/lang/ref/WeakReference
      15: dup
      16: aload_1
      17: invokespecial #10                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      20: putfield      #11                 // Field cl:Ljava/lang/ref/WeakReference;
      23: ldc           #12                 // class org/infinispan/configuration/parsing/ConfigurationParser
      25: iconst_2
      26: anewarray     #13                 // class java/lang/ClassLoader
      29: dup
      30: iconst_0
      31: aload_0
      32: getfield      #11                 // Field cl:Ljava/lang/ref/WeakReference;
      35: invokevirtual #14                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      38: checkcast     #13                 // class java/lang/ClassLoader
      41: aastore
      42: dup
      43: iconst_1
      44: ldc           #15                 // class org/infinispan/configuration/parsing/ParserRegistry
      46: invokevirtual #16                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      49: aastore
      50: invokestatic  #17                 // Method org/infinispan/commons/util/ServiceFinder.load:(Ljava/lang/Class;[Ljava/lang/ClassLoader;)Ljava/util/Set;
      53: astore_3
      54: aload_3
      55: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      60: astore        4
      62: aload         4
      64: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          268
      72: aload         4
      74: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #12                 // class org/infinispan/configuration/parsing/ConfigurationParser
      82: astore        5
      84: aload         5
      86: invokeinterface #21,  1           // InterfaceMethod org/infinispan/configuration/parsing/ConfigurationParser.getNamespaces:()[Lorg/infinispan/configuration/parsing/Namespace;
      91: astore        6
      93: aload         6
      95: ifnonnull     115
      98: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
     101: aload         5
     103: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     106: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
     109: invokeinterface #25,  2           // InterfaceMethod org/infinispan/util/logging/Log.parserDoesNotDeclareNamespaces:(Ljava/lang/String;)Lorg/infinispan/commons/CacheConfigurationException;
     114: athrow
     115: iload_2
     116: istore        7
     118: iload         7
     120: ifeq          173
     123: aload         6
     125: astore        8
     127: aload         8
     129: arraylength
     130: istore        9
     132: iconst_0
     133: istore        10
     135: iload         10
     137: iload         9
     139: if_icmpge     173
     142: aload         8
     144: iload         10
     146: aaload
     147: astore        11
     149: ldc           #26                 // String
     151: aload         11
     153: invokeinterface #27,  1           // InterfaceMethod org/infinispan/configuration/parsing/Namespace.uri:()Ljava/lang/String;
     158: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     161: ifeq          167
     164: iconst_0
     165: istore        7
     167: iinc          10, 1
     170: goto          135
     173: iload         7
     175: ifne          260
     178: aload         6
     180: astore        8
     182: aload         8
     184: arraylength
     185: istore        9
     187: iconst_0
     188: istore        10
     190: iload         10
     192: iload         9
     194: if_icmpge     260
     197: aload         8
     199: iload         10
     201: aaload
     202: astore        11
     204: new           #29                 // class javax/xml/namespace/QName
     207: dup
     208: aload         11
     210: invokeinterface #27,  1           // InterfaceMethod org/infinispan/configuration/parsing/Namespace.uri:()Ljava/lang/String;
     215: aload         11
     217: invokeinterface #30,  1           // InterfaceMethod org/infinispan/configuration/parsing/Namespace.root:()Ljava/lang/String;
     222: invokespecial #31                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     225: astore        12
     227: aload_0
     228: getfield      #8                  // Field parserMappings:Ljava/util/concurrent/ConcurrentMap;
     231: aload         12
     233: aload         5
     235: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     240: ifnull        254
     243: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
     246: aload         12
     248: invokeinterface #33,  2           // InterfaceMethod org/infinispan/util/logging/Log.parserRootElementAlreadyRegistered:(Ljavax/xml/namespace/QName;)Ljava/lang/IllegalArgumentException;
     253: athrow
     254: iinc          10, 1
     257: goto          190
     260: goto          265
     263: astore        6
     265: goto          62
     268: return
    Exception table:
       from    to  target type
          84   260   263   Class java/lang/Exception

  public org.infinispan.configuration.parsing.ConfigurationBuilderHolder parseFile(java.lang.String) throws java.io.IOException;
    Code:
       0: invokestatic  #35                 // Method org/infinispan/commons/util/FileLookupFactory.newInstance:()Lorg/infinispan/commons/util/FileLookup;
       3: astore_2
       4: aload_2
       5: aload_1
       6: aload_0
       7: getfield      #11                 // Field cl:Ljava/lang/ref/WeakReference;
      10: invokevirtual #14                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      13: checkcast     #13                 // class java/lang/ClassLoader
      16: invokeinterface #36,  3           // InterfaceMethod org/infinispan/commons/util/FileLookup.lookupFile:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/io/InputStream;
      21: astore_3
      22: aload_3
      23: ifnonnull     35
      26: new           #37                 // class java/io/FileNotFoundException
      29: dup
      30: aload_1
      31: invokespecial #38                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_3
      37: invokevirtual #39                 // Method parse:(Ljava/io/InputStream;)Lorg/infinispan/configuration/parsing/ConfigurationBuilderHolder;
      40: astore        4
      42: aload_3
      43: invokestatic  #40                 // Method org/infinispan/commons/util/Util.close:(Ljava/io/Closeable;)V
      46: aload         4
      48: areturn
      49: astore        5
      51: aload_3
      52: invokestatic  #40                 // Method org/infinispan/commons/util/Util.close:(Ljava/io/Closeable;)V
      55: aload         5
      57: athrow
    Exception table:
       from    to  target type
          35    42    49   any
          49    51    49   any

  public org.infinispan.configuration.parsing.ConfigurationBuilderHolder parse(java.io.InputStream);
    Code:
       0: new           #41                 // class org/infinispan/configuration/parsing/ConfigurationBuilderHolder
       3: dup
       4: aload_0
       5: getfield      #11                 // Field cl:Ljava/lang/ref/WeakReference;
       8: invokevirtual #14                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      11: checkcast     #13                 // class java/lang/ClassLoader
      14: invokespecial #42                 // Method org/infinispan/configuration/parsing/ConfigurationBuilderHolder."<init>":(Ljava/lang/ClassLoader;)V
      17: astore_2
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #43                 // Method parse:(Ljava/io/InputStream;Lorg/infinispan/configuration/parsing/ConfigurationBuilderHolder;)V
      24: aload_2
      25: areturn
      26: astore_2
      27: aload_2
      28: athrow
      29: astore_2
      30: new           #44                 // class org/infinispan/commons/CacheConfigurationException
      33: dup
      34: aload_2
      35: invokespecial #45                 // Method org/infinispan/commons/CacheConfigurationException."<init>":(Ljava/lang/Exception;)V
      38: athrow
    Exception table:
       from    to  target type
           0    25    26   Class org/infinispan/commons/CacheConfigurationException
           0    25    29   Class java/lang/Exception

  public void parse(java.io.InputStream, org.infinispan.configuration.parsing.ConfigurationBuilderHolder) throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #46                 // class java/io/BufferedInputStream
       3: dup
       4: aload_1
       5: invokespecial #47                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
       8: astore_3
       9: invokestatic  #48                 // Method javax/xml/stream/XMLInputFactory.newInstance:()Ljavax/xml/stream/XMLInputFactory;
      12: aload_3
      13: invokevirtual #49                 // Method javax/xml/stream/XMLInputFactory.createXMLStreamReader:(Ljava/io/InputStream;)Ljavax/xml/stream/XMLStreamReader;
      16: astore        4
      18: new           #50                 // class org/infinispan/configuration/parsing/XMLExtendedStreamReaderImpl
      21: dup
      22: aload_0
      23: aload         4
      25: invokespecial #51                 // Method org/infinispan/configuration/parsing/XMLExtendedStreamReaderImpl."<init>":(Lorg/infinispan/configuration/parsing/NamespaceMappingParser;Ljavax/xml/stream/XMLStreamReader;)V
      28: astore        5
      30: aload_0
      31: aload         5
      33: aload_2
      34: invokevirtual #52                 // Method parse:(Lorg/infinispan/configuration/parsing/XMLExtendedStreamReader;Lorg/infinispan/configuration/parsing/ConfigurationBuilderHolder;)V
      37: aload         4
      39: invokeinterface #53,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.close:()V
      44: aload_2
      45: invokevirtual #54                 // Method org/infinispan/configuration/parsing/ConfigurationBuilderHolder.getParserContexts:()Ljava/util/Map;
      48: invokeinterface #55,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      53: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      58: astore        6
      60: aload         6
      62: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          92
      70: aload         6
      72: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #56                 // class org/infinispan/configuration/parsing/ParserContext
      80: astore        7
      82: aload         7
      84: invokeinterface #57,  1           // InterfaceMethod org/infinispan/configuration/parsing/ParserContext.fireParsingComplete:()V
      89: goto          60
      92: return

  public void parse(org.infinispan.configuration.parsing.XMLExtendedStreamReader, org.infinispan.configuration.parsing.ConfigurationBuilderHolder) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: bipush        7
       3: aconst_null
       4: aconst_null
       5: invokeinterface #58,  4           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.require:(ILjava/lang/String;Ljava/lang/String;)V
      10: aload_1
      11: invokeinterface #59,  1           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.nextTag:()I
      16: pop
      17: aload_1
      18: iconst_1
      19: aconst_null
      20: aconst_null
      21: invokeinterface #58,  4           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.require:(ILjava/lang/String;Ljava/lang/String;)V
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokevirtual #60                 // Method parseElement:(Lorg/infinispan/configuration/parsing/XMLExtendedStreamReader;Lorg/infinispan/configuration/parsing/ConfigurationBuilderHolder;)V
      32: aload_1
      33: invokeinterface #61,  1           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.next:()I
      38: bipush        8
      40: if_icmpeq     46
      43: goto          32
      46: aload_1
      47: invokeinterface #62,  1           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.close:()V
      52: goto          75
      55: astore_3
      56: goto          75
      59: astore        4
      61: aload_1
      62: invokeinterface #62,  1           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.close:()V
      67: goto          72
      70: astore        5
      72: aload         4
      74: athrow
      75: return
    Exception table:
       from    to  target type
          46    52    55   Class java/lang/Exception
           0    46    59   any
          61    67    70   Class java/lang/Exception
          59    61    59   any

  public void parseElement(org.infinispan.configuration.parsing.XMLExtendedStreamReader, org.infinispan.configuration.parsing.ConfigurationBuilderHolder) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: invokeinterface #63,  1           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.getName:()Ljavax/xml/namespace/QName;
       6: astore_3
       7: aload_0
       8: getfield      #8                  // Field parserMappings:Ljava/util/concurrent/ConcurrentMap;
      11: aload_3
      12: invokeinterface #64,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #12                 // class org/infinispan/configuration/parsing/ConfigurationParser
      20: astore        4
      22: aload         4
      24: ifnonnull     44
      27: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
      30: aload_3
      31: invokevirtual #65                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      34: aload_3
      35: invokevirtual #66                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      38: invokeinterface #67,  3           // InterfaceMethod org/infinispan/util/logging/Log.unsupportedConfiguration:(Ljava/lang/String;Ljava/lang/String;)Lorg/infinispan/commons/CacheConfigurationException;
      43: athrow
      44: aload_1
      45: invokeinterface #68,  1           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.getSchema:()Lorg/infinispan/configuration/parsing/Schema;
      50: astore        5
      52: aload_1
      53: aload_3
      54: invokevirtual #66                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      57: invokestatic  #69                 // Method org/infinispan/configuration/parsing/Schema.fromNamespaceURI:(Ljava/lang/String;)Lorg/infinispan/configuration/parsing/Schema;
      60: invokeinterface #70,  2           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.setSchema:(Lorg/infinispan/configuration/parsing/Schema;)V
      65: aload         4
      67: aload_1
      68: aload_2
      69: invokeinterface #71,  3           // InterfaceMethod org/infinispan/configuration/parsing/ConfigurationParser.readElement:(Lorg/infinispan/configuration/parsing/XMLExtendedStreamReader;Lorg/infinispan/configuration/parsing/ConfigurationBuilderHolder;)V
      74: aload_1
      75: aload         5
      77: invokeinterface #70,  2           // InterfaceMethod org/infinispan/configuration/parsing/XMLExtendedStreamReader.setSchema:(Lorg/infinispan/configuration/parsing/Schema;)V
      82: return

  static {};
    Code:
       0: ldc           #15                 // class org/infinispan/configuration/parsing/ParserRegistry
       2: invokestatic  #72                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
