Compiled from "PreferAvailabilityStrategy.java"
public class org.infinispan.partitionhandling.impl.PreferAvailabilityStrategy implements org.infinispan.partitionhandling.impl.AvailabilityStrategy {
  private static final org.infinispan.util.logging.Log log;

  public org.infinispan.partitionhandling.impl.PreferAvailabilityStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void onJoin(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_1
       1: aload_1
       2: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
       7: invokeinterface #3,  2            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.queueRebalance:(Ljava/util/List;)V
      12: return

  public void onGracefulLeave(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
       6: astore_3
       7: new           #5                  // class java/util/ArrayList
      10: dup
      11: aload_3
      12: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      15: invokespecial #7                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore        4
      20: aload         4
      22: aload_2
      23: invokeinterface #8,  2            // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      28: pop
      29: aload         4
      31: invokeinterface #9,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      36: ifeq          64
      39: getstatic     #10                 // Field log:Lorg/infinispan/util/logging/Log;
      42: ldc           #11                 // String The last node of cache %s left
      44: aload_1
      45: invokeinterface #12,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      50: invokeinterface #13,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      55: aload_1
      56: aload         4
      58: invokeinterface #14,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateCurrentTopology:(Ljava/util/List;)V
      63: return
      64: aload_1
      65: invokeinterface #15,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
      70: ifnull        106
      73: aload_0
      74: aload_1
      75: invokeinterface #15,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
      80: invokevirtual #16                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      83: aload         4
      85: invokespecial #17                 // Method isDataLost:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)Z
      88: ifeq          106
      91: getstatic     #10                 // Field log:Lorg/infinispan/util/logging/Log;
      94: aload_1
      95: invokeinterface #12,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     100: aload_2
     101: invokeinterface #18,  3           // InterfaceMethod org/infinispan/util/logging/Log.lostDataBecauseOfGracefulLeaver:(Ljava/lang/String;Lorg/infinispan/remoting/transport/Address;)V
     106: aload_1
     107: aload         4
     109: invokeinterface #14,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateCurrentTopology:(Ljava/util/List;)V
     114: aload_1
     115: aload         4
     117: invokeinterface #3,  2            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.queueRebalance:(Ljava/util/List;)V
     122: return

  public void onClusterViewChange(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
       6: astore_3
       7: new           #5                  // class java/util/ArrayList
      10: dup
      11: aload_3
      12: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      15: invokespecial #7                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore        4
      20: aload         4
      22: aload_2
      23: invokeinterface #19,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
      28: ifne          48
      31: getstatic     #10                 // Field log:Lorg/infinispan/util/logging/Log;
      34: ldc           #20                 // String Cache %s did not lose any members, skipping rebalance
      36: aload_1
      37: invokeinterface #12,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      42: invokeinterface #21,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      47: return
      48: aload_0
      49: aload_1
      50: aload         4
      52: invokevirtual #22                 // Method checkForLostData:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Ljava/util/List;)V
      55: aload_1
      56: aload         4
      58: invokeinterface #14,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateCurrentTopology:(Ljava/util/List;)V
      63: aload_1
      64: aload         4
      66: invokeinterface #3,  2            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.queueRebalance:(Ljava/util/List;)V
      71: return

  protected void checkForLostData(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
       6: astore_3
       7: aload_3
       8: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      11: astore        4
      13: new           #5                  // class java/util/ArrayList
      16: dup
      17: aload         4
      19: invokespecial #7                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      22: astore        5
      24: aload         5
      26: aload_2
      27: invokeinterface #23,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      32: pop
      33: aload_0
      34: aload_3
      35: invokevirtual #16                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      38: aload_2
      39: invokespecial #17                 // Method isDataLost:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)Z
      42: ifeq          64
      45: getstatic     #10                 // Field log:Lorg/infinispan/util/logging/Log;
      48: aload_1
      49: invokeinterface #12,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      54: aload         5
      56: invokeinterface #24,  3           // InterfaceMethod org/infinispan/util/logging/Log.lostDataBecauseOfAbruptLeavers:(Ljava/lang/String;Ljava/util/Collection;)V
      61: goto          110
      64: aload         5
      66: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      71: i2d
      72: aload         4
      74: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      79: i2d
      80: ldc2_w        #26                 // double 2.0d
      83: ddiv
      84: invokestatic  #28                 // Method java/lang/Math.ceil:(D)D
      87: dcmpl
      88: iflt          110
      91: getstatic     #10                 // Field log:Lorg/infinispan/util/logging/Log;
      94: aload_1
      95: invokeinterface #12,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     100: aload_2
     101: aload         5
     103: aload         4
     105: invokeinterface #29,  5           // InterfaceMethod org/infinispan/util/logging/Log.minorityPartition:(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V
     110: return

  public void onPartitionMerge(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, java.util.Collection<org.infinispan.topology.CacheStatusResponse>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          79
      20: aload         4
      22: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #33                 // class org/infinispan/topology/CacheStatusResponse
      30: astore        5
      32: aload         5
      34: invokevirtual #34                 // Method org/infinispan/topology/CacheStatusResponse.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
      37: astore        6
      39: aload         6
      41: ifnonnull     47
      44: goto          10
      47: aload_3
      48: ifnull        73
      51: aload_3
      52: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      55: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      60: aload         6
      62: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      65: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      70: if_icmpge     76
      73: aload         6
      75: astore_3
      76: goto          10
      79: aconst_null
      80: astore        4
      82: aload_2
      83: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      88: astore        5
      90: aload         5
      92: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      97: ifeq          181
     100: aload         5
     102: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #33                 // class org/infinispan/topology/CacheStatusResponse
     110: astore        6
     112: aload         6
     114: invokevirtual #34                 // Method org/infinispan/topology/CacheStatusResponse.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
     117: astore        7
     119: aload         7
     121: aload_3
     122: invokestatic  #35                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     125: ifne          131
     128: goto          90
     131: aload         6
     133: invokevirtual #36                 // Method org/infinispan/topology/CacheStatusResponse.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     136: astore        8
     138: aload         8
     140: ifnonnull     146
     143: goto          90
     146: aload         4
     148: ifnull        174
     151: aload         4
     153: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
     156: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
     161: aload         8
     163: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
     166: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
     171: if_icmpge     178
     174: aload         8
     176: astore        4
     178: goto          90
     181: aload         4
     183: ifnonnull     202
     186: getstatic     #10                 // Field log:Lorg/infinispan/util/logging/Log;
     189: ldc           #37                 // String No current topology, recovered only joiners for cache %s
     191: aload_1
     192: invokeinterface #12,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     197: invokeinterface #13,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     202: iconst_0
     203: istore        5
     205: aload_2
     206: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     211: astore        6
     213: aload         6
     215: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     220: ifeq          267
     223: aload         6
     225: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #33                 // class org/infinispan/topology/CacheStatusResponse
     233: astore        7
     235: aload         7
     237: invokevirtual #36                 // Method org/infinispan/topology/CacheStatusResponse.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     240: astore        8
     242: aload         8
     244: ifnull        264
     247: iload         5
     249: aload         8
     251: invokevirtual #38                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     254: if_icmpge     264
     257: aload         8
     259: invokevirtual #38                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     262: istore        5
     264: goto          213
     267: aconst_null
     268: astore        6
     270: aload         4
     272: ifnull        304
     275: new           #39                 // class org/infinispan/topology/CacheTopology
     278: dup
     279: iload         5
     281: iconst_1
     282: iadd
     283: aload         4
     285: invokevirtual #40                 // Method org/infinispan/topology/CacheTopology.getRebalanceId:()I
     288: aload         4
     290: invokevirtual #16                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
     293: aconst_null
     294: aload         4
     296: invokevirtual #41                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
     299: invokespecial #42                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
     302: astore        6
     304: aload_1
     305: aload         6
     307: aload_3
     308: aconst_null
     309: invokeinterface #43,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateTopologiesAfterMerge:(Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;)V
     314: aload_1
     315: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
     320: astore        7
     322: new           #5                  // class java/util/ArrayList
     325: dup
     326: aload         7
     328: invokespecial #7                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     331: astore        8
     333: aload         6
     335: ifnull        360
     338: aload         8
     340: aload         6
     342: invokevirtual #6                  // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
     345: invokeinterface #19,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
     350: ifeq          360
     353: aload_0
     354: aload_1
     355: aload         8
     357: invokevirtual #22                 // Method checkForLostData:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Ljava/util/List;)V
     360: aload_1
     361: aload         8
     363: invokeinterface #14,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateCurrentTopology:(Ljava/util/List;)V
     368: aload_1
     369: aload         7
     371: invokeinterface #3,  2            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.queueRebalance:(Ljava/util/List;)V
     376: return

  public void onRebalanceEnd(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext);
    Code:
       0: return

  public void onManualAvailabilityChange(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, org.infinispan.partitionhandling.AvailabilityMode);
    Code:
       0: return

  private boolean isDataLost(org.infinispan.distribution.ch.ConsistentHash, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_1
       4: invokeinterface #44,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getNumSegments:()I
       9: if_icmpge     34
      12: aload_2
      13: aload_1
      14: iload_3
      15: invokeinterface #45,  2           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.locateOwnersForSegment:(I)Ljava/util/List;
      20: invokestatic  #46                 // Method org/infinispan/commons/util/InfinispanCollections.containsAny:(Ljava/util/Collection;Ljava/util/Collection;)Z
      23: ifne          28
      26: iconst_1
      27: ireturn
      28: iinc          3, 1
      31: goto          2
      34: iconst_0
      35: ireturn

  static {};
    Code:
       0: ldc           #47                 // class org/infinispan/partitionhandling/impl/PreferAvailabilityStrategy
       2: invokestatic  #48                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #10                 // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
