Compiled from "LocalTopologyManager.java"
public interface org.infinispan.topology.LocalTopologyManager {
  public abstract org.infinispan.topology.CacheTopology join(java.lang.String, org.infinispan.topology.CacheJoinInfo, org.infinispan.topology.CacheTopologyHandler, org.infinispan.partitionhandling.impl.PartitionHandlingManager) throws java.lang.Exception;

  public abstract void leave(java.lang.String);

  public abstract void confirmRebalance(java.lang.String, int, int, java.lang.Throwable);

  public abstract org.infinispan.topology.ManagerStatusResponse handleStatusRequest(int);

  public abstract void handleTopologyUpdate(java.lang.String, org.infinispan.topology.CacheTopology, org.infinispan.partitionhandling.AvailabilityMode, int, org.infinispan.remoting.transport.Address) throws java.lang.InterruptedException;

  public abstract void handleStableTopologyUpdate(java.lang.String, org.infinispan.topology.CacheTopology, int);

  public abstract void handleRebalance(java.lang.String, org.infinispan.topology.CacheTopology, int, org.infinispan.remoting.transport.Address) throws java.lang.InterruptedException;

  public abstract org.infinispan.topology.CacheTopology getCacheTopology(java.lang.String);

  public abstract org.infinispan.topology.CacheTopology getStableCacheTopology(java.lang.String);

  public abstract boolean isTotalOrderCache(java.lang.String);

  public abstract boolean isRebalancingEnabled() throws java.lang.Exception;

  public abstract boolean isCacheRebalancingEnabled(java.lang.String) throws java.lang.Exception;

  public abstract void setRebalancingEnabled(boolean) throws java.lang.Exception;

  public abstract void setCacheRebalancingEnabled(java.lang.String, boolean) throws java.lang.Exception;

  public abstract org.infinispan.topology.RebalancingStatus getRebalancingStatus(java.lang.String) throws java.lang.Exception;

  public abstract org.infinispan.partitionhandling.AvailabilityMode getCacheAvailability(java.lang.String);

  public abstract void setCacheAvailability(java.lang.String, org.infinispan.partitionhandling.AvailabilityMode) throws java.lang.Exception;

  public abstract org.infinispan.topology.PersistentUUID getPersistentUUID();
}
