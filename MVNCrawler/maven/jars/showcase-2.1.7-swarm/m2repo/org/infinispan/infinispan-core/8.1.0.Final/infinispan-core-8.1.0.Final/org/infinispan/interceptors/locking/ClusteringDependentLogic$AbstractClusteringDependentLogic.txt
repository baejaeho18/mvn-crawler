Compiled from "ClusteringDependentLogic.java"
public abstract class org.infinispan.interceptors.locking.ClusteringDependentLogic$AbstractClusteringDependentLogic implements org.infinispan.interceptors.locking.ClusteringDependentLogic {
  protected org.infinispan.container.DataContainer<java.lang.Object, java.lang.Object> dataContainer;

  protected org.infinispan.notifications.cachelistener.CacheNotifier<java.lang.Object, java.lang.Object> notifier;

  protected boolean totalOrder;

  private org.infinispan.transaction.impl.WriteSkewHelper$KeySpecificLogic keySpecificLogic;

  protected org.infinispan.statetransfer.CommitManager commitManager;

  protected org.infinispan.persistence.manager.PersistenceManager persistenceManager;

  protected org.infinispan.util.TimeService timeService;

  protected org.infinispan.functional.impl.FunctionalNotifier<java.lang.Object, java.lang.Object> functionalNotifier;

  public org.infinispan.interceptors.locking.ClusteringDependentLogic$AbstractClusteringDependentLogic();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.infinispan.container.DataContainer<java.lang.Object, java.lang.Object>, org.infinispan.notifications.cachelistener.CacheNotifier<java.lang.Object, java.lang.Object>, org.infinispan.configuration.cache.Configuration, org.infinispan.statetransfer.CommitManager, org.infinispan.persistence.manager.PersistenceManager, org.infinispan.util.TimeService, org.infinispan.functional.impl.FunctionalNotifier<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      10: aload_0
      11: aload_3
      12: invokevirtual #4                  // Method org/infinispan/configuration/cache/Configuration.transaction:()Lorg/infinispan/configuration/cache/TransactionConfiguration;
      15: invokevirtual #5                  // Method org/infinispan/configuration/cache/TransactionConfiguration.transactionProtocol:()Lorg/infinispan/transaction/TransactionProtocol;
      18: invokevirtual #6                  // Method org/infinispan/transaction/TransactionProtocol.isTotalOrder:()Z
      21: putfield      #7                  // Field totalOrder:Z
      24: aload_0
      25: aload_0
      26: aload_0
      27: getfield      #7                  // Field totalOrder:Z
      30: invokevirtual #8                  // Method initKeySpecificLogic:(Z)Lorg/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic;
      33: putfield      #9                  // Field keySpecificLogic:Lorg/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic;
      36: aload_0
      37: aload         4
      39: putfield      #10                 // Field commitManager:Lorg/infinispan/statetransfer/CommitManager;
      42: aload_0
      43: aload         5
      45: putfield      #11                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      48: aload_0
      49: aload         6
      51: putfield      #12                 // Field timeService:Lorg/infinispan/util/TimeService;
      54: aload_0
      55: aload         7
      57: putfield      #13                 // Field functionalNotifier:Lorg/infinispan/functional/impl/FunctionalNotifier;
      60: return

  public org.infinispan.container.versioning.EntryVersionsMap createNewVersionsAndCheckForWriteSkews(org.infinispan.container.versioning.VersionGenerator, org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.VersionedPrepareCommand);
    Code:
       0: aload_0
       1: getfield      #7                  // Field totalOrder:Z
       4: ifeq          17
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #14                 // Method totalOrderCreateNewVersionsAndCheckForWriteSkews:(Lorg/infinispan/container/versioning/VersionGenerator;Lorg/infinispan/context/impl/TxInvocationContext;Lorg/infinispan/commands/tx/VersionedPrepareCommand;)Lorg/infinispan/container/versioning/EntryVersionsMap;
      14: goto          24
      17: aload_0
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokespecial #15                 // Method clusteredCreateNewVersionsAndCheckForWriteSkews:(Lorg/infinispan/container/versioning/VersionGenerator;Lorg/infinispan/context/impl/TxInvocationContext;Lorg/infinispan/commands/tx/VersionedPrepareCommand;)Lorg/infinispan/container/versioning/EntryVersionsMap;
      24: areturn

  public final void commitEntry(org.infinispan.container.entries.CacheEntry, org.infinispan.metadata.Metadata, org.infinispan.commands.FlagAffectedCommand, org.infinispan.context.InvocationContext, org.infinispan.context.Flag, boolean);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/infinispan/container/entries/ClearCacheEntry
       4: ifeq          25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
      12: aload_1
      13: checkcast     #16                 // class org/infinispan/container/entries/ClearCacheEntry
      16: aload         4
      18: aload_3
      19: invokespecial #17                 // Method commitClearCommand:(Lorg/infinispan/container/DataContainer;Lorg/infinispan/container/entries/ClearCacheEntry;Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
      22: goto          38
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: aload         4
      31: aload         5
      33: iload         6
      35: invokevirtual #18                 // Method commitSingleEntry:(Lorg/infinispan/container/entries/CacheEntry;Lorg/infinispan/metadata/Metadata;Lorg/infinispan/commands/FlagAffectedCommand;Lorg/infinispan/context/InvocationContext;Lorg/infinispan/context/Flag;Z)V
      38: return

  private void commitClearCommand(org.infinispan.container.DataContainer<java.lang.Object, java.lang.Object>, org.infinispan.container.entries.ClearCacheEntry<java.lang.Object, java.lang.Object>, org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #20,  1           // InterfaceMethod org/infinispan/container/DataContainer.entrySet:()Ljava/util/Set;
      10: invokespecial #21                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      13: astore        5
      15: aload_2
      16: aload_1
      17: aconst_null
      18: invokevirtual #22                 // Method org/infinispan/container/entries/ClearCacheEntry.commit:(Lorg/infinispan/container/DataContainer;Lorg/infinispan/metadata/Metadata;)V
      21: aload         5
      23: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore        6
      30: aload         6
      32: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          89
      40: aload         6
      42: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #26                 // class org/infinispan/container/entries/InternalCacheEntry
      50: astore        7
      52: aload_0
      53: getfield      #3                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      56: aload         7
      58: invokeinterface #27,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getKey:()Ljava/lang/Object;
      63: aload         7
      65: invokeinterface #28,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getValue:()Ljava/lang/Object;
      70: aload         7
      72: invokeinterface #29,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
      77: iconst_0
      78: aload_3
      79: aload         4
      81: invokeinterface #30,  7           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryRemoved:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
      86: goto          30
      89: return

  protected abstract void commitSingleEntry(org.infinispan.container.entries.CacheEntry, org.infinispan.metadata.Metadata, org.infinispan.commands.FlagAffectedCommand, org.infinispan.context.InvocationContext, org.infinispan.context.Flag, boolean);

  protected abstract org.infinispan.transaction.impl.WriteSkewHelper$KeySpecificLogic initKeySpecificLogic(boolean);

  protected void notifyCommitEntry(boolean, boolean, boolean, org.infinispan.container.entries.CacheEntry, org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand, java.lang.Object, org.infinispan.metadata.Metadata);
    Code:
       0: aload         6
       2: instanceof    #31                 // class org/infinispan/commands/write/WriteCommand
       5: ifeq          25
       8: aload         6
      10: checkcast     #31                 // class org/infinispan/commands/write/WriteCommand
      13: invokeinterface #32,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.isWriteOnly:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore        9
      28: iload_2
      29: ifeq          159
      32: aload         6
      34: instanceof    #33                 // class org/infinispan/commands/write/RemoveCommand
      37: ifeq          58
      40: aload         6
      42: checkcast     #33                 // class org/infinispan/commands/write/RemoveCommand
      45: aload         5
      47: aload         7
      49: aload         8
      51: iconst_0
      52: invokevirtual #34                 // Method org/infinispan/commands/write/RemoveCommand.notify:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;Z)V
      55: goto          324
      58: iload_3
      59: ifeq          87
      62: aload_0
      63: getfield      #3                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      66: aload         4
      68: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      73: aload         7
      75: aload         8
      77: aload         5
      79: invokeinterface #36,  5           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryExpired:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;Lorg/infinispan/context/InvocationContext;)V
      84: goto          112
      87: aload_0
      88: getfield      #3                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      91: aload         4
      93: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      98: aload         7
     100: aload         8
     102: iconst_0
     103: aload         5
     105: aload         6
     107: invokeinterface #30,  7           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryRemoved:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
     112: iload         9
     114: ifne          140
     117: aload_0
     118: getfield      #13                 // Field functionalNotifier:Lorg/infinispan/functional/impl/FunctionalNotifier;
     121: aload         4
     123: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
     128: aload         7
     130: aload         8
     132: invokestatic  #37                 // Method org/infinispan/functional/impl/EntryViews.readOnly:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
     135: invokeinterface #38,  2           // InterfaceMethod org/infinispan/functional/impl/FunctionalNotifier.notifyOnRemove:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)V
     140: aload_0
     141: getfield      #13                 // Field functionalNotifier:Lorg/infinispan/functional/impl/FunctionalNotifier;
     144: aload         4
     146: invokedynamic #39,  0             // InvokeDynamic #0:get:(Lorg/infinispan/container/entries/CacheEntry;)Ljava/util/function/Supplier;
     151: invokeinterface #40,  2           // InterfaceMethod org/infinispan/functional/impl/FunctionalNotifier.notifyOnWrite:(Ljava/util/function/Supplier;)V
     156: goto          324
     159: iload_1
     160: ifeq          236
     163: aload_0
     164: getfield      #3                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
     167: aload         4
     169: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
     174: aload         4
     176: invokeinterface #41,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
     181: aload         4
     183: invokeinterface #42,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
     188: iconst_0
     189: aload         5
     191: aload         6
     193: invokeinterface #43,  7           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryCreated:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
     198: iload         9
     200: ifne          217
     203: aload_0
     204: getfield      #13                 // Field functionalNotifier:Lorg/infinispan/functional/impl/FunctionalNotifier;
     207: aload         4
     209: invokestatic  #44                 // Method org/infinispan/functional/impl/EntryViews.readOnly:(Lorg/infinispan/container/entries/CacheEntry;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
     212: invokeinterface #45,  2           // InterfaceMethod org/infinispan/functional/impl/FunctionalNotifier.notifyOnCreate:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)V
     217: aload_0
     218: getfield      #13                 // Field functionalNotifier:Lorg/infinispan/functional/impl/FunctionalNotifier;
     221: aload         4
     223: invokedynamic #46,  0             // InvokeDynamic #1:get:(Lorg/infinispan/container/entries/CacheEntry;)Ljava/util/function/Supplier;
     228: invokeinterface #40,  2           // InterfaceMethod org/infinispan/functional/impl/FunctionalNotifier.notifyOnWrite:(Ljava/util/function/Supplier;)V
     233: goto          324
     236: aload_0
     237: getfield      #3                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
     240: aload         4
     242: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
     247: aload         4
     249: invokeinterface #41,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
     254: aload         4
     256: invokeinterface #42,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
     261: aload         7
     263: aload         8
     265: iconst_0
     266: aload         5
     268: aload         6
     270: invokeinterface #47,  9           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryModified:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
     275: iload         9
     277: ifne          308
     280: aload_0
     281: getfield      #13                 // Field functionalNotifier:Lorg/infinispan/functional/impl/FunctionalNotifier;
     284: aload         4
     286: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
     291: aload         7
     293: aload         8
     295: invokestatic  #37                 // Method org/infinispan/functional/impl/EntryViews.readOnly:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
     298: aload         4
     300: invokestatic  #44                 // Method org/infinispan/functional/impl/EntryViews.readOnly:(Lorg/infinispan/container/entries/CacheEntry;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
     303: invokeinterface #48,  3           // InterfaceMethod org/infinispan/functional/impl/FunctionalNotifier.notifyOnModify:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)V
     308: aload_0
     309: getfield      #13                 // Field functionalNotifier:Lorg/infinispan/functional/impl/FunctionalNotifier;
     312: aload         4
     314: invokedynamic #49,  0             // InvokeDynamic #2:get:(Lorg/infinispan/container/entries/CacheEntry;)Ljava/util/function/Supplier;
     319: invokeinterface #40,  2           // InterfaceMethod org/infinispan/functional/impl/FunctionalNotifier.notifyOnWrite:(Ljava/util/function/Supplier;)V
     324: return

  private org.infinispan.container.versioning.EntryVersionsMap totalOrderCreateNewVersionsAndCheckForWriteSkews(org.infinispan.container.versioning.VersionGenerator, org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.VersionedPrepareCommand);
    Code:
       0: aload_2
       1: invokeinterface #50,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.isOriginLocal:()Z
       6: ifeq          19
       9: new           #51                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #52                 // String This must not be reached
      15: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #54                 // class org/infinispan/container/versioning/EntryVersionsMap
      22: dup
      23: invokespecial #55                 // Method org/infinispan/container/versioning/EntryVersionsMap."<init>":()V
      26: astore        4
      28: aload_3
      29: checkcast     #56                 // class org/infinispan/commands/tx/totalorder/TotalOrderPrepareCommand
      32: invokeinterface #57,  1           // InterfaceMethod org/infinispan/commands/tx/totalorder/TotalOrderPrepareCommand.skipWriteSkewCheck:()Z
      37: ifne          64
      40: aload_3
      41: aload_0
      42: getfield      #2                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
      45: aload_0
      46: getfield      #11                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      49: aload_1
      50: aload_2
      51: aload_0
      52: getfield      #9                  // Field keySpecificLogic:Lorg/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic;
      55: aload_0
      56: getfield      #12                 // Field timeService:Lorg/infinispan/util/TimeService;
      59: invokestatic  #58                 // Method org/infinispan/transaction/impl/WriteSkewHelper.performTotalOrderWriteSkewCheckAndReturnNewVersions:(Lorg/infinispan/commands/tx/VersionedPrepareCommand;Lorg/infinispan/container/DataContainer;Lorg/infinispan/persistence/manager/PersistenceManager;Lorg/infinispan/container/versioning/VersionGenerator;Lorg/infinispan/context/impl/TxInvocationContext;Lorg/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic;Lorg/infinispan/util/TimeService;)Lorg/infinispan/container/versioning/EntryVersionsMap;
      62: astore        4
      64: aload_3
      65: invokevirtual #59                 // Method org/infinispan/commands/tx/VersionedPrepareCommand.getModifications:()[Lorg/infinispan/commands/write/WriteCommand;
      68: astore        5
      70: aload         5
      72: arraylength
      73: istore        6
      75: iconst_0
      76: istore        7
      78: iload         7
      80: iload         6
      82: if_icmpge     167
      85: aload         5
      87: iload         7
      89: aaload
      90: astore        8
      92: aload         8
      94: invokeinterface #60,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.getAffectedKeys:()Ljava/util/Set;
      99: invokeinterface #61,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     104: astore        9
     106: aload         9
     108: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          161
     116: aload         9
     118: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: astore        10
     125: aload_0
     126: getfield      #9                  // Field keySpecificLogic:Lorg/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic;
     129: aload         10
     131: invokeinterface #62,  2           // InterfaceMethod org/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic.performCheckOnKey:(Ljava/lang/Object;)Z
     136: ifeq          158
     139: aload         4
     141: aload         10
     143: invokevirtual #63                 // Method org/infinispan/container/versioning/EntryVersionsMap.containsKey:(Ljava/lang/Object;)Z
     146: ifne          158
     149: aload         4
     151: aload         10
     153: aconst_null
     154: invokevirtual #64                 // Method org/infinispan/container/versioning/EntryVersionsMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: goto          106
     161: iinc          7, 1
     164: goto          78
     167: aload_2
     168: invokeinterface #65,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
     173: aload         4
     175: invokevirtual #66                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.setUpdatedEntryVersions:(Lorg/infinispan/container/versioning/EntryVersionsMap;)V
     178: aload         4
     180: areturn

  private org.infinispan.container.versioning.EntryVersionsMap clusteredCreateNewVersionsAndCheckForWriteSkews(org.infinispan.container.versioning.VersionGenerator, org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.VersionedPrepareCommand);
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #2                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
       5: aload_0
       6: getfield      #11                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
       9: aload_1
      10: aload_2
      11: aload_0
      12: getfield      #9                  // Field keySpecificLogic:Lorg/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic;
      15: aload_0
      16: getfield      #12                 // Field timeService:Lorg/infinispan/util/TimeService;
      19: invokestatic  #67                 // Method org/infinispan/transaction/impl/WriteSkewHelper.performWriteSkewCheckAndReturnNewVersions:(Lorg/infinispan/commands/tx/VersionedPrepareCommand;Lorg/infinispan/container/DataContainer;Lorg/infinispan/persistence/manager/PersistenceManager;Lorg/infinispan/container/versioning/VersionGenerator;Lorg/infinispan/context/impl/TxInvocationContext;Lorg/infinispan/transaction/impl/WriteSkewHelper$KeySpecificLogic;Lorg/infinispan/util/TimeService;)Lorg/infinispan/container/versioning/EntryVersionsMap;
      22: astore        4
      24: aload_2
      25: invokeinterface #65,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      30: astore        5
      32: aload         5
      34: invokeinterface #68,  1           // InterfaceMethod org/infinispan/transaction/xa/CacheTransaction.getUpdatedEntryVersions:()Lorg/infinispan/container/versioning/EntryVersionsMap;
      39: astore        6
      41: aload         6
      43: ifnull        65
      46: aload         6
      48: invokevirtual #69                 // Method org/infinispan/container/versioning/EntryVersionsMap.isEmpty:()Z
      51: ifne          65
      54: aload         6
      56: aload         4
      58: invokevirtual #70                 // Method org/infinispan/container/versioning/EntryVersionsMap.putAll:(Ljava/util/Map;)V
      61: aload         6
      63: astore        4
      65: aload         5
      67: aload         4
      69: invokeinterface #71,  2           // InterfaceMethod org/infinispan/transaction/xa/CacheTransaction.setUpdatedEntryVersions:(Lorg/infinispan/container/versioning/EntryVersionsMap;)V
      74: aload         4
      76: invokevirtual #69                 // Method org/infinispan/container/versioning/EntryVersionsMap.isEmpty:()Z
      79: ifeq          86
      82: aconst_null
      83: goto          88
      86: aload         4
      88: areturn

  private static org.infinispan.commons.api.functional.EntryView$ReadEntryView lambda$notifyCommitEntry$24(org.infinispan.container.entries.CacheEntry);
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method org/infinispan/functional/impl/EntryViews.readOnly:(Lorg/infinispan/container/entries/CacheEntry;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
       4: areturn

  private static org.infinispan.commons.api.functional.EntryView$ReadEntryView lambda$notifyCommitEntry$23(org.infinispan.container.entries.CacheEntry);
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method org/infinispan/functional/impl/EntryViews.readOnly:(Lorg/infinispan/container/entries/CacheEntry;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
       4: areturn

  private static org.infinispan.commons.api.functional.EntryView$ReadEntryView lambda$notifyCommitEntry$22(org.infinispan.container.entries.CacheEntry);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
       6: invokestatic  #72                 // Method org/infinispan/functional/impl/EntryViews.noValue:(Ljava/lang/Object;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
       9: areturn
}
