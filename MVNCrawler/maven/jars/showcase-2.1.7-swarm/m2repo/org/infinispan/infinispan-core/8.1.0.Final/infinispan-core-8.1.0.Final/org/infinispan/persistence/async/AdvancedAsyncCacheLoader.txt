Compiled from "AdvancedAsyncCacheLoader.java"
public class org.infinispan.persistence.async.AdvancedAsyncCacheLoader extends org.infinispan.persistence.async.AsyncCacheLoader implements org.infinispan.persistence.spi.AdvancedCacheLoader {
  private static final org.infinispan.util.logging.Log log;

  public org.infinispan.persistence.async.AdvancedAsyncCacheLoader(org.infinispan.persistence.spi.CacheLoader, java.util.concurrent.atomic.AtomicReference<org.infinispan.persistence.async.State>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/infinispan/persistence/async/AsyncCacheLoader."<init>":(Lorg/infinispan/persistence/spi/CacheLoader;Ljava/util/concurrent/atomic/AtomicReference;)V
       6: return

  private void loadAllKeys(org.infinispan.persistence.async.State, java.util.Set<java.lang.Object>, org.infinispan.filter.KeyFilter, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: getfield      #3                  // Field org/infinispan/persistence/async/State.clear:Z
       4: ifne          54
       7: aload_1
       8: getfield      #4                  // Field org/infinispan/persistence/async/State.next:Lorg/infinispan/persistence/async/State;
      11: astore        5
      13: aload         5
      15: ifnull        31
      18: aload_0
      19: aload         5
      21: aload_2
      22: aload_3
      23: aload         4
      25: invokespecial #5                  // Method loadAllKeys:(Lorg/infinispan/persistence/async/State;Ljava/util/Set;Lorg/infinispan/filter/KeyFilter;Ljava/util/concurrent/Executor;)V
      28: goto          54
      31: aload_0
      32: invokevirtual #6                  // Method advancedLoader:()Lorg/infinispan/persistence/spi/AdvancedCacheLoader;
      35: aload_3
      36: new           #7                  // class org/infinispan/persistence/async/AdvancedAsyncCacheLoader$1
      39: dup
      40: aload_0
      41: aload_2
      42: invokespecial #8                  // Method org/infinispan/persistence/async/AdvancedAsyncCacheLoader$1."<init>":(Lorg/infinispan/persistence/async/AdvancedAsyncCacheLoader;Ljava/util/Set;)V
      45: aload         4
      47: iconst_0
      48: iconst_0
      49: invokeinterface #9,  6            // InterfaceMethod org/infinispan/persistence/spi/AdvancedCacheLoader.process:(Lorg/infinispan/filter/KeyFilter;Lorg/infinispan/persistence/spi/AdvancedCacheLoader$CacheLoaderTask;Ljava/util/concurrent/Executor;ZZ)V
      54: aload_1
      55: getfield      #10                 // Field org/infinispan/persistence/async/State.modifications:Ljava/util/concurrent/ConcurrentMap;
      58: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      63: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      68: astore        5
      70: aload         5
      72: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          192
      80: aload         5
      82: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #15                 // class org/infinispan/persistence/modifications/Modification
      90: astore        6
      92: getstatic     #16                 // Field org/infinispan/persistence/async/AdvancedAsyncCacheLoader$3.$SwitchMap$org$infinispan$persistence$modifications$Modification$Type:[I
      95: aload         6
      97: invokeinterface #17,  1           // InterfaceMethod org/infinispan/persistence/modifications/Modification.getType:()Lorg/infinispan/persistence/modifications/Modification$Type;
     102: invokevirtual #18                 // Method org/infinispan/persistence/modifications/Modification$Type.ordinal:()I
     105: iaload
     106: lookupswitch  { // 2
                     1: 132
                     2: 174
               default: 189
          }
     132: aload         6
     134: checkcast     #19                 // class org/infinispan/persistence/modifications/Store
     137: invokevirtual #20                 // Method org/infinispan/persistence/modifications/Store.getStoredValue:()Lorg/infinispan/marshall/core/MarshalledEntry;
     140: invokeinterface #21,  1           // InterfaceMethod org/infinispan/marshall/core/MarshalledEntry.getKey:()Ljava/lang/Object;
     145: astore        7
     147: aload_3
     148: ifnull        162
     151: aload_3
     152: aload         7
     154: invokeinterface #22,  2           // InterfaceMethod org/infinispan/filter/KeyFilter.accept:(Ljava/lang/Object;)Z
     159: ifeq          189
     162: aload_2
     163: aload         7
     165: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     170: pop
     171: goto          189
     174: aload_2
     175: aload         6
     177: checkcast     #24                 // class org/infinispan/persistence/modifications/Remove
     180: invokevirtual #25                 // Method org/infinispan/persistence/modifications/Remove.getKey:()Ljava/lang/Object;
     183: invokeinterface #26,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     188: pop
     189: goto          70
     192: return

  public void process(org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, java.util.concurrent.Executor, boolean, boolean);
    Code:
       0: bipush        100
       2: istore        6
       4: new           #27                 // class org/infinispan/executors/ExecutorAllCompletionService
       7: dup
       8: aload_3
       9: invokespecial #28                 // Method org/infinispan/executors/ExecutorAllCompletionService."<init>":(Ljava/util/concurrent/Executor;)V
      12: astore        7
      14: new           #29                 // class org/infinispan/persistence/TaskContextImpl
      17: dup
      18: invokespecial #30                 // Method org/infinispan/persistence/TaskContextImpl."<init>":()V
      21: astore        8
      23: new           #31                 // class java/util/HashSet
      26: dup
      27: iload         6
      29: invokespecial #32                 // Method java/util/HashSet."<init>":(I)V
      32: astore        9
      34: new           #31                 // class java/util/HashSet
      37: dup
      38: invokespecial #33                 // Method java/util/HashSet."<init>":()V
      41: astore        10
      43: aload_0
      44: aload_0
      45: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      48: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      51: checkcast     #36                 // class org/infinispan/persistence/async/State
      54: aload         9
      56: aload_1
      57: aload_3
      58: invokespecial #5                  // Method loadAllKeys:(Lorg/infinispan/persistence/async/State;Ljava/util/Set;Lorg/infinispan/filter/KeyFilter;Ljava/util/concurrent/Executor;)V
      61: aload         9
      63: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: astore        11
      70: aload         11
      72: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          136
      80: aload         10
      82: aload         11
      84: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      94: pop
      95: aload         10
      97: invokeinterface #38,  1           // InterfaceMethod java/util/Set.size:()I
     102: iload         6
     104: if_icmpne     70
     107: aload         10
     109: astore        12
     111: new           #31                 // class java/util/HashSet
     114: dup
     115: iload         6
     117: invokespecial #32                 // Method java/util/HashSet."<init>":(I)V
     120: astore        10
     122: aload_0
     123: aload_2
     124: aload         7
     126: aload         8
     128: aload         12
     130: invokespecial #39                 // Method submitProcessTask:(Lorg/infinispan/persistence/spi/AdvancedCacheLoader$CacheLoaderTask;Ljava/util/concurrent/CompletionService;Lorg/infinispan/persistence/spi/AdvancedCacheLoader$TaskContext;Ljava/util/Set;)V
     133: goto          70
     136: aload         10
     138: invokeinterface #40,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     143: ifne          157
     146: aload_0
     147: aload_2
     148: aload         7
     150: aload         8
     152: aload         10
     154: invokespecial #39                 // Method submitProcessTask:(Lorg/infinispan/persistence/spi/AdvancedCacheLoader$CacheLoaderTask;Ljava/util/concurrent/CompletionService;Lorg/infinispan/persistence/spi/AdvancedCacheLoader$TaskContext;Ljava/util/Set;)V
     157: aload         7
     159: invokevirtual #41                 // Method org/infinispan/executors/ExecutorAllCompletionService.waitUntilAllCompleted:()V
     162: aload         7
     164: invokevirtual #42                 // Method org/infinispan/executors/ExecutorAllCompletionService.isExceptionThrown:()Z
     167: ifeq          185
     170: new           #43                 // class org/infinispan/persistence/spi/PersistenceException
     173: dup
     174: ldc           #44                 // String Execution exception!
     176: aload         7
     178: invokevirtual #45                 // Method org/infinispan/executors/ExecutorAllCompletionService.getFirstException:()Ljava/util/concurrent/ExecutionException;
     181: invokespecial #46                 // Method org/infinispan/persistence/spi/PersistenceException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     184: athrow
     185: return

  private void submitProcessTask(org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, java.util.concurrent.CompletionService<java.lang.Void>, org.infinispan.persistence.spi.AdvancedCacheLoader$TaskContext, java.util.Set<java.lang.Object>);
    Code:
       0: aload_2
       1: new           #47                 // class org/infinispan/persistence/async/AdvancedAsyncCacheLoader$2
       4: dup
       5: aload_0
       6: aload         4
       8: aload_3
       9: aload_1
      10: invokespecial #48                 // Method org/infinispan/persistence/async/AdvancedAsyncCacheLoader$2."<init>":(Lorg/infinispan/persistence/async/AdvancedAsyncCacheLoader;Ljava/util/Set;Lorg/infinispan/persistence/spi/AdvancedCacheLoader$TaskContext;Lorg/infinispan/persistence/spi/AdvancedCacheLoader$CacheLoaderTask;)V
      13: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/CompletionService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      18: pop
      19: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method advancedLoader:()Lorg/infinispan/persistence/spi/AdvancedCacheLoader;
       4: invokeinterface #50,  1           // InterfaceMethod org/infinispan/persistence/spi/AdvancedCacheLoader.size:()I
       9: ireturn

  org.infinispan.persistence.spi.AdvancedCacheLoader advancedLoader();
    Code:
       0: aload_0
       1: getfield      #51                 // Field actual:Lorg/infinispan/persistence/spi/CacheLoader;
       4: checkcast     #52                 // class org/infinispan/persistence/spi/AdvancedCacheLoader
       7: areturn

  static org.infinispan.util.logging.Log access$000();
    Code:
       0: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #53                 // class org/infinispan/persistence/async/AdvancedAsyncCacheLoader
       2: invokestatic  #54                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
