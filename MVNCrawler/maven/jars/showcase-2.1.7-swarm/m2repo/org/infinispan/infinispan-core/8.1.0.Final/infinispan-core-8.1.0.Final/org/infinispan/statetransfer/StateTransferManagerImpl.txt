Compiled from "StateTransferManagerImpl.java"
public class org.infinispan.statetransfer.StateTransferManagerImpl implements org.infinispan.statetransfer.StateTransferManager {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private org.infinispan.statetransfer.StateConsumer stateConsumer;

  private org.infinispan.statetransfer.StateProvider stateProvider;

  private org.infinispan.partitionhandling.impl.PartitionHandlingManager partitionHandlingManager;

  private java.lang.String cacheName;

  private org.infinispan.notifications.cachelistener.CacheNotifier cacheNotifier;

  private org.infinispan.configuration.cache.Configuration configuration;

  private org.infinispan.configuration.global.GlobalConfiguration globalConfiguration;

  private org.infinispan.remoting.rpc.RpcManager rpcManager;

  private org.infinispan.distribution.group.GroupManager groupManager;

  private org.infinispan.topology.LocalTopologyManager localTopologyManager;

  private final java.util.concurrent.CountDownLatch initialStateTransferComplete;

  private volatile int firstTopologyAsMember;

  public org.infinispan.statetransfer.StateTransferManagerImpl();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/CountDownLatch
       8: dup
       9: iconst_1
      10: invokespecial #4                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      13: putfield      #5                  // Field initialStateTransferComplete:Ljava/util/concurrent/CountDownLatch;
      16: aload_0
      17: ldc           #7                  // int 2147483647
      19: putfield      #8                  // Field firstTopologyAsMember:I
      22: return

  public void init(org.infinispan.statetransfer.StateConsumer, org.infinispan.statetransfer.StateProvider, org.infinispan.Cache, org.infinispan.notifications.cachelistener.CacheNotifier, org.infinispan.configuration.cache.Configuration, org.infinispan.configuration.global.GlobalConfiguration, org.infinispan.remoting.rpc.RpcManager, org.infinispan.distribution.group.GroupManager, org.infinispan.topology.LocalTopologyManager, org.infinispan.partitionhandling.impl.PartitionHandlingManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
       5: aload_0
       6: aload_2
       7: putfield      #10                 // Field stateProvider:Lorg/infinispan/statetransfer/StateProvider;
      10: aload_0
      11: aload         10
      13: putfield      #11                 // Field partitionHandlingManager:Lorg/infinispan/partitionhandling/impl/PartitionHandlingManager;
      16: aload_0
      17: aload_3
      18: invokeinterface #12,  1           // InterfaceMethod org/infinispan/Cache.getName:()Ljava/lang/String;
      23: putfield      #13                 // Field cacheName:Ljava/lang/String;
      26: aload_0
      27: aload         4
      29: putfield      #14                 // Field cacheNotifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      32: aload_0
      33: aload         5
      35: putfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      38: aload_0
      39: aload         6
      41: putfield      #16                 // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
      44: aload_0
      45: aload         7
      47: putfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      50: aload_0
      51: aload         8
      53: putfield      #18                 // Field groupManager:Lorg/infinispan/distribution/group/GroupManager;
      56: aload_0
      57: aload         9
      59: putfield      #19                 // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
      62: return

  public void start() throws java.lang.Exception;
    Code:
       0: getstatic     #20                 // Field trace:Z
       3: ifeq          29
       6: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #22                 // String Starting StateTransferManager of cache %s on node %s
      11: aload_0
      12: getfield      #13                 // Field cacheName:Ljava/lang/String;
      15: aload_0
      16: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      19: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
      24: invokeinterface #24,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: new           #25                 // class org/infinispan/topology/CacheJoinInfo
      32: dup
      33: aload_0
      34: invokespecial #26                 // Method pickConsistentHashFactory:()Lorg/infinispan/distribution/ch/ConsistentHashFactory;
      37: aload_0
      38: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      41: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      44: invokevirtual #28                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.hash:()Lorg/infinispan/configuration/cache/HashConfiguration;
      47: invokevirtual #29                 // Method org/infinispan/configuration/cache/HashConfiguration.hash:()Lorg/infinispan/commons/hash/Hash;
      50: aload_0
      51: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      54: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      57: invokevirtual #28                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.hash:()Lorg/infinispan/configuration/cache/HashConfiguration;
      60: invokevirtual #30                 // Method org/infinispan/configuration/cache/HashConfiguration.numSegments:()I
      63: aload_0
      64: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      67: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      70: invokevirtual #28                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.hash:()Lorg/infinispan/configuration/cache/HashConfiguration;
      73: invokevirtual #31                 // Method org/infinispan/configuration/cache/HashConfiguration.numOwners:()I
      76: aload_0
      77: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      80: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      83: invokevirtual #32                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfiguration;
      86: invokevirtual #33                 // Method org/infinispan/configuration/cache/StateTransferConfiguration.timeout:()J
      89: aload_0
      90: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      93: invokevirtual #34                 // Method org/infinispan/configuration/cache/Configuration.transaction:()Lorg/infinispan/configuration/cache/TransactionConfiguration;
      96: invokevirtual #35                 // Method org/infinispan/configuration/cache/TransactionConfiguration.transactionProtocol:()Lorg/infinispan/transaction/TransactionProtocol;
      99: invokevirtual #36                 // Method org/infinispan/transaction/TransactionProtocol.isTotalOrder:()Z
     102: aload_0
     103: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     106: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
     109: invokevirtual #37                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
     112: invokevirtual #38                 // Method org/infinispan/configuration/cache/CacheMode.isDistributed:()Z
     115: aload_0
     116: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     119: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
     122: invokevirtual #28                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.hash:()Lorg/infinispan/configuration/cache/HashConfiguration;
     125: invokevirtual #39                 // Method org/infinispan/configuration/cache/HashConfiguration.capacityFactor:()F
     128: invokespecial #40                 // Method org/infinispan/topology/CacheJoinInfo."<init>":(Lorg/infinispan/distribution/ch/ConsistentHashFactory;Lorg/infinispan/commons/hash/Hash;IIJZZF)V
     131: astore_1
     132: aload_0
     133: getfield      #19                 // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
     136: aload_0
     137: getfield      #13                 // Field cacheName:Ljava/lang/String;
     140: aload_1
     141: new           #41                 // class org/infinispan/statetransfer/StateTransferManagerImpl$1
     144: dup
     145: aload_0
     146: invokespecial #42                 // Method org/infinispan/statetransfer/StateTransferManagerImpl$1."<init>":(Lorg/infinispan/statetransfer/StateTransferManagerImpl;)V
     149: aload_0
     150: getfield      #11                 // Field partitionHandlingManager:Lorg/infinispan/partitionhandling/impl/PartitionHandlingManager;
     153: invokeinterface #43,  5           // InterfaceMethod org/infinispan/topology/LocalTopologyManager.join:(Ljava/lang/String;Lorg/infinispan/topology/CacheJoinInfo;Lorg/infinispan/topology/CacheTopologyHandler;Lorg/infinispan/partitionhandling/impl/PartitionHandlingManager;)Lorg/infinispan/topology/CacheTopology;
     158: astore_2
     159: getstatic     #20                 // Field trace:Z
     162: ifeq          189
     165: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
     168: ldc           #44                 // String StateTransferManager of cache %s on node %s received initial topology %s
     170: aload_0
     171: getfield      #13                 // Field cacheName:Ljava/lang/String;
     174: aload_0
     175: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     178: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
     183: aload_2
     184: invokeinterface #45,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     189: return

  private org.infinispan.distribution.ch.ConsistentHashFactory pickConsistentHashFactory();
    Code:
       0: aload_0
       1: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
       7: invokevirtual #28                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.hash:()Lorg/infinispan/configuration/cache/HashConfiguration;
      10: invokevirtual #46                 // Method org/infinispan/configuration/cache/HashConfiguration.consistentHashFactory:()Lorg/infinispan/distribution/ch/ConsistentHashFactory;
      13: astore_1
      14: aload_1
      15: ifnonnull     86
      18: aload_0
      19: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      22: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      25: invokevirtual #37                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
      28: astore_2
      29: aload_2
      30: invokevirtual #47                 // Method org/infinispan/configuration/cache/CacheMode.isClustered:()Z
      33: ifeq          86
      36: aload_2
      37: invokevirtual #38                 // Method org/infinispan/configuration/cache/CacheMode.isDistributed:()Z
      40: ifeq          78
      43: aload_0
      44: getfield      #16                 // Field globalConfiguration:Lorg/infinispan/configuration/global/GlobalConfiguration;
      47: invokevirtual #48                 // Method org/infinispan/configuration/global/GlobalConfiguration.transport:()Lorg/infinispan/configuration/global/TransportConfiguration;
      50: invokevirtual #49                 // Method org/infinispan/configuration/global/TransportConfiguration.hasTopologyInfo:()Z
      53: ifeq          67
      56: new           #50                 // class org/infinispan/distribution/ch/impl/TopologyAwareConsistentHashFactory
      59: dup
      60: invokespecial #51                 // Method org/infinispan/distribution/ch/impl/TopologyAwareConsistentHashFactory."<init>":()V
      63: astore_1
      64: goto          86
      67: new           #52                 // class org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory
      70: dup
      71: invokespecial #53                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory."<init>":()V
      74: astore_1
      75: goto          86
      78: new           #54                 // class org/infinispan/distribution/ch/impl/ReplicatedConsistentHashFactory
      81: dup
      82: invokespecial #55                 // Method org/infinispan/distribution/ch/impl/ReplicatedConsistentHashFactory."<init>":()V
      85: astore_1
      86: aload_1
      87: areturn

  private org.infinispan.topology.CacheTopology addGrouping(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #18                 // Field groupManager:Lorg/infinispan/distribution/group/GroupManager;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aload_1
      10: invokevirtual #56                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      13: astore_2
      14: new           #57                 // class org/infinispan/distribution/group/GroupingConsistentHash
      17: dup
      18: aload_2
      19: aload_0
      20: getfield      #18                 // Field groupManager:Lorg/infinispan/distribution/group/GroupManager;
      23: invokespecial #58                 // Method org/infinispan/distribution/group/GroupingConsistentHash."<init>":(Lorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/group/GroupManager;)V
      26: astore_2
      27: aload_1
      28: invokevirtual #59                 // Method org/infinispan/topology/CacheTopology.getPendingCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      31: astore_3
      32: aload_3
      33: ifnull        49
      36: new           #57                 // class org/infinispan/distribution/group/GroupingConsistentHash
      39: dup
      40: aload_3
      41: aload_0
      42: getfield      #18                 // Field groupManager:Lorg/infinispan/distribution/group/GroupManager;
      45: invokespecial #58                 // Method org/infinispan/distribution/group/GroupingConsistentHash."<init>":(Lorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/group/GroupManager;)V
      48: astore_3
      49: aload_1
      50: invokevirtual #60                 // Method org/infinispan/topology/CacheTopology.getUnionCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      53: astore        4
      55: aload         4
      57: ifnull        75
      60: new           #57                 // class org/infinispan/distribution/group/GroupingConsistentHash
      63: dup
      64: aload         4
      66: aload_0
      67: getfield      #18                 // Field groupManager:Lorg/infinispan/distribution/group/GroupManager;
      70: invokespecial #58                 // Method org/infinispan/distribution/group/GroupingConsistentHash."<init>":(Lorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/group/GroupManager;)V
      73: astore        4
      75: new           #61                 // class org/infinispan/topology/CacheTopology
      78: dup
      79: aload_1
      80: invokevirtual #62                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      83: aload_1
      84: invokevirtual #63                 // Method org/infinispan/topology/CacheTopology.getRebalanceId:()I
      87: aload_2
      88: aload_3
      89: aload         4
      91: aload_1
      92: invokevirtual #64                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
      95: invokespecial #65                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
      98: areturn

  private void doTopologyUpdate(org.infinispan.topology.CacheTopology, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
       4: invokeinterface #66,  1           // InterfaceMethod org/infinispan/statetransfer/StateConsumer.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
       9: astore_3
      10: aload_3
      11: ifnull        61
      14: aload_3
      15: invokevirtual #62                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      18: aload_1
      19: invokevirtual #62                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      22: if_icmple     61
      25: new           #67                 // class java/lang/IllegalStateException
      28: dup
      29: new           #68                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #69                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #70                 // String Old topology is higher: old=
      38: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #73                 // String , new=
      47: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #75                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: getstatic     #20                 // Field trace:Z
      64: ifeq          82
      67: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
      70: ldc           #76                 // String Installing new cache topology %s on cache %s
      72: aload_1
      73: aload_0
      74: getfield      #13                 // Field cacheName:Ljava/lang/String;
      77: invokeinterface #24,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      82: aload_0
      83: getfield      #8                  // Field firstTopologyAsMember:I
      86: ldc           #7                  // int 2147483647
      88: if_icmpne     140
      91: aload_1
      92: invokevirtual #77                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      95: aload_0
      96: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      99: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
     104: invokeinterface #78,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     109: ifeq          140
     112: aload_0
     113: aload_1
     114: invokevirtual #62                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     117: putfield      #8                  // Field firstTopologyAsMember:I
     120: getstatic     #20                 // Field trace:Z
     123: ifeq          140
     126: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
     129: ldc           #79                 // String This is the first topology %d in which the local node is a member
     131: aload_0
     132: getfield      #8                  // Field firstTopologyAsMember:I
     135: invokeinterface #80,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;I)V
     140: aload_0
     141: aload_1
     142: invokespecial #81                 // Method addGrouping:(Lorg/infinispan/topology/CacheTopology;)Lorg/infinispan/topology/CacheTopology;
     145: astore_1
     146: aload_0
     147: getfield      #14                 // Field cacheNotifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
     150: aload_3
     151: aload_1
     152: aload_1
     153: invokevirtual #62                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     156: iconst_1
     157: invokeinterface #82,  5           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyTopologyChanged:(Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/topology/CacheTopology;IZ)V
     162: aload_0
     163: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
     166: aload_1
     167: iload_2
     168: invokeinterface #83,  3           // InterfaceMethod org/infinispan/statetransfer/StateConsumer.onTopologyUpdate:(Lorg/infinispan/topology/CacheTopology;Z)V
     173: aload_0
     174: getfield      #10                 // Field stateProvider:Lorg/infinispan/statetransfer/StateProvider;
     177: aload_1
     178: iload_2
     179: invokeinterface #84,  3           // InterfaceMethod org/infinispan/statetransfer/StateProvider.onTopologyUpdate:(Lorg/infinispan/topology/CacheTopology;Z)V
     184: aload_0
     185: getfield      #14                 // Field cacheNotifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
     188: aload_3
     189: aload_1
     190: aload_1
     191: invokevirtual #62                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     194: iconst_0
     195: invokeinterface #82,  5           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyTopologyChanged:(Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/topology/CacheTopology;IZ)V
     200: aload_0
     201: getfield      #5                  // Field initialStateTransferComplete:Ljava/util/concurrent/CountDownLatch;
     204: invokevirtual #85                 // Method java/util/concurrent/CountDownLatch.getCount:()J
     207: lconst_0
     208: lcmp
     209: ifle          280
     212: aload_0
     213: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
     216: invokeinterface #66,  1           // InterfaceMethod org/infinispan/statetransfer/StateConsumer.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     221: invokevirtual #86                 // Method org/infinispan/topology/CacheTopology.getReadConsistentHash:()Lorg/infinispan/distribution/ch/ConsistentHash;
     224: invokeinterface #87,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
     229: aload_0
     230: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     233: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
     238: invokeinterface #78,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     243: istore        4
     245: iload         4
     247: ifeq          280
     250: aload_0
     251: getfield      #5                  // Field initialStateTransferComplete:Ljava/util/concurrent/CountDownLatch;
     254: invokevirtual #88                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     257: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
     260: ldc           #89                 // String Initial state transfer complete for cache %s on node %s
     262: aload_0
     263: getfield      #13                 // Field cacheName:Ljava/lang/String;
     266: aload_0
     267: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     270: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
     275: invokeinterface #24,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     280: aload_0
     281: getfield      #11                 // Field partitionHandlingManager:Lorg/infinispan/partitionhandling/impl/PartitionHandlingManager;
     284: aload_1
     285: invokeinterface #90,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/PartitionHandlingManager.onTopologyUpdate:(Lorg/infinispan/topology/CacheTopology;)V
     290: return

  public void waitForInitialStateTransferToComplete() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
       7: invokevirtual #32                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfiguration;
      10: invokevirtual #91                 // Method org/infinispan/configuration/cache/StateTransferConfiguration.awaitInitialTransfer:()Z
      13: ifeq          128
      16: aload_0
      17: getfield      #19                 // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
      20: invokeinterface #92,  1           // InterfaceMethod org/infinispan/topology/LocalTopologyManager.isRebalancingEnabled:()Z
      25: ifne          35
      28: aload_0
      29: getfield      #5                  // Field initialStateTransferComplete:Ljava/util/concurrent/CountDownLatch;
      32: invokevirtual #88                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      35: getstatic     #20                 // Field trace:Z
      38: ifeq          64
      41: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
      44: ldc           #93                 // String Waiting for initial state transfer to finish for cache %s on %s
      46: aload_0
      47: getfield      #13                 // Field cacheName:Ljava/lang/String;
      50: aload_0
      51: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      54: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
      59: invokeinterface #24,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      64: aload_0
      65: getfield      #5                  // Field initialStateTransferComplete:Ljava/util/concurrent/CountDownLatch;
      68: aload_0
      69: getfield      #15                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      72: invokevirtual #27                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      75: invokevirtual #32                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfiguration;
      78: invokevirtual #33                 // Method org/infinispan/configuration/cache/StateTransferConfiguration.timeout:()J
      81: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      84: invokevirtual #95                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      87: istore_1
      88: iload_1
      89: ifne          128
      92: new           #96                 // class org/infinispan/commons/CacheException
      95: dup
      96: ldc           #97                 // String Initial state transfer timed out for cache %s on %s
      98: iconst_2
      99: anewarray     #98                 // class java/lang/Object
     102: dup
     103: iconst_0
     104: aload_0
     105: getfield      #13                 // Field cacheName:Ljava/lang/String;
     108: aastore
     109: dup
     110: iconst_1
     111: aload_0
     112: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     115: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
     120: aastore
     121: invokestatic  #99                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     124: invokespecial #100                // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: return

  public void stop();
    Code:
       0: getstatic     #20                 // Field trace:Z
       3: ifeq          29
       6: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #101                // String Shutting down StateTransferManager of cache %s on node %s
      11: aload_0
      12: getfield      #13                 // Field cacheName:Ljava/lang/String;
      15: aload_0
      16: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      19: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
      24: invokeinterface #24,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #5                  // Field initialStateTransferComplete:Ljava/util/concurrent/CountDownLatch;
      33: invokevirtual #88                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      36: aload_0
      37: getfield      #19                 // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
      40: aload_0
      41: getfield      #13                 // Field cacheName:Ljava/lang/String;
      44: invokeinterface #102,  2          // InterfaceMethod org/infinispan/topology/LocalTopologyManager.leave:(Ljava/lang/String;)V
      49: return

  public boolean isJoinComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
       4: invokeinterface #66,  1           // InterfaceMethod org/infinispan/statetransfer/StateConsumer.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String getRebalancingStatus() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #19                 // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
       4: aload_0
       5: getfield      #13                 // Field cacheName:Ljava/lang/String;
       8: invokeinterface #103,  2          // InterfaceMethod org/infinispan/topology/LocalTopologyManager.getRebalancingStatus:(Ljava/lang/String;)Lorg/infinispan/topology/RebalancingStatus;
      13: invokevirtual #104                // Method org/infinispan/topology/RebalancingStatus.toString:()Ljava/lang/String;
      16: areturn

  public boolean isStateTransferInProgress();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
       4: invokeinterface #105,  1          // InterfaceMethod org/infinispan/statetransfer/StateConsumer.isStateTransferInProgress:()Z
       9: ireturn

  public boolean isStateTransferInProgressForKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
       4: aload_1
       5: invokeinterface #106,  2          // InterfaceMethod org/infinispan/statetransfer/StateConsumer.isStateTransferInProgressForKey:(Ljava/lang/Object;)Z
      10: ireturn

  public org.infinispan.topology.CacheTopology getCacheTopology();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
       4: invokeinterface #66,  1           // InterfaceMethod org/infinispan/statetransfer/StateConsumer.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
       9: areturn

  public java.util.Map<org.infinispan.remoting.transport.Address, org.infinispan.remoting.responses.Response> forwardCommandIfNeeded(org.infinispan.commands.TopologyAffectedCommand, java.util.Set<java.lang.Object>, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: invokevirtual #107                // Method getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
       4: astore        4
       6: aload         4
       8: ifnonnull     32
      11: getstatic     #20                 // Field trace:Z
      14: ifeq          28
      17: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
      20: ldc           #108                // String Not fowarding command %s because topology is null.
      22: aload_1
      23: invokeinterface #109,  3          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      28: invokestatic  #110                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      31: areturn
      32: aload_1
      33: invokeinterface #111,  1          // InterfaceMethod org/infinispan/commands/TopologyAffectedCommand.getTopologyId:()I
      38: istore        5
      40: aload         4
      42: invokevirtual #62                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      45: istore        6
      47: getstatic     #20                 // Field trace:Z
      50: ifeq          67
      53: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
      56: ldc           #112                // String CommandTopologyId=%s, localTopologyId=%s
      58: iload         5
      60: iload         6
      62: invokeinterface #113,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;II)V
      67: iload         5
      69: iload         6
      71: if_icmpge     191
      74: aload         4
      76: invokevirtual #114                // Method org/infinispan/topology/CacheTopology.getWriteConsistentHash:()Lorg/infinispan/distribution/ch/ConsistentHash;
      79: astore        7
      81: new           #115                // class java/util/HashSet
      84: dup
      85: aload         7
      87: aload_2
      88: invokeinterface #116,  2          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.locateAllOwners:(Ljava/util/Collection;)Ljava/util/Set;
      93: invokespecial #117                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      96: astore        8
      98: aload         8
     100: aload_0
     101: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     104: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
     109: invokeinterface #118,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     114: pop
     115: aload         8
     117: aload_3
     118: invokeinterface #118,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     123: pop
     124: aload         8
     126: invokeinterface #119,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     131: ifne          191
     134: aload_1
     135: iload         6
     137: invokeinterface #120,  2          // InterfaceMethod org/infinispan/commands/TopologyAffectedCommand.setTopologyId:(I)V
     142: getstatic     #20                 // Field trace:Z
     145: ifeq          161
     148: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
     151: ldc           #121                // String Forwarding command %s to new targets %s
     153: aload_1
     154: aload         8
     156: invokeinterface #24,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     161: aload_0
     162: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     165: iconst_0
     166: getstatic     #122                // Field org/infinispan/remoting/inboundhandler/DeliverOrder.NONE:Lorg/infinispan/remoting/inboundhandler/DeliverOrder;
     169: invokeinterface #123,  3          // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getDefaultRpcOptions:(ZLorg/infinispan/remoting/inboundhandler/DeliverOrder;)Lorg/infinispan/remoting/rpc/RpcOptions;
     174: astore        9
     176: aload_0
     177: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     180: aload         8
     182: aload_1
     183: aload         9
     185: invokeinterface #124,  4          // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.invokeRemotely:(Ljava/util/Collection;Lorg/infinispan/commands/ReplicableCommand;Lorg/infinispan/remoting/rpc/RpcOptions;)Ljava/util/Map;
     190: areturn
     191: invokestatic  #110                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     194: areturn

  public void notifyEndOfRebalance(int, int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
       4: aload_0
       5: getfield      #13                 // Field cacheName:Ljava/lang/String;
       8: iload_1
       9: iload_2
      10: aconst_null
      11: invokeinterface #125,  5          // InterfaceMethod org/infinispan/topology/LocalTopologyManager.confirmRebalance:(Ljava/lang/String;IILjava/lang/Throwable;)V
      16: return

  public boolean ownsData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateConsumer:Lorg/infinispan/statetransfer/StateConsumer;
       4: invokeinterface #126,  1          // InterfaceMethod org/infinispan/statetransfer/StateConsumer.ownsData:()Z
       9: ireturn

  public int getFirstTopologyAsMember();
    Code:
       0: aload_0
       1: getfield      #8                  // Field firstTopologyAsMember:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #68                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #69                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #127                // String StateTransferManagerImpl [
       9: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #13                 // Field cacheName:Ljava/lang/String;
      16: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #128                // String @
      21: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #17                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      28: invokeinterface #23,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
      33: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #129                // String ]
      38: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  static void access$000(org.infinispan.statetransfer.StateTransferManagerImpl, org.infinispan.topology.CacheTopology, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method doTopologyUpdate:(Lorg/infinispan/topology/CacheTopology;Z)V
       6: return

  static {};
    Code:
       0: ldc           #130                // class org/infinispan/statetransfer/StateTransferManagerImpl
       2: invokestatic  #131                // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #21                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #132,  1          // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #20                 // Field trace:Z
      19: return
}
