Compiled from "NoMapIteratorOperation.java"
public class org.infinispan.stream.impl.termop.object.NoMapIteratorOperation<K, V> extends org.infinispan.stream.impl.termop.object.MapIteratorOperation<K, V, V> {
  public org.infinispan.stream.impl.termop.object.NoMapIteratorOperation(java.lang.Iterable<org.infinispan.stream.impl.intops.IntermediateOperation>, java.util.function.Supplier<java.util.stream.Stream<org.infinispan.container.entries.CacheEntry>>, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method org/infinispan/stream/impl/termop/object/MapIteratorOperation."<init>":(Ljava/lang/Iterable;Ljava/util/function/Supplier;I)V
       7: return

  public boolean lostSegment(boolean);
    Code:
       0: iconst_1
       1: ireturn

  public java.util.List<V> performOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector<java.util.Collection<V>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: checkcast     #4                  // class java/util/stream/BaseStream
      12: astore_2
      13: aload_0
      14: getfield      #5                  // Field intermediateOperations:Ljava/lang/Iterable;
      17: invokeinterface #6,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          55
      32: aload_3
      33: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #9                  // class org/infinispan/stream/impl/intops/IntermediateOperation
      41: astore        4
      43: aload         4
      45: aload_2
      46: invokeinterface #10,  2           // InterfaceMethod org/infinispan/stream/impl/intops/IntermediateOperation.perform:(Ljava/util/stream/BaseStream;)Ljava/util/stream/BaseStream;
      51: astore_2
      52: goto          23
      55: aload_2
      56: checkcast     #11                 // class java/util/stream/Stream
      59: astore_3
      60: aload_0
      61: aload_1
      62: aload_3
      63: invokespecial #12                 // Method actualPerformOperation:(Lorg/infinispan/stream/impl/KeyTrackingTerminalOperation$IntermediateCollector;Ljava/util/stream/Stream;)Ljava/util/List;
      66: areturn

  private <R> java.util.List<R> actualPerformOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector<java.util.Collection<R>>, java.util.stream.Stream<R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Lorg/infinispan/stream/impl/termop/object/NoMapIteratorOperation;Lorg/infinispan/stream/impl/KeyTrackingTerminalOperation$IntermediateCollector;)Ljava/util/function/BiConsumer;
       7: astore_3
       8: aload_2
       9: invokedynamic #14,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      14: aload_3
      15: aload_3
      16: invokedynamic #15,  0             // InvokeDynamic #2:accept:(Ljava/util/function/BiConsumer;)Ljava/util/function/BiConsumer;
      21: invokeinterface #16,  4           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;
      26: checkcast     #17                 // class java/util/List
      29: astore        4
      31: aload         4
      33: areturn

  public java.util.Collection<org.infinispan.container.entries.CacheEntry<K, V>> performOperationRehashAware(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector<java.util.Collection<org.infinispan.container.entries.CacheEntry<K, V>>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: checkcast     #4                  // class java/util/stream/BaseStream
      12: invokeinterface #18,  1           // InterfaceMethod java/util/stream/BaseStream.sequential:()Ljava/util/stream/BaseStream;
      17: astore_2
      18: aload_0
      19: getfield      #5                  // Field intermediateOperations:Ljava/lang/Iterable;
      22: invokeinterface #6,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          60
      37: aload_3
      38: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #9                  // class org/infinispan/stream/impl/intops/IntermediateOperation
      46: astore        4
      48: aload         4
      50: aload_2
      51: invokeinterface #10,  2           // InterfaceMethod org/infinispan/stream/impl/intops/IntermediateOperation.perform:(Ljava/util/stream/BaseStream;)Ljava/util/stream/BaseStream;
      56: astore_2
      57: goto          28
      60: aload_0
      61: aload_1
      62: aload_2
      63: checkcast     #11                 // class java/util/stream/Stream
      66: invokespecial #12                 // Method actualPerformOperation:(Lorg/infinispan/stream/impl/KeyTrackingTerminalOperation$IntermediateCollector;Ljava/util/stream/Stream;)Ljava/util/List;
      69: areturn

  public java.util.Collection performOperation(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method performOperation:(Lorg/infinispan/stream/impl/KeyTrackingTerminalOperation$IntermediateCollector;)Ljava/util/List;
       5: areturn

  private static void lambda$actualPerformOperation$184(java.util.function.BiConsumer, java.util.List, java.util.List);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #20,  0             // InvokeDynamic #3:accept:(Ljava/util/function/BiConsumer;Ljava/util/List;)Ljava/util/function/Consumer;
       8: invokeinterface #21,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      13: return

  private static void lambda$null$183(java.util.function.BiConsumer, java.util.List, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #22,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  private void lambda$actualPerformOperation$182(org.infinispan.stream.impl.KeyTrackingTerminalOperation$IntermediateCollector, java.util.List, java.lang.Object);
    Code:
       0: aload_2
       1: aload_3
       2: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       7: pop
       8: aload_2
       9: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      14: aload_0
      15: getfield      #25                 // Field batchSize:I
      18: if_icmplt     34
      21: aload_1
      22: aload_2
      23: invokeinterface #26,  2           // InterfaceMethod org/infinispan/stream/impl/KeyTrackingTerminalOperation$IntermediateCollector.sendDataResonse:(Ljava/lang/Object;)V
      28: aload_2
      29: invokeinterface #27,  1           // InterfaceMethod java/util/List.clear:()V
      34: return
}
