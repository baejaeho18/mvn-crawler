Compiled from "L1ManagerImpl.java"
public class org.infinispan.distribution.impl.L1ManagerImpl implements org.infinispan.distribution.L1Manager,org.infinispan.distribution.RemoteValueRetrievedListener {
  private static final org.infinispan.util.logging.Log log;

  private final boolean trace;

  private org.infinispan.configuration.cache.Configuration configuration;

  private org.infinispan.remoting.rpc.RpcManager rpcManager;

  private org.infinispan.commands.CommandsFactory commandsFactory;

  private int threshold;

  private long l1Lifespan;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, java.util.concurrent.ConcurrentMap<org.infinispan.remoting.transport.Address, java.lang.Long>> requestors;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, org.infinispan.interceptors.distribution.L1WriteSynchronizer> synchronizers;

  private java.util.concurrent.ScheduledExecutorService scheduledExecutor;

  private java.util.concurrent.ScheduledFuture<?> scheduledRequestorsCleanupTask;

  private org.infinispan.util.TimeService timeService;

  private org.infinispan.remoting.rpc.RpcOptions syncIgnoreLeaversRpcOptions;

  public org.infinispan.distribution.impl.L1ManagerImpl();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
       8: invokeinterface #4,  1            // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      13: putfield      #5                  // Field trace:Z
      16: aload_0
      17: invokestatic  #6                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      20: putfield      #7                  // Field requestors:Ljava/util/concurrent/ConcurrentMap;
      23: aload_0
      24: invokestatic  #6                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      27: putfield      #8                  // Field synchronizers:Ljava/util/concurrent/ConcurrentMap;
      30: return

  public void init(org.infinispan.configuration.cache.Configuration, org.infinispan.remoting.rpc.RpcManager, org.infinispan.commands.CommandsFactory, java.util.concurrent.ScheduledExecutorService, org.infinispan.util.TimeService);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #9                  // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
       5: aload_0
       6: aload_3
       7: putfield      #10                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      10: aload_0
      11: aload_1
      12: putfield      #11                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      15: aload_0
      16: aload         4
      18: putfield      #12                 // Field scheduledExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      21: aload_0
      22: aload         5
      24: putfield      #13                 // Field timeService:Lorg/infinispan/util/TimeService;
      27: return

  public void start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
       5: invokevirtual #14                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
       8: invokevirtual #15                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.l1:()Lorg/infinispan/configuration/cache/L1Configuration;
      11: invokevirtual #16                 // Method org/infinispan/configuration/cache/L1Configuration.invalidationThreshold:()I
      14: putfield      #17                 // Field threshold:I
      17: aload_0
      18: aload_0
      19: getfield      #11                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      22: invokevirtual #14                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      25: invokevirtual #15                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.l1:()Lorg/infinispan/configuration/cache/L1Configuration;
      28: invokevirtual #18                 // Method org/infinispan/configuration/cache/L1Configuration.lifespan:()J
      31: putfield      #19                 // Field l1Lifespan:J
      34: aload_0
      35: getfield      #11                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      38: invokevirtual #14                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      41: invokevirtual #15                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.l1:()Lorg/infinispan/configuration/cache/L1Configuration;
      44: invokevirtual #20                 // Method org/infinispan/configuration/cache/L1Configuration.cleanupTaskFrequency:()J
      47: lconst_0
      48: lcmp
      49: ifle          105
      52: aload_0
      53: aload_0
      54: getfield      #12                 // Field scheduledExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      57: new           #21                 // class org/infinispan/distribution/impl/L1ManagerImpl$1
      60: dup
      61: aload_0
      62: invokespecial #22                 // Method org/infinispan/distribution/impl/L1ManagerImpl$1."<init>":(Lorg/infinispan/distribution/impl/L1ManagerImpl;)V
      65: aload_0
      66: getfield      #11                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      69: invokevirtual #14                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      72: invokevirtual #15                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.l1:()Lorg/infinispan/configuration/cache/L1Configuration;
      75: invokevirtual #20                 // Method org/infinispan/configuration/cache/L1Configuration.cleanupTaskFrequency:()J
      78: aload_0
      79: getfield      #11                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      82: invokevirtual #14                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      85: invokevirtual #15                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.l1:()Lorg/infinispan/configuration/cache/L1Configuration;
      88: invokevirtual #20                 // Method org/infinispan/configuration/cache/L1Configuration.cleanupTaskFrequency:()J
      91: getstatic     #23                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      94: invokeinterface #24,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      99: putfield      #25                 // Field scheduledRequestorsCleanupTask:Ljava/util/concurrent/ScheduledFuture;
     102: goto          113
     105: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
     108: invokeinterface #26,  1           // InterfaceMethod org/infinispan/util/logging/Log.warnL1NotHavingReaperThread:()V
     113: aload_0
     114: aload_0
     115: getfield      #9                  // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     118: getstatic     #27                 // Field org/infinispan/remoting/rpc/ResponseMode.SYNCHRONOUS_IGNORE_LEAVERS:Lorg/infinispan/remoting/rpc/ResponseMode;
     121: getstatic     #28                 // Field org/infinispan/remoting/inboundhandler/DeliverOrder.NONE:Lorg/infinispan/remoting/inboundhandler/DeliverOrder;
     124: invokeinterface #29,  3           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getRpcOptionsBuilder:(Lorg/infinispan/remoting/rpc/ResponseMode;Lorg/infinispan/remoting/inboundhandler/DeliverOrder;)Lorg/infinispan/remoting/rpc/RpcOptionsBuilder;
     129: invokevirtual #30                 // Method org/infinispan/remoting/rpc/RpcOptionsBuilder.build:()Lorg/infinispan/remoting/rpc/RpcOptions;
     132: putfield      #31                 // Field syncIgnoreLeaversRpcOptions:Lorg/infinispan/remoting/rpc/RpcOptions;
     135: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #25                 // Field scheduledRequestorsCleanupTask:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        18
       7: aload_0
       8: getfield      #25                 // Field scheduledRequestorsCleanupTask:Ljava/util/concurrent/ScheduledFuture;
      11: iconst_1
      12: invokeinterface #32,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: pop
      18: return

  private void cleanUpRequestors();
    Code:
       0: aload_0
       1: getfield      #13                 // Field timeService:Lorg/infinispan/util/TimeService;
       4: invokeinterface #33,  1           // InterfaceMethod org/infinispan/util/TimeService.wallClockTime:()J
       9: aload_0
      10: getfield      #19                 // Field l1Lifespan:J
      13: lsub
      14: lstore_1
      15: aload_0
      16: getfield      #7                  // Field requestors:Ljava/util/concurrent/ConcurrentMap;
      19: invokeinterface #34,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      24: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          103
      39: aload_3
      40: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #38                 // class java/util/Map$Entry
      48: astore        4
      50: aload         4
      52: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: astore        5
      59: aload         4
      61: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      66: checkcast     #41                 // class java/util/concurrent/ConcurrentMap
      69: astore        6
      71: aload_0
      72: aload         6
      74: lload_1
      75: invokespecial #42                 // Method prune:(Ljava/util/concurrent/ConcurrentMap;J)V
      78: aload         6
      80: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
      85: ifeq          100
      88: aload_0
      89: getfield      #7                  // Field requestors:Ljava/util/concurrent/ConcurrentMap;
      92: aload         5
      94: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: goto          30
     103: return

  private void prune(java.util.concurrent.ConcurrentMap<org.infinispan.remoting.transport.Address, java.lang.Long>, long);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       6: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          70
      23: aload         4
      25: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #38                 // class java/util/Map$Entry
      33: astore        5
      35: aload         5
      37: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      42: checkcast     #45                 // class java/lang/Long
      45: invokevirtual #46                 // Method java/lang/Long.longValue:()J
      48: lload_2
      49: lcmp
      50: ifge          67
      53: aload_1
      54: aload         5
      56: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      61: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: goto          13
      70: return

  public void addRequestor(java.lang.Object, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: getfield      #7                  // Field requestors:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #41                 // class java/util/concurrent/ConcurrentMap
      13: astore_3
      14: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      17: ldc           #48                 // String Registering requestor %s for key \'%s\'
      19: aload_2
      20: aload_1
      21: invokeinterface #49,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      26: aload_0
      27: getfield      #13                 // Field timeService:Lorg/infinispan/util/TimeService;
      30: invokeinterface #33,  1           // InterfaceMethod org/infinispan/util/TimeService.wallClockTime:()J
      35: lstore        4
      37: aload_3
      38: ifnonnull     96
      41: invokestatic  #6                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      44: astore_3
      45: aload_3
      46: aload_2
      47: lload         4
      49: invokestatic  #50                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      52: invokeinterface #51,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: getfield      #7                  // Field requestors:Ljava/util/concurrent/ConcurrentMap;
      62: aload_1
      63: aload_3
      64: invokeinterface #52,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #41                 // class java/util/concurrent/ConcurrentMap
      72: astore        6
      74: aload         6
      76: ifnull        93
      79: aload         6
      81: aload_2
      82: lload         4
      84: invokestatic  #50                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      87: invokeinterface #51,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: goto          109
      96: aload_3
      97: aload_2
      98: lload         4
     100: invokestatic  #50                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     103: invokeinterface #51,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: return

  public java.util.concurrent.Future<?> flushCache(java.util.Collection<java.lang.Object>, org.infinispan.remoting.transport.Address, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #53                 // Method buildInvalidationAddressList:(Ljava/util/Collection;Lorg/infinispan/remoting/transport/Address;Z)Ljava/util/Collection;
       7: astore        4
       9: aload         4
      11: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.size:()I
      16: istore        5
      18: iload         5
      20: ifle          133
      23: aload_0
      24: getfield      #10                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      27: aload_2
      28: invokestatic  #55                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      31: aload_1
      32: invokeinterface #56,  4           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildInvalidateFromL1Command:(Lorg/infinispan/remoting/transport/Address;Ljava/util/Set;Ljava/util/Collection;)Lorg/infinispan/commands/write/InvalidateCommand;
      37: astore        6
      39: aload_0
      40: getfield      #10                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      43: aload         6
      45: invokeinterface #57,  2           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildSingleRpcCommand:(Lorg/infinispan/commands/ReplicableCommand;)Lorg/infinispan/commands/remote/SingleRpcCommand;
      50: astore        7
      52: aload_0
      53: iload         5
      55: invokespecial #58                 // Method isUseMulticast:(I)Z
      58: istore        8
      60: aload_0
      61: getfield      #5                  // Field trace:Z
      64: ifeq          85
      67: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      70: ldc           #59                 // String Invalidating keys %s on nodes %s. Use multicast? %s
      72: aload_1
      73: aload         4
      75: iload         8
      77: invokestatic  #60                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      80: invokeinterface #61,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      85: iload         8
      87: ifeq          111
      90: aload_0
      91: getfield      #9                  // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      94: aconst_null
      95: aload         7
      97: aload_0
      98: getfield      #31                 // Field syncIgnoreLeaversRpcOptions:Lorg/infinispan/remoting/rpc/RpcOptions;
     101: invokeinterface #62,  4           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.invokeRemotelyAsync:(Ljava/util/Collection;Lorg/infinispan/commands/ReplicableCommand;Lorg/infinispan/remoting/rpc/RpcOptions;)Ljava/util/concurrent/CompletableFuture;
     106: astore        9
     108: goto          130
     111: aload_0
     112: getfield      #9                  // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     115: aload         4
     117: aload         7
     119: aload_0
     120: getfield      #31                 // Field syncIgnoreLeaversRpcOptions:Lorg/infinispan/remoting/rpc/RpcOptions;
     123: invokeinterface #62,  4           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.invokeRemotelyAsync:(Ljava/util/Collection;Lorg/infinispan/commands/ReplicableCommand;Lorg/infinispan/remoting/rpc/RpcOptions;)Ljava/util/concurrent/CompletableFuture;
     128: astore        9
     130: aload         9
     132: areturn
     133: aload_0
     134: getfield      #5                  // Field trace:Z
     137: ifeq          151
     140: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
     143: ldc           #63                 // String No L1 caches to invalidate for keys %s
     145: aload_1
     146: invokeinterface #64,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     151: aconst_null
     152: areturn

  private java.util.Collection<org.infinispan.remoting.transport.Address> buildInvalidationAddressList(java.util.Collection<java.lang.Object>, org.infinispan.remoting.transport.Address, boolean);
    Code:
       0: new           #65                 // class java/util/HashSet
       3: dup
       4: iconst_2
       5: invokespecial #66                 // Method java/util/HashSet."<init>":(I)V
       8: astore        4
      10: iconst_0
      11: istore        5
      13: aload_1
      14: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore        6
      21: aload         6
      23: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          112
      31: aload         6
      33: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore        7
      40: aload_0
      41: getfield      #7                  // Field requestors:Ljava/util/concurrent/ConcurrentMap;
      44: aload         7
      46: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #41                 // class java/util/concurrent/ConcurrentMap
      54: astore        8
      56: aload         8
      58: ifnull        109
      61: aload         8
      63: invokeinterface #68,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      68: astore        9
      70: aload         4
      72: aload         9
      74: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      79: pop
      80: iload_3
      81: ifeq          109
      84: aload_2
      85: ifnull        109
      88: aload         9
      90: aload_2
      91: invokeinterface #70,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      96: ifeq          109
      99: iconst_1
     100: istore        5
     102: aload_0
     103: aload         7
     105: aload_2
     106: invokevirtual #71                 // Method addRequestor:(Ljava/lang/Object;Lorg/infinispan/remoting/transport/Address;)V
     109: goto          21
     112: iload         5
     114: ifeq          126
     117: aload         4
     119: aload_2
     120: invokeinterface #72,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
     125: pop
     126: aload         4
     128: areturn

  private boolean isUseMulticast(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field threshold:I
       4: iconst_m1
       5: if_icmpne     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #9                  // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      14: invokeinterface #73,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getTransport:()Lorg/infinispan/remoting/transport/Transport;
      19: invokeinterface #74,  1           // InterfaceMethod org/infinispan/remoting/transport/Transport.isMulticastCapable:()Z
      24: ifne          29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #17                 // Field threshold:I
      33: ifne          38
      36: iconst_1
      37: ireturn
      38: iload_1
      39: aload_0
      40: getfield      #17                 // Field threshold:I
      43: if_icmple     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public void registerL1WriteSynchronizer(java.lang.Object, org.infinispan.interceptors.distribution.L1WriteSynchronizer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field synchronizers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #51,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: ifnull        32
      14: aload_0
      15: getfield      #5                  // Field trace:Z
      18: ifeq          32
      21: getstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
      24: ldc           #75                 // String Replaced existing L1 write synchronizer for key %s as there was a concurrent L1 attempt to update
      26: aload_1
      27: invokeinterface #64,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      32: return

  public void unregisterL1WriteSynchronizer(java.lang.Object, org.infinispan.interceptors.distribution.L1WriteSynchronizer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field synchronizers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #76,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: pop
      12: return

  public void remoteValueFound(org.infinispan.container.entries.InternalCacheEntry);
    Code:
       0: aload_0
       1: getfield      #8                  // Field synchronizers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #77,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getKey:()Ljava/lang/Object;
      10: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #78                 // class org/infinispan/interceptors/distribution/L1WriteSynchronizer
      18: astore_2
      19: aload_2
      20: ifnull        28
      23: aload_2
      24: aload_1
      25: invokevirtual #79                 // Method org/infinispan/interceptors/distribution/L1WriteSynchronizer.runL1UpdateIfPossible:(Lorg/infinispan/container/entries/InternalCacheEntry;)V
      28: return

  public void remoteValueNotFound(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field synchronizers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #78                 // class org/infinispan/interceptors/distribution/L1WriteSynchronizer
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: aconst_null
      20: invokevirtual #79                 // Method org/infinispan/interceptors/distribution/L1WriteSynchronizer.runL1UpdateIfPossible:(Lorg/infinispan/container/entries/InternalCacheEntry;)V
      23: return

  static void access$000(org.infinispan.distribution.impl.L1ManagerImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method cleanUpRequestors:()V
       4: return

  static {};
    Code:
       0: ldc           #80                 // class org/infinispan/distribution/impl/L1ManagerImpl
       2: invokestatic  #81                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #3                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
