Compiled from "GetInDoubtTxInfoCommand.java"
public class org.infinispan.commands.remote.recovery.GetInDoubtTxInfoCommand extends org.infinispan.commands.remote.recovery.RecoveryCommand {
  public static final int COMMAND_ID;

  private org.infinispan.commands.remote.recovery.GetInDoubtTxInfoCommand();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method org/infinispan/commands/remote/recovery/RecoveryCommand."<init>":(Ljava/lang/String;)V
       5: return

  public org.infinispan.commands.remote.recovery.GetInDoubtTxInfoCommand(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/commands/remote/recovery/RecoveryCommand."<init>":(Ljava/lang/String;)V
       5: return

  public java.lang.Object perform(org.infinispan.context.InvocationContext) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #2                  // Field recoveryManager:Lorg/infinispan/transaction/xa/recovery/RecoveryManager;
       4: invokeinterface #3,  1            // InterfaceMethod org/infinispan/transaction/xa/recovery/RecoveryManager.getInDoubtTransactionInfo:()Ljava/util/Set;
       9: areturn

  public byte getCommandId();
    Code:
       0: bipush        23
       2: ireturn

  public java.lang.Object[] getParameters();
    Code:
       0: getstatic     #5                  // Field org/infinispan/commons/util/Util.EMPTY_OBJECT_ARRAY:[Ljava/lang/Object;
       3: areturn

  public void setParameters(int, java.lang.Object[]);
    Code:
       0: iload_1
       1: bipush        23
       3: if_icmpeq     33
       6: new           #6                  // class java/lang/IllegalStateException
       9: dup
      10: new           #7                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #9                  // String Expected 23and received
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_1
      23: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: return

  public java.lang.String toString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #15                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #16                 // String  { cacheName =
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #17                 // Field cacheName:Ljava/lang/String;
      26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #18                 // String }
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn
}
