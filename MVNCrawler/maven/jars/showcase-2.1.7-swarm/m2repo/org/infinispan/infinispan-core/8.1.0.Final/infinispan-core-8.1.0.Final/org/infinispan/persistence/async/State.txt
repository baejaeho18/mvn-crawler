Compiled from "State.java"
public class org.infinispan.persistence.async.State {
  static final org.infinispan.persistence.modifications.Clear CLEAR;

  final boolean clear;

  final java.util.concurrent.ConcurrentMap<java.lang.Object, org.infinispan.persistence.modifications.Modification> modifications;

  volatile org.infinispan.persistence.async.State next;

  java.util.concurrent.CountDownLatch workerThreads;

  public org.infinispan.persistence.async.State(boolean, java.util.concurrent.ConcurrentMap<java.lang.Object, org.infinispan.persistence.modifications.Modification>, org.infinispan.persistence.async.State);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field clear:Z
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field modifications:Ljava/util/concurrent/ConcurrentMap;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field next:Lorg/infinispan/persistence/async/State;
      19: return

  org.infinispan.persistence.modifications.Modification get(java.lang.Object);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        45
       6: aload_2
       7: getfield      #3                  // Field modifications:Ljava/util/concurrent/ConcurrentMap;
      10: aload_1
      11: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #6                  // class org/infinispan/persistence/modifications/Modification
      19: astore_3
      20: aload_3
      21: ifnull        26
      24: aload_3
      25: areturn
      26: aload_2
      27: getfield      #2                  // Field clear:Z
      30: ifeq          37
      33: getstatic     #7                  // Field CLEAR:Lorg/infinispan/persistence/modifications/Clear;
      36: areturn
      37: aload_2
      38: getfield      #4                  // Field next:Lorg/infinispan/persistence/async/State;
      41: astore_2
      42: goto          2
      45: aconst_null
      46: areturn

  void put(org.infinispan.persistence.modifications.Modification);
    Code:
       0: getstatic     #8                  // Field org/infinispan/persistence/async/State$1.$SwitchMap$org$infinispan$persistence$modifications$Modification$Type:[I
       3: aload_1
       4: invokeinterface #9,  1            // InterfaceMethod org/infinispan/persistence/modifications/Modification.getType:()Lorg/infinispan/persistence/modifications/Modification$Type;
       9: invokevirtual #10                 // Method org/infinispan/persistence/modifications/Modification$Type.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 3
                     1: 40
                     2: 61
                     3: 82
               default: 125
          }
      40: aload_0
      41: getfield      #3                  // Field modifications:Ljava/util/concurrent/ConcurrentMap;
      44: aload_1
      45: checkcast     #11                 // class org/infinispan/persistence/modifications/Store
      48: invokevirtual #12                 // Method org/infinispan/persistence/modifications/Store.getKey:()Ljava/lang/Object;
      51: aload_1
      52: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: goto          157
      61: aload_0
      62: getfield      #3                  // Field modifications:Ljava/util/concurrent/ConcurrentMap;
      65: aload_1
      66: checkcast     #14                 // class org/infinispan/persistence/modifications/Remove
      69: invokevirtual #15                 // Method org/infinispan/persistence/modifications/Remove.getKey:()Ljava/lang/Object;
      72: aload_1
      73: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: goto          157
      82: aload_1
      83: checkcast     #16                 // class org/infinispan/persistence/modifications/ModificationsList
      86: invokevirtual #17                 // Method org/infinispan/persistence/modifications/ModificationsList.getList:()Ljava/util/List;
      89: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      94: astore_2
      95: aload_2
      96: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          122
     104: aload_2
     105: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #6                  // class org/infinispan/persistence/modifications/Modification
     113: astore_3
     114: aload_0
     115: aload_3
     116: invokevirtual #21                 // Method put:(Lorg/infinispan/persistence/modifications/Modification;)V
     119: goto          95
     122: goto          157
     125: new           #22                 // class java/lang/IllegalArgumentException
     128: dup
     129: new           #23                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     136: ldc           #25                 // String Unknown modification type
     138: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_1
     142: invokeinterface #9,  1            // InterfaceMethod org/infinispan/persistence/modifications/Modification.getType:()Lorg/infinispan/persistence/modifications/Modification$Type;
     147: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     150: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: return

  public java.util.Set getKeysInTransit();
    Code:
       0: new           #30                 // class java/util/HashSet
       3: dup
       4: invokespecial #31                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_0
      10: aload_1
      11: invokespecial #32                 // Method _loadKeys:(Lorg/infinispan/persistence/async/State;Ljava/util/Set;)V
      14: aload_1
      15: areturn

  private void _loadKeys(org.infinispan.persistence.async.State, java.util.Set);
    Code:
       0: aload_1
       1: getfield      #2                  // Field clear:Z
       4: ifne          22
       7: aload_1
       8: getfield      #4                  // Field next:Lorg/infinispan/persistence/async/State;
      11: astore_3
      12: aload_3
      13: ifnull        22
      16: aload_0
      17: aload_3
      18: aload_2
      19: invokespecial #32                 // Method _loadKeys:(Lorg/infinispan/persistence/async/State;Ljava/util/Set;)V
      22: aload_1
      23: getfield      #3                  // Field modifications:Ljava/util/concurrent/ConcurrentMap;
      26: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      31: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          136
      46: aload_3
      47: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #6                  // class org/infinispan/persistence/modifications/Modification
      55: astore        4
      57: getstatic     #8                  // Field org/infinispan/persistence/async/State$1.$SwitchMap$org$infinispan$persistence$modifications$Modification$Type:[I
      60: aload         4
      62: invokeinterface #9,  1            // InterfaceMethod org/infinispan/persistence/modifications/Modification.getType:()Lorg/infinispan/persistence/modifications/Modification$Type;
      67: invokevirtual #10                 // Method org/infinispan/persistence/modifications/Modification$Type.ordinal:()I
      70: iaload
      71: lookupswitch  { // 2
                     1: 96
                     2: 118
               default: 133
          }
      96: aload         4
      98: checkcast     #11                 // class org/infinispan/persistence/modifications/Store
     101: invokevirtual #12                 // Method org/infinispan/persistence/modifications/Store.getKey:()Ljava/lang/Object;
     104: astore        5
     106: aload_2
     107: aload         5
     109: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     114: pop
     115: goto          133
     118: aload_2
     119: aload         4
     121: checkcast     #14                 // class org/infinispan/persistence/modifications/Remove
     124: invokevirtual #15                 // Method org/infinispan/persistence/modifications/Remove.getKey:()Ljava/lang/Object;
     127: invokeinterface #36,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     132: pop
     133: goto          37
     136: return

  static {};
    Code:
       0: new           #37                 // class org/infinispan/persistence/modifications/Clear
       3: dup
       4: invokespecial #38                 // Method org/infinispan/persistence/modifications/Clear."<init>":()V
       7: putstatic     #7                  // Field CLEAR:Lorg/infinispan/persistence/modifications/Clear;
      10: return
}
