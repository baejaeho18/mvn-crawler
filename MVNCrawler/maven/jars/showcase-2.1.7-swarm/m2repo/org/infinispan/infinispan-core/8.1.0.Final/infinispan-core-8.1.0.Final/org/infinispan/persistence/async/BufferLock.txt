Compiled from "BufferLock.java"
class org.infinispan.persistence.async.BufferLock {
  private final org.infinispan.persistence.async.BufferLock$Sync sync;

  private final org.infinispan.persistence.async.BufferLock$Counter counter;

  private final org.infinispan.persistence.async.BufferLock$Available available;

  org.infinispan.persistence.async.BufferLock(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/infinispan/persistence/async/BufferLock$Sync
       8: dup
       9: aconst_null
      10: invokespecial #3                  // Method org/infinispan/persistence/async/BufferLock$Sync."<init>":(Lorg/infinispan/persistence/async/BufferLock$1;)V
      13: putfield      #4                  // Field sync:Lorg/infinispan/persistence/async/BufferLock$Sync;
      16: aload_0
      17: iload_1
      18: ifle          32
      21: new           #5                  // class org/infinispan/persistence/async/BufferLock$Counter
      24: dup
      25: iload_1
      26: invokespecial #6                  // Method org/infinispan/persistence/async/BufferLock$Counter."<init>":(I)V
      29: goto          33
      32: aconst_null
      33: putfield      #7                  // Field counter:Lorg/infinispan/persistence/async/BufferLock$Counter;
      36: aload_0
      37: new           #8                  // class org/infinispan/persistence/async/BufferLock$Available
      40: dup
      41: aconst_null
      42: invokespecial #9                  // Method org/infinispan/persistence/async/BufferLock$Available."<init>":(Lorg/infinispan/persistence/async/BufferLock$1;)V
      45: putfield      #10                 // Field available:Lorg/infinispan/persistence/async/BufferLock$Available;
      48: return

  void writeLock(int);
    Code:
       0: iload_1
       1: ifle          19
       4: aload_0
       5: getfield      #7                  // Field counter:Lorg/infinispan/persistence/async/BufferLock$Counter;
       8: ifnull        19
      11: aload_0
      12: getfield      #7                  // Field counter:Lorg/infinispan/persistence/async/BufferLock$Counter;
      15: iload_1
      16: invokevirtual #11                 // Method org/infinispan/persistence/async/BufferLock$Counter.acquireShared:(I)V
      19: aload_0
      20: getfield      #4                  // Field sync:Lorg/infinispan/persistence/async/BufferLock$Sync;
      23: iconst_1
      24: invokevirtual #12                 // Method org/infinispan/persistence/async/BufferLock$Sync.acquireShared:(I)V
      27: return

  void writeUnlock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lorg/infinispan/persistence/async/BufferLock$Sync;
       4: iconst_1
       5: invokevirtual #13                 // Method org/infinispan/persistence/async/BufferLock$Sync.releaseShared:(I)Z
       8: pop
       9: aload_0
      10: getfield      #10                 // Field available:Lorg/infinispan/persistence/async/BufferLock$Available;
      13: iconst_1
      14: invokevirtual #14                 // Method org/infinispan/persistence/async/BufferLock$Available.releaseShared:(I)Z
      17: pop
      18: return

  void readLock();
    Code:
       0: aload_0
       1: getfield      #10                 // Field available:Lorg/infinispan/persistence/async/BufferLock$Available;
       4: iconst_1
       5: invokevirtual #15                 // Method org/infinispan/persistence/async/BufferLock$Available.acquireShared:(I)V
       8: aload_0
       9: getfield      #4                  // Field sync:Lorg/infinispan/persistence/async/BufferLock$Sync;
      12: iconst_1
      13: invokevirtual #16                 // Method org/infinispan/persistence/async/BufferLock$Sync.acquire:(I)V
      16: return

  void readUnlock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sync:Lorg/infinispan/persistence/async/BufferLock$Sync;
       4: iconst_1
       5: invokevirtual #17                 // Method org/infinispan/persistence/async/BufferLock$Sync.release:(I)Z
       8: pop
       9: return

  void reset(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field counter:Lorg/infinispan/persistence/async/BufferLock$Counter;
       4: ifnull        16
       7: aload_0
       8: getfield      #7                  // Field counter:Lorg/infinispan/persistence/async/BufferLock$Counter;
      11: iload_1
      12: invokevirtual #18                 // Method org/infinispan/persistence/async/BufferLock$Counter.releaseShared:(I)Z
      15: pop
      16: aload_0
      17: getfield      #10                 // Field available:Lorg/infinispan/persistence/async/BufferLock$Available;
      20: iload_1
      21: invokevirtual #14                 // Method org/infinispan/persistence/async/BufferLock$Available.releaseShared:(I)Z
      24: pop
      25: return

  void add(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field counter:Lorg/infinispan/persistence/async/BufferLock$Counter;
       4: ifnull        16
       7: aload_0
       8: getfield      #7                  // Field counter:Lorg/infinispan/persistence/async/BufferLock$Counter;
      11: iload_1
      12: invokevirtual #19                 // Method org/infinispan/persistence/async/BufferLock$Counter.add:(I)I
      15: istore_1
      16: aload_0
      17: getfield      #10                 // Field available:Lorg/infinispan/persistence/async/BufferLock$Available;
      20: iload_1
      21: invokevirtual #14                 // Method org/infinispan/persistence/async/BufferLock$Available.releaseShared:(I)Z
      24: pop
      25: return
}
