Compiled from "PartitionAwareClusterStreamManager.java"
public class org.infinispan.stream.impl.PartitionAwareClusterStreamManager<K> extends org.infinispan.stream.impl.ClusterStreamManagerImpl<K> {
  protected final org.infinispan.stream.impl.PartitionAwareClusterStreamManager<K>.PartitionListener listener;

  protected org.infinispan.Cache<?, ?> cache;

  public org.infinispan.stream.impl.PartitionAwareClusterStreamManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/stream/impl/ClusterStreamManagerImpl."<init>":()V
       4: aload_0
       5: new           #2                  // class org/infinispan/stream/impl/PartitionAwareClusterStreamManager$PartitionListener
       8: dup
       9: aload_0
      10: invokespecial #3                  // Method org/infinispan/stream/impl/PartitionAwareClusterStreamManager$PartitionListener."<init>":(Lorg/infinispan/stream/impl/PartitionAwareClusterStreamManager;)V
      13: putfield      #4                  // Field listener:Lorg/infinispan/stream/impl/PartitionAwareClusterStreamManager$PartitionListener;
      16: return

  public void inject(org.infinispan.Cache<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field cache:Lorg/infinispan/Cache;
       5: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/infinispan/stream/impl/ClusterStreamManagerImpl.start:()V
       4: aload_0
       5: getfield      #5                  // Field cache:Lorg/infinispan/Cache;
       8: aload_0
       9: getfield      #4                  // Field listener:Lorg/infinispan/stream/impl/PartitionAwareClusterStreamManager$PartitionListener;
      12: invokeinterface #7,  2            // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;)V
      17: return

  public boolean awaitCompletion(java.util.UUID, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkPartitionStatus:()V
       4: aload_0
       5: aload_1
       6: lload_2
       7: aload         4
       9: invokespecial #9                  // Method org/infinispan/stream/impl/ClusterStreamManagerImpl.awaitCompletion:(Ljava/util/UUID;JLjava/util/concurrent/TimeUnit;)Z
      12: ireturn

  public <R> java.util.UUID remoteStreamOperation(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.TerminalOperation<R>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<R>, java.util.function.Predicate<? super R>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkPartitionStatus:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: aload         6
      14: iload         7
      16: aload         8
      18: aload         9
      20: aload         10
      22: invokespecial #10                 // Method org/infinispan/stream/impl/ClusterStreamManagerImpl.remoteStreamOperation:(ZZLorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;ZLorg/infinispan/stream/impl/TerminalOperation;Lorg/infinispan/stream/impl/ClusterStreamManager$ResultsCallback;Ljava/util/function/Predicate;)Ljava/util/UUID;
      25: areturn

  public <R> java.util.UUID remoteStreamOperation(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.KeyTrackingTerminalOperation<K, R, ?>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<java.util.Collection<R>>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkPartitionStatus:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: aload         6
      14: iload         7
      16: aload         8
      18: aload         9
      20: invokespecial #11                 // Method org/infinispan/stream/impl/ClusterStreamManagerImpl.remoteStreamOperation:(ZZLorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;ZLorg/infinispan/stream/impl/KeyTrackingTerminalOperation;Lorg/infinispan/stream/impl/ClusterStreamManager$ResultsCallback;)Ljava/util/UUID;
      23: areturn

  public <R> java.util.UUID remoteStreamOperationRehashAware(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.TerminalOperation<R>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<R>, java.util.function.Predicate<? super R>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkPartitionStatus:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: aload         6
      14: iload         7
      16: aload         8
      18: aload         9
      20: aload         10
      22: invokespecial #12                 // Method org/infinispan/stream/impl/ClusterStreamManagerImpl.remoteStreamOperationRehashAware:(ZZLorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;ZLorg/infinispan/stream/impl/TerminalOperation;Lorg/infinispan/stream/impl/ClusterStreamManager$ResultsCallback;Ljava/util/function/Predicate;)Ljava/util/UUID;
      25: areturn

  public <R2> java.util.UUID remoteStreamOperationRehashAware(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.KeyTrackingTerminalOperation<K, ?, R2>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<java.util.Map<K, R2>>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method checkPartitionStatus:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: aload         6
      14: iload         7
      16: aload         8
      18: aload         9
      20: invokespecial #13                 // Method org/infinispan/stream/impl/ClusterStreamManagerImpl.remoteStreamOperationRehashAware:(ZZLorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;ZLorg/infinispan/stream/impl/KeyTrackingTerminalOperation;Lorg/infinispan/stream/impl/ClusterStreamManager$ResultsCallback;)Ljava/util/UUID;
      23: areturn

  private void checkPartitionStatus();
    Code:
       0: aload_0
       1: getfield      #4                  // Field listener:Lorg/infinispan/stream/impl/PartitionAwareClusterStreamManager$PartitionListener;
       4: getfield      #14                 // Field org/infinispan/stream/impl/PartitionAwareClusterStreamManager$PartitionListener.currentMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       7: getstatic     #15                 // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
      10: if_acmpeq     22
      13: getstatic     #16                 // Field log:Lorg/infinispan/util/logging/Log;
      16: invokeinterface #17,  1           // InterfaceMethod org/infinispan/util/logging/Log.partitionDegraded:()Lorg/infinispan/partitionhandling/AvailabilityException;
      21: athrow
      22: return
}
