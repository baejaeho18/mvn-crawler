Compiled from "IteratorAsSpliterator.java"
public class org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder<T> implements java.util.function.Supplier<org.infinispan.stream.impl.spliterators.IteratorAsSpliterator<T>> {
  private final org.infinispan.commons.util.CloseableIterator<? extends T> iterator;

  private int characteristics;

  private int batchIncrease;

  private int maxBatchSize;

  private long estimateRemaining;

  public org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        1024
       8: putfield      #3                  // Field batchIncrease:I
      11: aload_0
      12: ldc           #7                  // int 51200
      14: putfield      #2                  // Field maxBatchSize:I
      17: aload_0
      18: ldc2_w        #9                  // long 9223372036854775807l
      21: putfield      #1                  // Field estimateRemaining:J
      24: aload_1
      25: invokestatic  #11                 // Method java/util/Objects.nonNull:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: aload_1
      31: invokestatic  #12                 // Method org/infinispan/commons/util/Closeables.iterator:(Ljava/util/Iterator;)Lorg/infinispan/commons/util/CloseableIterator;
      34: putfield      #5                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      37: return

  public org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder(org.infinispan.commons.util.CloseableIterator<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        1024
       8: putfield      #3                  // Field batchIncrease:I
      11: aload_0
      12: ldc           #7                  // int 51200
      14: putfield      #2                  // Field maxBatchSize:I
      17: aload_0
      18: ldc2_w        #9                  // long 9223372036854775807l
      21: putfield      #1                  // Field estimateRemaining:J
      24: aload_1
      25: invokestatic  #11                 // Method java/util/Objects.nonNull:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: aload_1
      31: putfield      #5                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
      34: return

  public org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder<T> setCharacteristics(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field characteristics:I
       5: aload_0
       6: areturn

  public org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder<T> setBatchIncrease(int);
    Code:
       0: iload_1
       1: ifgt          36
       4: new           #13                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #14                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #16                 // String The batchIncrease
      17: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #19                 // String  must be greater than 0
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #3                  // Field batchIncrease:I
      41: aload_0
      42: areturn

  public org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder setMaxBatchSize(int);
    Code:
       0: iload_1
       1: ifgt          36
       4: new           #13                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #14                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #22                 // String The maxBatchSize
      17: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #19                 // String  must be greater than 0
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #2                  // Field maxBatchSize:I
      41: aload_0
      42: areturn

  public org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder<T> setEstimateRemaining(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #1                  // Field estimateRemaining:J
       5: aload_0
       6: areturn

  public org.infinispan.stream.impl.spliterators.IteratorAsSpliterator<T> get();
    Code:
       0: aload_0
       1: getfield      #5                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
       4: ifnonnull     17
       7: new           #13                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #23                 // String Iterator cannot be null
      13: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field batchIncrease:I
      21: aload_0
      22: getfield      #2                  // Field maxBatchSize:I
      25: if_icmple     70
      28: new           #13                 // class java/lang/IllegalArgumentException
      31: dup
      32: new           #14                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #24                 // String Max batch size
      41: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #2                  // Field maxBatchSize:I
      48: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: ldc           #25                 // String  cannot be larger than batchIncrease
      53: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #3                  // Field batchIncrease:I
      60: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: new           #26                 // class org/infinispan/stream/impl/spliterators/IteratorAsSpliterator
      73: dup
      74: aload_0
      75: aconst_null
      76: invokespecial #27                 // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator."<init>":(Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$1;)V
      79: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator;
       4: areturn

  static org.infinispan.commons.util.CloseableIterator access$100(org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field iterator:Lorg/infinispan/commons/util/CloseableIterator;
       4: areturn

  static int access$200(org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field characteristics:I
       4: ireturn

  static int access$300(org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field batchIncrease:I
       4: ireturn

  static int access$400(org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxBatchSize:I
       4: ireturn

  static long access$500(org.infinispan.stream.impl.spliterators.IteratorAsSpliterator$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field estimateRemaining:J
       4: lreturn
}
