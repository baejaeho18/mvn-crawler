Compiled from "ExecutorAllCompletionService.java"
public class org.infinispan.executors.ExecutorAllCompletionService implements java.util.concurrent.CompletionService<java.lang.Void> {
  private java.util.concurrent.ExecutorCompletionService executorService;

  private java.util.concurrent.atomic.AtomicReference<java.util.concurrent.ExecutionException> firstException;

  private java.util.concurrent.atomic.AtomicLong scheduled;

  private java.util.concurrent.atomic.AtomicLong completed;

  public org.infinispan.executors.ExecutorAllCompletionService(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field firstException:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #7                  // Field scheduled:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      30: dup
      31: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      34: putfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: new           #9                  // class java/util/concurrent/ExecutorCompletionService
      41: dup
      42: aload_1
      43: invokespecial #10                 // Method java/util/concurrent/ExecutorCompletionService."<init>":(Ljava/util/concurrent/Executor;)V
      46: putfield      #11                 // Field executorService:Ljava/util/concurrent/ExecutorCompletionService;
      49: return

  public java.util.concurrent.Future<java.lang.Void> submit(java.util.concurrent.Callable<java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduled:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #11                 // Field executorService:Ljava/util/concurrent/ExecutorCompletionService;
      12: aload_1
      13: invokevirtual #13                 // Method java/util/concurrent/ExecutorCompletionService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      16: astore_2
      17: aload_0
      18: invokespecial #14                 // Method pollUntilEmpty:()V
      21: aload_2
      22: areturn

  public java.util.concurrent.Future<java.lang.Void> submit(java.lang.Runnable, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduled:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #11                 // Field executorService:Ljava/util/concurrent/ExecutorCompletionService;
      12: aload_1
      13: aload_2
      14: invokevirtual #15                 // Method java/util/concurrent/ExecutorCompletionService.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      17: astore_3
      18: aload_0
      19: invokespecial #14                 // Method pollUntilEmpty:()V
      22: aload_3
      23: areturn

  private void pollUntilEmpty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executorService:Ljava/util/concurrent/ExecutorCompletionService;
       4: invokevirtual #16                 // Method java/util/concurrent/ExecutorCompletionService.poll:()Ljava/util/concurrent/Future;
       7: dup
       8: astore_1
       9: ifnull        94
      12: aload_1
      13: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      18: pop
      19: aload_0
      20: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      23: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      26: pop2
      27: goto          91
      30: astore_2
      31: invokestatic  #19                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      34: invokevirtual #20                 // Method java/lang/Thread.interrupt:()V
      37: aload_0
      38: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      41: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      44: pop2
      45: goto          91
      48: astore_2
      49: aload_0
      50: getfield      #4                  // Field firstException:Ljava/util/concurrent/atomic/AtomicReference;
      53: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      56: ifnonnull     69
      59: aload_0
      60: getfield      #4                  // Field firstException:Ljava/util/concurrent/atomic/AtomicReference;
      63: aconst_null
      64: aload_2
      65: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      68: pop
      69: aload_0
      70: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      73: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      76: pop2
      77: goto          91
      80: astore_3
      81: aload_0
      82: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      85: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      88: pop2
      89: aload_3
      90: athrow
      91: goto          0
      94: return
    Exception table:
       from    to  target type
          12    19    30   Class java/lang/InterruptedException
          12    19    48   Class java/util/concurrent/ExecutionException
          12    19    80   any
          30    37    80   any
          48    69    80   any

  public boolean isAllCompleted();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method pollUntilEmpty:()V
       4: aload_0
       5: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      11: aload_0
      12: getfield      #7                  // Field scheduled:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      18: lcmp
      19: iflt          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public long getScheduledTasks();
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduled:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getCompletedTasks();
    Code:
       0: aload_0
       1: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void waitUntilAllCompleted();
    Code:
       0: aload_0
       1: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: aload_0
       8: getfield      #7                  // Field scheduled:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      14: lcmp
      15: ifge          75
      18: aload_0
      19: ldc2_w        #25                 // long 100l
      22: getstatic     #27                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      25: invokevirtual #28                 // Method poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      28: astore_1
      29: aload_1
      30: ifnull        40
      33: aload_1
      34: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      39: pop
      40: goto          0
      43: astore_1
      44: invokestatic  #19                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      47: invokevirtual #20                 // Method java/lang/Thread.interrupt:()V
      50: return
      51: astore_1
      52: aload_0
      53: getfield      #4                  // Field firstException:Ljava/util/concurrent/atomic/AtomicReference;
      56: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      59: ifnonnull     72
      62: aload_0
      63: getfield      #4                  // Field firstException:Ljava/util/concurrent/atomic/AtomicReference;
      66: aconst_null
      67: aload_1
      68: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      71: pop
      72: goto          0
      75: return
    Exception table:
       from    to  target type
          18    40    43   Class java/lang/InterruptedException
          18    40    51   Class java/util/concurrent/ExecutionException

  public boolean isExceptionThrown();
    Code:
       0: aload_0
       1: getfield      #4                  // Field firstException:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.util.concurrent.ExecutionException getFirstException();
    Code:
       0: aload_0
       1: getfield      #4                  // Field firstException:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #21                 // class java/util/concurrent/ExecutionException
      10: areturn

  public java.util.concurrent.Future<java.lang.Void> take() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field executorService:Ljava/util/concurrent/ExecutorCompletionService;
       4: invokevirtual #29                 // Method java/util/concurrent/ExecutorCompletionService.take:()Ljava/util/concurrent/Future;
       7: astore_1
       8: aload_0
       9: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      15: pop2
      16: aload_1
      17: areturn

  public java.util.concurrent.Future<java.lang.Void> poll();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executorService:Ljava/util/concurrent/ExecutorCompletionService;
       4: invokevirtual #16                 // Method java/util/concurrent/ExecutorCompletionService.poll:()Ljava/util/concurrent/Future;
       7: astore_1
       8: aload_1
       9: ifnull        20
      12: aload_0
      13: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      16: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      19: pop2
      20: aload_1
      21: areturn

  public java.util.concurrent.Future<java.lang.Void> poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field executorService:Ljava/util/concurrent/ExecutorCompletionService;
       4: lload_1
       5: aload_3
       6: invokevirtual #30                 // Method java/util/concurrent/ExecutorCompletionService.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
       9: astore        4
      11: aload         4
      13: ifnull        24
      16: aload_0
      17: getfield      #8                  // Field completed:Ljava/util/concurrent/atomic/AtomicLong;
      20: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      23: pop2
      24: aload         4
      26: areturn

  public java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #31                 // class java/lang/Void
       6: invokevirtual #32                 // Method submit:(Ljava/lang/Runnable;Ljava/lang/Void;)Ljava/util/concurrent/Future;
       9: areturn
}
