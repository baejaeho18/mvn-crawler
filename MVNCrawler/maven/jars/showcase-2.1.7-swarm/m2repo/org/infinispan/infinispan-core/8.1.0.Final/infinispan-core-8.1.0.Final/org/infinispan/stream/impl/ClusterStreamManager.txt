Compiled from "ClusterStreamManager.java"
public interface org.infinispan.stream.impl.ClusterStreamManager<K> {
  public abstract <R> java.util.UUID remoteStreamOperation(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.TerminalOperation<R>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<R>, java.util.function.Predicate<? super R>);

  public abstract <R> java.util.UUID remoteStreamOperationRehashAware(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.TerminalOperation<R>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<R>, java.util.function.Predicate<? super R>);

  public abstract <R> java.util.UUID remoteStreamOperation(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.KeyTrackingTerminalOperation<K, R, ?>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<java.util.Collection<R>>);

  public abstract <R2> java.util.UUID remoteStreamOperationRehashAware(boolean, boolean, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>, java.util.Set<K>, java.util.Map<java.lang.Integer, java.util.Set<K>>, boolean, org.infinispan.stream.impl.KeyTrackingTerminalOperation<K, ?, R2>, org.infinispan.stream.impl.ClusterStreamManager$ResultsCallback<java.util.Map<K, R2>>);

  public abstract boolean isComplete(java.util.UUID);

  public abstract boolean awaitCompletion(java.util.UUID, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

  public abstract void forgetOperation(java.util.UUID);

  public abstract <R1> boolean receiveResponse(java.util.UUID, org.infinispan.remoting.transport.Address, boolean, java.util.Set<java.lang.Integer>, R1);
}
