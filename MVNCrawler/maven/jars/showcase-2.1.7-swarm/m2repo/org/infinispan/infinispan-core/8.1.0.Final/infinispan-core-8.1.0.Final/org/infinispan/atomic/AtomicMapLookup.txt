Compiled from "AtomicMapLookup.java"
public class org.infinispan.atomic.AtomicMapLookup {
  public org.infinispan.atomic.AtomicMapLookup();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <MK, K, V> org.infinispan.atomic.AtomicMap<K, V> getAtomicMap(org.infinispan.Cache<MK, ?>, MK);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #2                  // Method getAtomicMap:(Lorg/infinispan/Cache;Ljava/lang/Object;Z)Lorg/infinispan/atomic/AtomicMap;
       6: areturn

  public static <MK, K, V> org.infinispan.atomic.FineGrainedAtomicMap<K, V> getFineGrainedAtomicMap(org.infinispan.Cache<MK, ?>, MK);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #3                  // Method getFineGrainedAtomicMap:(Lorg/infinispan/Cache;Ljava/lang/Object;Z)Lorg/infinispan/atomic/FineGrainedAtomicMap;
       6: areturn

  public static <MK, K, V> org.infinispan.atomic.AtomicMap<K, V> getAtomicMap(org.infinispan.Cache<MK, ?>, MK, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokestatic  #4                  // Method getMap:(Lorg/infinispan/Cache;Ljava/lang/Object;ZZ)Ljava/util/Map;
       7: checkcast     #5                  // class org/infinispan/atomic/AtomicMap
      10: areturn

  public static <MK, K, V> org.infinispan.atomic.FineGrainedAtomicMap<K, V> getFineGrainedAtomicMap(org.infinispan.Cache<MK, ?>, MK, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokestatic  #4                  // Method getMap:(Lorg/infinispan/Cache;Ljava/lang/Object;ZZ)Ljava/util/Map;
       7: checkcast     #6                  // class org/infinispan/atomic/FineGrainedAtomicMap
      10: areturn

  private static <MK, K, V> java.util.Map<K, V> getMap(org.infinispan.Cache<MK, ?>, MK, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod org/infinispan/Cache.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        4
       9: aload         4
      11: ifnonnull     30
      14: iload_2
      15: ifeq          28
      18: aload_0
      19: aload_1
      20: invokestatic  #8                  // Method org/infinispan/atomic/impl/AtomicHashMap.newInstance:(Lorg/infinispan/Cache;Ljava/lang/Object;)Lorg/infinispan/atomic/impl/AtomicHashMap;
      23: astore        4
      25: goto          30
      28: aconst_null
      29: areturn
      30: aload         4
      32: checkcast     #9                  // class org/infinispan/atomic/impl/AtomicHashMap
      35: astore        5
      37: aload         5
      39: aload_0
      40: invokeinterface #10,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      45: aload_1
      46: iload_3
      47: invokevirtual #11                 // Method org/infinispan/atomic/impl/AtomicHashMap.getProxy:(Lorg/infinispan/AdvancedCache;Ljava/lang/Object;Z)Lorg/infinispan/atomic/impl/AtomicHashMapProxy;
      50: astore        6
      52: aload         6
      54: instanceof    #12                 // class org/infinispan/atomic/impl/FineGrainedAtomicHashMapProxy
      57: iload_3
      58: if_icmpeq     65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: istore        7
      68: iload         7
      70: ifeq          120
      73: new           #13                 // class java/lang/IllegalArgumentException
      76: dup
      77: new           #14                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #16                 // String Cannot switch type of previously used
      86: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload         4
      91: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #19                 // String  from
      96: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: iload_3
     100: ifeq          108
     103: ldc           #20                 // String regular to fine-grained!
     105: goto          110
     108: ldc           #21                 // String fine-grained to regular!
     110: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     119: athrow
     120: aload         6
     122: areturn

  public static <MK, K, V> java.util.Map<K, V> getReadOnlyAtomicMap(org.infinispan.Cache<MK, ?>, MK);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #2                  // Method getAtomicMap:(Lorg/infinispan/Cache;Ljava/lang/Object;Z)Lorg/infinispan/atomic/AtomicMap;
       6: astore_2
       7: aload_2
       8: ifnonnull     15
      11: invokestatic  #24                 // Method org/infinispan/commons/util/InfinispanCollections.emptyMap:()Ljava/util/Map;
      14: areturn
      15: aload_2
      16: invokestatic  #25                 // Method org/infinispan/commons/util/Immutables.immutableMapWrap:(Ljava/util/Map;)Ljava/util/Map;
      19: areturn

  public static <MK> void removeAtomicMap(org.infinispan.Cache<MK, ?>, MK);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       6: iconst_1
       7: anewarray     #26                 // class org/infinispan/context/Flag
      10: dup
      11: iconst_0
      12: getstatic     #27                 // Field org/infinispan/context/Flag.IGNORE_RETURN_VALUES:Lorg/infinispan/context/Flag;
      15: aastore
      16: invokeinterface #28,  2           // InterfaceMethod org/infinispan/AdvancedCache.withFlags:([Lorg/infinispan/context/Flag;)Lorg/infinispan/AdvancedCache;
      21: aload_1
      22: invokeinterface #29,  2           // InterfaceMethod org/infinispan/AdvancedCache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return
}
