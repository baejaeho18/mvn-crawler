Compiled from "L1LastChanceInterceptor.java"
public class org.infinispan.interceptors.distribution.L1LastChanceInterceptor extends org.infinispan.interceptors.base.BaseRpcInterceptor {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private org.infinispan.distribution.L1Manager l1Manager;

  private org.infinispan.interceptors.locking.ClusteringDependentLogic cdl;

  private org.infinispan.configuration.cache.Configuration configuration;

  private boolean nonTransactional;

  public org.infinispan.interceptors.distribution.L1LastChanceInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/interceptors/base/BaseRpcInterceptor."<init>":()V
       4: return

  public void init(org.infinispan.distribution.L1Manager, org.infinispan.interceptors.locking.ClusteringDependentLogic, org.infinispan.configuration.cache.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field l1Manager:Lorg/infinispan/distribution/L1Manager;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field cdl:Lorg/infinispan/interceptors/locking/ClusteringDependentLogic;
      10: aload_0
      11: aload_3
      12: putfield      #4                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      15: return

  public void start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
       5: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.transaction:()Lorg/infinispan/configuration/cache/TransactionConfiguration;
       8: invokevirtual #6                  // Method org/infinispan/configuration/cache/TransactionConfiguration.transactionMode:()Lorg/infinispan/transaction/TransactionMode;
      11: getstatic     #7                  // Field org/infinispan/transaction/TransactionMode.NON_TRANSACTIONAL:Lorg/infinispan/transaction/TransactionMode;
      14: if_acmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: putfield      #8                  // Field nonTransactional:Z
      25: return

  public java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #9                  // Method visitDataWriteCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/DataWriteCommand;Z)Ljava/lang/Object;
       7: areturn

  public java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.ReplaceCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #9                  // Method visitDataWriteCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/DataWriteCommand;Z)Ljava/lang/Object;
       7: areturn

  public java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.RemoveCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #9                  // Method visitDataWriteCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/DataWriteCommand;Z)Ljava/lang/Object;
       7: areturn

  public java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.DataWriteCommand, boolean) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: astore        4
       8: aload_0
       9: aload_2
      10: invokespecial #11                 // Method shouldUpdateOnWriteCommand:(Lorg/infinispan/commands/write/WriteCommand;)Z
      13: ifeq          87
      16: aload_2
      17: invokeinterface #12,  1           // InterfaceMethod org/infinispan/commands/write/DataWriteCommand.isSuccessful:()Z
      22: ifeq          87
      25: aload_0
      26: getfield      #3                  // Field cdl:Lorg/infinispan/interceptors/locking/ClusteringDependentLogic;
      29: aload_2
      30: invokeinterface #13,  1           // InterfaceMethod org/infinispan/commands/write/DataWriteCommand.getKey:()Ljava/lang/Object;
      35: dup
      36: astore        5
      38: invokeinterface #14,  2           // InterfaceMethod org/infinispan/interceptors/locking/ClusteringDependentLogic.localNodeIsOwner:(Ljava/lang/Object;)Z
      43: ifeq          87
      46: getstatic     #15                 // Field trace:Z
      49: ifeq          62
      52: getstatic     #16                 // Field log:Lorg/infinispan/util/logging/Log;
      55: ldc           #17                 // String Sending additional invalidation for requestors if necessary.
      57: invokeinterface #18,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
      62: aload_0
      63: aload_0
      64: getfield      #2                  // Field l1Manager:Lorg/infinispan/distribution/L1Manager;
      67: aload         5
      69: invokestatic  #19                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      72: aload_1
      73: invokeinterface #20,  1           // InterfaceMethod org/infinispan/context/InvocationContext.getOrigin:()Lorg/infinispan/remoting/transport/Address;
      78: iload_3
      79: invokeinterface #21,  4           // InterfaceMethod org/infinispan/distribution/L1Manager.flushCache:(Ljava/util/Collection;Lorg/infinispan/remoting/transport/Address;Z)Ljava/util/concurrent/Future;
      84: invokespecial #22                 // Method blockOnL1FutureIfNeeded:(Ljava/util/concurrent/Future;)V
      87: aload         4
      89: areturn

  public java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutMapCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: aload_2
       9: invokespecial #11                 // Method shouldUpdateOnWriteCommand:(Lorg/infinispan/commands/write/WriteCommand;)Z
      12: ifeq          145
      15: aload_2
      16: invokevirtual #23                 // Method org/infinispan/commands/write/PutMapCommand.getMap:()Ljava/util/Map;
      19: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      24: astore        4
      26: new           #25                 // class java/util/HashSet
      29: dup
      30: aload         4
      32: invokeinterface #26,  1           // InterfaceMethod java/util/Set.size:()I
      37: invokespecial #27                 // Method java/util/HashSet."<init>":(I)V
      40: astore        5
      42: aload         4
      44: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      49: astore        6
      51: aload         6
      53: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          97
      61: aload         6
      63: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: astore        7
      70: aload_0
      71: getfield      #3                  // Field cdl:Lorg/infinispan/interceptors/locking/ClusteringDependentLogic;
      74: aload         7
      76: invokeinterface #14,  2           // InterfaceMethod org/infinispan/interceptors/locking/ClusteringDependentLogic.localNodeIsOwner:(Ljava/lang/Object;)Z
      81: ifeq          94
      84: aload         5
      86: aload         7
      88: invokeinterface #31,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      93: pop
      94: goto          51
      97: aload         5
      99: invokeinterface #32,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     104: ifne          145
     107: getstatic     #15                 // Field trace:Z
     110: ifeq          123
     113: getstatic     #16                 // Field log:Lorg/infinispan/util/logging/Log;
     116: ldc           #17                 // String Sending additional invalidation for requestors if necessary.
     118: invokeinterface #18,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
     123: aload_0
     124: aload_0
     125: getfield      #2                  // Field l1Manager:Lorg/infinispan/distribution/L1Manager;
     128: aload         5
     130: aload_1
     131: invokeinterface #20,  1           // InterfaceMethod org/infinispan/context/InvocationContext.getOrigin:()Lorg/infinispan/remoting/transport/Address;
     136: iconst_1
     137: invokeinterface #21,  4           // InterfaceMethod org/infinispan/distribution/L1Manager.flushCache:(Ljava/util/Collection;Lorg/infinispan/remoting/transport/Address;Z)Ljava/util/concurrent/Future;
     142: invokespecial #22                 // Method blockOnL1FutureIfNeeded:(Ljava/util/concurrent/Future;)V
     145: aload_3
     146: areturn

  private boolean shouldUpdateOnWriteCommand(org.infinispan.commands.write.WriteCommand);
    Code:
       0: aload_0
       1: getfield      #8                  // Field nonTransactional:Z
       4: ifeq          23
       7: aload_1
       8: getstatic     #33                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
      11: invokeinterface #34,  2           // InterfaceMethod org/infinispan/commands/write/WriteCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.PrepareCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: astore_3
       7: aload_2
       8: invokevirtual #35                 // Method org/infinispan/commands/tx/PrepareCommand.isOnePhaseCommit:()Z
      11: ifeq          23
      14: aload_0
      15: aload_0
      16: aload_1
      17: invokespecial #36                 // Method handleLastChanceL1InvalidationOnCommit:(Lorg/infinispan/context/impl/TxInvocationContext;)Ljava/util/concurrent/Future;
      20: invokespecial #37                 // Method blockOnL1FutureIfNeededTx:(Ljava/util/concurrent/Future;)V
      23: aload_3
      24: areturn

  public java.lang.Object visitCommitCommand(org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.CommitCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: aload_0
       9: aload_1
      10: invokespecial #36                 // Method handleLastChanceL1InvalidationOnCommit:(Lorg/infinispan/context/impl/TxInvocationContext;)Ljava/util/concurrent/Future;
      13: invokespecial #37                 // Method blockOnL1FutureIfNeededTx:(Ljava/util/concurrent/Future;)V
      16: aload_3
      17: areturn

  private java.util.concurrent.Future<?> handleLastChanceL1InvalidationOnCommit(org.infinispan.context.impl.TxInvocationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method shouldFlushL1:(Lorg/infinispan/context/impl/TxInvocationContext;)Z
       5: ifeq          51
       8: getstatic     #15                 // Field trace:Z
      11: ifeq          28
      14: getstatic     #16                 // Field log:Lorg/infinispan/util/logging/Log;
      17: ldc           #17                 // String Sending additional invalidation for requestors if necessary.
      19: iconst_0
      20: anewarray     #39                 // class java/lang/Object
      23: invokeinterface #40,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #2                  // Field l1Manager:Lorg/infinispan/distribution/L1Manager;
      32: aload_1
      33: invokeinterface #41,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getAffectedKeys:()Ljava/util/Set;
      38: aload_1
      39: invokeinterface #42,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getOrigin:()Lorg/infinispan/remoting/transport/Address;
      44: iconst_1
      45: invokeinterface #21,  4           // InterfaceMethod org/infinispan/distribution/L1Manager.flushCache:(Ljava/util/Collection;Lorg/infinispan/remoting/transport/Address;Z)Ljava/util/concurrent/Future;
      50: areturn
      51: aconst_null
      52: areturn

  private boolean shouldFlushL1(org.infinispan.context.impl.TxInvocationContext);
    Code:
       0: aload_1
       1: invokeinterface #41,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getAffectedKeys:()Ljava/util/Set;
       6: invokeinterface #32,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void blockOnL1FutureIfNeededTx(java.util.concurrent.Future<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.transaction:()Lorg/infinispan/configuration/cache/TransactionConfiguration;
       7: invokevirtual #43                 // Method org/infinispan/configuration/cache/TransactionConfiguration.syncCommitPhase:()Z
      10: ifeq          18
      13: aload_0
      14: aload_1
      15: invokespecial #22                 // Method blockOnL1FutureIfNeeded:(Ljava/util/concurrent/Future;)V
      18: return

  private void blockOnL1FutureIfNeeded(java.util.concurrent.Future<?>);
    Code:
       0: aload_1
       1: ifnull        49
       4: aload_1
       5: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      10: pop
      11: goto          49
      14: astore_2
      15: aload_0
      16: invokevirtual #46                 // Method getLog:()Lorg/infinispan/util/logging/Log;
      19: aload_2
      20: invokeinterface #47,  2           // InterfaceMethod org/infinispan/util/logging/Log.failedInvalidatingRemoteCache:(Ljava/lang/Exception;)V
      25: goto          49
      28: astore_2
      29: aload_2
      30: invokevirtual #49                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      33: instanceof    #50                 // class org/infinispan/remoting/transport/jgroups/SuspectException
      36: ifne          49
      39: aload_0
      40: invokevirtual #46                 // Method getLog:()Lorg/infinispan/util/logging/Log;
      43: aload_2
      44: invokeinterface #47,  2           // InterfaceMethod org/infinispan/util/logging/Log.failedInvalidatingRemoteCache:(Ljava/lang/Exception;)V
      49: return
    Exception table:
       from    to  target type
           4    11    14   Class java/lang/InterruptedException
           4    11    28   Class java/util/concurrent/ExecutionException

  static {};
    Code:
       0: ldc           #51                 // class org/infinispan/interceptors/distribution/L1NonTxInterceptor
       2: invokestatic  #52                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #16                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #16                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #53,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #15                 // Field trace:Z
      19: return
}
