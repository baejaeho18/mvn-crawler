Compiled from "PreferConsistencyStrategy.java"
public class org.infinispan.partitionhandling.impl.PreferConsistencyStrategy implements org.infinispan.partitionhandling.impl.AvailabilityStrategy {
  private static final org.infinispan.util.logging.Log log;

  public org.infinispan.partitionhandling.impl.PreferConsistencyStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void onJoin(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
       6: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
       9: if_acmpeq     36
      12: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      15: ldc           #5                  // String Cache %s not available (%s), postponing rebalance for joiner %s
      17: aload_1
      18: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      23: aload_1
      24: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
      29: aload_2
      30: invokeinterface #7,  5            // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      35: return
      36: aload_1
      37: aload_1
      38: invokeinterface #8,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
      43: invokeinterface #9,  2            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.queueRebalance:(Ljava/util/List;)V
      48: return

  public void onGracefulLeave(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
       6: astore_3
       7: new           #11                 // class java/util/ArrayList
      10: dup
      11: aload_3
      12: invokevirtual #12                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      15: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore        4
      20: aload         4
      22: aload_2
      23: invokeinterface #14,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      28: pop
      29: aload         4
      31: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      36: ifeq          64
      39: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      42: ldc           #16                 // String The last node of cache %s left
      44: aload_1
      45: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      50: invokeinterface #17,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      55: aload_1
      56: aload         4
      58: invokeinterface #18,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateCurrentTopology:(Ljava/util/List;)V
      63: return
      64: aload_1
      65: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
      70: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
      73: if_acmpeq     94
      76: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      79: ldc           #19                 // String Cache %s is not available, ignoring graceful leaver %s
      81: aload_1
      82: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      87: aload_2
      88: invokeinterface #20,  4           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      93: return
      94: aload_0
      95: aload_1
      96: invokeinterface #21,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
     101: invokevirtual #22                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
     104: aload         4
     106: invokespecial #23                 // Method isDataLost:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)Z
     109: ifeq          140
     112: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     115: aload_1
     116: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     121: aload_2
     122: invokeinterface #24,  3           // InterfaceMethod org/infinispan/util/logging/Log.enteringDegradedModeGracefulLeaver:(Ljava/lang/String;Lorg/infinispan/remoting/transport/Address;)V
     127: aload_1
     128: aload         4
     130: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     133: iconst_1
     134: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
     139: return
     140: aload_0
     141: aload_1
     142: aload         4
     144: aload         4
     146: invokespecial #27                 // Method updateMembersAndRebalance:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Ljava/util/List;Ljava/util/List;)V
     149: return

  public void onClusterViewChange(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
       6: astore_3
       7: new           #11                 // class java/util/ArrayList
      10: dup
      11: aload_3
      12: invokevirtual #12                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      15: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore        4
      20: aload         4
      22: aload_2
      23: invokeinterface #28,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
      28: ifne          48
      31: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      34: ldc           #29                 // String Cache %s did not lose any members, ignoring view change
      36: aload_1
      37: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      42: invokeinterface #17,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      47: return
      48: aload_1
      49: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
      54: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
      57: if_acmpeq     92
      60: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      63: ldc           #30                 // String Cache %s is not available, updating the actual members only
      65: aload_1
      66: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      71: invokeinterface #17,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      76: aload_1
      77: aload         4
      79: aload_1
      80: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
      85: iconst_0
      86: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
      91: return
      92: aload_1
      93: invokeinterface #21,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
      98: astore        5
     100: aload         5
     102: invokevirtual #12                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
     105: astore        6
     107: new           #11                 // class java/util/ArrayList
     110: dup
     111: aload         6
     113: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     116: astore        7
     118: aload         7
     120: aload         4
     122: invokeinterface #31,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
     127: pop
     128: aload_0
     129: aload         5
     131: invokevirtual #22                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
     134: aload         4
     136: invokespecial #23                 // Method isDataLost:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)Z
     139: ifeq          171
     142: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     145: aload_1
     146: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     151: aload         7
     153: invokeinterface #32,  3           // InterfaceMethod org/infinispan/util/logging/Log.enteringDegradedModeLostData:(Ljava/lang/String;Ljava/util/Collection;)V
     158: aload_1
     159: aload         4
     161: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     164: iconst_1
     165: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
     170: return
     171: aload_0
     172: aload         6
     174: aload         7
     176: invokevirtual #33                 // Method isMinorityPartition:(Ljava/util/List;Ljava/util/List;)Z
     179: ifeq          215
     182: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     185: aload_1
     186: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     191: aload         4
     193: aload         7
     195: aload         6
     197: invokeinterface #34,  5           // InterfaceMethod org/infinispan/util/logging/Log.enteringDegradedModeMinorityPartition:(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V
     202: aload_1
     203: aload         4
     205: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     208: iconst_1
     209: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
     214: return
     215: aload_0
     216: aload_1
     217: aload         4
     219: aload         4
     221: invokespecial #27                 // Method updateMembersAndRebalance:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Ljava/util/List;Ljava/util/List;)V
     224: return

  protected boolean isMinorityPartition(java.util.List<org.infinispan.remoting.transport.Address>, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_2
       1: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
       6: i2d
       7: aload_1
       8: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      13: i2d
      14: ldc2_w        #36                 // double 2.0d
      17: ddiv
      18: invokestatic  #38                 // Method java/lang/Math.ceil:(D)D
      21: dcmpl
      22: iflt          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public void onPartitionMerge(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, java.util.Collection<org.infinispan.topology.CacheStatusResponse>);
    Code:
       0: iconst_0
       1: istore_3
       2: aconst_null
       3: astore        4
       5: aconst_null
       6: astore        5
       8: new           #39                 // class java/util/HashSet
      11: dup
      12: invokespecial #40                 // Method java/util/HashSet."<init>":()V
      15: astore        6
      17: aconst_null
      18: astore        7
      20: aload_2
      21: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore        8
      28: aload         8
      30: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          227
      38: aload         8
      40: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #44                 // class org/infinispan/topology/CacheStatusResponse
      48: astore        9
      50: aload         9
      52: invokevirtual #45                 // Method org/infinispan/topology/CacheStatusResponse.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
      55: astore        10
      57: aload         10
      59: ifnonnull     65
      62: goto          28
      65: aload         4
      67: ifnull        83
      70: aload         4
      72: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      75: aload         10
      77: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      80: if_icmpge     87
      83: aload         10
      85: astore        4
      87: aload         9
      89: invokevirtual #47                 // Method org/infinispan/topology/CacheStatusResponse.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
      92: astore        11
      94: aload         11
      96: ifnonnull     102
      99: goto          28
     102: aload         11
     104: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     107: iload_3
     108: if_icmple     117
     111: aload         11
     113: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     116: istore_3
     117: aload         9
     119: invokevirtual #48                 // Method org/infinispan/topology/CacheStatusResponse.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
     122: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     125: if_acmpne     153
     128: aload         5
     130: ifnull        146
     133: aload         5
     135: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     138: aload         11
     140: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     143: if_icmpge     224
     146: aload         11
     148: astore        5
     150: goto          224
     153: aload         9
     155: invokevirtual #48                 // Method org/infinispan/topology/CacheStatusResponse.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
     158: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     161: if_acmpne     199
     164: aload         6
     166: aload         11
     168: invokeinterface #49,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     173: pop
     174: aload         7
     176: ifnull        192
     179: aload         7
     181: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     184: aload         11
     186: invokevirtual #46                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     189: if_icmpge     224
     192: aload         11
     194: astore        7
     196: goto          224
     199: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     202: aload_1
     203: invokeinterface #2,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
     208: aload_1
     209: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     214: aload         9
     216: invokevirtual #47                 // Method org/infinispan/topology/CacheStatusResponse.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     219: invokeinterface #50,  4           // InterfaceMethod org/infinispan/util/logging/Log.unexpectedAvailabilityMode:(Lorg/infinispan/partitionhandling/AvailabilityMode;Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;)V
     224: goto          28
     227: aload         4
     229: ifnull        244
     232: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     235: ldc           #51                 // String Max stable partition topology: %s
     237: aload         4
     239: invokeinterface #52,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     244: aload         5
     246: ifnull        261
     249: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     252: ldc           #53                 // String Max active partition topology: %s
     254: aload         5
     256: invokeinterface #52,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     261: aload         7
     263: ifnull        280
     266: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     269: ldc           #54                 // String Max degraded partition topology: %s, all degraded: %s
     271: aload         7
     273: aload         6
     275: invokeinterface #55,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     280: new           #11                 // class java/util/ArrayList
     283: dup
     284: aload_1
     285: invokeinterface #8,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
     290: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     293: astore        8
     295: aload         5
     297: ifnull        339
     300: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     303: ldc           #56                 // String One of the partitions is available, using that partition\'s topology
     305: iconst_0
     306: anewarray     #57                 // class java/lang/Object
     309: invokeinterface #58,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;[Ljava/lang/Object;)V
     314: aload         5
     316: astore        9
     318: aload         8
     320: aload         9
     322: invokevirtual #12                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
     325: invokeinterface #28,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
     330: pop
     331: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     334: astore        10
     336: goto          415
     339: aload         6
     341: invokeinterface #59,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     346: ifne          388
     349: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     352: ldc           #60                 // String No active partitions, so all the partitions must be in degraded mode.
     354: iconst_0
     355: anewarray     #57                 // class java/lang/Object
     358: invokeinterface #58,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;[Ljava/lang/Object;)V
     363: aload         7
     365: astore        9
     367: aload         8
     369: aload         9
     371: invokevirtual #12                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
     374: invokeinterface #28,  2           // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
     379: pop
     380: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     383: astore        10
     385: goto          415
     388: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     391: ldc           #61                 // String No current topology, recovered only joiners for cache %s
     393: aload_1
     394: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     399: invokeinterface #17,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     404: aconst_null
     405: astore        9
     407: aconst_null
     408: astore        8
     410: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     413: astore        10
     415: aload         9
     417: ifnull        445
     420: new           #62                 // class org/infinispan/topology/CacheTopology
     423: dup
     424: iload_3
     425: iconst_1
     426: iadd
     427: aload         9
     429: invokevirtual #63                 // Method org/infinispan/topology/CacheTopology.getRebalanceId:()I
     432: aload         9
     434: invokevirtual #22                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
     437: aconst_null
     438: aload         8
     440: invokespecial #64                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
     443: astore        9
     445: aload_1
     446: aload         9
     448: aload         4
     450: aload         10
     452: invokeinterface #65,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateTopologiesAfterMerge:(Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;)V
     457: aload_0
     458: aload_1
     459: aload         4
     461: aload         8
     463: aload         10
     465: invokevirtual #66                 // Method computeAvailabilityAfterMerge:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Lorg/infinispan/topology/CacheTopology;Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;)Lorg/infinispan/partitionhandling/AvailabilityMode;
     468: astore        11
     470: aload         11
     472: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     475: if_acmpne     508
     478: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     481: ldc           #67                 // String After merge, cache %s is staying in degraded mode
     483: aload_1
     484: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     489: invokeinterface #17,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     494: aload_1
     495: aload         8
     497: aload         11
     499: iconst_1
     500: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
     505: goto          537
     508: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     511: ldc           #68                 // String After merge, cache %s has recovered and is entering available mode
     513: aload_1
     514: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     519: invokeinterface #17,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     524: aload_0
     525: aload_1
     526: aload         8
     528: aload_1
     529: invokeinterface #8,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
     534: invokespecial #27                 // Method updateMembersAndRebalance:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Ljava/util/List;Ljava/util/List;)V
     537: return

  protected org.infinispan.partitionhandling.AvailabilityMode computeAvailabilityAfterMerge(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, org.infinispan.topology.CacheTopology, java.util.List<org.infinispan.remoting.transport.Address>, org.infinispan.partitionhandling.AvailabilityMode);
    Code:
       0: aload_2
       1: ifnull        120
       4: aload_2
       5: invokevirtual #12                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
       8: astore        5
      10: new           #11                 // class java/util/ArrayList
      13: dup
      14: aload         5
      16: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: astore        6
      21: aload         6
      23: aload_1
      24: invokeinterface #8,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
      29: invokeinterface #31,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      34: pop
      35: aload_0
      36: aload_2
      37: invokevirtual #22                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      40: aload_3
      41: invokespecial #23                 // Method isDataLost:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)Z
      44: ifeq          70
      47: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      50: aload_1
      51: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
      56: aload_3
      57: aload         6
      59: aload         5
      61: invokeinterface #69,  5           // InterfaceMethod org/infinispan/util/logging/Log.keepingDegradedModeAfterMergeDataLost:(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V
      66: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
      69: areturn
      70: aload         6
      72: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      77: i2d
      78: aload         5
      80: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      85: i2d
      86: ldc2_w        #36                 // double 2.0d
      89: ddiv
      90: invokestatic  #38                 // Method java/lang/Math.ceil:(D)D
      93: dcmpl
      94: iflt          120
      97: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
     100: aload_1
     101: invokeinterface #6,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCacheName:()Ljava/lang/String;
     106: aload_3
     107: aload         6
     109: aload         5
     111: invokeinterface #70,  5           // InterfaceMethod org/infinispan/util/logging/Log.keepingDegradedModeAfterMergeMinorityPartition:(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V
     116: getstatic     #25                 // Field org/infinispan/partitionhandling/AvailabilityMode.DEGRADED_MODE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     119: areturn
     120: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     123: areturn

  public void onRebalanceEnd(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext);
    Code:
       0: return

  public void onManualAvailabilityChange(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, org.infinispan.partitionhandling.AvailabilityMode);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
       6: invokevirtual #71                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
       9: astore_3
      10: aload_1
      11: invokeinterface #8,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
      16: astore        4
      18: aload_2
      19: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
      22: if_acmpne     52
      25: aload_1
      26: aload_3
      27: invokeinterface #18,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateCurrentTopology:(Ljava/util/List;)V
      32: aload_1
      33: aload_3
      34: aload_2
      35: iconst_0
      36: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
      41: aload_1
      42: aload         4
      44: invokeinterface #9,  2            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.queueRebalance:(Ljava/util/List;)V
      49: goto          61
      52: aload_1
      53: aload_3
      54: aload_2
      55: iconst_1
      56: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
      61: return

  private void updateMembersAndRebalance(org.infinispan.partitionhandling.impl.AvailabilityStrategyContext, java.util.List<org.infinispan.remoting.transport.Address>, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #3                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
       5: iconst_0
       6: invokeinterface #26,  4           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateAvailabilityMode:(Ljava/util/List;Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
      11: aload_1
      12: aload_3
      13: invokeinterface #18,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.updateCurrentTopology:(Ljava/util/List;)V
      18: aload_1
      19: aload_1
      20: invokeinterface #8,  1            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.getExpectedMembers:()Ljava/util/List;
      25: invokeinterface #9,  2            // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategyContext.queueRebalance:(Ljava/util/List;)V
      30: return

  private boolean isDataLost(org.infinispan.distribution.ch.ConsistentHash, java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_1
       4: invokeinterface #72,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getNumSegments:()I
       9: if_icmpge     34
      12: aload_2
      13: aload_1
      14: iload_3
      15: invokeinterface #73,  2           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.locateOwnersForSegment:(I)Ljava/util/List;
      20: invokestatic  #74                 // Method org/infinispan/commons/util/InfinispanCollections.containsAny:(Ljava/util/Collection;Ljava/util/Collection;)Z
      23: ifne          28
      26: iconst_1
      27: ireturn
      28: iinc          3, 1
      31: goto          2
      34: iconst_0
      35: ireturn

  static {};
    Code:
       0: ldc           #75                 // class org/infinispan/partitionhandling/impl/PreferConsistencyStrategy
       2: invokestatic  #76                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
