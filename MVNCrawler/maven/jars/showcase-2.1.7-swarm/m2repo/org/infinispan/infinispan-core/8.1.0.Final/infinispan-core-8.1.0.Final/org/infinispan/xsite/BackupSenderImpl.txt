Compiled from "BackupSenderImpl.java"
public class org.infinispan.xsite.BackupSenderImpl implements org.infinispan.xsite.BackupSender {
  private static org.infinispan.util.logging.Log log;

  private static final org.infinispan.remoting.transport.BackupResponse EMPTY_RESPONSE;

  private org.infinispan.Cache cache;

  private org.infinispan.remoting.transport.Transport transport;

  private org.infinispan.configuration.cache.Configuration config;

  private org.infinispan.transaction.impl.TransactionTable txTable;

  private org.infinispan.util.TimeService timeService;

  private org.infinispan.commands.CommandsFactory commandsFactory;

  private final java.util.Map<java.lang.String, org.infinispan.xsite.CustomFailurePolicy> siteFailurePolicy;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.infinispan.xsite.OfflineStatus> offlineStatus;

  private final java.lang.String localSiteName;

  private java.lang.String cacheName;

  private org.infinispan.configuration.global.GlobalConfiguration globalConfig;

  public org.infinispan.xsite.BackupSenderImpl(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field siteFailurePolicy:Ljava/util/Map;
      15: aload_0
      16: invokestatic  #5                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      19: putfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field localSiteName:Ljava/lang/String;
      27: return

  public void init(org.infinispan.Cache, org.infinispan.remoting.transport.Transport, org.infinispan.transaction.impl.TransactionTable, org.infinispan.configuration.global.GlobalConfiguration, org.infinispan.util.TimeService, org.infinispan.commands.CommandsFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field cache:Lorg/infinispan/Cache;
       5: aload_0
       6: aload_2
       7: putfield      #9                  // Field transport:Lorg/infinispan/remoting/transport/Transport;
      10: aload_0
      11: aload_3
      12: putfield      #10                 // Field txTable:Lorg/infinispan/transaction/impl/TransactionTable;
      15: aload_0
      16: aload         4
      18: putfield      #11                 // Field globalConfig:Lorg/infinispan/configuration/global/GlobalConfiguration;
      21: aload_0
      22: aload         5
      24: putfield      #12                 // Field timeService:Lorg/infinispan/util/TimeService;
      27: aload_0
      28: aload         6
      30: putfield      #13                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      33: return

  public void start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field cache:Lorg/infinispan/Cache;
       5: invokeinterface #14,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      10: putfield      #15                 // Field config:Lorg/infinispan/configuration/cache/Configuration;
      13: aload_0
      14: aload_0
      15: getfield      #8                  // Field cache:Lorg/infinispan/Cache;
      18: invokeinterface #16,  1           // InterfaceMethod org/infinispan/Cache.getName:()Ljava/lang/String;
      23: putfield      #17                 // Field cacheName:Ljava/lang/String;
      26: aload_0
      27: getfield      #15                 // Field config:Lorg/infinispan/configuration/cache/Configuration;
      30: invokevirtual #18                 // Method org/infinispan/configuration/cache/Configuration.sites:()Lorg/infinispan/configuration/cache/SitesConfiguration;
      33: invokevirtual #19                 // Method org/infinispan/configuration/cache/SitesConfiguration.enabledBackups:()Ljava/util/List;
      36: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore_1
      42: aload_1
      43: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          167
      51: aload_1
      52: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #23                 // class org/infinispan/configuration/cache/BackupConfiguration
      60: astore_2
      61: aload_2
      62: invokevirtual #24                 // Method org/infinispan/configuration/cache/BackupConfiguration.backupFailurePolicy:()Lorg/infinispan/configuration/cache/BackupFailurePolicy;
      65: getstatic     #25                 // Field org/infinispan/configuration/cache/BackupFailurePolicy.CUSTOM:Lorg/infinispan/configuration/cache/BackupFailurePolicy;
      68: if_acmpne     133
      71: aload_2
      72: invokevirtual #26                 // Method org/infinispan/configuration/cache/BackupConfiguration.failurePolicyClass:()Ljava/lang/String;
      75: astore_3
      76: aload_3
      77: ifnonnull     90
      80: new           #27                 // class java/lang/IllegalStateException
      83: dup
      84: ldc           #28                 // String Backup policy class missing for custom failure policy!
      86: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_3
      91: aload_0
      92: getfield      #11                 // Field globalConfig:Lorg/infinispan/configuration/global/GlobalConfiguration;
      95: invokevirtual #30                 // Method org/infinispan/configuration/global/GlobalConfiguration.classLoader:()Ljava/lang/ClassLoader;
      98: invokestatic  #31                 // Method org/infinispan/commons/util/Util.getInstance:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Object;
     101: checkcast     #32                 // class org/infinispan/xsite/CustomFailurePolicy
     104: astore        4
     106: aload         4
     108: aload_0
     109: getfield      #8                  // Field cache:Lorg/infinispan/Cache;
     112: invokeinterface #33,  2           // InterfaceMethod org/infinispan/xsite/CustomFailurePolicy.init:(Lorg/infinispan/Cache;)V
     117: aload_0
     118: getfield      #4                  // Field siteFailurePolicy:Ljava/util/Map;
     121: aload_2
     122: invokevirtual #34                 // Method org/infinispan/configuration/cache/BackupConfiguration.site:()Ljava/lang/String;
     125: aload         4
     127: invokeinterface #35,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: new           #36                 // class org/infinispan/xsite/OfflineStatus
     136: dup
     137: aload_2
     138: invokevirtual #37                 // Method org/infinispan/configuration/cache/BackupConfiguration.takeOffline:()Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;
     141: aload_0
     142: getfield      #12                 // Field timeService:Lorg/infinispan/util/TimeService;
     145: invokespecial #38                 // Method org/infinispan/xsite/OfflineStatus."<init>":(Lorg/infinispan/configuration/cache/TakeOfflineConfiguration;Lorg/infinispan/util/TimeService;)V
     148: astore_3
     149: aload_0
     150: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
     153: aload_2
     154: invokevirtual #34                 // Method org/infinispan/configuration/cache/BackupConfiguration.site:()Ljava/lang/String;
     157: aload_3
     158: invokeinterface #39,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     163: pop
     164: goto          42
     167: return

  public org.infinispan.remoting.transport.BackupResponse backupPrepare(org.infinispan.commands.tx.PrepareCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method org/infinispan/commands/tx/PrepareCommand.getModifications:()[Lorg/infinispan/commands/write/WriteCommand;
       5: invokespecial #41                 // Method filterModifications:([Lorg/infinispan/commands/write/WriteCommand;)Ljava/util/List;
       8: astore_2
       9: aload_2
      10: invokeinterface #42,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      15: ifeq          22
      18: getstatic     #43                 // Field EMPTY_RESPONSE:Lorg/infinispan/remoting/transport/BackupResponse;
      21: areturn
      22: aload_0
      23: getfield      #13                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      26: aload_1
      27: invokevirtual #44                 // Method org/infinispan/commands/tx/PrepareCommand.getGlobalTransaction:()Lorg/infinispan/transaction/xa/GlobalTransaction;
      30: aload_2
      31: aload_1
      32: invokevirtual #45                 // Method org/infinispan/commands/tx/PrepareCommand.isOnePhaseCommit:()Z
      35: invokeinterface #46,  4           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildPrepareCommand:(Lorg/infinispan/transaction/xa/GlobalTransaction;Ljava/util/List;Z)Lorg/infinispan/commands/tx/PrepareCommand;
      40: astore_3
      41: aload_3
      42: invokevirtual #45                 // Method org/infinispan/commands/tx/PrepareCommand.isOnePhaseCommit:()Z
      45: ifne          54
      48: getstatic     #47                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_2PC_ONLY:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
      51: goto          57
      54: getstatic     #48                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_ALL:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
      57: astore        4
      59: aload_0
      60: aload         4
      62: invokespecial #49                 // Method calculateBackupInfo:(Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;)Ljava/util/List;
      65: astore        5
      67: aload_0
      68: aload_3
      69: aload         5
      71: invokespecial #50                 // Method backupCommand:(Lorg/infinispan/commands/VisitableCommand;Ljava/util/List;)Lorg/infinispan/remoting/transport/BackupResponse;
      74: areturn

  public void processResponses(org.infinispan.remoting.transport.BackupResponse, org.infinispan.commands.VisitableCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #51                 // Method processResponses:(Lorg/infinispan/remoting/transport/BackupResponse;Lorg/infinispan/commands/VisitableCommand;Ljavax/transaction/Transaction;)V
       7: return

  public void processResponses(org.infinispan.remoting.transport.BackupResponse, org.infinispan.commands.VisitableCommand, javax.transaction.Transaction) throws java.lang.Throwable;
    Code:
       0: getstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #53                 // String Processing backup response %s for command %s
       5: aload_1
       6: aload_2
       7: invokeinterface #54,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: aload_1
      13: invokeinterface #55,  1           // InterfaceMethod org/infinispan/remoting/transport/BackupResponse.waitForBackupToFinish:()V
      18: aload_0
      19: aload_1
      20: invokespecial #56                 // Method updateOfflineSites:(Lorg/infinispan/remoting/transport/BackupResponse;)V
      23: aload_0
      24: aload_1
      25: aload_2
      26: aload_3
      27: invokespecial #57                 // Method processFailedResponses:(Lorg/infinispan/remoting/transport/BackupResponse;Lorg/infinispan/commands/VisitableCommand;Ljavax/transaction/Transaction;)V
      30: return

  private void updateOfflineSites(org.infinispan.remoting.transport.BackupResponse);
    Code:
       0: aload_0
       1: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #58,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ifne          21
      12: aload_1
      13: invokeinterface #59,  1           // InterfaceMethod org/infinispan/remoting/transport/BackupResponse.isEmpty:()Z
      18: ifeq          22
      21: return
      22: aload_1
      23: invokeinterface #60,  1           // InterfaceMethod org/infinispan/remoting/transport/BackupResponse.getCommunicationErrors:()Ljava/util/Set;
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
      33: invokeinterface #61,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      38: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          145
      53: aload_3
      54: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #63                 // class java/util/Map$Entry
      62: astore        4
      64: aload         4
      66: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      71: checkcast     #36                 // class org/infinispan/xsite/OfflineStatus
      74: astore        5
      76: aload         5
      78: invokevirtual #65                 // Method org/infinispan/xsite/OfflineStatus.isEnabled:()Z
      81: ifne          87
      84: goto          44
      87: aload_2
      88: aload         4
      90: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      95: invokeinterface #67,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     100: ifeq          129
     103: aload         5
     105: aload_1
     106: invokeinterface #68,  1           // InterfaceMethod org/infinispan/remoting/transport/BackupResponse.getSendTimeMillis:()J
     111: invokevirtual #69                 // Method org/infinispan/xsite/OfflineStatus.updateOnCommunicationFailure:(J)V
     114: getstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
     117: ldc           #70                 // String OfflineStatus updated %s
     119: aload         5
     121: invokeinterface #71,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     126: goto          142
     129: aload         5
     131: invokevirtual #72                 // Method org/infinispan/xsite/OfflineStatus.isOffline:()Z
     134: ifne          142
     137: aload         5
     139: invokevirtual #73                 // Method org/infinispan/xsite/OfflineStatus.reset:()V
     142: goto          44
     145: return

  public org.infinispan.remoting.transport.BackupResponse backupWrite(org.infinispan.commands.write.WriteCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #48                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_ALL:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
       4: invokespecial #49                 // Method calculateBackupInfo:(Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;)Ljava/util/List;
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #50                 // Method backupCommand:(Lorg/infinispan/commands/VisitableCommand;Ljava/util/List;)Lorg/infinispan/remoting/transport/BackupResponse;
      14: areturn

  public org.infinispan.remoting.transport.BackupResponse backupCommit(org.infinispan.commands.tx.CommitCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #74                 // Method sendTo1PCBackups:(Lorg/infinispan/commands/tx/CommitCommand;)Lorg/infinispan/remoting/transport/BackupResponse;
       5: astore_2
       6: aload_0
       7: getstatic     #47                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_2PC_ONLY:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
      10: invokespecial #49                 // Method calculateBackupInfo:(Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;)Ljava/util/List;
      13: astore_3
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokespecial #50                 // Method backupCommand:(Lorg/infinispan/commands/VisitableCommand;Ljava/util/List;)Lorg/infinispan/remoting/transport/BackupResponse;
      20: astore        4
      22: new           #75                 // class org/infinispan/remoting/transport/AggregateBackupResponse
      25: dup
      26: aload_2
      27: aload         4
      29: invokespecial #76                 // Method org/infinispan/remoting/transport/AggregateBackupResponse."<init>":(Lorg/infinispan/remoting/transport/BackupResponse;Lorg/infinispan/remoting/transport/BackupResponse;)V
      32: areturn

  public org.infinispan.remoting.transport.BackupResponse backupRollback(org.infinispan.commands.tx.RollbackCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #47                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_2PC_ONLY:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
       4: invokespecial #49                 // Method calculateBackupInfo:(Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;)Ljava/util/List;
       7: astore_2
       8: getstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
      11: ldc           #77                 // String Backing up rollback command to: %s
      13: aload_2
      14: invokeinterface #71,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokespecial #50                 // Method backupCommand:(Lorg/infinispan/commands/VisitableCommand;Ljava/util/List;)Lorg/infinispan/remoting/transport/BackupResponse;
      25: areturn

  public org.infinispan.xsite.BackupSender$BringSiteOnlineResponse bringSiteOnline(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field config:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #18                 // Method org/infinispan/configuration/cache/Configuration.sites:()Lorg/infinispan/configuration/cache/SitesConfiguration;
       7: aload_1
       8: invokevirtual #78                 // Method org/infinispan/configuration/cache/SitesConfiguration.hasInUseBackup:(Ljava/lang/String;)Z
      11: ifne          27
      14: getstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
      17: aload_1
      18: invokeinterface #79,  2           // InterfaceMethod org/infinispan/util/logging/Log.tryingToBringOnlineNonexistentSite:(Ljava/lang/String;)V
      23: getstatic     #80                 // Field org/infinispan/xsite/BackupSender$BringSiteOnlineResponse.NO_SUCH_SITE:Lorg/infinispan/xsite/BackupSender$BringSiteOnlineResponse;
      26: areturn
      27: aload_0
      28: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
      31: aload_1
      32: invokeinterface #81,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #36                 // class org/infinispan/xsite/OfflineStatus
      40: astore_2
      41: aload_2
      42: invokevirtual #82                 // Method org/infinispan/xsite/OfflineStatus.bringOnline:()Z
      45: istore_3
      46: iload_3
      47: ifeq          56
      50: getstatic     #83                 // Field org/infinispan/xsite/BackupSender$BringSiteOnlineResponse.BROUGHT_ONLINE:Lorg/infinispan/xsite/BackupSender$BringSiteOnlineResponse;
      53: goto          59
      56: getstatic     #84                 // Field org/infinispan/xsite/BackupSender$BringSiteOnlineResponse.ALREADY_ONLINE:Lorg/infinispan/xsite/BackupSender$BringSiteOnlineResponse;
      59: areturn

  public org.infinispan.xsite.BackupSender$TakeSiteOfflineResponse takeSiteOffline(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field config:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #18                 // Method org/infinispan/configuration/cache/Configuration.sites:()Lorg/infinispan/configuration/cache/SitesConfiguration;
       7: aload_1
       8: invokevirtual #78                 // Method org/infinispan/configuration/cache/SitesConfiguration.hasInUseBackup:(Ljava/lang/String;)Z
      11: ifne          18
      14: getstatic     #85                 // Field org/infinispan/xsite/BackupSender$TakeSiteOfflineResponse.NO_SUCH_SITE:Lorg/infinispan/xsite/BackupSender$TakeSiteOfflineResponse;
      17: areturn
      18: aload_0
      19: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
      22: aload_1
      23: invokeinterface #81,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #36                 // class org/infinispan/xsite/OfflineStatus
      31: astore_2
      32: aload_2
      33: invokevirtual #86                 // Method org/infinispan/xsite/OfflineStatus.forceOffline:()Z
      36: ifeq          45
      39: getstatic     #87                 // Field org/infinispan/xsite/BackupSender$TakeSiteOfflineResponse.TAKEN_OFFLINE:Lorg/infinispan/xsite/BackupSender$TakeSiteOfflineResponse;
      42: goto          48
      45: getstatic     #88                 // Field org/infinispan/xsite/BackupSender$TakeSiteOfflineResponse.ALREADY_OFFLINE:Lorg/infinispan/xsite/BackupSender$TakeSiteOfflineResponse;
      48: areturn

  private org.infinispan.remoting.transport.BackupResponse backupCommand(org.infinispan.commands.VisitableCommand, java.util.List<org.infinispan.xsite.XSiteBackup>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field transport:Lorg/infinispan/remoting/transport/Transport;
       4: aload_2
       5: aload_0
       6: getfield      #13                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
       9: aload_1
      10: invokeinterface #89,  2           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildSingleXSiteRpcCommand:(Lorg/infinispan/commands/VisitableCommand;)Lorg/infinispan/xsite/SingleXSiteRpcCommand;
      15: invokeinterface #90,  3           // InterfaceMethod org/infinispan/remoting/transport/Transport.backupRemotely:(Ljava/util/Collection;Lorg/infinispan/xsite/XSiteReplicateCommand;)Lorg/infinispan/remoting/transport/BackupResponse;
      20: areturn

  private org.infinispan.remoting.transport.BackupResponse sendTo1PCBackups(org.infinispan.commands.tx.CommitCommand) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field txTable:Lorg/infinispan/transaction/impl/TransactionTable;
       4: aload_1
       5: invokevirtual #91                 // Method org/infinispan/commands/tx/CommitCommand.getGlobalTransaction:()Lorg/infinispan/transaction/xa/GlobalTransaction;
       8: invokevirtual #92                 // Method org/infinispan/transaction/impl/TransactionTable.getLocalTransaction:(Lorg/infinispan/transaction/xa/GlobalTransaction;)Lorg/infinispan/transaction/impl/LocalTransaction;
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #93                 // Method org/infinispan/transaction/impl/LocalTransaction.getModifications:()Ljava/util/List;
      17: invokespecial #94                 // Method filterModifications:(Ljava/util/Collection;)Ljava/util/List;
      20: astore_3
      21: aload_3
      22: invokeinterface #42,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      27: ifeq          34
      30: getstatic     #43                 // Field EMPTY_RESPONSE:Lorg/infinispan/remoting/transport/BackupResponse;
      33: areturn
      34: aload_0
      35: getstatic     #95                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_1PC_ONLY:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
      38: invokespecial #49                 // Method calculateBackupInfo:(Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;)Ljava/util/List;
      41: astore        4
      43: aload_0
      44: getfield      #13                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      47: aload_1
      48: invokevirtual #91                 // Method org/infinispan/commands/tx/CommitCommand.getGlobalTransaction:()Lorg/infinispan/transaction/xa/GlobalTransaction;
      51: aload_3
      52: iconst_1
      53: invokeinterface #46,  4           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildPrepareCommand:(Lorg/infinispan/transaction/xa/GlobalTransaction;Ljava/util/List;Z)Lorg/infinispan/commands/tx/PrepareCommand;
      58: astore        5
      60: aload_0
      61: aload         5
      63: aload         4
      65: invokespecial #50                 // Method backupCommand:(Lorg/infinispan/commands/VisitableCommand;Ljava/util/List;)Lorg/infinispan/remoting/transport/BackupResponse;
      68: areturn

  private void processFailedResponses(org.infinispan.remoting.transport.BackupResponse, org.infinispan.commands.VisitableCommand, javax.transaction.Transaction) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #15                 // Field config:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #18                 // Method org/infinispan/configuration/cache/Configuration.sites:()Lorg/infinispan/configuration/cache/SitesConfiguration;
       7: astore        4
       9: aload_1
      10: invokeinterface #96,  1           // InterfaceMethod org/infinispan/remoting/transport/BackupResponse.getFailedBackups:()Ljava/util/Map;
      15: astore        5
      17: aconst_null
      18: astore        6
      20: aload         5
      22: invokeinterface #97,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      27: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore        7
      34: aload         7
      36: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          224
      44: aload         7
      46: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #63                 // class java/util/Map$Entry
      54: astore        8
      56: aload         4
      58: aload         8
      60: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      65: checkcast     #98                 // class java/lang/String
      68: invokevirtual #99                 // Method org/infinispan/configuration/cache/SitesConfiguration.getFailurePolicy:(Ljava/lang/String;)Lorg/infinispan/configuration/cache/BackupFailurePolicy;
      71: astore        9
      73: aload         9
      75: getstatic     #25                 // Field org/infinispan/configuration/cache/BackupFailurePolicy.CUSTOM:Lorg/infinispan/configuration/cache/BackupFailurePolicy;
      78: if_acmpne     130
      81: aload_0
      82: getfield      #4                  // Field siteFailurePolicy:Ljava/util/Map;
      85: aload         8
      87: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      92: invokeinterface #100,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #32                 // class org/infinispan/xsite/CustomFailurePolicy
     100: astore        10
     102: aload_2
     103: aconst_null
     104: new           #101                // class org/infinispan/xsite/BackupSenderImpl$CustomBackupPolicyInvoker
     107: dup
     108: aload         8
     110: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     115: checkcast     #98                 // class java/lang/String
     118: aload         10
     120: aload_3
     121: invokespecial #102                // Method org/infinispan/xsite/BackupSenderImpl$CustomBackupPolicyInvoker."<init>":(Ljava/lang/String;Lorg/infinispan/xsite/CustomFailurePolicy;Ljavax/transaction/Transaction;)V
     124: invokeinterface #103,  3          // InterfaceMethod org/infinispan/commands/VisitableCommand.acceptVisitor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/Visitor;)Ljava/lang/Object;
     129: pop
     130: aload         9
     132: getstatic     #104                // Field org/infinispan/configuration/cache/BackupFailurePolicy.WARN:Lorg/infinispan/configuration/cache/BackupFailurePolicy;
     135: if_acmpne     170
     138: getstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
     141: aload_0
     142: getfield      #17                 // Field cacheName:Ljava/lang/String;
     145: aload         8
     147: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     152: checkcast     #98                 // class java/lang/String
     155: aload         8
     157: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     162: invokeinterface #105,  4          // InterfaceMethod org/infinispan/util/logging/Log.warnXsiteBackupFailed:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
     167: goto          221
     170: aload         9
     172: getstatic     #106                // Field org/infinispan/configuration/cache/BackupFailurePolicy.FAIL:Lorg/infinispan/configuration/cache/BackupFailurePolicy;
     175: if_acmpne     221
     178: aload         6
     180: ifnonnull     196
     183: new           #107                // class org/infinispan/xsite/BackupFailureException
     186: dup
     187: aload_0
     188: getfield      #17                 // Field cacheName:Ljava/lang/String;
     191: invokespecial #108                // Method org/infinispan/xsite/BackupFailureException."<init>":(Ljava/lang/String;)V
     194: astore        6
     196: aload         6
     198: aload         8
     200: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     205: checkcast     #98                 // class java/lang/String
     208: aload         8
     210: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     215: checkcast     #109                // class java/lang/Throwable
     218: invokevirtual #110                // Method org/infinispan/xsite/BackupFailureException.addFailure:(Ljava/lang/String;Ljava/lang/Throwable;)V
     221: goto          34
     224: aload         6
     226: ifnull        232
     229: aload         6
     231: athrow
     232: return

  private java.util.List<org.infinispan.xsite.XSiteBackup> calculateBackupInfo(org.infinispan.xsite.BackupSenderImpl$BackupFilter);
    Code:
       0: new           #111                // class java/util/ArrayList
       3: dup
       4: iconst_2
       5: invokespecial #112                // Method java/util/ArrayList."<init>":(I)V
       8: astore_2
       9: aload_0
      10: getfield      #15                 // Field config:Lorg/infinispan/configuration/cache/Configuration;
      13: invokevirtual #18                 // Method org/infinispan/configuration/cache/Configuration.sites:()Lorg/infinispan/configuration/cache/SitesConfiguration;
      16: astore_3
      17: aload_3
      18: invokevirtual #19                 // Method org/infinispan/configuration/cache/SitesConfiguration.enabledBackups:()Ljava/util/List;
      21: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore        4
      28: aload         4
      30: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          207
      38: aload         4
      40: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #23                 // class org/infinispan/configuration/cache/BackupConfiguration
      48: astore        5
      50: aload         5
      52: invokevirtual #34                 // Method org/infinispan/configuration/cache/BackupConfiguration.site:()Ljava/lang/String;
      55: aload_0
      56: getfield      #7                  // Field localSiteName:Ljava/lang/String;
      59: invokevirtual #113                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          80
      65: getstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
      68: aload_0
      69: getfield      #7                  // Field localSiteName:Ljava/lang/String;
      72: invokeinterface #114,  2          // InterfaceMethod org/infinispan/util/logging/Log.cacheBackupsDataToSameSite:(Ljava/lang/String;)V
      77: goto          28
      80: aload         5
      82: invokevirtual #115                // Method org/infinispan/configuration/cache/BackupConfiguration.strategy:()Lorg/infinispan/configuration/cache/BackupConfiguration$BackupStrategy;
      85: getstatic     #116                // Field org/infinispan/configuration/cache/BackupConfiguration$BackupStrategy.SYNC:Lorg/infinispan/configuration/cache/BackupConfiguration$BackupStrategy;
      88: if_acmpne     95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: istore        6
      98: aload_1
      99: getstatic     #95                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_1PC_ONLY:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
     102: if_acmpne     121
     105: iload         6
     107: ifeq          121
     110: aload         5
     112: invokevirtual #117                // Method org/infinispan/configuration/cache/BackupConfiguration.isTwoPhaseCommit:()Z
     115: ifeq          121
     118: goto          28
     121: aload_1
     122: getstatic     #47                 // Field org/infinispan/xsite/BackupSenderImpl$BackupFilter.KEEP_2PC_ONLY:Lorg/infinispan/xsite/BackupSenderImpl$BackupFilter;
     125: if_acmpne     144
     128: iload         6
     130: ifeq          28
     133: aload         5
     135: invokevirtual #117                // Method org/infinispan/configuration/cache/BackupConfiguration.isTwoPhaseCommit:()Z
     138: ifne          144
     141: goto          28
     144: aload_0
     145: aload         5
     147: invokevirtual #34                 // Method org/infinispan/configuration/cache/BackupConfiguration.site:()Ljava/lang/String;
     150: invokespecial #118                // Method isOffline:(Ljava/lang/String;)Z
     153: ifeq          174
     156: getstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
     159: ldc           #119                // String The site \'%s\' is offline, not backing up information to it
     161: aload         5
     163: invokevirtual #34                 // Method org/infinispan/configuration/cache/BackupConfiguration.site:()Ljava/lang/String;
     166: invokeinterface #71,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     171: goto          28
     174: new           #120                // class org/infinispan/xsite/XSiteBackup
     177: dup
     178: aload         5
     180: invokevirtual #34                 // Method org/infinispan/configuration/cache/BackupConfiguration.site:()Ljava/lang/String;
     183: iload         6
     185: aload         5
     187: invokevirtual #121                // Method org/infinispan/configuration/cache/BackupConfiguration.replicationTimeout:()J
     190: invokespecial #122                // Method org/infinispan/xsite/XSiteBackup."<init>":(Ljava/lang/String;ZJ)V
     193: astore        7
     195: aload_2
     196: aload         7
     198: invokeinterface #123,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     203: pop
     204: goto          28
     207: aload_2
     208: areturn

  private boolean isOffline(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #36                 // class org/infinispan/xsite/OfflineStatus
      13: astore_2
      14: aload_2
      15: ifnull        29
      18: aload_2
      19: invokevirtual #72                 // Method org/infinispan/xsite/OfflineStatus.isOffline:()Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  private java.util.List<org.infinispan.commands.write.WriteCommand> filterModifications(org.infinispan.commands.write.WriteCommand[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          13
       9: invokestatic  #124                // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: areturn
      13: aload_0
      14: aload_1
      15: invokestatic  #125                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      18: invokespecial #94                 // Method filterModifications:(Ljava/util/Collection;)Ljava/util/List;
      21: areturn

  private java.util.List<org.infinispan.commands.write.WriteCommand> filterModifications(java.util.Collection<org.infinispan.commands.write.WriteCommand>);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #126,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          17
      13: invokestatic  #124                // Method java/util/Collections.emptyList:()Ljava/util/List;
      16: areturn
      17: new           #111                // class java/util/ArrayList
      20: dup
      21: aload_1
      22: invokeinterface #127,  1          // InterfaceMethod java/util/Collection.size:()I
      27: invokespecial #112                // Method java/util/ArrayList."<init>":(I)V
      30: astore_2
      31: aload_1
      32: invokeinterface #128,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      37: astore_3
      38: aload_3
      39: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          247
      47: aload_3
      48: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #129                // class org/infinispan/commands/write/WriteCommand
      56: astore        4
      58: aload         4
      60: invokeinterface #130,  1          // InterfaceMethod org/infinispan/commands/write/WriteCommand.isSuccessful:()Z
      65: ifne          71
      68: goto          38
      71: aload         4
      73: astore        5
      75: aload         4
      77: instanceof    #131                // class org/infinispan/commands/write/PutKeyValueCommand
      80: ifeq          138
      83: aload         4
      85: checkcast     #131                // class org/infinispan/commands/write/PutKeyValueCommand
      88: invokevirtual #132                // Method org/infinispan/commands/write/PutKeyValueCommand.isPutIfAbsent:()Z
      91: ifeq          138
      94: aload_0
      95: getfield      #13                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      98: aload         4
     100: checkcast     #131                // class org/infinispan/commands/write/PutKeyValueCommand
     103: invokevirtual #133                // Method org/infinispan/commands/write/PutKeyValueCommand.getKey:()Ljava/lang/Object;
     106: aload         4
     108: checkcast     #131                // class org/infinispan/commands/write/PutKeyValueCommand
     111: invokevirtual #134                // Method org/infinispan/commands/write/PutKeyValueCommand.getValue:()Ljava/lang/Object;
     114: aload         4
     116: invokeinterface #135,  1          // InterfaceMethod org/infinispan/commands/write/WriteCommand.getMetadata:()Lorg/infinispan/metadata/Metadata;
     121: aload         4
     123: invokeinterface #136,  1          // InterfaceMethod org/infinispan/commands/write/WriteCommand.getFlags:()Ljava/util/Set;
     128: invokeinterface #137,  5          // InterfaceMethod org/infinispan/commands/CommandsFactory.buildPutKeyValueCommand:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;Ljava/util/Set;)Lorg/infinispan/commands/write/PutKeyValueCommand;
     133: astore        5
     135: goto          235
     138: aload         4
     140: instanceof    #138                // class org/infinispan/commands/write/ReplaceCommand
     143: ifeq          190
     146: aload_0
     147: getfield      #13                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
     150: aload         4
     152: checkcast     #138                // class org/infinispan/commands/write/ReplaceCommand
     155: invokevirtual #139                // Method org/infinispan/commands/write/ReplaceCommand.getKey:()Ljava/lang/Object;
     158: aload         4
     160: checkcast     #138                // class org/infinispan/commands/write/ReplaceCommand
     163: invokevirtual #140                // Method org/infinispan/commands/write/ReplaceCommand.getNewValue:()Ljava/lang/Object;
     166: aload         4
     168: invokeinterface #135,  1          // InterfaceMethod org/infinispan/commands/write/WriteCommand.getMetadata:()Lorg/infinispan/metadata/Metadata;
     173: aload         4
     175: invokeinterface #136,  1          // InterfaceMethod org/infinispan/commands/write/WriteCommand.getFlags:()Ljava/util/Set;
     180: invokeinterface #137,  5          // InterfaceMethod org/infinispan/commands/CommandsFactory.buildPutKeyValueCommand:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;Ljava/util/Set;)Lorg/infinispan/commands/write/PutKeyValueCommand;
     185: astore        5
     187: goto          235
     190: aload         4
     192: instanceof    #141                // class org/infinispan/commands/write/RemoveCommand
     195: ifeq          235
     198: aload         4
     200: invokeinterface #142,  1          // InterfaceMethod org/infinispan/commands/write/WriteCommand.isConditional:()Z
     205: ifeq          235
     208: aload_0
     209: getfield      #13                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
     212: aload         4
     214: checkcast     #141                // class org/infinispan/commands/write/RemoveCommand
     217: invokevirtual #143                // Method org/infinispan/commands/write/RemoveCommand.getKey:()Ljava/lang/Object;
     220: aconst_null
     221: aload         4
     223: invokeinterface #136,  1          // InterfaceMethod org/infinispan/commands/write/WriteCommand.getFlags:()Ljava/util/Set;
     228: invokeinterface #144,  4          // InterfaceMethod org/infinispan/commands/CommandsFactory.buildRemoveCommand:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Set;)Lorg/infinispan/commands/write/RemoveCommand;
     233: astore        5
     235: aload_2
     236: aload         5
     238: invokeinterface #123,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     243: pop
     244: goto          38
     247: aload_2
     248: areturn

  public org.infinispan.xsite.OfflineStatus getOfflineStatus(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #36                 // class org/infinispan/xsite/OfflineStatus
      13: areturn

  public java.util.Map<java.lang.String, java.lang.Boolean> status();
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #145,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      13: invokespecial #146                // Method java/util/HashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #6                  // Field offlineStatus:Ljava/util/concurrent/ConcurrentMap;
      21: invokeinterface #61,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      26: invokeinterface #62,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          90
      41: aload_2
      42: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #63                 // class java/util/Map$Entry
      50: astore_3
      51: aload_1
      52: aload_3
      53: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: aload_3
      59: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #36                 // class org/infinispan/xsite/OfflineStatus
      67: invokevirtual #72                 // Method org/infinispan/xsite/OfflineStatus.isOffline:()Z
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: invokestatic  #147                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      81: invokeinterface #35,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          32
      90: aload_1
      91: areturn

  static {};
    Code:
       0: ldc           #148                // class org/infinispan/xsite/BackupSenderImpl
       2: invokestatic  #149                // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #52                 // Field log:Lorg/infinispan/util/logging/Log;
       8: new           #150                // class org/infinispan/xsite/BackupSenderImpl$EmptyBackupResponse
      11: dup
      12: aconst_null
      13: invokespecial #151                // Method org/infinispan/xsite/BackupSenderImpl$EmptyBackupResponse."<init>":(Lorg/infinispan/xsite/BackupSenderImpl$1;)V
      16: putstatic     #43                 // Field EMPTY_RESPONSE:Lorg/infinispan/remoting/transport/BackupResponse;
      19: return
}
