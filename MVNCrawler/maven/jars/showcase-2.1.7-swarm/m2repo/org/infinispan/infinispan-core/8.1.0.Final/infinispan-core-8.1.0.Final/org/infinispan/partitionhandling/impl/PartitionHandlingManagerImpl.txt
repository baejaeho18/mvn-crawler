Compiled from "PartitionHandlingManagerImpl.java"
public class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl implements org.infinispan.partitionhandling.impl.PartitionHandlingManager {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private final java.util.Map<org.infinispan.transaction.xa.GlobalTransaction, org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl$TransactionInfo> partialTransactions;

  private volatile org.infinispan.partitionhandling.AvailabilityMode availabilityMode;

  private org.infinispan.distribution.DistributionManager distributionManager;

  private org.infinispan.topology.LocalTopologyManager localTopologyManager;

  private org.infinispan.statetransfer.StateTransferManager stateTransferManager;

  private java.lang.String cacheName;

  private org.infinispan.notifications.cachelistener.CacheNotifier notifier;

  private org.infinispan.commands.CommandsFactory commandsFactory;

  private org.infinispan.configuration.cache.Configuration configuration;

  private org.infinispan.remoting.rpc.RpcManager rpcManager;

  private org.infinispan.util.concurrent.locks.LockManager lockManager;

  private boolean isVersioned;

  public org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
       8: putfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      11: aload_0
      12: invokestatic  #4                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      15: putfield      #5                  // Field partialTransactions:Ljava/util/Map;
      18: return

  public void init(org.infinispan.distribution.DistributionManager, org.infinispan.topology.LocalTopologyManager, org.infinispan.statetransfer.StateTransferManager, org.infinispan.Cache, org.infinispan.notifications.cachelistener.CacheNotifier, org.infinispan.commands.CommandsFactory, org.infinispan.configuration.cache.Configuration, org.infinispan.remoting.rpc.RpcManager, org.infinispan.util.concurrent.locks.LockManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field distributionManager:Lorg/infinispan/distribution/DistributionManager;
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
      10: aload_0
      11: aload_3
      12: putfield      #8                  // Field stateTransferManager:Lorg/infinispan/statetransfer/StateTransferManager;
      15: aload_0
      16: aload         4
      18: invokeinterface #9,  1            // InterfaceMethod org/infinispan/Cache.getName:()Ljava/lang/String;
      23: putfield      #10                 // Field cacheName:Ljava/lang/String;
      26: aload_0
      27: aload         5
      29: putfield      #11                 // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      32: aload_0
      33: aload         6
      35: putfield      #12                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      38: aload_0
      39: aload         7
      41: putfield      #13                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      44: aload_0
      45: aload         8
      47: putfield      #14                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      50: aload_0
      51: aload         9
      53: putfield      #15                 // Field lockManager:Lorg/infinispan/util/concurrent/locks/LockManager;
      56: return

  public void start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
       5: invokestatic  #16                 // Method org/infinispan/configuration/cache/Configurations.isVersioningEnabled:(Lorg/infinispan/configuration/cache/Configuration;)Z
       8: putfield      #17                 // Field isVersioned:Z
      11: return

  public org.infinispan.partitionhandling.AvailabilityMode getAvailabilityMode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       4: areturn

  public void setAvailabilityMode(org.infinispan.partitionhandling.AvailabilityMode);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       5: if_acmpeq     54
       8: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      11: ldc           #19                 // String Updating availability for cache %s: %s -> %s
      13: aload_0
      14: getfield      #10                 // Field cacheName:Ljava/lang/String;
      17: aload_0
      18: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      21: aload_1
      22: invokeinterface #20,  5           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #11                 // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      31: aload_1
      32: iconst_1
      33: invokeinterface #21,  3           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyPartitionStatusChanged:(Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
      38: aload_0
      39: aload_1
      40: putfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      43: aload_0
      44: getfield      #11                 // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      47: aload_1
      48: iconst_0
      49: invokeinterface #21,  3           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyPartitionStatusChanged:(Lorg/infinispan/partitionhandling/AvailabilityMode;Z)V
      54: return

  public void checkWrite(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method doCheck:(Ljava/lang/Object;)V
       5: return

  public void checkRead(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method doCheck:(Ljava/lang/Object;)V
       5: return

  public void checkClear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       4: getstatic     #2                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
       7: if_acmpeq     19
      10: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      13: invokeinterface #23,  1           // InterfaceMethod org/infinispan/util/logging/Log.clearDisallowedWhilePartitioned:()Lorg/infinispan/partitionhandling/AvailabilityException;
      18: athrow
      19: return

  public void checkBulkRead();
    Code:
       0: aload_0
       1: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       4: getstatic     #2                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
       7: if_acmpeq     19
      10: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      13: invokeinterface #24,  1           // InterfaceMethod org/infinispan/util/logging/Log.partitionDegraded:()Lorg/infinispan/partitionhandling/AvailabilityException;
      18: athrow
      19: return

  public org.infinispan.topology.CacheTopology getLastStableTopology();
    Code:
       0: aload_0
       1: getfield      #7                  // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
       4: aload_0
       5: getfield      #10                 // Field cacheName:Ljava/lang/String;
       8: invokeinterface #25,  2           // InterfaceMethod org/infinispan/topology/LocalTopologyManager.getStableCacheTopology:(Ljava/lang/String;)Lorg/infinispan/topology/CacheTopology;
      13: areturn

  public boolean addPartialRollbackTransaction(org.infinispan.transaction.xa.GlobalTransaction, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<java.lang.Object>);
    Code:
       0: getstatic     #26                 // Field trace:Z
       3: ifeq          17
       6: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #27                 // String Added partially rollback transaction %s
      11: aload_1
      12: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
      21: aload_1
      22: new           #29                 // class org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$RollbackTransactionInfo
      25: dup
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokespecial #30                 // Method org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$RollbackTransactionInfo."<init>":(Lorg/infinispan/transaction/xa/GlobalTransaction;Ljava/util/Collection;Ljava/util/Collection;)V
      32: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: iconst_1
      39: ireturn

  public boolean addPartialCommit2PCTransaction(org.infinispan.transaction.xa.GlobalTransaction, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<java.lang.Object>, org.infinispan.container.versioning.EntryVersionsMap);
    Code:
       0: getstatic     #26                 // Field trace:Z
       3: ifeq          17
       6: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #32                 // String Added partially committed (2PC) transaction %s
      11: aload_1
      12: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
      21: aload_1
      22: new           #33                 // class org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$Commit2PCTransactionInfo
      25: dup
      26: aload_1
      27: aload_2
      28: aload_3
      29: aload         4
      31: invokespecial #34                 // Method org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$Commit2PCTransactionInfo."<init>":(Lorg/infinispan/transaction/xa/GlobalTransaction;Ljava/util/Collection;Ljava/util/Collection;Lorg/infinispan/container/versioning/EntryVersionsMap;)V
      34: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: iconst_1
      41: ireturn

  public boolean addPartialCommit1PCTransaction(org.infinispan.transaction.xa.GlobalTransaction, java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Collection<java.lang.Object>, java.util.List<org.infinispan.commands.write.WriteCommand>);
    Code:
       0: getstatic     #26                 // Field trace:Z
       3: ifeq          17
       6: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #35                 // String Added partially committed (1PC) transaction %s
      11: aload_1
      12: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
      21: aload_1
      22: new           #36                 // class org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$Commit1PCTransactionInfo
      25: dup
      26: aload_1
      27: aload_2
      28: aload_3
      29: aload         4
      31: invokespecial #37                 // Method org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$Commit1PCTransactionInfo."<init>":(Lorg/infinispan/transaction/xa/GlobalTransaction;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/List;)V
      34: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: iconst_1
      41: ireturn

  public boolean isTransactionPartiallyCommitted(org.infinispan.transaction.xa.GlobalTransaction);
    Code:
       0: aload_0
       1: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #39                 // class org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo
      13: astore_2
      14: aload_2
      15: ifnull        31
      18: aload_2
      19: invokeinterface #40,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo.isRolledBack:()Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore_3
      33: getstatic     #26                 // Field trace:Z
      36: ifeq          63
      39: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      42: ldc           #41                 // String Can release resources for transaction %s? %s. Transaction info=%s
      44: aload_1
      45: iload_3
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      57: aload_2
      58: invokeinterface #43,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      63: iload_3
      64: ireturn

  public java.util.Collection<org.infinispan.transaction.xa.GlobalTransaction> getPartialTransactions();
    Code:
       0: aload_0
       1: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #45                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      12: areturn

  public boolean canRollbackTransactionAfterOriginatorLeave(org.infinispan.transaction.xa.GlobalTransaction);
    Code:
       0: aload_0
       1: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       4: getstatic     #2                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
       7: if_acmpne     33
      10: aload_0
      11: invokevirtual #46                 // Method getLastStableTopology:()Lorg/infinispan/topology/CacheTopology;
      14: invokevirtual #47                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
      17: aload_1
      18: invokevirtual #48                 // Method org/infinispan/transaction/xa/GlobalTransaction.getAddress:()Lorg/infinispan/remoting/transport/Address;
      21: invokeinterface #49,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: istore_2
      35: getstatic     #26                 // Field trace:Z
      38: ifeq          55
      41: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      44: ldc           #50                 // String Can rollback transaction? %s
      46: iload_2
      47: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      50: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      55: iload_2
      56: ireturn

  public void onTopologyUpdate(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method isTopologyStable:(Lorg/infinispan/topology/CacheTopology;)Z
       5: istore_2
       6: getstatic     #26                 // Field trace:Z
       9: ifeq          47
      12: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      15: ldc           #52                 // String On stable topology update. Has pending tx? %b. Is stable? %b. topology=%s
      17: aload_0
      18: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
      21: invokeinterface #53,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: iload_2
      38: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: aload_1
      42: invokeinterface #43,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      47: iload_2
      48: ifeq          108
      51: aload_0
      52: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
      55: invokeinterface #53,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      60: ifne          108
      63: aload_0
      64: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
      67: invokeinterface #54,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      72: invokeinterface #55,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      77: astore_3
      78: aload_3
      79: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      84: ifeq          108
      87: aload_3
      88: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #39                 // class org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo
      96: astore        4
      98: aload_0
      99: aload         4
     101: aload_1
     102: invokespecial #58                 // Method completeTransaction:(Lorg/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo;Lorg/infinispan/topology/CacheTopology;)V
     105: goto          78
     108: return

  private void completeTransaction(org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl$TransactionInfo, org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
       4: aload_1
       5: aload_2
       6: invokeinterface #59,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo.getCommitNodes:(Lorg/infinispan/topology/CacheTopology;)Ljava/util/List;
      11: aload_1
      12: aload_0
      13: getfield      #12                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
      16: aload_0
      17: getfield      #17                 // Field isVersioned:Z
      20: invokeinterface #60,  3           // InterfaceMethod org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo.buildCommand:(Lorg/infinispan/commands/CommandsFactory;Z)Lorg/infinispan/commands/ReplicableCommand;
      25: aload_0
      26: getfield      #14                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
      29: iconst_1
      30: invokeinterface #61,  2           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getDefaultRpcOptions:(Z)Lorg/infinispan/remoting/rpc/RpcOptions;
      35: invokeinterface #62,  4           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.invokeRemotelyAsync:(Ljava/util/Collection;Lorg/infinispan/commands/ReplicableCommand;Lorg/infinispan/remoting/rpc/RpcOptions;)Ljava/util/concurrent/CompletableFuture;
      40: aload_0
      41: aload_1
      42: invokedynamic #63,  0             // InvokeDynamic #0:accept:(Lorg/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl;Lorg/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo;)Ljava/util/function/BiConsumer;
      47: invokevirtual #64                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      50: pop
      51: return

  private boolean isTopologyStable(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: getfield      #7                  // Field localTopologyManager:Lorg/infinispan/topology/LocalTopologyManager;
       4: aload_0
       5: getfield      #10                 // Field cacheName:Ljava/lang/String;
       8: invokeinterface #25,  2           // InterfaceMethod org/infinispan/topology/LocalTopologyManager.getStableCacheTopology:(Ljava/lang/String;)Lorg/infinispan/topology/CacheTopology;
      13: astore_2
      14: getstatic     #26                 // Field trace:Z
      17: ifeq          32
      20: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      23: ldc           #65                 // String Check if topology %s is stable. Last stable topology is %s
      25: aload_1
      26: aload_2
      27: invokeinterface #66,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_2
      33: ifnull        56
      36: aload_1
      37: invokevirtual #47                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
      40: aload_2
      41: invokevirtual #47                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
      44: invokeinterface #67,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  private void doCheck(java.lang.Object);
    Code:
       0: getstatic     #26                 // Field trace:Z
       3: ifeq          21
       6: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #68                 // String Checking availability for key=%s, status=%s
      11: aload_1
      12: aload_0
      13: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      16: invokeinterface #66,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      25: getstatic     #2                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
      28: if_acmpne     32
      31: return
      32: aload_0
      33: getfield      #6                  // Field distributionManager:Lorg/infinispan/distribution/DistributionManager;
      36: aload_1
      37: invokeinterface #69,  2           // InterfaceMethod org/infinispan/distribution/DistributionManager.locate:(Ljava/lang/Object;)Ljava/util/List;
      42: astore_2
      43: aload_0
      44: getfield      #8                  // Field stateTransferManager:Lorg/infinispan/statetransfer/StateTransferManager;
      47: invokeinterface #70,  1           // InterfaceMethod org/infinispan/statetransfer/StateTransferManager.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
      52: invokevirtual #47                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
      55: astore_3
      56: aload_3
      57: aload_2
      58: invokeinterface #67,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      63: ifne          97
      66: getstatic     #26                 // Field trace:Z
      69: ifeq          87
      72: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      75: ldc           #71                 // String Partition is in %s mode, access is not allowed for key %s
      77: aload_0
      78: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      81: aload_1
      82: invokeinterface #66,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      87: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      90: aload_1
      91: invokeinterface #72,  2           // InterfaceMethod org/infinispan/util/logging/Log.degradedModeKeyUnavailable:(Ljava/lang/Object;)Lorg/infinispan/partitionhandling/AvailabilityException;
      96: athrow
      97: getstatic     #26                 // Field trace:Z
     100: ifeq          114
     103: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
     106: ldc           #73                 // String Key %s is available.
     108: aload_1
     109: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     114: return

  private void lambda$completeTransaction$259(org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl$TransactionInfo, java.util.Map, java.lang.Throwable);
    Code:
       0: aload_1
       1: invokeinterface #74,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo.getGlobalTransaction:()Lorg/infinispan/transaction/xa/GlobalTransaction;
       6: astore        4
       8: aload_3
       9: ifnull        32
      12: getstatic     #26                 // Field trace:Z
      15: ifeq          31
      18: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      21: aload_3
      22: ldc           #75                 // String Exception for transaction %s. Retry later.
      24: aload         4
      26: invokeinterface #76,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: getstatic     #26                 // Field trace:Z
      35: ifeq          51
      38: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      41: ldc           #77                 // String Future done for transaction %s. Response are %s
      43: aload         4
      45: aload_2
      46: invokeinterface #66,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      51: aload_2
      52: invokeinterface #54,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      57: invokeinterface #55,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      62: astore        5
      64: aload         5
      66: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          124
      74: aload         5
      76: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #78                 // class org/infinispan/remoting/responses/Response
      84: astore        6
      86: aload         6
      88: getstatic     #79                 // Field org/infinispan/remoting/responses/UnsureResponse.INSTANCE:Lorg/infinispan/remoting/responses/UnsureResponse;
      91: if_acmpeq     102
      94: aload         6
      96: getstatic     #80                 // Field org/infinispan/remoting/responses/CacheNotFoundResponse.INSTANCE:Lorg/infinispan/remoting/responses/CacheNotFoundResponse;
      99: if_acmpne     121
     102: getstatic     #26                 // Field trace:Z
     105: ifeq          120
     108: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
     111: ldc           #81                 // String Another partition or topology changed for transaction %s. Retry later.
     113: aload         4
     115: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     120: return
     121: goto          64
     124: getstatic     #26                 // Field trace:Z
     127: ifeq          142
     130: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
     133: ldc           #82                 // String Performing cleanup for transaction %s
     135: aload         4
     137: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     142: aload_0
     143: getfield      #15                 // Field lockManager:Lorg/infinispan/util/concurrent/locks/LockManager;
     146: aload_1
     147: invokeinterface #83,  1           // InterfaceMethod org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl$TransactionInfo.getLockedKeys:()Ljava/util/Collection;
     152: aload         4
     154: invokeinterface #84,  3           // InterfaceMethod org/infinispan/util/concurrent/locks/LockManager.unlock:(Ljava/lang/Object;Ljava/lang/Object;)V
     159: aload_0
     160: getfield      #5                  // Field partialTransactions:Ljava/util/Map;
     163: aload         4
     165: invokeinterface #85,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: aload_0
     172: getfield      #12                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
     175: aconst_null
     176: aload         4
     178: invokeinterface #86,  3           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildTxCompletionNotificationCommand:(Ljavax/transaction/xa/Xid;Lorg/infinispan/transaction/xa/GlobalTransaction;)Lorg/infinispan/commands/remote/recovery/TxCompletionNotificationCommand;
     183: astore        5
     185: aload_0
     186: getfield      #14                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     189: aconst_null
     190: aload         5
     192: aload_0
     193: getfield      #14                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     196: iconst_0
     197: getstatic     #87                 // Field org/infinispan/remoting/inboundhandler/DeliverOrder.NONE:Lorg/infinispan/remoting/inboundhandler/DeliverOrder;
     200: invokeinterface #88,  3           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getDefaultRpcOptions:(ZLorg/infinispan/remoting/inboundhandler/DeliverOrder;)Lorg/infinispan/remoting/rpc/RpcOptions;
     205: invokeinterface #89,  4           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.invokeRemotely:(Ljava/util/Collection;Lorg/infinispan/commands/ReplicableCommand;Lorg/infinispan/remoting/rpc/RpcOptions;)Ljava/util/Map;
     210: pop
     211: return

  static {};
    Code:
       0: ldc           #90                 // class org/infinispan/partitionhandling/impl/PartitionHandlingManagerImpl
       2: invokestatic  #91                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #92,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #26                 // Field trace:Z
      19: return
}
