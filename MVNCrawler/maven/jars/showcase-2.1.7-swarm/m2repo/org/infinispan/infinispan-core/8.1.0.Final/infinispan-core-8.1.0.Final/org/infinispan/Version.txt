Compiled from "Version.java"
public class org.infinispan.Version {
  private static final java.lang.String MODULE_PREFIX;

  private static final int MAJOR_SHIFT;

  private static final int MINOR_SHIFT;

  private static final int MAJOR_MASK;

  private static final int MINOR_MASK;

  private static final int PATCH_MASK;

  public static final java.lang.String PROJECT_NAME;

  private static final org.infinispan.Version INSTANCE;

  private final byte[] versionId;

  private final java.lang.String moduleSlot;

  private final short versionShort;

  private final short marshallVersion;

  private final java.lang.String majorMinor;

  private org.infinispan.Version();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method org/infinispan/Version$Injected.getVersion:()Ljava/lang/String;
       7: invokestatic  #3                  // Method getParts:(Ljava/lang/String;)[Ljava/lang/String;
      10: astore_1
      11: aload_0
      12: aload_1
      13: iconst_0
      14: aaload
      15: aload_1
      16: iconst_1
      17: aaload
      18: aload_1
      19: iconst_2
      20: aaload
      21: aload_1
      22: iconst_3
      23: aaload
      24: invokestatic  #4                  // Method readVersionBytes:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[B
      27: putfield      #5                  // Field versionId:[B
      30: aload_0
      31: invokestatic  #2                  // Method org/infinispan/Version$Injected.getVersion:()Ljava/lang/String;
      34: invokestatic  #6                  // Method getVersionShort:(Ljava/lang/String;)S
      37: putfield      #7                  // Field versionShort:S
      40: aload_0
      41: ldc           #8                  // String %s-%s.%s
      43: iconst_3
      44: anewarray     #9                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: ldc           #11                 // String ispn
      51: aastore
      52: dup
      53: iconst_1
      54: aload_1
      55: iconst_0
      56: aaload
      57: aastore
      58: dup
      59: iconst_2
      60: aload_1
      61: iconst_1
      62: aaload
      63: aastore
      64: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      67: putfield      #13                 // Field moduleSlot:Ljava/lang/String;
      70: aload_0
      71: new           #14                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      78: aload_1
      79: iconst_0
      80: aaload
      81: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_1
      85: iconst_1
      86: aaload
      87: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokestatic  #18                 // Method java/lang/Short.valueOf:(Ljava/lang/String;)Ljava/lang/Short;
      96: invokevirtual #19                 // Method java/lang/Short.shortValue:()S
      99: putfield      #20                 // Field marshallVersion:S
     102: aload_0
     103: ldc           #21                 // String %s.%s
     105: iconst_2
     106: anewarray     #9                  // class java/lang/Object
     109: dup
     110: iconst_0
     111: aload_1
     112: iconst_0
     113: aaload
     114: aastore
     115: dup
     116: iconst_1
     117: aload_1
     118: iconst_1
     119: aaload
     120: aastore
     121: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     124: putfield      #22                 // Field majorMinor:Ljava/lang/String;
     127: return

  public static java.lang.String getVersion();
    Code:
       0: invokestatic  #2                  // Method org/infinispan/Version$Injected.getVersion:()Ljava/lang/String;
       3: areturn

  public static java.lang.String getModuleSlot();
    Code:
       0: getstatic     #23                 // Field INSTANCE:Lorg/infinispan/Version;
       3: getfield      #13                 // Field moduleSlot:Ljava/lang/String;
       6: areturn

  public static short getMarshallVersion();
    Code:
       0: getstatic     #23                 // Field INSTANCE:Lorg/infinispan/Version;
       3: getfield      #20                 // Field marshallVersion:S
       6: ireturn

  public static java.lang.String getMajorMinor();
    Code:
       0: getstatic     #23                 // Field INSTANCE:Lorg/infinispan/Version;
       3: getfield      #22                 // Field majorMinor:Ljava/lang/String;
       6: areturn

  public static boolean compareTo(byte[]);
    Code:
       0: getstatic     #23                 // Field INSTANCE:Lorg/infinispan/Version;
       3: getfield      #5                  // Field versionId:[B
       6: aload_0
       7: invokestatic  #24                 // Method java/util/Arrays.equals:([B[B)Z
      10: ireturn

  public static short getVersionShort();
    Code:
       0: getstatic     #23                 // Field INSTANCE:Lorg/infinispan/Version;
       3: getfield      #7                  // Field versionShort:S
       6: ireturn

  public static short getVersionShort(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #25                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #26                 // String versionString is null
      10: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokestatic  #3                  // Method getParts:(Ljava/lang/String;)[Ljava/lang/String;
      18: astore_1
      19: iconst_0
      20: istore_2
      21: iconst_0
      22: istore_3
      23: iconst_0
      24: istore        4
      26: aload_1
      27: arraylength
      28: ifle          38
      31: aload_1
      32: iconst_0
      33: aaload
      34: invokestatic  #28                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      37: istore_2
      38: aload_1
      39: arraylength
      40: iconst_1
      41: if_icmple     51
      44: aload_1
      45: iconst_1
      46: aaload
      47: invokestatic  #28                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      50: istore_3
      51: aload_1
      52: arraylength
      53: iconst_2
      54: if_icmple     65
      57: aload_1
      58: iconst_2
      59: aaload
      60: invokestatic  #28                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      63: istore        4
      65: iload_2
      66: iload_3
      67: iload         4
      69: invokestatic  #29                 // Method encodeVersion:(III)S
      72: ireturn

  private static short encodeVersion(int, int, int);
    Code:
       0: iload_0
       1: bipush        11
       3: ishl
       4: iload_1
       5: bipush        6
       7: ishl
       8: iadd
       9: iload_2
      10: iadd
      11: i2s
      12: ireturn

  public static java.lang.String decodeVersion(short);
    Code:
       0: iload_0
       1: ldc           #30                 // int 63488
       3: iand
       4: bipush        11
       6: ishr
       7: istore_1
       8: iload_0
       9: sipush        1984
      12: iand
      13: bipush        6
      15: ishr
      16: istore_2
      17: iload_0
      18: bipush        63
      20: iand
      21: istore_3
      22: new           #14                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      29: iload_1
      30: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #32                 // String .
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_2
      39: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #32                 // String .
      44: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload_3
      48: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn

  public static java.lang.String decodeVersionForSerialization(short);
    Code:
       0: iload_0
       1: ldc           #30                 // int 63488
       3: iand
       4: bipush        11
       6: ishr
       7: istore_1
       8: iload_0
       9: sipush        1984
      12: iand
      13: bipush        6
      15: ishr
      16: istore_2
      17: new           #14                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      24: iload_1
      25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #32                 // String .
      30: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_2
      34: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: areturn

  public static void main(java.lang.String[]);
    Code:
       0: invokestatic  #33                 // Method printFullVersionInformation:()V
       3: return

  public static void printFullVersionInformation();
    Code:
       0: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: ldc           #35                 // String Infinispan
       5: invokevirtual #36                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       8: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
      11: invokevirtual #37                 // Method java/io/PrintStream.println:()V
      14: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
      17: ldc           #38                 // String Version: \t%s%n
      19: iconst_1
      20: anewarray     #9                  // class java/lang/Object
      23: dup
      24: iconst_0
      25: invokestatic  #2                  // Method org/infinispan/Version$Injected.getVersion:()Ljava/lang/String;
      28: aastore
      29: invokevirtual #39                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      32: pop
      33: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
      36: ldc           #40                 // String Codename: \t%s%n
      38: iconst_1
      39: anewarray     #9                  // class java/lang/Object
      42: dup
      43: iconst_0
      44: invokestatic  #41                 // Method org/infinispan/Version$Injected.getCodename:()Ljava/lang/String;
      47: aastore
      48: invokevirtual #39                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      51: pop
      52: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
      55: ldc           #42                 // String History: \t(see https://jira.jboss.org/jira/browse/ISPN for details)
      57: invokevirtual #36                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      60: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
      63: invokevirtual #37                 // Method java/io/PrintStream.println:()V
      66: return

  public static java.lang.String printVersion();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #43                 // String Infinispan \'
       9: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: invokestatic  #41                 // Method org/infinispan/Version$Injected.getCodename:()Ljava/lang/String;
      15: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #44                 // String \'
      20: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokestatic  #2                  // Method org/infinispan/Version$Injected.getVersion:()Ljava/lang/String;
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  private static byte[] readVersionBytes(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #45                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #46                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: aload_0
      15: invokevirtual #47                 // Method java/lang/String.length:()I
      18: if_icmpge     38
      21: aload         4
      23: aload_0
      24: iload         5
      26: invokevirtual #48                 // Method java/lang/String.charAt:(I)C
      29: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.write:(I)V
      32: iinc          5, 1
      35: goto          12
      38: iconst_0
      39: istore        5
      41: iload         5
      43: aload_1
      44: invokevirtual #47                 // Method java/lang/String.length:()I
      47: if_icmpge     67
      50: aload         4
      52: aload_1
      53: iload         5
      55: invokevirtual #48                 // Method java/lang/String.charAt:(I)C
      58: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.write:(I)V
      61: iinc          5, 1
      64: goto          41
      67: iconst_0
      68: istore        5
      70: iload         5
      72: aload_2
      73: invokevirtual #47                 // Method java/lang/String.length:()I
      76: if_icmpge     96
      79: aload         4
      81: aload_2
      82: iload         5
      84: invokevirtual #48                 // Method java/lang/String.charAt:(I)C
      87: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.write:(I)V
      90: iinc          5, 1
      93: goto          70
      96: ldc           #50                 // String SNAPSHOT
      98: aload_3
      99: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     102: ifeq          115
     105: aload         4
     107: bipush        83
     109: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.write:(I)V
     112: goto          144
     115: iconst_0
     116: istore        5
     118: iload         5
     120: aload_3
     121: invokevirtual #47                 // Method java/lang/String.length:()I
     124: if_icmpge     144
     127: aload         4
     129: aload_3
     130: iload         5
     132: invokevirtual #48                 // Method java/lang/String.charAt:(I)C
     135: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.write:(I)V
     138: iinc          5, 1
     141: goto          118
     144: aload         4
     146: invokevirtual #52                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     149: areturn

  private static java.lang.String[] getParts(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #53                 // String [\\.\\-]
       3: invokevirtual #54                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: areturn

  static {};
    Code:
       0: new           #10                 // class org/infinispan/Version
       3: dup
       4: invokespecial #55                 // Method "<init>":()V
       7: putstatic     #23                 // Field INSTANCE:Lorg/infinispan/Version;
      10: return
}
