Compiled from "PutOperation.java"
public class org.infinispan.atomic.impl.PutOperation<K, V> extends org.infinispan.atomic.impl.Operation<K, V> {
  private K key;

  private V oldValue;

  private V newValue;

  public org.infinispan.atomic.impl.PutOperation();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/infinispan/atomic/impl/Operation."<init>":()V
       4: return

  org.infinispan.atomic.impl.PutOperation(K, V, V);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/infinispan/atomic/impl/Operation."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field key:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field oldValue:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #1                  // Field newValue:Ljava/lang/Object;
      19: return

  public void rollback(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field oldValue:Ljava/lang/Object;
       4: ifnonnull     21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field key:Ljava/lang/Object;
      12: invokeinterface #5,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: goto          36
      21: aload_1
      22: aload_0
      23: getfield      #2                  // Field key:Ljava/lang/Object;
      26: aload_0
      27: getfield      #4                  // Field oldValue:Ljava/lang/Object;
      30: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: return

  public void replay(java.util.Map<K, V>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field key:Ljava/lang/Object;
       5: aload_0
       6: getfield      #1                  // Field newValue:Ljava/lang/Object;
       9: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public K keyAffected();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #7                  // class org/infinispan/atomic/impl/PutOperation
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #7                  // class org/infinispan/atomic/impl/PutOperation
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field key:Ljava/lang/Object;
      25: ifnull        45
      28: aload_0
      29: getfield      #2                  // Field key:Ljava/lang/Object;
      32: aload_2
      33: getfield      #2                  // Field key:Ljava/lang/Object;
      36: invokevirtual #8                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifne          54
      42: goto          52
      45: aload_2
      46: getfield      #2                  // Field key:Ljava/lang/Object;
      49: ifnull        54
      52: iconst_0
      53: ireturn
      54: aload_0
      55: getfield      #1                  // Field newValue:Ljava/lang/Object;
      58: ifnull        78
      61: aload_0
      62: getfield      #1                  // Field newValue:Ljava/lang/Object;
      65: aload_2
      66: getfield      #1                  // Field newValue:Ljava/lang/Object;
      69: invokevirtual #8                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      72: ifne          87
      75: goto          85
      78: aload_2
      79: getfield      #1                  // Field newValue:Ljava/lang/Object;
      82: ifnull        87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: getfield      #4                  // Field oldValue:Ljava/lang/Object;
      91: ifnull        111
      94: aload_0
      95: getfield      #4                  // Field oldValue:Ljava/lang/Object;
      98: aload_2
      99: getfield      #4                  // Field oldValue:Ljava/lang/Object;
     102: invokevirtual #8                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     105: ifne          120
     108: goto          118
     111: aload_2
     112: getfield      #4                  // Field oldValue:Ljava/lang/Object;
     115: ifnull        120
     118: iconst_0
     119: ireturn
     120: iconst_1
     121: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field key:Ljava/lang/Object;
      11: invokevirtual #9                  // Method java/lang/Object.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #4                  // Field oldValue:Ljava/lang/Object;
      27: ifnull        40
      30: aload_0
      31: getfield      #4                  // Field oldValue:Ljava/lang/Object;
      34: invokevirtual #9                  // Method java/lang/Object.hashCode:()I
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_1
      43: bipush        31
      45: iload_1
      46: imul
      47: aload_0
      48: getfield      #1                  // Field newValue:Ljava/lang/Object;
      51: ifnull        64
      54: aload_0
      55: getfield      #1                  // Field newValue:Ljava/lang/Object;
      58: invokevirtual #9                  // Method java/lang/Object.hashCode:()I
      61: goto          65
      64: iconst_0
      65: iadd
      66: istore_1
      67: iload_1
      68: ireturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String PutOperation{key=
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field key:Ljava/lang/Object;
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #15                 // String , oldValue=
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field oldValue:Ljava/lang/Object;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #16                 // String , newValue=
      33: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #1                  // Field newValue:Ljava/lang/Object;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: bipush        125
      45: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  static java.lang.Object access$000(org.infinispan.atomic.impl.PutOperation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field key:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$100(org.infinispan.atomic.impl.PutOperation);
    Code:
       0: aload_0
       1: getfield      #1                  // Field newValue:Ljava/lang/Object;
       4: areturn

  static java.lang.Object access$002(org.infinispan.atomic.impl.PutOperation, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field key:Ljava/lang/Object;
       6: areturn

  static java.lang.Object access$102(org.infinispan.atomic.impl.PutOperation, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field newValue:Ljava/lang/Object;
       6: areturn
}
