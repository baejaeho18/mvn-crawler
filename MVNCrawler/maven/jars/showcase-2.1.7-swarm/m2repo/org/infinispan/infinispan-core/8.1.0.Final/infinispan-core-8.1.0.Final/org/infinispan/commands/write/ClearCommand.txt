Compiled from "ClearCommand.java"
public class org.infinispan.commands.write.ClearCommand extends org.infinispan.commands.AbstractFlagAffectedCommand implements org.infinispan.commands.write.WriteCommand {
  public static final byte COMMAND_ID;

  private org.infinispan.notifications.cachelistener.CacheNotifier<java.lang.Object, java.lang.Object> notifier;

  private org.infinispan.container.DataContainer<?, ?> dataContainer;

  public org.infinispan.commands.write.ClearCommand();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/commands/AbstractFlagAffectedCommand."<init>":()V
       4: return

  public org.infinispan.commands.write.ClearCommand(org.infinispan.notifications.cachelistener.CacheNotifier<java.lang.Object, java.lang.Object>, org.infinispan.container.DataContainer<?, ?>, java.util.Set<org.infinispan.context.Flag>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/commands/AbstractFlagAffectedCommand."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field flags:Ljava/util/Set;
      19: return

  public void init(org.infinispan.notifications.cachelistener.CacheNotifier<java.lang.Object, java.lang.Object>, org.infinispan.container.DataContainer<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
      10: return

  public java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext, org.infinispan.commands.Visitor) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokeinterface #5,  3            // InterfaceMethod org/infinispan/commands/Visitor.visitClearCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/ClearCommand;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object perform(org.infinispan.context.InvocationContext) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #3                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
       4: invokeinterface #6,  1            // InterfaceMethod org/infinispan/container/DataContainer.entrySet:()Ljava/util/Set;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          67
      24: aload_2
      25: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #10                 // class org/infinispan/container/entries/CacheEntry
      33: astore_3
      34: aload_0
      35: getfield      #2                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      38: aload_3
      39: invokeinterface #11,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      44: aload_3
      45: invokeinterface #12,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
      50: aload_3
      51: invokeinterface #13,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
      56: iconst_1
      57: aload_1
      58: aload_0
      59: invokeinterface #14,  7           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryRemoved:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
      64: goto          15
      67: aconst_null
      68: areturn

  public java.lang.Object[] getParameters();
    Code:
       0: iconst_1
       1: anewarray     #15                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field flags:Ljava/util/Set;
      10: invokestatic  #16                 // Method org/infinispan/context/Flag.copyWithoutRemotableFlags:(Ljava/util/Set;)Ljava/util/Set;
      13: aastore
      14: areturn

  public byte getCommandId();
    Code:
       0: iconst_5
       1: ireturn

  public void setParameters(int, java.lang.Object[]);
    Code:
       0: iload_1
       1: iconst_5
       2: if_icmpeq     15
       5: new           #18                 // class java/lang/IllegalStateException
       8: dup
       9: ldc           #19                 // String Invalid command id
      11: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_2
      16: arraylength
      17: ifle          30
      20: aload_0
      21: aload_2
      22: iconst_0
      23: aaload
      24: checkcast     #21                 // class java/util/Set
      27: putfield      #4                  // Field flags:Ljava/util/Set;
      30: return

  public boolean shouldInvoke(org.infinispan.context.InvocationContext);
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #24                 // String ClearCommand{flags=
       9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field flags:Ljava/util/Set;
      16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #27                 // String }
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public boolean isSuccessful();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isConditional();
    Code:
       0: iconst_0
       1: ireturn

  public org.infinispan.commands.write.ValueMatcher getValueMatcher();
    Code:
       0: getstatic     #29                 // Field org/infinispan/commands/write/ValueMatcher.MATCH_ALWAYS:Lorg/infinispan/commands/write/ValueMatcher;
       3: areturn

  public void setValueMatcher(org.infinispan.commands.write.ValueMatcher);
    Code:
       0: return

  public java.util.Set<java.lang.Object> getAffectedKeys();
    Code:
       0: invokestatic  #30                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
       3: areturn

  public void updateStatusFromRemoteResponse(java.lang.Object);
    Code:
       0: return

  public boolean isReturnValueExpected();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canBlock();
    Code:
       0: iconst_1
       1: ireturn

  public boolean ignoreCommandOnStatus(org.infinispan.lifecycle.ComponentStatus);
    Code:
       0: iconst_0
       1: ireturn

  public boolean readsExistingValues();
    Code:
       0: iconst_0
       1: ireturn
}
