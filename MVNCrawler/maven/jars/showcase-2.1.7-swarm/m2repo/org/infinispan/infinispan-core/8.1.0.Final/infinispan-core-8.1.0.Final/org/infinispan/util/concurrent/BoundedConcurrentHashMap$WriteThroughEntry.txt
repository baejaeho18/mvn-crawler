Compiled from "BoundedConcurrentHashMap.java"
final class org.infinispan.util.concurrent.BoundedConcurrentHashMap$WriteThroughEntry extends java.util.AbstractMap$SimpleEntry<K, V> {
  private static final long serialVersionUID;

  final org.infinispan.util.concurrent.BoundedConcurrentHashMap this$0;

  org.infinispan.util.concurrent.BoundedConcurrentHashMap$WriteThroughEntry(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #2                  // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      11: return

  public V setValue(V);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #4                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: invokespecial #5                  // Method java/util/AbstractMap$SimpleEntry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_2
      18: aload_0
      19: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
      22: aload_0
      23: invokevirtual #6                  // Method getKey:()Ljava/lang/Object;
      26: aload_1
      27: invokevirtual #7                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_2
      32: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #8                  // class java/util/Map$Entry
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
      18: invokestatic  #9                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.access$100:(Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;)Lorg/infinispan/commons/equivalence/Equivalence;
      21: aload_0
      22: invokevirtual #6                  // Method getKey:()Ljava/lang/Object;
      25: aload_2
      26: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      31: invokeinterface #11,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          68
      39: aload_0
      40: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
      43: invokestatic  #12                 // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.access$200:(Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;)Lorg/infinispan/commons/equivalence/Equivalence;
      46: aload_0
      47: invokevirtual #13                 // Method getValue:()Ljava/lang/Object;
      50: aload_2
      51: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: invokeinterface #11,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getKey:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_0
       8: goto          55
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
      15: invokestatic  #9                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.access$100:(Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;)Lorg/infinispan/commons/equivalence/Equivalence;
      18: aload_0
      19: invokevirtual #6                  // Method getKey:()Ljava/lang/Object;
      22: invokeinterface #15,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      27: aload_0
      28: invokevirtual #13                 // Method getValue:()Ljava/lang/Object;
      31: ifnonnull     38
      34: iconst_0
      35: goto          54
      38: aload_0
      39: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
      42: invokestatic  #12                 // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.access$200:(Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;)Lorg/infinispan/commons/equivalence/Equivalence;
      45: aload_0
      46: invokevirtual #13                 // Method getValue:()Ljava/lang/Object;
      49: invokeinterface #15,  2           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.hashCode:(Ljava/lang/Object;)I
      54: ixor
      55: ireturn
}
