Compiled from "NonTxInvocationContext.java"
public class org.infinispan.context.impl.NonTxInvocationContext extends org.infinispan.context.impl.AbstractInvocationContext {
  private static final int INITIAL_CAPACITY;

  private final java.util.Map<java.lang.Object, org.infinispan.container.entries.CacheEntry> lookedUpEntries;

  private final org.infinispan.commons.equivalence.Equivalence<java.lang.Object> keyEq;

  private java.util.Set<java.lang.Object> lockedKeys;

  private java.lang.Object lockOwner;

  public org.infinispan.context.impl.NonTxInvocationContext(int, org.infinispan.remoting.transport.Address, org.infinispan.commons.equivalence.Equivalence<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/infinispan/context/impl/AbstractInvocationContext."<init>":(Lorg/infinispan/remoting/transport/Address;)V
       5: aload_0
       6: iload_1
       7: aload_3
       8: invokestatic  #2                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      11: invokestatic  #3                  // Method org/infinispan/commons/util/CollectionFactory.makeMap:(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/Map;
      14: putfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
      17: aload_0
      18: aload_3
      19: putfield      #5                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      22: return

  public org.infinispan.context.impl.NonTxInvocationContext(org.infinispan.remoting.transport.Address, org.infinispan.commons.equivalence.Equivalence<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/context/impl/AbstractInvocationContext."<init>":(Lorg/infinispan/remoting/transport/Address;)V
       5: aload_0
       6: iconst_4
       7: aload_2
       8: invokestatic  #2                  // Method org/infinispan/commons/equivalence/AnyEquivalence.getInstance:()Lorg/infinispan/commons/equivalence/AnyEquivalence;
      11: invokestatic  #3                  // Method org/infinispan/commons/util/CollectionFactory.makeMap:(ILorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/Map;
      14: putfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      22: return

  public org.infinispan.container.entries.CacheEntry lookupEntry(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class org/infinispan/container/entries/CacheEntry
      13: areturn

  public void removeLookedUpEntry(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void putLookedUpEntry(java.lang.Object, org.infinispan.container.entries.CacheEntry);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.util.Map<java.lang.Object, org.infinispan.container.entries.CacheEntry> getLookedUpEntries();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
       4: ifnonnull     13
       7: invokestatic  #11                 // Method org/infinispan/commons/util/InfinispanCollections.emptyMap:()Ljava/util/Map;
      10: goto          17
      13: aload_0
      14: getfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
      17: areturn

  public boolean isInTxScope();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object getLockOwner();
    Code:
       0: aload_0
       1: getfield      #12                 // Field lockOwner:Ljava/lang/Object;
       4: areturn

  public void setLockOwner(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field lockOwner:Ljava/lang/Object;
       5: return

  public org.infinispan.context.impl.NonTxInvocationContext clone();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/infinispan/context/impl/AbstractInvocationContext.clone:()Lorg/infinispan/context/impl/AbstractInvocationContext;
       4: checkcast     #6                  // class org/infinispan/context/impl/NonTxInvocationContext
       7: astore_1
       8: aload_1
       9: getfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
      12: aload_0
      13: getfield      #4                  // Field lookedUpEntries:Ljava/util/Map;
      16: invokeinterface #14,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      21: aload_1
      22: areturn

  public void addLockedKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #15                 // Field lockedKeys:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: iconst_4
       9: aload_0
      10: getfield      #5                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      13: invokestatic  #16                 // Method org/infinispan/commons/util/CollectionFactory.makeSet:(ILorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/Set;
      16: putfield      #15                 // Field lockedKeys:Ljava/util/Set;
      19: aload_0
      20: getfield      #15                 // Field lockedKeys:Ljava/util/Set;
      23: aload_1
      24: invokeinterface #17,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      29: pop
      30: return

  public java.util.Set<java.lang.Object> getLockedKeys();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lockedKeys:Ljava/util/Set;
       4: ifnonnull     13
       7: invokestatic  #18                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      10: goto          17
      13: aload_0
      14: getfield      #15                 // Field lockedKeys:Ljava/util/Set;
      17: areturn

  public void clearLockedKeys();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #15                 // Field lockedKeys:Ljava/util/Set;
       5: return

  public org.infinispan.context.impl.AbstractInvocationContext clone();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method clone:()Lorg/infinispan/context/impl/NonTxInvocationContext;
       4: areturn

  public org.infinispan.context.InvocationContext clone();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method clone:()Lorg/infinispan/context/impl/NonTxInvocationContext;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method clone:()Lorg/infinispan/context/impl/NonTxInvocationContext;
       4: areturn
}
