Compiled from "PersistenceManagerStub.java"
public class org.infinispan.persistence.manager.PersistenceManagerStub implements org.infinispan.persistence.manager.PersistenceManager {
  public org.infinispan.persistence.manager.PersistenceManagerStub();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void start();
    Code:
       0: return

  public void stop();
    Code:
       0: return

  public void preload();
    Code:
       0: return

  public void disableStore(java.lang.String);
    Code:
       0: return

  public <T> java.util.Set<T> getStores(java.lang.Class<T>);
    Code:
       0: getstatic     #2                  // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
       3: areturn

  public java.util.Collection<java.lang.String> getStoresAsString();
    Code:
       0: getstatic     #2                  // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
       3: areturn

  public void purgeExpired();
    Code:
       0: return

  public void clearAllStores(org.infinispan.persistence.manager.PersistenceManager$AccessMode);
    Code:
       0: return

  public boolean deleteFromAllStores(java.lang.Object, org.infinispan.persistence.manager.PersistenceManager$AccessMode);
    Code:
       0: iconst_0
       1: ireturn

  public void processOnAllStores(org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean);
    Code:
       0: return

  public void processOnAllStores(java.util.concurrent.Executor, org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean);
    Code:
       0: return

  public void processOnAllStores(org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean, org.infinispan.persistence.manager.PersistenceManager$AccessMode);
    Code:
       0: return

  public void processOnAllStores(java.util.concurrent.Executor, org.infinispan.filter.KeyFilter, org.infinispan.persistence.spi.AdvancedCacheLoader$CacheLoaderTask, boolean, boolean, org.infinispan.persistence.manager.PersistenceManager$AccessMode);
    Code:
       0: return

  public org.infinispan.marshall.core.MarshalledEntry loadFromAllStores(java.lang.Object, org.infinispan.context.InvocationContext);
    Code:
       0: aconst_null
       1: areturn

  public void writeToAllStores(org.infinispan.marshall.core.MarshalledEntry, org.infinispan.persistence.manager.PersistenceManager$AccessMode);
    Code:
       0: return

  public org.infinispan.persistence.spi.AdvancedCacheLoader getStateTransferProvider();
    Code:
       0: aconst_null
       1: areturn

  public int size();
    Code:
       0: iconst_0
       1: ireturn

  public void setClearOnStop(boolean);
    Code:
       0: return
}
