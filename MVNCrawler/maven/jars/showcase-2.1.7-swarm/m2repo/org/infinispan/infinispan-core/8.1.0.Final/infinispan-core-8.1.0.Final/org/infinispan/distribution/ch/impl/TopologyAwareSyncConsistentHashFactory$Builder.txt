Compiled from "TopologyAwareSyncConsistentHashFactory.java"
public class org.infinispan.distribution.ch.impl.TopologyAwareSyncConsistentHashFactory$Builder extends org.infinispan.distribution.ch.impl.SyncConsistentHashFactory$Builder {
  protected final org.infinispan.distribution.topologyaware.TopologyInfo topologyInfo;

  protected org.infinispan.distribution.topologyaware.TopologyLevel currentLevel;

  protected org.infinispan.distribution.ch.impl.TopologyAwareSyncConsistentHashFactory$Builder(org.infinispan.commons.hash.Hash, int, int, java.util.List<org.infinispan.remoting.transport.Address>, java.util.Map<org.infinispan.remoting.transport.Address, java.lang.Float>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: invokespecial #2                  // Method org/infinispan/distribution/ch/impl/SyncConsistentHashFactory$Builder."<init>":(Lorg/infinispan/commons/hash/Hash;IILjava/util/List;Ljava/util/Map;)V
      11: aload_0
      12: getstatic     #3                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.SITE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      15: putfield      #4                  // Field currentLevel:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      18: aload_0
      19: new           #5                  // class org/infinispan/distribution/topologyaware/TopologyInfo
      22: dup
      23: aload         4
      25: aload         5
      27: invokespecial #6                  // Method org/infinispan/distribution/topologyaware/TopologyInfo."<init>":(Ljava/util/Collection;Ljava/util/Map;)V
      30: putfield      #7                  // Field topologyInfo:Lorg/infinispan/distribution/topologyaware/TopologyInfo;
      33: return

  protected void copyOwners();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.SITE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
       4: invokespecial #8                  // Method copyOwnersForLevel:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
       7: aload_0
       8: getstatic     #9                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.RACK:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      11: invokespecial #8                  // Method copyOwnersForLevel:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      14: aload_0
      15: getstatic     #10                 // Field org/infinispan/distribution/topologyaware/TopologyLevel.MACHINE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      18: invokespecial #8                  // Method copyOwnersForLevel:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      21: aload_0
      22: getstatic     #11                 // Field org/infinispan/distribution/topologyaware/TopologyLevel.NODE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      25: invokespecial #8                  // Method copyOwnersForLevel:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      28: return

  private void copyOwnersForLevel(org.infinispan.distribution.topologyaware.TopologyLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field currentLevel:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
       5: aload_0
       6: iconst_0
       7: putfield      #12                 // Field ignoreMaxSegments:Z
      10: aload_0
      11: invokespecial #13                 // Method org/infinispan/distribution/ch/impl/SyncConsistentHashFactory$Builder.doCopyOwners:()V
      14: aload_0
      15: iconst_1
      16: putfield      #12                 // Field ignoreMaxSegments:Z
      19: aload_0
      20: invokespecial #13                 // Method org/infinispan/distribution/ch/impl/SyncConsistentHashFactory$Builder.doCopyOwners:()V
      23: return

  protected void addOwner(int, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: getfield      #14                 // Field segmentOwners:[Ljava/util/List;
       4: iload_1
       5: aaload
       6: astore_3
       7: aload_3
       8: invokeinterface #15,  1           // InterfaceMethod java/util/List.size:()I
      13: aload_0
      14: getfield      #16                 // Field actualNumOwners:I
      17: if_icmpge     159
      20: aload_0
      21: aload_2
      22: aload_3
      23: aload_0
      24: getfield      #4                  // Field currentLevel:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      27: invokespecial #17                 // Method locationAlreadyAdded:(Lorg/infinispan/remoting/transport/Address;Ljava/util/List;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Z
      30: ifne          159
      33: aload_0
      34: getfield      #12                 // Field ignoreMaxSegments:Z
      37: ifne          130
      40: aload_3
      41: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifeq          88
      49: aload_0
      50: aload_2
      51: iconst_1
      52: invokevirtual #19                 // Method computeExpectedSegmentsForNode:(Lorg/infinispan/remoting/transport/Address;I)D
      55: ldc2_w        #20                 // double 1.2000000476837158d
      58: dmul
      59: invokestatic  #22                 // Method java/lang/Math.round:(D)J
      62: lstore        4
      64: aload_0
      65: getfield      #23                 // Field stats:Lorg/infinispan/distribution/ch/impl/OwnershipStatistics;
      68: aload_2
      69: invokevirtual #24                 // Method org/infinispan/distribution/ch/impl/OwnershipStatistics.getPrimaryOwned:(Lorg/infinispan/remoting/transport/Address;)I
      72: i2l
      73: lload         4
      75: lcmp
      76: ifge          85
      79: aload_0
      80: iload_1
      81: aload_2
      82: invokevirtual #25                 // Method addOwnerNoCheck:(ILorg/infinispan/remoting/transport/Address;)V
      85: goto          159
      88: aload_0
      89: aload_2
      90: aload_0
      91: getfield      #16                 // Field actualNumOwners:I
      94: invokevirtual #19                 // Method computeExpectedSegmentsForNode:(Lorg/infinispan/remoting/transport/Address;I)D
      97: ldc2_w        #26                 // double 1.100000023841858d
     100: dmul
     101: invokestatic  #22                 // Method java/lang/Math.round:(D)J
     104: lstore        4
     106: aload_0
     107: getfield      #23                 // Field stats:Lorg/infinispan/distribution/ch/impl/OwnershipStatistics;
     110: aload_2
     111: invokevirtual #28                 // Method org/infinispan/distribution/ch/impl/OwnershipStatistics.getOwned:(Lorg/infinispan/remoting/transport/Address;)I
     114: i2l
     115: lload         4
     117: lcmp
     118: ifge          127
     121: aload_0
     122: iload_1
     123: aload_2
     124: invokevirtual #25                 // Method addOwnerNoCheck:(ILorg/infinispan/remoting/transport/Address;)V
     127: goto          159
     130: aload_0
     131: getfield      #29                 // Field capacityFactors:Ljava/util/Map;
     134: aload_2
     135: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     140: checkcast     #31                 // class java/lang/Float
     143: fconst_0
     144: invokestatic  #32                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     147: invokevirtual #33                 // Method java/lang/Float.equals:(Ljava/lang/Object;)Z
     150: ifne          159
     153: aload_0
     154: iload_1
     155: aload_2
     156: invokevirtual #25                 // Method addOwnerNoCheck:(ILorg/infinispan/remoting/transport/Address;)V
     159: return

  protected boolean canAddOwners(java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod java/util/List.size:()I
       6: aload_0
       7: getfield      #7                  // Field topologyInfo:Lorg/infinispan/distribution/topologyaware/TopologyInfo;
      10: aload_0
      11: getfield      #4                  // Field currentLevel:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      14: aload_0
      15: getfield      #16                 // Field actualNumOwners:I
      18: invokevirtual #34                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.getDistinctLocationsCount:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;I)I
      21: if_icmpge     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  protected double computeExpectedSegmentsForNode(org.infinispan.remoting.transport.Address, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field topologyInfo:Lorg/infinispan/distribution/topologyaware/TopologyInfo;
       4: aload_0
       5: getfield      #35                 // Field numSegments:I
       8: iload_2
       9: aload_1
      10: invokevirtual #36                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.computeExpectedSegments:(IILorg/infinispan/remoting/transport/Address;)I
      13: i2d
      14: dreturn

  private boolean locationAlreadyAdded(org.infinispan.remoting.transport.Address, java.util.List<org.infinispan.remoting.transport.Address>, org.infinispan.distribution.topologyaware.TopologyLevel);
    Code:
       0: aload_1
       1: checkcast     #37                 // class org/infinispan/remoting/transport/TopologyAwareAddress
       4: astore        4
       6: iconst_0
       7: istore        5
       9: aload_2
      10: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore        6
      17: aload         6
      19: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          145
      27: aload         6
      29: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #41                 // class org/infinispan/remoting/transport/Address
      37: astore        7
      39: aload         7
      41: checkcast     #37                 // class org/infinispan/remoting/transport/TopologyAwareAddress
      44: astore        8
      46: getstatic     #42                 // Field org/infinispan/distribution/ch/impl/TopologyAwareSyncConsistentHashFactory$1.$SwitchMap$org$infinispan$distribution$topologyaware$TopologyLevel:[I
      49: aload_3
      50: invokevirtual #43                 // Method org/infinispan/distribution/topologyaware/TopologyLevel.ordinal:()I
      53: iaload
      54: tableswitch   { // 1 to 4
                     1: 84
                     2: 98
                     3: 112
                     4: 126
               default: 134
          }
      84: aload         4
      86: aload         8
      88: invokeinterface #44,  2           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.isSameSite:(Lorg/infinispan/remoting/transport/TopologyAwareAddress;)Z
      93: istore        5
      95: goto          134
      98: aload         4
     100: aload         8
     102: invokeinterface #45,  2           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.isSameRack:(Lorg/infinispan/remoting/transport/TopologyAwareAddress;)Z
     107: istore        5
     109: goto          134
     112: aload         4
     114: aload         8
     116: invokeinterface #46,  2           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.isSameMachine:(Lorg/infinispan/remoting/transport/TopologyAwareAddress;)Z
     121: istore        5
     123: goto          134
     126: aload         7
     128: aload_1
     129: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     132: istore        5
     134: iload         5
     136: ifeq          142
     139: goto          145
     142: goto          17
     145: iload         5
     147: ireturn
}
