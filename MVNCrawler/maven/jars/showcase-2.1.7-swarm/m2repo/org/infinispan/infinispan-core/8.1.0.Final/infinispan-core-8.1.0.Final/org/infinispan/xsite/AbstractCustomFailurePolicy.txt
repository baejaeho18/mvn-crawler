Compiled from "AbstractCustomFailurePolicy.java"
public abstract class org.infinispan.xsite.AbstractCustomFailurePolicy<K, V> implements org.infinispan.xsite.CustomFailurePolicy<K, V> {
  protected volatile org.infinispan.Cache<K, V> cache;

  public org.infinispan.xsite.AbstractCustomFailurePolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.infinispan.Cache);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field cache:Lorg/infinispan/Cache;
       5: return

  public void handlePutFailure(java.lang.String, K, V, boolean);
    Code:
       0: return

  public void handleRemoveFailure(java.lang.String, K, V);
    Code:
       0: return

  public void handleReplaceFailure(java.lang.String, K, V, V);
    Code:
       0: return

  public void handleClearFailure(java.lang.String);
    Code:
       0: return

  public void handlePutAllFailure(java.lang.String, java.util.Map<K, V>);
    Code:
       0: return

  public void handlePrepareFailure(java.lang.String, javax.transaction.Transaction);
    Code:
       0: return

  public void handleRollbackFailure(java.lang.String, javax.transaction.Transaction);
    Code:
       0: return

  public void handleCommitFailure(java.lang.String, javax.transaction.Transaction);
    Code:
       0: return
}
