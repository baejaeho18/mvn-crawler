Compiled from "FunctionalNotifierImpl.java"
public final class org.infinispan.functional.impl.FunctionalNotifierImpl<K, V> implements org.infinispan.functional.impl.FunctionalNotifier<K, V> {
  final java.util.List<java.util.function.Consumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>> onCreates;

  final java.util.List<java.util.function.BiConsumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>, org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>> onModifies;

  final java.util.List<java.util.function.Consumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>> onRemoves;

  final java.util.List<java.util.function.Consumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>> onWrites;

  final java.util.List<org.infinispan.commons.api.functional.Listeners$ReadWriteListeners$ReadWriteListener<K, V>> rwListeners;

  final java.util.List<org.infinispan.commons.api.functional.Listeners$WriteListeners$WriteListener<K, V>> writeListeners;

  public org.infinispan.functional.impl.FunctionalNotifierImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #4                  // Field onCreates:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      23: putfield      #5                  // Field onModifies:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
      30: dup
      31: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      34: putfield      #6                  // Field onRemoves:Ljava/util/List;
      37: aload_0
      38: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
      41: dup
      42: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      45: putfield      #7                  // Field onWrites:Ljava/util/List;
      48: aload_0
      49: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
      52: dup
      53: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      56: putfield      #8                  // Field rwListeners:Ljava/util/List;
      59: aload_0
      60: new           #2                  // class java/util/concurrent/CopyOnWriteArrayList
      63: dup
      64: invokespecial #3                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      67: putfield      #9                  // Field writeListeners:Ljava/util/List;
      70: return

  public java.lang.AutoCloseable add(org.infinispan.commons.api.functional.Listeners$WriteListeners$WriteListener<K, V>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeListeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: new           #11                 // class org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #9                  // Field writeListeners:Ljava/util/List;
      20: aconst_null
      21: invokespecial #12                 // Method org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable."<init>":(Ljava/lang/Object;Ljava/util/List;Lorg/infinispan/functional/impl/FunctionalNotifierImpl$1;)V
      24: areturn

  public java.lang.AutoCloseable add(org.infinispan.commons.api.functional.Listeners$ReadWriteListeners$ReadWriteListener<K, V>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field rwListeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: new           #11                 // class org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #8                  // Field rwListeners:Ljava/util/List;
      20: aconst_null
      21: invokespecial #12                 // Method org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable."<init>":(Ljava/lang/Object;Ljava/util/List;Lorg/infinispan/functional/impl/FunctionalNotifierImpl$1;)V
      24: areturn

  public java.lang.AutoCloseable onCreate(java.util.function.Consumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field onCreates:Ljava/util/List;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: new           #11                 // class org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field onCreates:Ljava/util/List;
      20: aconst_null
      21: invokespecial #12                 // Method org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable."<init>":(Ljava/lang/Object;Ljava/util/List;Lorg/infinispan/functional/impl/FunctionalNotifierImpl$1;)V
      24: areturn

  public java.lang.AutoCloseable onModify(java.util.function.BiConsumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>, org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field onModifies:Ljava/util/List;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: new           #11                 // class org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #5                  // Field onModifies:Ljava/util/List;
      20: aconst_null
      21: invokespecial #12                 // Method org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable."<init>":(Ljava/lang/Object;Ljava/util/List;Lorg/infinispan/functional/impl/FunctionalNotifierImpl$1;)V
      24: areturn

  public java.lang.AutoCloseable onRemove(java.util.function.Consumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field onRemoves:Ljava/util/List;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: new           #11                 // class org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #6                  // Field onRemoves:Ljava/util/List;
      20: aconst_null
      21: invokespecial #12                 // Method org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable."<init>":(Ljava/lang/Object;Ljava/util/List;Lorg/infinispan/functional/impl/FunctionalNotifierImpl$1;)V
      24: areturn

  public java.lang.AutoCloseable onWrite(java.util.function.Consumer<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field onWrites:Ljava/util/List;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: new           #11                 // class org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable
      14: dup
      15: aload_1
      16: aload_0
      17: getfield      #7                  // Field onWrites:Ljava/util/List;
      20: aconst_null
      21: invokespecial #12                 // Method org/infinispan/functional/impl/FunctionalNotifierImpl$ListenerCloseable."<init>":(Ljava/lang/Object;Ljava/util/List;Lorg/infinispan/functional/impl/FunctionalNotifierImpl$1;)V
      24: areturn

  public void notifyOnCreate(org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field onCreates:Ljava/util/List;
       4: aload_1
       5: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)Ljava/util/function/Consumer;
      10: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: aload_0
      16: getfield      #8                  // Field rwListeners:Ljava/util/List;
      19: aload_1
      20: invokedynamic #15,  0             // InvokeDynamic #1:accept:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)Ljava/util/function/Consumer;
      25: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      30: return

  public void notifyOnModify(org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>, org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field onModifies:Ljava/util/List;
       4: aload_1
       5: aload_2
       6: invokedynamic #16,  0             // InvokeDynamic #2:accept:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)Ljava/util/function/Consumer;
      11: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      16: aload_0
      17: getfield      #8                  // Field rwListeners:Ljava/util/List;
      20: aload_1
      21: aload_2
      22: invokedynamic #17,  0             // InvokeDynamic #3:accept:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)Ljava/util/function/Consumer;
      27: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      32: return

  public void notifyOnRemove(org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field onRemoves:Ljava/util/List;
       4: aload_1
       5: invokedynamic #18,  0             // InvokeDynamic #4:accept:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)Ljava/util/function/Consumer;
      10: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: aload_0
      16: getfield      #8                  // Field rwListeners:Ljava/util/List;
      19: aload_1
      20: invokedynamic #19,  0             // InvokeDynamic #5:accept:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)Ljava/util/function/Consumer;
      25: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      30: return

  public void notifyOnWrite(java.util.function.Supplier<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field onWrites:Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          27
      12: aload_0
      13: getfield      #7                  // Field onWrites:Ljava/util/List;
      16: aload_1
      17: invokedynamic #21,  0             // InvokeDynamic #6:accept:(Ljava/util/function/Supplier;)Ljava/util/function/Consumer;
      22: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      27: aload_0
      28: getfield      #9                  // Field writeListeners:Ljava/util/List;
      31: invokeinterface #20,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      36: ifne          54
      39: aload_0
      40: getfield      #9                  // Field writeListeners:Ljava/util/List;
      43: aload_1
      44: invokedynamic #22,  0             // InvokeDynamic #7:accept:(Ljava/util/function/Supplier;)Ljava/util/function/Consumer;
      49: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      54: return

  private static void lambda$notifyOnWrite$69(java.util.function.Supplier, org.infinispan.commons.api.functional.Listeners$WriteListeners$WriteListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #23,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       7: checkcast     #24                 // class org/infinispan/commons/api/functional/EntryView$ReadEntryView
      10: invokeinterface #25,  2           // InterfaceMethod org/infinispan/commons/api/functional/Listeners$WriteListeners$WriteListener.onWrite:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)V
      15: return

  private static void lambda$notifyOnWrite$68(java.util.function.Supplier, java.util.function.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #23,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       7: invokeinterface #26,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      12: return

  private static void lambda$notifyOnRemove$67(org.infinispan.commons.api.functional.EntryView$ReadEntryView, org.infinispan.commons.api.functional.Listeners$ReadWriteListeners$ReadWriteListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #27,  2           // InterfaceMethod org/infinispan/commons/api/functional/Listeners$ReadWriteListeners$ReadWriteListener.onRemove:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)V
       7: return

  private static void lambda$notifyOnRemove$66(org.infinispan.commons.api.functional.EntryView$ReadEntryView, java.util.function.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #26,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: return

  private static void lambda$notifyOnModify$65(org.infinispan.commons.api.functional.EntryView$ReadEntryView, org.infinispan.commons.api.functional.EntryView$ReadEntryView, org.infinispan.commons.api.functional.Listeners$ReadWriteListeners$ReadWriteListener);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #28,  3           // InterfaceMethod org/infinispan/commons/api/functional/Listeners$ReadWriteListeners$ReadWriteListener.onModify:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)V
       8: return

  private static void lambda$notifyOnModify$64(org.infinispan.commons.api.functional.EntryView$ReadEntryView, org.infinispan.commons.api.functional.EntryView$ReadEntryView, java.util.function.BiConsumer);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #29,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return

  private static void lambda$notifyOnCreate$63(org.infinispan.commons.api.functional.EntryView$ReadEntryView, org.infinispan.commons.api.functional.Listeners$ReadWriteListeners$ReadWriteListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #30,  2           // InterfaceMethod org/infinispan/commons/api/functional/Listeners$ReadWriteListeners$ReadWriteListener.onCreate:(Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;)V
       7: return

  private static void lambda$notifyOnCreate$62(org.infinispan.commons.api.functional.EntryView$ReadEntryView, java.util.function.Consumer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #26,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: return
}
