Compiled from "TopologyAwareConsistentHashFactory.java"
public class org.infinispan.distribution.ch.impl.TopologyAwareConsistentHashFactory extends org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory {
  public org.infinispan.distribution.ch.impl.TopologyAwareConsistentHashFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory."<init>":()V
       4: return

  protected void addBackupOwners(org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory$Builder);
    Code:
       0: new           #2                  // class org/infinispan/distribution/topologyaware/TopologyInfo
       3: dup
       4: aload_1
       5: invokevirtual #3                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getMembers:()Ljava/util/List;
       8: aload_1
       9: invokevirtual #4                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getCapacityFactors:()Ljava/util/Map;
      12: invokespecial #5                  // Method org/infinispan/distribution/topologyaware/TopologyInfo."<init>":(Ljava/util/Collection;Ljava/util/Map;)V
      15: astore_2
      16: aload_0
      17: aload_1
      18: invokevirtual #6                  // Method removeExtraBackupOwners:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;)V
      21: aload_0
      22: aload_1
      23: aload_2
      24: getstatic     #7                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.SITE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      27: invokespecial #8                  // Method addBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      30: aload_0
      31: aload_1
      32: aload_2
      33: getstatic     #9                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.RACK:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      36: invokespecial #8                  // Method addBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      39: aload_0
      40: aload_1
      41: aload_2
      42: getstatic     #10                 // Field org/infinispan/distribution/topologyaware/TopologyLevel.MACHINE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      45: invokespecial #8                  // Method addBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      48: aload_0
      49: aload_1
      50: aload_2
      51: getstatic     #11                 // Field org/infinispan/distribution/topologyaware/TopologyLevel.NODE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      54: invokespecial #8                  // Method addBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      57: aload_0
      58: aload_1
      59: aload_2
      60: getstatic     #7                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.SITE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      63: invokespecial #12                 // Method replaceBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      66: aload_0
      67: aload_1
      68: aload_2
      69: getstatic     #9                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.RACK:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      72: invokespecial #12                 // Method replaceBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      75: aload_0
      76: aload_1
      77: aload_2
      78: getstatic     #10                 // Field org/infinispan/distribution/topologyaware/TopologyLevel.MACHINE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      81: invokespecial #12                 // Method replaceBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)V
      84: aload_0
      85: aload_1
      86: aload_2
      87: invokespecial #13                 // Method replaceBackupOwnerNoLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;)V
      90: return

  private void addBackupOwnersForLevel(org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory$Builder, org.infinispan.distribution.topologyaware.TopologyInfo, org.infinispan.distribution.topologyaware.TopologyLevel);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: invokespecial #14                 // Method doAddBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;I)Z
      12: ifeq          21
      15: iinc          4, 1
      18: goto          3
      21: return

  private boolean doAddBackupOwnersForLevel(org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory$Builder, org.infinispan.distribution.topologyaware.TopologyInfo, org.infinispan.distribution.topologyaware.TopologyLevel, int);
    Code:
       0: iconst_1
       1: istore        5
       3: iconst_0
       4: istore        6
       6: iload         6
       8: aload_1
       9: invokevirtual #15                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getNumSegments:()I
      12: if_icmpge     267
      15: aload_1
      16: iload         6
      18: invokevirtual #16                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getOwners:(I)Ljava/util/List;
      21: astore        7
      23: aload         7
      25: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      30: aload_1
      31: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
      34: if_icmplt     40
      37: goto          261
      40: aload_2
      41: aload_3
      42: aload_1
      43: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
      46: invokevirtual #19                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.getDistinctLocationsCount:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;I)I
      49: istore        8
      51: new           #2                  // class org/infinispan/distribution/topologyaware/TopologyInfo
      54: dup
      55: aload         7
      57: aload_1
      58: invokevirtual #4                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getCapacityFactors:()Ljava/util/Map;
      61: invokespecial #5                  // Method org/infinispan/distribution/topologyaware/TopologyInfo."<init>":(Ljava/util/Collection;Ljava/util/Map;)V
      64: astore        9
      66: aload         9
      68: aload_3
      69: aload_1
      70: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
      73: invokevirtual #19                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.getDistinctLocationsCount:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;I)I
      76: istore        10
      78: iload         10
      80: iload         8
      82: if_icmpne     88
      85: goto          261
      88: aload_2
      89: aload_1
      90: invokevirtual #3                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getMembers:()Ljava/util/List;
      93: aload_1
      94: invokevirtual #4                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getCapacityFactors:()Ljava/util/Map;
      97: invokevirtual #20                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.computeTotalCapacity:(Ljava/util/Collection;Ljava/util/Map;)F
     100: fstore        11
     102: aload_1
     103: invokevirtual #3                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getMembers:()Ljava/util/List;
     106: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     111: astore        12
     113: aload         12
     115: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     120: ifeq          237
     123: aload         12
     125: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     130: checkcast     #24                 // class org/infinispan/remoting/transport/Address
     133: astore        13
     135: iload         4
     137: i2f
     138: aload_1
     139: aload         13
     141: invokevirtual #25                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getCapacityFactor:(Lorg/infinispan/remoting/transport/Address;)F
     144: fmul
     145: fload         11
     147: fdiv
     148: f2i
     149: istore        14
     151: aload_2
     152: aload_1
     153: invokevirtual #15                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getNumSegments:()I
     156: aload_1
     157: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
     160: aload         13
     162: invokevirtual #26                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.computeExpectedSegments:(IILorg/infinispan/remoting/transport/Address;)I
     165: iload         14
     167: iadd
     168: istore        15
     170: aload_1
     171: aload         13
     173: invokevirtual #27                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getOwned:(Lorg/infinispan/remoting/transport/Address;)I
     176: iload         15
     178: if_icmpge     234
     181: aload         7
     183: aload         13
     185: invokeinterface #28,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     190: ifne          234
     193: aload_0
     194: aload         7
     196: aload         13
     198: aload_3
     199: invokespecial #29                 // Method locationIsDuplicate:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Z
     202: ifne          234
     205: aload_1
     206: iload         6
     208: aload         13
     210: invokevirtual #30                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.addOwner:(ILorg/infinispan/remoting/transport/Address;)Z
     213: pop
     214: iinc          10, 1
     217: aload         7
     219: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     224: aload_1
     225: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
     228: if_icmplt     234
     231: goto          237
     234: goto          113
     237: iload         10
     239: iload         8
     241: if_icmpge     261
     244: aload         7
     246: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
     251: aload_1
     252: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
     255: if_icmpge     261
     258: iconst_0
     259: istore        5
     261: iinc          6, 1
     264: goto          6
     267: iload         5
     269: ifne          276
     272: iconst_1
     273: goto          277
     276: iconst_0
     277: ireturn

  private void replaceBackupOwnersForLevel(org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory$Builder, org.infinispan.distribution.topologyaware.TopologyInfo, org.infinispan.distribution.topologyaware.TopologyLevel);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: invokespecial #31                 // Method doReplaceBackupOwnersForLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;Lorg/infinispan/distribution/topologyaware/TopologyLevel;I)Z
      12: ifeq          21
      15: iinc          4, 1
      18: goto          3
      21: return

  private boolean doReplaceBackupOwnersForLevel(org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory$Builder, org.infinispan.distribution.topologyaware.TopologyInfo, org.infinispan.distribution.topologyaware.TopologyLevel, int);
    Code:
       0: iconst_1
       1: istore        5
       3: iconst_0
       4: istore        6
       6: iload         6
       8: aload_1
       9: invokevirtual #15                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getNumSegments:()I
      12: if_icmpge     280
      15: aload_1
      16: iload         6
      18: invokevirtual #16                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getOwners:(I)Ljava/util/List;
      21: astore        7
      23: aload_2
      24: aload_3
      25: aload_1
      26: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
      29: invokevirtual #19                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.getDistinctLocationsCount:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;I)I
      32: istore        8
      34: new           #2                  // class org/infinispan/distribution/topologyaware/TopologyInfo
      37: dup
      38: aload         7
      40: aload_1
      41: invokevirtual #4                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getCapacityFactors:()Ljava/util/Map;
      44: invokespecial #5                  // Method org/infinispan/distribution/topologyaware/TopologyInfo."<init>":(Ljava/util/Collection;Ljava/util/Map;)V
      47: astore        9
      49: aload         9
      51: aload_3
      52: aload_1
      53: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
      56: invokevirtual #19                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.getDistinctLocationsCount:(Lorg/infinispan/distribution/topologyaware/TopologyLevel;I)I
      59: istore        10
      61: iload         10
      63: iload         8
      65: if_icmpne     71
      68: goto          274
      71: aload_2
      72: aload_1
      73: invokevirtual #3                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getMembers:()Ljava/util/List;
      76: aload_1
      77: invokevirtual #4                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getCapacityFactors:()Ljava/util/Map;
      80: invokevirtual #20                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.computeTotalCapacity:(Ljava/util/Collection;Ljava/util/Map;)F
      83: fstore        11
      85: aload         7
      87: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      92: iconst_1
      93: isub
      94: istore        12
      96: iload         12
      98: iconst_1
      99: if_icmplt     264
     102: aload         7
     104: iload         12
     106: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     111: checkcast     #24                 // class org/infinispan/remoting/transport/Address
     114: astore        13
     116: aload_0
     117: aload         7
     119: aload         13
     121: aload_3
     122: invokespecial #29                 // Method locationIsDuplicate:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Z
     125: ifeq          258
     128: aload_1
     129: invokevirtual #3                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getMembers:()Ljava/util/List;
     132: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     137: astore        14
     139: aload         14
     141: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          258
     149: aload         14
     151: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #24                 // class org/infinispan/remoting/transport/Address
     159: astore        15
     161: aload_2
     162: aload_1
     163: invokevirtual #15                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getNumSegments:()I
     166: aload_1
     167: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
     170: aload         15
     172: invokevirtual #26                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.computeExpectedSegments:(IILorg/infinispan/remoting/transport/Address;)I
     175: istore        16
     177: iload         4
     179: i2f
     180: aload_1
     181: aload         15
     183: invokevirtual #25                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getCapacityFactor:(Lorg/infinispan/remoting/transport/Address;)F
     186: fmul
     187: fload         11
     189: fdiv
     190: f2i
     191: istore        17
     193: aload_1
     194: aload         15
     196: invokevirtual #27                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getOwned:(Lorg/infinispan/remoting/transport/Address;)I
     199: iload         16
     201: iload         17
     203: iadd
     204: if_icmpge     255
     207: aload         7
     209: aload         15
     211: invokeinterface #28,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     216: ifne          255
     219: aload_0
     220: aload         7
     222: aload         15
     224: aload_3
     225: invokespecial #29                 // Method locationIsDuplicate:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Z
     228: ifne          255
     231: aload_1
     232: iload         6
     234: aload         15
     236: invokevirtual #30                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.addOwner:(ILorg/infinispan/remoting/transport/Address;)Z
     239: pop
     240: aload_1
     241: iload         6
     243: aload         13
     245: invokevirtual #33                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.removeOwner:(ILorg/infinispan/remoting/transport/Address;)Z
     248: pop
     249: iinc          10, 1
     252: goto          258
     255: goto          139
     258: iinc          12, -1
     261: goto          96
     264: iload         10
     266: iload         8
     268: if_icmpge     274
     271: iconst_0
     272: istore        5
     274: iinc          6, 1
     277: goto          6
     280: iload         5
     282: ifne          289
     285: iconst_1
     286: goto          290
     289: iconst_0
     290: ireturn

  private void replaceBackupOwnerNoLevel(org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory$Builder, org.infinispan.distribution.topologyaware.TopologyInfo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_m1
       4: iconst_0
       5: invokespecial #34                 // Method doReplaceBackupOwnersNoLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;II)V
       8: aload_0
       9: aload_1
      10: aload_2
      11: iconst_m1
      12: iconst_m1
      13: invokespecial #34                 // Method doReplaceBackupOwnersNoLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;II)V
      16: aload_0
      17: aload_1
      18: aload_2
      19: iconst_0
      20: iconst_0
      21: invokespecial #34                 // Method doReplaceBackupOwnersNoLevel:(Lorg/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder;Lorg/infinispan/distribution/topologyaware/TopologyInfo;II)V
      24: return

  private void doReplaceBackupOwnersNoLevel(org.infinispan.distribution.ch.impl.DefaultConsistentHashFactory$Builder, org.infinispan.distribution.topologyaware.TopologyInfo, int, int);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
       4: iconst_1
       5: isub
       6: istore        5
       8: iload         5
      10: iconst_1
      11: if_icmplt     201
      14: iconst_0
      15: istore        6
      17: iload         6
      19: aload_1
      20: invokevirtual #15                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getNumSegments:()I
      23: if_icmpge     195
      26: aload_1
      27: iload         6
      29: invokevirtual #16                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getOwners:(I)Ljava/util/List;
      32: astore        7
      34: aload         7
      36: iload         5
      38: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #24                 // class org/infinispan/remoting/transport/Address
      46: astore        8
      48: aload_2
      49: aload_1
      50: invokevirtual #15                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getNumSegments:()I
      53: aload_1
      54: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
      57: aload         8
      59: invokevirtual #26                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.computeExpectedSegments:(IILorg/infinispan/remoting/transport/Address;)I
      62: iload         4
      64: iadd
      65: istore        9
      67: aload_1
      68: aload         8
      70: invokevirtual #27                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getOwned:(Lorg/infinispan/remoting/transport/Address;)I
      73: iload         9
      75: if_icmple     189
      78: aload_1
      79: invokevirtual #3                  // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getMembers:()Ljava/util/List;
      82: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      87: astore        10
      89: aload         10
      91: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          189
      99: aload         10
     101: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #24                 // class org/infinispan/remoting/transport/Address
     109: astore        11
     111: aload_2
     112: aload_1
     113: invokevirtual #15                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getNumSegments:()I
     116: aload_1
     117: invokevirtual #18                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getActualNumOwners:()I
     120: aload         11
     122: invokevirtual #26                 // Method org/infinispan/distribution/topologyaware/TopologyInfo.computeExpectedSegments:(IILorg/infinispan/remoting/transport/Address;)I
     125: iload_3
     126: iadd
     127: istore        12
     129: aload_1
     130: aload         11
     132: invokevirtual #27                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.getOwned:(Lorg/infinispan/remoting/transport/Address;)I
     135: iload         12
     137: if_icmpge     186
     140: aload         7
     142: aload         11
     144: invokeinterface #28,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     149: ifne          186
     152: aload_0
     153: aload         7
     155: aload         11
     157: aload         8
     159: invokespecial #35                 // Method maintainsDiversity:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/remoting/transport/Address;)Z
     162: ifeq          186
     165: aload_1
     166: iload         6
     168: aload         11
     170: invokevirtual #30                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.addOwner:(ILorg/infinispan/remoting/transport/Address;)Z
     173: pop
     174: aload_1
     175: iload         6
     177: aload         8
     179: invokevirtual #33                 // Method org/infinispan/distribution/ch/impl/DefaultConsistentHashFactory$Builder.removeOwner:(ILorg/infinispan/remoting/transport/Address;)Z
     182: pop
     183: goto          189
     186: goto          89
     189: iinc          6, 1
     192: goto          17
     195: iinc          5, -1
     198: goto          8
     201: return

  private java.lang.Object getLocationId(org.infinispan.remoting.transport.Address, org.infinispan.distribution.topologyaware.TopologyLevel);
    Code:
       0: aload_1
       1: checkcast     #36                 // class org/infinispan/remoting/transport/TopologyAwareAddress
       4: astore_3
       5: getstatic     #37                 // Field org/infinispan/distribution/ch/impl/TopologyAwareConsistentHashFactory$1.$SwitchMap$org$infinispan$distribution$topologyaware$TopologyLevel:[I
       8: aload_2
       9: invokevirtual #38                 // Method org/infinispan/distribution/topologyaware/TopologyLevel.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 4
                     1: 44
                     2: 73
                     3: 111
                     4: 163
               default: 169
          }
      44: new           #39                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #41                 // String
      53: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_3
      57: invokeinterface #43,  1           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.getSiteId:()Ljava/lang/String;
      62: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: astore        4
      70: goto          196
      73: new           #39                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      80: aload_3
      81: invokeinterface #43,  1           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.getSiteId:()Ljava/lang/String;
      86: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #45                 // String |
      91: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_3
      95: invokeinterface #46,  1           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.getRackId:()Ljava/lang/String;
     100: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: astore        4
     108: goto          196
     111: new           #39                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     118: aload_3
     119: invokeinterface #43,  1           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.getSiteId:()Ljava/lang/String;
     124: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #45                 // String |
     129: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_3
     133: invokeinterface #46,  1           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.getRackId:()Ljava/lang/String;
     138: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #45                 // String |
     143: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_3
     147: invokeinterface #47,  1           // InterfaceMethod org/infinispan/remoting/transport/TopologyAwareAddress.getMachineId:()Ljava/lang/String;
     152: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: astore        4
     160: goto          196
     163: aload_1
     164: astore        4
     166: goto          196
     169: new           #48                 // class java/lang/IllegalStateException
     172: dup
     173: new           #39                 // class java/lang/StringBuilder
     176: dup
     177: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     180: ldc           #49                 // String Unknown level:
     182: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_2
     186: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     189: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     195: athrow
     196: aload         4
     198: areturn

  private boolean locationIsDuplicate(java.util.List<org.infinispan.remoting.transport.Address>, org.infinispan.remoting.transport.Address, org.infinispan.distribution.topologyaware.TopologyLevel);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #52                 // Method getLocationId:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Ljava/lang/Object;
       6: astore        4
       8: aload_1
       9: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        5
      16: aload         5
      18: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          64
      26: aload         5
      28: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #24                 // class org/infinispan/remoting/transport/Address
      36: astore        6
      38: aload         6
      40: aload_2
      41: if_acmpeq     61
      44: aload_0
      45: aload         6
      47: aload_3
      48: invokespecial #52                 // Method getLocationId:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Ljava/lang/Object;
      51: aload         4
      53: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          61
      59: iconst_1
      60: ireturn
      61: goto          16
      64: iconst_0
      65: ireturn

  private boolean maintainsDiversity(java.util.List<org.infinispan.remoting.transport.Address>, org.infinispan.remoting.transport.Address, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #7                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.SITE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
       7: invokespecial #54                 // Method maintainsDiversity:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Z
      10: ifeq          43
      13: aload_0
      14: aload_1
      15: aload_2
      16: aload_3
      17: getstatic     #9                  // Field org/infinispan/distribution/topologyaware/TopologyLevel.RACK:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      20: invokespecial #54                 // Method maintainsDiversity:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Z
      23: ifeq          43
      26: aload_0
      27: aload_1
      28: aload_2
      29: aload_3
      30: getstatic     #10                 // Field org/infinispan/distribution/topologyaware/TopologyLevel.MACHINE:Lorg/infinispan/distribution/topologyaware/TopologyLevel;
      33: invokespecial #54                 // Method maintainsDiversity:(Ljava/util/List;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  private boolean maintainsDiversity(java.util.List<org.infinispan.remoting.transport.Address>, org.infinispan.remoting.transport.Address, org.infinispan.remoting.transport.Address, org.infinispan.distribution.topologyaware.TopologyLevel);
    Code:
       0: new           #55                 // class java/util/HashSet
       3: dup
       4: aload_1
       5: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #56                 // Method java/util/HashSet."<init>":(I)V
      13: astore        5
      15: new           #55                 // class java/util/HashSet
      18: dup
      19: aload_1
      20: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      25: invokespecial #56                 // Method java/util/HashSet."<init>":(I)V
      28: astore        6
      30: aload         6
      32: aload_0
      33: aload_2
      34: aload         4
      36: invokespecial #52                 // Method getLocationId:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Ljava/lang/Object;
      39: invokeinterface #57,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_1
      46: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore        7
      53: aload         7
      55: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          119
      63: aload         7
      65: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #24                 // class org/infinispan/remoting/transport/Address
      73: astore        8
      75: aload         5
      77: aload_0
      78: aload         8
      80: aload         4
      82: invokespecial #52                 // Method getLocationId:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Ljava/lang/Object;
      85: invokeinterface #57,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      90: pop
      91: aload         8
      93: aload_3
      94: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          116
     100: aload         6
     102: aload_0
     103: aload         8
     105: aload         4
     107: invokespecial #52                 // Method getLocationId:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/distribution/topologyaware/TopologyLevel;)Ljava/lang/Object;
     110: invokeinterface #57,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          53
     119: aload         6
     121: invokeinterface #58,  1           // InterfaceMethod java/util/Set.size:()I
     126: aload         5
     128: invokeinterface #58,  1           // InterfaceMethod java/util/Set.size:()I
     133: if_icmplt     140
     136: iconst_1
     137: goto          141
     140: iconst_0
     141: ireturn
}
