Compiled from "BaseBackupInterceptor.java"
public class org.infinispan.interceptors.xsite.BaseBackupInterceptor extends org.infinispan.interceptors.base.CommandInterceptor {
  protected org.infinispan.xsite.BackupSender backupSender;

  protected org.infinispan.transaction.impl.TransactionTable txTable;

  private static final org.infinispan.util.logging.Log log;

  public org.infinispan.interceptors.xsite.BaseBackupInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/interceptors/base/CommandInterceptor."<init>":()V
       4: return

  void init(org.infinispan.xsite.BackupSender, org.infinispan.transaction.impl.TransactionTable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field backupSender:Lorg/infinispan/xsite/BackupSender;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field txTable:Lorg/infinispan/transaction/impl/TransactionTable;
      10: return

  public final java.lang.Object visitClearCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.ClearCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #4                  // Method handleMultipleKeysWriteCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/WriteCommand;)Ljava/lang/Object;
       6: areturn

  protected java.lang.Object handleMultipleKeysWriteCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.WriteCommand) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod org/infinispan/context/InvocationContext.isOriginLocal:()Z
       6: ifeq          17
       9: aload_0
      10: aload_2
      11: invokevirtual #6                  // Method skipXSiteBackup:(Lorg/infinispan/commands/FlagAffectedCommand;)Z
      14: ifeq          24
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #7                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      23: areturn
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #7                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      30: astore_3
      31: aload_0
      32: getfield      #2                  // Field backupSender:Lorg/infinispan/xsite/BackupSender;
      35: aload_0
      36: getfield      #2                  // Field backupSender:Lorg/infinispan/xsite/BackupSender;
      39: aload_2
      40: invokeinterface #8,  2            // InterfaceMethod org/infinispan/xsite/BackupSender.backupWrite:(Lorg/infinispan/commands/write/WriteCommand;)Lorg/infinispan/remoting/transport/BackupResponse;
      45: aload_2
      46: invokeinterface #9,  3            // InterfaceMethod org/infinispan/xsite/BackupSender.processResponses:(Lorg/infinispan/remoting/transport/BackupResponse;Lorg/infinispan/commands/VisitableCommand;)V
      51: aload_3
      52: areturn

  protected boolean isTxFromRemoteSite(org.infinispan.transaction.xa.GlobalTransaction);
    Code:
       0: aload_0
       1: getfield      #3                  // Field txTable:Lorg/infinispan/transaction/impl/TransactionTable;
       4: aload_1
       5: invokevirtual #10                 // Method org/infinispan/transaction/impl/TransactionTable.getLocalTransaction:(Lorg/infinispan/transaction/xa/GlobalTransaction;)Lorg/infinispan/transaction/impl/LocalTransaction;
       8: astore_2
       9: aload_2
      10: ifnull        24
      13: aload_2
      14: invokevirtual #11                 // Method org/infinispan/transaction/impl/LocalTransaction.isFromRemoteSite:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  protected boolean shouldInvokeRemoteTxCommand(org.infinispan.context.impl.TxInvocationContext);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.isOriginLocal:()Z
       6: ifeq          34
       9: aload_1
      10: invokeinterface #13,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.hasModifications:()Z
      15: ifeq          34
      18: aload_1
      19: invokeinterface #14,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      24: invokevirtual #15                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.isFromStateTransfer:()Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: istore_2
      36: aload_0
      37: invokevirtual #16                 // Method getLog:()Lorg/infinispan/util/logging/Log;
      40: ldc           #17                 // String Should backup remotely? %s
      42: iload_2
      43: invokestatic  #18                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      51: iload_2
      52: ireturn

  protected final boolean skipXSiteBackup(org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: aload_1
       1: getstatic     #20                 // Field org/infinispan/context/Flag.SKIP_XSITE_BACKUP:Lorg/infinispan/context/Flag;
       4: invokeinterface #21,  2           // InterfaceMethod org/infinispan/commands/FlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
       9: ireturn

  protected org.infinispan.util.logging.Log getLog();
    Code:
       0: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #23                 // class org/infinispan/interceptors/xsite/BaseBackupInterceptor
       2: invokestatic  #24                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
