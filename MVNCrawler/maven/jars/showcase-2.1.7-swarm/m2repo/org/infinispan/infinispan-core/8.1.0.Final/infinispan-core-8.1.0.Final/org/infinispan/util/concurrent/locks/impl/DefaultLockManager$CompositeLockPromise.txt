Compiled from "DefaultLockManager.java"
class org.infinispan.util.concurrent.locks.impl.DefaultLockManager$CompositeLockPromise implements org.infinispan.util.concurrent.locks.KeyAwareLockPromise, org.infinispan.util.concurrent.locks.LockListener, java.util.concurrent.Callable<java.lang.Void> {
  private final java.util.List<org.infinispan.util.concurrent.locks.impl.DefaultLockManager$KeyAwareExtendedLockPromise> lockPromiseList;

  private final java.util.concurrent.CompletableFuture<java.lang.Void> notifier;

  volatile org.infinispan.util.concurrent.locks.LockState lockState;

  private org.infinispan.util.concurrent.locks.impl.DefaultLockManager$CompositeLockPromise(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/infinispan/util/concurrent/locks/LockState.ACQUIRED:Lorg/infinispan/util/concurrent/locks/LockState;
       8: putfield      #4                  // Field lockState:Lorg/infinispan/util/concurrent/locks/LockState;
      11: aload_0
      12: new           #5                  // class java/util/ArrayList
      15: dup
      16: iload_1
      17: invokespecial #6                  // Method java/util/ArrayList."<init>":(I)V
      20: putfield      #7                  // Field lockPromiseList:Ljava/util/List;
      23: aload_0
      24: new           #8                  // class java/util/concurrent/CompletableFuture
      27: dup
      28: invokespecial #9                  // Method java/util/concurrent/CompletableFuture."<init>":()V
      31: putfield      #10                 // Field notifier:Ljava/util/concurrent/CompletableFuture;
      34: return

  public void addLock(org.infinispan.util.concurrent.locks.impl.DefaultLockManager$KeyAwareExtendedLockPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field lockPromiseList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void markListAsFinal();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lockPromiseList:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #15                 // class org/infinispan/util/concurrent/locks/LockPromise
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokeinterface #16,  2           // InterfaceMethod org/infinispan/util/concurrent/locks/LockPromise.addListener:(Lorg/infinispan/util/concurrent/locks/LockListener;)V
      36: goto          10
      39: return

  public boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lockPromiseList:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_1
      20: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #15                 // class org/infinispan/util/concurrent/locks/LockPromise
      28: astore_2
      29: aload_2
      30: invokeinterface #17,  1           // InterfaceMethod org/infinispan/util/concurrent/locks/LockPromise.isAvailable:()Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: goto          10
      43: iconst_1
      44: ireturn

  public void lock() throws java.lang.InterruptedException, org.infinispan.util.concurrent.TimeoutException;
    Code:
       0: aconst_null
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aconst_null
       5: astore_3
       6: aconst_null
       7: astore        4
       9: aload_0
      10: getfield      #7                  // Field lockPromiseList:Ljava/util/List;
      13: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        5
      20: aload         5
      22: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          85
      30: aload         5
      32: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #18                 // class org/infinispan/util/concurrent/locks/ExtendedLockPromise
      40: astore        6
      42: aload         6
      44: invokeinterface #19,  1           // InterfaceMethod org/infinispan/util/concurrent/locks/ExtendedLockPromise.lock:()V
      49: goto          82
      52: astore        7
      54: aload         7
      56: astore_1
      57: goto          82
      60: astore        7
      62: aload         7
      64: astore_2
      65: goto          82
      68: astore        7
      70: aload         7
      72: astore_3
      73: goto          82
      76: astore        7
      78: aload         7
      80: astore        4
      82: goto          20
      85: aload_1
      86: ifnull        91
      89: aload_1
      90: athrow
      91: aload_2
      92: ifnull        97
      95: aload_2
      96: athrow
      97: aload_3
      98: ifnull        103
     101: aload_3
     102: athrow
     103: aload         4
     105: ifnull        111
     108: aload         4
     110: athrow
     111: return
    Exception table:
       from    to  target type
          42    49    52   Class java/lang/InterruptedException
          42    49    60   Class org/infinispan/util/concurrent/TimeoutException
          42    49    68   Class org/infinispan/util/concurrent/locks/DeadlockDetectedException
          42    49    76   Class java/lang/RuntimeException

  public void addListener(org.infinispan.util.concurrent.locks.LockListener);
    Code:
       0: aload_0
       1: getfield      #10                 // Field notifier:Ljava/util/concurrent/CompletableFuture;
       4: aload_0
       5: aload_1
       6: invokedynamic #24,  0             // InvokeDynamic #0:run:(Lorg/infinispan/util/concurrent/locks/impl/DefaultLockManager$CompositeLockPromise;Lorg/infinispan/util/concurrent/locks/LockListener;)Ljava/lang/Runnable;
      11: invokevirtual #25                 // Method java/util/concurrent/CompletableFuture.thenRun:(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
      14: pop
      15: return

  public void onEvent(org.infinispan.util.concurrent.locks.LockState);
    Code:
       0: aload_1
       1: getstatic     #3                  // Field org/infinispan/util/concurrent/locks/LockState.ACQUIRED:Lorg/infinispan/util/concurrent/locks/LockState;
       4: if_acmpeq     60
       7: invokestatic  #26                 // Method org/infinispan/util/concurrent/locks/impl/DefaultLockManager.access$300:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: getstatic     #3                  // Field org/infinispan/util/concurrent/locks/LockState.ACQUIRED:Lorg/infinispan/util/concurrent/locks/LockState;
      14: aload_1
      15: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          60
      21: aload_0
      22: getfield      #7                  // Field lockPromiseList:Ljava/util/List;
      25: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore_2
      31: aload_2
      32: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          60
      40: aload_2
      41: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #18                 // class org/infinispan/util/concurrent/locks/ExtendedLockPromise
      49: astore_3
      50: aload_3
      51: aload_1
      52: invokeinterface #28,  2           // InterfaceMethod org/infinispan/util/concurrent/locks/ExtendedLockPromise.cancel:(Lorg/infinispan/util/concurrent/locks/LockState;)V
      57: goto          31
      60: aload_0
      61: invokevirtual #29                 // Method isAvailable:()Z
      64: ifeq          76
      67: aload_0
      68: getfield      #10                 // Field notifier:Ljava/util/concurrent/CompletableFuture;
      71: aconst_null
      72: invokevirtual #30                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      75: pop
      76: return

  public void addListener(org.infinispan.util.concurrent.locks.KeyAwareLockListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field lockPromiseList:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          37
      19: aload_2
      20: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #31                 // class org/infinispan/util/concurrent/locks/impl/DefaultLockManager$KeyAwareExtendedLockPromise
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokevirtual #32                 // Method org/infinispan/util/concurrent/locks/impl/DefaultLockManager$KeyAwareExtendedLockPromise.addListener:(Lorg/infinispan/util/concurrent/locks/KeyAwareLockListener;)V
      34: goto          10
      37: return

  public java.lang.Void call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lockPromiseList:Ljava/util/List;
       4: invokedynamic #33,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
       9: invokeinterface #34,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      14: aconst_null
      15: areturn

  public org.infinispan.util.concurrent.locks.impl.DefaultLockManager$CompositeLockPromise scheduleLockTimeoutTask(java.util.concurrent.ScheduledExecutorService, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnull        40
       4: lload_2
       5: lconst_0
       6: lcmp
       7: ifle          40
      10: aload_0
      11: invokevirtual #29                 // Method isAvailable:()Z
      14: ifne          40
      17: aload_1
      18: aload_0
      19: lload_2
      20: aload         4
      22: invokeinterface #35,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      27: astore        5
      29: aload_0
      30: aload         5
      32: invokedynamic #36,  0             // InvokeDynamic #2:onEvent:(Ljava/util/concurrent/ScheduledFuture;)Lorg/infinispan/util/concurrent/locks/LockListener;
      37: invokevirtual #37                 // Method addListener:(Lorg/infinispan/util/concurrent/locks/LockListener;)V
      40: aload_0
      41: areturn

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method call:()Ljava/lang/Void;
       4: areturn

  private static void lambda$scheduleLockTimeoutTask$45(java.util.concurrent.ScheduledFuture, org.infinispan.util.concurrent.locks.LockState);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
       7: pop
       8: return

  private static void lambda$call$44(org.infinispan.util.concurrent.locks.impl.DefaultLockManager$KeyAwareExtendedLockPromise);
    Code:
       0: aload_0
       1: getstatic     #40                 // Field org/infinispan/util/concurrent/locks/LockState.TIMED_OUT:Lorg/infinispan/util/concurrent/locks/LockState;
       4: invokevirtual #41                 // Method org/infinispan/util/concurrent/locks/impl/DefaultLockManager$KeyAwareExtendedLockPromise.cancel:(Lorg/infinispan/util/concurrent/locks/LockState;)V
       7: return

  private void lambda$addListener$43(org.infinispan.util.concurrent.locks.LockListener);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field lockState:Lorg/infinispan/util/concurrent/locks/LockState;
       5: invokeinterface #42,  2           // InterfaceMethod org/infinispan/util/concurrent/locks/LockListener.onEvent:(Lorg/infinispan/util/concurrent/locks/LockState;)V
      10: return

  org.infinispan.util.concurrent.locks.impl.DefaultLockManager$CompositeLockPromise(int, org.infinispan.util.concurrent.locks.impl.DefaultLockManager$1);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return
}
