Compiled from "LocalEntryRetriever.java"
public class org.infinispan.iteration.impl.LocalEntryRetriever<K, V> implements org.infinispan.iteration.impl.EntryRetriever<K, V> {
  protected final org.infinispan.util.logging.Log log;

  private final boolean trace;

  protected final int batchSize;

  protected final long timeout;

  protected final java.util.concurrent.TimeUnit unit;

  protected org.infinispan.container.DataContainer<K, V> dataContainer;

  protected org.infinispan.persistence.manager.PersistenceManager persistenceManager;

  protected java.util.concurrent.ExecutorService executorService;

  protected org.infinispan.Cache<K, V> cache;

  protected org.infinispan.factories.ComponentRegistry componentRegistry;

  protected org.infinispan.util.TimeService timeService;

  protected org.infinispan.container.InternalEntryFactory entryFactory;

  protected org.infinispan.commons.equivalence.Equivalence<K> keyEquivalence;

  protected final java.util.concurrent.Executor withinThreadExecutor;

  protected final org.infinispan.iteration.impl.LocalEntryRetriever<K, V>.PartitionListener partitionListener;

  boolean passivationEnabled;

  public void inject(org.infinispan.container.DataContainer<K, V>, org.infinispan.persistence.manager.PersistenceManager, java.util.concurrent.ExecutorService, org.infinispan.util.TimeService, org.infinispan.container.InternalEntryFactory, org.infinispan.Cache<K, V>, org.infinispan.configuration.cache.Configuration, org.infinispan.factories.ComponentRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      10: aload_0
      11: aload_3
      12: putfield      #4                  // Field executorService:Ljava/util/concurrent/ExecutorService;
      15: aload_0
      16: aload         4
      18: putfield      #5                  // Field timeService:Lorg/infinispan/util/TimeService;
      21: aload_0
      22: aload         5
      24: putfield      #6                  // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
      27: aload_0
      28: aload         6
      30: putfield      #7                  // Field cache:Lorg/infinispan/Cache;
      33: aload_0
      34: aload         7
      36: invokevirtual #8                  // Method org/infinispan/configuration/cache/Configuration.persistence:()Lorg/infinispan/configuration/cache/PersistenceConfiguration;
      39: invokevirtual #9                  // Method org/infinispan/configuration/cache/PersistenceConfiguration.passivation:()Z
      42: putfield      #10                 // Field passivationEnabled:Z
      45: aload_0
      46: aload         7
      48: invokevirtual #11                 // Method org/infinispan/configuration/cache/Configuration.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfiguration;
      51: invokevirtual #12                 // Method org/infinispan/configuration/cache/DataContainerConfiguration.keyEquivalence:()Lorg/infinispan/commons/equivalence/Equivalence;
      54: putfield      #13                 // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      57: aload_0
      58: aload         8
      60: putfield      #14                 // Field componentRegistry:Lorg/infinispan/factories/ComponentRegistry;
      63: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/Cache;
       4: aload_0
       5: getfield      #15                 // Field partitionListener:Lorg/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener;
       8: invokeinterface #16,  2           // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;)V
      13: return

  public org.infinispan.iteration.impl.LocalEntryRetriever(int, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #19                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
      12: putfield      #20                 // Field log:Lorg/infinispan/util/logging/Log;
      15: aload_0
      16: aload_0
      17: getfield      #20                 // Field log:Lorg/infinispan/util/logging/Log;
      20: invokeinterface #21,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      25: putfield      #1                  // Field trace:Z
      28: aload_0
      29: new           #22                 // class org/infinispan/util/concurrent/WithinThreadExecutor
      32: dup
      33: invokespecial #23                 // Method org/infinispan/util/concurrent/WithinThreadExecutor."<init>":()V
      36: putfield      #24                 // Field withinThreadExecutor:Ljava/util/concurrent/Executor;
      39: aload_0
      40: new           #25                 // class org/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener
      43: dup
      44: aload_0
      45: invokespecial #26                 // Method org/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener."<init>":(Lorg/infinispan/iteration/impl/LocalEntryRetriever;)V
      48: putfield      #15                 // Field partitionListener:Lorg/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener;
      51: iload_1
      52: ifgt          65
      55: new           #27                 // class java/lang/IllegalArgumentException
      58: dup
      59: ldc           #28                 // String batchSize must be greater than 0
      61: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: lload_2
      66: lconst_0
      67: lcmp
      68: ifgt          81
      71: new           #27                 // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #30                 // String timeout must be greater than 0
      77: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload         4
      83: ifnonnull     96
      86: new           #31                 // class java/lang/NullPointerException
      89: dup
      90: ldc           #32                 // String unit must not be null
      92: invokespecial #33                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_0
      97: iload_1
      98: putfield      #34                 // Field batchSize:I
     101: aload_0
     102: lload_2
     103: putfield      #35                 // Field timeout:J
     106: aload_0
     107: aload         4
     109: putfield      #36                 // Field unit:Ljava/util/concurrent/TimeUnit;
     112: return

  public <C> void startRetrievingValues(java.util.UUID, org.infinispan.remoting.transport.Address, java.util.Set<java.lang.Integer>, java.util.Set<K>, org.infinispan.filter.KeyValueFilter<? super K, ? super V>, org.infinispan.filter.Converter<? super K, ? super V, C>, java.util.Set<org.infinispan.context.Flag>);
    Code:
       0: new           #37                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #38                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected <C> void wireFilterAndConverterDependencies(org.infinispan.filter.KeyValueFilter<? super K, ? super V>, org.infinispan.filter.Converter<? super K, ? super V, C>);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: getfield      #14                 // Field componentRegistry:Lorg/infinispan/factories/ComponentRegistry;
       8: aload_1
       9: invokevirtual #39                 // Method org/infinispan/factories/ComponentRegistry.wireDependencies:(Ljava/lang/Object;)V
      12: aload_2
      13: ifnull        29
      16: aload_2
      17: aload_1
      18: if_acmpeq     29
      21: aload_0
      22: getfield      #14                 // Field componentRegistry:Lorg/infinispan/factories/ComponentRegistry;
      25: aload_2
      26: invokevirtual #39                 // Method org/infinispan/factories/ComponentRegistry.wireDependencies:(Ljava/lang/Object;)V
      29: return

  public <C> void receiveResponse(java.util.UUID, org.infinispan.remoting.transport.Address, java.util.Set<java.lang.Integer>, java.util.Set<java.lang.Integer>, java.util.Collection<org.infinispan.container.entries.CacheEntry<K, C>>, org.infinispan.commons.CacheException);
    Code:
       0: new           #37                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #38                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected boolean shouldUseLoader(java.util.Set<org.infinispan.context.Flag>);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: getstatic     #40                 // Field org/infinispan/context/Flag.SKIP_CACHE_LOAD:Lorg/infinispan/context/Flag;
       8: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected <C> void registerIterator(org.infinispan.iteration.impl.LocalEntryRetriever<K, V>.Itr<C>, java.util.Set<org.infinispan.context.Flag>);
    Code:
       0: aload_2
       1: ifnull        16
       4: aload_2
       5: getstatic     #42                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
       8: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ifne          67
      16: aload_0
      17: getfield      #15                 // Field partitionListener:Lorg/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener;
      20: getfield      #43                 // Field org/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener.iterators:Ljava/util/Set;
      23: aload_1
      24: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: getfield      #15                 // Field partitionListener:Lorg/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener;
      34: getfield      #45                 // Field org/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener.currentMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      37: getstatic     #46                 // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
      40: if_acmpeq     67
      43: aload_0
      44: getfield      #15                 // Field partitionListener:Lorg/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener;
      47: getfield      #43                 // Field org/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener.iterators:Ljava/util/Set;
      50: aload_1
      51: invokeinterface #47,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      56: pop
      57: aload_0
      58: getfield      #20                 // Field log:Lorg/infinispan/util/logging/Log;
      61: invokeinterface #48,  1           // InterfaceMethod org/infinispan/util/logging/Log.partitionDegraded:()Lorg/infinispan/partitionhandling/AvailabilityException;
      66: athrow
      67: return

  public <C> org.infinispan.commons.util.CloseableIterator<org.infinispan.container.entries.CacheEntry<K, C>> retrieveEntries(org.infinispan.filter.KeyValueFilter<? super K, ? super V>, org.infinispan.filter.Converter<? super K, ? super V, ? extends C>, java.util.Set<org.infinispan.context.Flag>, org.infinispan.iteration.impl.EntryRetriever$SegmentListener);
    Code:
       0: aload_1
       1: instanceof    #49                 // class org/infinispan/filter/KeyValueFilterConverter
       4: ifeq          47
       7: aload_1
       8: aload_2
       9: if_acmpeq     16
      12: aload_2
      13: ifnonnull     47
      16: iconst_1
      17: istore        5
      19: aconst_null
      20: astore        6
      22: aload_0
      23: getfield      #1                  // Field trace:Z
      26: ifeq          53
      29: aload_0
      30: getfield      #20                 // Field log:Lorg/infinispan/util/logging/Log;
      33: ldc           #50                 // String User supplied a KeyValueFilterConverter for both filter and converter, so ignoring converter
      35: iconst_0
      36: anewarray     #51                 // class java/lang/Object
      39: invokeinterface #52,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      44: goto          53
      47: iconst_0
      48: istore        5
      50: aload_2
      51: astore        6
      53: aload_0
      54: aload_1
      55: aload         6
      57: invokevirtual #53                 // Method wireFilterAndConverterDependencies:(Lorg/infinispan/filter/KeyValueFilter;Lorg/infinispan/filter/Converter;)V
      60: aload_3
      61: ifnull        76
      64: aload_3
      65: getstatic     #40                 // Field org/infinispan/context/Flag.SKIP_CACHE_LOAD:Lorg/infinispan/context/Flag;
      68: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      73: ifne          94
      76: aload_0
      77: getfield      #7                  // Field cache:Lorg/infinispan/Cache;
      80: invokeinterface #54,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      85: invokevirtual #8                  // Method org/infinispan/configuration/cache/Configuration.persistence:()Lorg/infinispan/configuration/cache/PersistenceConfiguration;
      88: invokevirtual #55                 // Method org/infinispan/configuration/cache/PersistenceConfiguration.usingStores:()Z
      91: ifne          160
      94: aload_3
      95: ifnull        110
      98: aload_3
      99: getstatic     #42                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
     102: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     107: ifne          133
     110: aload_0
     111: getfield      #15                 // Field partitionListener:Lorg/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener;
     114: getfield      #45                 // Field org/infinispan/iteration/impl/LocalEntryRetriever$PartitionListener.currentMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
     117: getstatic     #46                 // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
     120: if_acmpeq     133
     123: aload_0
     124: getfield      #20                 // Field log:Lorg/infinispan/util/logging/Log;
     127: invokeinterface #48,  1           // InterfaceMethod org/infinispan/util/logging/Log.partitionDegraded:()Lorg/infinispan/partitionhandling/AvailabilityException;
     132: athrow
     133: aload_0
     134: getfield      #2                  // Field dataContainer:Lorg/infinispan/container/DataContainer;
     137: invokeinterface #56,  1           // InterfaceMethod org/infinispan/container/DataContainer.iterator:()Ljava/util/Iterator;
     142: astore        7
     144: new           #57                 // class org/infinispan/iteration/impl/LocalEntryRetriever$DataContainerIterator
     147: dup
     148: aload_0
     149: aload         7
     151: aload_1
     152: aload         6
     154: iload         5
     156: invokespecial #58                 // Method org/infinispan/iteration/impl/LocalEntryRetriever$DataContainerIterator."<init>":(Lorg/infinispan/iteration/impl/LocalEntryRetriever;Ljava/util/Iterator;Lorg/infinispan/filter/KeyValueFilter;Lorg/infinispan/filter/Converter;Z)V
     159: areturn
     160: new           #59                 // class org/infinispan/iteration/impl/LocalEntryRetriever$Itr
     163: dup
     164: aload_0
     165: aload_0
     166: getfield      #34                 // Field batchSize:I
     169: invokespecial #60                 // Method org/infinispan/iteration/impl/LocalEntryRetriever$Itr."<init>":(Lorg/infinispan/iteration/impl/LocalEntryRetriever;I)V
     172: astore        7
     174: aload_0
     175: aload         7
     177: aload_3
     178: invokevirtual #61                 // Method registerIterator:(Lorg/infinispan/iteration/impl/LocalEntryRetriever$Itr;Ljava/util/Set;)V
     181: new           #62                 // class org/infinispan/iteration/impl/LocalEntryRetriever$ItrQueuerHandler
     184: dup
     185: aload_0
     186: aload         7
     188: invokespecial #63                 // Method org/infinispan/iteration/impl/LocalEntryRetriever$ItrQueuerHandler."<init>":(Lorg/infinispan/iteration/impl/LocalEntryRetriever;Lorg/infinispan/iteration/impl/LocalEntryRetriever$Itr;)V
     191: astore        8
     193: aload_0
     194: getfield      #4                  // Field executorService:Ljava/util/concurrent/ExecutorService;
     197: new           #64                 // class org/infinispan/iteration/impl/LocalEntryRetriever$1
     200: dup
     201: aload_0
     202: aload         6
     204: aload         8
     206: aload_1
     207: iload         5
     209: aload_3
     210: aload         7
     212: invokespecial #65                 // Method org/infinispan/iteration/impl/LocalEntryRetriever$1."<init>":(Lorg/infinispan/iteration/impl/LocalEntryRetriever;Lorg/infinispan/filter/Converter;Lorg/infinispan/iteration/impl/LocalEntryRetriever$ItrQueuerHandler;Lorg/infinispan/filter/KeyValueFilter;ZLjava/util/Set;Lorg/infinispan/iteration/impl/LocalEntryRetriever$Itr;)V
     215: invokeinterface #66,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
     220: pop
     221: aload         7
     223: areturn

  protected static <T> T unwrapMarshalledvalue(T);
    Code:
       0: aload_0
       1: instanceof    #67                 // class org/infinispan/marshall/core/MarshalledValue
       4: ifeq          15
       7: aload_0
       8: checkcast     #67                 // class org/infinispan/marshall/core/MarshalledValue
      11: invokevirtual #68                 // Method org/infinispan/marshall/core/MarshalledValue.get:()Ljava/lang/Object;
      14: areturn
      15: aload_0
      16: areturn

  static boolean access$000(org.infinispan.iteration.impl.LocalEntryRetriever);
    Code:
       0: aload_0
       1: getfield      #1                  // Field trace:Z
       4: ireturn
}
