Compiled from "BackupReceiverRepositoryImpl.java"
public class org.infinispan.xsite.BackupReceiverRepositoryImpl implements org.infinispan.xsite.BackupReceiverRepository {
  private static org.infinispan.util.logging.Log log;

  private final java.util.concurrent.ConcurrentMap<org.infinispan.xsite.BackupReceiverRepositoryImpl$SiteCachePair, org.infinispan.xsite.BackupReceiver> backupReceivers;

  public org.infinispan.manager.EmbeddedCacheManager cacheManager;

  public org.infinispan.xsite.BackupReceiverRepositoryImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public void setup(org.infinispan.manager.EmbeddedCacheManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
       5: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
       4: aload_0
       5: invokeinterface #6,  2            // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.addListener:(Ljava/lang/Object;)V
      10: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
       4: aload_0
       5: invokeinterface #7,  2            // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.removeListener:(Ljava/lang/Object;)V
      10: return

  public void cacheStopped(org.infinispan.notifications.cachemanagerlistener.event.CacheStoppedEvent);
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #9                  // String Processing cache stop: %s. Cache name: \'%s\'
       5: aload_1
       6: aload_1
       7: invokeinterface #10,  1           // InterfaceMethod org/infinispan/notifications/cachemanagerlistener/event/CacheStoppedEvent.getCacheName:()Ljava/lang/String;
      12: invokeinterface #11,  4           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
      21: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      26: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          103
      41: aload_2
      42: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #16                 // class org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair
      50: astore_3
      51: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      54: ldc           #17                 // String Processing entry %s
      56: aload_3
      57: invokeinterface #18,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      62: aload_3
      63: getfield      #19                 // Field org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair.localCacheName:Ljava/lang/String;
      66: aload_1
      67: invokeinterface #10,  1           // InterfaceMethod org/infinispan/notifications/cachemanagerlistener/event/CacheStoppedEvent.getCacheName:()Ljava/lang/String;
      72: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          100
      78: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      81: ldc           #21                 // String Deregistering backup receiver %s
      83: aload_3
      84: invokeinterface #18,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      89: aload_0
      90: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
      93: aload_3
      94: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: goto          32
     103: return

  public org.infinispan.xsite.BackupReceiver getBackupReceiver(java.lang.String, java.lang.String);
    Code:
       0: new           #16                 // class org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair
       3: dup
       4: aload_2
       5: aload_1
       6: invokespecial #23                 // Method org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       9: astore_3
      10: aload_0
      11: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
      14: aload_3
      15: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #25                 // class org/infinispan/xsite/BackupReceiver
      23: astore        4
      25: aload         4
      27: ifnull        33
      30: aload         4
      32: areturn
      33: aload_0
      34: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
      37: invokeinterface #26,  1           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getDefaultCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      42: astore        5
      44: aload_0
      45: aload_1
      46: aload_2
      47: aload         5
      49: ldc           #28                 // String ___defaultcache
      51: invokespecial #29                 // Method isBackupForRemoteCache:(Ljava/lang/String;Ljava/lang/String;Lorg/infinispan/configuration/cache/Configuration;Ljava/lang/String;)Z
      54: ifeq          104
      57: aload_0
      58: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
      61: invokeinterface #30,  1           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getCache:()Lorg/infinispan/Cache;
      66: astore        6
      68: aload_0
      69: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
      72: aload_3
      73: aload         6
      75: invokestatic  #31                 // Method createBackupReceiver:(Lorg/infinispan/Cache;)Lorg/infinispan/xsite/BackupReceiver;
      78: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload_3
      85: ldc           #28                 // String ___defaultcache
      87: invokevirtual #33                 // Method org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair.setLocalCacheName:(Ljava/lang/String;)V
      90: aload_0
      91: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
      94: aload_3
      95: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #25                 // class org/infinispan/xsite/BackupReceiver
     103: areturn
     104: aload_0
     105: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
     108: invokeinterface #34,  1           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getCacheNames:()Ljava/util/Set;
     113: astore        6
     115: aload         6
     117: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     122: astore        7
     124: aload         7
     126: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     131: ifeq          224
     134: aload         7
     136: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     141: checkcast     #35                 // class java/lang/String
     144: astore        8
     146: aload_0
     147: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
     150: aload         8
     152: invokeinterface #36,  2           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getCacheConfiguration:(Ljava/lang/String;)Lorg/infinispan/configuration/cache/Configuration;
     157: astore        9
     159: aload_0
     160: aload_1
     161: aload_2
     162: aload         9
     164: aload         8
     166: invokespecial #29                 // Method isBackupForRemoteCache:(Ljava/lang/String;Ljava/lang/String;Lorg/infinispan/configuration/cache/Configuration;Ljava/lang/String;)Z
     169: ifeq          221
     172: aload_0
     173: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
     176: aload         8
     178: invokeinterface #37,  2           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getCache:(Ljava/lang/String;)Lorg/infinispan/Cache;
     183: astore        10
     185: aload_3
     186: aload         8
     188: invokevirtual #33                 // Method org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair.setLocalCacheName:(Ljava/lang/String;)V
     191: aload_0
     192: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
     195: aload_3
     196: aload         10
     198: invokestatic  #31                 // Method createBackupReceiver:(Lorg/infinispan/Cache;)Lorg/infinispan/xsite/BackupReceiver;
     201: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: pop
     207: aload_0
     208: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
     211: aload_3
     212: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     217: checkcast     #25                 // class org/infinispan/xsite/BackupReceiver
     220: areturn
     221: goto          124
     224: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
     227: ldc           #38                 // String Did not find any backup explicitly configured backup cache for remote cache/site: %s/%s. Using %s
     229: aload_1
     230: aload_2
     231: aload_2
     232: invokeinterface #39,  5           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     237: aload_0
     238: getfield      #5                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
     241: aload_2
     242: invokeinterface #37,  2           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getCache:(Ljava/lang/String;)Lorg/infinispan/Cache;
     247: astore        7
     249: aload_0
     250: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
     253: aload_3
     254: aload         7
     256: invokestatic  #31                 // Method createBackupReceiver:(Lorg/infinispan/Cache;)Lorg/infinispan/xsite/BackupReceiver;
     259: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     264: pop
     265: aload_3
     266: aload         7
     268: invokeinterface #40,  1           // InterfaceMethod org/infinispan/Cache.getName:()Ljava/lang/String;
     273: invokevirtual #33                 // Method org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair.setLocalCacheName:(Ljava/lang/String;)V
     276: aload_0
     277: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
     280: aload_3
     281: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     286: checkcast     #25                 // class org/infinispan/xsite/BackupReceiver
     289: areturn

  private boolean isBackupForRemoteCache(java.lang.String, java.lang.String, org.infinispan.configuration.cache.Configuration, java.lang.String);
    Code:
       0: aload_3
       1: invokevirtual #41                 // Method org/infinispan/configuration/cache/Configuration.sites:()Lorg/infinispan/configuration/cache/SitesConfiguration;
       4: invokevirtual #42                 // Method org/infinispan/configuration/cache/SitesConfiguration.backupFor:()Lorg/infinispan/configuration/cache/BackupForConfiguration;
       7: aload_1
       8: aload_2
       9: invokevirtual #43                 // Method org/infinispan/configuration/cache/BackupForConfiguration.isBackupFor:(Ljava/lang/String;Ljava/lang/String;)Z
      12: istore        5
      14: iload         5
      16: ifeq          33
      19: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      22: ldc           #44                 // String Found local cache \'%s\' is backup for cache \'%s\' from site \'%s\'
      24: aload         4
      26: aload_2
      27: aload_1
      28: invokeinterface #45,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      33: iload         5
      35: ireturn

  public void replace(java.lang.String, java.lang.String, org.infinispan.xsite.BackupReceiver);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
       4: new           #16                 // class org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair
       7: dup
       8: aload_2
       9: aload_1
      10: invokespecial #23                 // Method org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: aload_3
      14: invokeinterface #46,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  public org.infinispan.xsite.BackupReceiver get(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backupReceivers:Ljava/util/concurrent/ConcurrentMap;
       4: new           #16                 // class org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #23                 // Method org/infinispan/xsite/BackupReceiverRepositoryImpl$SiteCachePair."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #25                 // class org/infinispan/xsite/BackupReceiver
      21: areturn

  private static org.infinispan.xsite.BackupReceiver createBackupReceiver(org.infinispan.Cache<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokeinterface #47,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
       6: invokevirtual #48                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
       9: invokevirtual #49                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
      12: invokevirtual #50                 // Method org/infinispan/configuration/cache/CacheMode.isClustered:()Z
      15: ifeq          29
      18: new           #51                 // class org/infinispan/xsite/ClusteredCacheBackupReceiver
      21: dup
      22: aload_0
      23: invokespecial #52                 // Method org/infinispan/xsite/ClusteredCacheBackupReceiver."<init>":(Lorg/infinispan/Cache;)V
      26: goto          37
      29: new           #53                 // class org/infinispan/xsite/LocalCacheBackupReceiver
      32: dup
      33: aload_0
      34: invokespecial #54                 // Method org/infinispan/xsite/LocalCacheBackupReceiver."<init>":(Lorg/infinispan/Cache;)V
      37: areturn

  static {};
    Code:
       0: ldc           #55                 // class org/infinispan/xsite/BackupReceiverRepositoryImpl
       2: invokestatic  #56                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
