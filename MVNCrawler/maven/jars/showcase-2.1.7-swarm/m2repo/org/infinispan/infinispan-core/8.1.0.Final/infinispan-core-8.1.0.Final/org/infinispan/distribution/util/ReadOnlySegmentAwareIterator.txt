Compiled from "ReadOnlySegmentAwareIterator.java"
public class org.infinispan.distribution.util.ReadOnlySegmentAwareIterator<E> implements java.util.Iterator<E> {
  protected final java.util.Iterator<E> iter;

  protected final org.infinispan.distribution.ch.ConsistentHash ch;

  protected final java.util.Set<java.lang.Integer> allowedSegments;

  protected E next;

  public org.infinispan.distribution.util.ReadOnlySegmentAwareIterator(java.util.Iterator<E>, org.infinispan.distribution.ch.ConsistentHash, java.util.Set<java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field iter:Ljava/util/Iterator;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field ch:Lorg/infinispan/distribution/ch/ConsistentHash;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field allowedSegments:Ljava/util/Set;
      19: aload_0
      20: aload_0
      21: invokevirtual #5                  // Method findNext:()Ljava/lang/Object;
      24: putfield      #6                  // Field next:Ljava/lang/Object;
      27: return

  protected boolean valueAllowed(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field ch:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getSegment:(Ljava/lang/Object;)I
      10: istore_2
      11: aload_0
      12: getfield      #4                  // Field allowedSegments:Ljava/util/Set;
      15: iload_2
      16: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokeinterface #9,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: ireturn

  protected E findNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iter:Ljava/util/Iterator;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ifeq          35
      12: aload_0
      13: getfield      #2                  // Field iter:Ljava/util/Iterator;
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: astore_1
      22: aload_0
      23: aload_1
      24: invokevirtual #12                 // Method valueAllowed:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: aload_1
      31: areturn
      32: goto          0
      35: aconst_null
      36: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field next:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public E next();
    Code:
       0: aload_0
       1: getfield      #6                  // Field next:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #13                 // class java/util/NoSuchElementException
      12: dup
      13: invokespecial #14                 // Method java/util/NoSuchElementException."<init>":()V
      16: athrow
      17: aload_0
      18: aload_0
      19: invokevirtual #5                  // Method findNext:()Ljava/lang/Object;
      22: putfield      #6                  // Field next:Ljava/lang/Object;
      25: aload_1
      26: areturn

  public void remove();
    Code:
       0: new           #15                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #16                 // String remove
       6: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
