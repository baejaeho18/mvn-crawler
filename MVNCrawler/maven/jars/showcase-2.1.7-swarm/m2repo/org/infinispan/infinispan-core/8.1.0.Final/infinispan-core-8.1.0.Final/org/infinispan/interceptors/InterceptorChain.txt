Compiled from "InterceptorChain.java"
public class org.infinispan.interceptors.InterceptorChain {
  private static final org.infinispan.util.logging.Log log;

  private volatile org.infinispan.interceptors.base.CommandInterceptor firstInChain;

  final java.util.concurrent.locks.ReentrantLock lock;

  final org.infinispan.factories.components.ComponentMetadataRepo componentMetadataRepo;

  public org.infinispan.interceptors.InterceptorChain(org.infinispan.factories.components.ComponentMetadataRepo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field componentMetadataRepo:Lorg/infinispan/factories/components/ComponentMetadataRepo;
      20: return

  private void printChainInfo();
    Code:
       0: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
       3: invokeinterface #7,  1            // InterfaceMethod org/infinispan/util/logging/Log.isDebugEnabled:()Z
       8: ifeq          39
      11: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
      14: ldc           #8                  // String Interceptor chain size: %d
      16: aload_0
      17: invokevirtual #9                  // Method size:()I
      20: invokeinterface #10,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;I)V
      25: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
      28: ldc           #11                 // String Interceptor chain is: %s
      30: aload_0
      31: invokevirtual #12                 // Method toString:()Ljava/lang/String;
      34: invokeinterface #13,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      39: return

  private void validateCustomInterceptor(java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_1
       1: ldc           #14                 // class org/infinispan/factories/annotations/Inject
       3: invokestatic  #15                 // Method org/infinispan/commons/util/ReflectionUtil.getAllMethodsShallow:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifeq          42
      14: aload_1
      15: ldc           #17                 // class org/infinispan/factories/annotations/Start
      17: invokestatic  #15                 // Method org/infinispan/commons/util/ReflectionUtil.getAllMethodsShallow:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
      20: invokeinterface #16,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      25: ifeq          42
      28: aload_1
      29: ldc           #18                 // class org/infinispan/factories/annotations/Stop
      31: invokestatic  #15                 // Method org/infinispan/commons/util/ReflectionUtil.getAllMethodsShallow:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;
      34: invokeinterface #16,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      39: ifne          68
      42: aload_0
      43: getfield      #5                  // Field componentMetadataRepo:Lorg/infinispan/factories/components/ComponentMetadataRepo;
      46: aload_1
      47: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      50: invokevirtual #20                 // Method org/infinispan/factories/components/ComponentMetadataRepo.findComponentMetadata:(Ljava/lang/String;)Lorg/infinispan/factories/components/ComponentMetadata;
      53: ifnonnull     68
      56: getstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
      59: aload_1
      60: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      63: invokeinterface #21,  2           // InterfaceMethod org/infinispan/util/logging/Log.customInterceptorExpectsInjection:(Ljava/lang/String;)V
      68: return

  private void assertNotAdded(java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method containsInterceptorType:(Ljava/lang/Class;)Z
       5: ifeq          55
       8: new           #23                 // class org/infinispan/commons/CacheConfigurationException
      11: dup
      12: new           #24                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #26                 // String Detected interceptor of type [
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #28                 // String ] being added to the interceptor chain
      33: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokestatic  #29                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #31                 // String  more than once!
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #33                 // Method org/infinispan/commons/CacheConfigurationException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: return

  public void addInterceptor(org.infinispan.interceptors.base.CommandInterceptor, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_3
       5: aload_3
       6: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_1
      10: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload         4
      18: invokespecial #36                 // Method assertNotAdded:(Ljava/lang/Class;)V
      21: aload_0
      22: aload         4
      24: invokespecial #37                 // Method validateCustomInterceptor:(Ljava/lang/Class;)V
      27: iload_2
      28: ifne          49
      31: aload_1
      32: aload_0
      33: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      36: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      39: aload_0
      40: aload_1
      41: putfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      44: aload_3
      45: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      48: return
      49: aload_0
      50: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      53: ifnonnull     61
      56: aload_3
      57: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      60: return
      61: aload_0
      62: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      65: astore        5
      67: iconst_0
      68: istore        6
      70: aload         5
      72: ifnull        114
      75: iinc          6, 1
      78: iload         6
      80: iload_2
      81: if_icmpne     104
      84: aload_1
      85: aload         5
      87: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      90: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      93: aload         5
      95: aload_1
      96: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      99: aload_3
     100: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     103: return
     104: aload         5
     106: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
     109: astore        5
     111: goto          70
     114: new           #42                 // class java/lang/IllegalArgumentException
     117: dup
     118: new           #24                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #43                 // String Invalid index:
     127: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: iload         6
     132: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: ldc           #44                 // String  !
     137: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: astore        7
     149: aload_3
     150: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     153: aload         7
     155: athrow
    Exception table:
       from    to  target type
           9    44   147   any
          49    56   147   any
          61    99   147   any
         104   149   147   any

  public void removeInterceptor(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_2
       5: aload_2
       6: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_0
      10: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      13: ifnonnull     21
      16: aload_2
      17: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      20: return
      21: iload_1
      22: ifne          41
      25: aload_0
      26: aload_0
      27: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      30: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      33: putfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      36: aload_2
      37: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      40: return
      41: aload_0
      42: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      45: astore_3
      46: iconst_0
      47: istore        4
      49: aload_3
      50: ifnull        98
      53: iinc          4, 1
      56: iload         4
      58: iload_1
      59: if_icmpne     90
      62: aload_3
      63: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      66: ifnonnull     74
      69: aload_2
      70: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      73: return
      74: aload_3
      75: aload_3
      76: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      79: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      82: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      85: aload_2
      86: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      89: return
      90: aload_3
      91: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      94: astore_3
      95: goto          49
      98: new           #42                 // class java/lang/IllegalArgumentException
     101: dup
     102: new           #24                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #46                 // String Invalid position:
     111: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: iload_1
     115: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     118: ldc           #44                 // String  !
     120: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: astore        5
     132: aload_2
     133: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     136: aload         5
     138: athrow
    Exception table:
       from    to  target type
           9    16   130   any
          21    36   130   any
          41    69   130   any
          74    85   130   any
          90   132   130   any

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       6: astore_2
       7: aload_2
       8: ifnull        22
      11: iinc          1, 1
      14: aload_2
      15: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      18: astore_2
      19: goto          7
      22: iload_1
      23: ireturn

  public java.util.List<org.infinispan.interceptors.base.CommandInterceptor> asList();
    Code:
       0: aload_0
       1: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: ifnonnull     11
       7: invokestatic  #47                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
      10: areturn
      11: new           #48                 // class java/util/LinkedList
      14: dup
      15: invokespecial #49                 // Method java/util/LinkedList."<init>":()V
      18: astore_1
      19: aload_0
      20: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      23: astore_2
      24: aload_1
      25: aload_2
      26: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_2
      33: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      36: astore_2
      37: aload_2
      38: ifnonnull     24
      41: aload_1
      42: invokestatic  #51                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      45: areturn

  public void removeInterceptor(java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_2
       5: aload_2
       6: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_0
      10: aload_1
      11: invokevirtual #52                 // Method isFirstInChain:(Ljava/lang/Class;)Z
      14: ifeq          28
      17: aload_0
      18: aload_0
      19: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      22: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      25: putfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      28: aload_0
      29: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      32: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      35: astore_3
      36: aload_0
      37: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      40: astore        4
      42: aload_3
      43: ifnull        74
      46: aload_3
      47: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: aload_1
      51: if_acmpne     63
      54: aload         4
      56: aload_3
      57: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      60: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      63: aload_3
      64: astore        4
      66: aload_3
      67: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      70: astore_3
      71: goto          42
      74: aload_2
      75: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      78: goto          90
      81: astore        5
      83: aload_2
      84: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      87: aload         5
      89: athrow
      90: return
    Exception table:
       from    to  target type
           9    74    81   any
          81    83    81   any

  protected boolean isFirstInChain(java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_0
       1: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: aload_1
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean addInterceptorAfter(org.infinispan.interceptors.base.CommandInterceptor, java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_3
       5: aload_3
       6: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_1
      10: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload         4
      18: invokespecial #36                 // Method assertNotAdded:(Ljava/lang/Class;)V
      21: aload_0
      22: aload         4
      24: invokespecial #37                 // Method validateCustomInterceptor:(Ljava/lang/Class;)V
      27: aload_0
      28: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      31: astore        5
      33: aload         5
      35: ifnull        85
      38: aload         5
      40: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      43: aload_2
      44: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          75
      50: aload_1
      51: aload         5
      53: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      56: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      59: aload         5
      61: aload_1
      62: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      65: iconst_1
      66: istore        6
      68: aload_3
      69: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      72: iload         6
      74: ireturn
      75: aload         5
      77: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      80: astore        5
      82: goto          33
      85: iconst_0
      86: istore        6
      88: aload_3
      89: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      92: iload         6
      94: ireturn
      95: astore        7
      97: aload_3
      98: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     101: aload         7
     103: athrow
    Exception table:
       from    to  target type
           9    68    95   any
          75    88    95   any
          95    97    95   any

  public boolean addInterceptorBefore(org.infinispan.interceptors.base.CommandInterceptor, java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>, boolean);
    Code:
       0: iload_3
       1: ifeq          12
       4: aload_0
       5: aload_1
       6: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokespecial #37                 // Method validateCustomInterceptor:(Ljava/lang/Class;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #54                 // Method addInterceptorBefore:(Lorg/infinispan/interceptors/base/CommandInterceptor;Ljava/lang/Class;)Z
      18: ireturn

  public boolean addInterceptorBefore(org.infinispan.interceptors.base.CommandInterceptor, java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_3
       5: aload_3
       6: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_1
      10: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload         4
      18: invokespecial #36                 // Method assertNotAdded:(Ljava/lang/Class;)V
      21: aload_0
      22: aload         4
      24: invokespecial #37                 // Method validateCustomInterceptor:(Ljava/lang/Class;)V
      27: aload_0
      28: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      31: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: aload_2
      35: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          64
      41: aload_1
      42: aload_0
      43: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      46: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      49: aload_0
      50: aload_1
      51: putfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      54: iconst_1
      55: istore        5
      57: aload_3
      58: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      61: iload         5
      63: ireturn
      64: aload_0
      65: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      68: astore        5
      70: aload         5
      72: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      75: ifnull        128
      78: aload         5
      80: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      83: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      86: aload_2
      87: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      90: ifeq          118
      93: aload_1
      94: aload         5
      96: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      99: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
     102: aload         5
     104: aload_1
     105: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
     108: iconst_1
     109: istore        6
     111: aload_3
     112: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     115: iload         6
     117: ireturn
     118: aload         5
     120: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
     123: astore        5
     125: goto          70
     128: iconst_0
     129: istore        6
     131: aload_3
     132: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     135: iload         6
     137: ireturn
     138: astore        7
     140: aload_3
     141: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     144: aload         7
     146: athrow
    Exception table:
       from    to  target type
           9    57   138   any
          64   111   138   any
         118   131   138   any
         138   140   138   any

  public boolean replaceInterceptor(org.infinispan.interceptors.base.CommandInterceptor, java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: astore_3
       5: aload_3
       6: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       9: aload_1
      10: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload         4
      18: invokespecial #36                 // Method assertNotAdded:(Ljava/lang/Class;)V
      21: aload_0
      22: aload         4
      24: invokespecial #37                 // Method validateCustomInterceptor:(Ljava/lang/Class;)V
      27: aload_0
      28: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      31: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: aload_2
      35: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          67
      41: aload_1
      42: aload_0
      43: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      46: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      49: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      52: aload_0
      53: aload_1
      54: putfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      57: iconst_1
      58: istore        5
      60: aload_3
      61: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      64: iload         5
      66: ireturn
      67: aload_0
      68: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      71: astore        5
      73: aload_0
      74: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      77: astore        6
      79: aload         5
      81: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      84: ifnull        142
      87: aload         5
      89: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      92: astore        7
      94: aload         7
      96: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      99: aload_2
     100: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     103: ifeq          131
     106: aload_1
     107: aload         7
     109: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
     112: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
     115: aload         6
     117: aload_1
     118: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
     121: iconst_1
     122: istore        8
     124: aload_3
     125: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     128: iload         8
     130: ireturn
     131: aload         7
     133: astore        6
     135: aload         7
     137: astore        5
     139: goto          79
     142: iconst_0
     143: istore        7
     145: aload_3
     146: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     149: iload         7
     151: ireturn
     152: astore        9
     154: aload_3
     155: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     158: aload         9
     160: athrow
    Exception table:
       from    to  target type
           9    60   152   any
          67   124   152   any
         131   145   152   any
         152   154   152   any

  public void appendInterceptor(org.infinispan.interceptors.base.CommandInterceptor, boolean);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_3
       5: iload_2
       6: ifeq          14
       9: aload_0
      10: aload_3
      11: invokespecial #37                 // Method validateCustomInterceptor:(Ljava/lang/Class;)V
      14: aload_0
      15: aload_3
      16: invokespecial #36                 // Method assertNotAdded:(Ljava/lang/Class;)V
      19: aload_0
      20: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      23: ifnonnull     34
      26: aload_0
      27: aload_1
      28: putfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      31: goto          64
      34: aload_0
      35: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      38: astore        4
      40: aload         4
      42: invokevirtual #55                 // Method org/infinispan/interceptors/base/CommandInterceptor.hasNext:()Z
      45: ifeq          58
      48: aload         4
      50: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      53: astore        4
      55: goto          40
      58: aload         4
      60: aload_1
      61: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      64: aload_1
      65: aconst_null
      66: invokevirtual #39                 // Method org/infinispan/interceptors/base/CommandInterceptor.setNext:(Lorg/infinispan/interceptors/base/CommandInterceptor;)V
      69: return

  public java.lang.Object invoke(org.infinispan.context.InvocationContext, org.infinispan.commands.VisitableCommand);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       6: invokeinterface #56,  3           // InterfaceMethod org/infinispan/commands/VisitableCommand.acceptVisitor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/Visitor;)Ljava/lang/Object;
      11: areturn
      12: astore_3
      13: aload_3
      14: invokevirtual #58                 // Method org/infinispan/commons/CacheException.getCause:()Ljava/lang/Throwable;
      17: instanceof    #59                 // class java/lang/InterruptedException
      20: ifeq          29
      23: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      26: invokevirtual #61                 // Method java/lang/Thread.interrupt:()V
      29: aload_3
      30: athrow
      31: astore_3
      32: aload_3
      33: athrow
      34: astore_3
      35: new           #57                 // class org/infinispan/commons/CacheException
      38: dup
      39: aload_3
      40: invokespecial #64                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           0    11    12   Class org/infinispan/commons/CacheException
           0    11    31   Class java/lang/RuntimeException
           0    11    34   Class java/lang/Throwable

  public org.infinispan.interceptors.base.CommandInterceptor getFirstInChain();
    Code:
       0: aload_0
       1: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: areturn

  public void setFirstInChain(org.infinispan.interceptors.base.CommandInterceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       5: return

  public java.util.List<org.infinispan.interceptors.base.CommandInterceptor> getInterceptorsWhichExtend(java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: new           #48                 // class java/util/LinkedList
       3: dup
       4: invokespecial #49                 // Method java/util/LinkedList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #65                 // Method asList:()Ljava/util/List;
      12: invokeinterface #66,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          66
      27: aload_3
      28: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #69                 // class org/infinispan/interceptors/base/CommandInterceptor
      36: astore        4
      38: aload_1
      39: aload         4
      41: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      44: invokevirtual #70                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      47: istore        5
      49: iload         5
      51: ifeq          63
      54: aload_2
      55: aload         4
      57: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: goto          18
      66: aload_2
      67: areturn

  public java.util.List<org.infinispan.interceptors.base.CommandInterceptor> getInterceptorsWithClass(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: astore_2
       5: new           #71                 // class java/util/ArrayList
       8: dup
       9: iconst_2
      10: invokespecial #72                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_3
      14: aload_2
      15: ifnull        42
      18: aload_2
      19: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: aload_1
      23: if_acmpne     34
      26: aload_3
      27: aload_2
      28: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_2
      35: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      38: astore_2
      39: goto          14
      42: aload_3
      43: areturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
      12: astore_2
      13: aload_2
      14: ifnull        44
      17: aload_1
      18: ldc           #73                 // String \n\t>>
      20: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_2
      26: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      32: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_2
      37: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      40: astore_2
      41: goto          13
      44: aload_1
      45: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn

  public boolean containsInstance(org.infinispan.interceptors.base.CommandInterceptor);
    Code:
       0: aload_0
       1: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: astore_2
       5: aload_2
       6: ifnull        24
       9: aload_2
      10: aload_1
      11: if_acmpne     16
      14: iconst_1
      15: ireturn
      16: aload_2
      17: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      20: astore_2
      21: goto          5
      24: iconst_0
      25: ireturn

  public boolean containsInterceptorType(java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #74                 // Method containsInterceptorType:(Ljava/lang/Class;Z)Z
       6: ireturn

  public boolean containsInterceptorType(java.lang.Class<? extends org.infinispan.interceptors.base.CommandInterceptor>, boolean);
    Code:
       0: aload_0
       1: getfield      #38                 // Field firstInChain:Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: astore_3
       5: aload_3
       6: ifnull        47
       9: iload_2
      10: ifeq          26
      13: aload_1
      14: aload_3
      15: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #70                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      21: ifeq          39
      24: iconst_1
      25: ireturn
      26: aload_3
      27: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: aload_1
      31: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: aload_3
      40: invokevirtual #41                 // Method org/infinispan/interceptors/base/CommandInterceptor.getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
      43: astore_3
      44: goto          5
      47: iconst_0
      48: ireturn

  static {};
    Code:
       0: ldc           #75                 // class org/infinispan/interceptors/InterceptorChain
       2: invokestatic  #76                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #6                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
