Compiled from "EntrySetCommand.java"
class org.infinispan.commands.read.EntrySetCommand$BackingEntrySet<K, V> extends org.infinispan.commands.read.AbstractCloseableIteratorCollection<org.infinispan.container.entries.CacheEntry<K, V>, K, V> implements org.infinispan.CacheSet<org.infinispan.container.entries.CacheEntry<K, V>> {
  org.infinispan.commands.read.EntrySetCommand$BackingEntrySet(org.infinispan.Cache);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/commands/read/AbstractCloseableIteratorCollection."<init>":(Lorg/infinispan/Cache;)V
       5: return

  public org.infinispan.commons.util.CloseableIterator<org.infinispan.container.entries.CacheEntry<K, V>> iterator();
    Code:
       0: new           #2                  // class org/infinispan/util/DataContainerRemoveIterator
       3: dup
       4: aload_0
       5: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
       8: invokespecial #4                  // Method org/infinispan/util/DataContainerRemoveIterator."<init>":(Lorg/infinispan/Cache;)V
      11: astore_1
      12: new           #5                  // class org/infinispan/commands/read/EntrySetCommand$EntryWrapperIterator
      15: dup
      16: aload_0
      17: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      20: aload_1
      21: invokespecial #6                  // Method org/infinispan/commands/read/EntrySetCommand$EntryWrapperIterator."<init>":(Lorg/infinispan/Cache;Ljava/util/Iterator;)V
      24: areturn

  public org.infinispan.commons.util.CloseableSpliterator<org.infinispan.container.entries.CacheEntry<K, V>> spliterator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #7,  1            // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       9: invokeinterface #8,  1            // InterfaceMethod org/infinispan/AdvancedCache.getDataContainer:()Lorg/infinispan/container/DataContainer;
      14: astore_1
      15: new           #2                  // class org/infinispan/util/DataContainerRemoveIterator
      18: dup
      19: aload_0
      20: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      23: aload_1
      24: invokespecial #9                  // Method org/infinispan/util/DataContainerRemoveIterator."<init>":(Lorg/infinispan/Cache;Lorg/infinispan/container/DataContainer;)V
      27: invokestatic  #10                 // Method org/infinispan/commons/util/Closeables.iterator:(Ljava/util/Iterator;)Lorg/infinispan/commons/util/CloseableIterator;
      30: aload_1
      31: invokeinterface #11,  1           // InterfaceMethod org/infinispan/container/DataContainer.size:()I
      36: i2l
      37: sipush        4353
      40: invokestatic  #13                 // Method org/infinispan/commons/util/Closeables.spliterator:(Lorg/infinispan/commons/util/CloseableIterator;JI)Lorg/infinispan/commons/util/CloseableSpliterator;
      43: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #7,  1            // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       9: invokeinterface #8,  1            // InterfaceMethod org/infinispan/AdvancedCache.getDataContainer:()Lorg/infinispan/container/DataContainer;
      14: invokeinterface #11,  1           // InterfaceMethod org/infinispan/container/DataContainer.size:()I
      19: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method toEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        49
      10: aload_0
      11: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      14: aload_2
      15: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: invokeinterface #16,  2           // InterfaceMethod org/infinispan/Cache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore_3
      26: aload_3
      27: ifnull        47
      30: aload_3
      31: aload_2
      32: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn
      49: iconst_0
      50: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method toEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        38
      10: aload_0
      11: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      14: aload_2
      15: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: aload_2
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      26: invokeinterface #19,  3           // InterfaceMethod org/infinispan/Cache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean add(org.infinispan.container.entries.CacheEntry<K, V>);
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private java.util.Map$Entry<K, V> toEntry(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #22                 // class java/util/Map$Entry
       4: ifeq          12
       7: aload_1
       8: checkcast     #22                 // class java/util/Map$Entry
      11: areturn
      12: aconst_null
      13: areturn

  private org.infinispan.distribution.ch.ConsistentHash getConsistentHash(org.infinispan.Cache<K, V>);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       6: invokeinterface #23,  1           // InterfaceMethod org/infinispan/AdvancedCache.getDistributionManager:()Lorg/infinispan/distribution/DistributionManager;
      11: astore_2
      12: aload_2
      13: ifnull        23
      16: aload_2
      17: invokeinterface #24,  1           // InterfaceMethod org/infinispan/distribution/DistributionManager.getReadConsistentHash:()Lorg/infinispan/distribution/ch/ConsistentHash;
      22: areturn
      23: aconst_null
      24: areturn

  public org.infinispan.CacheStream<org.infinispan.container.entries.CacheEntry<K, V>> stream();
    Code:
       0: new           #25                 // class org/infinispan/stream/impl/local/LocalCacheStream
       3: dup
       4: new           #26                 // class org/infinispan/stream/impl/local/EntryStreamSupplier
       7: dup
       8: aload_0
       9: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      17: invokespecial #27                 // Method getConsistentHash:(Lorg/infinispan/Cache;)Lorg/infinispan/distribution/ch/ConsistentHash;
      20: aload_0
      21: invokedynamic #28,  0             // InvokeDynamic #0:get:(Lorg/infinispan/commands/read/EntrySetCommand$BackingEntrySet;)Ljava/util/function/Supplier;
      26: invokespecial #29                 // Method org/infinispan/stream/impl/local/EntryStreamSupplier."<init>":(Lorg/infinispan/Cache;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/function/Supplier;)V
      29: iconst_0
      30: aload_0
      31: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      34: invokeinterface #7,  1            // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      39: invokeinterface #30,  1           // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
      44: invokespecial #31                 // Method org/infinispan/stream/impl/local/LocalCacheStream."<init>":(Lorg/infinispan/stream/impl/local/AbstractLocalCacheStream$StreamSupplier;ZLorg/infinispan/factories/ComponentRegistry;)V
      47: areturn

  public org.infinispan.CacheStream<org.infinispan.container.entries.CacheEntry<K, V>> parallelStream();
    Code:
       0: new           #25                 // class org/infinispan/stream/impl/local/LocalCacheStream
       3: dup
       4: new           #26                 // class org/infinispan/stream/impl/local/EntryStreamSupplier
       7: dup
       8: aload_0
       9: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      17: invokespecial #27                 // Method getConsistentHash:(Lorg/infinispan/Cache;)Lorg/infinispan/distribution/ch/ConsistentHash;
      20: aload_0
      21: invokedynamic #32,  0             // InvokeDynamic #1:get:(Lorg/infinispan/commands/read/EntrySetCommand$BackingEntrySet;)Ljava/util/function/Supplier;
      26: invokespecial #29                 // Method org/infinispan/stream/impl/local/EntryStreamSupplier."<init>":(Lorg/infinispan/Cache;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/function/Supplier;)V
      29: iconst_1
      30: aload_0
      31: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      34: invokeinterface #7,  1            // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      39: invokeinterface #30,  1           // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
      44: invokespecial #31                 // Method org/infinispan/stream/impl/local/LocalCacheStream."<init>":(Lorg/infinispan/stream/impl/local/AbstractLocalCacheStream$StreamSupplier;ZLorg/infinispan/factories/ComponentRegistry;)V
      47: areturn

  public java.util.stream.Stream parallelStream();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method parallelStream:()Lorg/infinispan/CacheStream;
       4: areturn

  public java.util.stream.Stream stream();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method stream:()Lorg/infinispan/CacheStream;
       4: areturn

  public java.util.Spliterator spliterator();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method spliterator:()Lorg/infinispan/commons/util/CloseableSpliterator;
       4: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class org/infinispan/container/entries/CacheEntry
       5: invokevirtual #37                 // Method add:(Lorg/infinispan/container/entries/CacheEntry;)Z
       8: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method iterator:()Lorg/infinispan/commons/util/CloseableIterator;
       4: areturn

  private java.util.stream.Stream lambda$parallelStream$6();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/infinispan/commands/read/AbstractCloseableIteratorCollection.stream:()Ljava/util/stream/Stream;
       4: areturn

  private java.util.stream.Stream lambda$stream$5();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/infinispan/commands/read/AbstractCloseableIteratorCollection.stream:()Ljava/util/stream/Stream;
       4: areturn
}
