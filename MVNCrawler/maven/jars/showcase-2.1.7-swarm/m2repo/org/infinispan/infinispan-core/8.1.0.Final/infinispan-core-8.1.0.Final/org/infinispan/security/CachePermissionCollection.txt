Compiled from "CachePermissionCollection.java"
public class org.infinispan.security.CachePermissionCollection extends java.security.PermissionCollection {
  private static final org.infinispan.util.logging.Log log;

  private static final long serialVersionUID;

  private final java.util.List<java.security.Permission> perms;

  private int mask;

  public org.infinispan.security.CachePermissionCollection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/security/PermissionCollection."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field mask:I
       9: aload_0
      10: new           #3                  // class java/util/ArrayList
      13: dup
      14: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #5                  // Field perms:Ljava/util/List;
      20: return

  public void add(java.security.Permission);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #7                  // class org/infinispan/security/CachePermission
       6: if_acmpeq     19
       9: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      12: aload_1
      13: invokeinterface #9,  2            // InterfaceMethod org/infinispan/util/logging/Log.invalidPermission:(Ljava/security/Permission;)Ljava/lang/IllegalArgumentException;
      18: athrow
      19: aload_0
      20: invokevirtual #10                 // Method isReadOnly:()Z
      23: ifeq          35
      26: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      29: invokeinterface #11,  1           // InterfaceMethod org/infinispan/util/logging/Log.readOnlyPermissionCollection:()Ljava/lang/SecurityException;
      34: athrow
      35: aload_1
      36: checkcast     #7                  // class org/infinispan/security/CachePermission
      39: astore_2
      40: aload_0
      41: dup
      42: astore_3
      43: monitorenter
      44: aload_0
      45: getfield      #5                  // Field perms:Ljava/util/List;
      48: aload_2
      49: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: aload_0
      56: dup
      57: getfield      #2                  // Field mask:I
      60: aload_2
      61: invokevirtual #13                 // Method org/infinispan/security/CachePermission.getAuthorizationPermission:()Lorg/infinispan/security/AuthorizationPermission;
      64: invokevirtual #14                 // Method org/infinispan/security/AuthorizationPermission.getMask:()I
      67: ior
      68: putfield      #2                  // Field mask:I
      71: aload_3
      72: monitorexit
      73: goto          83
      76: astore        4
      78: aload_3
      79: monitorexit
      80: aload         4
      82: athrow
      83: return
    Exception table:
       from    to  target type
          44    73    76   any
          76    80    76   any

  public boolean implies(java.security.Permission);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #7                  // class org/infinispan/security/CachePermission
      10: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: checkcast     #7                  // class org/infinispan/security/CachePermission
      22: astore_2
      23: aload_2
      24: invokevirtual #13                 // Method org/infinispan/security/CachePermission.getAuthorizationPermission:()Lorg/infinispan/security/AuthorizationPermission;
      27: aload_0
      28: getfield      #2                  // Field mask:I
      31: invokevirtual #16                 // Method org/infinispan/security/AuthorizationPermission.matches:(I)Z
      34: ireturn

  public java.util.Enumeration<java.security.Permission> elements();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #5                  // Field perms:Ljava/util/List;
       8: invokestatic  #17                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      11: aload_1
      12: monitorexit
      13: areturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           4    13    14   any
          14    17    14   any

  static {};
    Code:
       0: ldc           #18                 // class org/infinispan/security/CachePermissionCollection
       2: invokestatic  #19                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
