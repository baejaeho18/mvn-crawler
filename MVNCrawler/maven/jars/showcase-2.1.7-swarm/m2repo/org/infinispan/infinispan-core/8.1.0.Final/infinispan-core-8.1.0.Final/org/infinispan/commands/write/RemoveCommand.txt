Compiled from "RemoveCommand.java"
public class org.infinispan.commands.write.RemoveCommand extends org.infinispan.commands.write.AbstractDataWriteCommand {
  private static final org.infinispan.util.logging.Log log;

  public static final byte COMMAND_ID;

  protected org.infinispan.notifications.cachelistener.CacheNotifier notifier;

  boolean successful;

  boolean nonExistent;

  protected org.infinispan.commands.write.ValueMatcher valueMatcher;

  protected org.infinispan.commons.equivalence.Equivalence valueEquivalence;

  protected java.lang.Object value;

  public org.infinispan.commands.write.RemoveCommand(java.lang.Object, java.lang.Object, org.infinispan.notifications.cachelistener.CacheNotifier, java.util.Set<org.infinispan.context.Flag>, org.infinispan.commons.equivalence.Equivalence, org.infinispan.commands.CommandInvocationId);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload         6
       6: invokespecial #1                  // Method org/infinispan/commands/write/AbstractDataWriteCommand."<init>":(Ljava/lang/Object;Ljava/util/Set;Lorg/infinispan/commands/CommandInvocationId;)V
       9: aload_0
      10: iconst_1
      11: putfield      #2                  // Field successful:Z
      14: aload_0
      15: iconst_0
      16: putfield      #3                  // Field nonExistent:Z
      19: aload_0
      20: aload_2
      21: putfield      #4                  // Field value:Ljava/lang/Object;
      24: aload_0
      25: aload_3
      26: putfield      #5                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      29: aload_0
      30: aload         5
      32: putfield      #6                  // Field valueEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      35: aload_0
      36: aload_2
      37: ifnull        46
      40: getstatic     #7                  // Field org/infinispan/commands/write/ValueMatcher.MATCH_EXPECTED:Lorg/infinispan/commands/write/ValueMatcher;
      43: goto          49
      46: getstatic     #8                  // Field org/infinispan/commands/write/ValueMatcher.MATCH_ALWAYS:Lorg/infinispan/commands/write/ValueMatcher;
      49: putfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
      52: return

  public void init(org.infinispan.notifications.cachelistener.CacheNotifier, org.infinispan.configuration.cache.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
       5: aload_0
       6: aload_2
       7: invokevirtual #10                 // Method org/infinispan/configuration/cache/Configuration.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfiguration;
      10: invokevirtual #11                 // Method org/infinispan/configuration/cache/DataContainerConfiguration.valueEquivalence:()Lorg/infinispan/commons/equivalence/Equivalence;
      13: putfield      #6                  // Field valueEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      16: return

  public org.infinispan.commands.write.RemoveCommand();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method org/infinispan/commands/write/AbstractDataWriteCommand."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field successful:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field nonExistent:Z
      14: return

  public java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext, org.infinispan.commands.Visitor) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokeinterface #13,  3           // InterfaceMethod org/infinispan/commands/Visitor.visitRemoveCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/write/RemoveCommand;)Ljava/lang/Object;
       8: areturn

  public java.lang.Object perform(org.infinispan.context.InvocationContext) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
       4: getstatic     #14                 // Field org/infinispan/commands/write/ValueMatcher.MATCH_NEVER:Lorg/infinispan/commands/write/ValueMatcher;
       7: if_acmpne     17
      10: aload_0
      11: iconst_0
      12: putfield      #2                  // Field successful:Z
      15: aconst_null
      16: areturn
      17: aload_1
      18: aload_0
      19: getfield      #15                 // Field key:Ljava/lang/Object;
      22: invokeinterface #16,  2           // InterfaceMethod org/infinispan/context/InvocationContext.lookupEntry:(Ljava/lang/Object;)Lorg/infinispan/container/entries/CacheEntry;
      27: checkcast     #17                 // class org/infinispan/container/entries/MVCCEntry
      30: astore_2
      31: aload_2
      32: ifnull        53
      35: aload_2
      36: invokeinterface #18,  1           // InterfaceMethod org/infinispan/container/entries/MVCCEntry.isNull:()Z
      41: ifne          53
      44: aload_2
      45: invokeinterface #19,  1           // InterfaceMethod org/infinispan/container/entries/MVCCEntry.isRemoved:()Z
      50: ifeq          132
      53: aload_0
      54: iconst_1
      55: putfield      #3                  // Field nonExistent:Z
      58: aload_0
      59: getfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
      62: aload_2
      63: aload_0
      64: getfield      #4                  // Field value:Ljava/lang/Object;
      67: aconst_null
      68: aload_0
      69: getfield      #6                  // Field valueEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      72: invokevirtual #20                 // Method org/infinispan/commands/write/ValueMatcher.matches:(Lorg/infinispan/container/entries/MVCCEntry;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/equivalence/Equivalence;)Z
      75: ifeq          112
      78: aload_2
      79: ifnull        96
      82: aload_2
      83: iconst_1
      84: invokeinterface #21,  2           // InterfaceMethod org/infinispan/container/entries/MVCCEntry.setChanged:(Z)V
      89: aload_2
      90: iconst_1
      91: invokeinterface #22,  2           // InterfaceMethod org/infinispan/container/entries/MVCCEntry.setRemoved:(Z)V
      96: aload_0
      97: invokevirtual #23                 // Method isConditional:()Z
     100: ifeq          110
     103: iconst_1
     104: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     107: goto          111
     110: aconst_null
     111: areturn
     112: getstatic     #25                 // Field log:Lorg/infinispan/util/logging/Log;
     115: ldc           #26                 // String Nothing to remove since the entry doesn\'t exist in the context or it is null
     117: invokeinterface #27,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
     122: aload_0
     123: iconst_0
     124: putfield      #2                  // Field successful:Z
     127: iconst_0
     128: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     131: areturn
     132: aload_0
     133: getfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
     136: aload_2
     137: aload_0
     138: getfield      #4                  // Field value:Ljava/lang/Object;
     141: aconst_null
     142: aload_0
     143: getfield      #6                  // Field valueEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
     146: invokevirtual #20                 // Method org/infinispan/commands/write/ValueMatcher.matches:(Lorg/infinispan/container/entries/MVCCEntry;Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/commons/equivalence/Equivalence;)Z
     149: ifne          162
     152: aload_0
     153: iconst_0
     154: putfield      #2                  // Field successful:Z
     157: iconst_0
     158: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     161: areturn
     162: aload_0
     163: instanceof    #28                 // class org/infinispan/commands/write/EvictCommand
     166: ifeq          176
     169: aload_2
     170: iconst_1
     171: invokeinterface #29,  2           // InterfaceMethod org/infinispan/container/entries/MVCCEntry.setEvicted:(Z)V
     176: aload_0
     177: aload_2
     178: aload_1
     179: invokevirtual #30                 // Method performRemove:(Lorg/infinispan/container/entries/CacheEntry;Lorg/infinispan/context/InvocationContext;)Ljava/lang/Object;
     182: areturn

  public void notify(org.infinispan.context.InvocationContext, java.lang.Object, org.infinispan.metadata.Metadata, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
       4: aload_0
       5: getfield      #15                 // Field key:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: iload         4
      12: aload_1
      13: aload_0
      14: invokeinterface #31,  7           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryRemoved:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
      19: return

  public byte getCommandId();
    Code:
       0: bipush        10
       2: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method org/infinispan/commands/write/AbstractDataWriteCommand.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: checkcast     #32                 // class org/infinispan/commands/write/RemoveCommand
      14: astore_2
      15: aload_0
      16: getfield      #4                  // Field value:Ljava/lang/Object;
      19: ifnull        39
      22: aload_0
      23: getfield      #4                  // Field value:Ljava/lang/Object;
      26: aload_2
      27: getfield      #4                  // Field value:Ljava/lang/Object;
      30: invokevirtual #34                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ifne          48
      36: goto          46
      39: aload_2
      40: getfield      #4                  // Field value:Ljava/lang/Object;
      43: ifnull        48
      46: iconst_0
      47: ireturn
      48: iconst_1
      49: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method org/infinispan/commands/write/AbstractDataWriteCommand.hashCode:()I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #4                  // Field value:Ljava/lang/Object;
      13: ifnull        26
      16: aload_0
      17: getfield      #4                  // Field value:Ljava/lang/Object;
      20: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
      23: goto          27
      26: iconst_0
      27: iadd
      28: istore_1
      29: iload_1
      30: ireturn

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // String RemoveCommand{key=
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #15                 // Field key:Ljava/lang/Object;
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #42                 // String , value=
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field value:Ljava/lang/Object;
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #43                 // String , flags=
      33: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #44                 // Field flags:Ljava/util/Set;
      40: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #45                 // String , valueMatcher=
      45: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
      52: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #46                 // String }
      57: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  public boolean isSuccessful();
    Code:
       0: aload_0
       1: getfield      #2                  // Field successful:Z
       4: ireturn

  public boolean isConditional();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isNonExistent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nonExistent:Z
       4: ireturn

  public void setParameters(int, java.lang.Object[]);
    Code:
       0: iload_1
       1: bipush        10
       3: if_icmpeq     16
       6: new           #48                 // class java/lang/IllegalStateException
       9: dup
      10: ldc           #49                 // String Invalid method id
      12: invokespecial #50                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: aload_2
      18: iconst_0
      19: aaload
      20: putfield      #15                 // Field key:Ljava/lang/Object;
      23: aload_0
      24: aload_2
      25: iconst_1
      26: aaload
      27: putfield      #4                  // Field value:Ljava/lang/Object;
      30: aload_0
      31: aload_2
      32: iconst_2
      33: aaload
      34: checkcast     #51                 // class java/util/Set
      37: putfield      #44                 // Field flags:Ljava/util/Set;
      40: aload_0
      41: aload_2
      42: iconst_3
      43: aaload
      44: checkcast     #52                 // class org/infinispan/commands/write/ValueMatcher
      47: putfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
      50: aload_0
      51: aload_2
      52: iconst_4
      53: aaload
      54: checkcast     #53                 // class org/infinispan/commands/CommandInvocationId
      57: putfield      #54                 // Field commandInvocationId:Lorg/infinispan/commands/CommandInvocationId;
      60: return

  public java.lang.Object[] getParameters();
    Code:
       0: iconst_5
       1: anewarray     #55                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #15                 // Field key:Ljava/lang/Object;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #4                  // Field value:Ljava/lang/Object;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #44                 // Field flags:Ljava/util/Set;
      24: invokestatic  #56                 // Method org/infinispan/context/Flag.copyWithoutRemotableFlags:(Ljava/util/Set;)Ljava/util/Set;
      27: aastore
      28: dup
      29: iconst_3
      30: aload_0
      31: getfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
      34: aastore
      35: dup
      36: iconst_4
      37: aload_0
      38: getfield      #54                 // Field commandInvocationId:Lorg/infinispan/commands/CommandInvocationId;
      41: aastore
      42: areturn

  public org.infinispan.commands.write.ValueMatcher getValueMatcher();
    Code:
       0: aload_0
       1: getfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
       4: areturn

  public void setValueMatcher(org.infinispan.commands.write.ValueMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
       5: return

  public void updateStatusFromRemoteResponse(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: ifnull        18
       7: aload_0
       8: aload_1
       9: checkcast     #57                 // class java/lang/Boolean
      12: invokevirtual #58                 // Method java/lang/Boolean.booleanValue:()Z
      15: putfield      #2                  // Field successful:Z
      18: return

  public boolean ignoreCommandOnStatus(org.infinispan.lifecycle.ComponentStatus);
    Code:
       0: iconst_0
       1: ireturn

  public boolean readsExistingValues();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: ifnonnull     17
       7: aload_0
       8: getstatic     #59                 // Field org/infinispan/context/Flag.IGNORE_RETURN_VALUES:Lorg/infinispan/context/Flag;
      11: invokevirtual #60                 // Method hasFlag:(Lorg/infinispan/context/Flag;)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field value:Ljava/lang/Object;
       4: areturn

  public void setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field value:Ljava/lang/Object;
       5: return

  public final boolean isReturnValueExpected();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isConditional:()Z
       4: ifne          14
       7: aload_0
       8: invokespecial #61                 // Method org/infinispan/commands/write/AbstractDataWriteCommand.isReturnValueExpected:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected java.lang.Object performRemove(org.infinispan.container.entries.CacheEntry, org.infinispan.context.InvocationContext);
    Code:
       0: aload_1
       1: invokeinterface #62,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: aload_2
       9: aload_3
      10: aload_1
      11: invokeinterface #63,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
      16: iconst_1
      17: invokevirtual #64                 // Method notify:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;Z)V
      20: aload_1
      21: iconst_1
      22: invokeinterface #65,  2           // InterfaceMethod org/infinispan/container/entries/CacheEntry.setRemoved:(Z)V
      27: aload_1
      28: iconst_0
      29: invokeinterface #66,  2           // InterfaceMethod org/infinispan/container/entries/CacheEntry.setValid:(Z)V
      34: aload_1
      35: iconst_1
      36: invokeinterface #67,  2           // InterfaceMethod org/infinispan/container/entries/CacheEntry.setChanged:(Z)V
      41: aload_0
      42: getfield      #9                  // Field valueMatcher:Lorg/infinispan/commands/write/ValueMatcher;
      45: getstatic     #68                 // Field org/infinispan/commands/write/ValueMatcher.MATCH_EXPECTED_OR_NEW:Lorg/infinispan/commands/write/ValueMatcher;
      48: if_acmpeq     67
      51: aload_0
      52: invokevirtual #23                 // Method isConditional:()Z
      55: ifeq          65
      58: iconst_1
      59: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      62: goto          66
      65: aload_3
      66: areturn
      67: aload_0
      68: invokevirtual #23                 // Method isConditional:()Z
      71: ifeq          81
      74: iconst_1
      75: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      78: goto          85
      81: aload_0
      82: getfield      #4                  // Field value:Ljava/lang/Object;
      85: areturn

  static {};
    Code:
       0: ldc           #32                 // class org/infinispan/commands/write/RemoveCommand
       2: invokestatic  #69                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #25                 // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
