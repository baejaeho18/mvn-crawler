Compiled from "DistributionBulkInterceptor.java"
public class org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet<K, V> extends org.infinispan.commands.read.AbstractCloseableIteratorCollection<org.infinispan.container.entries.CacheEntry<K, V>, K, V> implements org.infinispan.CacheSet<org.infinispan.container.entries.CacheEntry<K, V>> {
  protected final org.infinispan.CacheSet<org.infinispan.container.entries.CacheEntry<K, V>> entrySet;

  protected final org.infinispan.commands.LocalFlagAffectedCommand command;

  private org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet(org.infinispan.Cache, org.infinispan.CacheSet<org.infinispan.container.entries.CacheEntry<K, V>>, org.infinispan.commands.LocalFlagAffectedCommand);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/infinispan/commands/read/AbstractCloseableIteratorCollection."<init>":(Lorg/infinispan/Cache;)V
       5: aload_0
       6: aload_2
       7: putfield      #5                  // Field entrySet:Lorg/infinispan/CacheSet;
      10: aload_0
      11: aload_3
      12: putfield      #6                  // Field command:Lorg/infinispan/commands/LocalFlagAffectedCommand;
      15: return

  public org.infinispan.commons.util.CloseableIterator<org.infinispan.container.entries.CacheEntry<K, V>> iterator();
    Code:
       0: new           #7                  // class org/infinispan/commons/util/CloseableIteratorMapper
       3: dup
       4: new           #8                  // class org/infinispan/stream/impl/RemovableCloseableIterator
       7: dup
       8: aload_0
       9: invokevirtual #9                  // Method stream:()Lorg/infinispan/CacheStream;
      12: invokestatic  #10                 // Method org/infinispan/commons/util/Closeables.iterator:(Ljava/util/stream/Stream;)Lorg/infinispan/commons/util/CloseableIterator;
      15: aload_0
      16: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      19: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      24: invokespecial #12                 // Method org/infinispan/stream/impl/RemovableCloseableIterator."<init>":(Lorg/infinispan/commons/util/CloseableIterator;Lorg/infinispan/Cache;Ljava/util/function/Function;)V
      27: aload_0
      28: invokedynamic #13,  0             // InvokeDynamic #1:apply:(Lorg/infinispan/interceptors/distribution/DistributionBulkInterceptor$BackingEntrySet;)Ljava/util/function/Function;
      33: invokespecial #14                 // Method org/infinispan/commons/util/CloseableIteratorMapper."<init>":(Lorg/infinispan/commons/util/CloseableIterator;Ljava/util/function/Function;)V
      36: areturn

  public org.infinispan.commons.util.CloseableSpliterator<org.infinispan.container.entries.CacheEntry<K, V>> spliterator();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method stream:()Lorg/infinispan/CacheStream;
       4: invokestatic  #15                 // Method org/infinispan/commons/util/Closeables.spliterator:(Ljava/util/stream/Stream;)Lorg/infinispan/commons/util/CloseableSpliterator;
       7: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method toEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        49
      10: aload_0
      11: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      14: aload_2
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: invokeinterface #18,  2           // InterfaceMethod org/infinispan/Cache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore_3
      26: aload_3
      27: ifnull        47
      30: aload_3
      31: aload_2
      32: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn
      49: iconst_0
      50: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method toEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        32
      10: aload_0
      11: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      14: aload_2
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: aload_2
      21: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      26: invokeinterface #21,  3           // InterfaceMethod org/infinispan/Cache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: ireturn
      32: iconst_0
      33: ireturn

  public boolean add(org.infinispan.container.entries.CacheEntry<K, V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #22,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getKey:()Ljava/lang/Object;
      10: aload_1
      11: invokeinterface #23,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
      16: invokeinterface #24,  3           // InterfaceMethod org/infinispan/Cache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnull        41
      26: aload_2
      27: aload_1
      28: invokeinterface #23,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
      33: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_0
      40: ireturn
      41: iconst_1
      42: ireturn

  private java.util.Map$Entry<K, V> toEntry(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #25                 // class java/util/Map$Entry
       4: ifeq          12
       7: aload_1
       8: checkcast     #25                 // class java/util/Map$Entry
      11: areturn
      12: aconst_null
      13: areturn

  public org.infinispan.CacheStream<org.infinispan.container.entries.CacheEntry<K, V>> stream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #26,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       9: astore_1
      10: aload_1
      11: invokeinterface #27,  1           // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
      16: astore_2
      17: new           #28                 // class org/infinispan/interceptors/distribution/DistributionBulkInterceptor$BackingEntrySet$1
      20: dup
      21: aload_0
      22: aload_0
      23: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      26: invokeinterface #29,  1           // InterfaceMethod org/infinispan/Cache.getCacheManager:()Lorg/infinispan/manager/EmbeddedCacheManager;
      31: invokeinterface #30,  1           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
      36: iconst_0
      37: aload_1
      38: invokeinterface #31,  1           // InterfaceMethod org/infinispan/AdvancedCache.getDistributionManager:()Lorg/infinispan/distribution/DistributionManager;
      43: aload_0
      44: invokedynamic #32,  0             // InvokeDynamic #2:get:(Lorg/infinispan/interceptors/distribution/DistributionBulkInterceptor$BackingEntrySet;)Ljava/util/function/Supplier;
      49: aload_2
      50: ldc           #33                 // class org/infinispan/stream/impl/ClusterStreamManager
      52: invokevirtual #34                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;)Ljava/lang/Object;
      55: checkcast     #33                 // class org/infinispan/stream/impl/ClusterStreamManager
      58: aload_0
      59: getfield      #6                  // Field command:Lorg/infinispan/commands/LocalFlagAffectedCommand;
      62: getstatic     #35                 // Field org/infinispan/context/Flag.SKIP_CACHE_LOAD:Lorg/infinispan/context/Flag;
      65: invokeinterface #36,  2           // InterfaceMethod org/infinispan/commands/LocalFlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: aload_0
      79: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      82: invokeinterface #37,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      87: invokevirtual #38                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      90: invokevirtual #39                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfiguration;
      93: invokevirtual #40                 // Method org/infinispan/configuration/cache/StateTransferConfiguration.chunkSize:()I
      96: aload_2
      97: ldc           #41                 // class java/util/concurrent/Executor
      99: ldc           #42                 // String org.infinispan.executors.async
     101: invokevirtual #43                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     104: checkcast     #41                 // class java/util/concurrent/Executor
     107: aload_2
     108: invokespecial #44                 // Method org/infinispan/interceptors/distribution/DistributionBulkInterceptor$BackingEntrySet$1."<init>":(Lorg/infinispan/interceptors/distribution/DistributionBulkInterceptor$BackingEntrySet;Lorg/infinispan/remoting/transport/Address;ZLorg/infinispan/distribution/DistributionManager;Ljava/util/function/Supplier;Lorg/infinispan/stream/impl/ClusterStreamManager;ZILjava/util/concurrent/Executor;Lorg/infinispan/factories/ComponentRegistry;)V
     111: astore_3
     112: aload_3
     113: aload_0
     114: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
     117: invokestatic  #45                 // Method org/infinispan/interceptors/distribution/DistributionBulkInterceptor.access$300:(Lorg/infinispan/CacheStream;Lorg/infinispan/Cache;)Lorg/infinispan/CacheStream;
     120: areturn

  public org.infinispan.CacheStream<org.infinispan.container.entries.CacheEntry<K, V>> parallelStream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #26,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       9: astore_1
      10: aload_1
      11: invokeinterface #27,  1           // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
      16: astore_2
      17: new           #46                 // class org/infinispan/stream/impl/DistributedCacheStream
      20: dup
      21: aload_0
      22: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      25: invokeinterface #29,  1           // InterfaceMethod org/infinispan/Cache.getCacheManager:()Lorg/infinispan/manager/EmbeddedCacheManager;
      30: invokeinterface #30,  1           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
      35: iconst_1
      36: aload_1
      37: invokeinterface #31,  1           // InterfaceMethod org/infinispan/AdvancedCache.getDistributionManager:()Lorg/infinispan/distribution/DistributionManager;
      42: aload_0
      43: invokedynamic #47,  0             // InvokeDynamic #3:get:(Lorg/infinispan/interceptors/distribution/DistributionBulkInterceptor$BackingEntrySet;)Ljava/util/function/Supplier;
      48: aload_2
      49: ldc           #33                 // class org/infinispan/stream/impl/ClusterStreamManager
      51: invokevirtual #34                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;)Ljava/lang/Object;
      54: checkcast     #33                 // class org/infinispan/stream/impl/ClusterStreamManager
      57: aload_0
      58: getfield      #6                  // Field command:Lorg/infinispan/commands/LocalFlagAffectedCommand;
      61: getstatic     #35                 // Field org/infinispan/context/Flag.SKIP_CACHE_LOAD:Lorg/infinispan/context/Flag;
      64: invokeinterface #36,  2           // InterfaceMethod org/infinispan/commands/LocalFlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      69: ifne          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: aload_0
      78: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      81: invokeinterface #37,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      86: invokevirtual #38                 // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
      89: invokevirtual #39                 // Method org/infinispan/configuration/cache/ClusteringConfiguration.stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfiguration;
      92: invokevirtual #40                 // Method org/infinispan/configuration/cache/StateTransferConfiguration.chunkSize:()I
      95: aload_2
      96: ldc           #41                 // class java/util/concurrent/Executor
      98: ldc           #42                 // String org.infinispan.executors.async
     100: invokevirtual #43                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     103: checkcast     #41                 // class java/util/concurrent/Executor
     106: aload_2
     107: invokespecial #48                 // Method org/infinispan/stream/impl/DistributedCacheStream."<init>":(Lorg/infinispan/remoting/transport/Address;ZLorg/infinispan/distribution/DistributionManager;Ljava/util/function/Supplier;Lorg/infinispan/stream/impl/ClusterStreamManager;ZILjava/util/concurrent/Executor;Lorg/infinispan/factories/ComponentRegistry;)V
     110: astore_3
     111: aload_3
     112: aload_0
     113: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
     116: invokestatic  #45                 // Method org/infinispan/interceptors/distribution/DistributionBulkInterceptor.access$300:(Lorg/infinispan/CacheStream;Lorg/infinispan/Cache;)Lorg/infinispan/CacheStream;
     119: areturn

  public java.util.stream.Stream parallelStream();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method parallelStream:()Lorg/infinispan/CacheStream;
       4: areturn

  public java.util.stream.Stream stream();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method stream:()Lorg/infinispan/CacheStream;
       4: areturn

  public java.util.Spliterator spliterator();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method spliterator:()Lorg/infinispan/commons/util/CloseableSpliterator;
       4: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #51                 // class org/infinispan/container/entries/CacheEntry
       5: invokevirtual #52                 // Method add:(Lorg/infinispan/container/entries/CacheEntry;)Z
       8: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method iterator:()Lorg/infinispan/commons/util/CloseableIterator;
       4: areturn

  private org.infinispan.CacheStream lambda$parallelStream$206();
    Code:
       0: aload_0
       1: getfield      #5                  // Field entrySet:Lorg/infinispan/CacheSet;
       4: invokeinterface #54,  1           // InterfaceMethod org/infinispan/CacheSet.stream:()Lorg/infinispan/CacheStream;
       9: areturn

  private org.infinispan.CacheStream lambda$stream$204();
    Code:
       0: aload_0
       1: getfield      #5                  // Field entrySet:Lorg/infinispan/CacheSet;
       4: invokeinterface #54,  1           // InterfaceMethod org/infinispan/CacheSet.stream:()Lorg/infinispan/CacheStream;
       9: areturn

  private org.infinispan.container.entries.CacheEntry lambda$iterator$203(org.infinispan.container.entries.CacheEntry);
    Code:
       0: new           #55                 // class org/infinispan/interceptors/distribution/DistributionBulkInterceptor$EntryWrapper
       3: dup
       4: aload_0
       5: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       8: aload_1
       9: invokespecial #56                 // Method org/infinispan/interceptors/distribution/DistributionBulkInterceptor$EntryWrapper."<init>":(Lorg/infinispan/Cache;Lorg/infinispan/container/entries/CacheEntry;)V
      12: areturn

  org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet(org.infinispan.Cache, org.infinispan.CacheSet, org.infinispan.commands.LocalFlagAffectedCommand, org.infinispan.interceptors.distribution.DistributionBulkInterceptor$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method "<init>":(Lorg/infinispan/Cache;Lorg/infinispan/CacheSet;Lorg/infinispan/commands/LocalFlagAffectedCommand;)V
       7: return

  static org.infinispan.Cache access$200(org.infinispan.interceptors.distribution.DistributionBulkInterceptor$BackingEntrySet);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: areturn
}
