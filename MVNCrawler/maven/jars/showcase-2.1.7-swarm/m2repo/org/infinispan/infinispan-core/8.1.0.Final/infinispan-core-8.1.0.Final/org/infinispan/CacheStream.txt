Compiled from "CacheStream.java"
public interface org.infinispan.CacheStream<R> extends java.util.stream.Stream<R> {
  public abstract org.infinispan.CacheStream<R> sequentialDistribution();

  public abstract org.infinispan.CacheStream<R> parallelDistribution();

  public abstract org.infinispan.CacheStream<R> filterKeySegments(java.util.Set<java.lang.Integer>);

  public abstract org.infinispan.CacheStream<R> filterKeys(java.util.Set<?>);

  public abstract org.infinispan.CacheStream<R> distributedBatchSize(int);

  public abstract org.infinispan.CacheStream<R> segmentCompletionListener(org.infinispan.CacheStream$SegmentCompletionListener);

  public abstract org.infinispan.CacheStream<R> disableRehashAware();

  public abstract org.infinispan.CacheStream<R> timeout(long, java.util.concurrent.TimeUnit);

  public abstract void forEach(java.util.function.Consumer<? super R>);

  public abstract java.util.Iterator<R> iterator();

  public abstract java.util.Spliterator<R> spliterator();

  public abstract java.util.stream.Stream<R> sorted();

  public abstract java.util.stream.Stream<R> sorted(java.util.Comparator<? super R>);

  public abstract java.util.stream.Stream<R> limit(long);

  public abstract java.util.stream.Stream<R> skip(long);

  public abstract java.util.stream.Stream<R> distinct();

  public abstract <R1, A> R1 collect(java.util.stream.Collector<? super R, A, R1>);
}
