Compiled from "BaseTypeConverterInterceptor.java"
class org.infinispan.interceptors.compat.BaseTypeConverterInterceptor$1 extends org.infinispan.stream.impl.interceptor.AbstractDelegatingKeyCacheSet<K, V> {
  final org.infinispan.compat.TypeConverter val$converter;

  final org.infinispan.interceptors.compat.BaseTypeConverterInterceptor this$0;

  org.infinispan.interceptors.compat.BaseTypeConverterInterceptor$1(org.infinispan.interceptors.compat.BaseTypeConverterInterceptor, org.infinispan.Cache, org.infinispan.CacheSet, org.infinispan.compat.TypeConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;
       5: aload_0
       6: aload         4
       8: putfield      #2                  // Field val$converter:Lorg/infinispan/compat/TypeConverter;
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokespecial #3                  // Method org/infinispan/stream/impl/interceptor/AbstractDelegatingKeyCacheSet."<init>":(Lorg/infinispan/Cache;Lorg/infinispan/CacheSet;)V
      17: return

  public org.infinispan.commons.util.CloseableIterator<K> iterator();
    Code:
       0: new           #4                  // class org/infinispan/commons/util/CloseableIteratorMapper
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method org/infinispan/stream/impl/interceptor/AbstractDelegatingKeyCacheSet.iterator:()Lorg/infinispan/commons/util/CloseableIterator;
       8: aload_0
       9: getfield      #2                  // Field val$converter:Lorg/infinispan/compat/TypeConverter;
      12: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/infinispan/compat/TypeConverter;)Ljava/util/function/Function;
      17: invokespecial #7                  // Method org/infinispan/commons/util/CloseableIteratorMapper."<init>":(Lorg/infinispan/commons/util/CloseableIterator;Ljava/util/function/Function;)V
      20: areturn

  public org.infinispan.commons.util.CloseableSpliterator<K> spliterator();
    Code:
       0: new           #8                  // class org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder
       3: dup
       4: aload_0
       5: invokevirtual #9                  // Method iterator:()Lorg/infinispan/commons/util/CloseableIterator;
       8: invokespecial #10                 // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder."<init>":(Lorg/infinispan/commons/util/CloseableIterator;)V
      11: aload_0
      12: invokespecial #11                 // Method org/infinispan/stream/impl/interceptor/AbstractDelegatingKeyCacheSet.spliterator:()Lorg/infinispan/commons/util/CloseableSpliterator;
      15: invokeinterface #12,  1           // InterfaceMethod org/infinispan/commons/util/CloseableSpliterator.estimateSize:()J
      20: invokevirtual #13                 // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.setEstimateRemaining:(J)Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;
      23: sipush        4353
      26: invokevirtual #15                 // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.setCharacteristics:(I)Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder;
      29: invokevirtual #16                 // Method org/infinispan/stream/impl/spliterators/IteratorAsSpliterator$Builder.get:()Lorg/infinispan/stream/impl/spliterators/IteratorAsSpliterator;
      32: areturn

  protected org.infinispan.CacheStream<K> getStream(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;
       4: invokestatic  #17                 // Method org/infinispan/interceptors/compat/BaseTypeConverterInterceptor.access$000:(Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;)Lorg/infinispan/Cache;
       7: invokeinterface #18,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      12: invokeinterface #19,  1           // InterfaceMethod org/infinispan/AdvancedCache.getDistributionManager:()Lorg/infinispan/distribution/DistributionManager;
      17: astore_2
      18: aload_0
      19: invokespecial #11                 // Method org/infinispan/stream/impl/interceptor/AbstractDelegatingKeyCacheSet.spliterator:()Lorg/infinispan/commons/util/CloseableSpliterator;
      22: astore_3
      23: new           #20                 // class org/infinispan/stream/impl/local/LocalCacheStream
      26: dup
      27: new           #21                 // class org/infinispan/stream/impl/local/KeyStreamSupplier
      30: dup
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;
      35: invokestatic  #17                 // Method org/infinispan/interceptors/compat/BaseTypeConverterInterceptor.access$000:(Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;)Lorg/infinispan/Cache;
      38: aload_2
      39: ifnull        51
      42: aload_2
      43: invokeinterface #22,  1           // InterfaceMethod org/infinispan/distribution/DistributionManager.getConsistentHash:()Lorg/infinispan/distribution/ch/ConsistentHash;
      48: goto          52
      51: aconst_null
      52: aload_3
      53: iload_1
      54: invokedynamic #23,  0             // InvokeDynamic #1:get:(Lorg/infinispan/commons/util/CloseableSpliterator;Z)Ljava/util/function/Supplier;
      59: invokespecial #24                 // Method org/infinispan/stream/impl/local/KeyStreamSupplier."<init>":(Lorg/infinispan/Cache;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/function/Supplier;)V
      62: iload_1
      63: aload_0
      64: getfield      #1                  // Field this$0:Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;
      67: invokestatic  #17                 // Method org/infinispan/interceptors/compat/BaseTypeConverterInterceptor.access$000:(Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;)Lorg/infinispan/Cache;
      70: invokeinterface #18,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      75: invokeinterface #25,  1           // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
      80: invokespecial #26                 // Method org/infinispan/stream/impl/local/LocalCacheStream."<init>":(Lorg/infinispan/stream/impl/local/AbstractLocalCacheStream$StreamSupplier;ZLorg/infinispan/factories/ComponentRegistry;)V
      83: astore        4
      85: aload         4
      87: aload_3
      88: invokedynamic #27,  0             // InvokeDynamic #2:run:(Lorg/infinispan/commons/util/CloseableSpliterator;)Ljava/lang/Runnable;
      93: invokeinterface #28,  2           // InterfaceMethod org/infinispan/CacheStream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;
      98: pop
      99: new           #29                 // class org/infinispan/interceptors/compat/TypeConverterStream
     102: dup
     103: aload         4
     105: aload_0
     106: getfield      #2                  // Field val$converter:Lorg/infinispan/compat/TypeConverter;
     109: aload_0
     110: getfield      #1                  // Field this$0:Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;
     113: invokestatic  #30                 // Method org/infinispan/interceptors/compat/BaseTypeConverterInterceptor.access$100:(Lorg/infinispan/interceptors/compat/BaseTypeConverterInterceptor;)Lorg/infinispan/container/InternalEntryFactory;
     116: invokespecial #31                 // Method org/infinispan/interceptors/compat/TypeConverterStream."<init>":(Lorg/infinispan/CacheStream;Lorg/infinispan/compat/TypeConverter;Lorg/infinispan/container/InternalEntryFactory;)V
     119: areturn

  public java.util.Spliterator spliterator();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method spliterator:()Lorg/infinispan/commons/util/CloseableSpliterator;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method iterator:()Lorg/infinispan/commons/util/CloseableIterator;
       4: areturn

  private static void lambda$getStream$36(org.infinispan.commons.util.CloseableSpliterator);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod org/infinispan/commons/util/CloseableSpliterator.close:()V
       6: return

  private static java.util.stream.Stream lambda$getStream$35(org.infinispan.commons.util.CloseableSpliterator, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #34                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
       5: areturn

  private static java.lang.Object lambda$iterator$34(org.infinispan.compat.TypeConverter, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #35,  2           // InterfaceMethod org/infinispan/compat/TypeConverter.unboxKey:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn
}
