Compiled from "PrepareCommand.java"
public class org.infinispan.commands.tx.PrepareCommand extends org.infinispan.commands.tx.AbstractTransactionBoundaryCommand implements org.infinispan.util.concurrent.locks.TransactionalRemoteLockCommand {
  private static final org.infinispan.util.logging.Log log;

  private boolean trace;

  public static final byte COMMAND_ID;

  protected org.infinispan.commands.write.WriteCommand[] modifications;

  protected boolean onePhaseCommit;

  protected org.infinispan.notifications.cachelistener.CacheNotifier notifier;

  protected org.infinispan.transaction.xa.recovery.RecoveryManager recoveryManager;

  private transient boolean replayEntryWrapping;

  protected boolean retriedCommand;

  private static final org.infinispan.commands.write.WriteCommand[] EMPTY_WRITE_COMMAND_ARRAY;

  public void initialize(org.infinispan.notifications.cachelistener.CacheNotifier, org.infinispan.transaction.xa.recovery.RecoveryManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field recoveryManager:Lorg/infinispan/transaction/xa/recovery/RecoveryManager;
      10: return

  private org.infinispan.commands.tx.PrepareCommand();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #3                  // Method org/infinispan/commands/tx/AbstractTransactionBoundaryCommand."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
       9: invokeinterface #5,  1            // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      14: putfield      #6                  // Field trace:Z
      17: aload_0
      18: iconst_0
      19: putfield      #7                  // Field replayEntryWrapping:Z
      22: return

  public org.infinispan.commands.tx.PrepareCommand(java.lang.String, org.infinispan.transaction.xa.GlobalTransaction, boolean, org.infinispan.commands.write.WriteCommand...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/infinispan/commands/tx/AbstractTransactionBoundaryCommand."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
       9: invokeinterface #5,  1            // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      14: putfield      #6                  // Field trace:Z
      17: aload_0
      18: iconst_0
      19: putfield      #7                  // Field replayEntryWrapping:Z
      22: aload_0
      23: aload_2
      24: putfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      27: aload_0
      28: aload         4
      30: putfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      33: aload_0
      34: iload_3
      35: putfield      #10                 // Field onePhaseCommit:Z
      38: return

  public org.infinispan.commands.tx.PrepareCommand(java.lang.String, org.infinispan.transaction.xa.GlobalTransaction, java.util.List<org.infinispan.commands.write.WriteCommand>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/infinispan/commands/tx/AbstractTransactionBoundaryCommand."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
       9: invokeinterface #5,  1            // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      14: putfield      #6                  // Field trace:Z
      17: aload_0
      18: iconst_0
      19: putfield      #7                  // Field replayEntryWrapping:Z
      22: aload_0
      23: aload_2
      24: putfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      27: aload_0
      28: aload_3
      29: ifnull        41
      32: aload_3
      33: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      38: ifeq          45
      41: aconst_null
      42: goto          63
      45: aload_3
      46: aload_3
      47: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      52: anewarray     #13                 // class org/infinispan/commands/write/WriteCommand
      55: invokeinterface #14,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      60: checkcast     #15                 // class "[Lorg/infinispan/commands/write/WriteCommand;"
      63: putfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      66: aload_0
      67: iload         4
      69: putfield      #10                 // Field onePhaseCommit:Z
      72: return

  public org.infinispan.commands.tx.PrepareCommand(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/infinispan/commands/tx/AbstractTransactionBoundaryCommand."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
       9: invokeinterface #5,  1            // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      14: putfield      #6                  // Field trace:Z
      17: aload_0
      18: iconst_0
      19: putfield      #7                  // Field replayEntryWrapping:Z
      22: return

  public java.lang.Object perform(org.infinispan.context.InvocationContext) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: ifnull        14
       4: new           #16                 // class java/lang/IllegalStateException
       7: dup
       8: ldc           #17                 // String Expected null context!
      10: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #19                 // Method createContext:()Lorg/infinispan/context/impl/RemoteTxInvocationContext;
      18: astore_2
      19: aload_2
      20: ifnonnull     25
      23: aconst_null
      24: areturn
      25: aload_0
      26: getfield      #6                  // Field trace:Z
      29: ifeq          44
      32: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      35: ldc           #20                 // String Invoking remotely originated prepare: %s with invocation context: %s
      37: aload_0
      38: aload_2
      39: invokeinterface #21,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      44: aload_0
      45: getfield      #1                  // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      48: aload_2
      49: invokevirtual #22                 // Method org/infinispan/context/impl/RemoteTxInvocationContext.getGlobalTransaction:()Lorg/infinispan/transaction/xa/GlobalTransaction;
      52: iconst_0
      53: invokeinterface #23,  3           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyTransactionRegistered:(Lorg/infinispan/transaction/xa/GlobalTransaction;Z)V
      58: aload_0
      59: getfield      #24                 // Field invoker:Lorg/infinispan/interceptors/InterceptorChain;
      62: aload_2
      63: aload_0
      64: invokevirtual #25                 // Method org/infinispan/interceptors/InterceptorChain.invoke:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      67: areturn

  public org.infinispan.context.impl.RemoteTxInvocationContext createContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field recoveryManager:Lorg/infinispan/transaction/xa/recovery/RecoveryManager;
       4: ifnull        39
       7: aload_0
       8: getfield      #2                  // Field recoveryManager:Lorg/infinispan/transaction/xa/recovery/RecoveryManager;
      11: aload_0
      12: getfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      15: invokeinterface #26,  2           // InterfaceMethod org/infinispan/transaction/xa/recovery/RecoveryManager.isTransactionPrepared:(Lorg/infinispan/transaction/xa/GlobalTransaction;)Z
      20: ifeq          39
      23: getstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
      26: ldc           #27                 // String The transaction %s is already prepared. Skipping prepare call.
      28: aload_0
      29: getfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      32: invokeinterface #28,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      37: aconst_null
      38: areturn
      39: aload_0
      40: invokevirtual #29                 // Method getRemoteTransaction:()Lorg/infinispan/transaction/impl/RemoteTransaction;
      43: astore_1
      44: aload_0
      45: invokevirtual #30                 // Method hasModifications:()Z
      48: ifeq          62
      51: aload_1
      52: aload_0
      53: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      56: invokestatic  #31                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      59: invokevirtual #32                 // Method org/infinispan/transaction/impl/RemoteTransaction.setModifications:(Ljava/util/List;)V
      62: aload_0
      63: getfield      #33                 // Field icf:Lorg/infinispan/context/InvocationContextFactory;
      66: aload_1
      67: aload_0
      68: invokevirtual #34                 // Method getOrigin:()Lorg/infinispan/remoting/transport/Address;
      71: invokeinterface #35,  3           // InterfaceMethod org/infinispan/context/InvocationContextFactory.createRemoteTxInvocationContext:(Lorg/infinispan/transaction/impl/RemoteTransaction;Lorg/infinispan/remoting/transport/Address;)Lorg/infinispan/context/impl/RemoteTxInvocationContext;
      76: areturn

  public java.util.Collection<java.lang.Object> getKeysToLock();
    Code:
       0: aload_0
       1: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
       4: ifnull        15
       7: aload_0
       8: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      11: arraylength
      12: ifne          19
      15: invokestatic  #36                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      18: areturn
      19: new           #37                 // class java/util/HashSet
      22: dup
      23: aload_0
      24: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      27: arraylength
      28: invokespecial #38                 // Method java/util/HashSet."<init>":(I)V
      31: astore_1
      32: aload_0
      33: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      36: aload_1
      37: invokedynamic #39,  0             // InvokeDynamic #0:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
      42: invokestatic  #40                 // Method org/infinispan/commons/util/InfinispanCollections.forEach:([Ljava/lang/Object;Ljava/util/function/Consumer;)V
      45: aload_1
      46: areturn

  public java.lang.Object getKeyLockOwner();
    Code:
       0: aload_0
       1: getfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
       4: areturn

  public boolean hasZeroLockAcquisition();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasSkipLocking();
    Code:
       0: iconst_0
       1: ireturn

  protected org.infinispan.transaction.impl.RemoteTransaction getRemoteTransaction();
    Code:
       0: aload_0
       1: getfield      #41                 // Field txTable:Lorg/infinispan/transaction/impl/TransactionTable;
       4: aload_0
       5: getfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
       8: aload_0
       9: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      12: invokevirtual #42                 // Method org/infinispan/transaction/impl/TransactionTable.getOrCreateRemoteTransaction:(Lorg/infinispan/transaction/xa/GlobalTransaction;[Lorg/infinispan/commands/write/WriteCommand;)Lorg/infinispan/transaction/impl/RemoteTransaction;
      15: areturn

  public java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext, org.infinispan.commands.Visitor) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: aload_1
       2: checkcast     #43                 // class org/infinispan/context/impl/TxInvocationContext
       5: aload_0
       6: invokeinterface #44,  3           // InterfaceMethod org/infinispan/commands/Visitor.visitPrepareCommand:(Lorg/infinispan/context/impl/TxInvocationContext;Lorg/infinispan/commands/tx/PrepareCommand;)Ljava/lang/Object;
      11: areturn

  public org.infinispan.commands.write.WriteCommand[] getModifications();
    Code:
       0: aload_0
       1: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
       4: ifnonnull     13
       7: getstatic     #45                 // Field EMPTY_WRITE_COMMAND_ARRAY:[Lorg/infinispan/commands/write/WriteCommand;
      10: goto          17
      13: aload_0
      14: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      17: areturn

  public boolean isOnePhaseCommit();
    Code:
       0: aload_0
       1: getfield      #10                 // Field onePhaseCommit:Z
       4: ireturn

  public byte getCommandId();
    Code:
       0: bipush        12
       2: ireturn

  public java.lang.Object[] getParameters();
    Code:
       0: aload_0
       1: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      15: arraylength
      16: istore_1
      17: iconst_0
      18: istore_2
      19: iconst_4
      20: istore_3
      21: iload_1
      22: iconst_4
      23: iadd
      24: anewarray     #47                 // class java/lang/Object
      27: astore        4
      29: aload         4
      31: iload_2
      32: iinc          2, 1
      35: aload_0
      36: getfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      39: aastore
      40: aload         4
      42: iload_2
      43: iinc          2, 1
      46: aload_0
      47: getfield      #10                 // Field onePhaseCommit:Z
      50: invokestatic  #48                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      53: aastore
      54: aload         4
      56: iload_2
      57: iinc          2, 1
      60: aload_0
      61: getfield      #49                 // Field retriedCommand:Z
      64: invokestatic  #48                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      67: aastore
      68: aload         4
      70: iload_2
      71: iload_1
      72: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: aastore
      76: iload_1
      77: ifle          92
      80: aload_0
      81: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      84: iconst_0
      85: aload         4
      87: iconst_4
      88: iload_1
      89: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      92: aload         4
      94: areturn

  public void setParameters(int, java.lang.Object[]);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: aload_2
       4: iload_3
       5: iinc          3, 1
       8: aaload
       9: checkcast     #52                 // class org/infinispan/transaction/xa/GlobalTransaction
      12: putfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      15: aload_0
      16: aload_2
      17: iload_3
      18: iinc          3, 1
      21: aaload
      22: checkcast     #53                 // class java/lang/Boolean
      25: invokevirtual #54                 // Method java/lang/Boolean.booleanValue:()Z
      28: putfield      #10                 // Field onePhaseCommit:Z
      31: aload_0
      32: aload_2
      33: iload_3
      34: iinc          3, 1
      37: aaload
      38: checkcast     #53                 // class java/lang/Boolean
      41: invokevirtual #54                 // Method java/lang/Boolean.booleanValue:()Z
      44: putfield      #49                 // Field retriedCommand:Z
      47: aload_2
      48: iload_3
      49: iinc          3, 1
      52: aaload
      53: checkcast     #55                 // class java/lang/Integer
      56: invokevirtual #56                 // Method java/lang/Integer.intValue:()I
      59: istore        4
      61: iload         4
      63: ifle          87
      66: aload_0
      67: iload         4
      69: anewarray     #13                 // class org/infinispan/commands/write/WriteCommand
      72: putfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      75: aload_2
      76: iload_3
      77: aload_0
      78: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      81: iconst_0
      82: iload         4
      84: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      87: return

  public org.infinispan.commands.tx.PrepareCommand copy();
    Code:
       0: new           #46                 // class org/infinispan/commands/tx/PrepareCommand
       3: dup
       4: aload_0
       5: getfield      #57                 // Field cacheName:Ljava/lang/String;
       8: invokespecial #58                 // Method "<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      17: putfield      #8                  // Field globalTx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      20: aload_1
      21: aload_0
      22: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      25: ifnonnull     32
      28: aconst_null
      29: goto          42
      32: aload_0
      33: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      36: invokevirtual #59                 // Method "[Lorg/infinispan/commands/write/WriteCommand;".clone:()Ljava/lang/Object;
      39: checkcast     #15                 // class "[Lorg/infinispan/commands/write/WriteCommand;"
      42: putfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      45: aload_1
      46: aload_0
      47: getfield      #10                 // Field onePhaseCommit:Z
      50: putfield      #10                 // Field onePhaseCommit:Z
      53: aload_1
      54: areturn

  public java.lang.String toString();
    Code:
       0: new           #60                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #62                 // String PrepareCommand {modifications=
       9: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      16: ifnonnull     23
      19: aconst_null
      20: goto          30
      23: aload_0
      24: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      27: invokestatic  #31                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      30: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #65                 // String , onePhaseCommit=
      35: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #10                 // Field onePhaseCommit:Z
      42: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      45: ldc           #67                 // String , retried=
      47: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #49                 // Field retriedCommand:Z
      54: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      57: ldc           #68                 // String ,
      59: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokespecial #69                 // Method org/infinispan/commands/tx/AbstractTransactionBoundaryCommand.toString:()Ljava/lang/String;
      66: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: areturn

  public boolean hasModifications();
    Code:
       0: aload_0
       1: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
       4: ifnull        19
       7: aload_0
       8: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      11: arraylength
      12: ifle          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public java.util.Set<java.lang.Object> getAffectedKeys();
    Code:
       0: aload_0
       1: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
       4: ifnull        15
       7: aload_0
       8: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      11: arraylength
      12: ifne          19
      15: invokestatic  #71                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      18: areturn
      19: aload_0
      20: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      23: arraylength
      24: iconst_1
      25: if_icmpne     40
      28: aload_0
      29: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      32: iconst_0
      33: aaload
      34: invokeinterface #72,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.getAffectedKeys:()Ljava/util/Set;
      39: areturn
      40: new           #37                 // class java/util/HashSet
      43: dup
      44: aload_0
      45: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      48: arraylength
      49: invokespecial #38                 // Method java/util/HashSet."<init>":(I)V
      52: astore_1
      53: aload_0
      54: getfield      #9                  // Field modifications:[Lorg/infinispan/commands/write/WriteCommand;
      57: astore_2
      58: aload_2
      59: arraylength
      60: istore_3
      61: iconst_0
      62: istore        4
      64: iload         4
      66: iload_3
      67: if_icmpge     96
      70: aload_2
      71: iload         4
      73: aaload
      74: astore        5
      76: aload_1
      77: aload         5
      79: invokeinterface #72,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.getAffectedKeys:()Ljava/util/Set;
      84: invokeinterface #73,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      89: pop
      90: iinc          4, 1
      93: goto          64
      96: aload_1
      97: areturn

  public boolean isReplayEntryWrapping();
    Code:
       0: aload_0
       1: getfield      #7                  // Field replayEntryWrapping:Z
       4: ireturn

  public void setReplayEntryWrapping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field replayEntryWrapping:Z
       5: return

  public boolean isReturnValueExpected();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isRetriedCommand();
    Code:
       0: aload_0
       1: getfield      #49                 // Field retriedCommand:Z
       4: ireturn

  public void setRetriedCommand(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #49                 // Field retriedCommand:Z
       5: return

  public org.infinispan.context.impl.TxInvocationContext createContext();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method createContext:()Lorg/infinispan/context/impl/RemoteTxInvocationContext;
       4: areturn

  private static void lambda$getKeysToLock$0(java.util.Set, org.infinispan.commands.write.WriteCommand);
    Code:
       0: aload_1
       1: getstatic     #74                 // Field org/infinispan/context/Flag.SKIP_LOCKING:Lorg/infinispan/context/Flag;
       4: invokeinterface #75,  2           // InterfaceMethod org/infinispan/commands/write/WriteCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
       9: ifeq          13
      12: return
      13: aload_1
      14: invokeinterface #76,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.getCommandId:()B
      19: lookupswitch  { // 6
                     8: 76
                     9: 95
                    10: 76
                    11: 76
                    25: 111
                    58: 76
               default: 135
          }
      76: aload_0
      77: aload_1
      78: checkcast     #77                 // class org/infinispan/commands/write/DataWriteCommand
      81: invokeinterface #78,  1           // InterfaceMethod org/infinispan/commands/write/DataWriteCommand.getKey:()Ljava/lang/Object;
      86: invokeinterface #79,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      91: pop
      92: goto          135
      95: aload_0
      96: aload_1
      97: invokeinterface #72,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.getAffectedKeys:()Ljava/util/Set;
     102: invokeinterface #73,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     107: pop
     108: goto          135
     111: aload_1
     112: checkcast     #80                 // class org/infinispan/commands/write/ApplyDeltaCommand
     115: astore_2
     116: aload_2
     117: invokevirtual #81                 // Method org/infinispan/commands/write/ApplyDeltaCommand.getCompositeKeys:()[Ljava/lang/Object;
     120: astore_3
     121: aload_0
     122: aload_3
     123: invokestatic  #31                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     126: invokeinterface #73,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     131: pop
     132: goto          135
     135: return

  static {};
    Code:
       0: ldc           #46                 // class org/infinispan/commands/tx/PrepareCommand
       2: invokestatic  #82                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #4                  // Field log:Lorg/infinispan/util/logging/Log;
       8: iconst_0
       9: anewarray     #13                 // class org/infinispan/commands/write/WriteCommand
      12: putstatic     #45                 // Field EMPTY_WRITE_COMMAND_ARRAY:[Lorg/infinispan/commands/write/WriteCommand;
      15: return
}
