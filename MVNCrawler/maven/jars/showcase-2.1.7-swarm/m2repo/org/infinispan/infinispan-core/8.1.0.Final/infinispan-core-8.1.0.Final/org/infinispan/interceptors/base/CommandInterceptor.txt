Compiled from "CommandInterceptor.java"
public abstract class org.infinispan.interceptors.base.CommandInterceptor extends org.infinispan.commands.AbstractVisitor {
  private org.infinispan.interceptors.base.CommandInterceptor next;

  protected org.infinispan.configuration.cache.Configuration cacheConfiguration;

  private static final org.infinispan.util.logging.Log log;

  public org.infinispan.interceptors.base.CommandInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/commands/AbstractVisitor."<init>":()V
       4: return

  protected org.infinispan.util.logging.Log getLog();
    Code:
       0: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  public void injectConfiguration(org.infinispan.configuration.cache.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
       5: return

  public final org.infinispan.interceptors.base.CommandInterceptor getNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field next:Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: areturn

  public final boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getNext:()Lorg/infinispan/interceptors/base/CommandInterceptor;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final void setNext(org.infinispan.interceptors.base.CommandInterceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field next:Lorg/infinispan/interceptors/base/CommandInterceptor;
       5: return

  public final java.lang.Object invokeNextInterceptor(org.infinispan.context.InvocationContext, org.infinispan.commands.VisitableCommand) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field next:Lorg/infinispan/interceptors/base/CommandInterceptor;
       6: invokeinterface #6,  3            // InterfaceMethod org/infinispan/commands/VisitableCommand.acceptVisitor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/Visitor;)Ljava/lang/Object;
      11: areturn

  protected java.lang.Object handleDefault(org.infinispan.context.InvocationContext, org.infinispan.commands.VisitableCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #7                  // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: areturn

  protected final long getLockAcquisitionTimeout(org.infinispan.commands.LocalFlagAffectedCommand, boolean);
    Code:
       0: iload_2
       1: ifne          31
       4: aload_1
       5: getstatic     #8                  // Field org/infinispan/context/Flag.ZERO_LOCK_ACQUISITION_TIMEOUT:Lorg/infinispan/context/Flag;
       8: invokeinterface #9,  2            // InterfaceMethod org/infinispan/commands/LocalFlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      13: ifeq          20
      16: lconst_0
      17: goto          30
      20: aload_0
      21: getfield      #3                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      24: invokevirtual #10                 // Method org/infinispan/configuration/cache/Configuration.locking:()Lorg/infinispan/configuration/cache/LockingConfiguration;
      27: invokevirtual #11                 // Method org/infinispan/configuration/cache/LockingConfiguration.lockAcquisitionTimeout:()J
      30: lreturn
      31: ldc2_w        #12                 // long -1l
      34: lreturn

  protected final boolean hasSkipLocking(org.infinispan.commands.LocalFlagAffectedCommand);
    Code:
       0: aload_1
       1: getstatic     #14                 // Field org/infinispan/context/Flag.SKIP_LOCKING:Lorg/infinispan/context/Flag;
       4: invokeinterface #9,  2            // InterfaceMethod org/infinispan/commands/LocalFlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
       9: ireturn

  protected <K, V> org.infinispan.Cache<K, V> getCacheWithFlags(org.infinispan.Cache<K, V>, org.infinispan.commands.LocalFlagAffectedCommand);
    Code:
       0: aload_2
       1: invokeinterface #15,  1           // InterfaceMethod org/infinispan/commands/LocalFlagAffectedCommand.getFlags:()Ljava/util/Set;
       6: astore_3
       7: aload_3
       8: ifnull        50
      11: aload_3
      12: invokeinterface #16,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      17: ifne          50
      20: aload_1
      21: invokeinterface #17,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      26: aload_3
      27: aload_3
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Set.size:()I
      33: anewarray     #19                 // class org/infinispan/context/Flag
      36: invokeinterface #20,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      41: checkcast     #21                 // class "[Lorg/infinispan/context/Flag;"
      44: invokeinterface #22,  2           // InterfaceMethod org/infinispan/AdvancedCache.withFlags:([Lorg/infinispan/context/Flag;)Lorg/infinispan/AdvancedCache;
      49: areturn
      50: aload_1
      51: areturn

  static {};
    Code:
       0: ldc           #23                 // class org/infinispan/interceptors/base/CommandInterceptor
       2: invokestatic  #24                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
