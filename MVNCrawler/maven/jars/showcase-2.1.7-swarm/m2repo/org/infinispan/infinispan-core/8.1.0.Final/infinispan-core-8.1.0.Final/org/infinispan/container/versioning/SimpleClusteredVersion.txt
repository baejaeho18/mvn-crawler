Compiled from "SimpleClusteredVersion.java"
public class org.infinispan.container.versioning.SimpleClusteredVersion implements org.infinispan.container.versioning.IncrementableEntryVersion {
  private final int topologyId;

  final long version;

  public org.infinispan.container.versioning.SimpleClusteredVersion(int, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_2
       6: putfield      #3                  // Field version:J
       9: aload_0
      10: iload_1
      11: putfield      #1                  // Field topologyId:I
      14: return

  public org.infinispan.container.versioning.InequalVersionComparisonResult compareTo(org.infinispan.container.versioning.EntryVersion);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/infinispan/container/versioning/SimpleClusteredVersion
       4: ifeq          78
       7: aload_1
       8: checkcast     #4                  // class org/infinispan/container/versioning/SimpleClusteredVersion
      11: astore_2
      12: aload_0
      13: getfield      #1                  // Field topologyId:I
      16: aload_2
      17: getfield      #1                  // Field topologyId:I
      20: if_icmple     27
      23: getstatic     #5                  // Field org/infinispan/container/versioning/InequalVersionComparisonResult.AFTER:Lorg/infinispan/container/versioning/InequalVersionComparisonResult;
      26: areturn
      27: aload_0
      28: getfield      #1                  // Field topologyId:I
      31: aload_2
      32: getfield      #1                  // Field topologyId:I
      35: if_icmpge     42
      38: getstatic     #6                  // Field org/infinispan/container/versioning/InequalVersionComparisonResult.BEFORE:Lorg/infinispan/container/versioning/InequalVersionComparisonResult;
      41: areturn
      42: aload_0
      43: getfield      #3                  // Field version:J
      46: aload_2
      47: getfield      #3                  // Field version:J
      50: lcmp
      51: ifle          58
      54: getstatic     #5                  // Field org/infinispan/container/versioning/InequalVersionComparisonResult.AFTER:Lorg/infinispan/container/versioning/InequalVersionComparisonResult;
      57: areturn
      58: aload_0
      59: getfield      #3                  // Field version:J
      62: aload_2
      63: getfield      #3                  // Field version:J
      66: lcmp
      67: ifge          74
      70: getstatic     #6                  // Field org/infinispan/container/versioning/InequalVersionComparisonResult.BEFORE:Lorg/infinispan/container/versioning/InequalVersionComparisonResult;
      73: areturn
      74: getstatic     #7                  // Field org/infinispan/container/versioning/InequalVersionComparisonResult.EQUAL:Lorg/infinispan/container/versioning/InequalVersionComparisonResult;
      77: areturn
      78: new           #8                  // class java/lang/IllegalArgumentException
      81: dup
      82: new           #9                  // class java/lang/StringBuilder
      85: dup
      86: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #11                 // String I only know how to deal with SimpleClusteredVersions, not
      91: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      98: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
     101: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     110: athrow

  public java.lang.String toString();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #17                 // String SimpleClusteredVersion{topologyId=
       9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #1                  // Field topologyId:I
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #19                 // String , version=
      21: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field version:J
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  static int access$000(org.infinispan.container.versioning.SimpleClusteredVersion);
    Code:
       0: aload_0
       1: getfield      #1                  // Field topologyId:I
       4: ireturn
}
