Compiled from "ConcurrentHashSet.java"
public class org.infinispan.util.concurrent.ConcurrentHashSet<E> extends java.util.AbstractSet<E> implements java.io.Serializable {
  private static final long serialVersionUID;

  protected final java.util.concurrent.ConcurrentMap<E, java.lang.Object> map;

  private static final java.io.Serializable DUMMY;

  public org.infinispan.util.concurrent.ConcurrentHashSet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      11: return

  public org.infinispan.util.concurrent.ConcurrentHashSet(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: bipush        16
       7: iload_1
       8: invokestatic  #4                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:(II)Ljava/util/concurrent/ConcurrentMap;
      11: putfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      14: return

  public org.infinispan.util.concurrent.ConcurrentHashSet(int, float, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: iload_1
       6: fload_2
       7: iload_3
       8: invokestatic  #5                  // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:(IFI)Ljava/util/concurrent/ConcurrentMap;
      11: putfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      14: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokeinterface #11,  1           // InterfaceMethod java/util/Set.toArray:()[Ljava/lang/Object;
      14: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: aload_1
      10: invokeinterface #12,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      15: areturn

  public boolean add(E);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: getstatic     #13                 // Field DUMMY:Ljava/io/Serializable;
       8: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: aload_1
      10: invokeinterface #16,  2           // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      15: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #18                 // String Not supported in this implementation since additional locking is required and cannot directly be delegated to multiple calls to ConcurrentHashMap
       6: invokespecial #19                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #18                 // String Not supported in this implementation since additional locking is required and cannot directly be delegated to multiple calls to ConcurrentHashMap
       6: invokespecial #19                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #18                 // String Not supported in this implementation since additional locking is required and cannot directly be delegated to multiple calls to ConcurrentHashMap
       6: invokespecial #19                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void clear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  static {};
    Code:
       0: iconst_0
       1: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: putstatic     #13                 // Field DUMMY:Ljava/io/Serializable;
       7: return
}
