Compiled from "Cache.java"
public interface org.infinispan.Cache<K, V> extends org.infinispan.commons.api.BasicCache<K, V>, org.infinispan.commons.api.BatchingCache, org.infinispan.notifications.FilteringListenable<K, V> {
  public abstract void putForExternalRead(K, V);

  public abstract void putForExternalRead(K, V, long, java.util.concurrent.TimeUnit);

  public abstract void putForExternalRead(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);

  public abstract void evict(K);

  public abstract org.infinispan.configuration.cache.Configuration getCacheConfiguration();

  public abstract org.infinispan.manager.EmbeddedCacheManager getCacheManager();

  public abstract org.infinispan.AdvancedCache<K, V> getAdvancedCache();

  public abstract org.infinispan.lifecycle.ComponentStatus getStatus();

  public abstract int size();

  public abstract org.infinispan.CacheSet<K> keySet();

  public abstract org.infinispan.CacheCollection<V> values();

  public abstract org.infinispan.CacheSet<java.util.Map$Entry<K, V>> entrySet();

  public abstract void clear();

  public default java.util.Set entrySet();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod entrySet:()Lorg/infinispan/CacheSet;
       6: areturn

  public default java.util.Collection values();
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod values:()Lorg/infinispan/CacheCollection;
       6: areturn

  public default java.util.Set keySet();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod keySet:()Lorg/infinispan/CacheSet;
       6: areturn
}
