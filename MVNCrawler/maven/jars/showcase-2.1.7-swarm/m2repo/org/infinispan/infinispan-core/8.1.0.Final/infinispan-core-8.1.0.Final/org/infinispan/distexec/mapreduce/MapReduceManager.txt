Compiled from "MapReduceManager.java"
public interface org.infinispan.distexec.mapreduce.MapReduceManager {
  public abstract <KIn, VIn, KOut, VOut> java.util.Set<KOut> mapAndCombineForDistributedReduction(org.infinispan.commands.read.MapCombineCommand<KIn, VIn, KOut, VOut>) throws java.lang.InterruptedException;

  public abstract <KIn, VIn, KOut, VOut> java.util.Map<KOut, java.util.List<VOut>> mapAndCombineForLocalReduction(org.infinispan.commands.read.MapCombineCommand<KIn, VIn, KOut, VOut>) throws java.lang.InterruptedException;

  public abstract <KOut, VOut> java.util.Map<KOut, VOut> reduce(org.infinispan.commands.read.ReduceCommand<KOut, VOut>) throws java.lang.InterruptedException;

  public abstract <KOut, VOut> void reduce(org.infinispan.commands.read.ReduceCommand<KOut, VOut>, java.lang.String) throws java.lang.InterruptedException;

  public abstract <T> java.util.Map<org.infinispan.remoting.transport.Address, java.util.List<T>> mapKeysToNodes(org.infinispan.distribution.DistributionManager, java.lang.String, java.util.Collection<T>);

  public abstract java.util.concurrent.ExecutorService getExecutorService();
}
