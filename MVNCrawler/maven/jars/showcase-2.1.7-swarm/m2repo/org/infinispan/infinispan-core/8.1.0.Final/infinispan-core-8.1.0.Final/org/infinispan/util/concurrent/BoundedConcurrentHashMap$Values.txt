Compiled from "BoundedConcurrentHashMap.java"
final class org.infinispan.util.concurrent.BoundedConcurrentHashMap$Values extends java.util.AbstractCollection<V> {
  final org.infinispan.util.concurrent.BoundedConcurrentHashMap this$0;

  org.infinispan.util.concurrent.BoundedConcurrentHashMap$Values(org.infinispan.util.concurrent.BoundedConcurrentHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractCollection."<init>":()V
       9: return

  public java.util.Iterator<V> iterator();
    Code:
       0: new           #3                  // class org/infinispan/util/concurrent/BoundedConcurrentHashMap$ValueIterator
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
       8: invokespecial #4                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap$ValueIterator."<init>":(Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;)V
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
       4: invokevirtual #5                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
       4: invokevirtual #6                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.isEmpty:()Z
       7: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
       4: aload_1
       5: invokevirtual #7                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
       4: invokevirtual #8                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.clear:()V
       7: return

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_1
       6: ifnonnull     35
       9: aload_2
      10: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          74
      18: aload_2
      19: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: ifnonnull     9
      27: aload_2
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.remove:()V
      33: iconst_1
      34: ireturn
      35: aload_2
      36: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          74
      44: aload_0
      45: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;
      48: invokestatic  #13                 // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap.access$200:(Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap;)Lorg/infinispan/commons/equivalence/Equivalence;
      51: aload_2
      52: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: aload_1
      58: invokeinterface #14,  3           // InterfaceMethod org/infinispan/commons/equivalence/Equivalence.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      63: ifeq          35
      66: aload_2
      67: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.remove:()V
      72: iconst_1
      73: ireturn
      74: iconst_0
      75: ireturn
}
