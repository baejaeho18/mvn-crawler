Compiled from "MarshalledValueOrPrimitiveMapper.java"
public class org.infinispan.persistence.keymappers.MarshalledValueOrPrimitiveMapper extends org.infinispan.persistence.keymappers.DefaultTwoWayKey2StringMapper implements org.infinispan.persistence.keymappers.MarshallingTwoWayKey2StringMapper {
  private org.infinispan.marshall.core.MarshalledValue$Externalizer externalizer;

  public org.infinispan.persistence.keymappers.MarshalledValueOrPrimitiveMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/persistence/keymappers/DefaultTwoWayKey2StringMapper."<init>":()V
       4: return

  public void setMarshaller(org.infinispan.commons.marshall.StreamingMarshaller);
    Code:
       0: aload_0
       1: new           #2                  // class org/infinispan/marshall/core/MarshalledValue$Externalizer
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/infinispan/marshall/core/MarshalledValue$Externalizer."<init>":(Lorg/infinispan/commons/marshall/StreamingMarshaller;)V
       9: putfield      #4                  // Field externalizer:Lorg/infinispan/marshall/core/MarshalledValue$Externalizer;
      12: return

  public java.lang.String getStringMapping(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokespecial #6                  // Method org/infinispan/persistence/keymappers/DefaultTwoWayKey2StringMapper.isSupportedType:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_0
      12: aload_1
      13: invokespecial #7                  // Method org/infinispan/persistence/keymappers/DefaultTwoWayKey2StringMapper.getStringMapping:(Ljava/lang/Object;)Ljava/lang/String;
      16: areturn
      17: aload_1
      18: checkcast     #8                  // class org/infinispan/marshall/core/MarshalledValue
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokespecial #9                  // Method serializeObj:(Lorg/infinispan/marshall/core/MarshalledValue;)Ljava/lang/String;
      27: astore_3
      28: aload_3
      29: areturn
      30: astore_2
      31: new           #11                 // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #12                 // String Exception occurred serializing key.
      37: aload_2
      38: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
    Exception table:
       from    to  target type
          17    29    30   Class java/lang/Exception

  public java.lang.Object getKeyMapping(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokespecial #6                  // Method org/infinispan/persistence/keymappers/DefaultTwoWayKey2StringMapper.isSupportedType:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_0
      12: aload_1
      13: invokespecial #14                 // Method org/infinispan/persistence/keymappers/DefaultTwoWayKey2StringMapper.getKeyMapping:(Ljava/lang/String;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: aload_1
      19: invokespecial #15                 // Method deserializeObj:(Ljava/lang/String;)Lorg/infinispan/marshall/core/MarshalledValue;
      22: astore_2
      23: aload_2
      24: checkcast     #8                  // class org/infinispan/marshall/core/MarshalledValue
      27: astore_3
      28: aload_3
      29: areturn
      30: astore_2
      31: new           #11                 // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #16                 // String Exception occurred deserializing key.
      37: aload_2
      38: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
    Exception table:
       from    to  target type
          17    29    30   Class java/lang/Exception

  private java.lang.String serializeObj(org.infinispan.marshall.core.MarshalledValue) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field externalizer:Lorg/infinispan/marshall/core/MarshalledValue$Externalizer;
       4: ifnonnull     17
       7: new           #17                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #18                 // String Cannot serialize object: undefined marshaller
      13: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #20                 // class java/io/ByteArrayOutputStream
      20: dup
      21: invokespecial #21                 // Method java/io/ByteArrayOutputStream."<init>":()V
      24: astore_2
      25: new           #22                 // class java/io/ObjectOutputStream
      28: dup
      29: aload_2
      30: invokespecial #23                 // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
      33: astore_3
      34: aload_0
      35: getfield      #4                  // Field externalizer:Lorg/infinispan/marshall/core/MarshalledValue$Externalizer;
      38: aload_3
      39: aload_1
      40: invokevirtual #24                 // Method org/infinispan/marshall/core/MarshalledValue$Externalizer.writeObject:(Ljava/io/ObjectOutput;Lorg/infinispan/marshall/core/MarshalledValue;)V
      43: aload_3
      44: invokevirtual #25                 // Method java/io/ObjectOutputStream.close:()V
      47: aload_2
      48: invokevirtual #26                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      51: invokestatic  #27                 // Method org/infinispan/commons/util/Base64.encodeBytes:([B)Ljava/lang/String;
      54: areturn

  private org.infinispan.marshall.core.MarshalledValue deserializeObj(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field externalizer:Lorg/infinispan/marshall/core/MarshalledValue$Externalizer;
       4: ifnonnull     17
       7: new           #17                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #28                 // String Cannot deserialize object: undefined marshaller
      13: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokestatic  #29                 // Method org/infinispan/commons/util/Base64.decode:(Ljava/lang/String;)[B
      21: astore_2
      22: new           #30                 // class java/io/ObjectInputStream
      25: dup
      26: new           #31                 // class java/io/ByteArrayInputStream
      29: dup
      30: aload_2
      31: invokespecial #32                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      34: invokespecial #33                 // Method java/io/ObjectInputStream."<init>":(Ljava/io/InputStream;)V
      37: astore_3
      38: aload_0
      39: getfield      #4                  // Field externalizer:Lorg/infinispan/marshall/core/MarshalledValue$Externalizer;
      42: aload_3
      43: invokevirtual #34                 // Method org/infinispan/marshall/core/MarshalledValue$Externalizer.readObject:(Ljava/io/ObjectInput;)Lorg/infinispan/marshall/core/MarshalledValue;
      46: astore        4
      48: aload_3
      49: invokevirtual #35                 // Method java/io/ObjectInputStream.close:()V
      52: aload         4
      54: areturn

  public boolean isSupportedType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #8                  // class org/infinispan/marshall/core/MarshalledValue
       3: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       6: ifne          17
       9: aload_0
      10: aload_1
      11: invokespecial #6                  // Method org/infinispan/persistence/keymappers/DefaultTwoWayKey2StringMapper.isSupportedType:(Ljava/lang/Class;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
}
