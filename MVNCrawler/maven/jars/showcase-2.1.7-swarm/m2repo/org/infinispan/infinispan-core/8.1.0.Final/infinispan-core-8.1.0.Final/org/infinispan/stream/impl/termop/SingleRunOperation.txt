Compiled from "SingleRunOperation.java"
public class org.infinispan.stream.impl.termop.SingleRunOperation<E, R, S extends java.util.stream.BaseStream<R, S>> extends org.infinispan.stream.impl.termop.BaseTerminalOperation implements org.infinispan.stream.impl.TerminalOperation<E> {
  private final java.util.function.Function<S, ? extends E> function;

  private transient java.util.concurrent.atomic.AtomicBoolean complete;

  public org.infinispan.stream.impl.termop.SingleRunOperation(java.lang.Iterable<org.infinispan.stream.impl.intops.IntermediateOperation>, java.util.function.Supplier<? extends java.util.stream.BaseStream<?, ?>>, java.util.function.Function<S, ? extends E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/infinispan/stream/impl/termop/BaseTerminalOperation."<init>":(Ljava/lang/Iterable;Ljava/util/function/Supplier;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field function:Ljava/util/function/Function;
      11: aload_0
      12: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      15: dup
      16: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      19: putfield      #5                  // Field complete:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: return

  public boolean lostSegment(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field complete:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public E performOperation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: checkcast     #9                  // class java/util/stream/BaseStream
      12: astore_1
      13: aload_0
      14: getfield      #10                 // Field intermediateOperations:Ljava/lang/Iterable;
      17: invokeinterface #11,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          53
      32: aload_2
      33: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #14                 // class org/infinispan/stream/impl/intops/IntermediateOperation
      41: astore_3
      42: aload_3
      43: aload_1
      44: invokeinterface #15,  2           // InterfaceMethod org/infinispan/stream/impl/intops/IntermediateOperation.perform:(Ljava/util/stream/BaseStream;)Ljava/util/stream/BaseStream;
      49: astore_1
      50: goto          23
      53: aload_0
      54: getfield      #2                  // Field function:Ljava/util/function/Function;
      57: aload_1
      58: invokeinterface #16,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      63: astore_2
      64: aload_0
      65: getfield      #5                  // Field complete:Ljava/util/concurrent/atomic/AtomicBoolean;
      68: iconst_1
      69: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      72: aload_2
      73: areturn

  public java.util.function.Function<S, ? extends E> getFunction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field function:Ljava/util/function/Function;
       4: areturn
}
