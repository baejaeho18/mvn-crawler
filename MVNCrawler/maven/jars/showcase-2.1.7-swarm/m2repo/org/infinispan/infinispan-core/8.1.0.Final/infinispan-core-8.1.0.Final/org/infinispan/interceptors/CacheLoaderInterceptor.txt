Compiled from "CacheLoaderInterceptor.java"
public class org.infinispan.interceptors.CacheLoaderInterceptor<K, V> extends org.infinispan.interceptors.base.JmxStatsCommandInterceptor {
  private final java.util.concurrent.atomic.AtomicLong cacheLoads;

  private final java.util.concurrent.atomic.AtomicLong cacheMisses;

  protected org.infinispan.persistence.manager.PersistenceManager persistenceManager;

  protected org.infinispan.notifications.cachelistener.CacheNotifier notifier;

  protected volatile boolean enabled;

  protected org.infinispan.container.EntryFactory entryFactory;

  private org.infinispan.util.TimeService timeService;

  private org.infinispan.container.InternalEntryFactory iceFactory;

  private org.infinispan.container.DataContainer<K, V> dataContainer;

  private org.infinispan.distribution.group.GroupManager groupManager;

  private java.util.concurrent.ExecutorService executorService;

  private org.infinispan.Cache<K, V> cache;

  private org.infinispan.commons.equivalence.Equivalence<? super K> keyEquivalence;

  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  public org.infinispan.interceptors.CacheLoaderInterceptor();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/infinispan/interceptors/base/JmxStatsCommandInterceptor."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #8                  // Field cacheLoads:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: lconst_0
      22: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      25: putfield      #9                  // Field cacheMisses:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: iconst_1
      30: putfield      #10                 // Field enabled:Z
      33: return

  protected org.infinispan.util.logging.Log getLog();
    Code:
       0: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  protected void injectDependencies(org.infinispan.persistence.manager.PersistenceManager, org.infinispan.container.EntryFactory, org.infinispan.notifications.cachelistener.CacheNotifier, org.infinispan.util.TimeService, org.infinispan.container.InternalEntryFactory, org.infinispan.container.DataContainer<K, V>, org.infinispan.distribution.group.GroupManager, java.util.concurrent.ExecutorService, org.infinispan.Cache<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
       5: aload_0
       6: aload_3
       7: putfield      #13                 // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
      10: aload_0
      11: aload_2
      12: putfield      #14                 // Field entryFactory:Lorg/infinispan/container/EntryFactory;
      15: aload_0
      16: aload         4
      18: putfield      #15                 // Field timeService:Lorg/infinispan/util/TimeService;
      21: aload_0
      22: aload         5
      24: putfield      #4                  // Field iceFactory:Lorg/infinispan/container/InternalEntryFactory;
      27: aload_0
      28: aload         6
      30: putfield      #16                 // Field dataContainer:Lorg/infinispan/container/DataContainer;
      33: aload_0
      34: aload         7
      36: putfield      #17                 // Field groupManager:Lorg/infinispan/distribution/group/GroupManager;
      39: aload_0
      40: aload         8
      42: putfield      #1                  // Field executorService:Ljava/util/concurrent/ExecutorService;
      45: aload_0
      46: aload         9
      48: putfield      #3                  // Field cache:Lorg/infinispan/Cache;
      51: return

  public void start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
       5: invokeinterface #18,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      10: invokevirtual #19                 // Method org/infinispan/configuration/cache/Configuration.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfiguration;
      13: invokevirtual #20                 // Method org/infinispan/configuration/cache/DataContainerConfiguration.keyEquivalence:()Lorg/infinispan/commons/equivalence/Equivalence;
      16: putfield      #2                  // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      19: return

  public java.lang.Object visitApplyDeltaCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.ApplyDeltaCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitPutKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitGetCacheEntryCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetCacheEntryCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetAllCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #10                 // Field enabled:Z
       4: ifeq          46
       7: aload_2
       8: invokevirtual #22                 // Method org/infinispan/commands/read/GetAllCommand.getKeys:()Ljava/util/Collection;
      11: invokeinterface #23,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_3
      27: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore        4
      34: aload_0
      35: aload_1
      36: aload         4
      38: aload_2
      39: invokevirtual #26                 // Method loadIfNeeded:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/commands/FlagAffectedCommand;)Ljava/lang/Boolean;
      42: pop
      43: goto          17
      46: aload_0
      47: aload_1
      48: aload_2
      49: invokevirtual #27                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      52: areturn

  public java.lang.Object visitInvalidateCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.InvalidateCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #10                 // Field enabled:Z
       4: ifeq          64
       7: aload_2
       8: invokevirtual #28                 // Method org/infinispan/commands/write/InvalidateCommand.getKeys:()[Ljava/lang/Object;
      11: dup
      12: astore_3
      13: ifnull        64
      16: aload_3
      17: arraylength
      18: ifle          64
      21: aload_2
      22: invokevirtual #28                 // Method org/infinispan/commands/write/InvalidateCommand.getKeys:()[Ljava/lang/Object;
      25: astore        4
      27: aload         4
      29: arraylength
      30: istore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload         5
      39: if_icmpge     64
      42: aload         4
      44: iload         6
      46: aaload
      47: astore        7
      49: aload_0
      50: aload_1
      51: aload         7
      53: aload_2
      54: invokevirtual #26                 // Method loadIfNeeded:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/commands/FlagAffectedCommand;)Ljava/lang/Boolean;
      57: pop
      58: iinc          6, 1
      61: goto          35
      64: aload_0
      65: aload_1
      66: aload_2
      67: invokevirtual #27                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      70: areturn

  public java.lang.Object visitRemoveCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.RemoveCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitReplaceCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.ReplaceCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  private java.lang.Object visitDataCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.AbstractDataCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #10                 // Field enabled:Z
       4: ifeq          24
       7: aload_2
       8: invokevirtual #29                 // Method org/infinispan/commands/read/AbstractDataCommand.getKey:()Ljava/lang/Object;
      11: dup
      12: astore_3
      13: ifnull        24
      16: aload_0
      17: aload_1
      18: aload_3
      19: aload_2
      20: invokevirtual #26                 // Method loadIfNeeded:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/commands/FlagAffectedCommand;)Ljava/lang/Boolean;
      23: pop
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #27                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      30: areturn

  public java.lang.Object visitGetKeysInGroupCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.remote.GetKeysInGroupCommand) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: invokevirtual #30                 // Method org/infinispan/commands/remote/GetKeysInGroupCommand.getGroupName:()Ljava/lang/String;
       4: astore_3
       5: aload_2
       6: invokevirtual #31                 // Method org/infinispan/commands/remote/GetKeysInGroupCommand.isGroupOwner:()Z
       9: ifeq          27
      12: aload_0
      13: getfield      #10                 // Field enabled:Z
      16: ifeq          27
      19: aload_0
      20: aload_2
      21: invokevirtual #32                 // Method hasSkipLoadFlag:(Lorg/infinispan/commands/LocalFlagAffectedCommand;)Z
      24: ifeq          34
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #27                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      33: areturn
      34: new           #33                 // class org/infinispan/filter/CompositeKeyFilter
      37: dup
      38: iconst_2
      39: anewarray     #34                 // class org/infinispan/filter/KeyFilter
      42: dup
      43: iconst_0
      44: new           #35                 // class org/infinispan/distribution/group/GroupFilter
      47: dup
      48: aload_3
      49: aload_0
      50: getfield      #17                 // Field groupManager:Lorg/infinispan/distribution/group/GroupManager;
      53: invokespecial #36                 // Method org/infinispan/distribution/group/GroupFilter."<init>":(Ljava/lang/String;Lorg/infinispan/distribution/group/GroupManager;)V
      56: aastore
      57: dup
      58: iconst_1
      59: new           #37                 // class org/infinispan/filter/CollectionKeyFilter
      62: dup
      63: aload_1
      64: invokeinterface #38,  1           // InterfaceMethod org/infinispan/context/InvocationContext.getLookedUpEntries:()Ljava/util/Map;
      69: invokeinterface #39,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      74: invokespecial #40                 // Method org/infinispan/filter/CollectionKeyFilter."<init>":(Ljava/util/Collection;)V
      77: aastore
      78: invokespecial #41                 // Method org/infinispan/filter/CompositeKeyFilter."<init>":([Lorg/infinispan/filter/KeyFilter;)V
      81: astore        4
      83: aload_0
      84: getfield      #12                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      87: aload         4
      89: new           #42                 // class org/infinispan/interceptors/CacheLoaderInterceptor$1
      92: dup
      93: aload_0
      94: aload_1
      95: invokespecial #43                 // Method org/infinispan/interceptors/CacheLoaderInterceptor$1."<init>":(Lorg/infinispan/interceptors/CacheLoaderInterceptor;Lorg/infinispan/context/InvocationContext;)V
      98: iconst_1
      99: iconst_1
     100: invokeinterface #44,  5           // InterfaceMethod org/infinispan/persistence/manager/PersistenceManager.processOnAllStores:(Lorg/infinispan/filter/KeyFilter;Lorg/infinispan/persistence/spi/AdvancedCacheLoader$CacheLoaderTask;ZZ)V
     105: aload_0
     106: aload_1
     107: aload_2
     108: invokevirtual #27                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
     111: areturn

  public org.infinispan.CacheSet<org.infinispan.container.entries.CacheEntry<K, V>> visitEntrySetCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.EntrySetCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #27                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: checkcast     #45                 // class org/infinispan/CacheSet
       9: astore_3
      10: aload_0
      11: getfield      #10                 // Field enabled:Z
      14: ifeq          25
      17: aload_0
      18: aload_2
      19: invokevirtual #32                 // Method hasSkipLoadFlag:(Lorg/infinispan/commands/LocalFlagAffectedCommand;)Z
      22: ifeq          27
      25: aload_3
      26: areturn
      27: new           #46                 // class org/infinispan/interceptors/CacheLoaderInterceptor$2
      30: dup
      31: aload_0
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      37: aload_2
      38: invokevirtual #47                 // Method getCacheWithFlags:(Lorg/infinispan/Cache;Lorg/infinispan/commands/LocalFlagAffectedCommand;)Lorg/infinispan/Cache;
      41: aload_3
      42: aload_3
      43: invokespecial #48                 // Method org/infinispan/interceptors/CacheLoaderInterceptor$2."<init>":(Lorg/infinispan/interceptors/CacheLoaderInterceptor;Lorg/infinispan/Cache;Lorg/infinispan/CacheSet;Lorg/infinispan/CacheSet;)V
      46: areturn

  public org.infinispan.CacheSet<K> visitKeySetCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.KeySetCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #27                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: checkcast     #45                 // class org/infinispan/CacheSet
       9: astore_3
      10: aload_0
      11: getfield      #10                 // Field enabled:Z
      14: ifeq          25
      17: aload_0
      18: aload_2
      19: invokevirtual #32                 // Method hasSkipLoadFlag:(Lorg/infinispan/commands/LocalFlagAffectedCommand;)Z
      22: ifeq          27
      25: aload_3
      26: areturn
      27: new           #49                 // class org/infinispan/interceptors/CacheLoaderInterceptor$3
      30: dup
      31: aload_0
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
      37: aload_2
      38: invokevirtual #47                 // Method getCacheWithFlags:(Lorg/infinispan/Cache;Lorg/infinispan/commands/LocalFlagAffectedCommand;)Lorg/infinispan/Cache;
      41: aload_3
      42: aload_3
      43: invokespecial #50                 // Method org/infinispan/interceptors/CacheLoaderInterceptor$3."<init>":(Lorg/infinispan/interceptors/CacheLoaderInterceptor;Lorg/infinispan/Cache;Lorg/infinispan/CacheSet;Lorg/infinispan/CacheSet;)V
      46: areturn

  public java.lang.Object visitReadOnlyKeyCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.functional.ReadOnlyKeyCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitReadWriteKeyCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.functional.ReadWriteKeyCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object visitReadWriteKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.functional.ReadWriteKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #21                 // Method visitDataCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/AbstractDataCommand;)Ljava/lang/Object;
       6: areturn

  protected final boolean isConditional(org.infinispan.commands.write.WriteCommand);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.isConditional:()Z
       6: ireturn

  protected final boolean hasSkipLoadFlag(org.infinispan.commands.LocalFlagAffectedCommand);
    Code:
       0: aload_1
       1: getstatic     #52                 // Field org/infinispan/context/Flag.SKIP_CACHE_LOAD:Lorg/infinispan/context/Flag;
       4: invokeinterface #53,  2           // InterfaceMethod org/infinispan/commands/LocalFlagAffectedCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
       9: ireturn

  protected boolean canLoad(java.lang.Object);
    Code:
       0: iconst_1
       1: ireturn

  protected final java.lang.Boolean loadIfNeeded(org.infinispan.context.InvocationContext, java.lang.Object, org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: aload_0
       1: aload_3
       2: aload_2
       3: aload_1
       4: invokespecial #54                 // Method skipLoad:(Lorg/infinispan/commands/FlagAffectedCommand;Ljava/lang/Object;Lorg/infinispan/context/InvocationContext;)Z
       7: ifeq          12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokespecial #55                 // Method loadInContext:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/commands/FlagAffectedCommand;)Ljava/lang/Boolean;
      19: areturn

  private java.lang.Boolean loadInContext(org.infinispan.context.InvocationContext, java.lang.Object, org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: new           #56                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #57                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #16                 // Field dataContainer:Lorg/infinispan/container/DataContainer;
      13: aload_0
      14: getfield      #12                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      17: aload_2
      18: aload_1
      19: aload_0
      20: getfield      #15                 // Field timeService:Lorg/infinispan/util/TimeService;
      23: aload         4
      25: invokestatic  #58                 // Method org/infinispan/persistence/PersistenceUtil.loadAndStoreInDataContainer:(Lorg/infinispan/container/DataContainer;Lorg/infinispan/persistence/manager/PersistenceManager;Ljava/lang/Object;Lorg/infinispan/context/InvocationContext;Lorg/infinispan/util/TimeService;Ljava/util/concurrent/atomic/AtomicReference;)Lorg/infinispan/container/entries/InternalCacheEntry;
      28: astore        5
      30: aload         4
      32: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      35: checkcast     #60                 // class java/lang/Boolean
      38: astore        6
      40: getstatic     #61                 // Field trace:Z
      43: ifeq          58
      46: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      49: ldc           #62                 // String Entry was loaded? %s
      51: aload         6
      53: invokeinterface #63,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      58: aload_0
      59: invokevirtual #64                 // Method getStatisticsEnabled:()Z
      62: ifeq          100
      65: aload         6
      67: ifnonnull     73
      70: goto          100
      73: aload         6
      75: invokevirtual #65                 // Method java/lang/Boolean.booleanValue:()Z
      78: ifeq          92
      81: aload_0
      82: getfield      #8                  // Field cacheLoads:Ljava/util/concurrent/atomic/AtomicLong;
      85: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      88: pop2
      89: goto          100
      92: aload_0
      93: getfield      #9                  // Field cacheMisses:Ljava/util/concurrent/atomic/AtomicLong;
      96: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      99: pop2
     100: aload         5
     102: ifnull        195
     105: aload_3
     106: instanceof    #67                 // class org/infinispan/commands/write/WriteCommand
     109: ifeq          118
     112: getstatic     #68                 // Field org/infinispan/container/EntryFactory$Wrap.WRAP_NON_NULL:Lorg/infinispan/container/EntryFactory$Wrap;
     115: goto          121
     118: getstatic     #69                 // Field org/infinispan/container/EntryFactory$Wrap.STORE:Lorg/infinispan/container/EntryFactory$Wrap;
     121: astore        7
     123: aload_0
     124: getfield      #14                 // Field entryFactory:Lorg/infinispan/container/EntryFactory;
     127: aload_1
     128: aload_2
     129: aload         5
     131: aload         7
     133: aload_3
     134: invokeinterface #70,  1           // InterfaceMethod org/infinispan/commands/FlagAffectedCommand.readsExistingValues:()Z
     139: ifne          146
     142: iconst_1
     143: goto          147
     146: iconst_0
     147: invokeinterface #71,  6           // InterfaceMethod org/infinispan/container/EntryFactory.wrapExternalEntry:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/container/entries/CacheEntry;Lorg/infinispan/container/EntryFactory$Wrap;Z)Z
     152: pop
     153: aload         6
     155: ifnull        195
     158: aload         6
     160: invokevirtual #65                 // Method java/lang/Boolean.booleanValue:()Z
     163: ifeq          195
     166: aload         5
     168: invokeinterface #72,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getValue:()Ljava/lang/Object;
     173: astore        8
     175: aload_0
     176: aload_2
     177: aload         8
     179: iconst_1
     180: aload_1
     181: aload_3
     182: invokevirtual #73                 // Method sendNotification:(Ljava/lang/Object;Ljava/lang/Object;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
     185: aload_0
     186: aload_2
     187: aload         8
     189: iconst_0
     190: aload_1
     191: aload_3
     192: invokevirtual #73                 // Method sendNotification:(Ljava/lang/Object;Ljava/lang/Object;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
     195: aload         6
     197: areturn

  private boolean skipLoad(org.infinispan.commands.FlagAffectedCommand, java.lang.Object, org.infinispan.context.InvocationContext);
    Code:
       0: aload_0
       1: aload_3
       2: aload_2
       3: invokeinterface #74,  2           // InterfaceMethod org/infinispan/context/InvocationContext.lookupEntry:(Ljava/lang/Object;)Lorg/infinispan/container/entries/CacheEntry;
       8: invokespecial #75                 // Method shouldAttemptLookup:(Lorg/infinispan/container/entries/CacheEntry;)Z
      11: ifne          33
      14: getstatic     #61                 // Field trace:Z
      17: ifeq          31
      20: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      23: ldc           #76                 // String Skip load for command %s. Entry already exists in context.
      25: aload_1
      26: invokeinterface #63,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      31: iconst_1
      32: ireturn
      33: aload_0
      34: aload_2
      35: invokevirtual #77                 // Method canLoad:(Ljava/lang/Object;)Z
      38: ifne          60
      41: getstatic     #61                 // Field trace:Z
      44: ifeq          58
      47: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      50: ldc           #78                 // String Skip load for command %s. Cannot load the key.
      52: aload_1
      53: invokeinterface #63,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      58: iconst_1
      59: ireturn
      60: aload_1
      61: instanceof    #67                 // class org/infinispan/commands/write/WriteCommand
      64: ifeq          104
      67: aload_0
      68: aload_1
      69: checkcast     #67                 // class org/infinispan/commands/write/WriteCommand
      72: aload_2
      73: aload_3
      74: invokevirtual #79                 // Method skipLoadForWriteCommand:(Lorg/infinispan/commands/write/WriteCommand;Ljava/lang/Object;Lorg/infinispan/context/InvocationContext;)Z
      77: istore        4
      79: getstatic     #61                 // Field trace:Z
      82: ifeq          133
      85: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      88: ldc           #80                 // String Skip load for write command %s? %s
      90: aload_1
      91: iload         4
      93: invokestatic  #81                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      96: invokeinterface #82,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     101: goto          133
     104: aload_0
     105: aload_1
     106: invokevirtual #32                 // Method hasSkipLoadFlag:(Lorg/infinispan/commands/LocalFlagAffectedCommand;)Z
     109: istore        4
     111: getstatic     #61                 // Field trace:Z
     114: ifeq          133
     117: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
     120: ldc           #83                 // String Skip load for command %s?. %s
     122: aload_1
     123: iload         4
     125: invokestatic  #81                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     128: invokeinterface #82,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     133: iload         4
     135: ireturn

  protected boolean skipLoadForWriteCommand(org.infinispan.commands.write.WriteCommand, java.lang.Object, org.infinispan.context.InvocationContext);
    Code:
       0: aload_1
       1: invokeinterface #84,  1           // InterfaceMethod org/infinispan/commands/write/WriteCommand.readsExistingValues:()Z
       6: ifeq          32
       9: aload_0
      10: aload_1
      11: invokevirtual #32                 // Method hasSkipLoadFlag:(Lorg/infinispan/commands/LocalFlagAffectedCommand;)Z
      14: ifeq          30
      17: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      20: ldc           #85                 // String Skipping load for command that reads existing values %s
      22: aload_1
      23: invokeinterface #63,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      28: iconst_1
      29: ireturn
      30: iconst_0
      31: ireturn
      32: iconst_1
      33: ireturn

  private boolean shouldAttemptLookup(org.infinispan.container.entries.CacheEntry);
    Code:
       0: aload_1
       1: ifnull        31
       4: aload_1
       5: invokeinterface #86,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.isNull:()Z
      10: ifne          22
      13: aload_1
      14: invokeinterface #87,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
      19: ifnonnull     35
      22: aload_1
      23: invokeinterface #88,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.skipLookup:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  protected void sendNotification(java.lang.Object, java.lang.Object, boolean, org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand);
    Code:
       0: aload_0
       1: getfield      #13                 // Field notifier:Lorg/infinispan/notifications/cachelistener/CacheNotifier;
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: aload         5
      11: invokeinterface #89,  6           // InterfaceMethod org/infinispan/notifications/cachelistener/CacheNotifier.notifyCacheEntryLoaded:(Ljava/lang/Object;Ljava/lang/Object;ZLorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/FlagAffectedCommand;)V
      16: return

  public long getCacheLoaderLoads();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cacheLoads:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getCacheLoaderMisses();
    Code:
       0: aload_0
       1: getfield      #9                  // Field cacheMisses:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void resetStatistics();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cacheLoads:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: aload_0
       9: getfield      #9                  // Field cacheMisses:Ljava/util/concurrent/atomic/AtomicLong;
      12: lconst_0
      13: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      16: return

  public java.util.Collection<java.lang.String> getStores();
    Code:
       0: aload_0
       1: getfield      #10                 // Field enabled:Z
       4: ifeq          30
       7: aload_0
       8: getfield      #92                 // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      11: invokevirtual #93                 // Method org/infinispan/configuration/cache/Configuration.persistence:()Lorg/infinispan/configuration/cache/PersistenceConfiguration;
      14: invokevirtual #94                 // Method org/infinispan/configuration/cache/PersistenceConfiguration.usingStores:()Z
      17: ifeq          30
      20: aload_0
      21: getfield      #12                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      24: invokeinterface #95,  1           // InterfaceMethod org/infinispan/persistence/manager/PersistenceManager.getStoresAsString:()Ljava/util/Collection;
      29: areturn
      30: invokestatic  #96                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      33: areturn

  public void disableStore(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field enabled:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #12                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      11: aload_1
      12: invokeinterface #97,  2           // InterfaceMethod org/infinispan/persistence/manager/PersistenceManager.disableStore:(Ljava/lang/String;)V
      17: return

  public void disableInterceptor();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #10                 // Field enabled:Z
       5: return

  public java.lang.Object visitEntrySetCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.EntrySetCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #98                 // Method visitEntrySetCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/EntrySetCommand;)Lorg/infinispan/CacheSet;
       6: areturn

  public java.lang.Object visitKeySetCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.KeySetCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #99                 // Method visitKeySetCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/KeySetCommand;)Lorg/infinispan/CacheSet;
       6: areturn

  static org.infinispan.container.InternalEntryFactory access$000(org.infinispan.interceptors.CacheLoaderInterceptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field iceFactory:Lorg/infinispan/container/InternalEntryFactory;
       4: areturn

  static org.infinispan.Cache access$100(org.infinispan.interceptors.CacheLoaderInterceptor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
       4: areturn

  static org.infinispan.commons.equivalence.Equivalence access$200(org.infinispan.interceptors.CacheLoaderInterceptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
       4: areturn

  static java.util.concurrent.ExecutorService access$300(org.infinispan.interceptors.CacheLoaderInterceptor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static {};
    Code:
       0: ldc           #100                // class org/infinispan/interceptors/CacheLoaderInterceptor
       2: invokestatic  #101                // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #11                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #102,  1          // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #61                 // Field trace:Z
      19: return
}
