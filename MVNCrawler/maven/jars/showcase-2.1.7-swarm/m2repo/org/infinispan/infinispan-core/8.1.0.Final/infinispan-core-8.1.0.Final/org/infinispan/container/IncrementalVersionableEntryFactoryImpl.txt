Compiled from "IncrementalVersionableEntryFactoryImpl.java"
public class org.infinispan.container.IncrementalVersionableEntryFactoryImpl extends org.infinispan.container.EntryFactoryImpl {
  private org.infinispan.container.versioning.VersionGenerator versionGenerator;

  public org.infinispan.container.IncrementalVersionableEntryFactoryImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/container/EntryFactoryImpl."<init>":()V
       4: return

  public void injectVersionGenerator(org.infinispan.container.versioning.VersionGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field versionGenerator:Lorg/infinispan/container/versioning/VersionGenerator;
       5: return

  protected org.infinispan.container.entries.MVCCEntry createWrappedEntry(java.lang.Object, org.infinispan.container.entries.CacheEntry, org.infinispan.context.InvocationContext, boolean);
    Code:
       0: aload_2
       1: ifnull        23
       4: aload_2
       5: invokeinterface #3,  1            // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
      10: astore        6
      12: aload_2
      13: invokeinterface #4,  1            // InterfaceMethod org/infinispan/container/entries/CacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
      18: astore        5
      20: goto          52
      23: aconst_null
      24: astore        6
      26: new           #5                  // class org/infinispan/metadata/EmbeddedMetadata$Builder
      29: dup
      30: invokespecial #6                  // Method org/infinispan/metadata/EmbeddedMetadata$Builder."<init>":()V
      33: aload_0
      34: getfield      #2                  // Field versionGenerator:Lorg/infinispan/container/versioning/VersionGenerator;
      37: invokeinterface #7,  1            // InterfaceMethod org/infinispan/container/versioning/VersionGenerator.nonExistingVersion:()Lorg/infinispan/container/versioning/IncrementableEntryVersion;
      42: invokevirtual #8                  // Method org/infinispan/metadata/EmbeddedMetadata$Builder.version:(Lorg/infinispan/container/versioning/EntryVersion;)Lorg/infinispan/metadata/Metadata$Builder;
      45: invokeinterface #9,  1            // InterfaceMethod org/infinispan/metadata/Metadata$Builder.build:()Lorg/infinispan/metadata/Metadata;
      50: astore        5
      52: iload         4
      54: ifne          66
      57: aload_0
      58: aload_1
      59: aload_2
      60: aload_3
      61: aload         5
      63: invokespecial #10                 // Method addReadVersion:(Ljava/lang/Object;Lorg/infinispan/container/entries/CacheEntry;Lorg/infinispan/context/InvocationContext;Lorg/infinispan/metadata/Metadata;)V
      66: new           #11                 // class org/infinispan/container/entries/ClusteredRepeatableReadEntry
      69: dup
      70: aload_1
      71: aload         6
      73: aload         5
      75: invokespecial #12                 // Method org/infinispan/container/entries/ClusteredRepeatableReadEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)V
      78: areturn

  public boolean wrapExternalEntry(org.infinispan.context.InvocationContext, java.lang.Object, org.infinispan.container.entries.CacheEntry, org.infinispan.container.EntryFactory$Wrap, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: invokespecial #13                 // Method org/infinispan/container/EntryFactoryImpl.wrapExternalEntry:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Object;Lorg/infinispan/container/entries/CacheEntry;Lorg/infinispan/container/EntryFactory$Wrap;Z)Z
      11: istore        6
      13: iload         6
      15: ifeq          68
      18: aload_1
      19: invokeinterface #14,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isOriginLocal:()Z
      24: ifeq          68
      27: aload_1
      28: invokeinterface #15,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isInTxScope:()Z
      33: ifeq          68
      36: aload_3
      37: ifnull        68
      40: aload_3
      41: invokeinterface #4,  1            // InterfaceMethod org/infinispan/container/entries/CacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
      46: invokeinterface #16,  1           // InterfaceMethod org/infinispan/metadata/Metadata.version:()Lorg/infinispan/container/versioning/EntryVersion;
      51: astore        7
      53: aload_1
      54: checkcast     #17                 // class org/infinispan/context/impl/TxInvocationContext
      57: invokeinterface #18,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      62: aload_2
      63: aload         7
      65: invokevirtual #19                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.replaceVersionRead:(Ljava/lang/Object;Lorg/infinispan/container/versioning/EntryVersion;)V
      68: iload         6
      70: ireturn

  private void addReadVersion(java.lang.Object, org.infinispan.container.entries.CacheEntry, org.infinispan.context.InvocationContext, org.infinispan.metadata.Metadata);
    Code:
       0: aload_3
       1: invokeinterface #14,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isOriginLocal:()Z
       6: ifeq          60
       9: aload_3
      10: invokeinterface #15,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isInTxScope:()Z
      15: ifeq          60
      18: aload_2
      19: ifnull        34
      22: aload         4
      24: invokeinterface #16,  1           // InterfaceMethod org/infinispan/metadata/Metadata.version:()Lorg/infinispan/container/versioning/EntryVersion;
      29: astore        5
      31: goto          45
      34: aload_0
      35: getfield      #2                  // Field versionGenerator:Lorg/infinispan/container/versioning/VersionGenerator;
      38: invokeinterface #7,  1            // InterfaceMethod org/infinispan/container/versioning/VersionGenerator.nonExistingVersion:()Lorg/infinispan/container/versioning/IncrementableEntryVersion;
      43: astore        5
      45: aload_3
      46: checkcast     #17                 // class org/infinispan/context/impl/TxInvocationContext
      49: invokeinterface #18,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      54: aload_1
      55: aload         5
      57: invokevirtual #20                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.addVersionRead:(Ljava/lang/Object;Lorg/infinispan/container/versioning/EntryVersion;)V
      60: return
}
