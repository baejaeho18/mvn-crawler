Compiled from "ClusterTopologyManagerImpl.java"
class org.infinispan.topology.ClusterTopologyManagerImpl$CacheTopologyFilterReuser implements org.infinispan.remoting.rpc.ResponseFilter {
  java.util.Map<org.infinispan.topology.CacheTopology, org.infinispan.topology.CacheTopology> seenTopologies;

  java.util.Map<org.infinispan.topology.CacheJoinInfo, org.infinispan.topology.CacheJoinInfo> seenInfos;

  private org.infinispan.topology.ClusterTopologyManagerImpl$CacheTopologyFilterReuser();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field seenTopologies:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field seenInfos:Ljava/util/Map;
      26: return

  public boolean isAcceptable(org.infinispan.remoting.responses.Response, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/infinispan/remoting/responses/Response.isSuccessful:()Z
       6: ifeq          313
       9: aload_1
      10: invokeinterface #8,  1            // InterfaceMethod org/infinispan/remoting/responses/Response.isValid:()Z
      15: ifeq          313
      18: aload_1
      19: checkcast     #9                  // class org/infinispan/remoting/responses/SuccessfulResponse
      22: invokevirtual #10                 // Method org/infinispan/remoting/responses/SuccessfulResponse.getResponseValue:()Ljava/lang/Object;
      25: checkcast     #11                 // class org/infinispan/topology/ManagerStatusResponse
      28: astore_3
      29: aload_3
      30: invokevirtual #12                 // Method org/infinispan/topology/ManagerStatusResponse.getCaches:()Ljava/util/Map;
      33: invokeinterface #13,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore        4
      45: aload         4
      47: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          313
      55: aload         4
      57: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #17                 // class java/util/Map$Entry
      65: astore        5
      67: aload         5
      69: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #19                 // class org/infinispan/topology/CacheStatusResponse
      77: astore        6
      79: aload         6
      81: invokevirtual #20                 // Method org/infinispan/topology/CacheStatusResponse.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
      84: astore        7
      86: aload         6
      88: invokevirtual #21                 // Method org/infinispan/topology/CacheStatusResponse.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
      91: astore        8
      93: aload_0
      94: getfield      #5                  // Field seenTopologies:Ljava/util/Map;
      97: aload         7
      99: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #23                 // class org/infinispan/topology/CacheTopology
     107: astore        9
     109: aload         9
     111: ifnonnull     132
     114: aload_0
     115: getfield      #5                  // Field seenTopologies:Ljava/util/Map;
     118: aload         7
     120: aload         7
     122: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload         7
     130: astore        9
     132: aconst_null
     133: astore        10
     135: aload         7
     137: aload         8
     139: invokevirtual #25                 // Method org/infinispan/topology/CacheTopology.equals:(Ljava/lang/Object;)Z
     142: ifne          183
     145: aload_0
     146: getfield      #5                  // Field seenTopologies:Ljava/util/Map;
     149: aload         8
     151: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     156: checkcast     #23                 // class org/infinispan/topology/CacheTopology
     159: astore        10
     161: aload         10
     163: ifnonnull     197
     166: aload_0
     167: getfield      #5                  // Field seenTopologies:Ljava/util/Map;
     170: aload         8
     172: aload         8
     174: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     179: pop
     180: goto          197
     183: aload         9
     185: ifnull        193
     188: aload         9
     190: goto          195
     193: aload         7
     195: astore        10
     197: aload         6
     199: invokevirtual #26                 // Method org/infinispan/topology/CacheStatusResponse.getCacheJoinInfo:()Lorg/infinispan/topology/CacheJoinInfo;
     202: astore        11
     204: aload_0
     205: getfield      #6                  // Field seenInfos:Ljava/util/Map;
     208: aload         11
     210: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     215: checkcast     #27                 // class org/infinispan/topology/CacheJoinInfo
     218: astore        12
     220: aload         12
     222: ifnonnull     239
     225: aload_0
     226: getfield      #6                  // Field seenInfos:Ljava/util/Map;
     229: aload         11
     231: aload         11
     233: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     238: pop
     239: aload         9
     241: ifnonnull     254
     244: aload         10
     246: ifnonnull     254
     249: aload         12
     251: ifnull        310
     254: aload         5
     256: new           #19                 // class org/infinispan/topology/CacheStatusResponse
     259: dup
     260: aload         12
     262: ifnull        270
     265: aload         12
     267: goto          272
     270: aload         11
     272: aload         9
     274: ifnull        282
     277: aload         9
     279: goto          284
     282: aload         7
     284: aload         10
     286: ifnull        294
     289: aload         10
     291: goto          296
     294: aload         8
     296: aload         6
     298: invokevirtual #28                 // Method org/infinispan/topology/CacheStatusResponse.getAvailabilityMode:()Lorg/infinispan/partitionhandling/AvailabilityMode;
     301: invokespecial #29                 // Method org/infinispan/topology/CacheStatusResponse."<init>":(Lorg/infinispan/topology/CacheJoinInfo;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;)V
     304: invokeinterface #30,  2           // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
     309: pop
     310: goto          45
     313: iconst_1
     314: ireturn

  public boolean needMoreResponses();
    Code:
       0: iconst_1
       1: ireturn

  org.infinispan.topology.ClusterTopologyManagerImpl$CacheTopologyFilterReuser(org.infinispan.topology.ClusterTopologyManagerImpl$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
