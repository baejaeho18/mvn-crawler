Compiled from "DistributedEntryRetriever.java"
class org.infinispan.iteration.impl.DistributedEntryRetriever$MapAction<K, V, C> implements java.util.function.BiConsumer<K, org.infinispan.container.entries.CacheEntry<K, V>> {
  final java.util.UUID identifier;

  final java.util.Set<java.lang.Integer> segments;

  final int batchSize;

  final org.infinispan.filter.Converter<? super K, ? super V, C> converter;

  final org.infinispan.iteration.impl.DistributedEntryRetriever$SegmentBatchHandler<K, C> handler;

  final java.util.Queue<org.infinispan.container.entries.CacheEntry<K, C>> queue;

  final java.util.concurrent.atomic.AtomicInteger insertionCount;

  final org.infinispan.iteration.impl.DistributedEntryRetriever this$0;

  public org.infinispan.iteration.impl.DistributedEntryRetriever$MapAction(java.util.UUID, java.util.Set<java.lang.Integer>, java.util.Set<java.lang.Integer>, int, org.infinispan.filter.Converter<? super K, ? super V, C>, org.infinispan.iteration.impl.DistributedEntryRetriever$SegmentBatchHandler<K, C>, java.util.Queue<org.infinispan.container.entries.CacheEntry<K, C>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/infinispan/iteration/impl/DistributedEntryRetriever;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      17: putfield      #5                  // Field insertionCount:Ljava/util/concurrent/atomic/AtomicInteger;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field identifier:Ljava/util/UUID;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field segments:Ljava/util/Set;
      30: aload_0
      31: iload         5
      33: putfield      #8                  // Field batchSize:I
      36: aload_0
      37: aload         6
      39: putfield      #9                  // Field converter:Lorg/infinispan/filter/Converter;
      42: aload_0
      43: aload         7
      45: putfield      #10                 // Field handler:Lorg/infinispan/iteration/impl/DistributedEntryRetriever$SegmentBatchHandler;
      48: aload_0
      49: aload         8
      51: putfield      #11                 // Field queue:Ljava/util/Queue;
      54: return

  public void accept(K, org.infinispan.container.entries.CacheEntry<K, V>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/iteration/impl/DistributedEntryRetriever;
       4: invokestatic  #12                 // Method org/infinispan/iteration/impl/DistributedEntryRetriever.access$500:(Lorg/infinispan/iteration/impl/DistributedEntryRetriever;)Lorg/infinispan/distribution/ch/ConsistentHash;
       7: astore_3
       8: aload_0
       9: getfield      #7                  // Field segments:Ljava/util/Set;
      12: aload_3
      13: aload_1
      14: invokeinterface #13,  2           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getSegment:(Ljava/lang/Object;)I
      19: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokeinterface #15,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      27: ifeq          194
      30: aload_2
      31: invokeinterface #16,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.clone:()Lorg/infinispan/container/entries/CacheEntry;
      36: astore        4
      38: aload_0
      39: getfield      #9                  // Field converter:Lorg/infinispan/filter/Converter;
      42: ifnull        95
      45: aload_0
      46: getfield      #9                  // Field converter:Lorg/infinispan/filter/Converter;
      49: aload_1
      50: aload_2
      51: invokeinterface #17,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
      56: aload_2
      57: invokeinterface #18,  1           // InterfaceMethod org/infinispan/container/entries/CacheEntry.getMetadata:()Lorg/infinispan/metadata/Metadata;
      62: invokeinterface #19,  4           // InterfaceMethod org/infinispan/filter/Converter.convert:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)Ljava/lang/Object;
      67: astore        5
      69: aload         5
      71: ifnonnull     85
      74: aload_0
      75: getfield      #9                  // Field converter:Lorg/infinispan/filter/Converter;
      78: instanceof    #20                 // class org/infinispan/filter/KeyValueFilterConverter
      81: ifeq          85
      84: return
      85: aload         4
      87: aload         5
      89: invokeinterface #21,  2           // InterfaceMethod org/infinispan/container/entries/CacheEntry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: aload_0
      96: getfield      #11                 // Field queue:Ljava/util/Queue;
      99: aload         4
     101: invokeinterface #22,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     106: pop
     107: aload_0
     108: getfield      #5                  // Field insertionCount:Ljava/util/concurrent/atomic/AtomicInteger;
     111: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     114: aload_0
     115: getfield      #8                  // Field batchSize:I
     118: irem
     119: ifne          194
     122: new           #24                 // class java/util/ArrayList
     125: dup
     126: aload_0
     127: getfield      #8                  // Field batchSize:I
     130: invokespecial #25                 // Method java/util/ArrayList."<init>":(I)V
     133: astore        5
     135: aload         5
     137: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.size:()I
     142: aload_0
     143: getfield      #8                  // Field batchSize:I
     146: if_icmpeq     169
     149: aload         5
     151: aload_0
     152: getfield      #11                 // Field queue:Ljava/util/Queue;
     155: invokeinterface #27,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     160: invokeinterface #28,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     165: pop
     166: goto          135
     169: invokestatic  #29                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
     172: astore        6
     174: aload_0
     175: getfield      #10                 // Field handler:Lorg/infinispan/iteration/impl/DistributedEntryRetriever$SegmentBatchHandler;
     178: aload_0
     179: getfield      #6                  // Field identifier:Ljava/util/UUID;
     182: iconst_0
     183: aload         6
     185: aload         6
     187: aload         5
     189: invokeinterface #30,  6           // InterfaceMethod org/infinispan/iteration/impl/DistributedEntryRetriever$SegmentBatchHandler.handleBatch:(Ljava/util/UUID;ZLjava/util/Set;Ljava/util/Set;Ljava/util/Collection;)V
     194: return

  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #31                 // class org/infinispan/container/entries/CacheEntry
       6: invokevirtual #32                 // Method accept:(Ljava/lang/Object;Lorg/infinispan/container/entries/CacheEntry;)V
       9: return
}
