Compiled from "ReadCommittedEntry.java"
public class org.infinispan.container.entries.ReadCommittedEntry implements org.infinispan.container.entries.MVCCEntry {
  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  protected java.lang.Object key;

  protected java.lang.Object value;

  protected java.lang.Object oldValue;

  protected byte flags;

  protected org.infinispan.metadata.Metadata metadata;

  public org.infinispan.container.entries.ReadCommittedEntry(java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field flags:B
       9: aload_0
      10: iconst_1
      11: invokevirtual #3                  // Method setValid:(Z)V
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field key:Ljava/lang/Object;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field value:Ljava/lang/Object;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field metadata:Lorg/infinispan/metadata/Metadata;
      29: return

  public byte getStateFlags();
    Code:
       0: aload_0
       1: getfield      #2                  // Field flags:B
       4: ireturn

  public void copyStateFlagsFrom(org.infinispan.container.entries.StateChangingEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  1            // InterfaceMethod org/infinispan/container/entries/StateChangingEntry.getStateFlags:()B
       7: putfield      #2                  // Field flags:B
      10: return

  protected final boolean isFlagSet(org.infinispan.container.entries.ReadCommittedEntry$Flags);
    Code:
       0: aload_0
       1: getfield      #2                  // Field flags:B
       4: aload_1
       5: getfield      #8                  // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.mask:B
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  protected final void setFlag(org.infinispan.container.entries.ReadCommittedEntry$Flags);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field flags:B
       5: aload_1
       6: getfield      #8                  // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.mask:B
       9: ior
      10: i2b
      11: putfield      #2                  // Field flags:B
      14: return

  protected final void unsetFlag(org.infinispan.container.entries.ReadCommittedEntry$Flags);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field flags:B
       5: aload_1
       6: getfield      #8                  // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.mask:B
       9: iconst_m1
      10: ixor
      11: iand
      12: i2b
      13: putfield      #2                  // Field flags:B
      16: return

  public final long getLifespan();
    Code:
       0: aload_0
       1: getfield      #6                  // Field metadata:Lorg/infinispan/metadata/Metadata;
       4: invokeinterface #9,  1            // InterfaceMethod org/infinispan/metadata/Metadata.lifespan:()J
       9: lreturn

  public final long getMaxIdle();
    Code:
       0: aload_0
       1: getfield      #6                  // Field metadata:Lorg/infinispan/metadata/Metadata;
       4: invokeinterface #10,  1           // InterfaceMethod org/infinispan/metadata/Metadata.maxIdle:()J
       9: lreturn

  public final java.lang.Object getKey();
    Code:
       0: aload_0
       1: getfield      #4                  // Field key:Ljava/lang/Object;
       4: areturn

  public final java.lang.Object getValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/lang/Object;
       4: areturn

  public final java.lang.Object setValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #5                  // Field value:Ljava/lang/Object;
      10: aload_2
      11: areturn

  public boolean isNull();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void copyForUpdate();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.COPIED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       4: invokevirtual #12                 // Method isFlagSet:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getstatic     #11                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.COPIED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
      15: invokevirtual #13                 // Method setFlag:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
      18: aload_0
      19: invokevirtual #14                 // Method isCreated:()Z
      22: ifne          33
      25: aload_0
      26: aload_0
      27: getfield      #5                  // Field value:Ljava/lang/Object;
      30: putfield      #15                 // Field oldValue:Ljava/lang/Object;
      33: return

  public final void commit(org.infinispan.container.DataContainer, org.infinispan.metadata.Metadata);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isChanged:()Z
       4: ifeq          224
       7: getstatic     #17                 // Field trace:Z
      10: ifeq          101
      13: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      16: ldc           #19                 // String Updating entry (key=%s removed=%s valid=%s changed=%s created=%s value=%s metadata=%s, providedMetadata=%s)
      18: bipush        8
      20: anewarray     #20                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: invokevirtual #21                 // Method getKey:()Ljava/lang/Object;
      29: invokestatic  #22                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: invokevirtual #23                 // Method isRemoved:()Z
      39: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      42: aastore
      43: dup
      44: iconst_2
      45: aload_0
      46: invokevirtual #25                 // Method isValid:()Z
      49: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      52: aastore
      53: dup
      54: iconst_3
      55: aload_0
      56: invokevirtual #16                 // Method isChanged:()Z
      59: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      62: aastore
      63: dup
      64: iconst_4
      65: aload_0
      66: invokevirtual #14                 // Method isCreated:()Z
      69: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      72: aastore
      73: dup
      74: iconst_5
      75: aload_0
      76: getfield      #5                  // Field value:Ljava/lang/Object;
      79: invokestatic  #22                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      82: aastore
      83: dup
      84: bipush        6
      86: aload_0
      87: invokevirtual #26                 // Method getMetadata:()Lorg/infinispan/metadata/Metadata;
      90: aastore
      91: dup
      92: bipush        7
      94: aload_2
      95: aastore
      96: invokeinterface #27,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
     101: aload_0
     102: getfield      #5                  // Field value:Ljava/lang/Object;
     105: instanceof    #28                 // class org/infinispan/atomic/impl/AtomicHashMap
     108: ifeq          138
     111: aload_0
     112: getfield      #5                  // Field value:Ljava/lang/Object;
     115: checkcast     #28                 // class org/infinispan/atomic/impl/AtomicHashMap
     118: astore_3
     119: aload_0
     120: invokevirtual #23                 // Method isRemoved:()Z
     123: ifeq          138
     126: aload_0
     127: invokevirtual #29                 // Method isEvicted:()Z
     130: ifne          138
     133: aload_3
     134: iconst_1
     135: invokevirtual #30                 // Method org/infinispan/atomic/impl/AtomicHashMap.markRemoved:(Z)V
     138: aload_0
     139: invokevirtual #29                 // Method isEvicted:()Z
     142: ifeq          158
     145: aload_1
     146: aload_0
     147: getfield      #4                  // Field key:Ljava/lang/Object;
     150: invokeinterface #31,  2           // InterfaceMethod org/infinispan/container/DataContainer.evict:(Ljava/lang/Object;)V
     155: goto          220
     158: aload_0
     159: invokevirtual #23                 // Method isRemoved:()Z
     162: ifeq          179
     165: aload_1
     166: aload_0
     167: getfield      #4                  // Field key:Ljava/lang/Object;
     170: invokeinterface #32,  2           // InterfaceMethod org/infinispan/container/DataContainer.remove:(Ljava/lang/Object;)Lorg/infinispan/container/entries/InternalCacheEntry;
     175: pop
     176: goto          220
     179: aload_0
     180: getfield      #5                  // Field value:Ljava/lang/Object;
     183: ifnull        220
     186: aload_1
     187: aload_0
     188: aload_0
     189: getfield      #4                  // Field key:Ljava/lang/Object;
     192: invokespecial #33                 // Method compact:(Ljava/lang/Object;)Ljava/lang/Object;
     195: aload_0
     196: aload_0
     197: getfield      #5                  // Field value:Ljava/lang/Object;
     200: invokespecial #33                 // Method compact:(Ljava/lang/Object;)Ljava/lang/Object;
     203: aload_2
     204: ifnonnull     214
     207: aload_0
     208: getfield      #6                  // Field metadata:Lorg/infinispan/metadata/Metadata;
     211: goto          215
     214: aload_2
     215: invokeinterface #34,  4           // InterfaceMethod org/infinispan/container/DataContainer.put:(Ljava/lang/Object;Ljava/lang/Object;Lorg/infinispan/metadata/Metadata;)V
     220: aload_0
     221: invokespecial #35                 // Method reset:()V
     224: return

  private java.lang.Object compact(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #36                 // class org/infinispan/marshall/core/MarshalledValue
       4: ifeq          66
       7: aload_1
       8: checkcast     #36                 // class org/infinispan/marshall/core/MarshalledValue
      11: astore_2
      12: aload_2
      13: invokevirtual #37                 // Method org/infinispan/marshall/core/MarshalledValue.getRaw:()Lorg/infinispan/io/MarshalledValueByteStream;
      16: invokevirtual #38                 // Method org/infinispan/io/MarshalledValueByteStream.size:()I
      19: aload_2
      20: invokevirtual #37                 // Method org/infinispan/marshall/core/MarshalledValue.getRaw:()Lorg/infinispan/io/MarshalledValueByteStream;
      23: invokevirtual #39                 // Method org/infinispan/io/MarshalledValueByteStream.getRaw:()[B
      26: arraylength
      27: if_icmpge     66
      30: aload_2
      31: invokevirtual #37                 // Method org/infinispan/marshall/core/MarshalledValue.getRaw:()Lorg/infinispan/io/MarshalledValueByteStream;
      34: invokevirtual #39                 // Method org/infinispan/io/MarshalledValueByteStream.getRaw:()[B
      37: iconst_0
      38: aload_2
      39: invokevirtual #37                 // Method org/infinispan/marshall/core/MarshalledValue.getRaw:()Lorg/infinispan/io/MarshalledValueByteStream;
      42: invokevirtual #38                 // Method org/infinispan/io/MarshalledValueByteStream.size:()I
      45: invokestatic  #40                 // Method java/util/Arrays.copyOfRange:([BII)[B
      48: astore_3
      49: new           #36                 // class org/infinispan/marshall/core/MarshalledValue
      52: dup
      53: aload_3
      54: aload_2
      55: invokevirtual #41                 // Method org/infinispan/marshall/core/MarshalledValue.hashCode:()I
      58: aload_2
      59: invokevirtual #42                 // Method org/infinispan/marshall/core/MarshalledValue.getMarshaller:()Lorg/infinispan/commons/marshall/StreamingMarshaller;
      62: invokespecial #43                 // Method org/infinispan/marshall/core/MarshalledValue."<init>":([BILorg/infinispan/commons/marshall/StreamingMarshaller;)V
      65: areturn
      66: aload_1
      67: areturn

  private void reset();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #15                 // Field oldValue:Ljava/lang/Object;
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field flags:B
      10: aload_0
      11: iconst_1
      12: invokevirtual #3                  // Method setValid:(Z)V
      15: return

  public final void rollback();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isChanged:()Z
       4: ifeq          19
       7: aload_0
       8: aload_0
       9: getfield      #15                 // Field oldValue:Ljava/lang/Object;
      12: putfield      #5                  // Field value:Ljava/lang/Object;
      15: aload_0
      16: invokespecial #35                 // Method reset:()V
      19: return

  public final boolean isChanged();
    Code:
       0: aload_0
       1: getstatic     #44                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.CHANGED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       4: invokevirtual #12                 // Method isFlagSet:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)Z
       7: ireturn

  public final void setChanged(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #44                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.CHANGED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       5: invokevirtual #45                 // Method setFlag:(ZLorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
       8: return

  public void setSkipLookup(boolean);
    Code:
       0: return

  public boolean skipLookup();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isValid();
    Code:
       0: aload_0
       1: getstatic     #46                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.VALID:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       4: invokevirtual #12                 // Method isFlagSet:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)Z
       7: ireturn

  public final void setValid(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #46                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.VALID:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       5: invokevirtual #45                 // Method setFlag:(ZLorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
       8: return

  public org.infinispan.metadata.Metadata getMetadata();
    Code:
       0: aload_0
       1: getfield      #6                  // Field metadata:Lorg/infinispan/metadata/Metadata;
       4: areturn

  public void setMetadata(org.infinispan.metadata.Metadata);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field metadata:Lorg/infinispan/metadata/Metadata;
       5: return

  public final boolean isCreated();
    Code:
       0: aload_0
       1: getstatic     #47                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.CREATED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       4: invokevirtual #12                 // Method isFlagSet:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)Z
       7: ireturn

  public final void setCreated(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #47                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.CREATED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       5: invokevirtual #45                 // Method setFlag:(ZLorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
       8: return

  public boolean isRemoved();
    Code:
       0: aload_0
       1: getstatic     #48                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.REMOVED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       4: invokevirtual #12                 // Method isFlagSet:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)Z
       7: ireturn

  public boolean isEvicted();
    Code:
       0: aload_0
       1: getstatic     #49                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.EVICTED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       4: invokevirtual #12                 // Method isFlagSet:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)Z
       7: ireturn

  public boolean isExpired();
    Code:
       0: aload_0
       1: getstatic     #50                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.EXPIRED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       4: invokevirtual #12                 // Method isFlagSet:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)Z
       7: ireturn

  public final void setRemoved(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #48                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.REMOVED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       5: invokevirtual #45                 // Method setFlag:(ZLorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
       8: return

  public void setEvicted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #49                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.EVICTED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       5: invokevirtual #45                 // Method setFlag:(ZLorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
       8: return

  public void setExpired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #50                 // Field org/infinispan/container/entries/ReadCommittedEntry$Flags.EXPIRED:Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;
       5: invokevirtual #45                 // Method setFlag:(ZLorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
       8: return

  public boolean isLoaded();
    Code:
       0: iconst_0
       1: ireturn

  public void setLoaded(boolean);
    Code:
       0: return

  protected final void setFlag(boolean, org.infinispan.container.entries.ReadCommittedEntry$Flags);
    Code:
       0: iload_1
       1: ifeq          12
       4: aload_0
       5: aload_2
       6: invokevirtual #13                 // Method setFlag:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
       9: goto          17
      12: aload_0
      13: aload_2
      14: invokevirtual #51                 // Method unsetFlag:(Lorg/infinispan/container/entries/ReadCommittedEntry$Flags;)V
      17: return

  public org.infinispan.container.entries.ReadCommittedEntry clone();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #53                 // class org/infinispan/container/entries/ReadCommittedEntry
       7: areturn
       8: astore_1
       9: new           #55                 // class java/lang/IllegalStateException
      12: dup
      13: aload_1
      14: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public java.lang.String toString();
    Code:
       0: new           #57                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #60                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #62                 // String (
      19: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokestatic  #63                 // Method org/infinispan/commons/util/Util.hexIdHashCode:(Ljava/lang/Object;)Ljava/lang/String;
      26: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #64                 // String ){
      31: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #65                 // String key=
      36: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #4                  // Field key:Ljava/lang/Object;
      43: invokestatic  #22                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      46: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #66                 // String , value=
      51: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #5                  // Field value:Ljava/lang/Object;
      58: invokestatic  #22                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      61: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #67                 // String , oldValue=
      66: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #15                 // Field oldValue:Ljava/lang/Object;
      73: invokestatic  #22                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      76: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #68                 // String , isCreated=
      81: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #14                 // Method isCreated:()Z
      88: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: ldc           #70                 // String , isChanged=
      93: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #16                 // Method isChanged:()Z
     100: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: ldc           #71                 // String , isRemoved=
     105: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokevirtual #23                 // Method isRemoved:()Z
     112: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     115: ldc           #72                 // String , isValid=
     117: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: invokevirtual #25                 // Method isValid:()Z
     124: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     127: ldc           #73                 // String , isExpired=
     129: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: invokevirtual #74                 // Method isExpired:()Z
     136: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     139: ldc           #75                 // String , skipRemoteGet=
     141: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: invokevirtual #76                 // Method skipLookup:()Z
     148: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     151: ldc           #77                 // String , metadata=
     153: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #6                  // Field metadata:Lorg/infinispan/metadata/Metadata;
     160: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: bipush        125
     165: invokevirtual #79                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     168: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: areturn

  public boolean undelete(boolean);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isRemoved:()Z
       4: ifeq          50
       7: iload_1
       8: ifeq          50
      11: getstatic     #17                 // Field trace:Z
      14: ifeq          27
      17: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      20: ldc           #81                 // String Entry is deleted in current scope.  Un-deleting.
      22: invokeinterface #82,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
      27: aload_0
      28: iconst_0
      29: invokevirtual #83                 // Method setExpired:(Z)V
      32: aload_0
      33: iconst_0
      34: invokevirtual #84                 // Method setRemoved:(Z)V
      37: aload_0
      38: iconst_1
      39: invokevirtual #3                  // Method setValid:(Z)V
      42: aload_0
      43: aconst_null
      44: invokevirtual #85                 // Method setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: iconst_1
      49: ireturn
      50: iconst_0
      51: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method clone:()Lorg/infinispan/container/entries/ReadCommittedEntry;
       4: areturn

  public org.infinispan.container.entries.CacheEntry clone();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method clone:()Lorg/infinispan/container/entries/ReadCommittedEntry;
       4: areturn

  static {};
    Code:
       0: ldc           #53                 // class org/infinispan/container/entries/ReadCommittedEntry
       2: invokestatic  #87                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #18                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #88,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #17                 // Field trace:Z
      19: return
}
