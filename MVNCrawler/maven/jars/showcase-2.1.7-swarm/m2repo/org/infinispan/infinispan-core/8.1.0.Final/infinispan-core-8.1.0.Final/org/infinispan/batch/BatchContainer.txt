Compiled from "BatchContainer.java"
public class org.infinispan.batch.BatchContainer {
  javax.transaction.TransactionManager transactionManager;

  private final java.lang.ThreadLocal<org.infinispan.batch.BatchContainer$BatchDetails> batchDetailsTl;

  public org.infinispan.batch.BatchContainer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ThreadLocal
       8: dup
       9: invokespecial #3                  // Method java/lang/ThreadLocal."<init>":()V
      12: putfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
      15: return

  void inject(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
       5: return

  public boolean startBatch() throws org.infinispan.commons.CacheException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #6                  // Method startBatch:(Z)Z
       5: ireturn

  public boolean startBatch(boolean) throws org.infinispan.commons.CacheException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
       4: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class org/infinispan/batch/BatchContainer$BatchDetails
      10: astore_2
      11: aload_2
      12: ifnonnull     24
      15: new           #8                  // class org/infinispan/batch/BatchContainer$BatchDetails
      18: dup
      19: aconst_null
      20: invokespecial #9                  // Method org/infinispan/batch/BatchContainer$BatchDetails."<init>":(Lorg/infinispan/batch/BatchContainer$1;)V
      23: astore_2
      24: aload_0
      25: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      28: invokeinterface #10,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      33: ifnonnull     120
      36: aload_2
      37: getfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      40: ifnonnull     120
      43: aload_0
      44: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      47: invokeinterface #12,  1           // InterfaceMethod javax/transaction/TransactionManager.begin:()V
      52: aload_2
      53: iconst_1
      54: putfield      #13                 // Field org/infinispan/batch/BatchContainer$BatchDetails.nestedInvocationCount:I
      57: aload_2
      58: iload_1
      59: ifne          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: putfield      #14                 // Field org/infinispan/batch/BatchContainer$BatchDetails.suspendTxAfterInvocation:Z
      70: aload_2
      71: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      74: putfield      #16                 // Field org/infinispan/batch/BatchContainer$BatchDetails.thread:Ljava/lang/Thread;
      77: iload_1
      78: ifeq          97
      81: aload_2
      82: aload_0
      83: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      86: invokeinterface #10,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      91: putfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      94: goto          110
      97: aload_2
      98: aload_0
      99: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
     102: invokeinterface #17,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
     107: putfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
     110: aload_0
     111: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
     114: aload_2
     115: invokevirtual #18                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     118: iconst_1
     119: ireturn
     120: aload_2
     121: dup
     122: getfield      #13                 // Field org/infinispan/batch/BatchContainer$BatchDetails.nestedInvocationCount:I
     125: iconst_1
     126: iadd
     127: putfield      #13                 // Field org/infinispan/batch/BatchContainer$BatchDetails.nestedInvocationCount:I
     130: aload_0
     131: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
     134: aload_2
     135: invokevirtual #18                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     138: iconst_0
     139: ireturn
     140: astore_3
     141: aload_0
     142: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
     145: invokevirtual #20                 // Method java/lang/ThreadLocal.remove:()V
     148: new           #21                 // class org/infinispan/commons/CacheException
     151: dup
     152: ldc           #22                 // String Unable to start batch
     154: aload_3
     155: invokespecial #23                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     158: athrow
    Exception table:
       from    to  target type
          24   119   140   Class java/lang/Exception
         120   139   140   Class java/lang/Exception

  public void endBatch(boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: invokevirtual #24                 // Method endBatch:(ZZ)V
       6: return

  public void endBatch(boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
       4: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class org/infinispan/batch/BatchContainer$BatchDetails
      10: astore_3
      11: aload_3
      12: ifnonnull     16
      15: return
      16: aload_3
      17: getfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      20: ifnonnull     31
      23: aload_0
      24: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
      27: invokevirtual #20                 // Method java/lang/ThreadLocal.remove:()V
      30: return
      31: iload_1
      32: ifeq          45
      35: aload_3
      36: dup
      37: getfield      #13                 // Field org/infinispan/batch/BatchContainer$BatchDetails.nestedInvocationCount:I
      40: iconst_1
      41: isub
      42: putfield      #13                 // Field org/infinispan/batch/BatchContainer$BatchDetails.nestedInvocationCount:I
      45: iload_1
      46: ifeq          56
      49: aload_3
      50: getfield      #13                 // Field org/infinispan/batch/BatchContainer$BatchDetails.nestedInvocationCount:I
      53: ifne          253
      56: aconst_null
      57: astore        4
      59: aload_0
      60: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      63: invokeinterface #10,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      68: astore        4
      70: aload         4
      72: ifnonnull     79
      75: iload_1
      76: ifeq          91
      79: aload_3
      80: getfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      83: aload         4
      85: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      88: ifne          104
      91: aload_0
      92: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      95: aload_3
      96: getfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      99: invokeinterface #26,  2           // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
     104: aload_0
     105: aload_3
     106: iload_2
     107: invokespecial #27                 // Method resolveTransaction:(Lorg/infinispan/batch/BatchContainer$BatchDetails;Z)V
     110: aload_0
     111: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
     114: invokevirtual #20                 // Method java/lang/ThreadLocal.remove:()V
     117: iload_1
     118: ifne          137
     121: aload         4
     123: ifnull        137
     126: aload_0
     127: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
     130: aload         4
     132: invokeinterface #26,  2           // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
     137: goto          253
     140: astore        5
     142: new           #21                 // class org/infinispan/commons/CacheException
     145: dup
     146: new           #28                 // class java/lang/StringBuilder
     149: dup
     150: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     153: ldc           #30                 // String Failed resuming existing transaction
     155: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload         4
     160: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: aload         5
     168: invokespecial #23                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     171: athrow
     172: astore        5
     174: new           #21                 // class org/infinispan/commons/CacheException
     177: dup
     178: ldc           #34                 // String Unable to end batch
     180: aload         5
     182: invokespecial #23                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     185: athrow
     186: astore        6
     188: aload_0
     189: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
     192: invokevirtual #20                 // Method java/lang/ThreadLocal.remove:()V
     195: iload_1
     196: ifne          215
     199: aload         4
     201: ifnull        215
     204: aload_0
     205: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
     208: aload         4
     210: invokeinterface #26,  2           // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
     215: goto          250
     218: astore        7
     220: new           #21                 // class org/infinispan/commons/CacheException
     223: dup
     224: new           #28                 // class java/lang/StringBuilder
     227: dup
     228: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     231: ldc           #30                 // String Failed resuming existing transaction
     233: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload         4
     238: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     241: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     244: aload         7
     246: invokespecial #23                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     249: athrow
     250: aload         6
     252: athrow
     253: return
    Exception table:
       from    to  target type
         117   137   140   Class java/lang/Exception
          59   110   172   Class java/lang/Exception
          59   110   186   any
         195   215   218   Class java/lang/Exception
         172   188   186   any

  private void resolveTransaction(org.infinispan.batch.BatchContainer$BatchDetails, boolean) throws java.lang.Exception;
    Code:
       0: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_3
       4: aload_1
       5: getfield      #16                 // Field org/infinispan/batch/BatchContainer$BatchDetails.thread:Ljava/lang/Thread;
       8: aload_3
       9: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          43
      15: iload_2
      16: ifeq          31
      19: aload_0
      20: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      23: invokeinterface #35,  1           // InterfaceMethod javax/transaction/TransactionManager.commit:()V
      28: goto          68
      31: aload_0
      32: getfield      #5                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      35: invokeinterface #36,  1           // InterfaceMethod javax/transaction/TransactionManager.rollback:()V
      40: goto          68
      43: iload_2
      44: ifeq          59
      47: aload_1
      48: getfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      51: invokeinterface #37,  1           // InterfaceMethod javax/transaction/Transaction.commit:()V
      56: goto          68
      59: aload_1
      60: getfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      63: invokeinterface #38,  1           // InterfaceMethod javax/transaction/Transaction.rollback:()V
      68: return

  public javax.transaction.Transaction getBatchTransaction();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
       6: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       9: checkcast     #8                  // class org/infinispan/batch/BatchContainer$BatchDetails
      12: astore_2
      13: aload_2
      14: ifnull        33
      17: aload_2
      18: getfield      #11                 // Field org/infinispan/batch/BatchContainer$BatchDetails.tx:Ljavax/transaction/Transaction;
      21: astore_1
      22: aload_1
      23: ifnonnull     33
      26: aload_0
      27: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
      30: invokevirtual #20                 // Method java/lang/ThreadLocal.remove:()V
      33: aload_1
      34: areturn

  public boolean isSuspendTxAfterInvocation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field batchDetailsTl:Ljava/lang/ThreadLocal;
       4: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class org/infinispan/batch/BatchContainer$BatchDetails
      10: astore_1
      11: aload_1
      12: ifnull        26
      15: aload_1
      16: getfield      #14                 // Field org/infinispan/batch/BatchContainer$BatchDetails.suspendTxAfterInvocation:Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
}
