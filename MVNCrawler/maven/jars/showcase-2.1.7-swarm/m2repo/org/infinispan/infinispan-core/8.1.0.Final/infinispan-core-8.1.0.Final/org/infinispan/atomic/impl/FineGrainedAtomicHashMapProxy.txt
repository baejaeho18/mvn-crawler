Compiled from "FineGrainedAtomicHashMapProxy.java"
public class org.infinispan.atomic.impl.FineGrainedAtomicHashMapProxy<K, V> extends org.infinispan.atomic.impl.AtomicHashMapProxy<K, V> implements org.infinispan.atomic.FineGrainedAtomicMap<K, V> {
  org.infinispan.atomic.impl.FineGrainedAtomicHashMapProxy(org.infinispan.AdvancedCache<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/infinispan/atomic/impl/AtomicHashMapProxy."<init>":(Lorg/infinispan/AdvancedCache;Ljava/lang/Object;)V
       6: return

  protected org.infinispan.atomic.impl.AtomicHashMap<K, V> getDeltaMapForWrite();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method lookupEntryFromCurrentTransaction:()Lorg/infinispan/container/entries/CacheEntry;
       4: astore_1
       5: aload_1
       6: ifnull        38
       9: aload_1
      10: invokeinterface #3,  1            // InterfaceMethod org/infinispan/container/entries/CacheEntry.isChanged:()Z
      15: ifeq          38
      18: aload_0
      19: aload_1
      20: invokeinterface #4,  1            // InterfaceMethod org/infinispan/container/entries/CacheEntry.getValue:()Ljava/lang/Object;
      25: invokevirtual #5                  // Method toMap:(Ljava/lang/Object;)Lorg/infinispan/atomic/impl/AtomicHashMap;
      28: getfield      #6                  // Field org/infinispan/atomic/impl/AtomicHashMap.copied:Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_2
      40: iload_2
      41: ifeq          49
      44: aload_0
      45: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      48: areturn
      49: aload_0
      50: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      53: astore_3
      54: aload_3
      55: ifnonnull     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: istore        4
      65: iload         4
      67: ifeq          81
      70: new           #8                  // class org/infinispan/atomic/impl/AtomicHashMap
      73: dup
      74: iconst_1
      75: invokespecial #9                  // Method org/infinispan/atomic/impl/AtomicHashMap."<init>":(Z)V
      78: goto          85
      81: aload_3
      82: invokevirtual #10                 // Method org/infinispan/atomic/impl/AtomicHashMap.copy:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      85: astore        5
      87: aload         5
      89: invokevirtual #11                 // Method org/infinispan/atomic/impl/AtomicHashMap.initForWriting:()V
      92: iload         4
      94: ifeq          113
      97: aload_0
      98: getfield      #12                 // Field cacheForWriting:Lorg/infinispan/AdvancedCache;
     101: aload_0
     102: getfield      #13                 // Field deltaMapKey:Ljava/lang/Object;
     105: aload         5
     107: invokeinterface #14,  3           // InterfaceMethod org/infinispan/AdvancedCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: aload         5
     115: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method hasUncommittedChanges:()Z
       4: ifeq          19
       7: new           #16                 // class java/util/HashSet
      10: dup
      11: aload_0
      12: invokespecial #17                 // Method keySetUncommitted:()Ljava/util/Set;
      15: invokespecial #18                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      18: areturn
      19: aload_0
      20: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      23: invokevirtual #10                 // Method org/infinispan/atomic/impl/AtomicHashMap.copy:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      26: astore_1
      27: new           #16                 // class java/util/HashSet
      30: dup
      31: aload_0
      32: invokespecial #17                 // Method keySetUncommitted:()Ljava/util/Set;
      35: invokespecial #18                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      38: astore_2
      39: aload_1
      40: ifnull        54
      43: aload_2
      44: aload_1
      45: invokevirtual #19                 // Method org/infinispan/atomic/impl/AtomicHashMap.keySet:()Ljava/util/Set;
      48: invokeinterface #20,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: aload_2
      55: areturn

  private java.util.Set<K> keySetUncommitted();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: invokevirtual #19                 // Method org/infinispan/atomic/impl/AtomicHashMap.keySet:()Ljava/util/Set;
      16: goto          22
      19: invokestatic  #23                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      22: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method hasUncommittedChanges:()Z
       4: ifeq          19
       7: new           #24                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: invokespecial #25                 // Method valuesUncommitted:()Ljava/util/Collection;
      15: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: areturn
      19: aload_0
      20: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      23: invokevirtual #10                 // Method org/infinispan/atomic/impl/AtomicHashMap.copy:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      26: astore_1
      27: new           #24                 // class java/util/ArrayList
      30: dup
      31: aload_0
      32: invokespecial #25                 // Method valuesUncommitted:()Ljava/util/Collection;
      35: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      38: astore_2
      39: aload_1
      40: ifnull        54
      43: aload_2
      44: aload_1
      45: invokevirtual #27                 // Method org/infinispan/atomic/impl/AtomicHashMap.values:()Ljava/util/Collection;
      48: invokeinterface #28,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: aload_2
      55: areturn

  private java.util.Collection<V> valuesUncommitted();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: invokevirtual #27                 // Method org/infinispan/atomic/impl/AtomicHashMap.values:()Ljava/util/Collection;
      16: goto          22
      19: invokestatic  #23                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      22: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method hasUncommittedChanges:()Z
       4: ifeq          19
       7: new           #16                 // class java/util/HashSet
      10: dup
      11: aload_0
      12: invokespecial #29                 // Method entrySetUncommitted:()Ljava/util/Set;
      15: invokespecial #18                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      18: areturn
      19: aload_0
      20: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      23: invokevirtual #10                 // Method org/infinispan/atomic/impl/AtomicHashMap.copy:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      26: astore_2
      27: new           #16                 // class java/util/HashSet
      30: dup
      31: invokespecial #30                 // Method java/util/HashSet."<init>":()V
      34: astore_1
      35: aload_2
      36: ifnull        50
      39: aload_1
      40: aload_2
      41: invokevirtual #31                 // Method org/infinispan/atomic/impl/AtomicHashMap.entrySet:()Ljava/util/Set;
      44: invokeinterface #20,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      49: pop
      50: aload_1
      51: areturn

  private java.util.Set<java.util.Map$Entry<K, V>> entrySetUncommitted();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: invokevirtual #31                 // Method org/infinispan/atomic/impl/AtomicHashMap.entrySet:()Ljava/util/Set;
      16: goto          22
      19: invokestatic  #23                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      22: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
       4: astore_1
       5: aload_0
       6: invokevirtual #32                 // Method sizeUncommitted:()I
       9: istore_2
      10: iload_2
      11: ifgt          23
      14: aload_1
      15: ifnull        23
      18: aload_1
      19: invokevirtual #33                 // Method org/infinispan/atomic/impl/AtomicHashMap.size:()I
      22: ireturn
      23: iload_2
      24: ireturn

  public int sizeUncommitted();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: invokevirtual #33                 // Method org/infinispan/atomic/impl/AtomicHashMap.size:()I
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean hasUncommittedChanges();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_1
       5: aload_1
       6: ifnull        23
       9: aload_1
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: invokevirtual #34                 // Method org/infinispan/atomic/impl/AtomicHashMap.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
       4: astore_1
       5: aload_0
       6: invokevirtual #15                 // Method hasUncommittedChanges:()Z
       9: ifne          27
      12: aload_1
      13: ifnull        23
      16: aload_1
      17: invokevirtual #34                 // Method org/infinispan/atomic/impl/AtomicHashMap.isEmpty:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method hasUncommittedChanges:()Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #35                 // Method containsKeyUncommitted:(Ljava/lang/Object;)Z
      12: ireturn
      13: aload_0
      14: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      17: astore_2
      18: aload_2
      19: ifnull        30
      22: aload_2
      23: aload_1
      24: invokevirtual #36                 // Method org/infinispan/atomic/impl/AtomicHashMap.containsKey:(Ljava/lang/Object;)Z
      27: goto          31
      30: iconst_0
      31: ireturn

  private boolean containsKeyUncommitted(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_2
       5: aload_2
       6: ifnull        24
       9: aload_2
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: aload_1
      14: invokevirtual #36                 // Method org/infinispan/atomic/impl/AtomicHashMap.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method hasUncommittedChanges:()Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #37                 // Method containsValueUncommitted:(Ljava/lang/Object;)Z
      12: ireturn
      13: aload_0
      14: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      17: astore_2
      18: aload_2
      19: ifnull        30
      22: aload_2
      23: aload_1
      24: invokevirtual #38                 // Method org/infinispan/atomic/impl/AtomicHashMap.containsValue:(Ljava/lang/Object;)Z
      27: goto          31
      30: iconst_0
      31: ireturn

  private boolean containsValueUncommitted(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_2
       5: aload_2
       6: ifnull        24
       9: aload_2
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: aload_1
      14: invokevirtual #38                 // Method org/infinispan/atomic/impl/AtomicHashMap.containsValue:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method getUncommitted:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     29
      10: aload_0
      11: invokevirtual #7                  // Method getDeltaMapForRead:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      14: astore_3
      15: aload_3
      16: ifnonnull     23
      19: aconst_null
      20: goto          28
      23: aload_3
      24: aload_1
      25: invokevirtual #40                 // Method org/infinispan/atomic/impl/AtomicHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_2
      29: aload_2
      30: areturn

  public V getUncommitted(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method lookupEntry:()Lorg/infinispan/container/entries/DeltaAwareCacheEntry;
       4: astore_2
       5: aload_2
       6: ifnull        20
       9: aload_2
      10: invokevirtual #22                 // Method org/infinispan/container/entries/DeltaAwareCacheEntry.getUncommittedChages:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      13: aload_1
      14: invokevirtual #40                 // Method org/infinispan/atomic/impl/AtomicHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: goto          21
      20: aconst_null
      21: areturn

  public V put(K, V);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: invokevirtual #41                 // Method startAtomic:()V
       6: aload_0
       7: invokevirtual #42                 // Method getDeltaMapForWrite:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      10: astore_3
      11: aload_3
      12: aload_1
      13: aload_2
      14: invokevirtual #43                 // Method org/infinispan/atomic/impl/AtomicHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: astore        4
      19: aload_0
      20: aload_3
      21: invokevirtual #44                 // Method org/infinispan/atomic/impl/AtomicHashMap.getDelta:()Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      24: invokespecial #45                 // Method invokeApplyDelta:(Lorg/infinispan/atomic/impl/AtomicHashMapDelta;)V
      27: aload         4
      29: astore        5
      31: aload_0
      32: invokevirtual #46                 // Method endAtomic:()V
      35: aload         5
      37: areturn
      38: astore        6
      40: aload_0
      41: invokevirtual #46                 // Method endAtomic:()V
      44: aload         6
      46: athrow
    Exception table:
       from    to  target type
           2    31    38   any
          38    40    38   any

  public V remove(java.lang.Object);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #41                 // Method startAtomic:()V
       6: aload_0
       7: invokevirtual #42                 // Method getDeltaMapForWrite:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokevirtual #47                 // Method org/infinispan/atomic/impl/AtomicHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: astore_3
      17: aload_0
      18: aload_2
      19: invokevirtual #44                 // Method org/infinispan/atomic/impl/AtomicHashMap.getDelta:()Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      22: invokespecial #45                 // Method invokeApplyDelta:(Lorg/infinispan/atomic/impl/AtomicHashMapDelta;)V
      25: aload_3
      26: astore        4
      28: aload_0
      29: invokevirtual #46                 // Method endAtomic:()V
      32: aload         4
      34: areturn
      35: astore        5
      37: aload_0
      38: invokevirtual #46                 // Method endAtomic:()V
      41: aload         5
      43: athrow
    Exception table:
       from    to  target type
           2    28    35   any
          35    37    35   any

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #41                 // Method startAtomic:()V
       6: aload_0
       7: invokevirtual #42                 // Method getDeltaMapForWrite:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokevirtual #48                 // Method org/infinispan/atomic/impl/AtomicHashMap.putAll:(Ljava/util/Map;)V
      16: aload_0
      17: aload_2
      18: invokevirtual #44                 // Method org/infinispan/atomic/impl/AtomicHashMap.getDelta:()Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      21: invokespecial #45                 // Method invokeApplyDelta:(Lorg/infinispan/atomic/impl/AtomicHashMapDelta;)V
      24: aload_0
      25: invokevirtual #46                 // Method endAtomic:()V
      28: goto          38
      31: astore_3
      32: aload_0
      33: invokevirtual #46                 // Method endAtomic:()V
      36: aload_3
      37: athrow
      38: return
    Exception table:
       from    to  target type
           2    24    31   any

  public void clear();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #41                 // Method startAtomic:()V
       6: aload_0
       7: invokevirtual #42                 // Method getDeltaMapForWrite:()Lorg/infinispan/atomic/impl/AtomicHashMap;
      10: astore_1
      11: aload_1
      12: invokevirtual #49                 // Method org/infinispan/atomic/impl/AtomicHashMap.clear:()V
      15: aload_0
      16: aload_1
      17: invokevirtual #44                 // Method org/infinispan/atomic/impl/AtomicHashMap.getDelta:()Lorg/infinispan/atomic/impl/AtomicHashMapDelta;
      20: invokespecial #45                 // Method invokeApplyDelta:(Lorg/infinispan/atomic/impl/AtomicHashMapDelta;)V
      23: aload_0
      24: invokevirtual #46                 // Method endAtomic:()V
      27: goto          37
      30: astore_2
      31: aload_0
      32: invokevirtual #46                 // Method endAtomic:()V
      35: aload_2
      36: athrow
      37: return
    Exception table:
       from    to  target type
           2    23    30   any

  private org.infinispan.container.entries.DeltaAwareCacheEntry lookupEntry();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method lookupEntryFromCurrentTransaction:()Lorg/infinispan/container/entries/CacheEntry;
       4: astore_1
       5: aload_1
       6: instanceof    #50                 // class org/infinispan/container/entries/DeltaAwareCacheEntry
       9: ifeq          17
      12: aload_1
      13: checkcast     #50                 // class org/infinispan/container/entries/DeltaAwareCacheEntry
      16: areturn
      17: aconst_null
      18: areturn

  private void invokeApplyDelta(org.infinispan.atomic.impl.AtomicHashMapDelta);
    Code:
       0: invokestatic  #51                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
       3: astore_2
       4: aload_1
       5: invokevirtual #52                 // Method org/infinispan/atomic/impl/AtomicHashMapDelta.hasClearOperation:()Z
       8: ifeq          47
      11: aload_0
      12: getfield      #53                 // Field cache:Lorg/infinispan/AdvancedCache;
      15: aload_0
      16: getfield      #13                 // Field deltaMapKey:Ljava/lang/Object;
      19: invokeinterface #54,  2           // InterfaceMethod org/infinispan/AdvancedCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #8                  // class org/infinispan/atomic/impl/AtomicHashMap
      27: astore_3
      28: aload_3
      29: ifnull        44
      32: new           #24                 // class java/util/ArrayList
      35: dup
      36: aload_3
      37: invokevirtual #19                 // Method org/infinispan/atomic/impl/AtomicHashMap.keySet:()Ljava/util/Set;
      40: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      43: astore_2
      44: goto          52
      47: aload_1
      48: invokevirtual #55                 // Method org/infinispan/atomic/impl/AtomicHashMapDelta.getKeys:()Ljava/util/Collection;
      51: astore_2
      52: aload_0
      53: getfield      #53                 // Field cache:Lorg/infinispan/AdvancedCache;
      56: aload_0
      57: getfield      #13                 // Field deltaMapKey:Ljava/lang/Object;
      60: aload_1
      61: iconst_1
      62: anewarray     #56                 // class java/lang/Object
      65: dup
      66: iconst_0
      67: aload_2
      68: aastore
      69: invokeinterface #57,  4           // InterfaceMethod org/infinispan/AdvancedCache.applyDelta:(Ljava/lang/Object;Lorg/infinispan/atomic/Delta;[Ljava/lang/Object;)V
      74: return

  public java.lang.String toString();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #59                 // String FineGrainedAtomicHashMapProxy{deltaMapKey=
       6: invokespecial #60                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #13                 // Field deltaMapKey:Ljava/lang/Object;
      15: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_1
      20: ldc           #62                 // String }
      22: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload_1
      27: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn
}
