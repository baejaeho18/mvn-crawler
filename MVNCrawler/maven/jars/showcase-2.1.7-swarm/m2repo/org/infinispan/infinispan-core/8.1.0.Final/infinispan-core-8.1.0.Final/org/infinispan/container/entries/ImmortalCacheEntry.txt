Compiled from "ImmortalCacheEntry.java"
public class org.infinispan.container.entries.ImmortalCacheEntry extends org.infinispan.container.entries.AbstractInternalCacheEntry {
  public java.lang.Object value;

  public org.infinispan.container.entries.ImmortalCacheEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/container/entries/AbstractInternalCacheEntry."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field value:Ljava/lang/Object;
      10: return

  public final boolean isExpired(long);
    Code:
       0: iconst_0
       1: ireturn

  public final boolean isExpired();
    Code:
       0: iconst_0
       1: ireturn

  public final boolean canExpire();
    Code:
       0: iconst_0
       1: ireturn

  public final long getCreated();
    Code:
       0: ldc2_w        #3                  // long -1l
       3: lreturn

  public final long getLastUsed();
    Code:
       0: ldc2_w        #3                  // long -1l
       3: lreturn

  public final long getLifespan();
    Code:
       0: ldc2_w        #3                  // long -1l
       3: lreturn

  public final long getMaxIdle();
    Code:
       0: ldc2_w        #3                  // long -1l
       3: lreturn

  public final long getExpiryTime();
    Code:
       0: ldc2_w        #3                  // long -1l
       3: lreturn

  public final void touch();
    Code:
       0: return

  public void touch(long);
    Code:
       0: return

  public final void reincarnate();
    Code:
       0: return

  public void reincarnate(long);
    Code:
       0: return

  public org.infinispan.container.entries.InternalCacheValue toInternalCacheValue();
    Code:
       0: new           #5                  // class org/infinispan/container/entries/ImmortalCacheValue
       3: dup
       4: aload_0
       5: getfield      #2                  // Field value:Ljava/lang/Object;
       8: invokespecial #6                  // Method org/infinispan/container/entries/ImmortalCacheValue."<init>":(Ljava/lang/Object;)V
      11: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: areturn

  public java.lang.Object setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field value:Ljava/lang/Object;
       6: areturn

  public org.infinispan.metadata.Metadata getMetadata();
    Code:
       0: new           #7                  // class org/infinispan/metadata/EmbeddedMetadata$Builder
       3: dup
       4: invokespecial #8                  // Method org/infinispan/metadata/EmbeddedMetadata$Builder."<init>":()V
       7: invokevirtual #9                  // Method org/infinispan/metadata/EmbeddedMetadata$Builder.build:()Lorg/infinispan/metadata/Metadata;
      10: areturn

  public void setMetadata(org.infinispan.metadata.Metadata);
    Code:
       0: new           #10                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #11                 // String Metadata cannot be set on immortal entries. They need to be recreated via the entry factory.
       6: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #14                 // class org/infinispan/container/entries/ImmortalCacheEntry
      28: astore_2
      29: aload_0
      30: getfield      #15                 // Field key:Ljava/lang/Object;
      33: ifnull        53
      36: aload_0
      37: getfield      #15                 // Field key:Ljava/lang/Object;
      40: aload_2
      41: getfield      #15                 // Field key:Ljava/lang/Object;
      44: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #15                 // Field key:Ljava/lang/Object;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #2                  // Field value:Ljava/lang/Object;
      66: ifnull        86
      69: aload_0
      70: getfield      #2                  // Field value:Ljava/lang/Object;
      73: aload_2
      74: getfield      #2                  // Field value:Ljava/lang/Object;
      77: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #2                  // Field value:Ljava/lang/Object;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: iconst_1
      96: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #15                 // Field key:Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: getfield      #15                 // Field key:Ljava/lang/Object;
      11: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #2                  // Field value:Ljava/lang/Object;
      27: ifnull        40
      30: aload_0
      31: getfield      #2                  // Field value:Ljava/lang/Object;
      34: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_1
      43: iload_1
      44: ireturn

  public org.infinispan.container.entries.ImmortalCacheEntry clone();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/infinispan/container/entries/AbstractInternalCacheEntry.clone:()Lorg/infinispan/container/entries/AbstractInternalCacheEntry;
       4: checkcast     #14                 // class org/infinispan/container/entries/ImmortalCacheEntry
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String ImmortalCacheEntry{key=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #15                 // Field key:Ljava/lang/Object;
      16: invokestatic  #23                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      19: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #24                 // String , value=
      24: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #2                  // Field value:Ljava/lang/Object;
      31: invokestatic  #23                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      34: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #25                 // String }
      39: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  public org.infinispan.container.entries.AbstractInternalCacheEntry clone();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/infinispan/container/entries/ImmortalCacheEntry;
       4: areturn

  public org.infinispan.container.entries.InternalCacheEntry clone();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/infinispan/container/entries/ImmortalCacheEntry;
       4: areturn

  public org.infinispan.container.entries.CacheEntry clone();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/infinispan/container/entries/ImmortalCacheEntry;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method clone:()Lorg/infinispan/container/entries/ImmortalCacheEntry;
       4: areturn
}
