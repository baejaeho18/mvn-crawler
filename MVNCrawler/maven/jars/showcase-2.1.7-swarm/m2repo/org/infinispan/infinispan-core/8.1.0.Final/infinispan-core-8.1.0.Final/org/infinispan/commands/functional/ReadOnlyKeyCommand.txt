Compiled from "ReadOnlyKeyCommand.java"
public final class org.infinispan.commands.functional.ReadOnlyKeyCommand<K, V, R> extends org.infinispan.commands.read.AbstractDataCommand implements org.infinispan.commands.LocalCommand {
  private java.util.function.Function<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>, R> f;

  public org.infinispan.commands.functional.ReadOnlyKeyCommand(java.lang.Object, java.util.function.Function<org.infinispan.commons.api.functional.EntryView$ReadEntryView<K, V>, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method org/infinispan/commands/read/AbstractDataCommand."<init>":(Ljava/lang/Object;Ljava/util/Set;)V
       6: aload_0
       7: aload_2
       8: putfield      #2                  // Field f:Ljava/util/function/Function;
      11: return

  public org.infinispan.commands.functional.ReadOnlyKeyCommand();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/infinispan/commands/read/AbstractDataCommand."<init>":()V
       4: return

  public byte getCommandId();
    Code:
       0: iconst_m1
       1: ireturn

  public void setParameters(int, java.lang.Object[]);
    Code:
       0: return

  public java.lang.Object[] getParameters();
    Code:
       0: iconst_0
       1: anewarray     #4                  // class java/lang/Object
       4: areturn

  public java.lang.Object perform(org.infinispan.context.InvocationContext) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field key:Ljava/lang/Object;
       5: invokeinterface #6,  2            // InterfaceMethod org/infinispan/context/InvocationContext.lookupEntry:(Ljava/lang/Object;)Lorg/infinispan/container/entries/CacheEntry;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: aload_2
      19: invokevirtual #7                  // Method perform:(Lorg/infinispan/container/entries/CacheEntry;)Ljava/lang/Object;
      22: areturn

  public java.lang.Object perform(org.infinispan.container.entries.CacheEntry<K, V>);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #8,  1            // InterfaceMethod org/infinispan/container/entries/CacheEntry.isNull:()Z
      10: ifeq          23
      13: aload_0
      14: getfield      #5                  // Field key:Ljava/lang/Object;
      17: invokestatic  #9                  // Method org/infinispan/functional/impl/EntryViews.noValue:(Ljava/lang/Object;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
      20: goto          27
      23: aload_1
      24: invokestatic  #10                 // Method org/infinispan/functional/impl/EntryViews.readOnly:(Lorg/infinispan/container/entries/CacheEntry;)Lorg/infinispan/commons/api/functional/EntryView$ReadEntryView;
      27: astore_2
      28: aload_0
      29: getfield      #2                  // Field f:Ljava/util/function/Function;
      32: aload_2
      33: invokeinterface #11,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: astore_3
      39: aload_3
      40: invokestatic  #12                 // Method org/infinispan/functional/impl/EntryViews.snapshot:(Ljava/lang/Object;)Ljava/lang/Object;
      43: areturn

  public java.lang.Object acceptVisitor(org.infinispan.context.InvocationContext, org.infinispan.commands.Visitor) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokeinterface #13,  3           // InterfaceMethod org/infinispan/commands/Visitor.visitReadOnlyKeyCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/functional/ReadOnlyKeyCommand;)Ljava/lang/Object;
       8: areturn

  public boolean readsExistingValues();
    Code:
       0: iconst_1
       1: ireturn

  public boolean alwaysReadsExistingValues();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String ReadOnlyKeyCommand{f=
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field f:Ljava/util/function/Function;
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
