Compiled from "OutboundTransferTask.java"
public class org.infinispan.statetransfer.OutboundTransferTask implements java.lang.Runnable {
  private static final org.infinispan.util.logging.Log log;

  private final boolean trace;

  private final org.infinispan.statetransfer.StateProviderImpl stateProvider;

  private final int topologyId;

  private final org.infinispan.remoting.transport.Address destination;

  private final java.util.Set<java.lang.Integer> segments;

  private final int stateTransferChunkSize;

  private final org.infinispan.distribution.ch.ConsistentHash readCh;

  private final org.infinispan.container.DataContainer<java.lang.Object, java.lang.Object> dataContainer;

  private final org.infinispan.persistence.manager.PersistenceManager persistenceManager;

  private final org.infinispan.remoting.rpc.RpcManager rpcManager;

  private final org.infinispan.commands.CommandsFactory commandsFactory;

  private final long timeout;

  private final java.lang.String cacheName;

  private final java.util.Map<java.lang.Integer, java.util.List<org.infinispan.container.entries.InternalCacheEntry>> entriesBySegment;

  private int accumulatedEntries;

  private java.util.concurrent.FutureTask<java.lang.Void> runnableFuture;

  private final org.infinispan.remoting.rpc.RpcOptions rpcOptions;

  private org.infinispan.container.InternalEntryFactory entryFactory;

  public org.infinispan.statetransfer.OutboundTransferTask(org.infinispan.remoting.transport.Address, java.util.Set<java.lang.Integer>, int, int, org.infinispan.distribution.ch.ConsistentHash, org.infinispan.statetransfer.StateProviderImpl, org.infinispan.container.DataContainer, org.infinispan.persistence.manager.PersistenceManager, org.infinispan.remoting.rpc.RpcManager, org.infinispan.commands.CommandsFactory, org.infinispan.container.InternalEntryFactory, long, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       8: invokeinterface #8,  1            // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      13: putfield      #9                  // Field trace:Z
      16: aload_0
      17: new           #10                 // class java/util/concurrent/CopyOnWriteArraySet
      20: dup
      21: invokespecial #11                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      24: putfield      #4                  // Field segments:Ljava/util/Set;
      27: aload_0
      28: invokestatic  #12                 // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      31: putfield      #13                 // Field entriesBySegment:Ljava/util/Map;
      34: aload_2
      35: ifnull        47
      38: aload_2
      39: invokeinterface #14,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      44: ifeq          57
      47: new           #15                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #16                 // String Segments must not be null or empty
      53: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_1
      58: ifnonnull     71
      61: new           #15                 // class java/lang/IllegalArgumentException
      64: dup
      65: ldc           #18                 // String Destination address cannot be null
      67: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: iload_3
      72: ifgt          85
      75: new           #15                 // class java/lang/IllegalArgumentException
      78: dup
      79: ldc           #19                 // String stateTransferChunkSize must be greater than 0
      81: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: aload         6
      88: putfield      #6                  // Field stateProvider:Lorg/infinispan/statetransfer/StateProviderImpl;
      91: aload_0
      92: aload_1
      93: putfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
      96: aload_0
      97: getfield      #4                  // Field segments:Ljava/util/Set;
     100: aload_2
     101: invokeinterface #21,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     106: pop
     107: aload_0
     108: iload_3
     109: putfield      #22                 // Field stateTransferChunkSize:I
     112: aload_0
     113: iload         4
     115: putfield      #23                 // Field topologyId:I
     118: aload_0
     119: aload         5
     121: putfield      #5                  // Field readCh:Lorg/infinispan/distribution/ch/ConsistentHash;
     124: aload_0
     125: aload         7
     127: putfield      #24                 // Field dataContainer:Lorg/infinispan/container/DataContainer;
     130: aload_0
     131: aload         8
     133: putfield      #25                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
     136: aload_0
     137: aload         11
     139: putfield      #3                  // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
     142: aload_0
     143: aload         9
     145: putfield      #26                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     148: aload_0
     149: aload         10
     151: putfield      #27                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
     154: aload_0
     155: lload         12
     157: putfield      #28                 // Field timeout:J
     160: aload_0
     161: aload         14
     163: putfield      #29                 // Field cacheName:Ljava/lang/String;
     166: aload_0
     167: aload         9
     169: getstatic     #30                 // Field org/infinispan/remoting/rpc/ResponseMode.SYNCHRONOUS:Lorg/infinispan/remoting/rpc/ResponseMode;
     172: invokeinterface #31,  2           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getRpcOptionsBuilder:(Lorg/infinispan/remoting/rpc/ResponseMode;)Lorg/infinispan/remoting/rpc/RpcOptionsBuilder;
     177: lload         12
     179: getstatic     #32                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     182: invokevirtual #33                 // Method org/infinispan/remoting/rpc/RpcOptionsBuilder.timeout:(JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/remoting/rpc/RpcOptionsBuilder;
     185: invokevirtual #34                 // Method org/infinispan/remoting/rpc/RpcOptionsBuilder.build:()Lorg/infinispan/remoting/rpc/RpcOptions;
     188: putfield      #35                 // Field rpcOptions:Lorg/infinispan/remoting/rpc/RpcOptions;
     191: return

  public void execute(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: getfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
       4: ifnull        17
       7: new           #37                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #38                 // String This task was already submitted
      13: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: new           #40                 // class org/infinispan/statetransfer/OutboundTransferTask$1
      21: dup
      22: aload_0
      23: aload_0
      24: aconst_null
      25: invokespecial #41                 // Method org/infinispan/statetransfer/OutboundTransferTask$1."<init>":(Lorg/infinispan/statetransfer/OutboundTransferTask;Ljava/lang/Runnable;Ljava/lang/Void;)V
      28: putfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
      31: aload_1
      32: aload_0
      33: getfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
      36: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      41: pop
      42: return

  public org.infinispan.remoting.transport.Address getDestination();
    Code:
       0: aload_0
       1: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
       4: areturn

  public java.util.Set<java.lang.Integer> getSegments();
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/Set;
       4: areturn

  public int getTopologyId();
    Code:
       0: aload_0
       1: getfield      #23                 // Field topologyId:I
       4: ireturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #24                 // Field dataContainer:Lorg/infinispan/container/DataContainer;
       4: invokeinterface #43,  1           // InterfaceMethod org/infinispan/container/DataContainer.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          75
      19: aload_1
      20: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #46                 // class org/infinispan/container/entries/InternalCacheEntry
      28: astore_2
      29: aload_2
      30: invokeinterface #47,  1           // InterfaceMethod org/infinispan/container/entries/InternalCacheEntry.getKey:()Ljava/lang/Object;
      35: astore_3
      36: aload_0
      37: getfield      #5                  // Field readCh:Lorg/infinispan/distribution/ch/ConsistentHash;
      40: aload_3
      41: invokeinterface #48,  2           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getSegment:(Ljava/lang/Object;)I
      46: istore        4
      48: aload_0
      49: getfield      #4                  // Field segments:Ljava/util/Set;
      52: iload         4
      54: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokeinterface #50,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      62: ifeq          72
      65: aload_0
      66: aload_2
      67: iload         4
      69: invokespecial #2                  // Method sendEntry:(Lorg/infinispan/container/entries/InternalCacheEntry;I)V
      72: goto          10
      75: aload_0
      76: getfield      #25                 // Field persistenceManager:Lorg/infinispan/persistence/manager/PersistenceManager;
      79: invokeinterface #51,  1           // InterfaceMethod org/infinispan/persistence/manager/PersistenceManager.getStateTransferProvider:()Lorg/infinispan/persistence/spi/AdvancedCacheLoader;
      84: astore_1
      85: aload_1
      86: ifnull        147
      89: new           #52                 // class org/infinispan/filter/CollectionKeyFilter
      92: dup
      93: new           #53                 // class org/infinispan/util/ReadOnlyDataContainerBackedKeySet
      96: dup
      97: aload_0
      98: getfield      #24                 // Field dataContainer:Lorg/infinispan/container/DataContainer;
     101: invokespecial #54                 // Method org/infinispan/util/ReadOnlyDataContainerBackedKeySet."<init>":(Lorg/infinispan/container/DataContainer;)V
     104: invokespecial #55                 // Method org/infinispan/filter/CollectionKeyFilter."<init>":(Ljava/util/Collection;)V
     107: astore_2
     108: new           #56                 // class org/infinispan/statetransfer/OutboundTransferTask$2
     111: dup
     112: aload_0
     113: invokespecial #57                 // Method org/infinispan/statetransfer/OutboundTransferTask$2."<init>":(Lorg/infinispan/statetransfer/OutboundTransferTask;)V
     116: astore_3
     117: aload_1
     118: aload_2
     119: aload_3
     120: new           #58                 // class org/infinispan/util/concurrent/WithinThreadExecutor
     123: dup
     124: invokespecial #59                 // Method org/infinispan/util/concurrent/WithinThreadExecutor."<init>":()V
     127: iconst_1
     128: iconst_1
     129: invokeinterface #60,  6           // InterfaceMethod org/infinispan/persistence/spi/AdvancedCacheLoader.process:(Lorg/infinispan/filter/KeyFilter;Lorg/infinispan/persistence/spi/AdvancedCacheLoader$CacheLoaderTask;Ljava/util/concurrent/Executor;ZZ)V
     134: goto          147
     137: astore_2
     138: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     141: aload_2
     142: invokeinterface #62,  2           // InterfaceMethod org/infinispan/util/logging/Log.failedLoadingKeysFromCacheStore:(Ljava/lang/Exception;)V
     147: aload_0
     148: iconst_1
     149: invokespecial #63                 // Method sendEntries:(Z)V
     152: goto          197
     155: astore_1
     156: aload_0
     157: invokevirtual #65                 // Method isCancelled:()Z
     160: ifeq          188
     163: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     166: ldc           #66                 // String Transfer of segments %s of cache %s to node %s cancelled
     168: aload_0
     169: getfield      #4                  // Field segments:Ljava/util/Set;
     172: aload_0
     173: getfield      #29                 // Field cacheName:Ljava/lang/String;
     176: aload_0
     177: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     180: invokeinterface #67,  5           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     185: goto          197
     188: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     191: aload_1
     192: invokeinterface #68,  2           // InterfaceMethod org/infinispan/util/logging/Log.failedOutBoundTransferExecution:(Ljava/lang/Throwable;)V
     197: aload_0
     198: getfield      #9                  // Field trace:Z
     201: ifeq          226
     204: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     207: ldc           #69                 // String Outbound transfer of segments %s of cache %s to node %s is complete
     209: aload_0
     210: getfield      #4                  // Field segments:Ljava/util/Set;
     213: aload_0
     214: getfield      #29                 // Field cacheName:Ljava/lang/String;
     217: aload_0
     218: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     221: invokeinterface #70,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     226: return
    Exception table:
       from    to  target type
          89   134   137   Class org/infinispan/commons/CacheException
           0   152   155   Class java/lang/Throwable

  private void sendEntry(org.infinispan.container.entries.InternalCacheEntry, int);
    Code:
       0: aload_0
       1: getfield      #71                 // Field accumulatedEntries:I
       4: aload_0
       5: getfield      #22                 // Field stateTransferChunkSize:I
       8: if_icmplt     21
      11: aload_0
      12: iconst_0
      13: invokespecial #63                 // Method sendEntries:(Z)V
      16: aload_0
      17: iconst_0
      18: putfield      #71                 // Field accumulatedEntries:I
      21: aload_0
      22: getfield      #13                 // Field entriesBySegment:Ljava/util/Map;
      25: iload_2
      26: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #73                 // class java/util/List
      37: astore_3
      38: aload_3
      39: ifnonnull     65
      42: new           #74                 // class java/util/ArrayList
      45: dup
      46: invokespecial #75                 // Method java/util/ArrayList."<init>":()V
      49: astore_3
      50: aload_0
      51: getfield      #13                 // Field entriesBySegment:Ljava/util/Map;
      54: iload_2
      55: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: aload_3
      59: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_3
      66: aload_1
      67: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_0
      74: dup
      75: getfield      #71                 // Field accumulatedEntries:I
      78: iconst_1
      79: iadd
      80: putfield      #71                 // Field accumulatedEntries:I
      83: return

  private void sendEntries(boolean);
    Code:
       0: new           #74                 // class java/util/ArrayList
       3: dup
       4: invokespecial #75                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #13                 // Field entriesBySegment:Ljava/util/Map;
      12: invokeinterface #78,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #79,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          116
      32: aload_3
      33: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #80                 // class java/util/Map$Entry
      41: astore        4
      43: aload         4
      45: invokeinterface #81,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: checkcast     #73                 // class java/util/List
      53: astore        5
      55: aload         5
      57: invokeinterface #82,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      62: ifeq          69
      65: iload_1
      66: ifeq          113
      69: aload_2
      70: new           #83                 // class org/infinispan/statetransfer/StateChunk
      73: dup
      74: aload         4
      76: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      81: checkcast     #85                 // class java/lang/Integer
      84: invokevirtual #86                 // Method java/lang/Integer.intValue:()I
      87: new           #74                 // class java/util/ArrayList
      90: dup
      91: aload         5
      93: invokespecial #87                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      96: iload_1
      97: invokespecial #88                 // Method org/infinispan/statetransfer/StateChunk."<init>":(ILjava/util/Collection;Z)V
     100: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     105: pop
     106: aload         5
     108: invokeinterface #89,  1           // InterfaceMethod java/util/List.clear:()V
     113: goto          23
     116: iload_1
     117: ifeq          200
     120: aload_0
     121: getfield      #4                  // Field segments:Ljava/util/Set;
     124: invokeinterface #79,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     129: astore_3
     130: aload_3
     131: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     136: ifeq          200
     139: aload_3
     140: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #85                 // class java/lang/Integer
     148: invokevirtual #86                 // Method java/lang/Integer.intValue:()I
     151: istore        4
     153: aload_0
     154: getfield      #13                 // Field entriesBySegment:Ljava/util/Map;
     157: iload         4
     159: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     162: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     167: checkcast     #73                 // class java/util/List
     170: astore        5
     172: aload         5
     174: ifnonnull     197
     177: aload_2
     178: new           #83                 // class org/infinispan/statetransfer/StateChunk
     181: dup
     182: iload         4
     184: invokestatic  #90                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
     187: iconst_1
     188: invokespecial #88                 // Method org/infinispan/statetransfer/StateChunk."<init>":(ILjava/util/Collection;Z)V
     191: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     196: pop
     197: goto          130
     200: aload_2
     201: invokeinterface #82,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     206: ifne          449
     209: aload_0
     210: getfield      #9                  // Field trace:Z
     213: ifeq          318
     216: iload_1
     217: ifeq          268
     220: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     223: ldc           #91                 // String Sending last chunk containing %d cache entries from segments %s of cache %s to node %s
     225: iconst_4
     226: anewarray     #92                 // class java/lang/Object
     229: dup
     230: iconst_0
     231: aload_0
     232: getfield      #71                 // Field accumulatedEntries:I
     235: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     238: aastore
     239: dup
     240: iconst_1
     241: aload_0
     242: getfield      #4                  // Field segments:Ljava/util/Set;
     245: aastore
     246: dup
     247: iconst_2
     248: aload_0
     249: getfield      #29                 // Field cacheName:Ljava/lang/String;
     252: aastore
     253: dup
     254: iconst_3
     255: aload_0
     256: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     259: aastore
     260: invokeinterface #93,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
     265: goto          318
     268: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     271: ldc           #94                 // String Sending %d cache entries from segments %s of cache %s to node %s
     273: iconst_4
     274: anewarray     #92                 // class java/lang/Object
     277: dup
     278: iconst_0
     279: aload_0
     280: getfield      #71                 // Field accumulatedEntries:I
     283: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     286: aastore
     287: dup
     288: iconst_1
     289: aload_0
     290: getfield      #13                 // Field entriesBySegment:Ljava/util/Map;
     293: invokeinterface #95,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     298: aastore
     299: dup
     300: iconst_2
     301: aload_0
     302: getfield      #29                 // Field cacheName:Ljava/lang/String;
     305: aastore
     306: dup
     307: iconst_3
     308: aload_0
     309: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     312: aastore
     313: invokeinterface #93,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
     318: aload_0
     319: getfield      #27                 // Field commandsFactory:Lorg/infinispan/commands/CommandsFactory;
     322: aload_0
     323: getfield      #26                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     326: invokeinterface #96,  1           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getAddress:()Lorg/infinispan/remoting/transport/Address;
     331: aload_0
     332: getfield      #23                 // Field topologyId:I
     335: aload_2
     336: invokeinterface #97,  4           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildStateResponseCommand:(Lorg/infinispan/remoting/transport/Address;ILjava/util/Collection;)Lorg/infinispan/statetransfer/StateResponseCommand;
     341: astore_3
     342: aload_0
     343: getfield      #26                 // Field rpcManager:Lorg/infinispan/remoting/rpc/RpcManager;
     346: aload_0
     347: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     350: invokestatic  #98                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
     353: aload_3
     354: aload_0
     355: getfield      #35                 // Field rpcOptions:Lorg/infinispan/remoting/rpc/RpcOptions;
     358: invokeinterface #99,  4           // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.invokeRemotely:(Ljava/util/Collection;Lorg/infinispan/commands/ReplicableCommand;Lorg/infinispan/remoting/rpc/RpcOptions;)Ljava/util/Map;
     363: pop
     364: goto          449
     367: astore        4
     369: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     372: ldc           #101                // String Node %s left cache %s while we were sending state to it, cancelling transfer.
     374: aload_0
     375: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     378: aload_0
     379: getfield      #29                 // Field cacheName:Ljava/lang/String;
     382: invokeinterface #102,  4          // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     387: aload_0
     388: invokevirtual #103                // Method cancel:()V
     391: goto          449
     394: astore        4
     396: aload_0
     397: invokevirtual #65                 // Method isCancelled:()Z
     400: ifeq          428
     403: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     406: ldc           #105                // String Stopping cancelled transfer of segments %s of cache %s to node %s
     408: aload_0
     409: getfield      #4                  // Field segments:Ljava/util/Set;
     412: aload_0
     413: getfield      #29                 // Field cacheName:Ljava/lang/String;
     416: aload_0
     417: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     420: invokeinterface #67,  5           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     425: goto          449
     428: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
     431: aload         4
     433: ldc           #106                // String Failed to send entries to node %s : %s
     435: aload_0
     436: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
     439: aload         4
     441: invokevirtual #107                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     444: invokeinterface #108,  5          // InterfaceMethod org/infinispan/util/logging/Log.errorf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     449: return
    Exception table:
       from    to  target type
         342   364   367   Class org/infinispan/remoting/transport/jgroups/SuspectException
         342   364   394   Class java/lang/Exception

  public void cancelSegments(java.util.Set<java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #109,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      10: ifeq          91
      13: aload_0
      14: getfield      #9                  // Field trace:Z
      17: ifeq          59
      20: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      23: ldc           #110                // String Cancelling outbound transfer of segments %s of cache %s to node %s (remaining segments %s)
      25: iconst_4
      26: anewarray     #92                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_1
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #29                 // Field cacheName:Ljava/lang/String;
      39: aastore
      40: dup
      41: iconst_2
      42: aload_0
      43: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
      46: aastore
      47: dup
      48: iconst_3
      49: aload_0
      50: getfield      #4                  // Field segments:Ljava/util/Set;
      53: aastore
      54: invokeinterface #93,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      59: aload_0
      60: getfield      #13                 // Field entriesBySegment:Ljava/util/Map;
      63: invokeinterface #95,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      68: aload_1
      69: invokeinterface #109,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      74: pop
      75: aload_0
      76: getfield      #4                  // Field segments:Ljava/util/Set;
      79: invokeinterface #14,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      84: ifeq          91
      87: aload_0
      88: invokevirtual #103                // Method cancel:()V
      91: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
       4: ifnull        48
       7: aload_0
       8: getfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
      11: invokevirtual #111                // Method java/util/concurrent/FutureTask.isCancelled:()Z
      14: ifne          48
      17: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
      20: ldc           #112                // String Cancelling outbound transfer of segments %s of cache %s to node %s
      22: aload_0
      23: getfield      #4                  // Field segments:Ljava/util/Set;
      26: aload_0
      27: getfield      #29                 // Field cacheName:Ljava/lang/String;
      30: aload_0
      31: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
      34: invokeinterface #67,  5           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
      43: iconst_1
      44: invokevirtual #113                // Method java/util/concurrent/FutureTask.cancel:(Z)Z
      47: pop
      48: return

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
       4: ifnull        21
       7: aload_0
       8: getfield      #36                 // Field runnableFuture:Ljava/util/concurrent/FutureTask;
      11: invokevirtual #111                // Method java/util/concurrent/FutureTask.isCancelled:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.lang.String toString();
    Code:
       0: new           #114                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #115                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #116                // String OutboundTransferTask{topologyId=
       9: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #23                 // Field topologyId:I
      16: invokevirtual #118                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #119                // String , destination=
      21: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #20                 // Field destination:Lorg/infinispan/remoting/transport/Address;
      28: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #121                // String , segments=
      33: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #4                  // Field segments:Ljava/util/Set;
      40: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #122                // String , stateTransferChunkSize=
      45: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #22                 // Field stateTransferChunkSize:I
      52: invokevirtual #118                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #123                // String , timeout=
      57: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #28                 // Field timeout:J
      64: invokevirtual #124                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      67: ldc           #125                // String , cacheName=\'
      69: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #29                 // Field cacheName:Ljava/lang/String;
      76: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: bipush        39
      81: invokevirtual #126                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      84: bipush        125
      86: invokevirtual #126                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      89: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: areturn

  static org.infinispan.statetransfer.StateProviderImpl access$000(org.infinispan.statetransfer.OutboundTransferTask);
    Code:
       0: aload_0
       1: getfield      #6                  // Field stateProvider:Lorg/infinispan/statetransfer/StateProviderImpl;
       4: areturn

  static org.infinispan.distribution.ch.ConsistentHash access$100(org.infinispan.statetransfer.OutboundTransferTask);
    Code:
       0: aload_0
       1: getfield      #5                  // Field readCh:Lorg/infinispan/distribution/ch/ConsistentHash;
       4: areturn

  static java.util.Set access$200(org.infinispan.statetransfer.OutboundTransferTask);
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/Set;
       4: areturn

  static org.infinispan.container.InternalEntryFactory access$300(org.infinispan.statetransfer.OutboundTransferTask);
    Code:
       0: aload_0
       1: getfield      #3                  // Field entryFactory:Lorg/infinispan/container/InternalEntryFactory;
       4: areturn

  static void access$400(org.infinispan.statetransfer.OutboundTransferTask, org.infinispan.container.entries.InternalCacheEntry, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method sendEntry:(Lorg/infinispan/container/entries/InternalCacheEntry;I)V
       6: return

  static org.infinispan.util.logging.Log access$500();
    Code:
       0: getstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #128                // class org/infinispan/statetransfer/OutboundTransferTask
       2: invokestatic  #129                // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #1                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
