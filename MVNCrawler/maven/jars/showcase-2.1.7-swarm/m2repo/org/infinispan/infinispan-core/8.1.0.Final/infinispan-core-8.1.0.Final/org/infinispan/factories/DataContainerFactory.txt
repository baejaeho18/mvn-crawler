Compiled from "DataContainerFactory.java"
public class org.infinispan.factories.DataContainerFactory extends org.infinispan.factories.AbstractNamedCacheComponentFactory implements org.infinispan.factories.AutoInstantiableFactory {
  public org.infinispan.factories.DataContainerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/factories/AbstractNamedCacheComponentFactory."<init>":()V
       4: return

  public <T> T construct(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
       4: invokevirtual #3                  // Method org/infinispan/configuration/cache/Configuration.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfiguration;
       7: invokevirtual #4                  // Method org/infinispan/configuration/cache/DataContainerConfiguration.dataContainer:()Lorg/infinispan/container/DataContainer;
      10: ifnull        24
      13: aload_0
      14: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      17: invokevirtual #3                  // Method org/infinispan/configuration/cache/Configuration.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfiguration;
      20: invokevirtual #4                  // Method org/infinispan/configuration/cache/DataContainerConfiguration.dataContainer:()Lorg/infinispan/container/DataContainer;
      23: areturn
      24: aload_0
      25: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      28: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
      31: invokevirtual #6                  // Method org/infinispan/configuration/cache/EvictionConfiguration.strategy:()Lorg/infinispan/eviction/EvictionStrategy;
      34: astore_2
      35: aload_0
      36: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      39: invokevirtual #7                  // Method org/infinispan/configuration/cache/Configuration.locking:()Lorg/infinispan/configuration/cache/LockingConfiguration;
      42: invokevirtual #8                  // Method org/infinispan/configuration/cache/LockingConfiguration.concurrencyLevel:()I
      45: istore_3
      46: aload_0
      47: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      50: invokevirtual #3                  // Method org/infinispan/configuration/cache/Configuration.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfiguration;
      53: invokevirtual #9                  // Method org/infinispan/configuration/cache/DataContainerConfiguration.keyEquivalence:()Lorg/infinispan/commons/equivalence/Equivalence;
      56: astore        4
      58: aload_0
      59: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
      62: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
      65: invokevirtual #10                 // Method org/infinispan/configuration/cache/EvictionConfiguration.size:()J
      68: lstore        5
      70: lload         5
      72: lconst_0
      73: lcmp
      74: ifge          84
      77: iload_3
      78: aload         4
      80: invokestatic  #11                 // Method org/infinispan/container/DefaultDataContainer.unBoundedDataContainer:(ILorg/infinispan/commons/equivalence/Equivalence;)Lorg/infinispan/container/DefaultDataContainer;
      83: areturn
      84: getstatic     #12                 // Field org/infinispan/factories/DataContainerFactory$1.$SwitchMap$org$infinispan$eviction$EvictionStrategy:[I
      87: aload_2
      88: invokevirtual #13                 // Method org/infinispan/eviction/EvictionStrategy.ordinal:()I
      91: iaload
      92: tableswitch   { // 1 to 5
                     1: 128
                     2: 135
                     3: 135
                     4: 224
                     5: 224
               default: 258
          }
     128: iload_3
     129: aload         4
     131: invokestatic  #11                 // Method org/infinispan/container/DefaultDataContainer.unBoundedDataContainer:(ILorg/infinispan/commons/equivalence/Equivalence;)Lorg/infinispan/container/DefaultDataContainer;
     134: areturn
     135: aload_0
     136: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     139: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
     142: invokevirtual #14                 // Method org/infinispan/configuration/cache/EvictionConfiguration.type:()Lorg/infinispan/eviction/EvictionType;
     145: getstatic     #15                 // Field org/infinispan/eviction/EvictionType.MEMORY:Lorg/infinispan/eviction/EvictionType;
     148: if_acmpne     224
     151: aload_0
     152: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     155: invokevirtual #16                 // Method org/infinispan/configuration/cache/Configuration.storeAsBinary:()Lorg/infinispan/configuration/cache/StoreAsBinaryConfiguration;
     158: invokevirtual #17                 // Method org/infinispan/configuration/cache/StoreAsBinaryConfiguration.storeKeysAsBinary:()Z
     161: ifeq          189
     164: aload_0
     165: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     168: invokevirtual #16                 // Method org/infinispan/configuration/cache/Configuration.storeAsBinary:()Lorg/infinispan/configuration/cache/StoreAsBinaryConfiguration;
     171: invokevirtual #18                 // Method org/infinispan/configuration/cache/StoreAsBinaryConfiguration.storeValuesAsBinary:()Z
     174: ifeq          189
     177: new           #19                 // class org/infinispan/container/entries/MarshalledValueEntrySizeCalculator
     180: dup
     181: invokespecial #20                 // Method org/infinispan/container/entries/MarshalledValueEntrySizeCalculator."<init>":()V
     184: astore        8
     186: goto          198
     189: new           #21                 // class org/infinispan/container/entries/PrimitiveEntrySizeCalculator
     192: dup
     193: invokespecial #22                 // Method org/infinispan/container/entries/PrimitiveEntrySizeCalculator."<init>":()V
     196: astore        8
     198: iload_3
     199: lload         5
     201: aload_2
     202: aload_0
     203: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     206: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
     209: invokevirtual #23                 // Method org/infinispan/configuration/cache/EvictionConfiguration.threadPolicy:()Lorg/infinispan/eviction/EvictionThreadPolicy;
     212: aload         4
     214: aload         8
     216: invokestatic  #24                 // Method org/infinispan/container/DefaultDataContainer.boundedDataContainer:(IJLorg/infinispan/eviction/EvictionStrategy;Lorg/infinispan/eviction/EvictionThreadPolicy;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/commons/util/concurrent/jdk8backported/EntrySizeCalculator;)Lorg/infinispan/container/DefaultDataContainer;
     219: astore        7
     221: goto          294
     224: iload_3
     225: lload         5
     227: aload_2
     228: aload_0
     229: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     232: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
     235: invokevirtual #23                 // Method org/infinispan/configuration/cache/EvictionConfiguration.threadPolicy:()Lorg/infinispan/eviction/EvictionThreadPolicy;
     238: aload         4
     240: aload_0
     241: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     244: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
     247: invokevirtual #14                 // Method org/infinispan/configuration/cache/EvictionConfiguration.type:()Lorg/infinispan/eviction/EvictionType;
     250: invokestatic  #25                 // Method org/infinispan/container/DefaultDataContainer.boundedDataContainer:(IJLorg/infinispan/eviction/EvictionStrategy;Lorg/infinispan/eviction/EvictionThreadPolicy;Lorg/infinispan/commons/equivalence/Equivalence;Lorg/infinispan/eviction/EvictionType;)Lorg/infinispan/container/DefaultDataContainer;
     253: astore        7
     255: goto          294
     258: new           #26                 // class org/infinispan/commons/CacheConfigurationException
     261: dup
     262: new           #27                 // class java/lang/StringBuilder
     265: dup
     266: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     269: ldc           #29                 // String Unknown eviction strategy
     271: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: aload_0
     275: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     278: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
     281: invokevirtual #6                  // Method org/infinispan/configuration/cache/EvictionConfiguration.strategy:()Lorg/infinispan/eviction/EvictionStrategy;
     284: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     287: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     290: invokespecial #33                 // Method org/infinispan/commons/CacheConfigurationException."<init>":(Ljava/lang/String;)V
     293: athrow
     294: aload_0
     295: getfield      #2                  // Field configuration:Lorg/infinispan/configuration/cache/Configuration;
     298: invokevirtual #5                  // Method org/infinispan/configuration/cache/Configuration.eviction:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
     301: invokevirtual #34                 // Method org/infinispan/configuration/cache/EvictionConfiguration.attributes:()Lorg/infinispan/commons/configuration/attributes/AttributeSet;
     304: getstatic     #35                 // Field org/infinispan/configuration/cache/EvictionConfiguration.SIZE:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
     307: invokevirtual #36                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
     310: aload         7
     312: invokedynamic #37,  0             // InvokeDynamic #0:attributeChanged:(Lorg/infinispan/container/DefaultDataContainer;)Lorg/infinispan/commons/configuration/attributes/AttributeListener;
     317: invokevirtual #38                 // Method org/infinispan/commons/configuration/attributes/Attribute.addListener:(Lorg/infinispan/commons/configuration/attributes/AttributeListener;)V
     320: aload         7
     322: areturn

  private static void lambda$construct$172(org.infinispan.container.DefaultDataContainer, org.infinispan.commons.configuration.attributes.Attribute, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method org/infinispan/commons/configuration/attributes/Attribute.get:()Ljava/lang/Object;
       5: checkcast     #40                 // class java/lang/Long
       8: invokevirtual #41                 // Method java/lang/Long.longValue:()J
      11: invokevirtual #42                 // Method org/infinispan/container/DefaultDataContainer.resize:(J)V
      14: return
}
