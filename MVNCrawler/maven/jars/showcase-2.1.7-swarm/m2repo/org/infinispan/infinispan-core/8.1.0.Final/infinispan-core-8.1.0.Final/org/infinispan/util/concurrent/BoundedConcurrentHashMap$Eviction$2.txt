Compiled from "BoundedConcurrentHashMap.java"
final class org.infinispan.util.concurrent.BoundedConcurrentHashMap$Eviction$2 extends org.infinispan.util.concurrent.BoundedConcurrentHashMap$Eviction {
  org.infinispan.util.concurrent.BoundedConcurrentHashMap$Eviction$2(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap$Eviction."<init>":(Ljava/lang/String;ILorg/infinispan/util/concurrent/BoundedConcurrentHashMap$1;)V
       7: return

  public <K, V> org.infinispan.util.concurrent.BoundedConcurrentHashMap$EvictionPolicy<K, V> make(org.infinispan.util.concurrent.BoundedConcurrentHashMap$Segment<K, V>, int, float);
    Code:
       0: new           #2                  // class org/infinispan/util/concurrent/BoundedConcurrentHashMap$BatchWrapper
       3: dup
       4: aload_1
       5: iload_2
       6: bipush        10
       8: imul
       9: new           #3                  // class org/infinispan/util/concurrent/BoundedConcurrentHashMap$LRU
      12: dup
      13: aload_1
      14: iload_2
      15: fload_3
      16: invokespecial #4                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap$LRU."<init>":(Lorg/infinispan/util/concurrent/BoundedConcurrentHashMap$Segment;IF)V
      19: invokespecial #5                  // Method org/infinispan/util/concurrent/BoundedConcurrentHashMap$BatchWrapper."<init>":(Ljava/util/concurrent/locks/ReentrantLock;ILorg/infinispan/util/concurrent/BoundedConcurrentHashMap$EvictionPolicy;)V
      22: areturn
}
