Compiled from "SimpleClusteredVersionGenerator.java"
public class org.infinispan.container.versioning.SimpleClusteredVersionGenerator implements org.infinispan.container.versioning.VersionGenerator {
  private volatile int topologyId;

  private static final org.infinispan.container.versioning.SimpleClusteredVersion NON_EXISTING;

  private org.infinispan.Cache<?, ?> cache;

  public org.infinispan.container.versioning.SimpleClusteredVersionGenerator();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #1                  // Field topologyId:I
       9: return

  public void init(org.infinispan.Cache<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field cache:Lorg/infinispan/Cache;
       5: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cache:Lorg/infinispan/Cache;
       4: new           #4                  // class org/infinispan/container/versioning/SimpleClusteredVersionGenerator$TopologyIdUpdater
       7: dup
       8: aload_0
       9: invokespecial #5                  // Method org/infinispan/container/versioning/SimpleClusteredVersionGenerator$TopologyIdUpdater."<init>":(Lorg/infinispan/container/versioning/SimpleClusteredVersionGenerator;)V
      12: invokeinterface #6,  2            // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;)V
      17: return

  public org.infinispan.container.versioning.IncrementableEntryVersion generateNew();
    Code:
       0: aload_0
       1: getfield      #1                  // Field topologyId:I
       4: iconst_m1
       5: if_icmpne     18
       8: new           #7                  // class java/lang/IllegalStateException
      11: dup
      12: ldc           #8                  // String Topology id not set yet
      14: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: new           #10                 // class org/infinispan/container/versioning/SimpleClusteredVersion
      21: dup
      22: aload_0
      23: getfield      #1                  // Field topologyId:I
      26: lconst_1
      27: invokespecial #11                 // Method org/infinispan/container/versioning/SimpleClusteredVersion."<init>":(IJ)V
      30: areturn

  public org.infinispan.container.versioning.IncrementableEntryVersion increment(org.infinispan.container.versioning.IncrementableEntryVersion);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/infinispan/container/versioning/SimpleClusteredVersion
       4: ifeq          30
       7: aload_1
       8: checkcast     #10                 // class org/infinispan/container/versioning/SimpleClusteredVersion
      11: astore_2
      12: new           #10                 // class org/infinispan/container/versioning/SimpleClusteredVersion
      15: dup
      16: aload_0
      17: getfield      #1                  // Field topologyId:I
      20: aload_2
      21: getfield      #12                 // Field org/infinispan/container/versioning/SimpleClusteredVersion.version:J
      24: lconst_1
      25: ladd
      26: invokespecial #11                 // Method org/infinispan/container/versioning/SimpleClusteredVersion."<init>":(IJ)V
      29: areturn
      30: new           #13                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #14                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #16                 // String I only know how to deal with SimpleClusteredVersions, not
      43: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      53: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow

  public org.infinispan.container.versioning.IncrementableEntryVersion nonExistingVersion();
    Code:
       0: getstatic     #22                 // Field NON_EXISTING:Lorg/infinispan/container/versioning/SimpleClusteredVersion;
       3: areturn

  static int access$002(org.infinispan.container.versioning.SimpleClusteredVersionGenerator, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field topologyId:I
       6: ireturn

  static {};
    Code:
       0: new           #10                 // class org/infinispan/container/versioning/SimpleClusteredVersion
       3: dup
       4: iconst_0
       5: lconst_0
       6: invokespecial #11                 // Method org/infinispan/container/versioning/SimpleClusteredVersion."<init>":(IJ)V
       9: putstatic     #22                 // Field NON_EXISTING:Lorg/infinispan/container/versioning/SimpleClusteredVersion;
      12: return
}
