Compiled from "ClusterTopologyManager.java"
public interface org.infinispan.topology.ClusterTopologyManager {
  public abstract org.infinispan.topology.CacheStatusResponse handleJoin(java.lang.String, org.infinispan.remoting.transport.Address, org.infinispan.topology.CacheJoinInfo, int) throws java.lang.Exception;

  public abstract void handleLeave(java.lang.String, org.infinispan.remoting.transport.Address, int) throws java.lang.Exception;

  public abstract void handleRebalanceCompleted(java.lang.String, org.infinispan.remoting.transport.Address, int, java.lang.Throwable, int) throws java.lang.Exception;

  public abstract void handleClusterView(boolean, int);

  public abstract void broadcastRebalanceStart(java.lang.String, org.infinispan.topology.CacheTopology, boolean, boolean);

  public abstract void broadcastTopologyUpdate(java.lang.String, org.infinispan.topology.CacheTopology, org.infinispan.partitionhandling.AvailabilityMode, boolean, boolean);

  public abstract void broadcastStableTopologyUpdate(java.lang.String, org.infinispan.topology.CacheTopology, boolean, boolean);

  public abstract boolean isRebalancingEnabled();

  public abstract boolean isRebalancingEnabled(java.lang.String);

  public abstract void setRebalancingEnabled(boolean);

  public abstract void setRebalancingEnabled(java.lang.String, boolean);

  public abstract org.infinispan.topology.RebalancingStatus getRebalancingStatus(java.lang.String);

  public abstract void forceRebalance(java.lang.String);

  public abstract void forceAvailabilityMode(java.lang.String, org.infinispan.partitionhandling.AvailabilityMode);
}
