Compiled from "TxClusterStreamManager.java"
class org.infinispan.stream.impl.tx.TxClusterStreamManager$TxExcludedKeys<K> extends org.infinispan.util.AbstractDelegatingMap<java.lang.Integer, java.util.Set<K>> {
  private final java.util.Map<java.lang.Integer, java.util.Set<K>> map;

  private final java.util.Map<java.lang.Integer, java.util.Set<K>> ctxMap;

  private org.infinispan.stream.impl.tx.TxClusterStreamManager$TxExcludedKeys(java.util.Map<java.lang.Integer, java.util.Set<K>>, org.infinispan.context.impl.LocalTxInvocationContext, org.infinispan.distribution.ch.ConsistentHash);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/infinispan/util/AbstractDelegatingMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field map:Ljava/util/Map;
       9: aload_0
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokevirtual #4                  // Method contextToMap:(Lorg/infinispan/context/impl/LocalTxInvocationContext;Lorg/infinispan/distribution/ch/ConsistentHash;)Ljava/util/Map;
      16: putfield      #5                  // Field ctxMap:Ljava/util/Map;
      19: return

  java.util.Map<java.lang.Integer, java.util.Set<K>> contextToMap(org.infinispan.context.impl.LocalTxInvocationContext, org.infinispan.distribution.ch.ConsistentHash);
    Code:
       0: new           #6                  // class java/util/HashMap
       3: dup
       4: invokespecial #7                  // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_1
       9: invokevirtual #8                  // Method org/infinispan/context/impl/LocalTxInvocationContext.getLookedUpEntries:()Ljava/util/Map;
      12: aload_2
      13: aload_3
      14: invokedynamic #9,  0              // InvokeDynamic #0:accept:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/Map;)Ljava/util/function/BiConsumer;
      19: invokeinterface #10,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      24: aload_3
      25: areturn

  protected java.util.Map<java.lang.Integer, java.util.Set<K>> delegate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/Map;
       4: areturn

  public java.util.Set<K> get(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #11                 // class java/lang/Integer
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #5                  // Field ctxMap:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #13                 // class java/util/Set
      22: astore_2
      23: aload_0
      24: aload_1
      25: invokespecial #14                 // Method org/infinispan/util/AbstractDelegatingMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #13                 // class java/util/Set
      31: astore_3
      32: aload_2
      33: ifnull        50
      36: aload_3
      37: ifnull        48
      40: aload_2
      41: aload_3
      42: invokeinterface #15,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      47: pop
      48: aload_2
      49: areturn
      50: aload_3
      51: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ctxMap:Ljava/util/Map;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          23
      12: aload_0
      13: invokespecial #17                 // Method org/infinispan/util/AbstractDelegatingMap.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method get:(Ljava/lang/Object;)Ljava/util/Set;
       5: areturn

  private static void lambda$contextToMap$220(org.infinispan.distribution.ch.ConsistentHash, java.util.Map, java.lang.Object, org.infinispan.container.entries.CacheEntry);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #19,  2           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getSegment:(Ljava/lang/Object;)I
       7: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: astore        4
      12: aload_1
      13: aload         4
      15: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #13                 // class java/util/Set
      23: astore        5
      25: aload         5
      27: ifnonnull     50
      30: new           #21                 // class java/util/HashSet
      33: dup
      34: invokespecial #22                 // Method java/util/HashSet."<init>":()V
      37: astore        5
      39: aload_1
      40: aload         4
      42: aload         5
      44: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload         5
      52: aload_2
      53: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: return

  org.infinispan.stream.impl.tx.TxClusterStreamManager$TxExcludedKeys(java.util.Map, org.infinispan.context.impl.LocalTxInvocationContext, org.infinispan.distribution.ch.ConsistentHash, org.infinispan.stream.impl.tx.TxClusterStreamManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method "<init>":(Ljava/util/Map;Lorg/infinispan/context/impl/LocalTxInvocationContext;Lorg/infinispan/distribution/ch/ConsistentHash;)V
       7: return
}
