Compiled from "NonTransactionalInvocationContextFactory.java"
public class org.infinispan.context.NonTransactionalInvocationContextFactory extends org.infinispan.context.AbstractInvocationContextFactory {
  public org.infinispan.context.NonTransactionalInvocationContextFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/context/AbstractInvocationContextFactory."<init>":()V
       4: return

  public void init(org.infinispan.configuration.cache.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/infinispan/context/AbstractInvocationContextFactory.init:(Lorg/infinispan/configuration/cache/Configuration;)V
       5: return

  public org.infinispan.context.InvocationContext createInvocationContext(boolean, int);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpne     18
       5: new           #3                  // class org/infinispan/context/SingleKeyNonTxInvocationContext
       8: dup
       9: aconst_null
      10: aload_0
      11: getfield      #4                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      14: invokespecial #5                  // Method org/infinispan/context/SingleKeyNonTxInvocationContext."<init>":(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/commons/equivalence/Equivalence;)V
      17: areturn
      18: iload_2
      19: ifle          36
      22: new           #6                  // class org/infinispan/context/impl/NonTxInvocationContext
      25: dup
      26: iload_2
      27: aconst_null
      28: aload_0
      29: getfield      #4                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      32: invokespecial #7                  // Method org/infinispan/context/impl/NonTxInvocationContext."<init>":(ILorg/infinispan/remoting/transport/Address;Lorg/infinispan/commons/equivalence/Equivalence;)V
      35: areturn
      36: aload_0
      37: aconst_null
      38: iconst_0
      39: invokevirtual #8                  // Method createInvocationContext:(Ljavax/transaction/Transaction;Z)Lorg/infinispan/context/InvocationContext;
      42: areturn

  public org.infinispan.context.InvocationContext createInvocationContext(javax.transaction.Transaction, boolean);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method createNonTxInvocationContext:()Lorg/infinispan/context/impl/NonTxInvocationContext;
       4: areturn

  public org.infinispan.context.impl.NonTxInvocationContext createNonTxInvocationContext();
    Code:
       0: new           #6                  // class org/infinispan/context/impl/NonTxInvocationContext
       3: dup
       4: aconst_null
       5: aload_0
       6: getfield      #4                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
       9: invokespecial #10                 // Method org/infinispan/context/impl/NonTxInvocationContext."<init>":(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/commons/equivalence/Equivalence;)V
      12: astore_1
      13: aload_1
      14: areturn

  public org.infinispan.context.InvocationContext createSingleKeyNonTxInvocationContext();
    Code:
       0: new           #3                  // class org/infinispan/context/SingleKeyNonTxInvocationContext
       3: dup
       4: aconst_null
       5: aload_0
       6: getfield      #4                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
       9: invokespecial #5                  // Method org/infinispan/context/SingleKeyNonTxInvocationContext."<init>":(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/commons/equivalence/Equivalence;)V
      12: areturn

  public org.infinispan.context.impl.NonTxInvocationContext createRemoteInvocationContext(org.infinispan.remoting.transport.Address);
    Code:
       0: new           #6                  // class org/infinispan/context/impl/NonTxInvocationContext
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
       9: invokespecial #10                 // Method org/infinispan/context/impl/NonTxInvocationContext."<init>":(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/commons/equivalence/Equivalence;)V
      12: astore_2
      13: aload_2
      14: areturn

  public org.infinispan.context.impl.LocalTxInvocationContext createTxInvocationContext(org.infinispan.transaction.impl.LocalTransaction);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method exception:()Ljava/lang/IllegalStateException;
       4: athrow

  public org.infinispan.context.impl.RemoteTxInvocationContext createRemoteTxInvocationContext(org.infinispan.transaction.impl.RemoteTransaction, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method exception:()Ljava/lang/IllegalStateException;
       4: athrow

  private java.lang.IllegalStateException exception();
    Code:
       0: new           #12                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #13                 // String This is a non-transactional cache - why need to build a transactional context for it!
       6: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  public org.infinispan.context.InvocationContext createRemoteInvocationContextForCommand(org.infinispan.commands.VisitableCommand, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_1
       1: instanceof    #15                 // class org/infinispan/commands/DataCommand
       4: ifeq          27
       7: aload_1
       8: instanceof    #16                 // class org/infinispan/commands/write/InvalidateCommand
      11: ifne          27
      14: new           #3                  // class org/infinispan/context/SingleKeyNonTxInvocationContext
      17: dup
      18: aload_2
      19: aload_0
      20: getfield      #4                  // Field keyEq:Lorg/infinispan/commons/equivalence/Equivalence;
      23: invokespecial #5                  // Method org/infinispan/context/SingleKeyNonTxInvocationContext."<init>":(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/commons/equivalence/Equivalence;)V
      26: areturn
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #17                 // Method org/infinispan/context/AbstractInvocationContextFactory.createRemoteInvocationContextForCommand:(Lorg/infinispan/commands/VisitableCommand;Lorg/infinispan/remoting/transport/Address;)Lorg/infinispan/context/InvocationContext;
      33: areturn

  public org.infinispan.context.InvocationContext createRemoteInvocationContext(org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method createRemoteInvocationContext:(Lorg/infinispan/remoting/transport/Address;)Lorg/infinispan/context/impl/NonTxInvocationContext;
       5: areturn
}
