Compiled from "ClusterRegistryImpl.java"
public class org.infinispan.registry.impl.ClusterRegistryImpl<S, K, V> implements org.infinispan.registry.ClusterRegistry<S, K, V> {
  public static final java.lang.String GLOBAL_REGISTRY_CACHE_NAME;

  private static final org.infinispan.util.logging.Log log;

  private org.infinispan.manager.EmbeddedCacheManager cacheManager;

  private org.infinispan.registry.InternalCacheRegistry internalCacheRegistry;

  private volatile org.infinispan.Cache<org.infinispan.registry.ScopedKey<S, K>, V> clusterRegistryCache;

  private volatile org.infinispan.AdvancedCache<org.infinispan.registry.ScopedKey<S, K>, V> clusterRegistryCacheWithoutReturn;

  private volatile javax.transaction.TransactionManager transactionManager;

  public org.infinispan.registry.impl.ClusterRegistryImpl();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.infinispan.manager.EmbeddedCacheManager, org.infinispan.registry.InternalCacheRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
       5: aload_0
       6: aload_2
       7: putfield      #5                  // Field internalCacheRegistry:Lorg/infinispan/registry/InternalCacheRegistry;
      10: return

  public void stop();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
       5: return

  protected void runCommand(java.lang.Runnable);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod java/lang/Runnable.run:()V
       6: goto          35
       9: astore_2
      10: aload_2
      11: invokestatic  #8                  // Method org/infinispan/remoting/transport/jgroups/SuspectException.isSuspectExceptionInChain:(Ljava/lang/Throwable;)Z
      14: ifeq          30
      17: getstatic     #9                  // Field log:Lorg/infinispan/util/logging/Log;
      20: ldc           #10                 // String Ignoring suspect exception and retrying operation for ClusterRegistry.
      22: invokeinterface #11,  2           // InterfaceMethod org/infinispan/util/logging/Log.trace:(Ljava/lang/Object;)V
      27: goto          32
      30: aload_2
      31: athrow
      32: goto          0
      35: return
    Exception table:
       from    to  target type
           0     6     9   Class org/infinispan/commons/CacheException

  public void put(S, K, V);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #13                 // String Null values are not allowed
      10: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokespecial #15                 // Method startRegistryCache:()V
      18: aload_0
      19: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
      22: astore        4
      24: aload_0
      25: new           #17                 // class org/infinispan/registry/impl/ClusterRegistryImpl$1
      28: dup
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokespecial #18                 // Method org/infinispan/registry/impl/ClusterRegistryImpl$1."<init>":(Lorg/infinispan/registry/impl/ClusterRegistryImpl;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      36: invokevirtual #19                 // Method runCommand:(Ljava/lang/Runnable;)V
      39: aload_0
      40: aload         4
      42: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      45: goto          59
      48: astore        5
      50: aload_0
      51: aload         4
      53: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      56: aload         5
      58: athrow
      59: return
    Exception table:
       from    to  target type
          24    39    48   any
          48    50    48   any

  public void put(S, K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #13                 // String Null values are not allowed
      10: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokespecial #15                 // Method startRegistryCache:()V
      18: aload_0
      19: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
      22: astore        7
      24: aload_0
      25: new           #21                 // class org/infinispan/registry/impl/ClusterRegistryImpl$2
      28: dup
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: lload         4
      35: aload         6
      37: invokespecial #22                 // Method org/infinispan/registry/impl/ClusterRegistryImpl$2."<init>":(Lorg/infinispan/registry/impl/ClusterRegistryImpl;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
      40: invokevirtual #19                 // Method runCommand:(Ljava/lang/Runnable;)V
      43: aload_0
      44: aload         7
      46: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      49: goto          63
      52: astore        8
      54: aload_0
      55: aload         7
      57: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      60: aload         8
      62: athrow
      63: return
    Exception table:
       from    to  target type
          24    43    52   any
          52    54    52   any

  public void remove(S, K);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: aload_0
       5: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
       8: astore_3
       9: aload_0
      10: new           #23                 // class org/infinispan/registry/impl/ClusterRegistryImpl$3
      13: dup
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #24                 // Method org/infinispan/registry/impl/ClusterRegistryImpl$3."<init>":(Lorg/infinispan/registry/impl/ClusterRegistryImpl;Ljava/lang/Object;Ljava/lang/Object;)V
      20: invokevirtual #19                 // Method runCommand:(Ljava/lang/Runnable;)V
      23: aload_0
      24: aload_3
      25: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      28: goto          41
      31: astore        4
      33: aload_0
      34: aload_3
      35: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      38: aload         4
      40: athrow
      41: return
    Exception table:
       from    to  target type
           9    23    31   any
          31    33    31   any

  public V get(S, K);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: aload_0
       5: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
       8: astore_3
       9: aload_0
      10: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      13: new           #25                 // class org/infinispan/registry/ScopedKey
      16: dup
      17: aload_1
      18: aload_2
      19: invokespecial #26                 // Method org/infinispan/registry/ScopedKey."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokeinterface #27,  2           // InterfaceMethod org/infinispan/Cache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: astore        4
      29: aload_0
      30: aload_3
      31: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      34: aload         4
      36: areturn
      37: astore        5
      39: aload_0
      40: aload_3
      41: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      44: aload         5
      46: athrow
    Exception table:
       from    to  target type
           9    29    37   any
          37    39    37   any

  public boolean containsKey(S, K);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: aload_0
       5: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
       8: astore_3
       9: aload_0
      10: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      13: new           #25                 // class org/infinispan/registry/ScopedKey
      16: dup
      17: aload_1
      18: aload_2
      19: invokespecial #26                 // Method org/infinispan/registry/ScopedKey."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokeinterface #28,  2           // InterfaceMethod org/infinispan/Cache.containsKey:(Ljava/lang/Object;)Z
      27: istore        4
      29: aload_0
      30: aload_3
      31: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      34: iload         4
      36: ireturn
      37: astore        5
      39: aload_0
      40: aload_3
      41: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      44: aload         5
      46: athrow
    Exception table:
       from    to  target type
           9    29    37   any
          37    39    37   any

  public java.util.Set<K> keys(S);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: new           #29                 // class java/util/HashSet
       7: dup
       8: invokespecial #30                 // Method java/util/HashSet."<init>":()V
      11: astore_2
      12: aload_0
      13: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
      16: astore_3
      17: aload_0
      18: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      21: invokeinterface #31,  1           // InterfaceMethod org/infinispan/Cache.keySet:()Lorg/infinispan/CacheSet;
      26: invokeinterface #32,  1           // InterfaceMethod org/infinispan/CacheSet.iterator:()Lorg/infinispan/commons/util/CloseableIterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          79
      43: aload         4
      45: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #25                 // class org/infinispan/registry/ScopedKey
      53: astore        5
      55: aload         5
      57: aload_1
      58: invokevirtual #35                 // Method org/infinispan/registry/ScopedKey.hasScope:(Ljava/lang/Object;)Z
      61: ifeq          76
      64: aload_2
      65: aload         5
      67: invokevirtual #36                 // Method org/infinispan/registry/ScopedKey.getKey:()Ljava/lang/Object;
      70: invokeinterface #37,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      75: pop
      76: goto          33
      79: aload_2
      80: astore        4
      82: aload_0
      83: aload_3
      84: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      87: aload         4
      89: areturn
      90: astore        6
      92: aload_0
      93: aload_3
      94: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      97: aload         6
      99: athrow
    Exception table:
       from    to  target type
          17    82    90   any
          90    92    90   any

  public void clear(S);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: aload_0
       5: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
       8: astore_2
       9: aload_0
      10: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      13: invokeinterface #31,  1           // InterfaceMethod org/infinispan/Cache.keySet:()Lorg/infinispan/CacheSet;
      18: invokeinterface #32,  1           // InterfaceMethod org/infinispan/CacheSet.iterator:()Lorg/infinispan/commons/util/CloseableIterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          70
      33: aload_3
      34: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #25                 // class org/infinispan/registry/ScopedKey
      42: astore        4
      44: aload         4
      46: aload_1
      47: invokevirtual #35                 // Method org/infinispan/registry/ScopedKey.hasScope:(Ljava/lang/Object;)Z
      50: ifeq          67
      53: aload_0
      54: new           #38                 // class org/infinispan/registry/impl/ClusterRegistryImpl$4
      57: dup
      58: aload_0
      59: aload         4
      61: invokespecial #39                 // Method org/infinispan/registry/impl/ClusterRegistryImpl$4."<init>":(Lorg/infinispan/registry/impl/ClusterRegistryImpl;Lorg/infinispan/registry/ScopedKey;)V
      64: invokevirtual #19                 // Method runCommand:(Ljava/lang/Runnable;)V
      67: goto          24
      70: aload_0
      71: aload_2
      72: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      75: goto          88
      78: astore        5
      80: aload_0
      81: aload_2
      82: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      85: aload         5
      87: athrow
      88: return
    Exception table:
       from    to  target type
           9    70    78   any
          78    80    78   any

  public void clearAll();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: aload_0
       5: invokespecial #16                 // Method suspendTx:()Ljavax/transaction/Transaction;
       8: astore_1
       9: aload_0
      10: new           #40                 // class org/infinispan/registry/impl/ClusterRegistryImpl$5
      13: dup
      14: aload_0
      15: invokespecial #41                 // Method org/infinispan/registry/impl/ClusterRegistryImpl$5."<init>":(Lorg/infinispan/registry/impl/ClusterRegistryImpl;)V
      18: invokevirtual #19                 // Method runCommand:(Ljava/lang/Runnable;)V
      21: aload_0
      22: aload_1
      23: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      26: goto          37
      29: astore_2
      30: aload_0
      31: aload_1
      32: invokespecial #20                 // Method resumeTx:(Ljavax/transaction/Transaction;)V
      35: aload_2
      36: athrow
      37: return
    Exception table:
       from    to  target type
           9    21    29   any

  public void addListener(S, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: aload_0
       5: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
       8: aload_2
       9: new           #42                 // class org/infinispan/registry/impl/ClusterRegistryImpl$6
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #43                 // Method org/infinispan/registry/impl/ClusterRegistryImpl$6."<init>":(Lorg/infinispan/registry/impl/ClusterRegistryImpl;Ljava/lang/Object;)V
      18: invokeinterface #44,  3           // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;Lorg/infinispan/filter/KeyFilter;)V
      23: return

  public void addListener(S, org.infinispan.filter.KeyFilter, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method startRegistryCache:()V
       4: aload_0
       5: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
       8: aload_3
       9: new           #45                 // class org/infinispan/registry/impl/ClusterRegistryImpl$7
      12: dup
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokespecial #46                 // Method org/infinispan/registry/impl/ClusterRegistryImpl$7."<init>":(Lorg/infinispan/registry/impl/ClusterRegistryImpl;Ljava/lang/Object;Lorg/infinispan/filter/KeyFilter;)V
      19: invokeinterface #44,  3           // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;Lorg/infinispan/filter/KeyFilter;)V
      24: return

  public void removeListener(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
       4: ifnull        17
       7: aload_0
       8: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      11: aload_1
      12: invokeinterface #47,  2           // InterfaceMethod org/infinispan/Cache.removeListener:(Ljava/lang/Object;)V
      17: return

  private void startRegistryCache();
    Code:
       0: aload_0
       1: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
       4: ifnonnull     98
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      15: ifnull        21
      18: aload_1
      19: monitorexit
      20: return
      21: aload_0
      22: getfield      #5                  // Field internalCacheRegistry:Lorg/infinispan/registry/InternalCacheRegistry;
      25: ldc           #49                 // String __cluster_registry_cache__
      27: aload_0
      28: invokespecial #50                 // Method getRegistryCacheConfig:()Lorg/infinispan/configuration/cache/Configuration;
      31: invokeinterface #51,  3           // InterfaceMethod org/infinispan/registry/InternalCacheRegistry.registerInternalCache:(Ljava/lang/String;Lorg/infinispan/configuration/cache/Configuration;)V
      36: aload_0
      37: aload_0
      38: getfield      #4                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
      41: invokestatic  #52                 // Method org/infinispan/registry/impl/SecurityActions.getRegistryCache:(Lorg/infinispan/manager/EmbeddedCacheManager;)Lorg/infinispan/Cache;
      44: putfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      47: aload_0
      48: aload_0
      49: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
      52: invokeinterface #53,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      57: iconst_1
      58: anewarray     #54                 // class org/infinispan/context/Flag
      61: dup
      62: iconst_0
      63: getstatic     #55                 // Field org/infinispan/context/Flag.IGNORE_RETURN_VALUES:Lorg/infinispan/context/Flag;
      66: aastore
      67: invokeinterface #56,  2           // InterfaceMethod org/infinispan/AdvancedCache.withFlags:([Lorg/infinispan/context/Flag;)Lorg/infinispan/AdvancedCache;
      72: putfield      #2                  // Field clusterRegistryCacheWithoutReturn:Lorg/infinispan/AdvancedCache;
      75: aload_0
      76: aload_0
      77: getfield      #2                  // Field clusterRegistryCacheWithoutReturn:Lorg/infinispan/AdvancedCache;
      80: invokeinterface #57,  1           // InterfaceMethod org/infinispan/AdvancedCache.getTransactionManager:()Ljavax/transaction/TransactionManager;
      85: putfield      #58                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      88: aload_1
      89: monitorexit
      90: goto          98
      93: astore_2
      94: aload_1
      95: monitorexit
      96: aload_2
      97: athrow
      98: return
    Exception table:
       from    to  target type
          11    20    93   any
          21    90    93   any
          93    96    93   any

  private org.infinispan.configuration.cache.Configuration getRegistryCacheConfig();
    Code:
       0: new           #59                 // class org/infinispan/configuration/cache/ConfigurationBuilder
       3: dup
       4: invokespecial #60                 // Method org/infinispan/configuration/cache/ConfigurationBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #61                 // Method isClustered:()Z
      12: ifeq          21
      15: getstatic     #62                 // Field org/infinispan/configuration/cache/CacheMode.REPL_SYNC:Lorg/infinispan/configuration/cache/CacheMode;
      18: goto          24
      21: getstatic     #63                 // Field org/infinispan/configuration/cache/CacheMode.LOCAL:Lorg/infinispan/configuration/cache/CacheMode;
      24: astore_2
      25: aload_1
      26: invokevirtual #64                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfigurationBuilder;
      29: aload_2
      30: invokevirtual #65                 // Method org/infinispan/configuration/cache/ClusteringConfigurationBuilder.cacheMode:(Lorg/infinispan/configuration/cache/CacheMode;)Lorg/infinispan/configuration/cache/ClusteringConfigurationBuilder;
      33: pop
      34: aload_1
      35: invokevirtual #66                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.transaction:()Lorg/infinispan/configuration/cache/TransactionConfigurationBuilder;
      38: getstatic     #67                 // Field org/infinispan/transaction/TransactionMode.TRANSACTIONAL:Lorg/infinispan/transaction/TransactionMode;
      41: invokevirtual #68                 // Method org/infinispan/configuration/cache/TransactionConfigurationBuilder.transactionMode:(Lorg/infinispan/transaction/TransactionMode;)Lorg/infinispan/configuration/cache/TransactionConfigurationBuilder;
      44: aconst_null
      45: invokevirtual #69                 // Method org/infinispan/configuration/cache/TransactionConfigurationBuilder.transactionManagerLookup:(Lorg/infinispan/transaction/lookup/TransactionManagerLookup;)Lorg/infinispan/configuration/cache/TransactionConfigurationBuilder;
      48: invokevirtual #70                 // Method org/infinispan/configuration/cache/TransactionConfigurationBuilder.invocationBatching:()Lorg/infinispan/configuration/cache/InvocationBatchingConfigurationBuilder;
      51: invokevirtual #71                 // Method org/infinispan/configuration/cache/InvocationBatchingConfigurationBuilder.enable:()Lorg/infinispan/configuration/cache/InvocationBatchingConfigurationBuilder;
      54: pop
      55: aload_1
      56: invokevirtual #64                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfigurationBuilder;
      59: invokevirtual #72                 // Method org/infinispan/configuration/cache/ClusteringConfigurationBuilder.stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
      62: aload_2
      63: invokevirtual #73                 // Method org/infinispan/configuration/cache/CacheMode.needsStateTransfer:()Z
      66: invokevirtual #74                 // Method org/infinispan/configuration/cache/StateTransferConfigurationBuilder.fetchInMemoryState:(Z)Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
      69: pop
      70: aload_1
      71: invokevirtual #75                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.security:()Lorg/infinispan/configuration/cache/SecurityConfigurationBuilder;
      74: invokevirtual #76                 // Method org/infinispan/configuration/cache/SecurityConfigurationBuilder.authorization:()Lorg/infinispan/configuration/cache/AuthorizationConfigurationBuilder;
      77: invokevirtual #77                 // Method org/infinispan/configuration/cache/AuthorizationConfigurationBuilder.disable:()Lorg/infinispan/configuration/cache/AuthorizationConfigurationBuilder;
      80: pop
      81: aload_1
      82: invokevirtual #78                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.build:()Lorg/infinispan/configuration/cache/Configuration;
      85: areturn

  private boolean isClustered();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheManager:Lorg/infinispan/manager/EmbeddedCacheManager;
       4: invokeinterface #79,  1           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getGlobalComponentRegistry:()Lorg/infinispan/factories/GlobalComponentRegistry;
       9: invokevirtual #80                 // Method org/infinispan/factories/GlobalComponentRegistry.getGlobalConfiguration:()Lorg/infinispan/configuration/global/GlobalConfiguration;
      12: astore_1
      13: aload_1
      14: invokevirtual #81                 // Method org/infinispan/configuration/global/GlobalConfiguration.isClustered:()Z
      17: ireturn

  private javax.transaction.Transaction suspendTx();
    Code:
       0: aload_0
       1: getfield      #58                 // Field transactionManager:Ljavax/transaction/TransactionManager;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #58                 // Field transactionManager:Ljavax/transaction/TransactionManager;
      13: invokeinterface #82,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
      18: areturn
      19: astore_1
      20: new           #7                  // class org/infinispan/commons/CacheException
      23: dup
      24: ldc           #84                 // String Unable to suspend ongoing transaction
      26: aload_1
      27: invokespecial #85                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: athrow
    Exception table:
       from    to  target type
           0     8    19   Class javax/transaction/SystemException
           9    18    19   Class javax/transaction/SystemException

  private void resumeTx(javax.transaction.Transaction);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_0
       5: getfield      #58                 // Field transactionManager:Ljavax/transaction/TransactionManager;
       8: aload_1
       9: invokeinterface #86,  2           // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
      14: goto          29
      17: astore_2
      18: new           #7                  // class org/infinispan/commons/CacheException
      21: dup
      22: ldc           #88                 // String Unable to resume ongoing transaction
      24: aload_2
      25: invokespecial #85                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: athrow
      29: return
    Exception table:
       from    to  target type
           0    14    17   Class javax/transaction/InvalidTransactionException
           0    14    17   Class javax/transaction/SystemException

  static org.infinispan.AdvancedCache access$000(org.infinispan.registry.impl.ClusterRegistryImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field clusterRegistryCacheWithoutReturn:Lorg/infinispan/AdvancedCache;
       4: areturn

  static org.infinispan.Cache access$100(org.infinispan.registry.impl.ClusterRegistryImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field clusterRegistryCache:Lorg/infinispan/Cache;
       4: areturn

  static {};
    Code:
       0: ldc           #48                 // class org/infinispan/registry/impl/ClusterRegistryImpl
       2: invokestatic  #89                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #9                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
