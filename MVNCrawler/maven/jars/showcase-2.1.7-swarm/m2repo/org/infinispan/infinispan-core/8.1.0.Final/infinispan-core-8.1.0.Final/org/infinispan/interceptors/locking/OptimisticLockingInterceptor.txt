Compiled from "OptimisticLockingInterceptor.java"
public class org.infinispan.interceptors.locking.OptimisticLockingInterceptor extends org.infinispan.interceptors.locking.AbstractTxLockingInterceptor {
  private boolean needToMarkReads;

  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  public org.infinispan.interceptors.locking.OptimisticLockingInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/infinispan/interceptors/locking/AbstractTxLockingInterceptor."<init>":()V
       4: return

  protected org.infinispan.util.logging.Log getLog();
    Code:
       0: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  public void start();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
       5: invokevirtual #4                  // Method org/infinispan/configuration/cache/Configuration.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfiguration;
       8: invokevirtual #5                  // Method org/infinispan/configuration/cache/ClusteringConfiguration.cacheMode:()Lorg/infinispan/configuration/cache/CacheMode;
      11: getstatic     #6                  // Field org/infinispan/configuration/cache/CacheMode.LOCAL:Lorg/infinispan/configuration/cache/CacheMode;
      14: if_acmpne     63
      17: aload_0
      18: getfield      #3                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      21: invokevirtual #7                  // Method org/infinispan/configuration/cache/Configuration.locking:()Lorg/infinispan/configuration/cache/LockingConfiguration;
      24: invokevirtual #8                  // Method org/infinispan/configuration/cache/LockingConfiguration.writeSkewCheck:()Z
      27: ifeq          63
      30: aload_0
      31: getfield      #3                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      34: invokevirtual #7                  // Method org/infinispan/configuration/cache/Configuration.locking:()Lorg/infinispan/configuration/cache/LockingConfiguration;
      37: invokevirtual #9                  // Method org/infinispan/configuration/cache/LockingConfiguration.isolationLevel:()Lorg/infinispan/util/concurrent/IsolationLevel;
      40: getstatic     #10                 // Field org/infinispan/util/concurrent/IsolationLevel.REPEATABLE_READ:Lorg/infinispan/util/concurrent/IsolationLevel;
      43: if_acmpne     63
      46: aload_0
      47: getfield      #3                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      50: invokevirtual #11                 // Method org/infinispan/configuration/cache/Configuration.unsafe:()Lorg/infinispan/configuration/cache/UnsafeConfiguration;
      53: invokevirtual #12                 // Method org/infinispan/configuration/cache/UnsafeConfiguration.unreliableReturnValues:()Z
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: putfield      #13                 // Field needToMarkReads:Z
      67: return

  private void markKeyAsRead(org.infinispan.context.InvocationContext, org.infinispan.commands.DataCommand, boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field needToMarkReads:Z
       4: ifeq          54
       7: aload_1
       8: invokeinterface #14,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isInTxScope:()Z
      13: ifeq          54
      16: iload_3
      17: ifne          32
      20: aload_2
      21: getstatic     #15                 // Field org/infinispan/context/Flag.IGNORE_RETURN_VALUES:Lorg/infinispan/context/Flag;
      24: invokeinterface #16,  2           // InterfaceMethod org/infinispan/commands/DataCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      29: ifne          54
      32: aload_1
      33: checkcast     #17                 // class org/infinispan/context/impl/TxInvocationContext
      36: astore        4
      38: aload         4
      40: invokeinterface #18,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      45: aload_2
      46: invokeinterface #19,  1           // InterfaceMethod org/infinispan/commands/DataCommand.getKey:()Ljava/lang/Object;
      51: invokevirtual #20                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.addReadKey:(Ljava/lang/Object;)V
      54: return

  public java.lang.Object visitPrepareCommand(org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.tx.PrepareCommand) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: invokevirtual #21                 // Method org/infinispan/commands/tx/PrepareCommand.getKeysToLock:()Ljava/util/Collection;
       4: astore_3
       5: aload_1
       6: aload_2
       7: invokevirtual #22                 // Method org/infinispan/commands/tx/PrepareCommand.getAffectedKeys:()Ljava/util/Set;
      10: invokeinterface #23,  2           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.addAllAffectedKeys:(Ljava/util/Collection;)V
      15: aload_3
      16: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      21: ifne          128
      24: aload_2
      25: invokevirtual #25                 // Method org/infinispan/commands/tx/PrepareCommand.isRetriedCommand:()Z
      28: ifeq          62
      31: aload_1
      32: invokeinterface #26,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.isOriginLocal:()Z
      37: ifeq          62
      40: aload_1
      41: invokeinterface #18,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      46: invokevirtual #27                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.cleanupBackupLocks:()V
      49: aload_3
      50: aload_1
      51: invokeinterface #28,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getLockedKeys:()Ljava/util/Set;
      56: invokeinterface #29,  2           // InterfaceMethod java/util/Collection.removeAll:(Ljava/util/Collection;)Z
      61: pop
      62: aload_0
      63: aload_1
      64: aload_3
      65: aload_0
      66: getfield      #3                  // Field cacheConfiguration:Lorg/infinispan/configuration/cache/Configuration;
      69: invokevirtual #7                  // Method org/infinispan/configuration/cache/Configuration.locking:()Lorg/infinispan/configuration/cache/LockingConfiguration;
      72: invokevirtual #30                 // Method org/infinispan/configuration/cache/LockingConfiguration.lockAcquisitionTimeout:()J
      75: invokevirtual #31                 // Method lockAllOrRegisterBackupLock:(Lorg/infinispan/context/impl/TxInvocationContext;Ljava/util/Collection;J)Ljava/util/Collection;
      78: astore        4
      80: aload         4
      82: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      87: ifne          128
      90: aload         4
      92: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      97: astore        5
      99: aload         5
     101: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     106: ifeq          128
     109: aload         5
     111: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: astore        6
     118: aload_0
     119: aload_1
     120: aload         6
     122: invokespecial #35                 // Method performLocalWriteSkewCheck:(Lorg/infinispan/context/impl/TxInvocationContext;Ljava/lang/Object;)V
     125: goto          99
     128: aload_0
     129: aload_1
     130: aload_2
     131: invokevirtual #36                 // Method invokeNextAndCommitIf1Pc:(Lorg/infinispan/context/impl/TxInvocationContext;Lorg/infinispan/commands/tx/PrepareCommand;)Ljava/lang/Object;
     134: areturn

  protected java.lang.Object visitDataReadCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.DataCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #37                 // Method markKeyAsRead:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/DataCommand;Z)V
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #38                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      13: astore_3
      14: aload_1
      15: invokeinterface #14,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isInTxScope:()Z
      20: ifne          33
      23: aload_0
      24: getfield      #39                 // Field lockManager:Lorg/infinispan/util/concurrent/locks/LockManager;
      27: aload_1
      28: invokeinterface #40,  2           // InterfaceMethod org/infinispan/util/concurrent/locks/LockManager.unlockAll:(Lorg/infinispan/context/InvocationContext;)V
      33: aload_3
      34: areturn
      35: astore        4
      37: aload_1
      38: invokeinterface #14,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isInTxScope:()Z
      43: ifne          56
      46: aload_0
      47: getfield      #39                 // Field lockManager:Lorg/infinispan/util/concurrent/locks/LockManager;
      50: aload_1
      51: invokeinterface #40,  2           // InterfaceMethod org/infinispan/util/concurrent/locks/LockManager.unlockAll:(Lorg/infinispan/context/InvocationContext;)V
      56: aload         4
      58: athrow
    Exception table:
       from    to  target type
           7    14    35   any
          35    37    35   any

  public java.lang.Object visitGetKeyValueCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetKeyValueCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #37                 // Method markKeyAsRead:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/DataCommand;Z)V
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #41                 // Method org/infinispan/interceptors/locking/AbstractTxLockingInterceptor.visitGetKeyValueCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/GetKeyValueCommand;)Ljava/lang/Object;
      13: areturn

  public java.lang.Object visitGetAllCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.read.GetAllCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field needToMarkReads:Z
       4: ifeq          65
       7: aload_1
       8: invokeinterface #14,  1           // InterfaceMethod org/infinispan/context/InvocationContext.isInTxScope:()Z
      13: ifeq          65
      16: aload_1
      17: checkcast     #17                 // class org/infinispan/context/impl/TxInvocationContext
      20: astore_3
      21: aload_2
      22: invokevirtual #42                 // Method org/infinispan/commands/read/GetAllCommand.getKeys:()Ljava/util/Collection;
      25: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          65
      42: aload         4
      44: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: astore        5
      51: aload_3
      52: invokeinterface #18,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      57: aload         5
      59: invokevirtual #20                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.addReadKey:(Ljava/lang/Object;)V
      62: goto          32
      65: aload_0
      66: aload_1
      67: aload_2
      68: invokespecial #43                 // Method org/infinispan/interceptors/locking/AbstractTxLockingInterceptor.visitGetAllCommand:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/read/GetAllCommand;)Ljava/lang/Object;
      71: areturn

  public java.lang.Object visitApplyDeltaCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.ApplyDeltaCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #38                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: areturn
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_3
      11: invokevirtual #45                 // Method cleanLocksAndRethrow:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      14: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public java.lang.Object visitPutMapCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.PutMapCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #38                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
       6: areturn
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_3
      11: invokevirtual #45                 // Method cleanLocksAndRethrow:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      14: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  protected java.lang.Object visitDataWriteCommand(org.infinispan.context.InvocationContext, org.infinispan.commands.write.DataWriteCommand) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokeinterface #46,  1           // InterfaceMethod org/infinispan/commands/write/DataWriteCommand.isConditional:()Z
       9: invokespecial #37                 // Method markKeyAsRead:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/DataCommand;Z)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #38                 // Method invokeNextInterceptor:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      18: areturn
      19: astore_3
      20: aload_0
      21: aload_1
      22: aload_3
      23: invokevirtual #45                 // Method cleanLocksAndRethrow:(Lorg/infinispan/context/InvocationContext;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      26: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/lang/Throwable

  public java.lang.Object visitLockControlCommand(org.infinispan.context.impl.TxInvocationContext, org.infinispan.commands.control.LockControlCommand) throws java.lang.Throwable;
    Code:
       0: new           #47                 // class org/infinispan/InvalidCacheUsageException
       3: dup
       4: ldc           #48                 // String Explicit locking is not allowed with optimistic caches!
       6: invokespecial #49                 // Method org/infinispan/InvalidCacheUsageException."<init>":(Ljava/lang/String;)V
       9: athrow

  private void performLocalWriteSkewCheck(org.infinispan.context.impl.TxInvocationContext, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #50,  2           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.lookupEntry:(Ljava/lang/Object;)Lorg/infinispan/container/entries/CacheEntry;
       7: astore_3
       8: aload_3
       9: instanceof    #51                 // class org/infinispan/container/entries/RepeatableReadEntry
      12: ifeq          60
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod org/infinispan/context/impl/TxInvocationContext.getCacheTransaction:()Lorg/infinispan/transaction/impl/AbstractCacheTransaction;
      21: aload_2
      22: invokevirtual #52                 // Method org/infinispan/transaction/impl/AbstractCacheTransaction.keyRead:(Ljava/lang/Object;)Z
      25: ifeq          60
      28: getstatic     #53                 // Field trace:Z
      31: ifeq          45
      34: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
      37: ldc           #54                 // String Performing local write skew check for key %s
      39: aload_2
      40: invokeinterface #55,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      45: aload_3
      46: checkcast     #51                 // class org/infinispan/container/entries/RepeatableReadEntry
      49: aload_0
      50: getfield      #56                 // Field dataContainer:Lorg/infinispan/container/DataContainer;
      53: iconst_1
      54: invokevirtual #57                 // Method org/infinispan/container/entries/RepeatableReadEntry.performLocalWriteSkewCheck:(Lorg/infinispan/container/DataContainer;Z)V
      57: goto          77
      60: getstatic     #53                 // Field trace:Z
      63: ifeq          77
      66: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
      69: ldc           #58                 // String *Not* performing local write skew check for key %s
      71: aload_2
      72: invokeinterface #55,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      77: return

  static {};
    Code:
       0: ldc           #59                 // class org/infinispan/interceptors/locking/OptimisticLockingInterceptor
       2: invokestatic  #60                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #2                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #61,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #53                 // Field trace:Z
      19: return
}
