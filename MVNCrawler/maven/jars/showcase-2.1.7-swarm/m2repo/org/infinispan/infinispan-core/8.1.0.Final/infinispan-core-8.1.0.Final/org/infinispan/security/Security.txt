Compiled from "Security.java"
public final class org.infinispan.security.Security {
  private static final boolean hasGetCallerClass;

  private static final int callerOffset;

  private static final org.infinispan.security.Security$LocalSecurityManager SECURITY_MANAGER;

  private static final java.lang.ThreadLocal<java.lang.Boolean> PRIVILEGED;

  private static final java.lang.ThreadLocal<java.util.Stack<javax.security.auth.Subject>> SUBJECT;

  public org.infinispan.security.Security();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static boolean isTrustedClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       4: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
       7: ldc           #4                  // String org.infinispan.
       9: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ireturn

  public static <T> T doPrivileged(java.security.PrivilegedAction<T>);
    Code:
       0: invokestatic  #6                  // Method isPrivileged:()Z
       3: ifne          50
       6: iconst_2
       7: invokestatic  #7                  // Method getCallerClass:(I)Ljava/lang/Class;
      10: invokestatic  #8                  // Method isTrustedClass:(Ljava/lang/Class;)Z
      13: ifeq          50
      16: getstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
      19: iconst_1
      20: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      23: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      26: aload_0
      27: invokeinterface #12,  1           // InterfaceMethod java/security/PrivilegedAction.run:()Ljava/lang/Object;
      32: astore_1
      33: getstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
      36: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      39: aload_1
      40: areturn
      41: astore_2
      42: getstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
      45: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      48: aload_2
      49: athrow
      50: aload_0
      51: invokeinterface #12,  1           // InterfaceMethod java/security/PrivilegedAction.run:()Ljava/lang/Object;
      56: areturn
    Exception table:
       from    to  target type
          16    33    41   any

  public static <T> T doPrivileged(java.security.PrivilegedExceptionAction<T>) throws java.security.PrivilegedActionException;
    Code:
       0: invokestatic  #6                  // Method isPrivileged:()Z
       3: ifne          60
       6: iconst_2
       7: invokestatic  #7                  // Method getCallerClass:(I)Ljava/lang/Class;
      10: invokestatic  #8                  // Method isTrustedClass:(Ljava/lang/Class;)Z
      13: ifeq          60
      16: getstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
      19: iconst_1
      20: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      23: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      26: aload_0
      27: invokeinterface #14,  1           // InterfaceMethod java/security/PrivilegedExceptionAction.run:()Ljava/lang/Object;
      32: astore_1
      33: getstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
      36: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      39: aload_1
      40: areturn
      41: astore_1
      42: new           #16                 // class java/security/PrivilegedActionException
      45: dup
      46: aload_1
      47: invokespecial #17                 // Method java/security/PrivilegedActionException."<init>":(Ljava/lang/Exception;)V
      50: athrow
      51: astore_2
      52: getstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
      55: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      58: aload_2
      59: athrow
      60: aload_0
      61: invokeinterface #14,  1           // InterfaceMethod java/security/PrivilegedExceptionAction.run:()Ljava/lang/Object;
      66: areturn
      67: astore_1
      68: new           #16                 // class java/security/PrivilegedActionException
      71: dup
      72: aload_1
      73: invokespecial #17                 // Method java/security/PrivilegedActionException."<init>":(Ljava/lang/Exception;)V
      76: athrow
    Exception table:
       from    to  target type
          16    33    41   Class java/lang/Exception
          16    33    51   any
          41    52    51   any
          60    66    67   Class java/lang/Exception

  public static <T> T doAs(javax.security.auth.Subject, java.security.PrivilegedAction<T>);
    Code:
       0: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
       3: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #20                 // class java/util/Stack
       9: astore_2
      10: aload_2
      11: ifnonnull     29
      14: new           #20                 // class java/util/Stack
      17: dup
      18: invokespecial #21                 // Method java/util/Stack."<init>":()V
      21: astore_2
      22: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      25: aload_2
      26: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      29: aload_2
      30: aload_0
      31: invokevirtual #22                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: invokeinterface #12,  1           // InterfaceMethod java/security/PrivilegedAction.run:()Ljava/lang/Object;
      41: astore_3
      42: aload_2
      43: invokevirtual #23                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      46: pop
      47: aload_2
      48: invokevirtual #24                 // Method java/util/Stack.isEmpty:()Z
      51: ifeq          60
      54: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      57: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      60: aload_3
      61: areturn
      62: astore        4
      64: aload_2
      65: invokevirtual #23                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      68: pop
      69: aload_2
      70: invokevirtual #24                 // Method java/util/Stack.isEmpty:()Z
      73: ifeq          82
      76: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      79: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      82: aload         4
      84: athrow
    Exception table:
       from    to  target type
          35    42    62   any
          62    64    62   any

  public static <T> T doAs(javax.security.auth.Subject, java.security.PrivilegedExceptionAction<T>) throws java.security.PrivilegedActionException;
    Code:
       0: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
       3: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #20                 // class java/util/Stack
       9: astore_2
      10: aload_2
      11: ifnonnull     29
      14: new           #20                 // class java/util/Stack
      17: dup
      18: invokespecial #21                 // Method java/util/Stack."<init>":()V
      21: astore_2
      22: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      25: aload_2
      26: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      29: aload_2
      30: aload_0
      31: invokevirtual #22                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: invokeinterface #14,  1           // InterfaceMethod java/security/PrivilegedExceptionAction.run:()Ljava/lang/Object;
      41: astore_3
      42: aload_2
      43: invokevirtual #23                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      46: pop
      47: aload_2
      48: invokevirtual #24                 // Method java/util/Stack.isEmpty:()Z
      51: ifeq          60
      54: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      57: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      60: aload_3
      61: areturn
      62: astore_3
      63: new           #16                 // class java/security/PrivilegedActionException
      66: dup
      67: aload_3
      68: invokespecial #17                 // Method java/security/PrivilegedActionException."<init>":(Ljava/lang/Exception;)V
      71: athrow
      72: astore        4
      74: aload_2
      75: invokevirtual #23                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      78: pop
      79: aload_2
      80: invokevirtual #24                 // Method java/util/Stack.isEmpty:()Z
      83: ifeq          92
      86: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      89: invokevirtual #13                 // Method java/lang/ThreadLocal.remove:()V
      92: aload         4
      94: athrow
    Exception table:
       from    to  target type
          35    42    62   Class java/lang/Exception
          35    42    72   any
          62    74    72   any

  public static void checkPermission(org.infinispan.security.CachePermission) throws java.security.AccessControlException;
    Code:
       0: invokestatic  #6                  // Method isPrivileged:()Z
       3: ifne          17
       6: new           #25                 // class java/security/AccessControlException
       9: dup
      10: ldc           #26                 // String Call from unprivileged code
      12: aload_0
      13: invokespecial #27                 // Method java/security/AccessControlException."<init>":(Ljava/lang/String;Ljava/security/Permission;)V
      16: athrow
      17: return

  public static boolean isPrivileged();
    Code:
       0: getstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
       3: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #28                 // class java/lang/Boolean
       9: invokevirtual #29                 // Method java/lang/Boolean.booleanValue:()Z
      12: ireturn

  public static javax.security.auth.Subject getSubject();
    Code:
       0: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
       3: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: ifnull        25
       9: getstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      12: invokevirtual #19                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      15: checkcast     #20                 // class java/util/Stack
      18: invokevirtual #30                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      21: checkcast     #31                 // class javax/security/auth/Subject
      24: areturn
      25: invokestatic  #32                 // Method java/security/AccessController.getContext:()Ljava/security/AccessControlContext;
      28: astore_0
      29: aload_0
      30: invokestatic  #33                 // Method javax/security/auth/Subject.getSubject:(Ljava/security/AccessControlContext;)Ljavax/security/auth/Subject;
      33: areturn

  public static java.security.Principal getSubjectUserPrincipal(javax.security.auth.Subject);
    Code:
       0: aload_0
       1: ifnull        45
       4: aload_0
       5: invokevirtual #34                 // Method javax/security/auth/Subject.getPrincipals:()Ljava/util/Set;
       8: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_1
      14: aload_1
      15: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          45
      23: aload_1
      24: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #38                 // class java/security/Principal
      32: astore_2
      33: aload_2
      34: instanceof    #39                 // class java/security/acl/Group
      37: ifne          42
      40: aload_2
      41: areturn
      42: goto          14
      45: aconst_null
      46: areturn

  static java.lang.Class<?> getCallerClass(int);
    Code:
       0: getstatic     #40                 // Field hasGetCallerClass:Z
       3: ifeq          15
       6: iload_0
       7: getstatic     #41                 // Field callerOffset:I
      10: iadd
      11: invokestatic  #42                 // Method sun/reflect/Reflection.getCallerClass:(I)Ljava/lang/Class;
      14: areturn
      15: getstatic     #43                 // Field SECURITY_MANAGER:Lorg/infinispan/security/Security$LocalSecurityManager;
      18: invokevirtual #44                 // Method org/infinispan/security/Security$LocalSecurityManager.getClasses:()[Ljava/lang/Class;
      21: iload_0
      22: getstatic     #41                 // Field callerOffset:I
      25: iadd
      26: aaload
      27: areturn

  static {};
    Code:
       0: iconst_0
       1: istore_0
       2: iconst_0
       3: istore_1
       4: iconst_1
       5: invokestatic  #42                 // Method sun/reflect/Reflection.getCallerClass:(I)Ljava/lang/Class;
       8: ldc           #45                 // class org/infinispan/security/Security
      10: if_acmpeq     22
      13: iconst_2
      14: invokestatic  #42                 // Method sun/reflect/Reflection.getCallerClass:(I)Ljava/lang/Class;
      17: ldc           #45                 // class org/infinispan/security/Security
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore_0
      28: iconst_1
      29: invokestatic  #42                 // Method sun/reflect/Reflection.getCallerClass:(I)Ljava/lang/Class;
      32: ldc           #46                 // class sun/reflect/Reflection
      34: if_acmpne     41
      37: iconst_2
      38: goto          42
      41: iconst_1
      42: istore_1
      43: goto          47
      46: astore_2
      47: iload_0
      48: putstatic     #40                 // Field hasGetCallerClass:Z
      51: iload_1
      52: putstatic     #41                 // Field callerOffset:I
      55: getstatic     #40                 // Field hasGetCallerClass:Z
      58: ifne          75
      61: new           #48                 // class org/infinispan/security/Security$LocalSecurityManager
      64: dup
      65: aconst_null
      66: invokespecial #49                 // Method org/infinispan/security/Security$LocalSecurityManager."<init>":(Lorg/infinispan/security/Security$1;)V
      69: putstatic     #43                 // Field SECURITY_MANAGER:Lorg/infinispan/security/Security$LocalSecurityManager;
      72: goto          79
      75: aconst_null
      76: putstatic     #43                 // Field SECURITY_MANAGER:Lorg/infinispan/security/Security$LocalSecurityManager;
      79: new           #50                 // class org/infinispan/security/Security$1
      82: dup
      83: invokespecial #51                 // Method org/infinispan/security/Security$1."<init>":()V
      86: putstatic     #9                  // Field PRIVILEGED:Ljava/lang/ThreadLocal;
      89: new           #52                 // class java/lang/ThreadLocal
      92: dup
      93: invokespecial #53                 // Method java/lang/ThreadLocal."<init>":()V
      96: putstatic     #18                 // Field SUBJECT:Ljava/lang/ThreadLocal;
      99: return
    Exception table:
       from    to  target type
           4    43    46   Class java/lang/Throwable
}
