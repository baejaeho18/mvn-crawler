Compiled from "BlockingTaskAwareExecutorServiceImpl.java"
class org.infinispan.util.concurrent.BlockingTaskAwareExecutorServiceImpl$ControllerThread extends java.lang.Thread {
  private final java.util.concurrent.Semaphore semaphore;

  private volatile boolean interrupted;

  final org.infinispan.util.concurrent.BlockingTaskAwareExecutorServiceImpl this$0;

  public org.infinispan.util.concurrent.BlockingTaskAwareExecutorServiceImpl$ControllerThread(org.infinispan.util.concurrent.BlockingTaskAwareExecutorServiceImpl, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
      10: aload_0
      11: new           #3                  // class java/util/concurrent/Semaphore
      14: dup
      15: iconst_0
      16: invokespecial #4                  // Method java/util/concurrent/Semaphore."<init>":(I)V
      19: putfield      #5                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      22: return

  public void checkForReadyTask();
    Code:
       0: aload_0
       1: getfield      #5                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #6                  // Method java/util/concurrent/Semaphore.release:()V
       7: return

  public void interrupt();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field interrupted:Z
       5: aload_0
       6: invokespecial #8                  // Method java/lang/Thread.interrupt:()V
       9: aload_0
      10: getfield      #5                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      13: invokevirtual #6                  // Method java/util/concurrent/Semaphore.release:()V
      16: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #7                  // Field interrupted:Z
       4: ifne          161
       7: aload_0
       8: getfield      #5                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      11: invokevirtual #9                  // Method java/util/concurrent/Semaphore.acquire:()V
      14: goto          19
      17: astore_1
      18: return
      19: aload_0
      20: getfield      #5                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      23: invokevirtual #11                 // Method java/util/concurrent/Semaphore.drainPermits:()I
      26: pop
      27: aload_0
      28: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl;
      31: invokestatic  #12                 // Method org/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl.access$100:(Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl;)Ljava/util/Queue;
      34: invokeinterface #13,  1           // InterfaceMethod java/util/Queue.size:()I
      39: istore_1
      40: iload_1
      41: ifne          47
      44: goto          0
      47: new           #14                 // class java/util/ArrayDeque
      50: dup
      51: iload_1
      52: invokespecial #15                 // Method java/util/ArrayDeque."<init>":(I)V
      55: astore_2
      56: aload_0
      57: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl;
      60: invokestatic  #12                 // Method org/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl.access$100:(Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl;)Ljava/util/Queue;
      63: invokeinterface #16,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      68: astore_3
      69: aload_3
      70: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          114
      78: aload_3
      79: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #19                 // class org/infinispan/util/concurrent/BlockingRunnable
      87: astore        4
      89: aload         4
      91: invokeinterface #20,  1           // InterfaceMethod org/infinispan/util/concurrent/BlockingRunnable.isReady:()Z
      96: ifeq          111
      99: aload_3
     100: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.remove:()V
     105: aload_2
     106: aload         4
     108: invokevirtual #22                 // Method java/util/ArrayDeque.addLast:(Ljava/lang/Object;)V
     111: goto          69
     114: invokestatic  #23                 // Method org/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl.access$200:()Z
     117: ifeq          135
     120: invokestatic  #24                 // Method org/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl.access$300:()Lorg/infinispan/util/logging/Log;
     123: ldc           #25                 // String Tasks to be executed=%s, still pending=~%s
     125: aload_2
     126: invokevirtual #26                 // Method java/util/ArrayDeque.size:()I
     129: iload_1
     130: invokeinterface #27,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;II)V
     135: aload_2
     136: invokevirtual #28                 // Method java/util/ArrayDeque.pollFirst:()Ljava/lang/Object;
     139: checkcast     #19                 // class org/infinispan/util/concurrent/BlockingRunnable
     142: dup
     143: astore_3
     144: ifnull        158
     147: aload_0
     148: getfield      #1                  // Field this$0:Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl;
     151: aload_3
     152: invokestatic  #29                 // Method org/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl.access$400:(Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorServiceImpl;Lorg/infinispan/util/concurrent/BlockingRunnable;)V
     155: goto          135
     158: goto          0
     161: return
    Exception table:
       from    to  target type
           7    14    17   Class java/lang/InterruptedException
}
