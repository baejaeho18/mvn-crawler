Compiled from "FunctionalMapImpl.java"
public final class org.infinispan.functional.impl.FunctionalMapImpl<K, V> implements org.infinispan.commons.api.functional.FunctionalMap<K, V> {
  final org.infinispan.functional.impl.Params params;

  final org.infinispan.AdvancedCache<K, V> cache;

  public static <K, V> org.infinispan.functional.impl.FunctionalMapImpl<K, V> create(org.infinispan.functional.impl.Params, org.infinispan.AdvancedCache<K, V>);
    Code:
       0: new           #2                  // class org/infinispan/functional/impl/FunctionalMapImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #3                  // Method "<init>":(Lorg/infinispan/functional/impl/Params;Lorg/infinispan/AdvancedCache;)V
       9: areturn

  public static <K, V> org.infinispan.functional.impl.FunctionalMapImpl<K, V> create(org.infinispan.AdvancedCache<K, V>);
    Code:
       0: new           #2                  // class org/infinispan/functional/impl/FunctionalMapImpl
       3: dup
       4: invokestatic  #4                  // Method org/infinispan/functional/impl/Params.create:()Lorg/infinispan/functional/impl/Params;
       7: aload_0
       8: invokespecial #3                  // Method "<init>":(Lorg/infinispan/functional/impl/Params;Lorg/infinispan/AdvancedCache;)V
      11: areturn

  private org.infinispan.functional.impl.FunctionalMapImpl(org.infinispan.functional.impl.Params, org.infinispan.AdvancedCache<K, V>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field params:Lorg/infinispan/functional/impl/Params;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
      14: return

  org.infinispan.context.InvocationContextFactory invCtxFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #8,  1            // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
       9: ldc           #9                  // class org/infinispan/context/InvocationContextFactory
      11: invokevirtual #10                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;)Ljava/lang/Object;
      14: checkcast     #9                  // class org/infinispan/context/InvocationContextFactory
      17: areturn

  org.infinispan.commands.CommandsFactory cmdFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #8,  1            // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
       9: ldc           #11                 // class org/infinispan/commands/CommandsFactory
      11: invokevirtual #10                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;)Ljava/lang/Object;
      14: checkcast     #11                 // class org/infinispan/commands/CommandsFactory
      17: areturn

  org.infinispan.interceptors.InterceptorChain chain();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #8,  1            // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
       9: ldc           #12                 // class org/infinispan/interceptors/InterceptorChain
      11: invokevirtual #10                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;)Ljava/lang/Object;
      14: checkcast     #12                 // class org/infinispan/interceptors/InterceptorChain
      17: areturn

  java.util.concurrent.ExecutorService asyncExec();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #8,  1            // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
       9: ldc           #13                 // class java/util/concurrent/ExecutorService
      11: ldc           #14                 // String org.infinispan.executors.async
      13: invokevirtual #15                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #13                 // class java/util/concurrent/ExecutorService
      19: areturn

  org.infinispan.functional.impl.FunctionalNotifier<K, V> notifier();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #8,  1            // InterfaceMethod org/infinispan/AdvancedCache.getComponentRegistry:()Lorg/infinispan/factories/ComponentRegistry;
       9: ldc           #16                 // class org/infinispan/functional/impl/FunctionalNotifier
      11: invokevirtual #10                 // Method org/infinispan/factories/ComponentRegistry.getComponent:(Ljava/lang/Class;)Ljava/lang/Object;
      14: checkcast     #16                 // class org/infinispan/functional/impl/FunctionalNotifier
      17: areturn

  public org.infinispan.functional.impl.FunctionalMapImpl<K, V> withParams(org.infinispan.commons.api.functional.Param<?>...);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_0
      10: areturn
      11: aload_0
      12: getfield      #6                  // Field params:Lorg/infinispan/functional/impl/Params;
      15: aload_1
      16: invokevirtual #17                 // Method org/infinispan/functional/impl/Params.containsAll:([Lorg/infinispan/commons/api/functional/Param;)Z
      19: ifeq          24
      22: aload_0
      23: areturn
      24: aload_0
      25: getfield      #6                  // Field params:Lorg/infinispan/functional/impl/Params;
      28: aload_1
      29: invokevirtual #18                 // Method org/infinispan/functional/impl/Params.addAll:([Lorg/infinispan/commons/api/functional/Param;)Lorg/infinispan/functional/impl/Params;
      32: aload_0
      33: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
      36: invokestatic  #19                 // Method create:(Lorg/infinispan/functional/impl/Params;Lorg/infinispan/AdvancedCache;)Lorg/infinispan/functional/impl/FunctionalMapImpl;
      39: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #20,  1           // InterfaceMethod org/infinispan/AdvancedCache.getName:()Ljava/lang/String;
       9: areturn

  public org.infinispan.commons.api.functional.Status getStatus();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #21,  1           // InterfaceMethod org/infinispan/AdvancedCache.getStatus:()Lorg/infinispan/lifecycle/ComponentStatus;
       9: invokestatic  #22                 // Method toStatus:(Lorg/infinispan/lifecycle/ComponentStatus;)Lorg/infinispan/commons/api/functional/Status;
      12: areturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Lorg/infinispan/AdvancedCache;
       4: invokeinterface #23,  1           // InterfaceMethod org/infinispan/AdvancedCache.stop:()V
       9: return

  private static org.infinispan.commons.api.functional.Status toStatus(org.infinispan.lifecycle.ComponentStatus);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method org/infinispan/lifecycle/ComponentStatus.name:()Ljava/lang/String;
       4: invokestatic  #25                 // Method org/infinispan/commons/api/functional/Status.valueOf:(Ljava/lang/String;)Lorg/infinispan/commons/api/functional/Status;
       7: areturn

  public org.infinispan.commons.api.functional.FunctionalMap withParams(org.infinispan.commons.api.functional.Param[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method withParams:([Lorg/infinispan/commons/api/functional/Param;)Lorg/infinispan/functional/impl/FunctionalMapImpl;
       5: areturn
}
