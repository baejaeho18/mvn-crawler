Compiled from "ClusterCacheStatus.java"
public class org.infinispan.topology.ClusterCacheStatus implements org.infinispan.partitionhandling.impl.AvailabilityStrategyContext {
  private static final org.infinispan.util.logging.Log log;

  private static boolean trace;

  private final java.lang.String cacheName;

  private final org.infinispan.partitionhandling.impl.AvailabilityStrategy availabilityStrategy;

  private final org.infinispan.topology.ClusterTopologyManager clusterTopologyManager;

  private org.infinispan.remoting.transport.Transport transport;

  private volatile org.infinispan.topology.CacheJoinInfo joinInfo;

  private volatile java.util.List<org.infinispan.remoting.transport.Address> expectedMembers;

  private volatile java.util.Map<org.infinispan.remoting.transport.Address, java.lang.Float> capacityFactors;

  private volatile java.util.List<org.infinispan.remoting.transport.Address> joiners;

  private volatile org.infinispan.topology.CacheTopology currentTopology;

  private volatile org.infinispan.topology.CacheTopology stableTopology;

  private volatile org.infinispan.partitionhandling.AvailabilityMode availabilityMode;

  private volatile java.util.List<org.infinispan.remoting.transport.Address> queuedRebalanceMembers;

  private volatile boolean rebalancingEnabled;

  private volatile org.infinispan.topology.RebalanceConfirmationCollector rebalanceConfirmationCollector;

  public org.infinispan.topology.ClusterCacheStatus(java.lang.String, org.infinispan.partitionhandling.impl.AvailabilityStrategy, org.infinispan.topology.ClusterTopologyManager, org.infinispan.remoting.transport.Transport);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/infinispan/partitionhandling/AvailabilityMode.AVAILABLE:Lorg/infinispan/partitionhandling/AvailabilityMode;
       8: putfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      11: aload_0
      12: iconst_1
      13: putfield      #4                  // Field rebalancingEnabled:Z
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field cacheName:Ljava/lang/String;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field availabilityStrategy:Lorg/infinispan/partitionhandling/impl/AvailabilityStrategy;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
      31: aload_0
      32: aload         4
      34: putfield      #8                  // Field transport:Lorg/infinispan/remoting/transport/Transport;
      37: aload_0
      38: aconst_null
      39: putfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      42: aload_0
      43: aconst_null
      44: putfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      47: aload_0
      48: invokestatic  #11                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
      51: putfield      #12                 // Field expectedMembers:Ljava/util/List;
      54: aload_0
      55: invokestatic  #13                 // Method org/infinispan/commons/util/InfinispanCollections.emptyMap:()Ljava/util/Map;
      58: putfield      #14                 // Field capacityFactors:Ljava/util/Map;
      61: aload_0
      62: invokestatic  #11                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
      65: putfield      #15                 // Field joiners:Ljava/util/List;
      68: getstatic     #16                 // Field trace:Z
      71: ifeq          85
      74: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      77: ldc           #18                 // String Cache %s initialized
      79: aload_1
      80: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      85: return

  public org.infinispan.topology.CacheJoinInfo getJoinInfo();
    Code:
       0: aload_0
       1: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
       4: areturn

  public java.util.List<org.infinispan.remoting.transport.Address> getExpectedMembers();
    Code:
       0: aload_0
       1: getfield      #12                 // Field expectedMembers:Ljava/util/List;
       4: areturn

  public void queueRebalance(java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_1
       5: ifnull        41
       8: aload_1
       9: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifne          41
      17: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      20: ldc           #22                 // String Queueing rebalance for cache %s with members %s
      22: aload_0
      23: getfield      #5                  // Field cacheName:Ljava/lang/String;
      26: aload_1
      27: invokeinterface #23,  4           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      32: aload_0
      33: aload_1
      34: putfield      #24                 // Field queuedRebalanceMembers:Ljava/util/List;
      37: aload_0
      38: invokevirtual #25                 // Method startQueuedRebalance:()V
      41: aload_2
      42: monitorexit
      43: goto          51
      46: astore_3
      47: aload_2
      48: monitorexit
      49: aload_3
      50: athrow
      51: return
    Exception table:
       from    to  target type
           4    43    46   any
          46    49    46   any

  public boolean isTotalOrder();
    Code:
       0: aload_0
       1: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
       4: invokevirtual #26                 // Method org/infinispan/topology/CacheJoinInfo.isTotalOrder:()Z
       7: ireturn

  public boolean isDistributed();
    Code:
       0: aload_0
       1: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
       4: invokevirtual #27                 // Method org/infinispan/topology/CacheJoinInfo.isDistributed:()Z
       7: ireturn

  public java.util.Map<org.infinispan.remoting.transport.Address, java.lang.Float> getCapacityFactors();
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacityFactors:Ljava/util/Map;
       4: areturn

  public org.infinispan.topology.CacheTopology getCurrentTopology();
    Code:
       0: aload_0
       1: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
       4: areturn

  public org.infinispan.topology.CacheTopology getStableTopology();
    Code:
       0: aload_0
       1: getfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
       4: areturn

  public org.infinispan.partitionhandling.AvailabilityMode getAvailabilityMode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       4: areturn

  public void updateAvailabilityMode(java.util.List<org.infinispan.remoting.transport.Address>, org.infinispan.partitionhandling.AvailabilityMode, boolean);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: aload_2
       7: invokespecial #28                 // Method setAvailabilityMode:(Lorg/infinispan/partitionhandling/AvailabilityMode;)Z
      10: istore        5
      12: iload         5
      14: ifne          33
      17: aload_1
      18: aload_0
      19: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      22: invokevirtual #29                 // Method org/infinispan/topology/CacheTopology.getActualMembers:()Ljava/util/List;
      25: invokeinterface #30,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      30: ifne          140
      33: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      36: ldc           #31                 // String Updating availability for cache %s to %s
      38: aload_0
      39: getfield      #5                  // Field cacheName:Ljava/lang/String;
      42: aload_2
      43: invokeinterface #23,  4           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      52: invokevirtual #32                 // Method org/infinispan/topology/CacheTopology.getPendingCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      55: astore        6
      57: iload_3
      58: ifeq          75
      61: aconst_null
      62: astore        6
      64: aload_0
      65: invokevirtual #33                 // Method isRebalanceInProgress:()Z
      68: ifeq          75
      71: aload_0
      72: invokespecial #34                 // Method removeRebalanceConfirmationCollector:()V
      75: new           #35                 // class org/infinispan/topology/CacheTopology
      78: dup
      79: aload_0
      80: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      83: invokevirtual #36                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      86: iconst_1
      87: iadd
      88: aload_0
      89: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      92: invokevirtual #37                 // Method org/infinispan/topology/CacheTopology.getRebalanceId:()I
      95: aload_0
      96: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      99: invokevirtual #38                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
     102: aload         6
     104: aload_1
     105: invokespecial #39                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
     108: astore        7
     110: aload_0
     111: aload         7
     113: invokespecial #40                 // Method setCurrentTopology:(Lorg/infinispan/topology/CacheTopology;)V
     116: aload_0
     117: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
     120: aload_0
     121: getfield      #5                  // Field cacheName:Ljava/lang/String;
     124: aload         7
     126: aload_2
     127: aload_0
     128: invokevirtual #41                 // Method isTotalOrder:()Z
     131: aload_0
     132: invokevirtual #42                 // Method isDistributed:()Z
     135: invokeinterface #43,  6           // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastTopologyUpdate:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;ZZ)V
     140: aload         4
     142: monitorexit
     143: goto          154
     146: astore        8
     148: aload         4
     150: monitorexit
     151: aload         8
     153: athrow
     154: return
    Exception table:
       from    to  target type
           5   143   146   any
         146   151   146   any

  public void updateTopologiesAfterMerge(org.infinispan.topology.CacheTopology, org.infinispan.topology.CacheTopology, org.infinispan.partitionhandling.AvailabilityMode);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
       8: ldc           #44                 // String Updating topologies after merge for cache %s, current topology = %s, stable topology = %s, availability mode = %s
      10: iconst_4
      11: anewarray     #45                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #5                  // Field cacheName:Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_1
      24: aastore
      25: dup
      26: iconst_2
      27: aload_2
      28: aastore
      29: dup
      30: iconst_3
      31: aload_3
      32: aastore
      33: invokeinterface #46,  3           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: aload_0
      39: aload_1
      40: putfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      43: aload_0
      44: aload_2
      45: putfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      48: aload_0
      49: aload_3
      50: putfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      53: aload_1
      54: ifnull        80
      57: aload_0
      58: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
      61: aload_0
      62: getfield      #5                  // Field cacheName:Ljava/lang/String;
      65: aload_1
      66: aload_3
      67: aload_0
      68: invokevirtual #41                 // Method isTotalOrder:()Z
      71: aload_0
      72: invokevirtual #42                 // Method isDistributed:()Z
      75: invokeinterface #43,  6           // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastTopologyUpdate:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;ZZ)V
      80: aload_2
      81: ifnull        106
      84: aload_0
      85: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
      88: aload_0
      89: getfield      #5                  // Field cacheName:Ljava/lang/String;
      92: aload_2
      93: aload_0
      94: invokevirtual #41                 // Method isTotalOrder:()Z
      97: aload_0
      98: invokevirtual #42                 // Method isDistributed:()Z
     101: invokeinterface #47,  5           // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastStableTopologyUpdate:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;ZZ)V
     106: aload         4
     108: monitorexit
     109: goto          120
     112: astore        5
     114: aload         4
     116: monitorexit
     117: aload         5
     119: athrow
     120: return
    Exception table:
       from    to  target type
           5   109   112   any
         112   117   112   any

  private boolean addMember(org.infinispan.remoting.transport.Address, org.infinispan.topology.CacheJoinInfo);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #12                 // Field expectedMembers:Ljava/util/List;
       8: aload_1
       9: invokeinterface #48,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_0
      18: aload_3
      19: monitorexit
      20: ireturn
      21: aload_0
      22: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
      25: ifnonnull     33
      28: aload_0
      29: aload_2
      30: putfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
      33: new           #49                 // class java/util/HashMap
      36: dup
      37: aload_0
      38: getfield      #14                 // Field capacityFactors:Ljava/util/Map;
      41: invokespecial #50                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      44: astore        4
      46: aload         4
      48: aload_1
      49: aload_2
      50: invokevirtual #51                 // Method org/infinispan/topology/CacheJoinInfo.getCapacityFactor:()F
      53: invokestatic  #52                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      56: invokevirtual #53                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: aload         4
      63: invokestatic  #54                 // Method org/infinispan/commons/util/Immutables.immutableMapWrap:(Ljava/util/Map;)Ljava/util/Map;
      66: putfield      #14                 // Field capacityFactors:Ljava/util/Map;
      69: aload_0
      70: aload_0
      71: aload_0
      72: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      75: aload_1
      76: invokespecial #55                 // Method immutableAdd:(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
      79: putfield      #12                 // Field expectedMembers:Ljava/util/List;
      82: aload_0
      83: aload_0
      84: aload_0
      85: getfield      #15                 // Field joiners:Ljava/util/List;
      88: aload_1
      89: invokespecial #55                 // Method immutableAdd:(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
      92: putfield      #15                 // Field joiners:Ljava/util/List;
      95: getstatic     #16                 // Field trace:Z
      98: ifeq          140
     101: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     104: ldc           #56                 // String Added joiner %s to cache %s: members = %s, joiners = %s
     106: iconst_4
     107: anewarray     #45                 // class java/lang/Object
     110: dup
     111: iconst_0
     112: aload_1
     113: aastore
     114: dup
     115: iconst_1
     116: aload_0
     117: getfield      #5                  // Field cacheName:Ljava/lang/String;
     120: aastore
     121: dup
     122: iconst_2
     123: aload_0
     124: getfield      #12                 // Field expectedMembers:Ljava/util/List;
     127: aastore
     128: dup
     129: iconst_3
     130: aload_0
     131: getfield      #15                 // Field joiners:Ljava/util/List;
     134: aastore
     135: invokeinterface #57,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
     140: iconst_1
     141: aload_3
     142: monitorexit
     143: ireturn
     144: astore        5
     146: aload_3
     147: monitorexit
     148: aload         5
     150: athrow
    Exception table:
       from    to  target type
           4    20   144   any
          21   143   144   any
         144   148   144   any

  private boolean removeMember(org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #12                 // Field expectedMembers:Ljava/util/List;
       8: aload_1
       9: invokeinterface #48,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      14: ifne          46
      17: getstatic     #16                 // Field trace:Z
      20: ifeq          42
      23: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      26: ldc           #58                 // String Trying to remove node %s from cache %s, but it is not a member: members = %s
      28: aload_1
      29: aload_0
      30: getfield      #5                  // Field cacheName:Ljava/lang/String;
      33: aload_0
      34: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      37: invokeinterface #59,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      42: iconst_0
      43: aload_2
      44: monitorexit
      45: ireturn
      46: aload_0
      47: aload_0
      48: aload_0
      49: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      52: aload_1
      53: invokespecial #60                 // Method immutableRemove:(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
      56: putfield      #12                 // Field expectedMembers:Ljava/util/List;
      59: new           #49                 // class java/util/HashMap
      62: dup
      63: aload_0
      64: getfield      #14                 // Field capacityFactors:Ljava/util/Map;
      67: invokespecial #50                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      70: astore_3
      71: aload_3
      72: aload_1
      73: invokevirtual #61                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_0
      78: aload_3
      79: invokestatic  #54                 // Method org/infinispan/commons/util/Immutables.immutableMapWrap:(Ljava/util/Map;)Ljava/util/Map;
      82: putfield      #14                 // Field capacityFactors:Ljava/util/Map;
      85: aload_0
      86: aload_0
      87: aload_0
      88: getfield      #15                 // Field joiners:Ljava/util/List;
      91: aload_1
      92: invokespecial #60                 // Method immutableRemove:(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
      95: putfield      #15                 // Field joiners:Ljava/util/List;
      98: getstatic     #16                 // Field trace:Z
     101: ifeq          143
     104: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     107: ldc           #62                 // String Removed node %s from cache %s: members = %s, joiners = %s
     109: iconst_4
     110: anewarray     #45                 // class java/lang/Object
     113: dup
     114: iconst_0
     115: aload_1
     116: aastore
     117: dup
     118: iconst_1
     119: aload_0
     120: getfield      #5                  // Field cacheName:Ljava/lang/String;
     123: aastore
     124: dup
     125: iconst_2
     126: aload_0
     127: getfield      #12                 // Field expectedMembers:Ljava/util/List;
     130: aastore
     131: dup
     132: iconst_3
     133: aload_0
     134: getfield      #15                 // Field joiners:Ljava/util/List;
     137: aastore
     138: invokeinterface #57,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
     143: iconst_1
     144: aload_2
     145: monitorexit
     146: ireturn
     147: astore        4
     149: aload_2
     150: monitorexit
     151: aload         4
     153: athrow
    Exception table:
       from    to  target type
           4    45   147   any
          46   146   147   any
         147   151   147   any

  private boolean retainMembers(java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_1
       5: aload_0
       6: getfield      #12                 // Field expectedMembers:Ljava/util/List;
       9: invokeinterface #63,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
      14: ifeq          46
      17: getstatic     #16                 // Field trace:Z
      20: ifeq          42
      23: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      26: ldc           #64                 // String Cluster members updated for cache %s, no abrupt leavers detected: cache members = %s. Existing members = %s
      28: aload_0
      29: getfield      #5                  // Field cacheName:Ljava/lang/String;
      32: aload_1
      33: aload_0
      34: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      37: invokeinterface #59,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      42: iconst_0
      43: aload_2
      44: monitorexit
      45: ireturn
      46: aload_0
      47: aload_0
      48: aload_0
      49: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      52: aload_1
      53: invokespecial #65                 // Method immutableRetainAll:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
      56: putfield      #12                 // Field expectedMembers:Ljava/util/List;
      59: aload_0
      60: aload_0
      61: aload_0
      62: getfield      #15                 // Field joiners:Ljava/util/List;
      65: aload_1
      66: invokespecial #65                 // Method immutableRetainAll:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
      69: putfield      #15                 // Field joiners:Ljava/util/List;
      72: getstatic     #16                 // Field trace:Z
      75: ifeq          100
      78: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      81: ldc           #66                 // String Cluster members updated for cache %s: members = %s, joiners = %s
      83: aload_0
      84: getfield      #5                  // Field cacheName:Ljava/lang/String;
      87: aload_0
      88: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      91: aload_0
      92: getfield      #15                 // Field joiners:Ljava/util/List;
      95: invokeinterface #59,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     100: iconst_1
     101: aload_2
     102: monitorexit
     103: ireturn
     104: astore_3
     105: aload_2
     106: monitorexit
     107: aload_3
     108: athrow
    Exception table:
       from    to  target type
           4    45   104   any
          46   103   104   any
         104   107   104   any

  private void setCurrentTopology(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
       9: aload_1
      10: ifnull        34
      13: aload_0
      14: aload_0
      15: aload_0
      16: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      19: aload_1
      20: invokevirtual #38                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      23: invokeinterface #67,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      28: invokespecial #68                 // Method immutableRemoveAll:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
      31: putfield      #15                 // Field joiners:Ljava/util/List;
      34: getstatic     #16                 // Field trace:Z
      37: ifeq          82
      40: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      43: ldc           #69                 // String Cache %s topology updated: %s, members = %s, joiners = %s
      45: iconst_4
      46: anewarray     #45                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_0
      52: getfield      #5                  // Field cacheName:Ljava/lang/String;
      55: aastore
      56: dup
      57: iconst_1
      58: aload_0
      59: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      62: aastore
      63: dup
      64: iconst_2
      65: aload_0
      66: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      69: aastore
      70: dup
      71: iconst_3
      72: aload_0
      73: getfield      #15                 // Field joiners:Ljava/util/List;
      76: aastore
      77: invokeinterface #57,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      82: aload_1
      83: ifnull        90
      86: aload_1
      87: invokevirtual #70                 // Method org/infinispan/topology/CacheTopology.logRoutingTableInformation:()V
      90: aload_2
      91: monitorexit
      92: goto          100
      95: astore_3
      96: aload_2
      97: monitorexit
      98: aload_3
      99: athrow
     100: return
    Exception table:
       from    to  target type
           4    92    95   any
          95    98    95   any

  private void setStableTopology(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aload_1
       6: putfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
       9: getstatic     #16                 // Field trace:Z
      12: ifeq          54
      15: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      18: ldc           #71                 // String Cache %s stable topology updated: members = %s, joiners = %s, topology = %s
      20: iconst_4
      21: anewarray     #45                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: getfield      #5                  // Field cacheName:Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      37: aastore
      38: dup
      39: iconst_2
      40: aload_0
      41: getfield      #15                 // Field joiners:Ljava/util/List;
      44: aastore
      45: dup
      46: iconst_3
      47: aload_1
      48: aastore
      49: invokeinterface #57,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      54: aload_2
      55: monitorexit
      56: goto          64
      59: astore_3
      60: aload_2
      61: monitorexit
      62: aload_3
      63: athrow
      64: return
    Exception table:
       from    to  target type
           4    56    59   any
          59    62    59   any

  private boolean needConsistentHashUpdate();
    Code:
       0: aload_0
       1: getfield      #12                 // Field expectedMembers:Ljava/util/List;
       4: aload_0
       5: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
       8: invokevirtual #72                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      11: invokeinterface #30,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private java.util.List<org.infinispan.remoting.transport.Address> pruneInvalidMembers(java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #12                 // Field expectedMembers:Ljava/util/List;
       6: invokespecial #65                 // Method immutableRetainAll:(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
       9: areturn

  public boolean isRebalanceInProgress();
    Code:
       0: aload_0
       1: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.infinispan.topology.RebalancingStatus getRebalancingStatus();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isRebalanceEnabled:()Z
       4: ifne          11
       7: getstatic     #75                 // Field org/infinispan/topology/RebalancingStatus.SUSPENDED:Lorg/infinispan/topology/RebalancingStatus;
      10: areturn
      11: aload_0
      12: invokevirtual #33                 // Method isRebalanceInProgress:()Z
      15: ifeq          22
      18: getstatic     #76                 // Field org/infinispan/topology/RebalancingStatus.IN_PROGRESS:Lorg/infinispan/topology/RebalancingStatus;
      21: areturn
      22: aload_0
      23: getfield      #24                 // Field queuedRebalanceMembers:Ljava/util/List;
      26: ifnull        33
      29: getstatic     #77                 // Field org/infinispan/topology/RebalancingStatus.PENDING:Lorg/infinispan/topology/RebalancingStatus;
      32: areturn
      33: getstatic     #78                 // Field org/infinispan/topology/RebalancingStatus.COMPLETE:Lorg/infinispan/topology/RebalancingStatus;
      36: areturn

  private boolean initRebalanceConfirmationCollector(org.infinispan.topology.CacheTopology);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
       8: ifnull        15
      11: iconst_0
      12: aload_2
      13: monitorexit
      14: ireturn
      15: aload_0
      16: new           #79                 // class org/infinispan/topology/RebalanceConfirmationCollector
      19: dup
      20: aload_0
      21: getfield      #5                  // Field cacheName:Ljava/lang/String;
      24: aload_1
      25: invokevirtual #36                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      28: aload_1
      29: invokevirtual #72                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      32: invokespecial #80                 // Method org/infinispan/topology/RebalanceConfirmationCollector."<init>":(Ljava/lang/String;ILjava/util/Collection;)V
      35: putfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
      38: iconst_1
      39: aload_2
      40: monitorexit
      41: ireturn
      42: astore_3
      43: aload_2
      44: monitorexit
      45: aload_3
      46: athrow
    Exception table:
       from    to  target type
           4    14    42   any
          15    41    42   any
          42    45    42   any

  public void doConfirmRebalance(org.infinispan.remoting.transport.Address, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
       8: ifnonnull     39
      11: new           #81                 // class org/infinispan/commons/CacheException
      14: dup
      15: ldc           #82                 // String Received invalid rebalance confirmation from %s for cache %s, we don\'t have a rebalance in progress
      17: iconst_2
      18: anewarray     #45                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: dup
      26: iconst_1
      27: aload_0
      28: getfield      #5                  // Field cacheName:Ljava/lang/String;
      31: aastore
      32: invokestatic  #83                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: invokespecial #84                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
      43: aload_1
      44: iload_2
      45: invokevirtual #85                 // Method org/infinispan/topology/RebalanceConfirmationCollector.confirmRebalance:(Lorg/infinispan/remoting/transport/Address;I)Z
      48: istore        4
      50: iload         4
      52: ifeq          59
      55: aload_0
      56: invokespecial #86                 // Method endRebalance:()V
      59: aload_3
      60: monitorexit
      61: goto          71
      64: astore        5
      66: aload_3
      67: monitorexit
      68: aload         5
      70: athrow
      71: return
    Exception table:
       from    to  target type
           4    61    64   any
          64    68    64   any

  private boolean updateRebalanceMembers();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
       8: ifnonnull     15
      11: iconst_0
      12: aload_1
      13: monitorexit
      14: ireturn
      15: aload_0
      16: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
      19: aload_0
      20: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      23: invokevirtual #72                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      26: invokevirtual #87                 // Method org/infinispan/topology/RebalanceConfirmationCollector.updateMembers:(Ljava/util/Collection;)Z
      29: aload_1
      30: monitorexit
      31: ireturn
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           4    14    32   any
          15    31    32   any
          32    35    32   any

  public void doHandleClusterView() throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
       8: ifnonnull     14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: getfield      #8                  // Field transport:Lorg/infinispan/remoting/transport/Transport;
      18: invokeinterface #88,  1           // InterfaceMethod org/infinispan/remoting/transport/Transport.getMembers:()Ljava/util/List;
      23: astore_2
      24: aload_0
      25: aload_2
      26: invokespecial #89                 // Method retainMembers:(Ljava/util/List;)Z
      29: istore_3
      30: aload_0
      31: getfield      #6                  // Field availabilityStrategy:Lorg/infinispan/partitionhandling/impl/AvailabilityStrategy;
      34: aload_0
      35: aload_2
      36: invokeinterface #90,  3           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategy.onClusterViewChange:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Ljava/util/List;)V
      41: iload_3
      42: ifeq          60
      45: aload_0
      46: invokespecial #91                 // Method updateRebalanceMembers:()Z
      49: istore        4
      51: iload         4
      53: ifeq          60
      56: aload_0
      57: invokespecial #86                 // Method endRebalance:()V
      60: aload_1
      61: monitorexit
      62: goto          72
      65: astore        5
      67: aload_1
      68: monitorexit
      69: aload         5
      71: athrow
      72: return
    Exception table:
       from    to  target type
           4    13    65   any
          14    62    65   any
          65    69    65   any

  private void endRebalance();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokespecial #34                 // Method removeRebalanceConfirmationCollector:()V
       8: aload_0
       9: invokevirtual #92                 // Method getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
      12: astore_2
      13: aload_2
      14: ifnonnull     34
      17: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      20: ldc           #93                 // String Rebalance finished because there are no more members in cache %s
      22: aload_0
      23: getfield      #5                  // Field cacheName:Ljava/lang/String;
      26: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_1
      32: monitorexit
      33: return
      34: aload_2
      35: invokevirtual #36                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      38: istore_3
      39: getstatic     #94                 // Field org/infinispan/util/logging/LogFactory.CLUSTER:Lorg/infinispan/util/logging/Log;
      42: aload_0
      43: getfield      #5                  // Field cacheName:Ljava/lang/String;
      46: iload_3
      47: invokeinterface #95,  3           // InterfaceMethod org/infinispan/util/logging/Log.clusterWideRebalanceCompleted:(Ljava/lang/String;I)V
      52: iload_3
      53: iconst_1
      54: iadd
      55: istore        4
      57: aload_2
      58: invokevirtual #32                 // Method org/infinispan/topology/CacheTopology.getPendingCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      61: astore        5
      63: new           #35                 // class org/infinispan/topology/CacheTopology
      66: dup
      67: iload         4
      69: aload_2
      70: invokevirtual #37                 // Method org/infinispan/topology/CacheTopology.getRebalanceId:()I
      73: aload         5
      75: aconst_null
      76: aload         5
      78: invokeinterface #67,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      83: invokespecial #39                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
      86: astore        6
      88: aload_0
      89: aload         6
      91: invokespecial #40                 // Method setCurrentTopology:(Lorg/infinispan/topology/CacheTopology;)V
      94: aload_0
      95: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
      98: aload_0
      99: getfield      #5                  // Field cacheName:Ljava/lang/String;
     102: aload         6
     104: aload_0
     105: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
     108: aload_0
     109: invokevirtual #41                 // Method isTotalOrder:()Z
     112: aload_0
     113: invokevirtual #42                 // Method isDistributed:()Z
     116: invokeinterface #43,  6           // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastTopologyUpdate:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;ZZ)V
     121: aload_0
     122: getfield      #6                  // Field availabilityStrategy:Lorg/infinispan/partitionhandling/impl/AvailabilityStrategy;
     125: aload_0
     126: invokeinterface #96,  2           // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategy.onRebalanceEnd:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;)V
     131: aload_0
     132: invokevirtual #25                 // Method startQueuedRebalance:()V
     135: aload_1
     136: monitorexit
     137: goto          147
     140: astore        7
     142: aload_1
     143: monitorexit
     144: aload         7
     146: athrow
     147: return
    Exception table:
       from    to  target type
           4    33   140   any
          34   137   140   any
         140   144   140   any

  private void removeRebalanceConfirmationCollector();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
       8: ifnonnull     21
      11: new           #97                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #98                 // String Can\'t end rebalance, there is no rebalance in progress
      17: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aconst_null
      23: putfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: return
    Exception table:
       from    to  target type
           4    28    31   any
          31    34    31   any

  public void updateCurrentTopology(java.util.List<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
       8: ifnonnull     16
      11: aload_0
      12: invokevirtual #100                // Method createInitialCacheTopology:()Lorg/infinispan/topology/CacheTopology;
      15: pop
      16: aload_0
      17: invokevirtual #101                // Method getJoinInfo:()Lorg/infinispan/topology/CacheJoinInfo;
      20: invokevirtual #102                // Method org/infinispan/topology/CacheJoinInfo.getConsistentHashFactory:()Lorg/infinispan/distribution/ch/ConsistentHashFactory;
      23: astore_3
      24: aload_0
      25: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      28: invokevirtual #36                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      31: istore        4
      33: aload_0
      34: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      37: invokevirtual #37                 // Method org/infinispan/topology/CacheTopology.getRebalanceId:()I
      40: istore        5
      42: aload_0
      43: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      46: invokevirtual #38                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      49: astore        6
      51: aload_0
      52: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      55: invokevirtual #32                 // Method org/infinispan/topology/CacheTopology.getPendingCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
      58: astore        7
      60: aload_0
      61: invokespecial #103                // Method needConsistentHashUpdate:()Z
      64: ifne          88
      67: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      70: ldc           #104                // String Cache %s members list was updated, but the cache topology doesn\'t need to change: %s
      72: aload_0
      73: getfield      #5                  // Field cacheName:Ljava/lang/String;
      76: aload_0
      77: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      80: invokeinterface #105,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      85: aload_2
      86: monitorexit
      87: return
      88: aload_1
      89: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      94: ifeq          135
      97: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     100: ldc           #106                // String Cache %s no longer has any members, removing topology
     102: aload_0
     103: getfield      #5                  // Field cacheName:Ljava/lang/String;
     106: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     111: aload_0
     112: aconst_null
     113: invokespecial #40                 // Method setCurrentTopology:(Lorg/infinispan/topology/CacheTopology;)V
     116: aload_0
     117: aconst_null
     118: invokespecial #107                // Method setStableTopology:(Lorg/infinispan/topology/CacheTopology;)V
     121: aload_0
     122: invokevirtual #33                 // Method isRebalanceInProgress:()Z
     125: ifeq          132
     128: aload_0
     129: invokespecial #34                 // Method removeRebalanceConfirmationCollector:()V
     132: aload_2
     133: monitorexit
     134: return
     135: aload_0
     136: aload         6
     138: invokeinterface #67,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
     143: invokespecial #108                // Method pruneInvalidMembers:(Ljava/util/List;)Ljava/util/List;
     146: astore        8
     148: aconst_null
     149: astore        11
     151: aload         8
     153: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     158: ifeq          240
     161: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     164: ldc           #109                // String All current members left, re-initializing status for cache %s
     166: aload_0
     167: getfield      #5                  // Field cacheName:Ljava/lang/String;
     170: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     175: aload_0
     176: invokevirtual #33                 // Method isRebalanceInProgress:()Z
     179: ifeq          186
     182: aload_0
     183: invokespecial #34                 // Method removeRebalanceConfirmationCollector:()V
     186: aload_0
     187: invokevirtual #110                // Method getExpectedMembers:()Ljava/util/List;
     190: astore        8
     192: aload         8
     194: astore        10
     196: aload_0
     197: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
     200: invokevirtual #102                // Method org/infinispan/topology/CacheJoinInfo.getConsistentHashFactory:()Lorg/infinispan/distribution/ch/ConsistentHashFactory;
     203: aload_0
     204: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
     207: invokevirtual #111                // Method org/infinispan/topology/CacheJoinInfo.getHashFunction:()Lorg/infinispan/commons/hash/Hash;
     210: aload_0
     211: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
     214: invokevirtual #112                // Method org/infinispan/topology/CacheJoinInfo.getNumOwners:()I
     217: aload_0
     218: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
     221: invokevirtual #113                // Method org/infinispan/topology/CacheJoinInfo.getNumSegments:()I
     224: aload         8
     226: aload_0
     227: invokevirtual #114                // Method getCapacityFactors:()Ljava/util/Map;
     230: invokeinterface #115,  6          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHashFactory.create:(Lorg/infinispan/commons/hash/Hash;IILjava/util/List;Ljava/util/Map;)Lorg/infinispan/distribution/ch/ConsistentHash;
     235: astore        9
     237: goto          298
     240: aload_3
     241: aload         6
     243: aload         8
     245: aload_0
     246: invokevirtual #114                // Method getCapacityFactors:()Ljava/util/Map;
     249: invokeinterface #116,  4          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHashFactory.updateMembers:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;Ljava/util/Map;)Lorg/infinispan/distribution/ch/ConsistentHash;
     254: astore        9
     256: aload         8
     258: astore        10
     260: aload         7
     262: ifnull        298
     265: aload_0
     266: aload         7
     268: invokeinterface #67,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
     273: invokespecial #108                // Method pruneInvalidMembers:(Ljava/util/List;)Ljava/util/List;
     276: astore        12
     278: aload_3
     279: aload         7
     281: aload         12
     283: aload_0
     284: invokevirtual #114                // Method getCapacityFactors:()Ljava/util/Map;
     287: invokeinterface #116,  4          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHashFactory.updateMembers:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;Ljava/util/Map;)Lorg/infinispan/distribution/ch/ConsistentHash;
     292: astore        11
     294: aload         12
     296: astore        10
     298: new           #35                 // class org/infinispan/topology/CacheTopology
     301: dup
     302: iload         4
     304: iconst_1
     305: iadd
     306: iload         5
     308: aload         9
     310: aload         11
     312: aload         10
     314: invokespecial #39                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
     317: astore        12
     319: aload_0
     320: aload         12
     322: invokespecial #40                 // Method setCurrentTopology:(Lorg/infinispan/topology/CacheTopology;)V
     325: aload_0
     326: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
     329: aload_0
     330: getfield      #5                  // Field cacheName:Ljava/lang/String;
     333: aload         12
     335: aload_0
     336: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
     339: aload_0
     340: invokevirtual #41                 // Method isTotalOrder:()Z
     343: aload_0
     344: invokevirtual #42                 // Method isDistributed:()Z
     347: invokeinterface #43,  6           // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastTopologyUpdate:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;ZZ)V
     352: aload_2
     353: monitorexit
     354: goto          364
     357: astore        13
     359: aload_2
     360: monitorexit
     361: aload         13
     363: athrow
     364: return
    Exception table:
       from    to  target type
           4    87   357   any
          88   134   357   any
         135   354   357   any
         357   361   357   any

  private boolean setAvailabilityMode(org.infinispan.partitionhandling.AvailabilityMode);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
       5: if_acmpne     10
       8: iconst_0
       9: ireturn
      10: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      13: ldc           #117                // String Cache %s availability changed: %s -> %s
      15: aload_0
      16: getfield      #5                  // Field cacheName:Ljava/lang/String;
      19: aload_0
      20: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      23: aload_1
      24: invokeinterface #59,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      29: aload_0
      30: aload_1
      31: putfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      34: iconst_1
      35: ireturn

  private <T> java.util.List<T> immutableAdd(java.util.List<T>, T);
    Code:
       0: new           #118                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokespecial #119                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokeinterface #120,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_3
      18: invokestatic  #121                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      21: areturn

  private <T> java.util.List<T> immutableRemove(java.util.List<T>, T);
    Code:
       0: new           #118                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokespecial #119                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokeinterface #122,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      16: pop
      17: aload_3
      18: invokestatic  #121                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      21: areturn

  private <T> java.util.List<T> immutableRemoveAll(java.util.List<T>, java.util.List<T>);
    Code:
       0: new           #118                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokespecial #119                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokeinterface #123,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      16: pop
      17: aload_3
      18: invokestatic  #121                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      21: areturn

  private <T> java.util.List<T> immutableRetainAll(java.util.List<T>, java.util.List<T>);
    Code:
       0: new           #118                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokespecial #119                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokeinterface #124,  2          // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
      16: pop
      17: aload_3
      18: invokestatic  #121                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      21: areturn

  public java.lang.String toString();
    Code:
       0: new           #125                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #126                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #127                // String ClusterCacheStatus{cacheName=\'
       9: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field cacheName:Ljava/lang/String;
      16: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        39
      21: invokevirtual #129                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: ldc           #130                // String , members=
      26: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      33: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #132                // String , joiners=
      38: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #15                 // Field joiners:Ljava/util/List;
      45: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #133                // String , currentTopology=
      50: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      57: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #134                // String , rebalanceConfirmationCollector=
      62: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #73                 // Field rebalanceConfirmationCollector:Lorg/infinispan/topology/RebalanceConfirmationCollector;
      69: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: bipush        125
      74: invokevirtual #129                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      77: invokevirtual #135                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  public void doMergePartitions(java.util.Map<org.infinispan.remoting.transport.Address, org.infinispan.topology.CacheStatusResponse>, java.util.List<org.infinispan.remoting.transport.Address>, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_1
       6: invokeinterface #136,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      11: ifeq          24
      14: new           #137                // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #138                // String Should have at least one current topology
      20: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #49                 // class java/util/HashMap
      27: dup
      28: invokespecial #140                // Method java/util/HashMap."<init>":()V
      31: astore        5
      33: new           #141                // class java/util/HashSet
      36: dup
      37: invokespecial #142                // Method java/util/HashSet."<init>":()V
      40: astore        6
      42: new           #141                // class java/util/HashSet
      45: dup
      46: invokespecial #142                // Method java/util/HashSet."<init>":()V
      49: astore        7
      51: aload_1
      52: invokeinterface #143,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      57: invokeinterface #144,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      62: astore        8
      64: aload         8
      66: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          168
      74: aload         8
      76: invokeinterface #146,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #147                // class java/util/Map$Entry
      84: astore        9
      86: aload         9
      88: invokeinterface #148,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      93: checkcast     #149                // class org/infinispan/remoting/transport/Address
      96: astore        10
      98: aload         9
     100: invokeinterface #150,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     105: checkcast     #151                // class org/infinispan/topology/CacheStatusResponse
     108: astore        11
     110: aload         5
     112: aload         10
     114: aload         11
     116: invokevirtual #152                // Method org/infinispan/topology/CacheStatusResponse.getCacheJoinInfo:()Lorg/infinispan/topology/CacheJoinInfo;
     119: invokevirtual #53                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: aload         11
     125: invokevirtual #153                // Method org/infinispan/topology/CacheStatusResponse.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     128: ifnull        144
     131: aload         6
     133: aload         11
     135: invokevirtual #153                // Method org/infinispan/topology/CacheStatusResponse.getCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     138: invokeinterface #154,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     143: pop
     144: aload         11
     146: invokevirtual #155                // Method org/infinispan/topology/CacheStatusResponse.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
     149: ifnull        165
     152: aload         7
     154: aload         11
     156: invokevirtual #155                // Method org/infinispan/topology/CacheStatusResponse.getStableTopology:()Lorg/infinispan/topology/CacheTopology;
     159: invokeinterface #154,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     164: pop
     165: goto          64
     168: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     171: ldc           #156                // String Recovered %d partition(s) for cache %s: %s
     173: aload         6
     175: invokeinterface #157,  1          // InterfaceMethod java/util/Set.size:()I
     180: aload_0
     181: getfield      #5                  // Field cacheName:Ljava/lang/String;
     184: aload         6
     186: invokeinterface #158,  5          // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V
     191: aload_0
     192: aload         5
     194: aload         6
     196: aload         7
     198: invokespecial #159                // Method recoverMembers:(Ljava/util/Map;Ljava/util/Collection;Ljava/util/Collection;)V
     201: aload_0
     202: getfield      #6                  // Field availabilityStrategy:Lorg/infinispan/partitionhandling/impl/AvailabilityStrategy;
     205: aload_0
     206: aload_1
     207: invokeinterface #160,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     212: invokeinterface #161,  3          // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategy.onPartitionMerge:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Ljava/util/Collection;)V
     217: goto          236
     220: astore        5
     222: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     225: aload_0
     226: getfield      #5                  // Field cacheName:Ljava/lang/String;
     229: aload         5
     231: invokeinterface #163,  3          // InterfaceMethod org/infinispan/util/logging/Log.failedToRecoverCacheState:(Ljava/lang/String;Ljava/lang/Throwable;)V
     236: aload         4
     238: monitorexit
     239: goto          250
     242: astore        12
     244: aload         4
     246: monitorexit
     247: aload         12
     249: athrow
     250: return
    Exception table:
       from    to  target type
          24   217   220   Class java/lang/Exception
           5   239   242   any
         242   247   242   any

  private void recoverMembers(java.util.Map<org.infinispan.remoting.transport.Address, org.infinispan.topology.CacheJoinInfo>, java.util.Collection<org.infinispan.topology.CacheTopology>, java.util.Collection<org.infinispan.topology.CacheTopology>);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
       4: putfield      #12                 // Field expectedMembers:Ljava/util/List;
       7: aload_3
       8: invokeinterface #164,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          50
      25: aload         4
      27: invokeinterface #146,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #35                 // class org/infinispan/topology/CacheTopology
      35: astore        5
      37: aload_0
      38: aload         5
      40: invokevirtual #72                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      43: aload_1
      44: invokespecial #165                // Method addMembers:(Ljava/util/Collection;Ljava/util/Map;)V
      47: goto          15
      50: aload_2
      51: invokeinterface #164,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      56: astore        4
      58: aload         4
      60: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          93
      68: aload         4
      70: invokeinterface #146,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #35                 // class org/infinispan/topology/CacheTopology
      78: astore        5
      80: aload_0
      81: aload         5
      83: invokevirtual #72                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
      86: aload_1
      87: invokespecial #165                // Method addMembers:(Ljava/util/Collection;Ljava/util/Map;)V
      90: goto          58
      93: aload_1
      94: invokeinterface #143,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      99: invokeinterface #144,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     104: astore        4
     106: aload         4
     108: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          175
     116: aload         4
     118: invokeinterface #146,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #147                // class java/util/Map$Entry
     126: astore        5
     128: aload_0
     129: getfield      #12                 // Field expectedMembers:Ljava/util/List;
     132: aload         5
     134: invokeinterface #148,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     139: invokeinterface #48,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     144: ifne          172
     147: aload_0
     148: aload         5
     150: invokeinterface #148,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     155: checkcast     #149                // class org/infinispan/remoting/transport/Address
     158: aload         5
     160: invokeinterface #150,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     165: checkcast     #166                // class org/infinispan/topology/CacheJoinInfo
     168: invokespecial #167                // Method addMember:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/topology/CacheJoinInfo;)Z
     171: pop
     172: goto          106
     175: return

  private void addMembers(java.util.Collection<org.infinispan.remoting.transport.Address>, java.util.Map<org.infinispan.remoting.transport.Address, org.infinispan.topology.CacheJoinInfo>);
    Code:
       0: aload_1
       1: invokeinterface #164,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          71
      16: aload_3
      17: invokeinterface #146,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #149                // class org/infinispan/remoting/transport/Address
      25: astore        4
      27: aload_0
      28: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      31: aload         4
      33: invokeinterface #48,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      38: ifne          68
      41: aload_2
      42: aload         4
      44: invokeinterface #168,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #166                // class org/infinispan/topology/CacheJoinInfo
      52: astore        5
      54: aload         5
      56: ifnull        68
      59: aload_0
      60: aload         4
      62: aload         5
      64: invokespecial #167                // Method addMember:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/topology/CacheJoinInfo;)Z
      67: pop
      68: goto          7
      71: return

  public java.lang.String getCacheName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cacheName:Ljava/lang/String;
       4: areturn

  public org.infinispan.topology.CacheStatusResponse doJoin(org.infinispan.remoting.transport.Address, org.infinispan.topology.CacheJoinInfo) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_0
       6: invokevirtual #92                 // Method getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
       9: ifnonnull     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_3
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #167                // Method addMember:(Lorg/infinispan/remoting/transport/Address;Lorg/infinispan/topology/CacheJoinInfo;)Z
      24: istore        6
      26: iload_3
      27: ifne          104
      30: iload         6
      32: ifne          104
      35: getstatic     #16                 // Field trace:Z
      38: ifeq          80
      41: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      44: ldc           #169                // String Trying to add node %s to cache %s, but it is already a member: members = %s, joiners = %s
      46: iconst_4
      47: anewarray     #45                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_1
      53: aastore
      54: dup
      55: iconst_1
      56: aload_0
      57: getfield      #5                  // Field cacheName:Ljava/lang/String;
      60: aastore
      61: dup
      62: iconst_2
      63: aload_0
      64: getfield      #12                 // Field expectedMembers:Ljava/util/List;
      67: aastore
      68: dup
      69: iconst_3
      70: aload_0
      71: getfield      #15                 // Field joiners:Ljava/util/List;
      74: aastore
      75: invokeinterface #57,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      80: new           #151                // class org/infinispan/topology/CacheStatusResponse
      83: dup
      84: aconst_null
      85: aload_0
      86: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      89: aload_0
      90: getfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      93: aload_0
      94: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
      97: invokespecial #170                // Method org/infinispan/topology/CacheStatusResponse."<init>":(Lorg/infinispan/topology/CacheJoinInfo;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;)V
     100: aload         5
     102: monitorexit
     103: areturn
     104: iload_3
     105: ifeq          137
     108: aload_0
     109: invokevirtual #100                // Method createInitialCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     112: astore        7
     114: aload_0
     115: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
     118: aload_0
     119: getfield      #5                  // Field cacheName:Ljava/lang/String;
     122: aload         7
     124: aload_0
     125: invokevirtual #41                 // Method isTotalOrder:()Z
     128: aload_0
     129: invokevirtual #42                 // Method isDistributed:()Z
     132: invokeinterface #47,  5           // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastStableTopologyUpdate:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;ZZ)V
     137: aload_0
     138: invokevirtual #92                 // Method getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
     141: astore        4
     143: aload_0
     144: getfield      #6                  // Field availabilityStrategy:Lorg/infinispan/partitionhandling/impl/AvailabilityStrategy;
     147: aload_0
     148: aload_1
     149: invokeinterface #171,  3          // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategy.onJoin:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Lorg/infinispan/remoting/transport/Address;)V
     154: aload         5
     156: monitorexit
     157: goto          168
     160: astore        8
     162: aload         5
     164: monitorexit
     165: aload         8
     167: athrow
     168: new           #151                // class org/infinispan/topology/CacheStatusResponse
     171: dup
     172: aconst_null
     173: aload         4
     175: aload_0
     176: getfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
     179: aload_0
     180: getfield      #3                  // Field availabilityMode:Lorg/infinispan/partitionhandling/AvailabilityMode;
     183: invokespecial #170                // Method org/infinispan/topology/CacheStatusResponse."<init>":(Lorg/infinispan/topology/CacheJoinInfo;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/topology/CacheTopology;Lorg/infinispan/partitionhandling/AvailabilityMode;)V
     186: areturn
    Exception table:
       from    to  target type
           5   103   160   any
         104   157   160   any
         160   165   160   any

  protected org.infinispan.topology.CacheTopology createInitialCacheTopology();
    Code:
       0: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #172                // String Initializing status for cache %s
       5: aload_0
       6: getfield      #5                  // Field cacheName:Ljava/lang/String;
       9: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: invokevirtual #110                // Method getExpectedMembers:()Ljava/util/List;
      18: astore_1
      19: aload_0
      20: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
      23: invokevirtual #102                // Method org/infinispan/topology/CacheJoinInfo.getConsistentHashFactory:()Lorg/infinispan/distribution/ch/ConsistentHashFactory;
      26: aload_0
      27: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
      30: invokevirtual #111                // Method org/infinispan/topology/CacheJoinInfo.getHashFunction:()Lorg/infinispan/commons/hash/Hash;
      33: aload_0
      34: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
      37: invokevirtual #112                // Method org/infinispan/topology/CacheJoinInfo.getNumOwners:()I
      40: aload_0
      41: getfield      #20                 // Field joinInfo:Lorg/infinispan/topology/CacheJoinInfo;
      44: invokevirtual #113                // Method org/infinispan/topology/CacheJoinInfo.getNumSegments:()I
      47: aload_1
      48: aload_0
      49: invokevirtual #114                // Method getCapacityFactors:()Ljava/util/Map;
      52: invokeinterface #115,  6          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHashFactory.create:(Lorg/infinispan/commons/hash/Hash;IILjava/util/List;Ljava/util/Map;)Lorg/infinispan/distribution/ch/ConsistentHash;
      57: astore_2
      58: new           #35                 // class org/infinispan/topology/CacheTopology
      61: dup
      62: iconst_0
      63: iconst_0
      64: aload_2
      65: aconst_null
      66: aload_1
      67: invokespecial #39                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
      70: astore_3
      71: aload_0
      72: aload_3
      73: invokespecial #40                 // Method setCurrentTopology:(Lorg/infinispan/topology/CacheTopology;)V
      76: aload_0
      77: aload_3
      78: invokespecial #107                // Method setStableTopology:(Lorg/infinispan/topology/CacheTopology;)V
      81: aload_3
      82: areturn

  public void doLeave(org.infinispan.remoting.transport.Address) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
       8: ifnonnull     14
      11: aload_2
      12: monitorexit
      13: return
      14: aload_0
      15: aload_1
      16: invokespecial #173                // Method removeMember:(Lorg/infinispan/remoting/transport/Address;)Z
      19: istore_3
      20: iload_3
      21: ifne          27
      24: aload_2
      25: monitorexit
      26: return
      27: aload_0
      28: getfield      #6                  // Field availabilityStrategy:Lorg/infinispan/partitionhandling/impl/AvailabilityStrategy;
      31: aload_0
      32: aload_1
      33: invokeinterface #174,  3          // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategy.onGracefulLeave:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Lorg/infinispan/remoting/transport/Address;)V
      38: aload_0
      39: invokespecial #91                 // Method updateRebalanceMembers:()Z
      42: istore        4
      44: iload         4
      46: ifeq          53
      49: aload_0
      50: invokespecial #86                 // Method endRebalance:()V
      53: aload_2
      54: monitorexit
      55: goto          65
      58: astore        5
      60: aload_2
      61: monitorexit
      62: aload         5
      64: athrow
      65: return
    Exception table:
       from    to  target type
           4    13    58   any
          14    26    58   any
          27    55    58   any
          58    62    58   any

  public void startQueuedRebalance();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #24                 // Field queuedRebalanceMembers:Ljava/util/List;
       8: ifnonnull     89
      11: aload_0
      12: getfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      15: ifnull        35
      18: aload_0
      19: getfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      22: invokevirtual #36                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      25: aload_0
      26: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      29: invokevirtual #36                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
      32: if_icmpge     86
      35: aload_0
      36: aload_0
      37: getfield      #9                  // Field currentTopology:Lorg/infinispan/topology/CacheTopology;
      40: putfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      43: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      46: ldc           #175                // String Updating stable topology for cache %s: %s
      48: aload_0
      49: getfield      #5                  // Field cacheName:Ljava/lang/String;
      52: aload_0
      53: getfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      56: invokeinterface #105,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      61: aload_0
      62: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
      65: aload_0
      66: getfield      #5                  // Field cacheName:Ljava/lang/String;
      69: aload_0
      70: getfield      #10                 // Field stableTopology:Lorg/infinispan/topology/CacheTopology;
      73: aload_0
      74: invokevirtual #41                 // Method isTotalOrder:()Z
      77: aload_0
      78: invokevirtual #42                 // Method isDistributed:()Z
      81: invokeinterface #47,  5           // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastStableTopologyUpdate:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;ZZ)V
      86: aload_1
      87: monitorexit
      88: return
      89: aload_0
      90: invokevirtual #92                 // Method getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
      93: astore_2
      94: aload_0
      95: invokevirtual #74                 // Method isRebalanceEnabled:()Z
      98: ifne          130
     101: aload_0
     102: getfield      #5                  // Field cacheName:Ljava/lang/String;
     105: ldc           #177                // String __cluster_registry_cache__
     107: invokevirtual #178                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifne          130
     113: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     116: ldc           #179                // String Postponing rebalance for cache %s, rebalancing is disabled
     118: aload_0
     119: getfield      #5                  // Field cacheName:Ljava/lang/String;
     122: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     127: aload_1
     128: monitorexit
     129: return
     130: aload_0
     131: invokevirtual #33                 // Method isRebalanceInProgress:()Z
     134: ifeq          155
     137: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     140: ldc           #180                // String Postponing rebalance for cache %s, there\'s already a rebalance in progress: %s
     142: aload_0
     143: getfield      #5                  // Field cacheName:Ljava/lang/String;
     146: aload_2
     147: invokeinterface #105,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     152: aload_1
     153: monitorexit
     154: return
     155: aload_0
     156: getfield      #24                 // Field queuedRebalanceMembers:Ljava/util/List;
     159: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     164: ifeq          184
     167: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     170: ldc           #181                // String Ignoring request to rebalance cache %s, it doesn\'t have any member
     172: aload_0
     173: getfield      #5                  // Field cacheName:Ljava/lang/String;
     176: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     181: aload_1
     182: monitorexit
     183: return
     184: new           #118                // class java/util/ArrayList
     187: dup
     188: aload_0
     189: getfield      #24                 // Field queuedRebalanceMembers:Ljava/util/List;
     192: invokespecial #119                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     195: astore_3
     196: aload_0
     197: aconst_null
     198: putfield      #24                 // Field queuedRebalanceMembers:Ljava/util/List;
     201: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     204: ldc           #182                // String Rebalancing consistent hash for cache %s, members are %s
     206: aload_0
     207: getfield      #5                  // Field cacheName:Ljava/lang/String;
     210: aload_3
     211: invokeinterface #105,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     216: aload_2
     217: ifnonnull     228
     220: aload_0
     221: invokevirtual #100                // Method createInitialCacheTopology:()Lorg/infinispan/topology/CacheTopology;
     224: pop
     225: aload_1
     226: monitorexit
     227: return
     228: aload_2
     229: invokevirtual #36                 // Method org/infinispan/topology/CacheTopology.getTopologyId:()I
     232: iconst_1
     233: iadd
     234: istore        4
     236: aload_2
     237: invokevirtual #37                 // Method org/infinispan/topology/CacheTopology.getRebalanceId:()I
     240: iconst_1
     241: iadd
     242: istore        5
     244: aload_2
     245: invokevirtual #38                 // Method org/infinispan/topology/CacheTopology.getCurrentCH:()Lorg/infinispan/distribution/ch/ConsistentHash;
     248: astore        6
     250: aload         6
     252: ifnonnull     272
     255: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     258: ldc           #183                // String Ignoring request to rebalance cache %s, it doesn\'t have a consistent hash
     260: aload_0
     261: getfield      #5                  // Field cacheName:Ljava/lang/String;
     264: invokeinterface #19,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     269: aload_1
     270: monitorexit
     271: return
     272: aload_0
     273: getfield      #12                 // Field expectedMembers:Ljava/util/List;
     276: aload_3
     277: invokeinterface #63,  2           // InterfaceMethod java/util/List.containsAll:(Ljava/util/Collection;)Z
     282: ifne          314
     285: aload_3
     286: aload_0
     287: getfield      #12                 // Field expectedMembers:Ljava/util/List;
     290: invokeinterface #123,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
     295: pop
     296: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     299: ldc           #184                // String Ignoring request to rebalance cache %s, we have new leavers: %s
     301: aload_0
     302: getfield      #5                  // Field cacheName:Ljava/lang/String;
     305: aload_3
     306: invokeinterface #105,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     311: aload_1
     312: monitorexit
     313: return
     314: aload_0
     315: invokevirtual #101                // Method getJoinInfo:()Lorg/infinispan/topology/CacheJoinInfo;
     318: invokevirtual #102                // Method org/infinispan/topology/CacheJoinInfo.getConsistentHashFactory:()Lorg/infinispan/distribution/ch/ConsistentHashFactory;
     321: astore        7
     323: aload         7
     325: aload         6
     327: aload_3
     328: aload_0
     329: invokevirtual #114                // Method getCapacityFactors:()Ljava/util/Map;
     332: invokeinterface #116,  4          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHashFactory.updateMembers:(Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;Ljava/util/Map;)Lorg/infinispan/distribution/ch/ConsistentHash;
     337: astore        8
     339: aload         7
     341: aload         8
     343: invokeinterface #185,  2          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHashFactory.rebalance:(Lorg/infinispan/distribution/ch/ConsistentHash;)Lorg/infinispan/distribution/ch/ConsistentHash;
     348: astore        9
     350: aload         9
     352: aload         6
     354: invokevirtual #186                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     357: ifeq          377
     360: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     363: ldc           #187                // String The balanced CH is the same as the current CH, not rebalancing
     365: iconst_0
     366: anewarray     #45                 // class java/lang/Object
     369: invokeinterface #57,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
     374: aload_1
     375: monitorexit
     376: return
     377: new           #35                 // class org/infinispan/topology/CacheTopology
     380: dup
     381: iload         4
     383: iload         5
     385: aload         6
     387: aload         9
     389: aload         9
     391: invokeinterface #67,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
     396: invokespecial #39                 // Method org/infinispan/topology/CacheTopology."<init>":(IILorg/infinispan/distribution/ch/ConsistentHash;Lorg/infinispan/distribution/ch/ConsistentHash;Ljava/util/List;)V
     399: astore        10
     401: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
     404: ldc           #188                // String Updating cache %s topology for rebalance: %s
     406: aload_0
     407: getfield      #5                  // Field cacheName:Ljava/lang/String;
     410: aload         10
     412: invokeinterface #105,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     417: aload_0
     418: aload         10
     420: invokespecial #40                 // Method setCurrentTopology:(Lorg/infinispan/topology/CacheTopology;)V
     423: aload_0
     424: aload         10
     426: invokespecial #189                // Method initRebalanceConfirmationCollector:(Lorg/infinispan/topology/CacheTopology;)Z
     429: pop
     430: aload_1
     431: monitorexit
     432: goto          442
     435: astore        11
     437: aload_1
     438: monitorexit
     439: aload         11
     441: athrow
     442: aload_0
     443: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
     446: aload_0
     447: getfield      #5                  // Field cacheName:Ljava/lang/String;
     450: aload_0
     451: invokevirtual #92                 // Method getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
     454: aload_0
     455: invokevirtual #41                 // Method isTotalOrder:()Z
     458: aload_0
     459: invokevirtual #42                 // Method isDistributed:()Z
     462: invokeinterface #190,  5          // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.broadcastRebalanceStart:(Ljava/lang/String;Lorg/infinispan/topology/CacheTopology;ZZ)V
     467: return
    Exception table:
       from    to  target type
           4    88   435   any
          89   129   435   any
         130   154   435   any
         155   183   435   any
         184   227   435   any
         228   271   435   any
         272   313   435   any
         314   376   435   any
         377   432   435   any
         435   439   435   any

  public boolean isRebalanceEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rebalancingEnabled:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #7                  // Field clusterTopologyManager:Lorg/infinispan/topology/ClusterTopologyManager;
      11: invokeinterface #191,  1          // InterfaceMethod org/infinispan/topology/ClusterTopologyManager.isRebalancingEnabled:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void setRebalanceEnabled(boolean);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field rebalancingEnabled:Z
       9: aload_0
      10: getfield      #4                  // Field rebalancingEnabled:Z
      13: ifeq          37
      16: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      19: ldc           #192                // String Rebalancing is now enabled for cache %s
      21: aload_0
      22: getfield      #5                  // Field cacheName:Ljava/lang/String;
      25: invokeinterface #193,  3          // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      30: aload_0
      31: invokevirtual #25                 // Method startQueuedRebalance:()V
      34: goto          51
      37: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      40: ldc           #194                // String Rebalancing is now disabled for cache %s
      42: aload_0
      43: getfield      #5                  // Field cacheName:Ljava/lang/String;
      46: invokeinterface #193,  3          // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      51: aload_2
      52: monitorexit
      53: goto          61
      56: astore_3
      57: aload_2
      58: monitorexit
      59: aload_3
      60: athrow
      61: return
    Exception table:
       from    to  target type
           4    53    56   any
          56    59    56   any

  public void forceRebalance();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #92                 // Method getCurrentTopology:()Lorg/infinispan/topology/CacheTopology;
       5: invokevirtual #72                 // Method org/infinispan/topology/CacheTopology.getMembers:()Ljava/util/List;
       8: invokevirtual #195                // Method queueRebalance:(Ljava/util/List;)V
      11: aload_0
      12: invokevirtual #25                 // Method startQueuedRebalance:()V
      15: return

  public void forceAvailabilityMode(org.infinispan.partitionhandling.AvailabilityMode);
    Code:
       0: aload_0
       1: getfield      #6                  // Field availabilityStrategy:Lorg/infinispan/partitionhandling/impl/AvailabilityStrategy;
       4: aload_0
       5: aload_1
       6: invokeinterface #196,  3          // InterfaceMethod org/infinispan/partitionhandling/impl/AvailabilityStrategy.onManualAvailabilityChange:(Lorg/infinispan/partitionhandling/impl/AvailabilityStrategyContext;Lorg/infinispan/partitionhandling/AvailabilityMode;)V
      11: return

  static {};
    Code:
       0: ldc           #197                // class org/infinispan/topology/ClusterCacheStatus
       2: invokestatic  #198                // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #17                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #199,  1          // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #16                 // Field trace:Z
      19: return
}
