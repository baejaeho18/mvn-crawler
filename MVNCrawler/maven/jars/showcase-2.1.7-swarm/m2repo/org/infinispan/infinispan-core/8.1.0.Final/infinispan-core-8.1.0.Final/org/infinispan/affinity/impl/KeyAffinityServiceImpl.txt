Compiled from "KeyAffinityServiceImpl.java"
public class org.infinispan.affinity.impl.KeyAffinityServiceImpl<K> implements org.infinispan.affinity.KeyAffinityService<K> {
  public static final float THRESHOLD;

  private static final int POLL_INTERVAL_MILLIS;

  private static final org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private final java.util.Set<org.infinispan.remoting.transport.Address> filter;

  private final java.util.Map<org.infinispan.remoting.transport.Address, java.util.concurrent.BlockingQueue<K>> address2key;

  private final java.util.concurrent.Executor executor;

  private final org.infinispan.Cache<? extends K, ?> cache;

  private final org.infinispan.affinity.KeyGenerator<? extends K> keyGenerator;

  private final int bufferSize;

  private final java.util.concurrent.atomic.AtomicInteger maxNumberOfKeys;

  final java.util.concurrent.atomic.AtomicInteger existingKeyCount;

  private volatile boolean started;

  private final java.util.concurrent.locks.ReadWriteLock maxNumberInvariant;

  private final org.infinispan.util.concurrent.ReclosableLatch keyProducerStartLatch;

  private volatile org.infinispan.affinity.impl.KeyAffinityServiceImpl<K>.KeyGeneratorWorker keyGenWorker;

  private volatile org.infinispan.affinity.ListenerRegistration listenerRegistration;

  public org.infinispan.affinity.impl.KeyAffinityServiceImpl(java.util.concurrent.Executor, org.infinispan.Cache<? extends K, ?>, org.infinispan.affinity.KeyGenerator<? extends K>, int, java.util.Collection<org.infinispan.remoting.transport.Address>, boolean);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #11                 // Method org/infinispan/commons/util/CollectionFactory.makeConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #1                  // Field address2key:Ljava/util/Map;
      11: aload_0
      12: new           #12                 // class java/util/concurrent/atomic/AtomicInteger
      15: dup
      16: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      19: putfield      #5                  // Field maxNumberOfKeys:Ljava/util/concurrent/atomic/AtomicInteger;
      22: aload_0
      23: new           #12                 // class java/util/concurrent/atomic/AtomicInteger
      26: dup
      27: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      30: putfield      #14                 // Field existingKeyCount:Ljava/util/concurrent/atomic/AtomicInteger;
      33: aload_0
      34: new           #15                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      37: dup
      38: invokespecial #16                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      41: putfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      44: aload_0
      45: new           #17                 // class org/infinispan/util/concurrent/ReclosableLatch
      48: dup
      49: invokespecial #18                 // Method org/infinispan/util/concurrent/ReclosableLatch."<init>":()V
      52: putfield      #9                  // Field keyProducerStartLatch:Lorg/infinispan/util/concurrent/ReclosableLatch;
      55: aload_0
      56: aload_1
      57: putfield      #19                 // Field executor:Ljava/util/concurrent/Executor;
      60: aload_0
      61: aload_2
      62: putfield      #20                 // Field cache:Lorg/infinispan/Cache;
      65: aload_0
      66: aload_3
      67: putfield      #4                  // Field keyGenerator:Lorg/infinispan/affinity/KeyGenerator;
      70: aload_0
      71: iload         4
      73: putfield      #21                 // Field bufferSize:I
      76: aload         5
      78: ifnull        141
      81: aload_0
      82: new           #22                 // class org/infinispan/util/concurrent/ConcurrentHashSet
      85: dup
      86: invokespecial #23                 // Method org/infinispan/util/concurrent/ConcurrentHashSet."<init>":()V
      89: putfield      #7                  // Field filter:Ljava/util/Set;
      92: aload         5
      94: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      99: astore        7
     101: aload         7
     103: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     108: ifeq          138
     111: aload         7
     113: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #27                 // class org/infinispan/remoting/transport/Address
     121: astore        8
     123: aload_0
     124: getfield      #7                  // Field filter:Ljava/util/Set;
     127: aload         8
     129: invokeinterface #28,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     134: pop
     135: goto          101
     138: goto          146
     141: aload_0
     142: aconst_null
     143: putfield      #7                  // Field filter:Ljava/util/Set;
     146: iload         6
     148: ifeq          155
     151: aload_0
     152: invokevirtual #29                 // Method start:()V
     155: return

  public K getCollocatedKey(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method getAddressForKey:(Ljava/lang/Object;)Lorg/infinispan/remoting/transport/Address;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #30                 // Method getKeyForAddress:(Lorg/infinispan/remoting/transport/Address;)Ljava/lang/Object;
      11: areturn

  public K getKeyForAddress(org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: getfield      #31                 // Field started:Z
       4: ifne          17
       7: new           #32                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #33                 // String You have to start the service first!
      13: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ifnonnull     31
      21: new           #35                 // class java/lang/NullPointerException
      24: dup
      25: ldc           #36                 // String Null address not supported!
      27: invokespecial #37                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aconst_null
      32: astore_2
      33: aconst_null
      34: astore_3
      35: aload_3
      36: ifnonnull     238
      39: aload_0
      40: getfield      #38                 // Field keyGenWorker:Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker;
      43: invokevirtual #39                 // Method org/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker.isStopped:()Z
      46: ifne          238
      49: aload_0
      50: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      53: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      58: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      63: aload_0
      64: getfield      #1                  // Field address2key:Ljava/util/Map;
      67: aload_1
      68: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #43                 // class java/util/concurrent/BlockingQueue
      76: astore_2
      77: aload_2
      78: ifnonnull     113
      81: new           #32                 // class java/lang/IllegalStateException
      84: dup
      85: new           #44                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #46                 // String Address
      94: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: ldc           #49                 // String  is no longer in the cluster
     103: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload_2
     114: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
     119: astore_3
     120: aload_3
     121: ifnonnull     171
     124: aload_0
     125: getfield      #9                  // Field keyProducerStartLatch:Lorg/infinispan/util/concurrent/ReclosableLatch;
     128: invokevirtual #52                 // Method org/infinispan/util/concurrent/ReclosableLatch.open:()V
     131: aload_0
     132: aload_1
     133: invokespecial #53                 // Method isNodeInConsistentHash:(Lorg/infinispan/remoting/transport/Address;)Z
     136: ifne          171
     139: new           #32                 // class java/lang/IllegalStateException
     142: dup
     143: new           #44                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     150: ldc           #46                 // String Address
     152: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_1
     156: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #49                 // String  is no longer in the cluster
     161: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     170: athrow
     171: aload_0
     172: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
     175: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
     180: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     185: goto          207
     188: astore        4
     190: aload_0
     191: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
     194: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
     199: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     204: aload         4
     206: athrow
     207: aload_3
     208: ifnonnull     35
     211: aload_2
     212: ldc2_w        #56                 // long 50l
     215: getstatic     #58                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     218: invokeinterface #59,  4           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
     223: astore_3
     224: goto          35
     227: astore        4
     229: invokestatic  #61                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     232: invokevirtual #62                 // Method java/lang/Thread.interrupt:()V
     235: goto          35
     238: aload_0
     239: getfield      #14                 // Field existingKeyCount:Ljava/util/concurrent/atomic/AtomicInteger;
     242: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     245: pop
     246: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
     249: ldc           #64                 // String Returning key %s for address %s
     251: aload_3
     252: aload_1
     253: invokeinterface #65,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     258: aload_3
     259: astore        4
     261: aload_2
     262: ifnull        293
     265: aload_2
     266: invokeinterface #66,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
     271: i2f
     272: aload_0
     273: getfield      #21                 // Field bufferSize:I
     276: i2f
     277: ldc           #67                 // float 0.5f
     279: fmul
     280: fconst_1
     281: fadd
     282: fcmpg
     283: ifge          293
     286: aload_0
     287: getfield      #9                  // Field keyProducerStartLatch:Lorg/infinispan/util/concurrent/ReclosableLatch;
     290: invokevirtual #52                 // Method org/infinispan/util/concurrent/ReclosableLatch.open:()V
     293: aload         4
     295: areturn
     296: astore        5
     298: aload_2
     299: ifnull        330
     302: aload_2
     303: invokeinterface #66,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
     308: i2f
     309: aload_0
     310: getfield      #21                 // Field bufferSize:I
     313: i2f
     314: ldc           #67                 // float 0.5f
     316: fmul
     317: fconst_1
     318: fadd
     319: fcmpg
     320: ifge          330
     323: aload_0
     324: getfield      #9                  // Field keyProducerStartLatch:Lorg/infinispan/util/concurrent/ReclosableLatch;
     327: invokevirtual #52                 // Method org/infinispan/util/concurrent/ReclosableLatch.open:()V
     330: aload         5
     332: athrow
    Exception table:
       from    to  target type
          63   171   188   any
         188   190   188   any
         211   224   227   Class java/lang/InterruptedException
          33   261   296   any
         296   298   296   any

  public void start();
    Code:
       0: aload_0
       1: getfield      #31                 // Field started:Z
       4: ifeq          18
       7: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      10: ldc           #68                 // String Service already started, ignoring call to start!
      12: invokeinterface #69,  2           // InterfaceMethod org/infinispan/util/logging/Log.debug:(Ljava/lang/Object;)V
      17: return
      18: aload_0
      19: invokespecial #70                 // Method getExistingNodes:()Ljava/util/List;
      22: astore_1
      23: aload_0
      24: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      27: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      37: aload_0
      38: aload_1
      39: invokespecial #72                 // Method addQueuesForAddresses:(Ljava/util/Collection;)V
      42: aload_0
      43: invokespecial #73                 // Method resetNumberOfKeys:()V
      46: aload_0
      47: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      50: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      55: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      60: goto          80
      63: astore_2
      64: aload_0
      65: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      68: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      73: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      78: aload_2
      79: athrow
      80: aload_0
      81: new           #74                 // class org/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker
      84: dup
      85: aload_0
      86: aconst_null
      87: invokespecial #75                 // Method org/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker."<init>":(Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl;Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl$1;)V
      90: putfield      #38                 // Field keyGenWorker:Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker;
      93: aload_0
      94: getfield      #19                 // Field executor:Ljava/util/concurrent/Executor;
      97: aload_0
      98: getfield      #38                 // Field keyGenWorker:Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker;
     101: invokeinterface #76,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     106: aload_0
     107: new           #77                 // class org/infinispan/affinity/ListenerRegistration
     110: dup
     111: aload_0
     112: invokespecial #78                 // Method org/infinispan/affinity/ListenerRegistration."<init>":(Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl;)V
     115: putfield      #79                 // Field listenerRegistration:Lorg/infinispan/affinity/ListenerRegistration;
     118: aload_0
     119: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
     122: invokeinterface #80,  1           // InterfaceMethod org/infinispan/Cache.getCacheManager:()Lorg/infinispan/manager/EmbeddedCacheManager;
     127: aload_0
     128: getfield      #79                 // Field listenerRegistration:Lorg/infinispan/affinity/ListenerRegistration;
     131: invokeinterface #81,  2           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.addListener:(Ljava/lang/Object;)V
     136: aload_0
     137: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
     140: aload_0
     141: getfield      #79                 // Field listenerRegistration:Lorg/infinispan/affinity/ListenerRegistration;
     144: invokeinterface #82,  2           // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;)V
     149: aload_0
     150: getfield      #9                  // Field keyProducerStartLatch:Lorg/infinispan/util/concurrent/ReclosableLatch;
     153: invokevirtual #52                 // Method org/infinispan/util/concurrent/ReclosableLatch.open:()V
     156: aload_0
     157: iconst_1
     158: putfield      #31                 // Field started:Z
     161: return
    Exception table:
       from    to  target type
          37    46    63   any

  public void stop();
    Code:
       0: aload_0
       1: getfield      #31                 // Field started:Z
       4: ifne          18
       7: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      10: ldc           #83                 // String Ignoring call to stop as service is not started.
      12: invokeinterface #69,  2           // InterfaceMethod org/infinispan/util/logging/Log.debug:(Ljava/lang/Object;)V
      17: return
      18: aload_0
      19: iconst_0
      20: putfield      #31                 // Field started:Z
      23: aload_0
      24: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
      27: invokeinterface #80,  1           // InterfaceMethod org/infinispan/Cache.getCacheManager:()Lorg/infinispan/manager/EmbeddedCacheManager;
      32: astore_1
      33: aload_1
      34: invokeinterface #84,  1           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.getListeners:()Ljava/util/Set;
      39: aload_0
      40: getfield      #79                 // Field listenerRegistration:Lorg/infinispan/affinity/ListenerRegistration;
      43: invokeinterface #85,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      48: ifeq          64
      51: aload_1
      52: aload_0
      53: getfield      #79                 // Field listenerRegistration:Lorg/infinispan/affinity/ListenerRegistration;
      56: invokeinterface #86,  2           // InterfaceMethod org/infinispan/manager/EmbeddedCacheManager.removeListener:(Ljava/lang/Object;)V
      61: goto          74
      64: new           #32                 // class java/lang/IllegalStateException
      67: dup
      68: ldc           #87                 // String Listener must have been registered!
      70: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
      78: invokeinterface #88,  1           // InterfaceMethod org/infinispan/Cache.getListeners:()Ljava/util/Set;
      83: aload_0
      84: getfield      #79                 // Field listenerRegistration:Lorg/infinispan/affinity/ListenerRegistration;
      87: invokeinterface #85,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      92: ifeq          108
      95: aload_0
      96: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
      99: aload_0
     100: getfield      #79                 // Field listenerRegistration:Lorg/infinispan/affinity/ListenerRegistration;
     103: invokeinterface #89,  2           // InterfaceMethod org/infinispan/Cache.removeListener:(Ljava/lang/Object;)V
     108: aload_0
     109: getfield      #38                 // Field keyGenWorker:Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker;
     112: invokevirtual #90                 // Method org/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker.stop:()V
     115: return

  public void handleViewChange(org.infinispan.notifications.cachelistener.event.TopologyChangedEvent<?, ?>);
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #91                 // String TopologyChangedEvent received: %s
       5: aload_1
       6: invokeinterface #92,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      15: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      25: aload_0
      26: getfield      #1                  // Field address2key:Ljava/util/Map;
      29: invokeinterface #93,  1           // InterfaceMethod java/util/Map.clear:()V
      34: aload_0
      35: aload_1
      36: invokeinterface #94,  1           // InterfaceMethod org/infinispan/notifications/cachelistener/event/TopologyChangedEvent.getConsistentHashAtEnd:()Lorg/infinispan/distribution/ch/ConsistentHash;
      41: invokeinterface #95,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      46: invokespecial #72                 // Method addQueuesForAddresses:(Ljava/util/Collection;)V
      49: aload_0
      50: invokespecial #73                 // Method resetNumberOfKeys:()V
      53: aload_0
      54: getfield      #9                  // Field keyProducerStartLatch:Lorg/infinispan/util/concurrent/ReclosableLatch;
      57: invokevirtual #52                 // Method org/infinispan/util/concurrent/ReclosableLatch.open:()V
      60: aload_0
      61: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      64: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      69: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      74: goto          94
      77: astore_2
      78: aload_0
      79: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
      82: invokeinterface #71,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      87: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      92: aload_2
      93: athrow
      94: return
    Exception table:
       from    to  target type
          25    60    77   any

  public boolean isKeyGeneratorThreadAlive();
    Code:
       0: aload_0
       1: getfield      #38                 // Field keyGenWorker:Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker;
       4: invokevirtual #39                 // Method org/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker.isStopped:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void handleCacheStopped(org.infinispan.notifications.cachemanagerlistener.event.CacheStoppedEvent);
    Code:
       0: aload_0
       1: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #96,  1           // InterfaceMethod org/infinispan/Cache.getName:()Ljava/lang/String;
       9: aload_1
      10: invokeinterface #97,  1           // InterfaceMethod org/infinispan/notifications/cachemanagerlistener/event/CacheStoppedEvent.getCacheName:()Ljava/lang/String;
      15: invokevirtual #98                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          36
      21: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      24: ldc           #99                 // String Cache stopped, stopping the service: %s
      26: aload_1
      27: invokeinterface #92,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_0
      33: invokevirtual #100                // Method stop:()V
      36: return

  private void resetNumberOfKeys();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxNumberOfKeys:Ljava/util/concurrent/atomic/AtomicInteger;
       4: aload_0
       5: getfield      #1                  // Field address2key:Ljava/util/Map;
       8: invokeinterface #101,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokeinterface #102,  1          // InterfaceMethod java/util/Set.size:()I
      18: aload_0
      19: getfield      #21                 // Field bufferSize:I
      22: imul
      23: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      26: aload_0
      27: getfield      #14                 // Field existingKeyCount:Ljava/util/concurrent/atomic/AtomicInteger;
      30: iconst_0
      31: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      34: getstatic     #104                // Field trace:Z
      37: ifeq          64
      40: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      43: ldc           #105                // String resetNumberOfKeys ends with: maxNumberOfKeys=%s, existingKeyCount=%s
      45: aload_0
      46: getfield      #5                  // Field maxNumberOfKeys:Ljava/util/concurrent/atomic/AtomicInteger;
      49: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      52: aload_0
      53: getfield      #14                 // Field existingKeyCount:Ljava/util/concurrent/atomic/AtomicInteger;
      56: invokevirtual #106                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      59: invokeinterface #107,  4          // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;II)V
      64: return

  private void addQueuesForAddresses(java.util.Collection<org.infinispan.remoting.transport.Address>);
    Code:
       0: aload_1
       1: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          73
      16: aload_2
      17: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #27                 // class org/infinispan/remoting/transport/Address
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokespecial #2                  // Method interestedInAddress:(Lorg/infinispan/remoting/transport/Address;)Z
      31: ifeq          59
      34: aload_0
      35: getfield      #1                  // Field address2key:Ljava/util/Map;
      38: aload_3
      39: new           #108                // class java/util/concurrent/ArrayBlockingQueue
      42: dup
      43: aload_0
      44: getfield      #21                 // Field bufferSize:I
      47: invokespecial #109                // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      50: invokeinterface #110,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: goto          70
      59: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      62: ldc           #111                // String Skipping address: %s
      64: aload_3
      65: invokeinterface #92,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      70: goto          7
      73: return

  private boolean interestedInAddress(org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: getfield      #7                  // Field filter:Ljava/util/Set;
       4: ifnull        20
       7: aload_0
       8: getfield      #7                  // Field filter:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #85,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private java.util.List<org.infinispan.remoting.transport.Address> getExistingNodes();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #112,  1          // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       9: invokeinterface #113,  1          // InterfaceMethod org/infinispan/AdvancedCache.getRpcManager:()Lorg/infinispan/remoting/rpc/RpcManager;
      14: invokeinterface #114,  1          // InterfaceMethod org/infinispan/remoting/rpc/RpcManager.getTransport:()Lorg/infinispan/remoting/transport/Transport;
      19: invokeinterface #115,  1          // InterfaceMethod org/infinispan/remoting/transport/Transport.getMembers:()Ljava/util/List;
      24: areturn

  private org.infinispan.remoting.transport.Address getAddressForKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #116                // Method getDistributionManager:()Lorg/infinispan/distribution/DistributionManager;
       4: astore_2
       5: aload_2
       6: invokeinterface #117,  1          // InterfaceMethod org/infinispan/distribution/DistributionManager.getConsistentHash:()Lorg/infinispan/distribution/ch/ConsistentHash;
      11: astore_3
      12: aload_3
      13: aload_1
      14: invokeinterface #118,  2          // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.locatePrimaryOwner:(Ljava/lang/Object;)Lorg/infinispan/remoting/transport/Address;
      19: areturn

  private boolean isNodeInConsistentHash(org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: invokespecial #116                // Method getDistributionManager:()Lorg/infinispan/distribution/DistributionManager;
       4: astore_2
       5: aload_2
       6: invokeinterface #117,  1          // InterfaceMethod org/infinispan/distribution/DistributionManager.getConsistentHash:()Lorg/infinispan/distribution/ch/ConsistentHash;
      11: astore_3
      12: aload_3
      13: invokeinterface #95,  1           // InterfaceMethod org/infinispan/distribution/ch/ConsistentHash.getMembers:()Ljava/util/List;
      18: aload_1
      19: invokeinterface #119,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      24: ireturn

  private org.infinispan.distribution.DistributionManager getDistributionManager();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #112,  1          // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       9: invokeinterface #120,  1          // InterfaceMethod org/infinispan/AdvancedCache.getDistributionManager:()Lorg/infinispan/distribution/DistributionManager;
      14: astore_1
      15: aload_1
      16: ifnonnull     29
      19: new           #32                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #121                // String Null distribution manager. Is this an distributed(v.s. replicated) cache?
      25: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_1
      30: areturn

  public java.util.Map<org.infinispan.remoting.transport.Address, java.util.concurrent.BlockingQueue<K>> getAddress2KeysMapping();
    Code:
       0: aload_0
       1: getfield      #1                  // Field address2key:Ljava/util/Map;
       4: invokestatic  #122                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public int getMaxNumberOfKeys();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxNumberOfKeys:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #123                // Method java/util/concurrent/atomic/AtomicInteger.intValue:()I
       7: ireturn

  public boolean isKeyGeneratorThreadActive();
    Code:
       0: aload_0
       1: getfield      #38                 // Field keyGenWorker:Lorg/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker;
       4: invokevirtual #124                // Method org/infinispan/affinity/impl/KeyAffinityServiceImpl$KeyGeneratorWorker.isActive:()Z
       7: ireturn

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #31                 // Field started:Z
       4: ireturn

  static org.infinispan.util.concurrent.ReclosableLatch access$100(org.infinispan.affinity.impl.KeyAffinityServiceImpl);
    Code:
       0: aload_0
       1: getfield      #9                  // Field keyProducerStartLatch:Lorg/infinispan/util/concurrent/ReclosableLatch;
       4: areturn

  static org.infinispan.util.logging.Log access$200();
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: areturn

  static java.util.Set access$300(org.infinispan.affinity.impl.KeyAffinityServiceImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field filter:Ljava/util/Set;
       4: areturn

  static java.util.concurrent.locks.ReadWriteLock access$400(org.infinispan.affinity.impl.KeyAffinityServiceImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxNumberInvariant:Ljava/util/concurrent/locks/ReadWriteLock;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$500(org.infinispan.affinity.impl.KeyAffinityServiceImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxNumberOfKeys:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static org.infinispan.affinity.KeyGenerator access$600(org.infinispan.affinity.impl.KeyAffinityServiceImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyGenerator:Lorg/infinispan/affinity/KeyGenerator;
       4: areturn

  static org.infinispan.remoting.transport.Address access$700(org.infinispan.affinity.impl.KeyAffinityServiceImpl, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method getAddressForKey:(Ljava/lang/Object;)Lorg/infinispan/remoting/transport/Address;
       5: areturn

  static boolean access$800(org.infinispan.affinity.impl.KeyAffinityServiceImpl, org.infinispan.remoting.transport.Address);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method interestedInAddress:(Lorg/infinispan/remoting/transport/Address;)Z
       5: ireturn

  static java.util.Map access$900(org.infinispan.affinity.impl.KeyAffinityServiceImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field address2key:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: ldc           #55                 // class org/infinispan/affinity/impl/KeyAffinityServiceImpl
       2: invokestatic  #125                // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #126,  1          // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #104                // Field trace:Z
      19: return
}
