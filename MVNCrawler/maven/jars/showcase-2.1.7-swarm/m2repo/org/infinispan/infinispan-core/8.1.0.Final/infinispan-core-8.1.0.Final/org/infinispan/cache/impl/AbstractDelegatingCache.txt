Compiled from "AbstractDelegatingCache.java"
public abstract class org.infinispan.cache.impl.AbstractDelegatingCache<K, V> implements org.infinispan.Cache<K, V> {
  private final org.infinispan.Cache<K, V> cache;

  public org.infinispan.cache.impl.AbstractDelegatingCache(org.infinispan.Cache<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cache:Lorg/infinispan/Cache;
       9: aload_1
      10: ifnonnull     23
      13: new           #3                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #4                  // String Delegate cache cannot be null!
      19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  public void putForExternalRead(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #6,  3            // InterfaceMethod org/infinispan/Cache.putForExternalRead:(Ljava/lang/Object;Ljava/lang/Object;)V
      11: return

  public void putForExternalRead(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #7,  6            // InterfaceMethod org/infinispan/Cache.putForExternalRead:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
      14: return

  public void putForExternalRead(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: lload         6
      11: aload         8
      13: invokeinterface #8,  9            // InterfaceMethod org/infinispan/Cache.putForExternalRead:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)V
      18: return

  public void evict(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/infinispan/Cache.evict:(Ljava/lang/Object;)V
      10: return

  public org.infinispan.configuration.cache.Configuration getCacheConfiguration();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #10,  1           // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
       9: areturn

  public boolean startBatch();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #11,  1           // InterfaceMethod org/infinispan/Cache.startBatch:()Z
       9: ireturn

  public void endBatch(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: iload_1
       5: invokeinterface #12,  2           // InterfaceMethod org/infinispan/Cache.endBatch:(Z)V
      10: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #13,  1           // InterfaceMethod org/infinispan/Cache.getName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #14,  1           // InterfaceMethod org/infinispan/Cache.getVersion:()Ljava/lang/String;
       9: areturn

  public org.infinispan.manager.EmbeddedCacheManager getCacheManager();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #15,  1           // InterfaceMethod org/infinispan/Cache.getCacheManager:()Lorg/infinispan/manager/EmbeddedCacheManager;
       9: areturn

  public V put(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #16,  6           // InterfaceMethod org/infinispan/Cache.put:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      14: areturn

  protected void set(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #17,  3           // InterfaceMethod org/infinispan/Cache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public V putIfAbsent(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #18,  6           // InterfaceMethod org/infinispan/Cache.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      14: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #19,  5           // InterfaceMethod org/infinispan/Cache.putAll:(Ljava/util/Map;JLjava/util/concurrent/TimeUnit;)V
      13: return

  public V replace(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #20,  6           // InterfaceMethod org/infinispan/Cache.replace:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      14: areturn

  public boolean replace(K, V, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: aload         6
      11: invokeinterface #21,  7           // InterfaceMethod org/infinispan/Cache.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
      16: ireturn

  public V put(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: lload         6
      11: aload         8
      13: invokeinterface #22,  9           // InterfaceMethod org/infinispan/Cache.put:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      18: areturn

  public V putIfAbsent(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: lload         6
      11: aload         8
      13: invokeinterface #23,  9           // InterfaceMethod org/infinispan/Cache.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      18: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: lload_2
       6: aload         4
       8: lload         5
      10: aload         7
      12: invokeinterface #24,  8           // InterfaceMethod org/infinispan/Cache.putAll:(Ljava/util/Map;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)V
      17: return

  public V replace(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: lload         6
      11: aload         8
      13: invokeinterface #25,  9           // InterfaceMethod org/infinispan/Cache.replace:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      18: areturn

  public boolean replace(K, V, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: aload         6
      11: lload         7
      13: aload         9
      15: invokeinterface #26,  10          // InterfaceMethod org/infinispan/Cache.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Z
      20: ireturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> putAsync(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod org/infinispan/Cache.putAsync:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      11: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> putAsync(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #28,  6           // InterfaceMethod org/infinispan/Cache.putAsync:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      14: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> putAsync(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: lload         6
      11: aload         8
      13: invokeinterface #29,  9           // InterfaceMethod org/infinispan/Cache.putAsync:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      18: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> putAllAsync(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod org/infinispan/Cache.putAllAsync:(Ljava/util/Map;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      10: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> putAllAsync(java.util.Map<? extends K, ? extends V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #31,  5           // InterfaceMethod org/infinispan/Cache.putAllAsync:(Ljava/util/Map;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      13: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> putAllAsync(java.util.Map<? extends K, ? extends V>, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: lload_2
       6: aload         4
       8: lload         5
      10: aload         7
      12: invokeinterface #32,  8           // InterfaceMethod org/infinispan/Cache.putAllAsync:(Ljava/util/Map;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      17: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Void> clearAsync();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #33,  1           // InterfaceMethod org/infinispan/Cache.clearAsync:()Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
       9: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> putIfAbsentAsync(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #34,  3           // InterfaceMethod org/infinispan/Cache.putIfAbsentAsync:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      11: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> putIfAbsentAsync(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #35,  6           // InterfaceMethod org/infinispan/Cache.putIfAbsentAsync:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      14: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> putIfAbsentAsync(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: lload         6
      11: aload         8
      13: invokeinterface #36,  9           // InterfaceMethod org/infinispan/Cache.putIfAbsentAsync:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      18: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> removeAsync(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod org/infinispan/Cache.removeAsync:(Ljava/lang/Object;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      10: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> removeAsync(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #38,  3           // InterfaceMethod org/infinispan/Cache.removeAsync:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      11: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> replaceAsync(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #39,  3           // InterfaceMethod org/infinispan/Cache.replaceAsync:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      11: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> replaceAsync(K, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: invokeinterface #40,  6           // InterfaceMethod org/infinispan/Cache.replaceAsync:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      14: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> replaceAsync(K, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: lload         6
      11: aload         8
      13: invokeinterface #41,  9           // InterfaceMethod org/infinispan/Cache.replaceAsync:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      18: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> replaceAsync(K, V, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #42,  4           // InterfaceMethod org/infinispan/Cache.replaceAsync:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      12: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> replaceAsync(K, V, V, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: aload         6
      11: invokeinterface #43,  7           // InterfaceMethod org/infinispan/Cache.replaceAsync:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      16: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<java.lang.Boolean> replaceAsync(K, V, V, long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: aload         6
      11: lload         7
      13: aload         9
      15: invokeinterface #44,  10          // InterfaceMethod org/infinispan/Cache.replaceAsync:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      20: areturn

  public org.infinispan.AdvancedCache<K, V> getAdvancedCache();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #45,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       9: areturn

  public org.infinispan.lifecycle.ComponentStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #46,  1           // InterfaceMethod org/infinispan/Cache.getStatus:()Lorg/infinispan/lifecycle/ComponentStatus;
       9: areturn

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #47,  3           // InterfaceMethod org/infinispan/Cache.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #48,  3           // InterfaceMethod org/infinispan/Cache.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #49,  4           // InterfaceMethod org/infinispan/Cache.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  public V replace(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #50,  3           // InterfaceMethod org/infinispan/Cache.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #51,  1           // InterfaceMethod org/infinispan/Cache.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #52,  1           // InterfaceMethod org/infinispan/Cache.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod org/infinispan/Cache.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #54,  2           // InterfaceMethod org/infinispan/Cache.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #55,  2           // InterfaceMethod org/infinispan/Cache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #17,  3           // InterfaceMethod org/infinispan/Cache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod org/infinispan/Cache.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #57,  2           // InterfaceMethod org/infinispan/Cache.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #58,  1           // InterfaceMethod org/infinispan/Cache.clear:()V
       9: return

  public org.infinispan.CacheSet<K> keySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #59,  1           // InterfaceMethod org/infinispan/Cache.keySet:()Lorg/infinispan/CacheSet;
       9: areturn

  public org.infinispan.CacheSet<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #60,  1           // InterfaceMethod org/infinispan/Cache.entrySet:()Lorg/infinispan/CacheSet;
       9: areturn

  public org.infinispan.CacheCollection<V> values();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #61,  1           // InterfaceMethod org/infinispan/Cache.values:()Lorg/infinispan/CacheCollection;
       9: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #62,  1           // InterfaceMethod org/infinispan/Cache.start:()V
       9: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #63,  1           // InterfaceMethod org/infinispan/Cache.stop:()V
       9: return

  public void addListener(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;)V
      10: return

  public void addListener(java.lang.Object, org.infinispan.filter.KeyFilter<? super K>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: invokeinterface #65,  3           // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;Lorg/infinispan/filter/KeyFilter;)V
      11: return

  public <C> void addListener(java.lang.Object, org.infinispan.notifications.cachelistener.filter.CacheEventFilter<? super K, ? super V>, org.infinispan.notifications.cachelistener.filter.CacheEventConverter<? super K, ? super V, C>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #66,  4           // InterfaceMethod org/infinispan/Cache.addListener:(Ljava/lang/Object;Lorg/infinispan/notifications/cachelistener/filter/CacheEventFilter;Lorg/infinispan/notifications/cachelistener/filter/CacheEventConverter;)V
      12: return

  public void removeListener(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod org/infinispan/Cache.removeListener:(Ljava/lang/Object;)V
      10: return

  public java.util.Set<java.lang.Object> getListeners();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokeinterface #68,  1           // InterfaceMethod org/infinispan/Cache.getListeners:()Ljava/util/Set;
       9: areturn

  public org.infinispan.commons.util.concurrent.NotifyingFuture<V> getAsync(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: aload_1
       5: invokeinterface #69,  2           // InterfaceMethod org/infinispan/Cache.getAsync:(Ljava/lang/Object;)Lorg/infinispan/commons/util/concurrent/NotifyingFuture;
      10: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: invokevirtual #70                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public org.infinispan.Cache<K, V> getDelegate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
       4: areturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method entrySet:()Lorg/infinispan/CacheSet;
       4: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method values:()Lorg/infinispan/CacheCollection;
       4: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method keySet:()Lorg/infinispan/CacheSet;
       4: areturn
}
