Compiled from "HashConfigurationBuilder.java"
public class org.infinispan.configuration.cache.HashConfigurationBuilder extends org.infinispan.configuration.cache.AbstractClusteringConfigurationChildBuilder implements org.infinispan.commons.configuration.Builder<org.infinispan.configuration.cache.HashConfiguration> {
  private static final org.infinispan.util.logging.Log log;

  private final org.infinispan.commons.configuration.attributes.AttributeSet attributes;

  private final org.infinispan.configuration.cache.GroupsConfigurationBuilder groupsConfigurationBuilder;

  org.infinispan.configuration.cache.HashConfigurationBuilder(org.infinispan.configuration.cache.ClusteringConfigurationBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder."<init>":(Lorg/infinispan/configuration/cache/ClusteringConfigurationBuilder;)V
       5: aload_0
       6: invokestatic  #2                  // Method org/infinispan/configuration/cache/HashConfiguration.attributeDefinitionSet:()Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       9: putfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      12: aload_0
      13: new           #4                  // class org/infinispan/configuration/cache/GroupsConfigurationBuilder
      16: dup
      17: aload_1
      18: invokespecial #5                  // Method org/infinispan/configuration/cache/GroupsConfigurationBuilder."<init>":(Lorg/infinispan/configuration/cache/ClusteringConfigurationBuilder;)V
      21: putfield      #6                  // Field groupsConfigurationBuilder:Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
      24: return

  public org.infinispan.configuration.cache.HashConfigurationBuilder consistentHash(org.infinispan.distribution.ch.ConsistentHash);
    Code:
       0: getstatic     #7                  // Field log:Lorg/infinispan/util/logging/Log;
       3: invokeinterface #8,  1            // InterfaceMethod org/infinispan/util/logging/Log.consistentHashDeprecated:()V
       8: aload_0
       9: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder consistentHashFactory(org.infinispan.distribution.ch.ConsistentHashFactory<? extends org.infinispan.distribution.ch.ConsistentHash>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #9                  // Field org/infinispan/configuration/cache/HashConfiguration.CONSISTENT_HASH_FACTORY:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #10                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: aload_1
      11: invokevirtual #11                 // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder numOwners(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #12                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #13                 // String numOwners cannot be less than 1
      11: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      19: getstatic     #15                 // Field org/infinispan/configuration/cache/HashConfiguration.NUM_OWNERS:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
      22: invokevirtual #10                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      25: iload_1
      26: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: invokevirtual #11                 // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      32: aload_0
      33: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder numVirtualNodes(int);
    Code:
       0: getstatic     #7                  // Field log:Lorg/infinispan/util/logging/Log;
       3: invokeinterface #17,  1           // InterfaceMethod org/infinispan/util/logging/Log.hashNumVirtualNodesDeprecated:()V
       8: aload_0
       9: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder numSegments(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #12                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #18                 // String numSegments cannot be less than 1
      11: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      19: getstatic     #19                 // Field org/infinispan/configuration/cache/HashConfiguration.NUM_SEGMENTS:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
      22: invokevirtual #10                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      25: iload_1
      26: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: invokevirtual #11                 // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      32: aload_0
      33: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder rehashEnabled();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       4: iconst_1
       5: invokevirtual #21                 // Method org/infinispan/configuration/cache/StateTransferConfigurationBuilder.fetchInMemoryState:(Z)Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       8: pop
       9: aload_0
      10: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder rehashEnabled(boolean);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       4: iload_1
       5: invokevirtual #21                 // Method org/infinispan/configuration/cache/StateTransferConfigurationBuilder.fetchInMemoryState:(Z)Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       8: pop
       9: aload_0
      10: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder rehashDisabled();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       4: iconst_0
       5: invokevirtual #21                 // Method org/infinispan/configuration/cache/StateTransferConfigurationBuilder.fetchInMemoryState:(Z)Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       8: pop
       9: aload_0
      10: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder rehashRpcTimeout(long);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       4: lload_1
       5: invokevirtual #22                 // Method org/infinispan/configuration/cache/StateTransferConfigurationBuilder.timeout:(J)Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       8: pop
       9: aload_0
      10: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder rehashWait(long);
    Code:
       0: aload_0
       1: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder hash(org.infinispan.commons.hash.Hash);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #23                 // Field org/infinispan/configuration/cache/HashConfiguration.HASH:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #10                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: aload_1
      11: invokevirtual #11                 // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder capacityFactor(float);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpg
       3: ifge          16
       6: new           #12                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #24                 // String capacityFactor must be positive
      12: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      20: getstatic     #25                 // Field org/infinispan/configuration/cache/HashConfiguration.CAPACITY_FACTOR:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
      23: invokevirtual #10                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      26: fload_1
      27: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      30: invokevirtual #11                 // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      33: aload_0
      34: areturn

  public org.infinispan.configuration.cache.GroupsConfigurationBuilder groups();
    Code:
       0: aload_0
       1: getfield      #6                  // Field groupsConfigurationBuilder:Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
       4: areturn

  public void validate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field groupsConfigurationBuilder:Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
       4: invokevirtual #27                 // Method org/infinispan/configuration/cache/GroupsConfigurationBuilder.validate:()V
       7: return

  public void validate(org.infinispan.configuration.global.GlobalConfiguration);
    Code:
       0: aload_0
       1: getfield      #6                  // Field groupsConfigurationBuilder:Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
       4: aload_1
       5: invokevirtual #28                 // Method org/infinispan/configuration/cache/GroupsConfigurationBuilder.validate:(Lorg/infinispan/configuration/global/GlobalConfiguration;)V
       8: return

  public org.infinispan.configuration.cache.HashConfiguration create();
    Code:
       0: new           #29                 // class org/infinispan/configuration/cache/HashConfiguration
       3: dup
       4: aload_0
       5: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       8: invokevirtual #30                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.protect:()Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      11: aload_0
      12: getfield      #6                  // Field groupsConfigurationBuilder:Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
      15: invokevirtual #31                 // Method org/infinispan/configuration/cache/GroupsConfigurationBuilder.create:()Lorg/infinispan/configuration/cache/GroupsConfiguration;
      18: aload_0
      19: invokevirtual #20                 // Method stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
      22: invokevirtual #32                 // Method org/infinispan/configuration/cache/StateTransferConfigurationBuilder.create:()Lorg/infinispan/configuration/cache/StateTransferConfiguration;
      25: invokespecial #33                 // Method org/infinispan/configuration/cache/HashConfiguration."<init>":(Lorg/infinispan/commons/configuration/attributes/AttributeSet;Lorg/infinispan/configuration/cache/GroupsConfiguration;Lorg/infinispan/configuration/cache/StateTransferConfiguration;)V
      28: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder read(org.infinispan.configuration.cache.HashConfiguration);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: aload_1
       5: invokevirtual #34                 // Method org/infinispan/configuration/cache/HashConfiguration.attributes:()Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       8: invokevirtual #35                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.read:(Lorg/infinispan/commons/configuration/attributes/AttributeSet;)V
      11: aload_0
      12: getfield      #6                  // Field groupsConfigurationBuilder:Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
      15: aload_1
      16: invokevirtual #36                 // Method org/infinispan/configuration/cache/HashConfiguration.groups:()Lorg/infinispan/configuration/cache/GroupsConfiguration;
      19: invokevirtual #37                 // Method org/infinispan/configuration/cache/GroupsConfigurationBuilder.read:(Lorg/infinispan/configuration/cache/GroupsConfiguration;)Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
      22: pop
      23: aload_0
      24: areturn

  public java.lang.String toString();
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #40                 // String HashConfigurationBuilder [attributes=
       9: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      16: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #43                 // String , groupsConfigurationBuilder=
      21: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field groupsConfigurationBuilder:Lorg/infinispan/configuration/cache/GroupsConfigurationBuilder;
      28: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #44                 // String ]
      33: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public org.infinispan.configuration.cache.PartitionHandlingConfigurationBuilder partitionHandling();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.partitionHandling:()Lorg/infinispan/configuration/cache/PartitionHandlingConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.SyncConfigurationBuilder sync();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.sync:()Lorg/infinispan/configuration/cache/SyncConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.StateTransferConfigurationBuilder stateTransfer();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.stateTransfer:()Lorg/infinispan/configuration/cache/StateTransferConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.L1ConfigurationBuilder l1();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.l1:()Lorg/infinispan/configuration/cache/L1ConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.HashConfigurationBuilder hash();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.hash:()Lorg/infinispan/configuration/cache/HashConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.AsyncConfigurationBuilder async();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.async:()Lorg/infinispan/configuration/cache/AsyncConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.Configuration build();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.build:()Lorg/infinispan/configuration/cache/Configuration;
       4: areturn

  public org.infinispan.configuration.cache.CompatibilityModeConfigurationBuilder compatibility();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.compatibility:()Lorg/infinispan/configuration/cache/CompatibilityModeConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.SitesConfigurationBuilder sites();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.sites:()Lorg/infinispan/configuration/cache/SitesConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.UnsafeConfigurationBuilder unsafe();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.unsafe:()Lorg/infinispan/configuration/cache/UnsafeConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.VersioningConfigurationBuilder versioning();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.versioning:()Lorg/infinispan/configuration/cache/VersioningConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.TransactionConfigurationBuilder transaction();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.transaction:()Lorg/infinispan/configuration/cache/TransactionConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.StoreAsBinaryConfigurationBuilder storeAsBinary();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.storeAsBinary:()Lorg/infinispan/configuration/cache/StoreAsBinaryConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.SecurityConfigurationBuilder security();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.security:()Lorg/infinispan/configuration/cache/SecurityConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.LockingConfigurationBuilder locking();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.locking:()Lorg/infinispan/configuration/cache/LockingConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.PersistenceConfigurationBuilder persistence();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.persistence:()Lorg/infinispan/configuration/cache/PersistenceConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.JMXStatisticsConfigurationBuilder jmxStatistics();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.jmxStatistics:()Lorg/infinispan/configuration/cache/JMXStatisticsConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.InvocationBatchingConfigurationBuilder invocationBatching();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.invocationBatching:()Lorg/infinispan/configuration/cache/InvocationBatchingConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.IndexingConfigurationBuilder indexing();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.indexing:()Lorg/infinispan/configuration/cache/IndexingConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.ExpirationConfigurationBuilder expiration();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.expiration:()Lorg/infinispan/configuration/cache/ExpirationConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder eviction();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.eviction:()Lorg/infinispan/configuration/cache/EvictionConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.DeadlockDetectionConfigurationBuilder deadlockDetection();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.deadlockDetection:()Lorg/infinispan/configuration/cache/DeadlockDetectionConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.DataContainerConfigurationBuilder dataContainer();
    Code:
       0: aload_0
       1: invokespecial #68                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.CustomInterceptorsConfigurationBuilder customInterceptors();
    Code:
       0: aload_0
       1: invokespecial #69                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.customInterceptors:()Lorg/infinispan/configuration/cache/CustomInterceptorsConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.ClusteringConfigurationBuilder clustering();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfigurationBuilder;
       4: areturn

  public boolean simpleCache();
    Code:
       0: aload_0
       1: invokespecial #71                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.simpleCache:()Z
       4: ireturn

  public org.infinispan.configuration.cache.ConfigurationChildBuilder simpleCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #72                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.simpleCache:(Z)Lorg/infinispan/configuration/cache/ConfigurationChildBuilder;
       5: areturn

  public org.infinispan.configuration.cache.ConfigurationChildBuilder template(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #73                 // Method org/infinispan/configuration/cache/AbstractClusteringConfigurationChildBuilder.template:(Z)Lorg/infinispan/configuration/cache/ConfigurationChildBuilder;
       5: areturn

  public org.infinispan.commons.configuration.Builder read(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class org/infinispan/configuration/cache/HashConfiguration
       5: invokevirtual #74                 // Method read:(Lorg/infinispan/configuration/cache/HashConfiguration;)Lorg/infinispan/configuration/cache/HashConfigurationBuilder;
       8: areturn

  public java.lang.Object create();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method create:()Lorg/infinispan/configuration/cache/HashConfiguration;
       4: areturn

  static {};
    Code:
       0: ldc           #76                 // class org/infinispan/configuration/cache/HashConfigurationBuilder
       2: invokestatic  #77                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #7                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
