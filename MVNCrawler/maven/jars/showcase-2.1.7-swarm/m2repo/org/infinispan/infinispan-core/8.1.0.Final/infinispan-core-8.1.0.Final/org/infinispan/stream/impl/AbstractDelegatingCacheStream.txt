Compiled from "AbstractDelegatingCacheStream.java"
public class org.infinispan.stream.impl.AbstractDelegatingCacheStream<R> implements org.infinispan.CacheStream<R> {
  protected org.infinispan.CacheStream<?> underlyingStream;

  public org.infinispan.stream.impl.AbstractDelegatingCacheStream(org.infinispan.CacheStream<R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       9: return

  private org.infinispan.CacheStream<R> castStream(org.infinispan.CacheStream);
    Code:
       0: aload_1
       1: areturn

  public org.infinispan.CacheStream<R> sequentialDistribution();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #3,  1            // InterfaceMethod org/infinispan/CacheStream.sequentialDistribution:()Lorg/infinispan/CacheStream;
      10: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      13: aload_0
      14: areturn

  public org.infinispan.CacheStream<R> parallelDistribution();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #4,  1            // InterfaceMethod org/infinispan/CacheStream.parallelDistribution:()Lorg/infinispan/CacheStream;
      10: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      13: aload_0
      14: areturn

  public org.infinispan.CacheStream<R> filterKeySegments(java.util.Set<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: aload_1
       6: invokeinterface #5,  2            // InterfaceMethod org/infinispan/CacheStream.filterKeySegments:(Ljava/util/Set;)Lorg/infinispan/CacheStream;
      11: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      14: aload_0
      15: areturn

  public org.infinispan.CacheStream<R> filterKeys(java.util.Set<?>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: aload_1
       6: invokeinterface #6,  2            // InterfaceMethod org/infinispan/CacheStream.filterKeys:(Ljava/util/Set;)Lorg/infinispan/CacheStream;
      11: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      14: aload_0
      15: areturn

  public org.infinispan.CacheStream<R> distributedBatchSize(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: iload_1
       6: invokeinterface #7,  2            // InterfaceMethod org/infinispan/CacheStream.distributedBatchSize:(I)Lorg/infinispan/CacheStream;
      11: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      14: aload_0
      15: areturn

  public org.infinispan.CacheStream<R> segmentCompletionListener(org.infinispan.CacheStream$SegmentCompletionListener);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: aload_1
       6: invokeinterface #8,  2            // InterfaceMethod org/infinispan/CacheStream.segmentCompletionListener:(Lorg/infinispan/CacheStream$SegmentCompletionListener;)Lorg/infinispan/CacheStream;
      11: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      14: aload_0
      15: areturn

  public org.infinispan.CacheStream<R> disableRehashAware();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #9,  1            // InterfaceMethod org/infinispan/CacheStream.disableRehashAware:()Lorg/infinispan/CacheStream;
      10: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      13: aload_0
      14: areturn

  public org.infinispan.CacheStream<R> timeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: lload_1
       6: aload_3
       7: invokeinterface #10,  4           // InterfaceMethod org/infinispan/CacheStream.timeout:(JLjava/util/concurrent/TimeUnit;)Lorg/infinispan/CacheStream;
      12: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      15: aload_0
      16: areturn

  public void forEach(java.util.function.Consumer<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #12,  2           // InterfaceMethod org/infinispan/CacheStream.forEach:(Ljava/util/function/Consumer;)V
      14: return

  public void forEachOrdered(java.util.function.Consumer<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #13,  2           // InterfaceMethod org/infinispan/CacheStream.forEachOrdered:(Ljava/util/function/Consumer;)V
      14: return

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       4: invokeinterface #14,  1           // InterfaceMethod org/infinispan/CacheStream.toArray:()[Ljava/lang/Object;
       9: areturn

  public <A> A[] toArray(java.util.function.IntFunction<A[]>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/infinispan/CacheStream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      10: areturn

  public R reduce(R, java.util.function.BinaryOperator<R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: aload_2
      10: invokeinterface #16,  3           // InterfaceMethod org/infinispan/CacheStream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
      15: areturn

  public java.util.Optional<R> reduce(java.util.function.BinaryOperator<R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #17,  2           // InterfaceMethod org/infinispan/CacheStream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      14: areturn

  public <U> U reduce(U, java.util.function.BiFunction<U, ? super R, U>, java.util.function.BinaryOperator<U>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #18,  4           // InterfaceMethod org/infinispan/CacheStream.reduce:(Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
      16: areturn

  public <R1> R1 collect(java.util.function.Supplier<R1>, java.util.function.BiConsumer<R1, ? super R>, java.util.function.BiConsumer<R1, R1>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #19,  4           // InterfaceMethod org/infinispan/CacheStream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;
      16: areturn

  public java.util.Iterator<R> iterator();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: invokeinterface #20,  1           // InterfaceMethod org/infinispan/CacheStream.iterator:()Ljava/util/Iterator;
      13: areturn

  public java.util.Spliterator<R> spliterator();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: invokeinterface #21,  1           // InterfaceMethod org/infinispan/CacheStream.spliterator:()Ljava/util/Spliterator;
      13: areturn

  public boolean isParallel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       4: invokeinterface #22,  1           // InterfaceMethod org/infinispan/CacheStream.isParallel:()Z
       9: ireturn

  public java.util.stream.Stream<R> sequential();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #23,  1           // InterfaceMethod org/infinispan/CacheStream.sequential:()Ljava/util/stream/BaseStream;
      10: checkcast     #24                 // class org/infinispan/CacheStream
      13: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      16: aload_0
      17: areturn

  public java.util.stream.Stream<R> parallel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #25,  1           // InterfaceMethod org/infinispan/CacheStream.parallel:()Ljava/util/stream/BaseStream;
      10: checkcast     #24                 // class org/infinispan/CacheStream
      13: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      16: aload_0
      17: areturn

  public java.util.stream.Stream<R> unordered();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #26,  1           // InterfaceMethod org/infinispan/CacheStream.unordered:()Ljava/util/stream/BaseStream;
      10: checkcast     #24                 // class org/infinispan/CacheStream
      13: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      16: aload_0
      17: areturn

  public java.util.stream.Stream<R> onClose(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: aload_1
       6: invokeinterface #27,  2           // InterfaceMethod org/infinispan/CacheStream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;
      11: checkcast     #24                 // class org/infinispan/CacheStream
      14: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      17: aload_0
      18: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       4: invokeinterface #28,  1           // InterfaceMethod org/infinispan/CacheStream.close:()V
       9: return

  public java.util.stream.Stream<R> sorted();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #29,  1           // InterfaceMethod org/infinispan/CacheStream.sorted:()Ljava/util/stream/Stream;
      10: checkcast     #24                 // class org/infinispan/CacheStream
      13: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      16: aload_0
      17: areturn

  public java.util.stream.Stream<R> sorted(java.util.Comparator<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       6: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       9: aload_1
      10: invokeinterface #30,  2           // InterfaceMethod org/infinispan/CacheStream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      15: checkcast     #24                 // class org/infinispan/CacheStream
      18: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      21: aload_0
      22: areturn

  public java.util.stream.Stream<R> peek(java.util.function.Consumer<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       6: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       9: aload_1
      10: invokeinterface #31,  2           // InterfaceMethod org/infinispan/CacheStream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      15: checkcast     #24                 // class org/infinispan/CacheStream
      18: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      21: aload_0
      22: areturn

  public java.util.stream.Stream<R> limit(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: lload_1
       6: invokeinterface #32,  3           // InterfaceMethod org/infinispan/CacheStream.limit:(J)Ljava/util/stream/Stream;
      11: checkcast     #24                 // class org/infinispan/CacheStream
      14: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      17: aload_0
      18: areturn

  public java.util.stream.Stream<R> skip(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: lload_1
       6: invokeinterface #32,  3           // InterfaceMethod org/infinispan/CacheStream.limit:(J)Ljava/util/stream/Stream;
      11: checkcast     #24                 // class org/infinispan/CacheStream
      14: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      17: aload_0
      18: areturn

  public java.util.stream.Stream<R> filter(java.util.function.Predicate<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       6: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       9: aload_1
      10: invokeinterface #33,  2           // InterfaceMethod org/infinispan/CacheStream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      15: checkcast     #24                 // class org/infinispan/CacheStream
      18: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      21: aload_0
      22: areturn

  public <R1> java.util.stream.Stream<R1> map(java.util.function.Function<? super R, ? extends R1>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       6: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       9: aload_1
      10: invokeinterface #34,  2           // InterfaceMethod org/infinispan/CacheStream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      15: checkcast     #24                 // class org/infinispan/CacheStream
      18: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      21: aload_0
      22: areturn

  public <R1> java.util.stream.Stream<R1> flatMap(java.util.function.Function<? super R, ? extends java.util.stream.Stream<? extends R1>>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       6: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       9: aload_1
      10: invokeinterface #35,  2           // InterfaceMethod org/infinispan/CacheStream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      15: checkcast     #24                 // class org/infinispan/CacheStream
      18: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      21: aload_0
      22: areturn

  public java.util.stream.Stream<R> distinct();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokeinterface #36,  1           // InterfaceMethod org/infinispan/CacheStream.distinct:()Ljava/util/stream/Stream;
      10: checkcast     #24                 // class org/infinispan/CacheStream
      13: putfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
      16: aload_0
      17: areturn

  public <R1, A> R1 collect(java.util.stream.Collector<? super R, A, R1>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #37,  2           // InterfaceMethod org/infinispan/CacheStream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      14: areturn

  public java.util.Optional<R> min(java.util.Comparator<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #38,  2           // InterfaceMethod org/infinispan/CacheStream.min:(Ljava/util/Comparator;)Ljava/util/Optional;
      14: areturn

  public java.util.Optional<R> max(java.util.Comparator<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #39,  2           // InterfaceMethod org/infinispan/CacheStream.max:(Ljava/util/Comparator;)Ljava/util/Optional;
      14: areturn

  public long count();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       4: invokeinterface #40,  1           // InterfaceMethod org/infinispan/CacheStream.count:()J
       9: lreturn

  public boolean anyMatch(java.util.function.Predicate<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #41,  2           // InterfaceMethod org/infinispan/CacheStream.anyMatch:(Ljava/util/function/Predicate;)Z
      14: ireturn

  public boolean allMatch(java.util.function.Predicate<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #42,  2           // InterfaceMethod org/infinispan/CacheStream.allMatch:(Ljava/util/function/Predicate;)Z
      14: ireturn

  public boolean noneMatch(java.util.function.Predicate<? super R>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: aload_1
       9: invokeinterface #43,  2           // InterfaceMethod org/infinispan/CacheStream.noneMatch:(Ljava/util/function/Predicate;)Z
      14: ireturn

  public java.util.Optional<R> findFirst();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: invokeinterface #44,  1           // InterfaceMethod org/infinispan/CacheStream.findFirst:()Ljava/util/Optional;
      13: areturn

  public java.util.Optional<R> findAny();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field underlyingStream:Lorg/infinispan/CacheStream;
       5: invokespecial #11                 // Method castStream:(Lorg/infinispan/CacheStream;)Lorg/infinispan/CacheStream;
       8: invokeinterface #45,  1           // InterfaceMethod org/infinispan/CacheStream.findAny:()Ljava/util/Optional;
      13: areturn

  public java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction<? super R>);
    Code:
       0: new           #46                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #47                 // String Primitive delegate is not yet supported!
       6: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.LongStream mapToLong(java.util.function.ToLongFunction<? super R>);
    Code:
       0: new           #46                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #47                 // String Primitive delegate is not yet supported!
       6: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.DoubleStream mapToDouble(java.util.function.ToDoubleFunction<? super R>);
    Code:
       0: new           #46                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #47                 // String Primitive delegate is not yet supported!
       6: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.IntStream flatMapToInt(java.util.function.Function<? super R, ? extends java.util.stream.IntStream>);
    Code:
       0: new           #46                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #47                 // String Primitive delegate is not yet supported!
       6: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.LongStream flatMapToLong(java.util.function.Function<? super R, ? extends java.util.stream.LongStream>);
    Code:
       0: new           #46                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #47                 // String Primitive delegate is not yet supported!
       6: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.DoubleStream flatMapToDouble(java.util.function.Function<? super R, ? extends java.util.stream.DoubleStream>);
    Code:
       0: new           #46                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #47                 // String Primitive delegate is not yet supported!
       6: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.stream.BaseStream onClose(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method onClose:(Ljava/lang/Runnable;)Ljava/util/stream/Stream;
       5: areturn

  public java.util.stream.BaseStream unordered();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method unordered:()Ljava/util/stream/Stream;
       4: areturn

  public java.util.stream.BaseStream parallel();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method parallel:()Ljava/util/stream/Stream;
       4: areturn

  public java.util.stream.BaseStream sequential();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method sequential:()Ljava/util/stream/Stream;
       4: areturn
}
