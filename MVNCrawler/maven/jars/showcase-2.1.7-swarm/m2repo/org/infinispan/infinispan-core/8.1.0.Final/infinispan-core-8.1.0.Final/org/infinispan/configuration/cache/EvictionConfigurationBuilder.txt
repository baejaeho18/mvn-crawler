Compiled from "EvictionConfigurationBuilder.java"
public class org.infinispan.configuration.cache.EvictionConfigurationBuilder extends org.infinispan.configuration.cache.AbstractConfigurationChildBuilder implements org.infinispan.commons.configuration.Builder<org.infinispan.configuration.cache.EvictionConfiguration> {
  private static final org.infinispan.util.logging.Log log;

  private final org.infinispan.commons.configuration.attributes.AttributeSet attributes;

  public static final long EVICTION_MAX_SIZE;

  org.infinispan.configuration.cache.EvictionConfigurationBuilder(org.infinispan.configuration.cache.ConfigurationBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder."<init>":(Lorg/infinispan/configuration/cache/ConfigurationBuilder;)V
       5: aload_0
       6: invokestatic  #2                  // Method org/infinispan/configuration/cache/EvictionConfiguration.attributeDefinitionSet:()Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       9: putfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      12: return

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder strategy(org.infinispan.eviction.EvictionStrategy);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #4                  // Field org/infinispan/configuration/cache/EvictionConfiguration.STRATEGY:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: aload_1
      11: invokevirtual #6                  // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  org.infinispan.eviction.EvictionStrategy strategy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #4                  // Field org/infinispan/configuration/cache/EvictionConfiguration.STRATEGY:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: invokevirtual #7                  // Method org/infinispan/commons/configuration/attributes/Attribute.get:()Ljava/lang/Object;
      13: checkcast     #8                  // class org/infinispan/eviction/EvictionStrategy
      16: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder threadPolicy(org.infinispan.eviction.EvictionThreadPolicy);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #9                  // Field org/infinispan/configuration/cache/EvictionConfiguration.THREAD_POLICY:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: aload_1
      11: invokevirtual #6                  // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder maxEntries(long);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/infinispan/eviction/EvictionType.COUNT:Lorg/infinispan/eviction/EvictionType;
       4: invokevirtual #11                 // Method type:(Lorg/infinispan/eviction/EvictionType;)Lorg/infinispan/configuration/cache/EvictionConfigurationBuilder;
       7: lload_1
       8: invokevirtual #12                 // Method size:(J)Lorg/infinispan/configuration/cache/EvictionConfigurationBuilder;
      11: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder maxEntries(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokevirtual #13                 // Method maxEntries:(J)Lorg/infinispan/configuration/cache/EvictionConfigurationBuilder;
       6: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder size(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #14                 // Field org/infinispan/configuration/cache/EvictionConfiguration.SIZE:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: lload_1
      11: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: invokevirtual #6                  // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      17: aload_0
      18: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder type(org.infinispan.eviction.EvictionType);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #16                 // Field org/infinispan/configuration/cache/EvictionConfiguration.TYPE:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: aload_1
      11: invokevirtual #6                  // Method org/infinispan/commons/configuration/attributes/Attribute.set:(Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  public void validate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: getstatic     #4                  // Field org/infinispan/configuration/cache/EvictionConfiguration.STRATEGY:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
       7: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      10: invokevirtual #7                  // Method org/infinispan/commons/configuration/attributes/Attribute.get:()Ljava/lang/Object;
      13: checkcast     #8                  // class org/infinispan/eviction/EvictionStrategy
      16: astore_1
      17: aload_0
      18: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      21: getstatic     #14                 // Field org/infinispan/configuration/cache/EvictionConfiguration.SIZE:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
      24: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
      27: invokevirtual #7                  // Method org/infinispan/commons/configuration/attributes/Attribute.get:()Ljava/lang/Object;
      30: checkcast     #17                 // class java/lang/Long
      33: astore_2
      34: aload_1
      35: invokevirtual #18                 // Method org/infinispan/eviction/EvictionStrategy.isEnabled:()Z
      38: ifne          62
      41: aload_0
      42: invokevirtual #19                 // Method getBuilder:()Lorg/infinispan/configuration/cache/ConfigurationBuilder;
      45: invokevirtual #20                 // Method org/infinispan/configuration/cache/ConfigurationBuilder.persistence:()Lorg/infinispan/configuration/cache/PersistenceConfigurationBuilder;
      48: invokevirtual #21                 // Method org/infinispan/configuration/cache/PersistenceConfigurationBuilder.passivation:()Z
      51: ifeq          62
      54: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
      57: invokeinterface #23,  1           // InterfaceMethod org/infinispan/util/logging/Log.passivationWithoutEviction:()V
      62: aload_1
      63: getstatic     #24                 // Field org/infinispan/eviction/EvictionStrategy.FIFO:Lorg/infinispan/eviction/EvictionStrategy;
      66: if_acmpne     77
      69: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
      72: invokeinterface #25,  1           // InterfaceMethod org/infinispan/util/logging/Log.warnFifoStrategyIsDeprecated:()V
      77: aload_1
      78: invokevirtual #18                 // Method org/infinispan/eviction/EvictionStrategy.isEnabled:()Z
      81: ifeq          103
      84: aload_2
      85: invokevirtual #26                 // Method java/lang/Long.longValue:()J
      88: lconst_0
      89: lcmp
      90: ifgt          103
      93: new           #27                 // class org/infinispan/commons/CacheConfigurationException
      96: dup
      97: ldc           #28                 // String Eviction maxEntries value cannot be less than or equal to zero if eviction is enabled
      99: invokespecial #29                 // Method org/infinispan/commons/CacheConfigurationException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_2
     104: invokevirtual #26                 // Method java/lang/Long.longValue:()J
     107: lconst_0
     108: lcmp
     109: ifle          139
     112: aload_1
     113: invokevirtual #18                 // Method org/infinispan/eviction/EvictionStrategy.isEnabled:()Z
     116: ifne          139
     119: aload_0
     120: getstatic     #30                 // Field org/infinispan/eviction/EvictionStrategy.LIRS:Lorg/infinispan/eviction/EvictionStrategy;
     123: invokevirtual #31                 // Method strategy:(Lorg/infinispan/eviction/EvictionStrategy;)Lorg/infinispan/configuration/cache/EvictionConfigurationBuilder;
     126: pop
     127: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
     130: ldc           #32                 // String Max entries configured (%d) without eviction strategy. Eviction strategy overriden to %s
     132: aload_2
     133: aload_1
     134: invokeinterface #33,  4           // InterfaceMethod org/infinispan/util/logging/Log.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     139: aload_1
     140: getstatic     #30                 // Field org/infinispan/eviction/EvictionStrategy.LIRS:Lorg/infinispan/eviction/EvictionStrategy;
     143: if_acmpne     175
     146: aload_0
     147: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
     150: getstatic     #16                 // Field org/infinispan/configuration/cache/EvictionConfiguration.TYPE:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
     153: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
     156: invokevirtual #7                  // Method org/infinispan/commons/configuration/attributes/Attribute.get:()Ljava/lang/Object;
     159: getstatic     #34                 // Field org/infinispan/eviction/EvictionType.MEMORY:Lorg/infinispan/eviction/EvictionType;
     162: if_acmpne     175
     165: new           #27                 // class org/infinispan/commons/CacheConfigurationException
     168: dup
     169: ldc           #35                 // String Eviction cannot use memory based approximation with LIRS
     171: invokespecial #29                 // Method org/infinispan/commons/CacheConfigurationException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: aload_2
     176: invokevirtual #26                 // Method java/lang/Long.longValue:()J
     179: ldc2_w        #37                 // long 72057594037927935l
     182: lcmp
     183: ifle          199
     186: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
     189: aload_2
     190: invokevirtual #26                 // Method java/lang/Long.longValue:()J
     193: invokeinterface #39,  3           // InterfaceMethod org/infinispan/util/logging/Log.evictionSizeTooLarge:(J)Lorg/infinispan/commons/CacheConfigurationException;
     198: athrow
     199: aload_0
     200: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
     203: getstatic     #16                 // Field org/infinispan/configuration/cache/EvictionConfiguration.TYPE:Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;
     206: invokevirtual #5                  // Method org/infinispan/commons/configuration/attributes/AttributeSet.attribute:(Lorg/infinispan/commons/configuration/attributes/AttributeDefinition;)Lorg/infinispan/commons/configuration/attributes/Attribute;
     209: invokevirtual #7                  // Method org/infinispan/commons/configuration/attributes/Attribute.get:()Ljava/lang/Object;
     212: getstatic     #34                 // Field org/infinispan/eviction/EvictionType.MEMORY:Lorg/infinispan/eviction/EvictionType;
     215: if_acmpne     242
     218: ldc           #40                 // String java.vm.name
     220: invokestatic  #41                 // Method org/infinispan/configuration/cache/SecurityActions.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;
     223: astore_3
     224: aload_3
     225: ldc           #42                 // String HotSpot
     227: invokevirtual #43                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     230: ifne          242
     233: getstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
     236: aload_3
     237: invokeinterface #44,  2           // InterfaceMethod org/infinispan/util/logging/Log.memoryApproximationUnsupportedVM:(Ljava/lang/String;)V
     242: return

  public void validate(org.infinispan.configuration.global.GlobalConfiguration);
    Code:
       0: return

  public org.infinispan.configuration.cache.EvictionConfiguration create();
    Code:
       0: new           #45                 // class org/infinispan/configuration/cache/EvictionConfiguration
       3: dup
       4: aload_0
       5: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       8: invokevirtual #46                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.protect:()Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      11: invokespecial #47                 // Method org/infinispan/configuration/cache/EvictionConfiguration."<init>":(Lorg/infinispan/commons/configuration/attributes/AttributeSet;)V
      14: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder read(org.infinispan.configuration.cache.EvictionConfiguration);
    Code:
       0: aload_0
       1: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       4: aload_1
       5: invokevirtual #48                 // Method org/infinispan/configuration/cache/EvictionConfiguration.attributes:()Lorg/infinispan/commons/configuration/attributes/AttributeSet;
       8: invokevirtual #49                 // Method org/infinispan/commons/configuration/attributes/AttributeSet.read:(Lorg/infinispan/commons/configuration/attributes/AttributeSet;)V
      11: aload_0
      12: areturn

  public java.lang.String toString();
    Code:
       0: new           #50                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #53                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: getfield      #3                  // Field attributes:Lorg/infinispan/commons/configuration/attributes/AttributeSet;
      21: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public org.infinispan.configuration.cache.Configuration build();
    Code:
       0: aload_0
       1: invokespecial #57                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.build:()Lorg/infinispan/configuration/cache/Configuration;
       4: areturn

  public org.infinispan.configuration.cache.CompatibilityModeConfigurationBuilder compatibility();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.compatibility:()Lorg/infinispan/configuration/cache/CompatibilityModeConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.SitesConfigurationBuilder sites();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.sites:()Lorg/infinispan/configuration/cache/SitesConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.UnsafeConfigurationBuilder unsafe();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.unsafe:()Lorg/infinispan/configuration/cache/UnsafeConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.VersioningConfigurationBuilder versioning();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.versioning:()Lorg/infinispan/configuration/cache/VersioningConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.TransactionConfigurationBuilder transaction();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.transaction:()Lorg/infinispan/configuration/cache/TransactionConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.StoreAsBinaryConfigurationBuilder storeAsBinary();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.storeAsBinary:()Lorg/infinispan/configuration/cache/StoreAsBinaryConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.SecurityConfigurationBuilder security();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.security:()Lorg/infinispan/configuration/cache/SecurityConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.LockingConfigurationBuilder locking();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.locking:()Lorg/infinispan/configuration/cache/LockingConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.PersistenceConfigurationBuilder persistence();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.persistence:()Lorg/infinispan/configuration/cache/PersistenceConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.JMXStatisticsConfigurationBuilder jmxStatistics();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.jmxStatistics:()Lorg/infinispan/configuration/cache/JMXStatisticsConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.InvocationBatchingConfigurationBuilder invocationBatching();
    Code:
       0: aload_0
       1: invokespecial #68                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.invocationBatching:()Lorg/infinispan/configuration/cache/InvocationBatchingConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.IndexingConfigurationBuilder indexing();
    Code:
       0: aload_0
       1: invokespecial #69                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.indexing:()Lorg/infinispan/configuration/cache/IndexingConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.ExpirationConfigurationBuilder expiration();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.expiration:()Lorg/infinispan/configuration/cache/ExpirationConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.EvictionConfigurationBuilder eviction();
    Code:
       0: aload_0
       1: invokespecial #71                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.eviction:()Lorg/infinispan/configuration/cache/EvictionConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.DeadlockDetectionConfigurationBuilder deadlockDetection();
    Code:
       0: aload_0
       1: invokespecial #72                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.deadlockDetection:()Lorg/infinispan/configuration/cache/DeadlockDetectionConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.DataContainerConfigurationBuilder dataContainer();
    Code:
       0: aload_0
       1: invokespecial #73                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.dataContainer:()Lorg/infinispan/configuration/cache/DataContainerConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.CustomInterceptorsConfigurationBuilder customInterceptors();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.customInterceptors:()Lorg/infinispan/configuration/cache/CustomInterceptorsConfigurationBuilder;
       4: areturn

  public org.infinispan.configuration.cache.ClusteringConfigurationBuilder clustering();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.clustering:()Lorg/infinispan/configuration/cache/ClusteringConfigurationBuilder;
       4: areturn

  public boolean simpleCache();
    Code:
       0: aload_0
       1: invokespecial #76                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.simpleCache:()Z
       4: ireturn

  public org.infinispan.configuration.cache.ConfigurationChildBuilder simpleCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #77                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.simpleCache:(Z)Lorg/infinispan/configuration/cache/ConfigurationChildBuilder;
       5: areturn

  public org.infinispan.configuration.cache.ConfigurationChildBuilder template(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #78                 // Method org/infinispan/configuration/cache/AbstractConfigurationChildBuilder.template:(Z)Lorg/infinispan/configuration/cache/ConfigurationChildBuilder;
       5: areturn

  public org.infinispan.commons.configuration.Builder read(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class org/infinispan/configuration/cache/EvictionConfiguration
       5: invokevirtual #79                 // Method read:(Lorg/infinispan/configuration/cache/EvictionConfiguration;)Lorg/infinispan/configuration/cache/EvictionConfigurationBuilder;
       8: areturn

  public java.lang.Object create();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method create:()Lorg/infinispan/configuration/cache/EvictionConfiguration;
       4: areturn

  static {};
    Code:
       0: ldc           #36                 // class org/infinispan/configuration/cache/EvictionConfigurationBuilder
       2: invokestatic  #81                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #22                 // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
