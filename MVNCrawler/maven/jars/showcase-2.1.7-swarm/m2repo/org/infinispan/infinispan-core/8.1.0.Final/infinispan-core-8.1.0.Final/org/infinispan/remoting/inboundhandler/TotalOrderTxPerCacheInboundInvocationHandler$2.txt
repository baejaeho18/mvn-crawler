Compiled from "TotalOrderTxPerCacheInboundInvocationHandler.java"
class org.infinispan.remoting.inboundhandler.TotalOrderTxPerCacheInboundInvocationHandler$2 extends org.infinispan.remoting.inboundhandler.BaseBlockingRunnable {
  final org.infinispan.remoting.inboundhandler.TotalOrderTxPerCacheInboundInvocationHandler this$0;

  org.infinispan.remoting.inboundhandler.TotalOrderTxPerCacheInboundInvocationHandler$2(org.infinispan.remoting.inboundhandler.TotalOrderTxPerCacheInboundInvocationHandler, org.infinispan.remoting.inboundhandler.BasePerCacheInboundInvocationHandler, org.infinispan.commands.remote.CacheRpcCommand, org.infinispan.remoting.inboundhandler.Reply);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/infinispan/remoting/inboundhandler/TotalOrderTxPerCacheInboundInvocationHandler;
       5: aload_0
       6: aload_2
       7: aload_3
       8: aload         4
      10: invokespecial #2                  // Method org/infinispan/remoting/inboundhandler/BaseBlockingRunnable."<init>":(Lorg/infinispan/remoting/inboundhandler/BasePerCacheInboundInvocationHandler;Lorg/infinispan/commands/remote/CacheRpcCommand;Lorg/infinispan/remoting/inboundhandler/Reply;)V
      13: return

  public boolean isReady();
    Code:
       0: iconst_1
       1: ireturn

  protected void onFinally();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/infinispan/remoting/inboundhandler/TotalOrderTxPerCacheInboundInvocationHandler;
       4: getfield      #3                  // Field org/infinispan/remoting/inboundhandler/TotalOrderTxPerCacheInboundInvocationHandler.remoteCommandsExecutor:Lorg/infinispan/util/concurrent/BlockingTaskAwareExecutorService;
       7: invokeinterface #4,  1            // InterfaceMethod org/infinispan/util/concurrent/BlockingTaskAwareExecutorService.checkForReadyTasks:()V
      12: return
}
