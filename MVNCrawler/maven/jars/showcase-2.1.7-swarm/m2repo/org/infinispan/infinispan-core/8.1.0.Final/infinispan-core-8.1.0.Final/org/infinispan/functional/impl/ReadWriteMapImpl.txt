Compiled from "ReadWriteMapImpl.java"
public final class org.infinispan.functional.impl.ReadWriteMapImpl<K, V> extends org.infinispan.functional.impl.AbstractFunctionalMap<K, V> implements org.infinispan.commons.api.functional.FunctionalMap$ReadWriteMap<K, V> {
  private static final org.infinispan.util.logging.Log log;

  private final org.infinispan.functional.impl.Params params;

  private org.infinispan.functional.impl.ReadWriteMapImpl(org.infinispan.functional.impl.Params, org.infinispan.functional.impl.FunctionalMapImpl<K, V>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/infinispan/functional/impl/AbstractFunctionalMap."<init>":(Lorg/infinispan/functional/impl/FunctionalMapImpl;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      10: return

  public static <K, V> org.infinispan.commons.api.functional.FunctionalMap$ReadWriteMap<K, V> create(org.infinispan.functional.impl.FunctionalMapImpl<K, V>);
    Code:
       0: new           #3                  // class org/infinispan/functional/impl/ReadWriteMapImpl
       3: dup
       4: aload_0
       5: getfield      #4                  // Field org/infinispan/functional/impl/FunctionalMapImpl.params:Lorg/infinispan/functional/impl/Params;
       8: getfield      #5                  // Field org/infinispan/functional/impl/Params.params:[Lorg/infinispan/commons/api/functional/Param;
      11: invokestatic  #6                  // Method org/infinispan/functional/impl/Params.from:([Lorg/infinispan/commons/api/functional/Param;)Lorg/infinispan/functional/impl/Params;
      14: aload_0
      15: invokespecial #7                  // Method "<init>":(Lorg/infinispan/functional/impl/Params;Lorg/infinispan/functional/impl/FunctionalMapImpl;)V
      18: areturn

  private static <K, V> org.infinispan.commons.api.functional.FunctionalMap$ReadWriteMap<K, V> create(org.infinispan.functional.impl.Params, org.infinispan.functional.impl.FunctionalMapImpl<K, V>);
    Code:
       0: new           #3                  // class org/infinispan/functional/impl/ReadWriteMapImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method "<init>":(Lorg/infinispan/functional/impl/Params;Lorg/infinispan/functional/impl/FunctionalMapImpl;)V
       9: areturn

  public <R> java.util.concurrent.CompletableFuture<R> eval(K, java.util.function.Function<org.infinispan.commons.api.functional.EntryView$ReadWriteEntryView<K, V>, R>);
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #9                  // String Invoked eval(k=%s, %s)
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      10: invokeinterface #10,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      19: iconst_0
      20: invokevirtual #12                 // Method org/infinispan/functional/impl/Params.get:(I)Lorg/infinispan/commons/api/functional/Param;
      23: astore_3
      24: aload_0
      25: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      28: invokevirtual #14                 // Method org/infinispan/functional/impl/FunctionalMapImpl.cmdFactory:()Lorg/infinispan/commands/CommandsFactory;
      31: aload_1
      32: aload_2
      33: aload_0
      34: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      37: invokeinterface #15,  4           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildReadWriteKeyCommand:(Ljava/lang/Object;Ljava/util/function/Function;Lorg/infinispan/functional/impl/Params;)Lorg/infinispan/commands/functional/ReadWriteKeyCommand;
      42: astore        4
      44: aload_0
      45: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      48: invokevirtual #16                 // Method org/infinispan/functional/impl/FunctionalMapImpl.invCtxFactory:()Lorg/infinispan/context/InvocationContextFactory;
      51: iconst_1
      52: iconst_1
      53: invokeinterface #17,  3           // InterfaceMethod org/infinispan/context/InvocationContextFactory.createInvocationContext:(ZI)Lorg/infinispan/context/InvocationContext;
      58: astore        5
      60: aload         5
      62: aload         4
      64: invokevirtual #18                 // Method org/infinispan/commands/functional/ReadWriteKeyCommand.getKeyLockOwner:()Ljava/lang/Object;
      67: invokeinterface #19,  2           // InterfaceMethod org/infinispan/context/InvocationContext.setLockOwner:(Ljava/lang/Object;)V
      72: aload_3
      73: aload_0
      74: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      77: invokevirtual #20                 // Method org/infinispan/functional/impl/FunctionalMapImpl.asyncExec:()Ljava/util/concurrent/ExecutorService;
      80: aload_0
      81: aload         5
      83: aload         4
      85: invokedynamic #21,  0             // InvokeDynamic #0:get:(Lorg/infinispan/functional/impl/ReadWriteMapImpl;Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/functional/ReadWriteKeyCommand;)Ljava/util/function/Supplier;
      90: invokestatic  #22                 // Method org/infinispan/functional/impl/Params.withFuture:(Lorg/infinispan/commons/api/functional/Param;Ljava/util/concurrent/ExecutorService;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
      93: areturn

  public <R> java.util.concurrent.CompletableFuture<R> eval(K, V, java.util.function.BiFunction<V, org.infinispan.commons.api.functional.EntryView$ReadWriteEntryView<K, V>, R>);
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #23                 // String Invoked eval(k=%s, v=%s, %s)
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      11: invokeinterface #24,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      20: iconst_0
      21: invokevirtual #12                 // Method org/infinispan/functional/impl/Params.get:(I)Lorg/infinispan/commons/api/functional/Param;
      24: astore        4
      26: aload_0
      27: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      30: invokevirtual #14                 // Method org/infinispan/functional/impl/FunctionalMapImpl.cmdFactory:()Lorg/infinispan/commands/CommandsFactory;
      33: aload_1
      34: aload_2
      35: aload_3
      36: aload_0
      37: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      40: invokeinterface #25,  5           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildReadWriteKeyValueCommand:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;Lorg/infinispan/functional/impl/Params;)Lorg/infinispan/commands/functional/ReadWriteKeyValueCommand;
      45: astore        5
      47: aload_0
      48: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      51: invokevirtual #16                 // Method org/infinispan/functional/impl/FunctionalMapImpl.invCtxFactory:()Lorg/infinispan/context/InvocationContextFactory;
      54: iconst_1
      55: iconst_1
      56: invokeinterface #17,  3           // InterfaceMethod org/infinispan/context/InvocationContextFactory.createInvocationContext:(ZI)Lorg/infinispan/context/InvocationContext;
      61: astore        6
      63: aload         6
      65: aload         5
      67: invokevirtual #26                 // Method org/infinispan/commands/functional/ReadWriteKeyValueCommand.getKeyLockOwner:()Ljava/lang/Object;
      70: invokeinterface #19,  2           // InterfaceMethod org/infinispan/context/InvocationContext.setLockOwner:(Ljava/lang/Object;)V
      75: aload         4
      77: aload_0
      78: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      81: invokevirtual #20                 // Method org/infinispan/functional/impl/FunctionalMapImpl.asyncExec:()Ljava/util/concurrent/ExecutorService;
      84: aload_0
      85: aload         6
      87: aload         5
      89: invokedynamic #27,  0             // InvokeDynamic #1:get:(Lorg/infinispan/functional/impl/ReadWriteMapImpl;Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/functional/ReadWriteKeyValueCommand;)Ljava/util/function/Supplier;
      94: invokestatic  #22                 // Method org/infinispan/functional/impl/Params.withFuture:(Lorg/infinispan/commons/api/functional/Param;Ljava/util/concurrent/ExecutorService;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
      97: areturn

  public <R> org.infinispan.commons.api.functional.Traversable<R> evalMany(java.util.Map<? extends K, ? extends V>, java.util.function.BiFunction<V, org.infinispan.commons.api.functional.EntryView$ReadWriteEntryView<K, V>, R>);
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #28                 // String Invoked evalMany(entries=%s, %s)
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      10: invokeinterface #10,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      19: iconst_0
      20: invokevirtual #12                 // Method org/infinispan/functional/impl/Params.get:(I)Lorg/infinispan/commons/api/functional/Param;
      23: astore_3
      24: aload_0
      25: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      28: invokevirtual #14                 // Method org/infinispan/functional/impl/FunctionalMapImpl.cmdFactory:()Lorg/infinispan/commands/CommandsFactory;
      31: aload_1
      32: aload_2
      33: invokeinterface #29,  3           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildReadWriteManyEntriesCommand:(Ljava/util/Map;Ljava/util/function/BiFunction;)Lorg/infinispan/commands/functional/ReadWriteManyEntriesCommand;
      38: astore        4
      40: aload_0
      41: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      44: invokevirtual #16                 // Method org/infinispan/functional/impl/FunctionalMapImpl.invCtxFactory:()Lorg/infinispan/context/InvocationContextFactory;
      47: iconst_1
      48: aload_1
      49: invokeinterface #30,  1           // InterfaceMethod java/util/Map.size:()I
      54: invokeinterface #17,  3           // InterfaceMethod org/infinispan/context/InvocationContextFactory.createInvocationContext:(ZI)Lorg/infinispan/context/InvocationContext;
      59: astore        5
      61: aload_0
      62: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      65: invokevirtual #31                 // Method org/infinispan/functional/impl/FunctionalMapImpl.chain:()Lorg/infinispan/interceptors/InterceptorChain;
      68: aload         5
      70: aload         4
      72: invokevirtual #32                 // Method org/infinispan/interceptors/InterceptorChain.invoke:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      75: checkcast     #33                 // class java/util/List
      78: invokeinterface #34,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      83: invokestatic  #35                 // Method org/infinispan/functional/impl/Traversables.of:(Ljava/util/stream/Stream;)Lorg/infinispan/commons/api/functional/Traversable;
      86: areturn

  public <R> org.infinispan.commons.api.functional.Traversable<R> evalMany(java.util.Set<? extends K>, java.util.function.Function<org.infinispan.commons.api.functional.EntryView$ReadWriteEntryView<K, V>, R>);
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #36                 // String Invoked evalMany(keys=%s, %s)
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      10: invokeinterface #10,  4           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      19: iconst_0
      20: invokevirtual #12                 // Method org/infinispan/functional/impl/Params.get:(I)Lorg/infinispan/commons/api/functional/Param;
      23: astore_3
      24: aload_0
      25: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      28: invokevirtual #14                 // Method org/infinispan/functional/impl/FunctionalMapImpl.cmdFactory:()Lorg/infinispan/commands/CommandsFactory;
      31: aload_1
      32: aload_2
      33: invokeinterface #37,  3           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildReadWriteManyCommand:(Ljava/util/Set;Ljava/util/function/Function;)Lorg/infinispan/commands/functional/ReadWriteManyCommand;
      38: astore        4
      40: aload_0
      41: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      44: invokevirtual #16                 // Method org/infinispan/functional/impl/FunctionalMapImpl.invCtxFactory:()Lorg/infinispan/context/InvocationContextFactory;
      47: iconst_1
      48: aload_1
      49: invokeinterface #38,  1           // InterfaceMethod java/util/Set.size:()I
      54: invokeinterface #17,  3           // InterfaceMethod org/infinispan/context/InvocationContextFactory.createInvocationContext:(ZI)Lorg/infinispan/context/InvocationContext;
      59: astore        5
      61: aload_0
      62: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      65: invokevirtual #31                 // Method org/infinispan/functional/impl/FunctionalMapImpl.chain:()Lorg/infinispan/interceptors/InterceptorChain;
      68: aload         5
      70: aload         4
      72: invokevirtual #32                 // Method org/infinispan/interceptors/InterceptorChain.invoke:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      75: checkcast     #33                 // class java/util/List
      78: invokeinterface #34,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      83: invokestatic  #35                 // Method org/infinispan/functional/impl/Traversables.of:(Ljava/util/stream/Stream;)Lorg/infinispan/commons/api/functional/Traversable;
      86: areturn

  public <R> org.infinispan.commons.api.functional.Traversable<R> evalAll(java.util.function.Function<org.infinispan.commons.api.functional.EntryView$ReadWriteEntryView<K, V>, R>);
    Code:
       0: getstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       3: ldc           #39                 // String Invoked evalAll(%s)
       5: aload_0
       6: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
       9: invokeinterface #40,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      18: iconst_0
      19: invokevirtual #12                 // Method org/infinispan/functional/impl/Params.get:(I)Lorg/infinispan/commons/api/functional/Param;
      22: astore_2
      23: aload_0
      24: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      27: getfield      #41                 // Field org/infinispan/functional/impl/FunctionalMapImpl.cache:Lorg/infinispan/AdvancedCache;
      30: invokeinterface #42,  1           // InterfaceMethod org/infinispan/AdvancedCache.keySet:()Lorg/infinispan/CacheSet;
      35: astore_3
      36: aload_0
      37: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      40: invokevirtual #14                 // Method org/infinispan/functional/impl/FunctionalMapImpl.cmdFactory:()Lorg/infinispan/commands/CommandsFactory;
      43: aload_3
      44: aload_1
      45: invokeinterface #37,  3           // InterfaceMethod org/infinispan/commands/CommandsFactory.buildReadWriteManyCommand:(Ljava/util/Set;Ljava/util/function/Function;)Lorg/infinispan/commands/functional/ReadWriteManyCommand;
      50: astore        4
      52: aload_0
      53: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      56: invokevirtual #16                 // Method org/infinispan/functional/impl/FunctionalMapImpl.invCtxFactory:()Lorg/infinispan/context/InvocationContextFactory;
      59: iconst_1
      60: aload_3
      61: invokeinterface #43,  1           // InterfaceMethod org/infinispan/commons/util/CloseableIteratorSet.size:()I
      66: invokeinterface #17,  3           // InterfaceMethod org/infinispan/context/InvocationContextFactory.createInvocationContext:(ZI)Lorg/infinispan/context/InvocationContext;
      71: astore        5
      73: aload_0
      74: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      77: invokevirtual #31                 // Method org/infinispan/functional/impl/FunctionalMapImpl.chain:()Lorg/infinispan/interceptors/InterceptorChain;
      80: aload         5
      82: aload         4
      84: invokevirtual #32                 // Method org/infinispan/interceptors/InterceptorChain.invoke:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      87: checkcast     #33                 // class java/util/List
      90: invokeinterface #34,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      95: invokestatic  #35                 // Method org/infinispan/functional/impl/Traversables.of:(Ljava/util/stream/Stream;)Lorg/infinispan/commons/api/functional/Traversable;
      98: areturn

  public org.infinispan.commons.api.functional.Listeners$ReadWriteListeners<K, V> listeners();
    Code:
       0: aload_0
       1: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
       4: invokevirtual #44                 // Method org/infinispan/functional/impl/FunctionalMapImpl.notifier:()Lorg/infinispan/functional/impl/FunctionalNotifier;
       7: areturn

  public org.infinispan.commons.api.functional.FunctionalMap$ReadWriteMap<K, V> withParams(org.infinispan.commons.api.functional.Param<?>...);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aload_0
      10: areturn
      11: aload_0
      12: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      15: aload_1
      16: invokevirtual #45                 // Method org/infinispan/functional/impl/Params.containsAll:([Lorg/infinispan/commons/api/functional/Param;)Z
      19: ifeq          24
      22: aload_0
      23: areturn
      24: aload_0
      25: getfield      #2                  // Field params:Lorg/infinispan/functional/impl/Params;
      28: aload_1
      29: invokevirtual #46                 // Method org/infinispan/functional/impl/Params.addAll:([Lorg/infinispan/commons/api/functional/Param;)Lorg/infinispan/functional/impl/Params;
      32: aload_0
      33: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
      36: invokestatic  #47                 // Method create:(Lorg/infinispan/functional/impl/Params;Lorg/infinispan/functional/impl/FunctionalMapImpl;)Lorg/infinispan/commons/api/functional/FunctionalMap$ReadWriteMap;
      39: areturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #48                 // Method org/infinispan/functional/impl/AbstractFunctionalMap.close:()V
       4: return

  public org.infinispan.commons.api.functional.Status getStatus();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method org/infinispan/functional/impl/AbstractFunctionalMap.getStatus:()Lorg/infinispan/commons/api/functional/Status;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method org/infinispan/functional/impl/AbstractFunctionalMap.getName:()Ljava/lang/String;
       4: areturn

  public org.infinispan.commons.api.functional.FunctionalMap withParams(org.infinispan.commons.api.functional.Param[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method withParams:([Lorg/infinispan/commons/api/functional/Param;)Lorg/infinispan/commons/api/functional/FunctionalMap$ReadWriteMap;
       5: areturn

  private java.lang.Object lambda$eval$52(org.infinispan.context.InvocationContext, org.infinispan.commands.functional.ReadWriteKeyValueCommand);
    Code:
       0: aload_0
       1: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
       4: invokevirtual #31                 // Method org/infinispan/functional/impl/FunctionalMapImpl.chain:()Lorg/infinispan/interceptors/InterceptorChain;
       7: aload_1
       8: aload_2
       9: invokevirtual #32                 // Method org/infinispan/interceptors/InterceptorChain.invoke:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      12: areturn

  private java.lang.Object lambda$eval$51(org.infinispan.context.InvocationContext, org.infinispan.commands.functional.ReadWriteKeyCommand);
    Code:
       0: aload_0
       1: getfield      #13                 // Field fmap:Lorg/infinispan/functional/impl/FunctionalMapImpl;
       4: invokevirtual #31                 // Method org/infinispan/functional/impl/FunctionalMapImpl.chain:()Lorg/infinispan/interceptors/InterceptorChain;
       7: aload_1
       8: aload_2
       9: invokevirtual #32                 // Method org/infinispan/interceptors/InterceptorChain.invoke:(Lorg/infinispan/context/InvocationContext;Lorg/infinispan/commands/VisitableCommand;)Ljava/lang/Object;
      12: areturn

  static {};
    Code:
       0: ldc           #3                  // class org/infinispan/functional/impl/ReadWriteMapImpl
       2: invokestatic  #52                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #8                  // Field log:Lorg/infinispan/util/logging/Log;
       8: return
}
