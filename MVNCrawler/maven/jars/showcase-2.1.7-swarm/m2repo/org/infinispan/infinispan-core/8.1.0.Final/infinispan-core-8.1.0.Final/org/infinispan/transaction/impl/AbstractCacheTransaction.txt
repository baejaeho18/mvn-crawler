Compiled from "AbstractCacheTransaction.java"
public abstract class org.infinispan.transaction.impl.AbstractCacheTransaction implements org.infinispan.transaction.xa.CacheTransaction {
  protected final org.infinispan.transaction.xa.GlobalTransaction tx;

  private static org.infinispan.util.logging.Log log;

  private static final boolean trace;

  private static final int INITIAL_LOCK_CAPACITY;

  protected volatile boolean hasLocalOnlyModifications;

  protected volatile java.util.List<org.infinispan.commands.write.WriteCommand> modifications;

  protected java.util.Map<java.lang.Object, org.infinispan.container.entries.CacheEntry> lookedUpEntries;

  protected java.util.Set<java.lang.Object> affectedKeys;

  protected volatile java.util.Set<java.lang.Object> lockedKeys;

  protected volatile java.util.Set<java.lang.Object> backupKeyLocks;

  protected final int topologyId;

  private org.infinispan.container.versioning.EntryVersionsMap updatedEntryVersions;

  private org.infinispan.container.versioning.EntryVersionsMap versionsSeenMap;

  private org.infinispan.container.versioning.EntryVersionsMap lookedUpRemoteVersions;

  private volatile boolean isMarkedForRollback;

  private final long txCreationTime;

  protected final org.infinispan.commons.equivalence.Equivalence<java.lang.Object> keyEquivalence;

  private volatile org.infinispan.context.Flag stateTransferFlag;

  private final java.util.concurrent.CompletableFuture<java.lang.Void> txCompleted;

  private volatile java.util.concurrent.CompletableFuture<java.lang.Void> backupLockReleased;

  public final boolean isMarkedForRollback();
    Code:
       0: aload_0
       1: getfield      #1                  // Field isMarkedForRollback:Z
       4: ireturn

  public void markForRollback(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field isMarkedForRollback:Z
       5: return

  public org.infinispan.transaction.impl.AbstractCacheTransaction(org.infinispan.transaction.xa.GlobalTransaction, int, org.infinispan.commons.equivalence.Equivalence<java.lang.Object>, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field affectedKeys:Ljava/util/Set;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field lockedKeys:Ljava/util/Set;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      19: aload_0
      20: aload_1
      21: putfield      #6                  // Field tx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      24: aload_0
      25: iload_2
      26: putfield      #7                  // Field topologyId:I
      29: aload_0
      30: aload_3
      31: putfield      #8                  // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      34: aload_0
      35: lload         4
      37: putfield      #9                  // Field txCreationTime:J
      40: aload_0
      41: new           #10                 // class java/util/concurrent/CompletableFuture
      44: dup
      45: invokespecial #11                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      48: putfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
      51: aload_0
      52: new           #10                 // class java/util/concurrent/CompletableFuture
      55: dup
      56: invokespecial #11                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      59: putfield      #13                 // Field backupLockReleased:Ljava/util/concurrent/CompletableFuture;
      62: return

  public org.infinispan.transaction.xa.GlobalTransaction getGlobalTransaction();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tx:Lorg/infinispan/transaction/xa/GlobalTransaction;
       4: areturn

  public final java.util.List<org.infinispan.commands.write.WriteCommand> getModifications();
    Code:
       0: aload_0
       1: getfield      #14                 // Field hasLocalOnlyModifications:Z
       4: ifeq          38
       7: aload_0
       8: getfield      #15                 // Field modifications:Ljava/util/List;
      11: invokeinterface #16,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      16: invokedynamic #17,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      21: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      26: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #21                 // class java/util/List
      37: areturn
      38: aload_0
      39: invokevirtual #22                 // Method getAllModifications:()Ljava/util/List;
      42: areturn

  public final java.util.List<org.infinispan.commands.write.WriteCommand> getAllModifications();
    Code:
       0: aload_0
       1: getfield      #15                 // Field modifications:Ljava/util/List;
       4: instanceof    #23                 // class org/infinispan/commons/util/ImmutableListCopy
       7: ifeq          15
      10: aload_0
      11: getfield      #15                 // Field modifications:Ljava/util/List;
      14: areturn
      15: aload_0
      16: getfield      #15                 // Field modifications:Ljava/util/List;
      19: ifnonnull     26
      22: invokestatic  #24                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
      25: areturn
      26: aload_0
      27: getfield      #15                 // Field modifications:Ljava/util/List;
      30: invokestatic  #25                 // Method org/infinispan/commons/util/Immutables.immutableListCopy:(Ljava/util/List;)Ljava/util/List;
      33: areturn

  public final void setModifications(java.util.List<org.infinispan.commands.write.WriteCommand>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #26                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #27                 // String modification list cannot be null
      10: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #29                 // class java/util/ArrayList
      17: dup
      18: invokespecial #30                 // Method java/util/ArrayList."<init>":()V
      21: astore_2
      22: aload_1
      23: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          79
      38: aload_3
      39: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #34                 // class org/infinispan/commands/write/WriteCommand
      47: astore        4
      49: aload         4
      51: getstatic     #35                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
      54: invokeinterface #36,  2           // InterfaceMethod org/infinispan/commands/write/WriteCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
      59: ifeq          67
      62: aload_0
      63: iconst_1
      64: putfield      #14                 // Field hasLocalOnlyModifications:Z
      67: aload_2
      68: aload         4
      70: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      75: pop
      76: goto          29
      79: aload_0
      80: aload_2
      81: invokestatic  #38                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      84: putfield      #15                 // Field modifications:Ljava/util/List;
      87: return

  public final boolean hasModification(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field modifications:Ljava/util/List;
       4: ifnull        52
       7: aload_0
       8: invokevirtual #39                 // Method getModifications:()Ljava/util/List;
      11: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          52
      26: aload_2
      27: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #34                 // class org/infinispan/commands/write/WriteCommand
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      44: ifeq          49
      47: iconst_1
      48: ireturn
      49: goto          17
      52: iconst_0
      53: ireturn

  public void freezeModifications();
    Code:
       0: aload_0
       1: getfield      #15                 // Field modifications:Ljava/util/List;
       4: ifnull        21
       7: aload_0
       8: aload_0
       9: getfield      #15                 // Field modifications:Ljava/util/List;
      12: invokestatic  #25                 // Method org/infinispan/commons/util/Immutables.immutableListCopy:(Ljava/util/List;)Ljava/util/List;
      15: putfield      #15                 // Field modifications:Ljava/util/List;
      18: goto          28
      21: aload_0
      22: invokestatic  #24                 // Method org/infinispan/commons/util/InfinispanCollections.emptyList:()Ljava/util/List;
      25: putfield      #15                 // Field modifications:Ljava/util/List;
      28: return

  public java.util.Map<java.lang.Object, org.infinispan.container.entries.CacheEntry> getLookedUpEntries();
    Code:
       0: aload_0
       1: getfield      #42                 // Field lookedUpEntries:Ljava/util/Map;
       4: areturn

  public org.infinispan.container.entries.CacheEntry lookupEntry(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #42                 // Field lookedUpEntries:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #42                 // Field lookedUpEntries:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #44                 // class org/infinispan/container/entries/CacheEntry
      22: areturn

  public void removeLookedUpEntry(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #42                 // Field lookedUpEntries:Ljava/util/Map;
       4: ifnull        18
       7: aload_0
       8: getfield      #42                 // Field lookedUpEntries:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #45,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public void clearLookedUpEntries();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #42                 // Field lookedUpEntries:Ljava/util/Map;
       5: return

  public boolean ownsLock(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getLockedKeys:()Ljava/util/Set;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public void notifyOnTransactionFinished();
    Code:
       0: getstatic     #48                 // Field trace:Z
       3: ifeq          20
       6: getstatic     #49                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #50                 // String Transaction %s has completed, notifying listening threads.
      11: aload_0
      12: getfield      #6                  // Field tx:Lorg/infinispan/transaction/xa/GlobalTransaction;
      15: invokeinterface #51,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      20: aload_0
      21: getfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
      24: invokevirtual #52                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
      27: ifne          43
      30: aload_0
      31: getfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
      34: aconst_null
      35: invokevirtual #53                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: invokevirtual #54                 // Method cleanupBackupLocks:()V
      43: return

  public final boolean waitForLockRelease(long) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
       4: lload_1
       5: getstatic     #55                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokestatic  #56                 // Method org/infinispan/util/concurrent/CompletableFutures.await:(Ljava/util/concurrent/CompletableFuture;JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public int getTopologyId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field topologyId:I
       4: ireturn

  public void addBackupLockForKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
       4: ifnonnull     22
       7: aload_0
       8: new           #57                 // class java/util/HashSet
      11: dup
      12: iconst_4
      13: invokespecial #59                 // Method java/util/HashSet."<init>":(I)V
      16: invokestatic  #60                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      19: putfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      22: aload_0
      23: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      26: aload_1
      27: invokeinterface #61,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      32: pop
      33: return

  public void registerLockedKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lockedKeys:Ljava/util/Set;
       4: ifnonnull     22
       7: aload_0
       8: iconst_4
       9: aload_0
      10: getfield      #8                  // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      13: invokestatic  #62                 // Method org/infinispan/commons/util/CollectionFactory.makeSet:(ILorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/Set;
      16: invokestatic  #60                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      19: putfield      #4                  // Field lockedKeys:Ljava/util/Set;
      22: getstatic     #48                 // Field trace:Z
      25: ifeq          42
      28: getstatic     #49                 // Field log:Lorg/infinispan/util/logging/Log;
      31: ldc           #63                 // String Registering locked key: %s
      33: aload_1
      34: invokestatic  #64                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/lang/Object;)Ljava/lang/String;
      37: invokeinterface #51,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      42: aload_0
      43: getfield      #4                  // Field lockedKeys:Ljava/util/Set;
      46: aload_1
      47: invokeinterface #61,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: return

  public java.util.Set<java.lang.Object> getLockedKeys();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lockedKeys:Ljava/util/Set;
       4: ifnonnull     13
       7: invokestatic  #65                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      10: goto          17
      13: aload_0
      14: getfield      #4                  // Field lockedKeys:Ljava/util/Set;
      17: areturn

  public java.util.Set<java.lang.Object> getBackupLockedKeys();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
       4: ifnonnull     13
       7: invokestatic  #65                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      10: goto          17
      13: aload_0
      14: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      17: areturn

  public void clearLockedKeys();
    Code:
       0: getstatic     #48                 // Field trace:Z
       3: ifeq          23
       6: getstatic     #49                 // Field log:Lorg/infinispan/util/logging/Log;
       9: ldc           #66                 // String Clearing locked keys: %s
      11: aload_0
      12: getfield      #4                  // Field lockedKeys:Ljava/util/Set;
      15: invokestatic  #67                 // Method org/infinispan/commons/util/Util.toStr:(Ljava/util/Collection;)Ljava/lang/String;
      18: invokeinterface #51,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      23: aload_0
      24: aconst_null
      25: putfield      #4                  // Field lockedKeys:Ljava/util/Set;
      28: return

  public boolean containsLockOrBackupLock(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getLockedKeys:()Ljava/util/Set;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifne          26
      13: aload_0
      14: invokevirtual #68                 // Method getBackupLockedKeys:()Ljava/util/Set;
      17: aload_1
      18: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public java.lang.Object findAnyLockedOrBackupLocked(java.util.Collection<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getLockedKeys:()Ljava/util/Set;
       4: astore_2
       5: aload_0
       6: invokevirtual #68                 // Method getBackupLockedKeys:()Ljava/util/Set;
       9: astore_3
      10: aload_1
      11: invokeinterface #69,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          65
      28: aload         4
      30: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: astore        5
      37: aload_2
      38: aload         5
      40: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      45: ifne          59
      48: aload_3
      49: aload         5
      51: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      56: ifeq          62
      59: aload         5
      61: areturn
      62: goto          18
      65: aconst_null
      66: areturn

  public boolean areLocksReleased();
    Code:
       0: aload_0
       1: getfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
       4: invokevirtual #52                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
       7: ireturn

  public java.util.Set<java.lang.Object> getAffectedKeys();
    Code:
       0: aload_0
       1: getfield      #3                  // Field affectedKeys:Ljava/util/Set;
       4: ifnonnull     13
       7: invokestatic  #65                 // Method org/infinispan/commons/util/InfinispanCollections.emptySet:()Ljava/util/Set;
      10: goto          17
      13: aload_0
      14: getfield      #3                  // Field affectedKeys:Ljava/util/Set;
      17: areturn

  public void addAffectedKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #70                 // Method initAffectedKeys:()V
       4: aload_0
       5: getfield      #3                  // Field affectedKeys:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #61,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void addAllAffectedKeys(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokespecial #70                 // Method initAffectedKeys:()V
       4: aload_0
       5: getfield      #3                  // Field affectedKeys:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #71,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      14: pop
      15: return

  private void initAffectedKeys();
    Code:
       0: aload_0
       1: getfield      #3                  // Field affectedKeys:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: iconst_4
       9: aload_0
      10: getfield      #8                  // Field keyEquivalence:Lorg/infinispan/commons/equivalence/Equivalence;
      13: invokestatic  #62                 // Method org/infinispan/commons/util/CollectionFactory.makeSet:(ILorg/infinispan/commons/equivalence/Equivalence;)Ljava/util/Set;
      16: putfield      #3                  // Field affectedKeys:Ljava/util/Set;
      19: return

  public org.infinispan.container.versioning.EntryVersionsMap getUpdatedEntryVersions();
    Code:
       0: aload_0
       1: getfield      #72                 // Field updatedEntryVersions:Lorg/infinispan/container/versioning/EntryVersionsMap;
       4: areturn

  public void setUpdatedEntryVersions(org.infinispan.container.versioning.EntryVersionsMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field updatedEntryVersions:Lorg/infinispan/container/versioning/EntryVersionsMap;
       5: return

  public org.infinispan.container.versioning.EntryVersion getLookedUpRemoteVersion(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #73                 // Field lookedUpRemoteVersions:Lorg/infinispan/container/versioning/EntryVersionsMap;
       4: ifnull        21
       7: aload_0
       8: getfield      #73                 // Field lookedUpRemoteVersions:Lorg/infinispan/container/versioning/EntryVersionsMap;
      11: aload_1
      12: invokevirtual #74                 // Method org/infinispan/container/versioning/EntryVersionsMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #75                 // class org/infinispan/container/versioning/EntryVersion
      18: goto          22
      21: aconst_null
      22: areturn

  public void putLookedUpRemoteVersion(java.lang.Object, org.infinispan.container.versioning.EntryVersion);
    Code:
       0: aload_0
       1: getfield      #73                 // Field lookedUpRemoteVersions:Lorg/infinispan/container/versioning/EntryVersionsMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #76                 // class org/infinispan/container/versioning/EntryVersionsMap
      11: dup
      12: invokespecial #77                 // Method org/infinispan/container/versioning/EntryVersionsMap."<init>":()V
      15: putfield      #73                 // Field lookedUpRemoteVersions:Lorg/infinispan/container/versioning/EntryVersionsMap;
      18: aload_0
      19: getfield      #73                 // Field lookedUpRemoteVersions:Lorg/infinispan/container/versioning/EntryVersionsMap;
      22: aload_1
      23: aload_2
      24: checkcast     #78                 // class org/infinispan/container/versioning/IncrementableEntryVersion
      27: invokevirtual #79                 // Method org/infinispan/container/versioning/EntryVersionsMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  public void addReadKey(java.lang.Object);
    Code:
       0: return

  public boolean keyRead(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public void addVersionRead(java.lang.Object, org.infinispan.container.versioning.EntryVersion);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
       9: ifnonnull     23
      12: aload_0
      13: new           #76                 // class org/infinispan/container/versioning/EntryVersionsMap
      16: dup
      17: invokespecial #77                 // Method org/infinispan/container/versioning/EntryVersionsMap."<init>":()V
      20: putfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
      23: aload_0
      24: getfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
      27: aload_1
      28: invokevirtual #81                 // Method org/infinispan/container/versioning/EntryVersionsMap.containsKey:(Ljava/lang/Object;)Z
      31: ifne          72
      34: getstatic     #48                 // Field trace:Z
      37: ifeq          59
      40: getstatic     #49                 // Field log:Lorg/infinispan/util/logging/Log;
      43: ldc           #82                 // String Transaction %s read %s with version %s
      45: aload_0
      46: invokevirtual #83                 // Method getGlobalTransaction:()Lorg/infinispan/transaction/xa/GlobalTransaction;
      49: invokevirtual #84                 // Method org/infinispan/transaction/xa/GlobalTransaction.globalId:()Ljava/lang/String;
      52: aload_1
      53: aload_2
      54: invokeinterface #85,  5           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      59: aload_0
      60: getfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
      63: aload_1
      64: aload_2
      65: checkcast     #78                 // class org/infinispan/container/versioning/IncrementableEntryVersion
      68: invokevirtual #79                 // Method org/infinispan/container/versioning/EntryVersionsMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: return

  public void replaceVersionRead(java.lang.Object, org.infinispan.container.versioning.EntryVersion);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
       9: ifnonnull     23
      12: aload_0
      13: new           #76                 // class org/infinispan/container/versioning/EntryVersionsMap
      16: dup
      17: invokespecial #77                 // Method org/infinispan/container/versioning/EntryVersionsMap."<init>":()V
      20: putfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
      23: aload_0
      24: getfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
      27: aload_1
      28: aload_2
      29: checkcast     #78                 // class org/infinispan/container/versioning/IncrementableEntryVersion
      32: invokevirtual #79                 // Method org/infinispan/container/versioning/EntryVersionsMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #75                 // class org/infinispan/container/versioning/EntryVersion
      38: astore_3
      39: getstatic     #48                 // Field trace:Z
      42: ifeq          81
      45: getstatic     #49                 // Field log:Lorg/infinispan/util/logging/Log;
      48: ldc           #86                 // String Transaction %s replaced version for key %s. old=%s, new=%s
      50: iconst_4
      51: anewarray     #87                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_0
      57: invokevirtual #83                 // Method getGlobalTransaction:()Lorg/infinispan/transaction/xa/GlobalTransaction;
      60: invokevirtual #84                 // Method org/infinispan/transaction/xa/GlobalTransaction.globalId:()Ljava/lang/String;
      63: aastore
      64: dup
      65: iconst_1
      66: aload_1
      67: aastore
      68: dup
      69: iconst_2
      70: aload_3
      71: aastore
      72: dup
      73: iconst_3
      74: aload_2
      75: aastore
      76: invokeinterface #88,  3           // InterfaceMethod org/infinispan/util/logging/Log.tracef:(Ljava/lang/String;[Ljava/lang/Object;)V
      81: return

  public org.infinispan.container.versioning.EntryVersionsMap getVersionsRead();
    Code:
       0: aload_0
       1: getfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
       4: ifnonnull     17
       7: new           #76                 // class org/infinispan/container/versioning/EntryVersionsMap
      10: dup
      11: invokespecial #77                 // Method org/infinispan/container/versioning/EntryVersionsMap."<init>":()V
      14: goto          21
      17: aload_0
      18: getfield      #80                 // Field versionsSeenMap:Lorg/infinispan/container/versioning/EntryVersionsMap;
      21: areturn

  public final boolean isFromStateTransfer();
    Code:
       0: aload_0
       1: getfield      #89                 // Field stateTransferFlag:Lorg/infinispan/context/Flag;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final org.infinispan.context.Flag getStateTransferFlag();
    Code:
       0: aload_0
       1: getfield      #89                 // Field stateTransferFlag:Lorg/infinispan/context/Flag;
       4: areturn

  public abstract void setStateTransferFlag(org.infinispan.context.Flag);

  protected final void internalSetStateTransferFlag(org.infinispan.context.Flag);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field stateTransferFlag:Lorg/infinispan/context/Flag;
       5: return

  public long getCreationTime();
    Code:
       0: aload_0
       1: getfield      #9                  // Field txCreationTime:J
       4: lreturn

  public final void addListener(org.infinispan.transaction.xa.CacheTransaction$TransactionCompletedListener);
    Code:
       0: aload_0
       1: getfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
       4: aload_1
       5: dup
       6: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #90,  0             // InvokeDynamic #1:run:(Lorg/infinispan/transaction/xa/CacheTransaction$TransactionCompletedListener;)Ljava/lang/Runnable;
      15: invokevirtual #91                 // Method java/util/concurrent/CompletableFuture.thenRun:(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
      18: pop
      19: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> getReleaseFutureForKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lockedKeys:Ljava/util/Set;
       4: ifnull        25
       7: aload_0
       8: getfield      #4                  // Field lockedKeys:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          25
      20: aload_0
      21: getfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
      24: areturn
      25: aload_0
      26: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      29: ifnull        50
      32: aload_0
      33: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      36: aload_1
      37: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      42: ifeq          50
      45: aload_0
      46: getfield      #13                 // Field backupLockReleased:Ljava/util/concurrent/CompletableFuture;
      49: areturn
      50: aconst_null
      51: areturn

  public org.infinispan.util.KeyValuePair<java.lang.Object, java.util.concurrent.CompletableFuture<java.lang.Void>> getReleaseFutureForKeys(java.util.Collection<java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getLockedKeys:()Ljava/util/Set;
       4: astore_2
       5: aload_0
       6: invokevirtual #68                 // Method getBackupLockedKeys:()Ljava/util/Set;
       9: astore_3
      10: aconst_null
      11: astore        4
      13: aload_1
      14: invokeinterface #69,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore        5
      21: aload         5
      23: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          83
      31: aload         5
      33: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore        6
      40: aload_2
      41: aload         6
      43: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      48: ifeq          65
      51: new           #92                 // class org/infinispan/util/KeyValuePair
      54: dup
      55: aload         6
      57: aload_0
      58: getfield      #12                 // Field txCompleted:Ljava/util/concurrent/CompletableFuture;
      61: invokespecial #93                 // Method org/infinispan/util/KeyValuePair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      64: areturn
      65: aload_3
      66: aload         6
      68: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      73: ifeq          80
      76: aload         6
      78: astore        4
      80: goto          21
      83: aload         4
      85: ifnonnull     92
      88: aconst_null
      89: goto          105
      92: new           #92                 // class org/infinispan/util/KeyValuePair
      95: dup
      96: aload         4
      98: aload_0
      99: getfield      #13                 // Field backupLockReleased:Ljava/util/concurrent/CompletableFuture;
     102: invokespecial #93                 // Method org/infinispan/util/KeyValuePair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     105: areturn

  public void cleanupBackupLocks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
       4: ifnull        53
       7: aload_0
       8: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: getfield      #13                 // Field backupLockReleased:Ljava/util/concurrent/CompletableFuture;
      18: aconst_null
      19: invokevirtual #53                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: new           #10                 // class java/util/concurrent/CompletableFuture
      27: dup
      28: invokespecial #11                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      31: putfield      #13                 // Field backupLockReleased:Ljava/util/concurrent/CompletableFuture;
      34: aload_0
      35: getfield      #5                  // Field backupKeyLocks:Ljava/util/Set;
      38: invokeinterface #94,  1           // InterfaceMethod java/util/Set.clear:()V
      43: aload_1
      44: monitorexit
      45: goto          53
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
      53: return
    Exception table:
       from    to  target type
          14    45    48   any
          48    51    48   any

  private static boolean lambda$getModifications$2(org.infinispan.commands.write.WriteCommand);
    Code:
       0: aload_0
       1: getstatic     #35                 // Field org/infinispan/context/Flag.CACHE_MODE_LOCAL:Lorg/infinispan/context/Flag;
       4: invokeinterface #36,  2           // InterfaceMethod org/infinispan/commands/write/WriteCommand.hasFlag:(Lorg/infinispan/context/Flag;)Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  static {};
    Code:
       0: ldc           #58                 // class org/infinispan/transaction/impl/AbstractCacheTransaction
       2: invokestatic  #95                 // Method org/infinispan/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/infinispan/util/logging/Log;
       5: putstatic     #49                 // Field log:Lorg/infinispan/util/logging/Log;
       8: getstatic     #49                 // Field log:Lorg/infinispan/util/logging/Log;
      11: invokeinterface #96,  1           // InterfaceMethod org/infinispan/util/logging/Log.isTraceEnabled:()Z
      16: putstatic     #48                 // Field trace:Z
      19: return
}
