Compiled from "StreamReader.java"
public class org.yaml.snakeyaml.reader.StreamReader {
  public static final java.util.regex.Pattern NON_PRINTABLE;

  private java.lang.String name;

  private final java.io.Reader stream;

  private int pointer;

  private boolean eof;

  private java.lang.String buffer;

  private int index;

  private int line;

  private int column;

  private char[] data;

  public org.yaml.snakeyaml.reader.StreamReader(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field pointer:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field eof:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field index:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field line:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field column:I
      29: aload_0
      30: ldc           #7                  // String \'string\'
      32: putfield      #8                  // Field name:Ljava/lang/String;
      35: aload_0
      36: ldc           #9                  // String
      38: putfield      #10                 // Field buffer:Ljava/lang/String;
      41: aload_0
      42: aload_1
      43: invokevirtual #11                 // Method checkPrintable:(Ljava/lang/CharSequence;)V
      46: aload_0
      47: new           #12                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      54: aload_1
      55: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #15                 // String \u0000
      60: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: putfield      #10                 // Field buffer:Ljava/lang/String;
      69: aload_0
      70: aconst_null
      71: putfield      #17                 // Field stream:Ljava/io/Reader;
      74: aload_0
      75: iconst_1
      76: putfield      #3                  // Field eof:Z
      79: aload_0
      80: aconst_null
      81: putfield      #18                 // Field data:[C
      84: return

  public org.yaml.snakeyaml.reader.StreamReader(java.io.Reader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field pointer:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field eof:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field index:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field line:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field column:I
      29: aload_0
      30: ldc           #19                 // String \'reader\'
      32: putfield      #8                  // Field name:Ljava/lang/String;
      35: aload_0
      36: ldc           #9                  // String
      38: putfield      #10                 // Field buffer:Ljava/lang/String;
      41: aload_0
      42: aload_1
      43: putfield      #17                 // Field stream:Ljava/io/Reader;
      46: aload_0
      47: iconst_0
      48: putfield      #3                  // Field eof:Z
      51: aload_0
      52: sipush        1024
      55: newarray       char
      57: putfield      #18                 // Field data:[C
      60: aload_0
      61: invokespecial #20                 // Method update:()V
      64: return

  void checkPrintable(java.lang.CharSequence);
    Code:
       0: getstatic     #21                 // Field NON_PRINTABLE:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #23                 // Method java/util/regex/Matcher.find:()Z
      12: ifeq          61
      15: aload_0
      16: getfield      #4                  // Field index:I
      19: aload_0
      20: getfield      #10                 // Field buffer:Ljava/lang/String;
      23: invokevirtual #24                 // Method java/lang/String.length:()I
      26: iadd
      27: aload_0
      28: getfield      #2                  // Field pointer:I
      31: isub
      32: aload_2
      33: invokevirtual #25                 // Method java/util/regex/Matcher.start:()I
      36: iadd
      37: istore_3
      38: new           #26                 // class org/yaml/snakeyaml/reader/ReaderException
      41: dup
      42: aload_0
      43: getfield      #8                  // Field name:Ljava/lang/String;
      46: iload_3
      47: aload_2
      48: invokevirtual #27                 // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      51: iconst_0
      52: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
      55: ldc           #29                 // String special characters are not allowed
      57: invokespecial #30                 // Method org/yaml/snakeyaml/reader/ReaderException."<init>":(Ljava/lang/String;ICLjava/lang/String;)V
      60: athrow
      61: return

  void checkPrintable(char[], int, int);
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     72
       9: aload_1
      10: iload         4
      12: caload
      13: istore        5
      15: iload         5
      17: invokestatic  #31                 // Method isPrintable:(C)Z
      20: ifeq          26
      23: goto          66
      26: aload_0
      27: getfield      #4                  // Field index:I
      30: aload_0
      31: getfield      #10                 // Field buffer:Ljava/lang/String;
      34: invokevirtual #24                 // Method java/lang/String.length:()I
      37: iadd
      38: aload_0
      39: getfield      #2                  // Field pointer:I
      42: isub
      43: iload         4
      45: iadd
      46: istore        6
      48: new           #26                 // class org/yaml/snakeyaml/reader/ReaderException
      51: dup
      52: aload_0
      53: getfield      #8                  // Field name:Ljava/lang/String;
      56: iload         6
      58: iload         5
      60: ldc           #29                 // String special characters are not allowed
      62: invokespecial #30                 // Method org/yaml/snakeyaml/reader/ReaderException."<init>":(Ljava/lang/String;ICLjava/lang/String;)V
      65: athrow
      66: iinc          4, 1
      69: goto          3
      72: return

  public static boolean isPrintable(char);
    Code:
       0: iload_0
       1: bipush        32
       3: if_icmplt     12
       6: iload_0
       7: bipush        126
       9: if_icmple     62
      12: iload_0
      13: bipush        10
      15: if_icmpeq     62
      18: iload_0
      19: bipush        13
      21: if_icmpeq     62
      24: iload_0
      25: bipush        9
      27: if_icmpeq     62
      30: iload_0
      31: sipush        133
      34: if_icmpeq     62
      37: iload_0
      38: sipush        160
      41: if_icmplt     50
      44: iload_0
      45: ldc           #32                 // int 55295
      47: if_icmple     62
      50: iload_0
      51: ldc           #33                 // int 57344
      53: if_icmplt     66
      56: iload_0
      57: ldc           #34                 // int 65533
      59: if_icmpgt     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ireturn

  public org.yaml.snakeyaml.error.Mark getMark();
    Code:
       0: new           #35                 // class org/yaml/snakeyaml/error/Mark
       3: dup
       4: aload_0
       5: getfield      #8                  // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #4                  // Field index:I
      12: aload_0
      13: getfield      #5                  // Field line:I
      16: aload_0
      17: getfield      #6                  // Field column:I
      20: aload_0
      21: getfield      #10                 // Field buffer:Ljava/lang/String;
      24: aload_0
      25: getfield      #2                  // Field pointer:I
      28: invokespecial #36                 // Method org/yaml/snakeyaml/error/Mark."<init>":(Ljava/lang/String;IIILjava/lang/String;I)V
      31: areturn

  public void forward();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #37                 // Method forward:(I)V
       5: return

  public void forward(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pointer:I
       4: iload_1
       5: iadd
       6: iconst_1
       7: iadd
       8: aload_0
       9: getfield      #10                 // Field buffer:Ljava/lang/String;
      12: invokevirtual #24                 // Method java/lang/String.length:()I
      15: if_icmplt     22
      18: aload_0
      19: invokespecial #20                 // Method update:()V
      22: iconst_0
      23: istore_2
      24: iconst_0
      25: istore_3
      26: iload_3
      27: iload_1
      28: if_icmpge     135
      31: aload_0
      32: getfield      #10                 // Field buffer:Ljava/lang/String;
      35: aload_0
      36: getfield      #2                  // Field pointer:I
      39: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
      42: istore_2
      43: aload_0
      44: dup
      45: getfield      #2                  // Field pointer:I
      48: iconst_1
      49: iadd
      50: putfield      #2                  // Field pointer:I
      53: aload_0
      54: dup
      55: getfield      #4                  // Field index:I
      58: iconst_1
      59: iadd
      60: putfield      #4                  // Field index:I
      63: getstatic     #38                 // Field org/yaml/snakeyaml/scanner/Constant.LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
      66: iload_2
      67: invokevirtual #39                 // Method org/yaml/snakeyaml/scanner/Constant.has:(C)Z
      70: ifne          95
      73: iload_2
      74: bipush        13
      76: if_icmpne     113
      79: aload_0
      80: getfield      #10                 // Field buffer:Ljava/lang/String;
      83: aload_0
      84: getfield      #2                  // Field pointer:I
      87: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
      90: bipush        10
      92: if_icmpeq     113
      95: aload_0
      96: dup
      97: getfield      #5                  // Field line:I
     100: iconst_1
     101: iadd
     102: putfield      #5                  // Field line:I
     105: aload_0
     106: iconst_0
     107: putfield      #6                  // Field column:I
     110: goto          129
     113: iload_2
     114: ldc           #40                 // int 65279
     116: if_icmpeq     129
     119: aload_0
     120: dup
     121: getfield      #6                  // Field column:I
     124: iconst_1
     125: iadd
     126: putfield      #6                  // Field column:I
     129: iinc          3, 1
     132: goto          26
     135: return

  public char peek();
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffer:Ljava/lang/String;
       4: aload_0
       5: getfield      #2                  // Field pointer:I
       8: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
      11: ireturn

  public char peek(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pointer:I
       4: iload_1
       5: iadd
       6: iconst_1
       7: iadd
       8: aload_0
       9: getfield      #10                 // Field buffer:Ljava/lang/String;
      12: invokevirtual #24                 // Method java/lang/String.length:()I
      15: if_icmple     22
      18: aload_0
      19: invokespecial #20                 // Method update:()V
      22: aload_0
      23: getfield      #10                 // Field buffer:Ljava/lang/String;
      26: aload_0
      27: getfield      #2                  // Field pointer:I
      30: iload_1
      31: iadd
      32: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
      35: ireturn

  public java.lang.String prefix(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pointer:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #10                 // Field buffer:Ljava/lang/String;
      10: invokevirtual #24                 // Method java/lang/String.length:()I
      13: if_icmplt     20
      16: aload_0
      17: invokespecial #20                 // Method update:()V
      20: aload_0
      21: getfield      #2                  // Field pointer:I
      24: iload_1
      25: iadd
      26: aload_0
      27: getfield      #10                 // Field buffer:Ljava/lang/String;
      30: invokevirtual #24                 // Method java/lang/String.length:()I
      33: if_icmple     48
      36: aload_0
      37: getfield      #10                 // Field buffer:Ljava/lang/String;
      40: aload_0
      41: getfield      #2                  // Field pointer:I
      44: invokevirtual #41                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      47: areturn
      48: aload_0
      49: getfield      #10                 // Field buffer:Ljava/lang/String;
      52: aload_0
      53: getfield      #2                  // Field pointer:I
      56: aload_0
      57: getfield      #2                  // Field pointer:I
      60: iload_1
      61: iadd
      62: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      65: areturn

  public java.lang.String prefixForward(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method prefix:(I)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: dup
       8: getfield      #2                  // Field pointer:I
      11: iload_1
      12: iadd
      13: putfield      #2                  // Field pointer:I
      16: aload_0
      17: dup
      18: getfield      #4                  // Field index:I
      21: iload_1
      22: iadd
      23: putfield      #4                  // Field index:I
      26: aload_0
      27: dup
      28: getfield      #6                  // Field column:I
      31: iload_1
      32: iadd
      33: putfield      #6                  // Field column:I
      36: aload_2
      37: areturn

  private void update();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eof:Z
       4: ifne          139
       7: aload_0
       8: aload_0
       9: getfield      #10                 // Field buffer:Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field pointer:I
      16: invokevirtual #41                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      19: putfield      #10                 // Field buffer:Ljava/lang/String;
      22: aload_0
      23: iconst_0
      24: putfield      #2                  // Field pointer:I
      27: aload_0
      28: getfield      #17                 // Field stream:Ljava/io/Reader;
      31: aload_0
      32: getfield      #18                 // Field data:[C
      35: invokevirtual #44                 // Method java/io/Reader.read:([C)I
      38: istore_1
      39: iload_1
      40: ifle          95
      43: aload_0
      44: aload_0
      45: getfield      #18                 // Field data:[C
      48: iconst_0
      49: iload_1
      50: invokevirtual #45                 // Method checkPrintable:([CII)V
      53: aload_0
      54: new           #12                 // class java/lang/StringBuilder
      57: dup
      58: aload_0
      59: getfield      #10                 // Field buffer:Ljava/lang/String;
      62: invokevirtual #24                 // Method java/lang/String.length:()I
      65: iload_1
      66: iadd
      67: invokespecial #46                 // Method java/lang/StringBuilder."<init>":(I)V
      70: aload_0
      71: getfield      #10                 // Field buffer:Ljava/lang/String;
      74: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #18                 // Field data:[C
      81: iconst_0
      82: iload_1
      83: invokevirtual #47                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      86: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: putfield      #10                 // Field buffer:Ljava/lang/String;
      92: goto          126
      95: aload_0
      96: iconst_1
      97: putfield      #3                  // Field eof:Z
     100: new           #12                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     107: aload_0
     108: dup_x1
     109: getfield      #10                 // Field buffer:Ljava/lang/String;
     112: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #15                 // String \u0000
     117: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: putfield      #10                 // Field buffer:Ljava/lang/String;
     126: goto          139
     129: astore_1
     130: new           #49                 // class org/yaml/snakeyaml/error/YAMLException
     133: dup
     134: aload_1
     135: invokespecial #50                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     138: athrow
     139: return
    Exception table:
       from    to  target type
          27   126   129   Class java/io/IOException

  public int getColumn();
    Code:
       0: aload_0
       1: getfield      #6                  // Field column:I
       4: ireturn

  public java.nio.charset.Charset getEncoding();
    Code:
       0: aload_0
       1: getfield      #17                 // Field stream:Ljava/io/Reader;
       4: checkcast     #51                 // class org/yaml/snakeyaml/reader/UnicodeReader
       7: invokevirtual #52                 // Method org/yaml/snakeyaml/reader/UnicodeReader.getEncoding:()Ljava/lang/String;
      10: invokestatic  #53                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      13: areturn

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field index:I
       4: ireturn

  public int getLine();
    Code:
       0: aload_0
       1: getfield      #5                  // Field line:I
       4: ireturn

  static {};
    Code:
       0: ldc           #54                 // String [^\t\n\r -~\u0085 -퟿-�]
       2: invokestatic  #55                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #21                 // Field NON_PRINTABLE:Ljava/util/regex/Pattern;
       8: return
}
