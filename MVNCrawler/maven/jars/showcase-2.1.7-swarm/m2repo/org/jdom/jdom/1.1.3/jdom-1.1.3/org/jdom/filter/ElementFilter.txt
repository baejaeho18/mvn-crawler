Compiled from "ElementFilter.java"
public class org.jdom.filter.ElementFilter extends org.jdom.filter.AbstractFilter {
  private static final java.lang.String CVS_ID;

  private java.lang.String name;

  private transient org.jdom.Namespace namespace;

  public org.jdom.filter.ElementFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jdom/filter/AbstractFilter."<init>":()V
       4: return

  public org.jdom.filter.ElementFilter(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jdom/filter/AbstractFilter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: return

  public org.jdom.filter.ElementFilter(org.jdom.Namespace);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jdom/filter/AbstractFilter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field namespace:Lorg/jdom/Namespace;
       9: return

  public org.jdom.filter.ElementFilter(java.lang.String, org.jdom.Namespace);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jdom/filter/AbstractFilter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      14: return

  public boolean matches(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/jdom/Element
       4: ifeq          60
       7: aload_1
       8: checkcast     #4                  // class org/jdom/Element
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field name:Ljava/lang/String;
      16: ifnull        33
      19: aload_0
      20: getfield      #2                  // Field name:Ljava/lang/String;
      23: aload_2
      24: invokevirtual #5                  // Method org/jdom/Element.getName:()Ljava/lang/String;
      27: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          58
      33: aload_0
      34: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      37: ifnull        54
      40: aload_0
      41: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      44: aload_2
      45: invokevirtual #7                  // Method org/jdom/Element.getNamespace:()Lorg/jdom/Namespace;
      48: invokevirtual #8                  // Method org/jdom/Namespace.equals:(Ljava/lang/Object;)Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn
      60: iconst_0
      61: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #9                  // class org/jdom/filter/ElementFilter
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #9                  // class org/jdom/filter/ElementFilter
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field name:Ljava/lang/String;
      25: ifnull        45
      28: aload_0
      29: getfield      #2                  // Field name:Ljava/lang/String;
      32: aload_2
      33: getfield      #2                  // Field name:Ljava/lang/String;
      36: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifne          54
      42: goto          52
      45: aload_2
      46: getfield      #2                  // Field name:Ljava/lang/String;
      49: ifnull        54
      52: iconst_0
      53: ireturn
      54: aload_0
      55: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      58: ifnull        78
      61: aload_0
      62: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      65: aload_2
      66: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      69: invokevirtual #8                  // Method org/jdom/Namespace.equals:(Ljava/lang/Object;)Z
      72: ifne          87
      75: goto          85
      78: aload_2
      79: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      82: ifnull        87
      85: iconst_0
      86: ireturn
      87: iconst_1
      88: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field name:Ljava/lang/String;
      11: invokevirtual #10                 // Method java/lang/String.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        29
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      27: ifnull        40
      30: aload_0
      31: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      34: invokevirtual #11                 // Method org/jdom/Namespace.hashCode:()I
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_1
      43: iload_1
      44: ireturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_0
       5: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
       8: ifnull        36
      11: aload_1
      12: aload_0
      13: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      16: invokevirtual #13                 // Method org/jdom/Namespace.getPrefix:()Ljava/lang/String;
      19: invokevirtual #14                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      22: aload_1
      23: aload_0
      24: getfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      27: invokevirtual #15                 // Method org/jdom/Namespace.getURI:()Ljava/lang/String;
      30: invokevirtual #14                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      33: goto          46
      36: aload_1
      37: aconst_null
      38: invokevirtual #14                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      41: aload_1
      42: aconst_null
      43: invokevirtual #14                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      46: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #17                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       8: astore_2
       9: aload_1
      10: invokevirtual #17                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      13: astore_3
      14: aload_2
      15: ifnull        33
      18: aload_0
      19: aload_2
      20: checkcast     #18                 // class java/lang/String
      23: aload_3
      24: checkcast     #18                 // class java/lang/String
      27: invokestatic  #19                 // Method org/jdom/Namespace.getNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/jdom/Namespace;
      30: putfield      #3                  // Field namespace:Lorg/jdom/Namespace;
      33: return
}
