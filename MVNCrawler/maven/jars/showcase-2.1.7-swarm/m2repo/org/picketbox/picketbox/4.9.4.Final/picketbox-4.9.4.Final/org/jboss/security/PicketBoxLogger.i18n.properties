#####################################################################################################
#
# This file is for reference only, changes have no effect on the generated interface implementations.
#
#####################################################################################################

# Id: 200
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin isValid, principal: %s, cache entry: %s
# @param 1: principal - 
# @param 2: cacheEntry - 
traceBeginIsValid=Begin isValid, principal: %s, cache entry: %s
# Id: 201
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End isValid, result = %s
# @param 1: isValid - 
traceEndIsValid=End isValid, result = %s
# Id: 202
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Flushing all entries from security cache
traceFlushWholeCache=Flushing all entries from security cache
# Id: 203
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Flushing %s from security cache
# @param 1: key - 
traceFlushCacheEntry=Flushing %s from security cache
# Id: 204
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin validateCache, domainInfo: %s, credential class: %s
# @param 1: info - 
# @param 2: credentialClass - 
traceBeginValidateCache=Begin validateCache, domainInfo: %s, credential class: %s
# Id: 205
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End validateCache, result = %s
# @param 1: isValid - 
traceEndValidteCache=End validateCache, result = %s
# Id: 206
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Login failure
debugFailedLogin=Login failure
# Id: 207
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: updateCache, input subject: %s, cached subject: %s
# @param 1: inputSubject - 
# @param 2: cachedSubject - 
traceUpdateCache=updateCache, input subject: %s, cached subject: %s
# Id: 208
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Inserted cache info: %s
# @param 1: cacheInfo - 
traceInsertedCacheInfo=Inserted cache info: %s
# Id: 209
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: defaultLogin, principal: %s
# @param 1: principal - 
traceDefaultLoginPrincipal=defaultLogin, principal: %s
# Id: 210
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: defaultLogin, login context: %s, subject: %s
# @param 1: loginContext - 
# @param 2: subject - 
traceDefaultLoginSubject=defaultLogin, login context: %s, subject: %s
# Id: 211
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Cache entry logout failed
traceCacheEntryLogoutFailure=Cache entry logout failed
# Id: 212
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Exception loading file %s
# @param 1: filename - 
errorLoadingConfigFile=Exception loading file %s
# Id: 213
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to convert username to byte[] using UTF-8
errorConvertingUsernameUTF8=Failed to convert username to byte[] using UTF-8
# Id: 214
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Charset %s not found. Using platform default
# @param 1: charSet - 
errorFindingCharset=Charset %s not found. Using platform default
# Id: 215
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Unsupported hash encoding format: %s
# @param 1: hashEncoding - 
unsupportedHashEncodingFormat=Unsupported hash encoding format: %s
# Id: 216
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Password hash calculation failed
errorCalculatingPasswordHash=Password hash calculation failed
# Id: 217
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to check if the strong jurisdiction policy files have been installed
errorCheckingStrongJurisdictionPolicyFiles=Failed to check if the strong jurisdiction policy files have been installed
# Id: 218
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: bindDN is not found
traceBindDNNotFound=bindDN is not found
# Id: 219
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Exception while decrypting bindCredential
errorDecryptingBindCredential=Exception while decrypting bindCredential
# Id: 220
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Logging into LDAP server with env %s
# @param 1: env - 
traceLDAPConnectionEnv=Logging into LDAP server with env %s
# Id: 221
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin getAppConfigurationEntry(%s), size: %s
# @param 1: appName - 
# @param 2: size - 
traceBeginGetAppConfigEntry=Begin getAppConfigurationEntry(%s), size: %s
# Id: 222
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: getAppConfigurationEntry(%s), no entry found, trying parent config %s
# @param 1: appName - 
# @param 2: parentConfig - 
traceGetAppConfigEntryViaParent=getAppConfigurationEntry(%s), no entry found, trying parent config %s
# Id: 223
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: getAppConfigurationEntry(%s), no entry in parent config, trying default %s
# @param 1: appName - 
# @param 2: defaultConfig - 
traceGetAppConfigEntryViaDefault=getAppConfigurationEntry(%s), no entry in parent config, trying default %s
# Id: 224
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End getAppConfigurationEntry(%s), AuthInfo: %s
# @param 1: appName - 
# @param 2: authInfo - 
traceEndGetAppConfigEntryWithSuccess=End getAppConfigurationEntry(%s), AuthInfo: %s
# Id: 225
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End getAppConfigurationEntry(%s), failed to find entry
# @param 1: appName - 
traceEndGetAppConfigEntryWithFailure=End getAppConfigurationEntry(%s), failed to find entry
# Id: 226
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: addAppConfig(%s), AuthInfo: %s
# @param 1: appName - 
# @param 2: authInfo - 
traceAddAppConfig=addAppConfig(%s), AuthInfo: %s
# Id: 227
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: removeAppConfig(%s)
# @param 1: appName - 
traceRemoveAppConfig=removeAppConfig(%s)
# Id: 228
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Failed to find config: %s
# @param 1: loginConfig - 
warnFailureToFindConfig=Failed to find config: %s
# Id: 229
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin loadConfig, loginConfigURL: %s
# @param 1: configURL - 
traceBeginLoadConfig=Begin loadConfig, loginConfigURL: %s
# Id: 230
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End loadConfig, loginConfigURL: %s
# @param 1: configURL - 
traceEndLoadConfigWithSuccess=End loadConfig, loginConfigURL: %s
# Id: 231
# Level: org.jboss.logging.Logger.Level.WARN
# Message: End loadConfig, failed to load config: %s
# @param 1: configURL - 
warnEndLoadConfigWithFailure=End loadConfig, failed to load config: %s
# Id: 232
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Try loading config as XML from %s
# @param 1: configURL - 
debugLoadConfigAsXML=Try loading config as XML from %s
# Id: 233
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to load config as XML. Try loading as Sun format from %s
# @param 1: configURL - 
debugLoadConfigAsSun=Failed to load config as XML. Try loading as Sun format from %s
# Id: 234
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Invalid or misspelled module option: %s
# @param 1: option - 
warnInvalidModuleOption=Invalid or misspelled module option: %s
# Id: 235
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Error getting request from policy context
debugErrorGettingRequestFromPolicyContext=Error getting request from policy context
# Id: 236
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin initialize method
traceBeginInitialize=Begin initialize method
# Id: 237
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Saw unauthenticated indentity: %s
# @param 1: name - 
traceUnauthenticatedIdentity=Saw unauthenticated indentity: %s
# Id: 238
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Failed to create custom unauthenticated identity
warnFailureToCreateUnauthIdentity=Failed to create custom unauthenticated identity
# Id: 239
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End initialize method
traceEndInitialize=End initialize method
# Id: 240
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin login method
traceBeginLogin=Begin login method
# Id: 241
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End login method, isValid: %s
# @param 1: loginOk - 
traceEndLogin=End login method, isValid: %s
# Id: 242
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin commit method, overall result: %s
# @param 1: loginOk - 
traceBeginCommit=Begin commit method, overall result: %s
# Id: 243
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin logout method
traceBeginLogout=Begin logout method
# Id: 244
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin abort method, overall result: %s
# @param 1: loginOk - 
traceBeginAbort=Begin abort method, overall result: %s
# Id: 245
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Found security domain: %s
# @param 1: domain - 
traceSecurityDomainFound=Found security domain: %s
# Id: 246
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: The JSSE security domain %s is not valid. All authentication using this login module will fail!
# @param 1: domain - 
errorGettingJSSESecurityDomain=The JSSE security domain %s is not valid. All authentication using this login module will fail!
# Id: 247
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Unable to find the security domain %s
# @param 1: domain - 
errorFindingSecurityDomain=Unable to find the security domain %s
# Id: 248
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to create X509CertificateVerifier
errorCreatingCertificateVerifier=Failed to create X509CertificateVerifier
# Id: 249
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: javax.security.auth.login.password is not a X509Certificate
debugPasswordNotACertificate=javax.security.auth.login.password is not a X509Certificate
# Id: 250
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Authenticating using unauthenticated identity %s
# @param 1: unauthenticatedIdentity - 
traceUsingUnauthIdentity=Authenticating using unauthenticated identity %s
# Id: 251
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to create identity for alias %s
# @param 1: alias - 
debugFailureToCreateIdentityForAlias=Failed to create identity for alias %s
# Id: 252
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin getAliasAndCert method
traceBeginGetAliasAndCert=Begin getAliasAndCert method
# Id: 253
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Found certificate, serial number: %s, subject DN: %s
# @param 1: serialNumber - 
# @param 2: subjectDN - 
traceCertificateFound=Found certificate, serial number: %s, subject DN: %s
# Id: 254
# Level: org.jboss.logging.Logger.Level.WARN
# Message: CallbackHandler did not provide a credential
warnNullCredentialFromCallbackHandler=CallbackHandler did not provide a credential
# Id: 255
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End getAliasAndCert method
traceEndGetAliasAndCert=End getAliasAndCert method
# Id: 256
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin validateCredential method
traceBeginValidateCredential=Begin validateCredential method
# Id: 257
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Validating certificate using verifier %s
# @param 1: verifier - 
traceValidatingUsingVerifier=Validating certificate using verifier %s
# Id: 258
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Failed to find certificate for alias &%s
# @param 1: alias - 
warnFailureToFindCertForAlias=Failed to find certificate for alias &%s
# Id: 259
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Failed to validate certificate: SecurityDomain, Keystore or certificate is null
warnFailureToValidateCertificate=Failed to validate certificate: SecurityDomain, Keystore or certificate is null
# Id: 260
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End validateCredential method, result: %s
# @param 1: isValid - 
traceEndValidateCredential=End validateCredential method, result: %s
# Id: 261
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to load users/passwords/roles files
errorLoadingUserRolesPropertiesFiles=Failed to load users/passwords/roles files
# Id: 262
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Module options [dsJndiName: %s, principalsQuery: %s, rolesQuery: %s, suspendResume: %s]
# @param 1: dsJNDIName - 
# @param 2: principalsQuery - 
# @param 3: rolesQuery - 
# @param 4: suspendResume - 
traceDBCertLoginModuleOptions=Module options [dsJndiName: %s, principalsQuery: %s, rolesQuery: %s, suspendResume: %s]
# Id: 263
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Executing query %s with username %s
# @param 1: query - 
# @param 2: username - 
traceExecuteQuery=Executing query %s with username %s
# Id: 264
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to create principal %s
# @param 1: name - 
debugFailureToCreatePrincipal=Failed to create principal %s
# Id: 265
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: The security domain %s has been disabled. All authentication will fail
# @param 1: securityDomain - 
errorUsingDisabledDomain=The security domain %s has been disabled. All authentication will fail
# Id: 266
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Binding username %s
# @param 1: username - 
traceBindingLDAPUsername=Binding username %s
# Id: 267
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Rejecting empty password as allowEmptyPasswords option has not been set to true
traceRejectingEmptyPassword=Rejecting empty password as allowEmptyPasswords option has not been set to true
# Id: 268
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Assigning user to role %s
# @param 1: role - 
traceAssignUserToRole=Assigning user to role %s
# Id: 269
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to parse %s as number, using default value %s
# @param 1: property - 
# @param 2: defaultValue - 
debugFailureToParseNumberProperty=Failed to parse %s as number, using default value %s
# Id: 270
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to query %s from %s
# @param 1: attributeName - 
# @param 2: contextName - 
debugFailureToQueryLDAPAttribute=Failed to query %s from %s
# Id: 271
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Logged into LDAP server, context: %s
# @param 1: context - 
traceSuccessfulLogInToLDAP=Logged into LDAP server, context: %s
# Id: 272
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Rebind security principal to %s
# @param 1: principal - 
traceRebindWithConfiguredPrincipal=Rebind security principal to %s
# Id: 273
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Found user roles context DN: %s
# @param 1: context - 
traceFoundUserRolesContextDN=Found user roles context DN: %s
# Id: 274
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Searching rolesCtxDN %s with roleFilter: %s, filterArgs: %s, roleAttr: %s, searchScope: %s, searchTimeLimit: %s
# @param 1: dn - 
# @param 2: roleFilter - 
# @param 3: filterArgs - 
# @param 4: roleAttr - 
# @param 5: searchScope - 
# @param 6: searchTimeLimit - 
traceRolesDNSearch=Searching rolesCtxDN %s with roleFilter: %s, filterArgs: %s, roleAttr: %s, searchScope: %s, searchTimeLimit: %s
# Id: 275
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Checking search result %s
# @param 1: searchResult - 
traceCheckSearchResult=Checking search result %s
# Id: 276
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Following roleDN %s
# @param 1: roleDN - 
traceFollowRoleDN=Following roleDN %s
# Id: 277
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: No attribute %s found in search result %s
# @param 1: attrName - 
# @param 2: searchResult - 
debugFailureToFindAttrInSearchResult=No attribute %s found in search result %s
# Id: 278
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to locate roles
debugFailureToExecuteRolesDNSearch=Failed to locate roles
# Id: 279
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: The real host for trust is %s
# @param 1: host - 
debugRealHostForTrust=The real host for trust is %s
# Id: 280
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to load properties file %s
# @param 1: fileName - 
debugFailureToLoadPropertiesFile=Failed to load properties file %s
# Id: 281
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Password hashing activated, algorithm: %s, encoding: %s, charset: %s, callback: %s, storeCallBack: %s
# @param 1: algorithm - 
# @param 2: encoding - 
# @param 3: charset - 
# @param 4: callback - 
# @param 5: storeCallBack - 
debugPasswordHashing=Password hashing activated, algorithm: %s, encoding: %s, charset: %s, callback: %s, storeCallBack: %s
# Id: 282
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to instantiate class %s
# @param 1: className - 
debugFailureToInstantiateClass=Failed to instantiate class %s
# Id: 283
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Bad password for username %s
# @param 1: username - 
debugBadPasswordForUsername=Bad password for username %s
# Id: 284
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Created DigestCallback %s
# @param 1: callback - 
traceCreateDigestCallback=Created DigestCallback %s
# Id: 285
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Adding role %s to group %s
# @param 1: roleName - 
# @param 2: groupName - 
traceAdditionOfRoleToGroup=Adding role %s to group %s
# Id: 286
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Attempting to load resource %s
# @param 1: resourceURL - 
traceAttemptToLoadResource=Attempting to load resource %s
# Id: 287
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Failed to open properties file from URL
debugFailureToOpenPropertiesFromURL=Failed to open properties file from URL
# Id: 288
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Properties file %s loaded, users: %s
# @param 1: fileName - 
# @param 2: users - 
tracePropertiesFileLoaded=Properties file %s loaded, users: %s
# Id: 289
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: JACC delegate access denied [permission: %s, caller: %s, roles: %s
# @param 1: permission - 
# @param 2: caller - 
# @param 3: roles - 
debugJACCDeniedAccess=JACC delegate access denied [permission: %s, caller: %s, roles: %s
# Id: 290
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: No method permissions assigned to method: %s, interface: %s
# @param 1: methodName - 
# @param 2: interfaceName - 
traceNoMethodPermissions=No method permissions assigned to method: %s, interface: %s
# Id: 291
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Method: %s, interface: %s, required roles: %s
# @param 1: methodName - 
# @param 2: interfaceName - 
# @param 3: requiredRoles - 
debugEJBPolicyModuleDelegateState=Method: %s, interface: %s, required roles: %s
# Id: 292
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Insufficient method permissions [principal: %s, EJB name: %s, method: %s, interface: %s, required roles: %s, principal roles: %s, run-as roles: %s]
# @param 1: ejbPrincipal - 
# @param 2: ejbName - 
# @param 3: methodName - 
# @param 4: interfaceName - 
# @param 5: requiredRoles - 
# @param 6: principalRoles - 
# @param 7: runAsRoles - 
debugInsufficientMethodPermissions=Insufficient method permissions [principal: %s, EJB name: %s, method: %s, interface: %s, required roles: %s, principal roles: %s, run-as roles: %s]
# Id: 293
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Exception caught
debugIgnoredException=Exception caught
# Id: 294
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Check is not resourcePerm, userDataPerm or roleRefPerm
debugInvalidWebJaccCheck=Check is not resourcePerm, userDataPerm or roleRefPerm
# Id: 295
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: hasResourcePermission, permission: %s, allowed: %s
# @param 1: permission - 
# @param 2: allowed - 
traceHasResourcePermission=hasResourcePermission, permission: %s, allowed: %s
# Id: 296
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: hasRolePermission, permission: %s, allowed: %s
# @param 1: permission - 
# @param 2: allowed - 
traceHasRolePermission=hasRolePermission, permission: %s, allowed: %s
# Id: 297
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: hasUserDataPermission, permission: %s, allowed: %s
# @param 1: permission - 
# @param 2: allowed - 
traceHasUserDataPermission=hasUserDataPermission, permission: %s, allowed: %s
# Id: 298
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Requisite module %s failed
# @param 1: moduleName - 
debugRequisiteModuleFailure=Requisite module %s failed
# Id: 299
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Required module %s failed
# @param 1: moduleName - 
debugRequiredModuleFailure=Required module %s failed
# Id: 300
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Denied: matched excluded set, permission %s
# @param 1: permission - 
traceImpliesMatchesExcludedSet=Denied: matched excluded set, permission %s
# Id: 301
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Allowed: matched unchecked set, permission %s
# @param 1: permission - 
traceImpliesMatchesUncheckedSet=Allowed: matched unchecked set, permission %s
# Id: 302
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Protection domain principals: %s
# @param 1: principalNames - 
traceProtectionDomainPrincipals=Protection domain principals: %s
# Id: 303
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Not principals found in protection domain %s
# @param 1: domain - 
traceNoPrincipalsInProtectionDomain=Not principals found in protection domain %s
# Id: 304
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Checking role: %s, permissions: %s
# @param 1: roleName - 
# @param 2: permissions - 
debugImpliesParameters=Checking role: %s, permissions: %s
# Id: 305
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Checking result, implies: %s
# @param 1: implies - 
debugImpliesResult=Checking result, implies: %s
# Id: 306
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: No PolicyContext found for contextID %s
# @param 1: contextID - 
traceNoPolicyContextForId=No PolicyContext found for contextID %s
# Id: 307
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Constructing JBossPolicyConfiguration with contextID %s
# @param 1: contextID - 
debugJBossPolicyConfigurationConstruction=Constructing JBossPolicyConfiguration with contextID %s
# Id: 308
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: addToExcludedPolicy, permission: %s
# @param 1: permission - 
traceAddPermissionToExcludedPolicy=addToExcludedPolicy, permission: %s
# Id: 309
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: addToExcludedPolicy, permission collection: %s
# @param 1: permissions - 
traceAddPermissionsToExcludedPolicy=addToExcludedPolicy, permission collection: %s
# Id: 310
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: addToRole, permission: %s
# @param 1: permission - 
traceAddPermissionToRole=addToRole, permission: %s
# Id: 311
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: addToRole, permission collection: %s
# @param 1: permissions - 
traceAddPermissionsToRole=addToRole, permission collection: %s
# Id: 312
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: addToUncheckedPolicy, permission: %s
# @param 1: permission - 
traceAddPermissionToUncheckedPolicy=addToUncheckedPolicy, permission: %s
# Id: 313
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: addToUncheckedPolicy, permission collection: %s
# @param 1: permissions - 
traceAddPermissionsToUncheckedPolicy=addToUncheckedPolicy, permission collection: %s
# Id: 314
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: commit, contextID: %s
# @param 1: contextID - 
tracePolicyConfigurationCommit=commit, contextID: %s
# Id: 315
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: delete, contextID: %s
# @param 1: contextID - 
tracePolicyConfigurationDelete=delete, contextID: %s
# Id: 316
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: linkConfiguration, link to contextID: %s
# @param 1: contextID - 
traceLinkConfiguration=linkConfiguration, link to contextID: %s
# Id: 317
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: removeExcludedPolicy, contextID: %s
# @param 1: contextID - 
traceRemoveExcludedPolicy=removeExcludedPolicy, contextID: %s
# Id: 318
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: removeRole, role name: %s, contextID: %s
# @param 1: roleName - 
# @param 2: contextID - 
traceRemoveRole=removeRole, role name: %s, contextID: %s
# Id: 319
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: removeUncheckedPolicy, contextID: %s
# @param 1: contextID - 
traceRemoveUncheckedPolicy=removeUncheckedPolicy, contextID: %s
# Id: 320
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Mapped X500 principal, new principal: %s
# @param 1: newPrincipal - 
traceMappedX500Principal=Mapped X500 principal, new principal: %s
# Id: 321
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Query returned an empty result
traceQueryWithEmptyResult=Query returned an empty result
# Id: 322
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Mapping provider options [principal: %s, principal to roles map: %s, subject principals: %s]
# @param 1: principal - 
# @param 2: principalRolesMap - 
# @param 3: subjectPrincipals - 
debugMappingProviderOptions=Mapping provider options [principal: %s, principal to roles map: %s, subject principals: %s]
# Id: 323
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: No audit context found for security domain %s; using default context
# @param 1: securityDomain - 
traceNoAuditContextFoundForDomain=No audit context found for security domain %s; using default context
# Id: 324
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: AuthorizationManager is null for security domain %s
# @param 1: securityDomain - 
debugNullAuthorizationManager=AuthorizationManager is null for security domain %s
# Id: 325
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Authorization processing error
debugAuthorizationError=Authorization processing error
# Id: 326
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: %s processing failed
# @param 1: methodName - 
debugFailureExecutingMethod=%s processing failed
# Id: 327
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Returning host %s from thread [id: %s]
# @param 1: host - 
# @param 2: threadId - 
traceHostThreadLocalGet=Returning host %s from thread [id: %s]
# Id: 328
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Setting host %s on thread [id: %s]
# @param 1: host - 
# @param 2: threadId - 
traceHostThreadLocalSet=Setting host %s on thread [id: %s]
# Id: 329
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin doesUserHaveRole, principal: %s, roles: %s
# @param 1: principal - 
# @param 2: roles - 
traceBeginDoesUserHaveRole=Begin doesUserHaveRole, principal: %s, roles: %s
# Id: 330
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End doesUserHaveRole, result: %s
# @param 1: hasRole - 
traceEndDoesUserHaveRole=End doesUserHaveRole, result: %s
# Id: 331
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Roles before mapping: %s
# @param 1: roles - 
traceRolesBeforeMapping=Roles before mapping: %s
# Id: 332
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Roles after mapping: %s
# @param 1: roles - 
traceRolesAfterMapping=Roles after mapping: %s
# Id: 333
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Deregistered policy for contextID: %s, type: %s
# @param 1: contextID - 
# @param 2: type - 
traceDeregisterPolicy=Deregistered policy for contextID: %s, type: %s
# Id: 334
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Registered policy for contextID: %s, type: %s, location: %s
# @param 1: contextID - 
# @param 2: type - 
# @param 3: location - 
traceRegisterPolicy=Registered policy for contextID: %s, type: %s, location: %s
# Id: 335
# Level: org.jboss.logging.Logger.Level.WARN
# Message: SecurityManagement is not set, creating a default one
warnSecurityMagementNotSet=SecurityManagement is not set, creating a default one
# Id: 336
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: AuthenticationManager is null for security domain %s
# @param 1: securityDomain - 
debugNullAuthenticationManager=AuthenticationManager is null for security domain %s
# Id: 337
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: nextState for action %s: %s
# @param 1: action - 
# @param 2: nextState - 
traceStateMachineNextState=nextState for action %s: %s
# Id: 338
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Ignore attribute [uri: %s, qname: %s, value: %s]
# @param 1: uri - 
# @param 2: qName - 
# @param 3: value - 
traceIgnoreXMLAttribute=Ignore attribute [uri: %s, qname: %s, value: %s]
# Id: 339
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: systemId argument '%s' for publicId '%s' is different from the registered systemId '%s', resolution will be based on the argument
# @param 1: systemId - 
# @param 2: publicId - 
# @param 3: registeredId - 
traceSystemIDMismatch=systemId argument '%s' for publicId '%s' is different from the registered systemId '%s', resolution will be based on the argument
# Id: 340
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Cannot resolve entity, systemId: %s, publicId: %s
# @param 1: systemId - 
# @param 2: publicId - 
debugFailureToResolveEntity=Cannot resolve entity, systemId: %s, publicId: %s
# Id: 341
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin resolvePublicId, publicId: %s
# @param 1: publicId - 
traceBeginResolvePublicID=Begin resolvePublicId, publicId: %s
# Id: 342
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Found entity from %s: %s, filename: %s
# @param 1: idName - 
# @param 2: idValue - 
# @param 3: fileName - 
traceFoundEntityFromID=Found entity from %s: %s, filename: %s
# Id: 343
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Cannot load %s from %s resource: %s
# @param 1: idName - 
# @param 2: resourceType - 
# @param 3: resourceName - 
warnFailureToLoadIDFromResource=Cannot load %s from %s resource: %s
# Id: 344
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin resolveSystemId, systemId: %s
# @param 1: systemId - 
traceBeginResolveSystemID=Begin resolveSystemId, systemId: %s
# Id: 345
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin resolveSystemIdasURL, systemId: %s
# @param 1: systemId - 
traceBeginResolveSystemIDasURL=Begin resolveSystemIdasURL, systemId: %s
# Id: 346
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Trying to resolve systemId %s as a non-file URL
# @param 1: systemId - 
warnResolvingSystemIdAsNonFileURL=Trying to resolve systemId %s as a non-file URL
# Id: 347
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin resolveClasspathName, systemId: %s
# @param 1: systemId - 
traceBeginResolveClasspathName=Begin resolveClasspathName, systemId: %s
# Id: 348
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Mapped systemId to filename %s
# @param 1: filename - 
traceMappedSystemIdToFilename=Mapped systemId to filename %s
# Id: 349
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Mapped resource %s to URL %s
# @param 1: resource - 
# @param 2: url - 
traceMappedResourceToURL=Mapped resource %s to URL %s
# Id: 350
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Module option: %s, value: %s
# @param 1: optionName - 
# @param 2: optionValue - 
debugModuleOption=Module option: %s, value: %s
# Id: 351
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Obtained auth info from handler, principal: %s, credential class: %s
# @param 1: loginPrincipal - 
# @param 2: credentialClass - 
traceObtainedAuthInfoFromHandler=Obtained auth info from handler, principal: %s, credential class: %s
# Id: 352
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: JSSE domain got request for key with alias %s
# @param 1: alias - 
traceJSSEDomainGetKey=JSSE domain got request for key with alias %s
# Id: 353
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: JSSE domain got request for certificate with alias %s
# @param 1: alias - 
traceJSSEDomainGetCertificate=JSSE domain got request for certificate with alias %s
# Id: 354
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Setting security roles ThreadLocal: %s
# @param 1: roles - 
traceSecRolesAssociationSetSecurityRoles=Setting security roles ThreadLocal: %s
# Id: 355
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin execPasswordCmd, command: %s
# @param 1: passwordCmd - 
traceBeginExecPasswordCmd=Begin execPasswordCmd, command: %s
# Id: 356
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: End execPasswordCmd, exit code: %s
# @param 1: exitCode - 
traceEndExecPasswordCmd=End execPasswordCmd, exit code: %s
# Id: 357
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin getIdentity, username: %s
# @param 1: username - 
traceBeginGetIdentity=Begin getIdentity, username: %s
# Id: 358
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Begin getRoleSets
traceBeginGetRoleSets=Begin getRoleSets
# Id: 359
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Current calling principal: %s, thread name: %s
# @param 1: username - 
# @param 2: threadName - 
traceCurrentCallingPrincipal=Current calling principal: %s, thread name: %s
# Id: 360
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Creating login module with empty password
warnModuleCreationWithEmptyPassword=Creating login module with empty password
# Id: 361
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Default Security Vault Implementation Initialized and Ready
infoVaultInitialized=Default Security Vault Implementation Initialized and Ready
# Id: 362
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Cannot get MD5 algorithm instance for hashing password commands. Using NULL.
errorCannotGetMD5AlgorithmInstance=Cannot get MD5 algorithm instance for hashing password commands. Using NULL.
# Id: 363
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Retrieving password from the cache for key: %s
# @param 1: newKey - 
traceRetrievingPasswordFromCache=Retrieving password from the cache for key: %s
# Id: 364
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Storing password to the cache for key: %s
# @param 1: newKey - 
traceStoringPasswordToCache=Storing password to the cache for key: %s
# Id: 365
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: Resetting cache
traceResettingCache=Resetting cache
# Id: 366
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Error parsing time out number.
errorParsingTimeoutNumber=Error parsing time out number.
# Id: 367
# Level: org.jboss.logging.Logger.Level.DEBUG
# Message: Reading security vault data version %s target version is %s
# @param 1: dataVersion - 
# @param 2: targetVersion - 
securityVaultContentVersion=Reading security vault data version %s target version is %s
# Id: 368
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Security Vault contains both covnerted (%s) and pre-conversion data (%s). Try to delete %s file and start over again.
# @param 1: vaultDatFile - 
# @param 2: encDatFile - 
# @param 3: encDatFile2 - 
mixedVaultDataFound=Security Vault contains both covnerted (%s) and pre-conversion data (%s). Try to delete %s file and start over again.
# Id: 369
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Ambiguos vault block and attribute name stored in original security vault. Delimiter (%s) is part of vault block or attribute name. Took the first delimiter. Result vault block (%s) attribute name (%s). Modify security vault manually.
# @param 1: delimiter - 
# @param 2: vaultBlock - 
# @param 3: attributeName - 
ambiguosKeyForSecurityVaultTransformation=Ambiguos vault block and attribute name stored in original security vault. Delimiter (%s) is part of vault block or attribute name. Took the first delimiter. Result vault block (%s) attribute name (%s). Modify security vault manually.
# Id: 370
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Cannot delete original security vault file (%s). Delete the file manually before next start, please.
# @param 1: file - 
cannotDeleteOriginalVaultFile=Cannot delete original security vault file (%s). Delete the file manually before next start, please.
# Id: 371
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Security Vault does not contain SecretKey entry under alias (%s)
# @param 1: alias - 
vaultDoesnotContainSecretKey=Security Vault does not contain SecretKey entry under alias (%s)
# Id: 372
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Security Vault key store successfuly converted to JCEKS type (%s). From now on use JCEKS as KEYSTORE_TYPE in Security Vault configuration.
# @param 1: keyStoreFile - 
keyStoreConvertedToJCEKS=Security Vault key store successfuly converted to JCEKS type (%s). From now on use JCEKS as KEYSTORE_TYPE in Security Vault configuration.
# Id: 373
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Error getting ServerAuthConfig for layer %s and appContext %s
# @param 1: layer - 
# @param 2: appContext - 
errorGettingServerAuthConfig=Error getting ServerAuthConfig for layer %s and appContext %s
# Id: 374
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Error getting ServerAuthContext for authContextId %s and security domain %s
# @param 1: authContextId - 
# @param 2: securityDomain - 
errorGettingServerAuthContext=Error getting ServerAuthContext for authContextId %s and security domain %s
# Id: 375
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Error getting the module classloader informations for cache
errorGettingModuleInformation=Error getting the module classloader informations for cache
# Id: 376
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Wrong Base64 string used with masked password utility. Following is correct (%s)
# @param 1: fixedBase64 - 
wrongBase64StringUsed=Wrong Base64 string used with masked password utility. Following is correct (%s)
# Id: 377
# Level: org.jboss.logging.Logger.Level.TRACE
# Message: JAAS logout, login context: %s, subject: %s
# @param 1: loginContext - 
# @param 2: subject - 
traceLogoutSubject=JAAS logout, login context: %s, subject: %s
# Id: 378
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Problem when closing original LDAP context during role search rebind. Trying to create new LDAP context.
warnProblemClosingOriginalLdapContextDuringRebind=Problem when closing original LDAP context during role search rebind. Trying to create new LDAP context.
