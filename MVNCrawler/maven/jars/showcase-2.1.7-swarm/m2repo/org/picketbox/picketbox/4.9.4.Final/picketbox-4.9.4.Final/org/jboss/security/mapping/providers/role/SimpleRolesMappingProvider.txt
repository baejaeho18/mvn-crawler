Compiled from "SimpleRolesMappingProvider.java"
public class org.jboss.security.mapping.providers.role.SimpleRolesMappingProvider extends org.jboss.security.mapping.providers.role.PropertiesRolesMappingProvider {
  protected java.util.Map<java.lang.String, java.lang.Object> options;

  public org.jboss.security.mapping.providers.role.SimpleRolesMappingProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/security/mapping/providers/role/PropertiesRolesMappingProvider."<init>":()V
       4: return

  public void init(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field options:Ljava/util/Map;
       5: aload_1
       6: ifnull        30
       9: aload_0
      10: aload_0
      11: invokevirtual #3                  // Method loadRoles:()Ljava/util/Properties;
      14: putfield      #4                  // Field roles:Ljava/util/Properties;
      17: goto          30
      20: astore_2
      21: new           #6                  // class java/lang/IllegalStateException
      24: dup
      25: aload_2
      26: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      29: athrow
      30: return
    Exception table:
       from    to  target type
           9    17    20   Class java/io/IOException

  protected java.util.Properties loadRoles() throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #8                  // class java/util/Properties
       4: dup
       5: invokespecial #9                  // Method java/util/Properties."<init>":()V
       8: putfield      #4                  // Field roles:Ljava/util/Properties;
      11: aload_0
      12: getfield      #2                  // Field options:Ljava/util/Map;
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          81
      35: aload_1
      36: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #14                 // class java/util/Map$Entry
      44: astore_2
      45: aload_2
      46: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #16                 // class java/lang/String
      54: astore_3
      55: aload_0
      56: aload_3
      57: invokevirtual #17                 // Method isValidEntry:(Ljava/lang/String;)Z
      60: ifeq          78
      63: aload_0
      64: getfield      #4                  // Field roles:Ljava/util/Properties;
      67: aload_3
      68: aload_2
      69: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: invokevirtual #19                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: goto          26
      81: aload_0
      82: getfield      #4                  // Field roles:Ljava/util/Properties;
      85: areturn

  protected boolean isValidEntry(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #20                 // String rolesProperties
       3: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          11
       9: iconst_0
      10: ireturn
      11: iconst_1
      12: ireturn
}
