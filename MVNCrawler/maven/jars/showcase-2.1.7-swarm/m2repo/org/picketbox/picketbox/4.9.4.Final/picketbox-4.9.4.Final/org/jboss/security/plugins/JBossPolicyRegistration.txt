Compiled from "JBossPolicyRegistration.java"
public class org.jboss.security.plugins.JBossPolicyRegistration implements org.jboss.security.authorization.PolicyRegistration,java.io.Serializable {
  private static final long serialVersionUID;

  private final java.util.Map<java.lang.String, java.util.Set<org.jboss.security.xacml.interfaces.XACMLPolicy>> contextIdToXACMLPolicy;

  private final java.util.Map<java.lang.String, org.jboss.security.xacml.core.JBossPDP> contextIDToJBossPDP;

  public org.jboss.security.plugins.JBossPolicyRegistration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field contextIdToXACMLPolicy:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field contextIDToJBossPDP:Ljava/util/Map;
      26: return

  public void deRegisterPolicy(java.lang.String, java.lang.String);
    Code:
       0: ldc           #7                  // String XACML
       2: aload_2
       3: invokevirtual #8                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          30
       9: aload_0
      10: getfield      #4                  // Field contextIdToXACMLPolicy:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #9,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: getstatic     #10                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      23: aload_1
      24: aload_2
      25: invokeinterface #11,  3           // InterfaceMethod org/jboss/security/PicketBoxLogger.traceDeregisterPolicy:(Ljava/lang/String;Ljava/lang/String;)V
      30: return

  public <T> T getPolicy(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: ldc           #7                  // String XACML
       2: aload_2
       3: invokevirtual #8                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          53
       9: aload_3
      10: ifnull        42
      13: aload_3
      14: ldc           #12                 // String PDP
      16: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #14                 // class java/lang/String
      24: astore        4
      26: aload         4
      28: ifnull        42
      31: aload_0
      32: getfield      #5                  // Field contextIDToJBossPDP:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: areturn
      42: aload_0
      43: getfield      #4                  // Field contextIdToXACMLPolicy:Ljava/util/Map;
      46: aload_1
      47: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: areturn
      53: getstatic     #15                 // Field org/jboss/security/PicketBoxMessages.MESSAGES:Lorg/jboss/security/PicketBoxMessages;
      56: aload_2
      57: invokeinterface #16,  2           // InterfaceMethod org/jboss/security/PicketBoxMessages.invalidPolicyRegistrationType:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      62: athrow

  public void registerPolicy(java.lang.String, java.lang.String, java.net.URL);
    Code:
       0: aconst_null
       1: astore        4
       3: getstatic     #10                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
       6: invokeinterface #17,  1           // InterfaceMethod org/jboss/security/PicketBoxLogger.isTraceEnabled:()Z
      11: ifeq          36
      14: getstatic     #10                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      17: aload_1
      18: aload_2
      19: aload_3
      20: ifnull        30
      23: aload_3
      24: invokevirtual #18                 // Method java/net/URL.getPath:()Ljava/lang/String;
      27: goto          31
      30: aconst_null
      31: invokeinterface #19,  4           // InterfaceMethod org/jboss/security/PicketBoxLogger.traceRegisterPolicy:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      36: aload_3
      37: invokevirtual #20                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      40: astore        4
      42: aload_0
      43: aload_1
      44: aload_2
      45: aload         4
      47: invokevirtual #21                 // Method registerPolicy:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)V
      50: aload_0
      51: aload         4
      53: invokespecial #22                 // Method safeClose:(Ljava/io/InputStream;)V
      56: goto          91
      59: astore        5
      61: getstatic     #10                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      64: aload         5
      66: invokeinterface #24,  2           // InterfaceMethod org/jboss/security/PicketBoxLogger.debugIgnoredException:(Ljava/lang/Throwable;)V
      71: aload_0
      72: aload         4
      74: invokespecial #22                 // Method safeClose:(Ljava/io/InputStream;)V
      77: goto          91
      80: astore        6
      82: aload_0
      83: aload         4
      85: invokespecial #22                 // Method safeClose:(Ljava/io/InputStream;)V
      88: aload         6
      90: athrow
      91: return
    Exception table:
       from    to  target type
           3    50    59   Class java/lang/Exception
           3    50    80   any
          59    71    80   any
          80    82    80   any

  public void registerPolicy(java.lang.String, java.lang.String, java.io.InputStream);
    Code:
       0: ldc           #7                  // String XACML
       2: aload_2
       3: invokevirtual #8                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          82
       9: aload_3
      10: invokestatic  #25                 // Method org/jboss/security/xacml/factories/PolicyFactory.createPolicy:(Ljava/io/InputStream;)Lorg/jboss/security/xacml/interfaces/XACMLPolicy;
      13: astore        4
      15: aload_0
      16: getfield      #4                  // Field contextIdToXACMLPolicy:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #26                 // class java/util/Set
      28: astore        5
      30: aload         5
      32: ifnonnull     44
      35: new           #27                 // class java/util/HashSet
      38: dup
      39: invokespecial #28                 // Method java/util/HashSet."<init>":()V
      42: astore        5
      44: aload         5
      46: aload         4
      48: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: getfield      #4                  // Field contextIdToXACMLPolicy:Ljava/util/Map;
      58: aload_1
      59: aload         5
      61: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: goto          82
      70: astore        4
      72: getstatic     #10                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      75: aload         4
      77: invokeinterface #24,  2           // InterfaceMethod org/jboss/security/PicketBoxLogger.debugIgnoredException:(Ljava/lang/Throwable;)V
      82: return
    Exception table:
       from    to  target type
           9    67    70   Class java/lang/Exception

  public <P> void registerPolicyConfig(java.lang.String, java.lang.String, P);
    Code:
       0: ldc           #7                  // String XACML
       2: aload_2
       3: invokevirtual #8                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          75
       9: aload_3
      10: instanceof    #31                 // class javax/xml/bind/JAXBElement
      13: ifne          30
      16: getstatic     #15                 // Field org/jboss/security/PicketBoxMessages.MESSAGES:Lorg/jboss/security/PicketBoxMessages;
      19: ldc           #31                 // class javax/xml/bind/JAXBElement
      21: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokeinterface #33,  2           // InterfaceMethod org/jboss/security/PicketBoxMessages.invalidType:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: aload_3
      31: checkcast     #31                 // class javax/xml/bind/JAXBElement
      34: astore        4
      36: new           #34                 // class org/jboss/security/xacml/core/JBossPDP
      39: dup
      40: aload         4
      42: invokespecial #35                 // Method org/jboss/security/xacml/core/JBossPDP."<init>":(Ljavax/xml/bind/JAXBElement;)V
      45: astore        5
      47: aload_0
      48: getfield      #5                  // Field contextIDToJBossPDP:Ljava/util/Map;
      51: aload_1
      52: aload         5
      54: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          75
      63: astore        4
      65: new           #36                 // class java/lang/RuntimeException
      68: dup
      69: aload         4
      71: invokespecial #37                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
      75: return
    Exception table:
       from    to  target type
          30    60    63   Class java/lang/Exception

  public void registerPolicyConfigFile(java.lang.String, java.lang.String, java.io.InputStream);
    Code:
       0: ldc           #7                  // String XACML
       2: aload_2
       3: invokevirtual #8                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          47
       9: new           #34                 // class org/jboss/security/xacml/core/JBossPDP
      12: dup
      13: aload_3
      14: invokespecial #38                 // Method org/jboss/security/xacml/core/JBossPDP."<init>":(Ljava/io/InputStream;)V
      17: astore        4
      19: aload_0
      20: getfield      #5                  // Field contextIDToJBossPDP:Ljava/util/Map;
      23: aload_1
      24: aload         4
      26: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: goto          47
      35: astore        4
      37: new           #36                 // class java/lang/RuntimeException
      40: dup
      41: aload         4
      43: invokespecial #37                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
      47: return
    Exception table:
       from    to  target type
           9    32    35   Class java/lang/Exception

  private void safeClose(java.io.InputStream);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: invokevirtual #39                 // Method java/io/InputStream.close:()V
       8: goto          12
      11: astore_2
      12: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/Exception
}
