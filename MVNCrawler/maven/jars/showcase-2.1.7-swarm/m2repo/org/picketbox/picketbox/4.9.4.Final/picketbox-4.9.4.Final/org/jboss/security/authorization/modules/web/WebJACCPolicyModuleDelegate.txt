Compiled from "WebJACCPolicyModuleDelegate.java"
public class org.jboss.security.authorization.modules.web.WebJACCPolicyModuleDelegate extends org.jboss.security.authorization.modules.AbstractJACCModuleDelegate {
  private java.security.Policy policy;

  private javax.servlet.http.HttpServletRequest request;

  private java.security.CodeSource webCS;

  private java.lang.String canonicalRequestURI;

  public org.jboss.security.authorization.modules.web.WebJACCPolicyModuleDelegate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/security/authorization/modules/AbstractJACCModuleDelegate."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/security/Policy.getPolicy:()Ljava/security/Policy;
       8: putfield      #3                  // Field policy:Ljava/security/Policy;
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field webCS:Ljava/security/CodeSource;
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field canonicalRequestURI:Ljava/lang/String;
      26: return

  public int authorize(org.jboss.security.authorization.Resource, javax.security.auth.Subject, org.jboss.security.identity.RoleGroup);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/jboss/security/authorization/resources/WebResource
       4: ifne          21
       7: getstatic     #8                  // Field org/jboss/security/PicketBoxMessages.MESSAGES:Lorg/jboss/security/PicketBoxMessages;
      10: ldc           #7                  // class org/jboss/security/authorization/resources/WebResource
      12: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      15: invokeinterface #10,  2           // InterfaceMethod org/jboss/security/PicketBoxMessages.invalidType:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      20: athrow
      21: aload_1
      22: checkcast     #7                  // class org/jboss/security/authorization/resources/WebResource
      25: astore        4
      27: aload_1
      28: invokeinterface #11,  1           // InterfaceMethod org/jboss/security/authorization/Resource.getMap:()Ljava/util/Map;
      33: astore        5
      35: aload         5
      37: ifnonnull     51
      40: getstatic     #8                  // Field org/jboss/security/PicketBoxMessages.MESSAGES:Lorg/jboss/security/PicketBoxMessages;
      43: ldc           #12                 // String resourceMap
      45: invokeinterface #13,  2           // InterfaceMethod org/jboss/security/PicketBoxMessages.invalidNullProperty:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      50: athrow
      51: aload_0
      52: aload         4
      54: invokevirtual #14                 // Method org/jboss/security/authorization/resources/WebResource.getServletRequest:()Ljavax/servlet/ServletRequest;
      57: checkcast     #15                 // class javax/servlet/http/HttpServletRequest
      60: putfield      #4                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      63: aload_0
      64: aload         4
      66: invokevirtual #16                 // Method org/jboss/security/authorization/resources/WebResource.getCodeSource:()Ljava/security/CodeSource;
      69: putfield      #5                  // Field webCS:Ljava/security/CodeSource;
      72: aload_0
      73: aload         4
      75: invokevirtual #17                 // Method org/jboss/security/authorization/resources/WebResource.getCanonicalRequestURI:()Ljava/lang/String;
      78: putfield      #6                  // Field canonicalRequestURI:Ljava/lang/String;
      81: aload         5
      83: ldc           #19                 // String roleName
      85: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #21                 // class java/lang/String
      93: astore        6
      95: aload         5
      97: ldc           #22                 // String hasRole.Principal
      99: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #23                 // class java/security/Principal
     107: astore        7
     109: aload         5
     111: ldc           #24                 // String principal.roles
     113: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     118: checkcast     #25                 // class java/util/Set
     121: astore        8
     123: aload         4
     125: invokevirtual #26                 // Method org/jboss/security/authorization/resources/WebResource.getServletName:()Ljava/lang/String;
     128: astore        9
     130: aload_0
     131: aload         5
     133: ldc           #27                 // String resourcePermissionCheck
     135: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     140: checkcast     #28                 // class java/lang/Boolean
     143: invokespecial #29                 // Method checkBooleanValue:(Ljava/lang/Boolean;)Ljava/lang/Boolean;
     146: astore        10
     148: aload_0
     149: aload         5
     151: ldc           #30                 // String userDataPermissionCheck
     153: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     158: checkcast     #28                 // class java/lang/Boolean
     161: invokespecial #29                 // Method checkBooleanValue:(Ljava/lang/Boolean;)Ljava/lang/Boolean;
     164: astore        11
     166: aload_0
     167: aload         5
     169: ldc           #31                 // String roleRefPermissionCheck
     171: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     176: checkcast     #28                 // class java/lang/Boolean
     179: invokespecial #29                 // Method checkBooleanValue:(Ljava/lang/Boolean;)Ljava/lang/Boolean;
     182: astore        12
     184: aload_0
     185: aload         10
     187: aload         11
     189: aload         12
     191: invokespecial #32                 // Method validatePermissionChecks:(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
     194: iconst_0
     195: istore        13
     197: aload         10
     199: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
     202: ifeq          216
     205: aload_0
     206: aload_2
     207: aload_3
     208: invokespecial #34                 // Method hasResourcePermission:(Ljavax/security/auth/Subject;Lorg/jboss/security/identity/Role;)Z
     211: istore        13
     213: goto          266
     216: aload         11
     218: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
     221: ifeq          233
     224: aload_0
     225: invokespecial #35                 // Method hasUserDataPermission:()Z
     228: istore        13
     230: goto          266
     233: aload         12
     235: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
     238: ifeq          258
     241: aload_0
     242: aload         7
     244: aload         6
     246: aload         8
     248: aload         9
     250: invokespecial #36                 // Method hasRole:(Ljava/security/Principal;Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;)Z
     253: istore        13
     255: goto          266
     258: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
     261: invokeinterface #38,  1           // InterfaceMethod org/jboss/security/PicketBoxLogger.debugInvalidWebJaccCheck:()V
     266: goto          281
     269: astore        14
     271: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
     274: aload         14
     276: invokeinterface #40,  2           // InterfaceMethod org/jboss/security/PicketBoxLogger.debugIgnoredException:(Ljava/lang/Throwable;)V
     281: iload         13
     283: ifeq          290
     286: iconst_1
     287: goto          291
     290: iconst_m1
     291: ireturn
    Exception table:
       from    to  target type
         197   266   269   Class java/io/IOException

  public void setPolicyRegistrationManager(org.jboss.security.authorization.PolicyRegistration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field policyRegistration:Lorg/jboss/security/authorization/PolicyRegistration;
       5: return

  private boolean checkPolicy(java.security.Permission, java.security.Principal, javax.security.auth.Subject, org.jboss.security.identity.Role);
    Code:
       0: aload_0
       1: aload_3
       2: aload         4
       4: invokevirtual #43                 // Method getPrincipals:(Ljavax/security/auth/Subject;Lorg/jboss/security/identity/Role;)[Ljava/security/Principal;
       7: astore        5
       9: aload_0
      10: aload_1
      11: aload         5
      13: invokespecial #44                 // Method checkPolicy:(Ljava/security/Permission;[Ljava/security/Principal;)Z
      16: ireturn

  private boolean checkPolicy(java.security.Permission, java.security.Principal[]);
    Code:
       0: new           #45                 // class java/security/ProtectionDomain
       3: dup
       4: aload_0
       5: getfield      #5                  // Field webCS:Ljava/security/CodeSource;
       8: aconst_null
       9: aconst_null
      10: aload_2
      11: invokespecial #46                 // Method java/security/ProtectionDomain."<init>":(Ljava/security/CodeSource;Ljava/security/PermissionCollection;Ljava/lang/ClassLoader;[Ljava/security/Principal;)V
      14: astore_3
      15: aload_0
      16: getfield      #3                  // Field policy:Ljava/security/Policy;
      19: aload_3
      20: aload_1
      21: invokevirtual #47                 // Method java/security/Policy.implies:(Ljava/security/ProtectionDomain;Ljava/security/Permission;)Z
      24: ireturn

  private java.lang.Boolean checkBooleanValue(java.lang.Boolean);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #48                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       7: areturn
       8: aload_1
       9: areturn

  private boolean hasResourcePermission(javax.security.auth.Subject, org.jboss.security.identity.Role) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #49,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getUserPrincipal:()Ljava/security/Principal;
       9: astore_3
      10: new           #50                 // class javax/security/jacc/WebResourcePermission
      13: dup
      14: aload_0
      15: getfield      #6                  // Field canonicalRequestURI:Ljava/lang/String;
      18: aload_0
      19: getfield      #4                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      22: invokeinterface #51,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      27: invokespecial #52                 // Method javax/security/jacc/WebResourcePermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      30: astore        4
      32: aload_0
      33: aload         4
      35: aload_3
      36: aload_1
      37: aload_2
      38: invokespecial #53                 // Method checkPolicy:(Ljava/security/Permission;Ljava/security/Principal;Ljavax/security/auth/Subject;Lorg/jboss/security/identity/Role;)Z
      41: istore        5
      43: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      46: invokeinterface #54,  1           // InterfaceMethod org/jboss/security/PicketBoxLogger.isTraceEnabled:()Z
      51: ifeq          69
      54: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      57: aload         4
      59: invokevirtual #55                 // Method javax/security/jacc/WebResourcePermission.toString:()Ljava/lang/String;
      62: iload         5
      64: invokeinterface #56,  3           // InterfaceMethod org/jboss/security/PicketBoxLogger.traceHasResourcePermission:(Ljava/lang/String;Z)V
      69: iload         5
      71: ireturn

  private boolean hasRole(java.security.Principal, java.lang.String, java.util.Set<java.security.Principal>, java.lang.String);
    Code:
       0: aload         4
       2: ifnonnull     16
       5: getstatic     #8                  // Field org/jboss/security/PicketBoxMessages.MESSAGES:Lorg/jboss/security/PicketBoxMessages;
       8: ldc           #57                 // String servletName
      10: invokeinterface #58,  2           // InterfaceMethod org/jboss/security/PicketBoxMessages.invalidNullArgument:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: new           #59                 // class javax/security/jacc/WebRoleRefPermission
      19: dup
      20: aload         4
      22: aload_2
      23: invokespecial #60                 // Method javax/security/jacc/WebRoleRefPermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      26: astore        5
      28: iconst_1
      29: anewarray     #23                 // class java/security/Principal
      32: dup
      33: iconst_0
      34: aload_1
      35: aastore
      36: astore        6
      38: aload_3
      39: ifnull        62
      42: aload_3
      43: invokeinterface #61,  1           // InterfaceMethod java/util/Set.size:()I
      48: anewarray     #23                 // class java/security/Principal
      51: astore        6
      53: aload_3
      54: aload         6
      56: invokeinterface #62,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      61: pop
      62: aload_0
      63: aload         5
      65: aload         6
      67: invokespecial #44                 // Method checkPolicy:(Ljava/security/Permission;[Ljava/security/Principal;)Z
      70: istore        7
      72: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      75: aload         5
      77: invokevirtual #63                 // Method javax/security/jacc/WebRoleRefPermission.toString:()Ljava/lang/String;
      80: iload         7
      82: invokeinterface #64,  3           // InterfaceMethod org/jboss/security/PicketBoxLogger.traceHasRolePermission:(Ljava/lang/String;Z)V
      87: iload         7
      89: ireturn

  private boolean hasUserDataPermission() throws java.io.IOException;
    Code:
       0: new           #65                 // class javax/security/jacc/WebUserDataPermission
       3: dup
       4: aload_0
       5: getfield      #6                  // Field canonicalRequestURI:Ljava/lang/String;
       8: aload_0
       9: getfield      #4                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      12: invokeinterface #51,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
      17: invokespecial #66                 // Method javax/security/jacc/WebUserDataPermission."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: astore_1
      21: iconst_0
      22: istore_2
      23: aconst_null
      24: astore_3
      25: aload_0
      26: aload_1
      27: aload_3
      28: invokespecial #44                 // Method checkPolicy:(Ljava/security/Permission;[Ljava/security/Principal;)Z
      31: istore_2
      32: goto          45
      35: astore_3
      36: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      39: aload_3
      40: invokeinterface #40,  2           // InterfaceMethod org/jboss/security/PicketBoxLogger.debugIgnoredException:(Ljava/lang/Throwable;)V
      45: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      48: invokeinterface #54,  1           // InterfaceMethod org/jboss/security/PicketBoxLogger.isTraceEnabled:()Z
      53: ifeq          69
      56: getstatic     #37                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      59: aload_1
      60: invokevirtual #68                 // Method javax/security/jacc/WebUserDataPermission.toString:()Ljava/lang/String;
      63: iload_2
      64: invokeinterface #69,  3           // InterfaceMethod org/jboss/security/PicketBoxLogger.traceHasUserDataPermission:(Ljava/lang/String;Z)V
      69: iload_2
      70: ireturn
    Exception table:
       from    to  target type
          23    32    35   Class java/lang/Exception

  private void validatePermissionChecks(java.lang.Boolean, java.lang.Boolean, java.lang.Boolean);
    Code:
       0: aload_1
       1: getstatic     #70                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       4: if_acmpne     21
       7: aload_2
       8: getstatic     #70                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      11: if_acmpne     21
      14: aload_3
      15: getstatic     #70                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      18: if_acmpeq     49
      21: aload_1
      22: getstatic     #70                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      25: if_acmpne     35
      28: aload_2
      29: getstatic     #70                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      32: if_acmpeq     49
      35: aload_2
      36: getstatic     #70                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      39: if_acmpne     58
      42: aload_3
      43: getstatic     #70                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      46: if_acmpne     58
      49: getstatic     #8                  // Field org/jboss/security/PicketBoxMessages.MESSAGES:Lorg/jboss/security/PicketBoxMessages;
      52: invokeinterface #71,  1           // InterfaceMethod org/jboss/security/PicketBoxMessages.invalidPermissionChecks:()Ljava/lang/IllegalStateException;
      57: athrow
      58: return
}
