Compiled from "DelegatingPolicy.java"
class org.jboss.security.jacc.DelegatingPolicy$PolicyProxy extends java.security.Policy {
  private java.security.Policy delegate;

  org.jboss.security.jacc.DelegatingPolicy$PolicyProxy(java.security.Policy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/security/Policy."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Ljava/security/Policy;
       9: return

  public void refresh();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljava/security/Policy;
       4: invokevirtual #3                  // Method java/security/Policy.refresh:()V
       7: return

  public java.security.PermissionCollection getPermissions(java.security.CodeSource);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljava/security/Policy;
       4: aload_1
       5: invokevirtual #4                  // Method java/security/Policy.getPermissions:(Ljava/security/CodeSource;)Ljava/security/PermissionCollection;
       8: areturn

  public boolean implies(java.security.ProtectionDomain, java.security.Permission);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljava/security/Policy;
       4: aload_1
       5: aload_2
       6: invokevirtual #5                  // Method java/security/Policy.implies:(Ljava/security/ProtectionDomain;Ljava/security/Permission;)Z
       9: ireturn

  public java.security.PermissionCollection getPermissions(java.security.ProtectionDomain);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljava/security/Policy;
       4: aload_1
       5: invokevirtual #6                  // Method java/security/Policy.getPermissions:(Ljava/security/ProtectionDomain;)Ljava/security/PermissionCollection;
       8: areturn
}
