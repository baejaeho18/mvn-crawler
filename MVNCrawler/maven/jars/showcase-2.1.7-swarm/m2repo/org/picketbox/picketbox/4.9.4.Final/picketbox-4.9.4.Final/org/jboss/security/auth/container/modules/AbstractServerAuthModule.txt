Compiled from "AbstractServerAuthModule.java"
public abstract class org.jboss.security.auth.container.modules.AbstractServerAuthModule implements javax.security.auth.message.module.ServerAuthModule {
  protected javax.security.auth.callback.CallbackHandler callbackHandler;

  protected javax.security.auth.message.MessagePolicy requestPolicy;

  protected javax.security.auth.message.MessagePolicy responsePolicy;

  protected java.util.Map options;

  protected java.util.ArrayList<java.lang.Class> supportedTypes;

  public org.jboss.security.auth.container.modules.AbstractServerAuthModule();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field requestPolicy:Ljavax/security/auth/message/MessagePolicy;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field responsePolicy:Ljavax/security/auth/message/MessagePolicy;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field options:Ljava/util/Map;
      24: aload_0
      25: new           #6                  // class java/util/ArrayList
      28: dup
      29: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      32: putfield      #8                  // Field supportedTypes:Ljava/util/ArrayList;
      35: return

  public void initialize(javax.security.auth.message.MessagePolicy, javax.security.auth.message.MessagePolicy, javax.security.auth.callback.CallbackHandler, java.util.Map) throws javax.security.auth.message.AuthException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field requestPolicy:Ljavax/security/auth/message/MessagePolicy;
       5: aload_0
       6: aload_2
       7: putfield      #4                  // Field responsePolicy:Ljavax/security/auth/message/MessagePolicy;
      10: aload_0
      11: aload_3
      12: putfield      #2                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
      15: aload         4
      17: ifnonnull     29
      20: new           #9                  // class java/util/HashMap
      23: dup
      24: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      27: astore        4
      29: aload_0
      30: aload         4
      32: putfield      #5                  // Field options:Ljava/util/Map;
      35: return

  public void cleanSubject(javax.security.auth.message.MessageInfo, javax.security.auth.Subject) throws javax.security.auth.message.AuthException;
    Code:
       0: aload_2
       1: invokevirtual #11                 // Method javax/security/auth/Subject.getPrincipals:()Ljava/util/Set;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_2
      10: invokevirtual #13                 // Method javax/security/auth/Subject.getPublicCredentials:()Ljava/util/Set;
      13: invokeinterface #12,  1           // InterfaceMethod java/util/Set.clear:()V
      18: aload_2
      19: invokevirtual #14                 // Method javax/security/auth/Subject.getPrivateCredentials:()Ljava/util/Set;
      22: invokeinterface #12,  1           // InterfaceMethod java/util/Set.clear:()V
      27: return

  public javax.security.auth.message.AuthStatus validateRequest(javax.security.auth.message.MessageInfo, javax.security.auth.Subject, javax.security.auth.Subject) throws javax.security.auth.message.AuthException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field options:Ljava/util/Map;
       4: ldc           #15                 // String login-module-delegate
       6: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #17                 // class java/lang/String
      14: astore        4
      16: aload         4
      18: ifnull        105
      21: invokestatic  #18                 // Method org/jboss/security/auth/container/modules/SecurityActions.getContextClassLoader:()Ljava/lang/ClassLoader;
      24: astore        5
      26: aload         5
      28: aload         4
      30: invokevirtual #19                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      33: astore        6
      35: aload         6
      37: invokevirtual #20                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      40: checkcast     #21                 // class javax/security/auth/spi/LoginModule
      43: astore        7
      45: aload         7
      47: aload_2
      48: aload_0
      49: getfield      #2                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
      52: new           #9                  // class java/util/HashMap
      55: dup
      56: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      59: aload_0
      60: getfield      #5                  // Field options:Ljava/util/Map;
      63: invokeinterface #22,  5           // InterfaceMethod javax/security/auth/spi/LoginModule.initialize:(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V
      68: aload         7
      70: invokeinterface #23,  1           // InterfaceMethod javax/security/auth/spi/LoginModule.login:()Z
      75: pop
      76: aload         7
      78: invokeinterface #24,  1           // InterfaceMethod javax/security/auth/spi/LoginModule.commit:()Z
      83: pop
      84: goto          102
      87: astore        6
      89: new           #26                 // class javax/security/auth/message/AuthException
      92: dup
      93: aload         6
      95: invokevirtual #27                 // Method java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
      98: invokespecial #28                 // Method javax/security/auth/message/AuthException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: goto          124
     105: aload_0
     106: aload_2
     107: aload_1
     108: invokevirtual #29                 // Method validate:(Ljavax/security/auth/Subject;Ljavax/security/auth/message/MessageInfo;)Z
     111: ifeq          120
     114: getstatic     #30                 // Field javax/security/auth/message/AuthStatus.SUCCESS:Ljavax/security/auth/message/AuthStatus;
     117: goto          123
     120: getstatic     #31                 // Field javax/security/auth/message/AuthStatus.FAILURE:Ljavax/security/auth/message/AuthStatus;
     123: areturn
     124: getstatic     #30                 // Field javax/security/auth/message/AuthStatus.SUCCESS:Ljavax/security/auth/message/AuthStatus;
     127: areturn
    Exception table:
       from    to  target type
          26    84    87   Class java/lang/Exception

  public java.lang.Class[] getSupportedMessageTypes();
    Code:
       0: aload_0
       1: getfield      #8                  // Field supportedTypes:Ljava/util/ArrayList;
       4: invokevirtual #32                 // Method java/util/ArrayList.size:()I
       7: anewarray     #33                 // class java/lang/Class
      10: astore_1
      11: aload_0
      12: getfield      #8                  // Field supportedTypes:Ljava/util/ArrayList;
      15: aload_1
      16: invokevirtual #34                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: pop
      20: aload_1
      21: areturn

  public javax.security.auth.callback.CallbackHandler getCallbackHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       4: areturn

  public void setCallbackHandler(javax.security.auth.callback.CallbackHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       5: return

  protected abstract boolean validate(javax.security.auth.Subject, javax.security.auth.message.MessageInfo) throws javax.security.auth.message.AuthException;
}
