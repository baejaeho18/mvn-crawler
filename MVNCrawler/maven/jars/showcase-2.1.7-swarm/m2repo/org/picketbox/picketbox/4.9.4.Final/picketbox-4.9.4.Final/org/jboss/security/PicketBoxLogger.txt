Compiled from "PicketBoxLogger.java"
public interface org.jboss.security.PicketBoxLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.security.PicketBoxLogger LOGGER;

  public static final org.jboss.security.PicketBoxLogger AUDIT_LOGGER;

  public abstract void traceBeginIsValid(java.security.Principal, java.lang.String);

  public abstract void traceEndIsValid(boolean);

  public abstract void traceFlushWholeCache();

  public abstract void traceFlushCacheEntry(java.lang.String);

  public abstract void traceBeginValidateCache(java.lang.String, java.lang.Class<?>);

  public abstract void traceEndValidteCache(boolean);

  public abstract void debugFailedLogin(java.lang.Throwable);

  public abstract void traceUpdateCache(java.lang.String, java.lang.String);

  public abstract void traceInsertedCacheInfo(java.lang.String);

  public abstract void traceDefaultLoginPrincipal(java.security.Principal);

  public abstract void traceDefaultLoginSubject(java.lang.String, java.lang.String);

  public abstract void traceCacheEntryLogoutFailure(java.lang.Throwable);

  public abstract void errorLoadingConfigFile(java.lang.String, java.lang.Throwable);

  public abstract void errorConvertingUsernameUTF8(java.lang.Throwable);

  public abstract void errorFindingCharset(java.lang.String, java.lang.Throwable);

  public abstract void unsupportedHashEncodingFormat(java.lang.String);

  public abstract void errorCalculatingPasswordHash(java.lang.Throwable);

  public abstract void errorCheckingStrongJurisdictionPolicyFiles(java.lang.Throwable);

  public abstract void traceBindDNNotFound();

  public abstract void errorDecryptingBindCredential(java.lang.Throwable);

  public abstract void traceLDAPConnectionEnv(java.util.Properties);

  public abstract void traceBeginGetAppConfigEntry(java.lang.String, int);

  public abstract void traceGetAppConfigEntryViaParent(java.lang.String, java.lang.String);

  public abstract void traceGetAppConfigEntryViaDefault(java.lang.String, java.lang.String);

  public abstract void traceEndGetAppConfigEntryWithSuccess(java.lang.String, java.lang.String);

  public abstract void traceEndGetAppConfigEntryWithFailure(java.lang.String);

  public abstract void traceAddAppConfig(java.lang.String, java.lang.String);

  public abstract void traceRemoveAppConfig(java.lang.String);

  public abstract void warnFailureToFindConfig(java.lang.String);

  public abstract void traceBeginLoadConfig(java.net.URL);

  public abstract void traceEndLoadConfigWithSuccess(java.net.URL);

  public abstract void warnEndLoadConfigWithFailure(java.net.URL, java.lang.Throwable);

  public abstract void debugLoadConfigAsXML(java.net.URL);

  public abstract void debugLoadConfigAsSun(java.net.URL, java.lang.Throwable);

  public abstract void warnInvalidModuleOption(java.lang.String);

  public abstract void debugErrorGettingRequestFromPolicyContext(java.lang.Throwable);

  public abstract void traceBeginInitialize();

  public abstract void traceUnauthenticatedIdentity(java.lang.String);

  public abstract void warnFailureToCreateUnauthIdentity(java.lang.Throwable);

  public abstract void traceEndInitialize();

  public abstract void traceBeginLogin();

  public abstract void traceEndLogin(boolean);

  public abstract void traceBeginCommit(boolean);

  public abstract void traceBeginLogout();

  public abstract void traceBeginAbort(boolean);

  public abstract void traceSecurityDomainFound(java.lang.String);

  public abstract void errorGettingJSSESecurityDomain(java.lang.String);

  public abstract void errorFindingSecurityDomain(java.lang.String, java.lang.Throwable);

  public abstract void errorCreatingCertificateVerifier(java.lang.Throwable);

  public abstract void debugPasswordNotACertificate();

  public abstract void traceUsingUnauthIdentity(java.lang.String);

  public abstract void debugFailureToCreateIdentityForAlias(java.lang.String, java.lang.Throwable);

  public abstract void traceBeginGetAliasAndCert();

  public abstract void traceCertificateFound(java.lang.String, java.lang.String);

  public abstract void warnNullCredentialFromCallbackHandler();

  public abstract void traceEndGetAliasAndCert();

  public abstract void traceBeginValidateCredential();

  public abstract void traceValidatingUsingVerifier(java.lang.Class<?>);

  public abstract void warnFailureToFindCertForAlias(java.lang.String, java.lang.Throwable);

  public abstract void warnFailureToValidateCertificate();

  public abstract void traceEndValidateCredential(boolean);

  public abstract void errorLoadingUserRolesPropertiesFiles(java.lang.Throwable);

  public abstract void traceDBCertLoginModuleOptions(java.lang.String, java.lang.String, java.lang.String, boolean);

  public abstract void traceExecuteQuery(java.lang.String, java.lang.String);

  public abstract void debugFailureToCreatePrincipal(java.lang.String, java.lang.Throwable);

  public abstract void errorUsingDisabledDomain(java.lang.String);

  public abstract void traceBindingLDAPUsername(java.lang.String);

  public abstract void traceRejectingEmptyPassword();

  public abstract void traceAssignUserToRole(java.lang.String);

  public abstract void debugFailureToParseNumberProperty(java.lang.String, long);

  public abstract void debugFailureToQueryLDAPAttribute(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void traceSuccessfulLogInToLDAP(java.lang.String);

  public abstract void traceRebindWithConfiguredPrincipal(java.lang.String);

  public abstract void traceFoundUserRolesContextDN(java.lang.String);

  public abstract void traceRolesDNSearch(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int);

  public abstract void traceCheckSearchResult(java.lang.String);

  public abstract void traceFollowRoleDN(java.lang.String);

  public abstract void debugFailureToFindAttrInSearchResult(java.lang.String, java.lang.String);

  public abstract void debugFailureToExecuteRolesDNSearch(java.lang.Throwable);

  public abstract void debugRealHostForTrust(java.lang.String);

  public abstract void debugFailureToLoadPropertiesFile(java.lang.String, java.lang.Throwable);

  public abstract void debugPasswordHashing(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract void debugFailureToInstantiateClass(java.lang.String, java.lang.Throwable);

  public abstract void debugBadPasswordForUsername(java.lang.String);

  public abstract void traceCreateDigestCallback(java.lang.String);

  public abstract void traceAdditionOfRoleToGroup(java.lang.String, java.lang.String);

  public abstract void traceAttemptToLoadResource(java.lang.String);

  public abstract void debugFailureToOpenPropertiesFromURL(java.lang.Throwable);

  public abstract void tracePropertiesFileLoaded(java.lang.String, java.util.Set<?>);

  public abstract void debugJACCDeniedAccess(java.lang.String, javax.security.auth.Subject, java.lang.String);

  public abstract void traceNoMethodPermissions(java.lang.String, java.lang.String);

  public abstract void debugEJBPolicyModuleDelegateState(java.lang.String, java.lang.String, java.lang.String);

  public abstract void debugInsufficientMethodPermissions(java.security.Principal, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract void debugIgnoredException(java.lang.Throwable);

  public abstract void debugInvalidWebJaccCheck();

  public abstract void traceHasResourcePermission(java.lang.String, boolean);

  public abstract void traceHasRolePermission(java.lang.String, boolean);

  public abstract void traceHasUserDataPermission(java.lang.String, boolean);

  public abstract void debugRequisiteModuleFailure(java.lang.String);

  public abstract void debugRequiredModuleFailure(java.lang.String);

  public abstract void traceImpliesMatchesExcludedSet(java.security.Permission);

  public abstract void traceImpliesMatchesUncheckedSet(java.security.Permission);

  public abstract void traceProtectionDomainPrincipals(java.util.List<java.lang.String>);

  public abstract void traceNoPrincipalsInProtectionDomain(java.security.ProtectionDomain);

  public abstract void debugImpliesParameters(java.lang.String, java.security.Permissions);

  public abstract void debugImpliesResult(boolean);

  public abstract void traceNoPolicyContextForId(java.lang.String);

  public abstract void debugJBossPolicyConfigurationConstruction(java.lang.String);

  public abstract void traceAddPermissionToExcludedPolicy(java.security.Permission);

  public abstract void traceAddPermissionsToExcludedPolicy(java.security.PermissionCollection);

  public abstract void traceAddPermissionToRole(java.security.Permission);

  public abstract void traceAddPermissionsToRole(java.security.PermissionCollection);

  public abstract void traceAddPermissionToUncheckedPolicy(java.security.Permission);

  public abstract void traceAddPermissionsToUncheckedPolicy(java.security.PermissionCollection);

  public abstract void tracePolicyConfigurationCommit(java.lang.String);

  public abstract void tracePolicyConfigurationDelete(java.lang.String);

  public abstract void traceLinkConfiguration(java.lang.String);

  public abstract void traceRemoveExcludedPolicy(java.lang.String);

  public abstract void traceRemoveRole(java.lang.String, java.lang.String);

  public abstract void traceRemoveUncheckedPolicy(java.lang.String);

  public abstract void traceMappedX500Principal(java.security.Principal);

  public abstract void traceQueryWithEmptyResult();

  public abstract void debugMappingProviderOptions(java.security.Principal, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>, java.util.Set<java.security.Principal>);

  public abstract void traceNoAuditContextFoundForDomain(java.lang.String);

  public abstract void debugNullAuthorizationManager(java.lang.String);

  public abstract void debugAuthorizationError(java.lang.Throwable);

  public abstract void debugFailureExecutingMethod(java.lang.String, java.lang.Throwable);

  public abstract void traceHostThreadLocalGet(java.lang.String, long);

  public abstract void traceHostThreadLocalSet(java.lang.String, long);

  public abstract void traceBeginDoesUserHaveRole(java.security.Principal, java.lang.String);

  public abstract void traceEndDoesUserHaveRole(boolean);

  public abstract void traceRolesBeforeMapping(java.lang.String);

  public abstract void traceRolesAfterMapping(java.lang.String);

  public abstract void traceDeregisterPolicy(java.lang.String, java.lang.String);

  public abstract void traceRegisterPolicy(java.lang.String, java.lang.String, java.lang.String);

  public abstract void warnSecurityMagementNotSet();

  public abstract void debugNullAuthenticationManager(java.lang.String);

  public abstract void traceStateMachineNextState(java.lang.String, java.lang.String);

  public abstract void traceIgnoreXMLAttribute(java.lang.String, java.lang.String, java.lang.String);

  public abstract void traceSystemIDMismatch(java.lang.String, java.lang.String, java.lang.String);

  public abstract void debugFailureToResolveEntity(java.lang.String, java.lang.String);

  public abstract void traceBeginResolvePublicID(java.lang.String);

  public abstract void traceFoundEntityFromID(java.lang.String, java.lang.String, java.lang.String);

  public abstract void warnFailureToLoadIDFromResource(java.lang.String, java.lang.String, java.lang.String);

  public abstract void traceBeginResolveSystemID(java.lang.String);

  public abstract void traceBeginResolveSystemIDasURL(java.lang.String);

  public abstract void warnResolvingSystemIdAsNonFileURL(java.lang.String);

  public abstract void traceBeginResolveClasspathName(java.lang.String);

  public abstract void traceMappedSystemIdToFilename(java.lang.String);

  public abstract void traceMappedResourceToURL(java.lang.String, java.net.URL);

  public abstract void debugModuleOption(java.lang.String, java.lang.Object);

  public abstract void traceObtainedAuthInfoFromHandler(java.security.Principal, java.lang.Class<?>);

  public abstract void traceJSSEDomainGetKey(java.lang.String);

  public abstract void traceJSSEDomainGetCertificate(java.lang.String);

  public abstract void traceSecRolesAssociationSetSecurityRoles(java.util.Map<java.lang.String, java.util.Set<java.lang.String>>);

  public abstract void traceBeginExecPasswordCmd(java.lang.String);

  public abstract void traceEndExecPasswordCmd(int);

  public abstract void traceBeginGetIdentity(java.lang.String);

  public abstract void traceBeginGetRoleSets();

  public abstract void traceCurrentCallingPrincipal(java.lang.String, java.lang.String);

  public abstract void warnModuleCreationWithEmptyPassword();

  public abstract void infoVaultInitialized();

  public abstract void errorCannotGetMD5AlgorithmInstance();

  public abstract void traceRetrievingPasswordFromCache(java.lang.String);

  public abstract void traceStoringPasswordToCache(java.lang.String);

  public abstract void traceResettingCache();

  public abstract void errorParsingTimeoutNumber();

  public abstract void securityVaultContentVersion(java.lang.String, java.lang.String);

  public abstract void mixedVaultDataFound(java.lang.String, java.lang.String, java.lang.String);

  public abstract void ambiguosKeyForSecurityVaultTransformation(java.lang.String, java.lang.String, java.lang.String);

  public abstract void cannotDeleteOriginalVaultFile(java.lang.String);

  public abstract void vaultDoesnotContainSecretKey(java.lang.String);

  public abstract void keyStoreConvertedToJCEKS(java.lang.String);

  public abstract void errorGettingServerAuthConfig(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void errorGettingServerAuthContext(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void errorGettingModuleInformation(java.lang.Throwable);

  public abstract void wrongBase64StringUsed(java.lang.String);

  public abstract void traceLogoutSubject(java.lang.String, java.lang.String);

  public abstract void warnProblemClosingOriginalLdapContextDuringRebind(javax.naming.NamingException);

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/security/PicketBoxLogger
       2: ldc           #1                  // class org/jboss/security/PicketBoxLogger
       4: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       7: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      10: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #1                  // class org/jboss/security/PicketBoxLogger
      16: putstatic     #5                  // Field LOGGER:Lorg/jboss/security/PicketBoxLogger;
      19: ldc           #1                  // class org/jboss/security/PicketBoxLogger
      21: new           #6                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #1                  // class org/jboss/security/PicketBoxLogger
      30: invokevirtual #2                  // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      33: invokevirtual #3                  // Method java/lang/Package.getName:()Ljava/lang/String;
      36: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #9                  // String .audit
      41: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokestatic  #4                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      50: checkcast     #1                  // class org/jboss/security/PicketBoxLogger
      53: putstatic     #11                 // Field AUDIT_LOGGER:Lorg/jboss/security/PicketBoxLogger;
      56: return
}
