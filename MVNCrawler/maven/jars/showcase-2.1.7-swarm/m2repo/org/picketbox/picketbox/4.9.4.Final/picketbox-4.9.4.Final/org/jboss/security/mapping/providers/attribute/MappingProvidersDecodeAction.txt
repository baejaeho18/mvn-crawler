Compiled from "MappingProvidersDecodeAction.java"
class org.jboss.security.mapping.providers.attribute.MappingProvidersDecodeAction implements java.security.PrivilegedExceptionAction<java.lang.Object> {
  private static final java.lang.RuntimePermission decodePermission;

  java.lang.String password;

  javax.management.ObjectName serviceName;

  org.jboss.security.mapping.providers.attribute.MappingProvidersDecodeAction(java.lang.String, javax.management.ObjectName);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field password:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field serviceName:Ljavax/management/ObjectName;
      14: return

  public java.lang.Object run() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field password:Ljava/lang/String;
       5: invokespecial #4                  // Method decode64:(Ljava/lang/String;)[B
       8: astore_1
       9: new           #5                  // class java/lang/String
      12: dup
      13: aload_1
      14: ldc           #6                  // String UTF-8
      16: invokespecial #7                  // Method java/lang/String."<init>":([BLjava/lang/String;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #8                  // Method java/lang/String.toCharArray:()[C
      24: areturn

  private byte[] decode64(java.lang.String) throws java.lang.Exception;
    Code:
       0: invokestatic  #9                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_2
       4: aload_2
       5: ifnull        15
       8: aload_2
       9: getstatic     #10                 // Field decodePermission:Ljava/lang/RuntimePermission;
      12: invokevirtual #11                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      15: invokestatic  #12                 // Method org/jboss/security/util/MBeanServerLocator.locateJBoss:()Ljavax/management/MBeanServer;
      18: astore_3
      19: aload_3
      20: aload_0
      21: getfield      #3                  // Field serviceName:Ljavax/management/ObjectName;
      24: ldc           #13                 // String decode64
      26: iconst_1
      27: anewarray     #14                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_1
      33: aastore
      34: iconst_1
      35: anewarray     #5                  // class java/lang/String
      38: dup
      39: iconst_0
      40: ldc           #5                  // class java/lang/String
      42: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: aastore
      46: invokeinterface #16,  5           // InterfaceMethod javax/management/MBeanServer.invoke:(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;
      51: checkcast     #17                 // class "[B"
      54: checkcast     #17                 // class "[B"
      57: areturn

  static char[] decode(java.lang.String, javax.management.ObjectName) throws java.lang.Exception;
    Code:
       0: new           #18                 // class org/jboss/security/mapping/providers/attribute/MappingProvidersDecodeAction
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #19                 // Method "<init>":(Ljava/lang/String;Ljavax/management/ObjectName;)V
       9: astore_2
      10: aload_2
      11: invokestatic  #20                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      14: checkcast     #21                 // class "[C"
      17: checkcast     #21                 // class "[C"
      20: astore_3
      21: aload_3
      22: areturn
      23: astore_3
      24: aload_3
      25: invokevirtual #23                 // Method java/security/PrivilegedActionException.getException:()Ljava/lang/Exception;
      28: athrow
    Exception table:
       from    to  target type
          10    22    23   Class java/security/PrivilegedActionException

  static {};
    Code:
       0: new           #24                 // class java/lang/RuntimePermission
       3: dup
       4: ldc           #25                 // String org.jboss.security.auth.spi.DecodeAction.decode
       6: invokespecial #26                 // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
       9: putstatic     #10                 // Field decodePermission:Ljava/lang/RuntimePermission;
      12: return
}
