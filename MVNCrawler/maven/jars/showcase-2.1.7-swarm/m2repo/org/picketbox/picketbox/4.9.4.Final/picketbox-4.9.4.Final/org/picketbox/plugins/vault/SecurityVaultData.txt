Compiled from "SecurityVaultData.java"
public class org.picketbox.plugins.vault.SecurityVaultData implements java.io.Serializable {
  private static final long serialVersionUID;

  private static final int VERSION;

  private transient java.util.Map<java.lang.String, byte[]> vaultData;

  public org.picketbox.plugins.vault.SecurityVaultData();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field vaultData:Ljava/util/Map;
      15: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: new           #5                  // class java/lang/Integer
       4: dup
       5: iconst_1
       6: invokespecial #7                  // Method java/lang/Integer."<init>":(I)V
       9: invokevirtual #8                  // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: aload_1
      13: aload_0
      14: getfield      #4                  // Field vaultData:Ljava/util/Map;
      17: invokevirtual #8                  // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      20: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       4: checkcast     #5                  // class java/lang/Integer
       7: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      10: istore_2
      11: getstatic     #11                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      14: invokeinterface #12,  1           // InterfaceMethod org/jboss/security/PicketBoxLogger.isDebugEnabled:()Z
      19: ifeq          38
      22: getstatic     #11                 // Field org/jboss/security/PicketBoxLogger.LOGGER:Lorg/jboss/security/PicketBoxLogger;
      25: iload_2
      26: invokestatic  #13                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      29: iconst_1
      30: invokestatic  #13                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      33: invokeinterface #14,  3           // InterfaceMethod org/jboss/security/PicketBoxLogger.securityVaultContentVersion:(Ljava/lang/String;Ljava/lang/String;)V
      38: iload_2
      39: iconst_1
      40: if_icmpne     57
      43: aload_0
      44: aload_1
      45: invokevirtual #9                  // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      48: checkcast     #15                 // class java/util/Map
      51: putfield      #4                  // Field vaultData:Ljava/util/Map;
      54: goto          76
      57: getstatic     #16                 // Field org/jboss/security/PicketBoxMessages.MESSAGES:Lorg/jboss/security/PicketBoxMessages;
      60: iload_2
      61: invokestatic  #13                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      64: ldc           #17                 // String 1
      66: iconst_1
      67: invokestatic  #13                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      70: invokeinterface #18,  4           // InterfaceMethod org/jboss/security/PicketBoxMessages.unrecognizedVaultContentVersion:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/RuntimeException;
      75: athrow
      76: return

  byte[] getVaultData(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field vaultData:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #19                 // Method dataKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #21                 // class "[B"
      18: areturn

  void addVaultData(java.lang.String, java.lang.String, java.lang.String, byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field vaultData:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #19                 // Method dataKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload         4
      12: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  boolean deleteVaultData(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field vaultData:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #19                 // Method dataKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: iconst_1
      21: ireturn

  java.util.Set<java.lang.String> getVaultDataKeys();
    Code:
       0: aload_0
       1: getfield      #4                  // Field vaultData:Ljava/util/Map;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  private static java.lang.String dataKey(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #29                 // String ::
      13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn
}
