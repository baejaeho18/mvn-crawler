Compiled from "TypeData.java"
public class javassist.bytecode.stackmap.TypeData$BasicType extends javassist.bytecode.stackmap.TypeData {
  private java.lang.String name;

  private int typeTag;

  public javassist.bytecode.stackmap.TypeData$BasicType(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javassist/bytecode/stackmap/TypeData."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field typeTag:I
      14: return

  public int getTypeTag();
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeTag:I
       4: ireturn

  public int getTypeData(javassist.bytecode.ConstPool);
    Code:
       0: iconst_0
       1: ireturn

  public javassist.bytecode.stackmap.TypeData join();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field javassist/bytecode/stackmap/TypeTag.TOP:Ljavassist/bytecode/stackmap/TypeData;
       4: if_acmpne     9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #5                  // Method javassist/bytecode/stackmap/TypeData.join:()Ljavassist/bytecode/stackmap/TypeData;
      13: areturn

  public javassist.bytecode.stackmap.TypeData$BasicType isBasicType();
    Code:
       0: aload_0
       1: areturn

  public boolean is2WordType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeTag:I
       4: iconst_4
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #3                  // Field typeTag:I
      12: iconst_3
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean eq(javassist.bytecode.stackmap.TypeData);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public void setType(java.lang.String, javassist.ClassPool) throws javassist.bytecode.BadBytecode;
    Code:
       0: new           #6                  // class javassist/bytecode/BadBytecode
       3: dup
       4: new           #7                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #9                  // String conflict:
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #2                  // Field name:Ljava/lang/String;
      20: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #11                 // String  and
      25: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #13                 // Method javassist/bytecode/BadBytecode."<init>":(Ljava/lang/String;)V
      38: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn
}
