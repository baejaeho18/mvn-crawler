Compiled from "CodeIterator.java"
abstract class javassist.bytecode.CodeIterator$Switcher extends javassist.bytecode.CodeIterator$Branch {
  int gap;

  int defaultByte;

  int[] offsets;

  javassist.bytecode.CodeIterator$Pointers pointers;

  javassist.bytecode.CodeIterator$Switcher(int, int, int[], javassist.bytecode.CodeIterator$Pointers);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method javassist/bytecode/CodeIterator$Branch."<init>":(I)V
       5: aload_0
       6: iconst_3
       7: iload_1
       8: iconst_3
       9: iand
      10: isub
      11: putfield      #2                  // Field gap:I
      14: aload_0
      15: iload_2
      16: putfield      #3                  // Field defaultByte:I
      19: aload_0
      20: aload_3
      21: putfield      #4                  // Field offsets:[I
      24: aload_0
      25: aload         4
      27: putfield      #5                  // Field pointers:Ljavassist/bytecode/CodeIterator$Pointers;
      30: return

  void shift(int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pos:I
       4: istore        4
       6: aload_0
       7: iload         4
       9: aload_0
      10: getfield      #3                  // Field defaultByte:I
      13: iload_1
      14: iload_2
      15: iload_3
      16: invokestatic  #7                  // Method shiftOffset:(IIIIZ)I
      19: putfield      #3                  // Field defaultByte:I
      22: aload_0
      23: getfield      #4                  // Field offsets:[I
      26: arraylength
      27: istore        5
      29: iconst_0
      30: istore        6
      32: iload         6
      34: iload         5
      36: if_icmpge     67
      39: aload_0
      40: getfield      #4                  // Field offsets:[I
      43: iload         6
      45: iload         4
      47: aload_0
      48: getfield      #4                  // Field offsets:[I
      51: iload         6
      53: iaload
      54: iload_1
      55: iload_2
      56: iload_3
      57: invokestatic  #7                  // Method shiftOffset:(IIIIZ)I
      60: iastore
      61: iinc          6, 1
      64: goto          32
      67: aload_0
      68: iload_1
      69: iload_2
      70: iload_3
      71: invokespecial #8                  // Method javassist/bytecode/CodeIterator$Branch.shift:(IIZ)V
      74: return

  int gapChanged();
    Code:
       0: iconst_3
       1: aload_0
       2: getfield      #6                  // Field pos:I
       5: iconst_3
       6: iand
       7: isub
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #2                  // Field gap:I
      14: if_icmple     31
      17: iload_1
      18: aload_0
      19: getfield      #2                  // Field gap:I
      22: isub
      23: istore_2
      24: aload_0
      25: iload_1
      26: putfield      #2                  // Field gap:I
      29: iload_2
      30: ireturn
      31: iconst_0
      32: ireturn

  int deltaSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field gap:I
       4: iconst_3
       5: aload_0
       6: getfield      #9                  // Field orgPos:I
       9: iconst_3
      10: iand
      11: isub
      12: isub
      13: ireturn

  int write(int, byte[], int, byte[]) throws javassist.bytecode.BadBytecode;
    Code:
       0: iconst_3
       1: aload_0
       2: getfield      #6                  // Field pos:I
       5: iconst_3
       6: iand
       7: isub
       8: istore        5
      10: aload_0
      11: getfield      #2                  // Field gap:I
      14: iload         5
      16: isub
      17: istore        6
      19: iconst_5
      20: iconst_3
      21: aload_0
      22: getfield      #9                  // Field orgPos:I
      25: iconst_3
      26: iand
      27: isub
      28: iadd
      29: aload_0
      30: invokevirtual #10                 // Method tableSize:()I
      33: iadd
      34: istore        7
      36: iload         6
      38: ifle          49
      41: aload_0
      42: iload         7
      44: iload         6
      46: invokevirtual #11                 // Method adjustOffsets:(II)V
      49: aload         4
      51: iload_3
      52: iinc          3, 1
      55: aload_2
      56: iload_1
      57: baload
      58: bastore
      59: iload         5
      61: iinc          5, -1
      64: ifle          78
      67: aload         4
      69: iload_3
      70: iinc          3, 1
      73: iconst_0
      74: bastore
      75: goto          59
      78: aload_0
      79: getfield      #3                  // Field defaultByte:I
      82: aload         4
      84: iload_3
      85: invokestatic  #12                 // Method javassist/bytecode/ByteArray.write32bit:(I[BI)V
      88: aload_0
      89: iload_3
      90: iconst_4
      91: iadd
      92: aload         4
      94: invokevirtual #13                 // Method write2:(I[B)I
      97: istore        8
      99: iload_3
     100: iload         8
     102: iconst_4
     103: iadd
     104: iadd
     105: istore_3
     106: iload         6
     108: iinc          6, -1
     111: ifle          125
     114: aload         4
     116: iload_3
     117: iinc          3, 1
     120: iconst_0
     121: bastore
     122: goto          106
     125: iconst_5
     126: iconst_3
     127: aload_0
     128: getfield      #9                  // Field orgPos:I
     131: iconst_3
     132: iand
     133: isub
     134: iadd
     135: iload         8
     137: iadd
     138: ireturn

  abstract int write2(int, byte[]);

  abstract int tableSize();

  void adjustOffsets(int, int) throws javassist.bytecode.BadBytecode;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pointers:Ljavassist/bytecode/CodeIterator$Pointers;
       4: aload_0
       5: getfield      #6                  // Field pos:I
       8: iload_1
       9: iadd
      10: iload_2
      11: invokevirtual #14                 // Method javassist/bytecode/CodeIterator$Pointers.shiftForSwitch:(II)V
      14: aload_0
      15: getfield      #3                  // Field defaultByte:I
      18: iload_1
      19: if_icmpne     32
      22: aload_0
      23: dup
      24: getfield      #3                  // Field defaultByte:I
      27: iload_2
      28: isub
      29: putfield      #3                  // Field defaultByte:I
      32: iconst_0
      33: istore_3
      34: iload_3
      35: aload_0
      36: getfield      #4                  // Field offsets:[I
      39: arraylength
      40: if_icmpge     69
      43: aload_0
      44: getfield      #4                  // Field offsets:[I
      47: iload_3
      48: iaload
      49: iload_1
      50: if_icmpne     63
      53: aload_0
      54: getfield      #4                  // Field offsets:[I
      57: iload_3
      58: dup2
      59: iaload
      60: iload_2
      61: isub
      62: iastore
      63: iinc          3, 1
      66: goto          34
      69: return
}
