Compiled from "CodeIterator.java"
abstract class javassist.bytecode.CodeIterator$Branch16 extends javassist.bytecode.CodeIterator$Branch {
  int offset;

  int state;

  static final int BIT16;

  static final int EXPAND;

  static final int BIT32;

  javassist.bytecode.CodeIterator$Branch16(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method javassist/bytecode/CodeIterator$Branch."<init>":(I)V
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field offset:I
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field state:I
      15: return

  void shift(int, int, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field pos:I
       5: aload_0
       6: getfield      #2                  // Field offset:I
       9: iload_1
      10: iload_2
      11: iload_3
      12: invokestatic  #5                  // Method shiftOffset:(IIIIZ)I
      15: putfield      #2                  // Field offset:I
      18: aload_0
      19: iload_1
      20: iload_2
      21: iload_3
      22: invokespecial #6                  // Method javassist/bytecode/CodeIterator$Branch.shift:(IIZ)V
      25: aload_0
      26: getfield      #3                  // Field state:I
      29: ifne          57
      32: aload_0
      33: getfield      #2                  // Field offset:I
      36: sipush        -32768
      39: if_icmplt     52
      42: sipush        32767
      45: aload_0
      46: getfield      #2                  // Field offset:I
      49: if_icmpge     57
      52: aload_0
      53: iconst_1
      54: putfield      #3                  // Field state:I
      57: return

  boolean expanded();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_1
       5: if_icmpne     15
       8: aload_0
       9: iconst_2
      10: putfield      #3                  // Field state:I
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  abstract int deltaSize();

  abstract void write32(int, byte[], int, byte[]);

  int write(int, byte[], int, byte[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_2
       5: if_icmpne     20
       8: aload_0
       9: iload_1
      10: aload_2
      11: iload_3
      12: aload         4
      14: invokevirtual #7                  // Method write32:(I[BI[B)V
      17: goto          39
      20: aload         4
      22: iload_3
      23: aload_2
      24: iload_1
      25: baload
      26: bastore
      27: aload_0
      28: getfield      #2                  // Field offset:I
      31: aload         4
      33: iload_3
      34: iconst_1
      35: iadd
      36: invokestatic  #8                  // Method javassist/bytecode/ByteArray.write16bit:(I[BI)V
      39: iconst_3
      40: ireturn
}
