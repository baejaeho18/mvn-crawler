Compiled from "StackMapTable.java"
class javassist.bytecode.StackMapTable$Shifter extends javassist.bytecode.StackMapTable$Walker {
  private javassist.bytecode.StackMapTable stackMap;

  int where;

  int gap;

  int position;

  byte[] updatedInfo;

  boolean exclusive;

  public javassist.bytecode.StackMapTable$Shifter(javassist.bytecode.StackMapTable, int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javassist/bytecode/StackMapTable$Walker."<init>":(Ljavassist/bytecode/StackMapTable;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field stackMap:Ljavassist/bytecode/StackMapTable;
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field where:I
      15: aload_0
      16: iload_3
      17: putfield      #4                  // Field gap:I
      20: aload_0
      21: iconst_0
      22: putfield      #5                  // Field position:I
      25: aload_0
      26: aconst_null
      27: putfield      #6                  // Field updatedInfo:[B
      30: aload_0
      31: iload         4
      33: putfield      #7                  // Field exclusive:Z
      36: return

  public void doit() throws javassist.bytecode.BadBytecode;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method parse:()V
       4: aload_0
       5: getfield      #6                  // Field updatedInfo:[B
       8: ifnull        22
      11: aload_0
      12: getfield      #2                  // Field stackMap:Ljavassist/bytecode/StackMapTable;
      15: aload_0
      16: getfield      #6                  // Field updatedInfo:[B
      19: invokevirtual #9                  // Method javassist/bytecode/StackMapTable.set:([B)V
      22: return

  public void sameFrame(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: sipush        251
       7: invokevirtual #10                 // Method update:(IIII)V
      10: return

  public void sameLocals(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: bipush        64
       5: sipush        247
       8: invokevirtual #10                 // Method update:(IIII)V
      11: return

  void update(int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field position:I
       4: istore        5
       6: aload_0
       7: iload         5
       9: iload_2
      10: iadd
      11: iload         5
      13: ifne          20
      16: iconst_0
      17: goto          21
      20: iconst_1
      21: iadd
      22: putfield      #5                  // Field position:I
      25: aload_0
      26: getfield      #7                  // Field exclusive:Z
      29: ifeq          62
      32: iload         5
      34: aload_0
      35: getfield      #3                  // Field where:I
      38: if_icmpge     56
      41: aload_0
      42: getfield      #3                  // Field where:I
      45: aload_0
      46: getfield      #5                  // Field position:I
      49: if_icmpgt     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: istore        6
      59: goto          89
      62: iload         5
      64: aload_0
      65: getfield      #3                  // Field where:I
      68: if_icmpgt     86
      71: aload_0
      72: getfield      #3                  // Field where:I
      75: aload_0
      76: getfield      #5                  // Field position:I
      79: if_icmpge     86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: istore        6
      89: iload         6
      91: ifeq          191
      94: iload_2
      95: aload_0
      96: getfield      #4                  // Field gap:I
      99: iadd
     100: istore        7
     102: aload_0
     103: dup
     104: getfield      #5                  // Field position:I
     107: aload_0
     108: getfield      #4                  // Field gap:I
     111: iadd
     112: putfield      #5                  // Field position:I
     115: iload         7
     117: bipush        64
     119: if_icmpge     136
     122: aload_0
     123: getfield      #11                 // Field info:[B
     126: iload_1
     127: iload         7
     129: iload_3
     130: iadd
     131: i2b
     132: bastore
     133: goto          191
     136: iload_2
     137: bipush        64
     139: if_icmpge     179
     142: aload_0
     143: getfield      #11                 // Field info:[B
     146: iload_1
     147: iconst_2
     148: invokestatic  #12                 // Method insertGap:([BII)[B
     151: astore        8
     153: aload         8
     155: iload_1
     156: iload         4
     158: i2b
     159: bastore
     160: iload         7
     162: aload         8
     164: iload_1
     165: iconst_1
     166: iadd
     167: invokestatic  #13                 // Method javassist/bytecode/ByteArray.write16bit:(I[BI)V
     170: aload_0
     171: aload         8
     173: putfield      #6                  // Field updatedInfo:[B
     176: goto          191
     179: iload         7
     181: aload_0
     182: getfield      #11                 // Field info:[B
     185: iload_1
     186: iconst_1
     187: iadd
     188: invokestatic  #13                 // Method javassist/bytecode/ByteArray.write16bit:(I[BI)V
     191: return

  static byte[] insertGap(byte[], int, int);
    Code:
       0: aload_0
       1: arraylength
       2: istore_3
       3: iload_3
       4: iload_2
       5: iadd
       6: newarray       byte
       8: astore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload_3
      16: if_icmpge     46
      19: aload         4
      21: iload         5
      23: iload         5
      25: iload_1
      26: if_icmpge     33
      29: iconst_0
      30: goto          34
      33: iload_2
      34: iadd
      35: aload_0
      36: iload         5
      38: baload
      39: bastore
      40: iinc          5, 1
      43: goto          13
      46: aload         4
      48: areturn

  public void chopFrame(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #14                 // Method update:(II)V
       6: return

  public void appendFrame(int, int, int[], int[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #14                 // Method update:(II)V
       6: return

  public void fullFrame(int, int, int[], int[], int[], int[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #14                 // Method update:(II)V
       6: return

  void update(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field position:I
       4: istore_3
       5: aload_0
       6: iload_3
       7: iload_2
       8: iadd
       9: iload_3
      10: ifne          17
      13: iconst_0
      14: goto          18
      17: iconst_1
      18: iadd
      19: putfield      #5                  // Field position:I
      22: aload_0
      23: getfield      #7                  // Field exclusive:Z
      26: ifeq          58
      29: iload_3
      30: aload_0
      31: getfield      #3                  // Field where:I
      34: if_icmpge     52
      37: aload_0
      38: getfield      #3                  // Field where:I
      41: aload_0
      42: getfield      #5                  // Field position:I
      45: if_icmpgt     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        4
      55: goto          84
      58: iload_3
      59: aload_0
      60: getfield      #3                  // Field where:I
      63: if_icmpgt     81
      66: aload_0
      67: getfield      #3                  // Field where:I
      70: aload_0
      71: getfield      #5                  // Field position:I
      74: if_icmpge     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: istore        4
      84: iload         4
      86: ifeq          122
      89: iload_2
      90: aload_0
      91: getfield      #4                  // Field gap:I
      94: iadd
      95: istore        5
      97: iload         5
      99: aload_0
     100: getfield      #11                 // Field info:[B
     103: iload_1
     104: iconst_1
     105: iadd
     106: invokestatic  #13                 // Method javassist/bytecode/ByteArray.write16bit:(I[BI)V
     109: aload_0
     110: dup
     111: getfield      #5                  // Field position:I
     114: aload_0
     115: getfield      #4                  // Field gap:I
     118: iadd
     119: putfield      #5                  // Field position:I
     122: return
}
