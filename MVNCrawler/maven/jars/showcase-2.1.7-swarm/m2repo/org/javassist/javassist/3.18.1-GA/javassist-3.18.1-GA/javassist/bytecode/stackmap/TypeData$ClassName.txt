Compiled from "TypeData.java"
public class javassist.bytecode.stackmap.TypeData$ClassName extends javassist.bytecode.stackmap.TypeData {
  private java.lang.String name;

  public javassist.bytecode.stackmap.TypeData$ClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javassist/bytecode/stackmap/TypeData."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public javassist.bytecode.stackmap.TypeData$BasicType isBasicType();
    Code:
       0: aconst_null
       1: areturn

  public boolean is2WordType();
    Code:
       0: iconst_0
       1: ireturn

  public int getTypeTag();
    Code:
       0: bipush        7
       2: ireturn

  public int getTypeData(javassist.bytecode.ConstPool);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #3                  // Method getName:()Ljava/lang/String;
       5: invokevirtual #4                  // Method javassist/bytecode/ConstPool.addClassInfo:(Ljava/lang/String;)I
       8: ireturn

  public boolean eq(javassist.bytecode.stackmap.TypeData);
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: aload_1
       5: invokevirtual #5                  // Method javassist/bytecode/stackmap/TypeData.getName:()Ljava/lang/String;
       8: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ireturn

  public void setType(java.lang.String, javassist.ClassPool) throws javassist.bytecode.BadBytecode;
    Code:
       0: return
}
