Compiled from "GridInputStream.java"
public class org.jgroups.blocks.GridInputStream extends java.io.InputStream {
  final org.jgroups.blocks.ReplCache<java.lang.String, byte[]> cache;

  final int chunk_size;

  final java.lang.String name;

  protected final org.jgroups.blocks.GridFile file;

  int index;

  int local_index;

  byte[] current_buffer;

  boolean end_reached;

  static final org.jgroups.logging.Log log;

  org.jgroups.blocks.GridInputStream(org.jgroups.blocks.GridFile, org.jgroups.blocks.ReplCache<java.lang.String, byte[]>, int) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field index:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field local_index:I
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field current_buffer:[B
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field end_reached:Z
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field file:Lorg/jgroups/blocks/GridFile;
      29: aload_0
      30: aload_1
      31: invokevirtual #7                  // Method org/jgroups/blocks/GridFile.getPath:()Ljava/lang/String;
      34: putfield      #8                  // Field name:Ljava/lang/String;
      37: aload_0
      38: aload_2
      39: putfield      #9                  // Field cache:Lorg/jgroups/blocks/ReplCache;
      42: aload_0
      43: iload_3
      44: putfield      #10                 // Field chunk_size:I
      47: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getBytesRemainingInChunk:()I
       4: istore_1
       5: iload_1
       6: ifne          62
       9: aload_0
      10: getfield      #5                  // Field end_reached:Z
      13: ifeq          18
      16: iconst_m1
      17: ireturn
      18: aload_0
      19: aload_0
      20: invokespecial #12                 // Method fetchNextChunk:()[B
      23: putfield      #4                  // Field current_buffer:[B
      26: aload_0
      27: iconst_0
      28: putfield      #3                  // Field local_index:I
      31: aload_0
      32: getfield      #4                  // Field current_buffer:[B
      35: ifnonnull     40
      38: iconst_m1
      39: ireturn
      40: aload_0
      41: getfield      #4                  // Field current_buffer:[B
      44: arraylength
      45: aload_0
      46: getfield      #10                 // Field chunk_size:I
      49: if_icmpge     57
      52: aload_0
      53: iconst_1
      54: putfield      #5                  // Field end_reached:Z
      57: aload_0
      58: invokespecial #11                 // Method getBytesRemainingInChunk:()I
      61: istore_1
      62: aload_0
      63: getfield      #4                  // Field current_buffer:[B
      66: aload_0
      67: dup
      68: getfield      #3                  // Field local_index:I
      71: dup_x1
      72: iconst_1
      73: iadd
      74: putfield      #3                  // Field local_index:I
      77: baload
      78: istore_2
      79: aload_0
      80: dup
      81: getfield      #2                  // Field index:I
      84: iconst_1
      85: iadd
      86: putfield      #2                  // Field index:I
      89: iload_2
      90: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #13                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload_3
       4: ifle          157
       7: aload_0
       8: invokespecial #11                 // Method getBytesRemainingInChunk:()I
      11: istore        5
      13: iload         5
      15: ifne          92
      18: aload_0
      19: getfield      #5                  // Field end_reached:Z
      22: ifeq          37
      25: iload         4
      27: ifle          35
      30: iload         4
      32: goto          36
      35: iconst_m1
      36: ireturn
      37: aload_0
      38: aload_0
      39: invokespecial #12                 // Method fetchNextChunk:()[B
      42: putfield      #4                  // Field current_buffer:[B
      45: aload_0
      46: iconst_0
      47: putfield      #3                  // Field local_index:I
      50: aload_0
      51: getfield      #4                  // Field current_buffer:[B
      54: ifnonnull     69
      57: iload         4
      59: ifle          67
      62: iload         4
      64: goto          68
      67: iconst_m1
      68: ireturn
      69: aload_0
      70: getfield      #4                  // Field current_buffer:[B
      73: arraylength
      74: aload_0
      75: getfield      #10                 // Field chunk_size:I
      78: if_icmpge     86
      81: aload_0
      82: iconst_1
      83: putfield      #5                  // Field end_reached:Z
      86: aload_0
      87: invokespecial #11                 // Method getBytesRemainingInChunk:()I
      90: istore        5
      92: iload_3
      93: iload         5
      95: invokestatic  #14                 // Method java/lang/Math.min:(II)I
      98: istore        6
     100: aload_0
     101: getfield      #4                  // Field current_buffer:[B
     104: aload_0
     105: getfield      #3                  // Field local_index:I
     108: aload_1
     109: iload_2
     110: iload         6
     112: invokestatic  #15                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     115: aload_0
     116: dup
     117: getfield      #3                  // Field local_index:I
     120: iload         6
     122: iadd
     123: putfield      #3                  // Field local_index:I
     126: iload_2
     127: iload         6
     129: iadd
     130: istore_2
     131: iload_3
     132: iload         6
     134: isub
     135: istore_3
     136: iload         4
     138: iload         6
     140: iadd
     141: istore        4
     143: aload_0
     144: dup
     145: getfield      #2                  // Field index:I
     148: iload         6
     150: iadd
     151: putfield      #2                  // Field index:I
     154: goto          3
     157: iload         4
     159: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: new           #16                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int available() throws java.io.IOException;
    Code:
       0: new           #16                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: iconst_0
       3: dup_x1
       4: putfield      #2                  // Field index:I
       7: putfield      #3                  // Field local_index:I
      10: aload_0
      11: iconst_0
      12: putfield      #5                  // Field end_reached:Z
      15: return

  private int getBytesRemainingInChunk();
    Code:
       0: aload_0
       1: getfield      #4                  // Field current_buffer:[B
       4: ifnonnull     11
       7: iconst_0
       8: goto          21
      11: aload_0
      12: getfield      #4                  // Field current_buffer:[B
      15: arraylength
      16: aload_0
      17: getfield      #3                  // Field local_index:I
      20: isub
      21: ireturn

  private byte[] fetchNextChunk();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method getChunkNumber:()I
       4: istore_1
       5: new           #19                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      12: aload_0
      13: getfield      #8                  // Field name:Ljava/lang/String;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String .#
      21: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: astore_2
      32: aload_0
      33: getfield      #9                  // Field cache:Lorg/jgroups/blocks/ReplCache;
      36: aload_2
      37: invokevirtual #25                 // Method org/jgroups/blocks/ReplCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #26                 // class "[B"
      43: astore_3
      44: getstatic     #27                 // Field log:Lorg/jgroups/logging/Log;
      47: invokeinterface #28,  1           // InterfaceMethod org/jgroups/logging/Log.isTraceEnabled:()Z
      52: ifeq          131
      55: getstatic     #27                 // Field log:Lorg/jgroups/logging/Log;
      58: new           #19                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #29                 // String fetching index=
      67: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #2                  // Field index:I
      74: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      77: ldc           #30                 // String , key=
      79: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #31                 // String :
      88: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_3
      92: ifnull        118
      95: new           #19                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     102: aload_3
     103: arraylength
     104: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     107: ldc           #32                 // String  bytes
     109: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: goto          120
     118: ldc           #33                 // String null
     120: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokeinterface #34,  2           // InterfaceMethod org/jgroups/logging/Log.trace:(Ljava/lang/String;)V
     131: aload_3
     132: areturn

  private int getChunkNumber();
    Code:
       0: aload_0
       1: getfield      #2                  // Field index:I
       4: aload_0
       5: getfield      #10                 // Field chunk_size:I
       8: idiv
       9: ireturn

  static {};
    Code:
       0: ldc_w         #35                 // class org/jgroups/blocks/GridInputStream
       3: invokestatic  #36                 // Method org/jgroups/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/jgroups/logging/Log;
       6: putstatic     #27                 // Field log:Lorg/jgroups/logging/Log;
       9: return
}
