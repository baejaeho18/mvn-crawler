Compiled from "FD_SOCK.java"
public class org.jgroups.protocols.FD_SOCK$FdHeader extends org.jgroups.Header {
  public static final byte SUSPECT;

  public static final byte UNSUSPECT;

  public static final byte WHO_HAS_SOCK;

  public static final byte I_HAVE_SOCK;

  public static final byte GET_CACHE;

  public static final byte GET_CACHE_RSP;

  byte type;

  org.jgroups.Address mbr;

  org.jgroups.stack.IpAddress sock_addr;

  java.util.Set<org.jgroups.Address> mbrs;

  public org.jgroups.protocols.FD_SOCK$FdHeader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: bipush        10
       7: putfield      #2                  // Field type:B
      10: return

  public org.jgroups.protocols.FD_SOCK$FdHeader(byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: bipush        10
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: iload_1
      12: putfield      #2                  // Field type:B
      15: return

  public org.jgroups.protocols.FD_SOCK$FdHeader(byte, org.jgroups.Address);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: bipush        10
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: iload_1
      12: putfield      #2                  // Field type:B
      15: aload_0
      16: aload_2
      17: putfield      #3                  // Field mbr:Lorg/jgroups/Address;
      20: return

  public org.jgroups.protocols.FD_SOCK$FdHeader(byte, org.jgroups.Address, org.jgroups.stack.IpAddress);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: bipush        10
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: iload_1
      12: putfield      #2                  // Field type:B
      15: aload_0
      16: aload_2
      17: putfield      #3                  // Field mbr:Lorg/jgroups/Address;
      20: aload_0
      21: aload_3
      22: putfield      #4                  // Field sock_addr:Lorg/jgroups/stack/IpAddress;
      25: return

  public org.jgroups.protocols.FD_SOCK$FdHeader(byte, java.util.Set<org.jgroups.Address>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: bipush        10
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: iload_1
      12: putfield      #2                  // Field type:B
      15: aload_0
      16: aload_2
      17: putfield      #5                  // Field mbrs:Ljava/util/Set;
      20: return

  public java.lang.String toString();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field type:B
      13: invokestatic  #8                  // Method type2String:(B)Ljava/lang/String;
      16: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
      24: ifnull        41
      27: aload_1
      28: ldc           #10                 // String , mbr=
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
      37: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: pop
      41: aload_0
      42: getfield      #4                  // Field sock_addr:Lorg/jgroups/stack/IpAddress;
      45: ifnull        62
      48: aload_1
      49: ldc           #12                 // String , sock_addr=
      51: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #4                  // Field sock_addr:Lorg/jgroups/stack/IpAddress;
      58: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: pop
      62: aload_0
      63: getfield      #5                  // Field mbrs:Ljava/util/Set;
      66: ifnull        83
      69: aload_1
      70: ldc           #13                 // String , mbrs=
      72: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: getfield      #5                  // Field mbrs:Ljava/util/Set;
      79: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_1
      84: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public static java.lang.String type2String(byte);
    Code:
       0: iload_0
       1: tableswitch   { // 10 to 15
                    10: 40
                    11: 43
                    12: 46
                    13: 49
                    14: 52
                    15: 55
               default: 58
          }
      40: ldc           #15                 // String SUSPECT
      42: areturn
      43: ldc           #16                 // String UNSUSPECT
      45: areturn
      46: ldc           #17                 // String WHO_HAS_SOCK
      48: areturn
      49: ldc           #18                 // String I_HAVE_SOCK
      51: areturn
      52: ldc           #19                 // String GET_CACHE
      54: areturn
      55: ldc           #20                 // String GET_CACHE_RSP
      57: areturn
      58: new           #6                  // class java/lang/StringBuilder
      61: dup
      62: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #21                 // String unknown type (
      67: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload_0
      71: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: bipush        41
      76: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      79: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: areturn

  public int size();
    Code:
       0: iconst_1
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
       7: invokestatic  #24                 // Method org/jgroups/util/Util.size:(Lorg/jgroups/Address;)I
      10: iadd
      11: istore_1
      12: iconst_0
      13: istore_2
      14: iinc          2, 1
      17: aload_0
      18: getfield      #4                  // Field sock_addr:Lorg/jgroups/stack/IpAddress;
      21: ifnull        34
      24: iload_2
      25: aload_0
      26: getfield      #4                  // Field sock_addr:Lorg/jgroups/stack/IpAddress;
      29: invokevirtual #25                 // Method org/jgroups/stack/IpAddress.size:()I
      32: iadd
      33: istore_2
      34: iload_1
      35: iload_2
      36: iadd
      37: istore_1
      38: iinc          1, 4
      41: aload_0
      42: getfield      #5                  // Field mbrs:Ljava/util/Set;
      45: ifnull        89
      48: aload_0
      49: getfield      #5                  // Field mbrs:Ljava/util/Set;
      52: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          89
      67: aload_3
      68: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #29                 // class org/jgroups/Address
      76: astore        4
      78: iload_1
      79: aload         4
      81: invokestatic  #24                 // Method org/jgroups/util/Util.size:(Lorg/jgroups/Address;)I
      84: iadd
      85: istore_1
      86: goto          58
      89: iload_1
      90: ireturn

  public void writeTo(java.io.DataOutput) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field type:B
       5: invokeinterface #30,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: aload_0
      11: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
      14: aload_1
      15: invokestatic  #31                 // Method org/jgroups/util/Util.writeAddress:(Lorg/jgroups/Address;Ljava/io/DataOutput;)V
      18: aload_0
      19: getfield      #4                  // Field sock_addr:Lorg/jgroups/stack/IpAddress;
      22: aload_1
      23: invokestatic  #32                 // Method org/jgroups/util/Util.writeStreamable:(Lorg/jgroups/util/Streamable;Ljava/io/DataOutput;)V
      26: aload_0
      27: getfield      #5                  // Field mbrs:Ljava/util/Set;
      30: ifnull        45
      33: aload_0
      34: getfield      #5                  // Field mbrs:Ljava/util/Set;
      37: invokeinterface #33,  1           // InterfaceMethod java/util/Set.size:()I
      42: goto          46
      45: iconst_0
      46: istore_2
      47: aload_1
      48: iload_2
      49: invokeinterface #34,  2           // InterfaceMethod java/io/DataOutput.writeInt:(I)V
      54: iload_2
      55: ifle          97
      58: aload_0
      59: getfield      #5                  // Field mbrs:Ljava/util/Set;
      62: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      67: astore_3
      68: aload_3
      69: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          97
      77: aload_3
      78: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #29                 // class org/jgroups/Address
      86: astore        4
      88: aload         4
      90: aload_1
      91: invokestatic  #31                 // Method org/jgroups/util/Util.writeAddress:(Lorg/jgroups/Address;Ljava/io/DataOutput;)V
      94: goto          68
      97: return

  public void readFrom(java.io.DataInput) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #35,  1           // InterfaceMethod java/io/DataInput.readByte:()B
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: aload_1
      12: invokestatic  #36                 // Method org/jgroups/util/Util.readAddress:(Ljava/io/DataInput;)Lorg/jgroups/Address;
      15: putfield      #3                  // Field mbr:Lorg/jgroups/Address;
      18: aload_0
      19: ldc_w         #37                 // class org/jgroups/stack/IpAddress
      22: aload_1
      23: invokestatic  #38                 // Method org/jgroups/util/Util.readStreamable:(Ljava/lang/Class;Ljava/io/DataInput;)Lorg/jgroups/util/Streamable;
      26: checkcast     #37                 // class org/jgroups/stack/IpAddress
      29: putfield      #4                  // Field sock_addr:Lorg/jgroups/stack/IpAddress;
      32: aload_1
      33: invokeinterface #39,  1           // InterfaceMethod java/io/DataInput.readInt:()I
      38: istore_2
      39: iload_2
      40: ifle          88
      43: aload_0
      44: getfield      #5                  // Field mbrs:Ljava/util/Set;
      47: ifnonnull     61
      50: aload_0
      51: new           #40                 // class java/util/HashSet
      54: dup
      55: invokespecial #41                 // Method java/util/HashSet."<init>":()V
      58: putfield      #5                  // Field mbrs:Ljava/util/Set;
      61: iconst_0
      62: istore_3
      63: iload_3
      64: iload_2
      65: if_icmpge     88
      68: aload_0
      69: getfield      #5                  // Field mbrs:Ljava/util/Set;
      72: aload_1
      73: invokestatic  #36                 // Method org/jgroups/util/Util.readAddress:(Ljava/io/DataInput;)Lorg/jgroups/Address;
      76: invokeinterface #42,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      81: pop
      82: iinc          3, 1
      85: goto          63
      88: return
}
