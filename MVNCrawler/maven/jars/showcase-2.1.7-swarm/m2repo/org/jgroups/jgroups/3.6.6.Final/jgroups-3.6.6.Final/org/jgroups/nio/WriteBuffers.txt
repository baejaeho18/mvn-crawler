Compiled from "WriteBuffers.java"
public class org.jgroups.nio.WriteBuffers extends org.jgroups.nio.Buffers {
  protected int position;

  protected int limit;

  public org.jgroups.nio.WriteBuffers();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/nio/Buffers."<init>":()V
       4: return

  public org.jgroups.nio.WriteBuffers(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method org/jgroups/nio/Buffers."<init>":(I)V
       5: return

  public org.jgroups.nio.WriteBuffers(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/jgroups/nio/Buffers."<init>":(Ljava/nio/ByteBuffer;)V
       5: aload_1
       6: ifnonnull     19
       9: new           #4                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #5                  // String buffer must not be null
      15: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: iconst_2
      21: putfield      #7                  // Field limit:I
      24: return

  public int position();
    Code:
       0: aload_0
       1: getfield      #8                  // Field position:I
       4: ireturn

  public int limit();
    Code:
       0: aload_0
       1: getfield      #7                  // Field limit:I
       4: ireturn

  public boolean write(java.nio.channels.SocketChannel, java.nio.ByteBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method spaceAvailable:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #10                 // Method makeSpace:()Z
      11: ifeq          19
      14: aload_0
      15: aload_2
      16: invokevirtual #11                 // Method add:(Ljava/nio/ByteBuffer;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #12                 // Method write:(Ljava/nio/channels/SocketChannel;)Z
      24: ireturn

  public boolean write(java.nio.channels.SocketChannel) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method size:()I
       4: istore_2
       5: iload_2
       6: ifne          11
       9: iconst_1
      10: ireturn
      11: aload_1
      12: ifnull        36
      15: aload_1
      16: aload_0
      17: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      20: aload_0
      21: getfield      #8                  // Field position:I
      24: iload_2
      25: invokevirtual #15                 // Method java/nio/channels/SocketChannel.write:([Ljava/nio/ByteBuffer;II)J
      28: pop2
      29: goto          36
      32: astore_3
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #19                 // Method nullData:()Z
      40: ireturn
    Exception table:
       from    to  target type
          15    29    32   Class java/nio/channels/ClosedChannelException
          15    29    35   Class java/nio/channels/NotYetConnectedException
          15    29    35   Class java/io/IOException

  public int remaining();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #8                  // Field position:I
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #7                  // Field limit:I
      12: if_icmpge     35
      15: aload_0
      16: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      19: iload_2
      20: aaload
      21: astore_3
      22: iload_1
      23: aload_3
      24: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      27: iadd
      28: istore_1
      29: iinc          2, 1
      32: goto          7
      35: iload_1
      36: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field limit:I
       4: aload_0
       5: getfield      #8                  // Field position:I
       8: isub
       9: ireturn

  public java.lang.String print();
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_1
       9: istore_2
      10: aload_0
      11: getfield      #8                  // Field position:I
      14: istore_3
      15: iload_3
      16: aload_0
      17: getfield      #7                  // Field limit:I
      20: if_icmpge     59
      23: iload_2
      24: ifeq          32
      27: iconst_0
      28: istore_2
      29: goto          39
      32: aload_1
      33: ldc           #23                 // String ,
      35: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_1
      40: aload_0
      41: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      44: iload_3
      45: aaload
      46: invokestatic  #25                 // Method org/jgroups/util/Util.print:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
      49: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: iinc          3, 1
      56: goto          15
      59: aload_1
      60: ldc           #26                 // String  (
      62: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokevirtual #13                 // Method size:()I
      69: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: ldc           #28                 // String  elements, remaining=
      74: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: invokevirtual #29                 // Method remaining:()I
      81: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: ldc           #30                 // String )
      86: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_1
      91: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #32                 // String [%d bufs pos=%d lim=%d cap=%d rem=%d]
       2: iconst_5
       3: anewarray     #33                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #13                 // Method size:()I
      12: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #8                  // Field position:I
      22: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_0
      29: getfield      #7                  // Field limit:I
      32: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aastore
      36: dup
      37: iconst_3
      38: aload_0
      39: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      42: arraylength
      43: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: aastore
      47: dup
      48: iconst_4
      49: aload_0
      50: invokevirtual #29                 // Method remaining:()I
      53: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aastore
      57: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: areturn

  protected boolean spaceAvailable();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
       4: arraylength
       5: aload_0
       6: getfield      #7                  // Field limit:I
       9: isub
      10: iconst_2
      11: if_icmplt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected boolean makeSpace();
    Code:
       0: aload_0
       1: getfield      #8                  // Field position:I
       4: aload_0
       5: getfield      #7                  // Field limit:I
       8: if_icmpne     23
      11: aload_0
      12: aload_0
      13: iconst_0
      14: dup_x1
      15: putfield      #7                  // Field limit:I
      18: putfield      #8                  // Field position:I
      21: iconst_1
      22: ireturn
      23: aload_0
      24: getfield      #8                  // Field position:I
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #13                 // Method size:()I
      36: istore_1
      37: iconst_0
      38: istore_2
      39: aload_0
      40: getfield      #8                  // Field position:I
      43: istore_3
      44: iload_2
      45: iload_1
      46: if_icmpge     70
      49: aload_0
      50: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      53: iload_2
      54: aload_0
      55: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      58: iload_3
      59: aaload
      60: aastore
      61: iinc          2, 1
      64: iinc          3, 1
      67: goto          44
      70: iload_1
      71: istore_2
      72: iload_2
      73: aload_0
      74: getfield      #7                  // Field limit:I
      77: if_icmpge     93
      80: aload_0
      81: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      84: iload_2
      85: aconst_null
      86: aastore
      87: iinc          2, 1
      90: goto          72
      93: aload_0
      94: iconst_0
      95: putfield      #8                  // Field position:I
      98: aload_0
      99: iload_1
     100: putfield      #7                  // Field limit:I
     103: aload_0
     104: invokevirtual #9                  // Method spaceAvailable:()Z
     107: ireturn

  protected void add(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
       9: aload_0
      10: dup
      11: getfield      #7                  // Field limit:I
      14: dup_x1
      15: iconst_1
      16: iadd
      17: putfield      #7                  // Field limit:I
      20: aload_1
      21: invokestatic  #36                 // Method makeLengthBuffer:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      24: aastore
      25: aload_0
      26: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      29: aload_0
      30: dup
      31: getfield      #7                  // Field limit:I
      34: dup_x1
      35: iconst_1
      36: iadd
      37: putfield      #7                  // Field limit:I
      40: aload_1
      41: aastore
      42: return

  protected boolean nullData();
    Code:
       0: aload_0
       1: getfield      #8                  // Field position:I
       4: aload_0
       5: getfield      #7                  // Field limit:I
       8: if_icmpge     50
      11: aload_0
      12: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #8                  // Field position:I
      19: aaload
      20: astore_1
      21: aload_1
      22: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      25: ifle          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      34: aload_0
      35: dup
      36: getfield      #8                  // Field position:I
      39: dup_x1
      40: iconst_1
      41: iadd
      42: putfield      #8                  // Field position:I
      45: aconst_null
      46: aastore
      47: goto          0
      50: aload_0
      51: getfield      #8                  // Field position:I
      54: aload_0
      55: getfield      #14                 // Field bufs:[Ljava/nio/ByteBuffer;
      58: arraylength
      59: if_icmplt     67
      62: aload_0
      63: invokevirtual #10                 // Method makeSpace:()Z
      66: pop
      67: iconst_1
      68: ireturn

  protected static java.nio.ByteBuffer makeLengthBuffer(java.nio.ByteBuffer);
    Code:
       0: iconst_4
       1: invokestatic  #37                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: aload_0
       5: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
       8: invokevirtual #38                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      11: invokevirtual #39                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      14: checkcast     #40                 // class java/nio/ByteBuffer
      17: areturn
}
