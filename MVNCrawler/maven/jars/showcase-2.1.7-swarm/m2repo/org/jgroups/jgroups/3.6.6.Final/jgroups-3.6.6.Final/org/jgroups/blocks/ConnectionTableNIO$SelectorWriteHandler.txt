Compiled from "ConnectionTableNIO.java"
public class org.jgroups.blocks.ConnectionTableNIO$SelectorWriteHandler {
  private final java.util.List<org.jgroups.blocks.ConnectionTableNIO$WriteRequest> m_writeRequests;

  private boolean m_headerSent;

  private java.nio.channels.SocketChannel m_channel;

  private java.nio.channels.SelectionKey m_key;

  private java.nio.channels.Selector m_selector;

  private int m_bytesWritten;

  private boolean m_enabled;

  private java.nio.ByteBuffer m_headerBuffer;

  org.jgroups.blocks.ConnectionTableNIO$SelectorWriteHandler(java.nio.channels.SocketChannel, java.nio.channels.Selector, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedList
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #5                  // Field m_writeRequests:Ljava/util/List;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field m_headerSent:Z
      20: aload_0
      21: iconst_0
      22: putfield      #7                  // Field m_bytesWritten:I
      25: aload_0
      26: iconst_0
      27: putfield      #8                  // Field m_enabled:Z
      30: aload_0
      31: aload_1
      32: putfield      #9                  // Field m_channel:Ljava/nio/channels/SocketChannel;
      35: aload_0
      36: aload_2
      37: putfield      #10                 // Field m_selector:Ljava/nio/channels/Selector;
      40: aload_0
      41: aload_3
      42: putfield      #11                 // Field m_headerBuffer:Ljava/nio/ByteBuffer;
      45: return

  private void register(java.nio.channels.Selector, java.nio.channels.SocketChannel) throws java.nio.channels.ClosedChannelException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: iconst_0
       4: aload_0
       5: invokevirtual #12                 // Method java/nio/channels/SocketChannel.register:(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;
       8: putfield      #13                 // Field m_key:Ljava/nio/channels/SelectionKey;
      11: return

  private boolean enable();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field m_key:Ljava/nio/channels/SelectionKey;
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: getfield      #10                 // Field m_selector:Ljava/nio/channels/Selector;
      14: aload_0
      15: getfield      #9                  // Field m_channel:Ljava/nio/channels/SocketChannel;
      18: invokespecial #14                 // Method register:(Ljava/nio/channels/Selector;Ljava/nio/channels/SocketChannel;)V
      21: goto          27
      24: astore_2
      25: iload_1
      26: ireturn
      27: aload_0
      28: getfield      #8                  // Field m_enabled:Z
      31: ifne          56
      34: iconst_1
      35: istore_1
      36: aload_0
      37: getfield      #13                 // Field m_key:Ljava/nio/channels/SelectionKey;
      40: iconst_4
      41: invokevirtual #16                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      44: pop
      45: goto          51
      48: astore_2
      49: iconst_0
      50: ireturn
      51: aload_0
      52: iconst_1
      53: putfield      #8                  // Field m_enabled:Z
      56: iload_1
      57: ireturn
    Exception table:
       from    to  target type
           2    21    24   Class java/nio/channels/ClosedChannelException
          36    45    48   Class java/nio/channels/CancelledKeyException

  private void disable();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_enabled:Z
       4: ifeq          25
       7: aload_0
       8: getfield      #13                 // Field m_key:Ljava/nio/channels/SelectionKey;
      11: iconst_0
      12: invokevirtual #16                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      15: pop
      16: goto          20
      19: astore_1
      20: aload_0
      21: iconst_0
      22: putfield      #8                  // Field m_enabled:Z
      25: return
    Exception table:
       from    to  target type
           7    16    19   Class java/nio/channels/CancelledKeyException

  private void cancel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field m_key:Ljava/nio/channels/SelectionKey;
       4: invokevirtual #18                 // Method java/nio/channels/SelectionKey.cancel:()V
       7: return

  boolean add(org.jgroups.blocks.ConnectionTableNIO$WriteRequest);
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_writeRequests:Ljava/util/List;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokespecial #20                 // Method enable:()Z
      15: ireturn

  org.jgroups.blocks.ConnectionTableNIO$WriteRequest getCurrentRequest();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_writeRequests:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #21,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #22                 // class org/jgroups/blocks/ConnectionTableNIO$WriteRequest
      13: areturn

  java.nio.channels.SocketChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field m_channel:Ljava/nio/channels/SocketChannel;
       4: areturn

  java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getCurrentRequest:()Lorg/jgroups/blocks/ConnectionTableNIO$WriteRequest;
       4: invokevirtual #24                 // Method org/jgroups/blocks/ConnectionTableNIO$WriteRequest.getBuffer:()Ljava/nio/ByteBuffer;
       7: areturn

  org.jgroups.blocks.ConnectionTableNIO$MyFuture getCallback();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getCurrentRequest:()Lorg/jgroups/blocks/ConnectionTableNIO$WriteRequest;
       4: invokevirtual #25                 // Method org/jgroups/blocks/ConnectionTableNIO$WriteRequest.getCallback:()Lorg/jgroups/blocks/ConnectionTableNIO$MyFuture;
       7: areturn

  int getBytesWritten();
    Code:
       0: aload_0
       1: getfield      #7                  // Field m_bytesWritten:I
       4: ireturn

  void notifyError(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getCallback:()Lorg/jgroups/blocks/ConnectionTableNIO$MyFuture;
       4: ifnull        15
       7: aload_0
       8: invokevirtual #26                 // Method getCallback:()Lorg/jgroups/blocks/ConnectionTableNIO$MyFuture;
      11: aload_1
      12: invokevirtual #27                 // Method org/jgroups/blocks/ConnectionTableNIO$MyFuture.setException:(Ljava/lang/Throwable;)V
      15: return

  void notifyObject(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getCallback:()Lorg/jgroups/blocks/ConnectionTableNIO$MyFuture;
       4: ifnull        15
       7: aload_0
       8: invokevirtual #26                 // Method getCallback:()Lorg/jgroups/blocks/ConnectionTableNIO$MyFuture;
      11: aload_1
      12: invokevirtual #28                 // Method org/jgroups/blocks/ConnectionTableNIO$MyFuture.set:(Ljava/lang/Object;)V
      15: return

  boolean next();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #6                  // Field m_headerSent:Z
       5: aload_0
       6: iconst_0
       7: putfield      #7                  // Field m_bytesWritten:I
      10: aload_0
      11: getfield      #5                  // Field m_writeRequests:Ljava/util/List;
      14: iconst_0
      15: invokeinterface #29,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: getfield      #5                  // Field m_writeRequests:Ljava/util/List;
      25: invokeinterface #30,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: istore_1
      39: iload_1
      40: ifne          47
      43: aload_0
      44: invokespecial #31                 // Method disable:()V
      47: iload_1
      48: ireturn

  int write() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field m_headerSent:Z
       4: ifne          65
       7: aload_0
       8: iconst_1
       9: putfield      #6                  // Field m_headerSent:Z
      12: aload_0
      13: getfield      #11                 // Field m_headerBuffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #32                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      19: pop
      20: aload_0
      21: getfield      #11                 // Field m_headerBuffer:Ljava/nio/ByteBuffer;
      24: aload_0
      25: invokevirtual #33                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      28: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      31: invokevirtual #35                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_0
      36: getfield      #11                 // Field m_headerBuffer:Ljava/nio/ByteBuffer;
      39: invokevirtual #36                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      42: pop
      43: aload_0
      44: invokevirtual #37                 // Method getChannel:()Ljava/nio/channels/SocketChannel;
      47: aload_0
      48: getfield      #11                 // Field m_headerBuffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #38                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
      54: pop
      55: aload_0
      56: getfield      #11                 // Field m_headerBuffer:Ljava/nio/ByteBuffer;
      59: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      62: ifgt          43
      65: aload_0
      66: dup
      67: getfield      #7                  // Field m_bytesWritten:I
      70: aload_0
      71: invokevirtual #37                 // Method getChannel:()Ljava/nio/channels/SocketChannel;
      74: aload_0
      75: invokevirtual #33                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      78: invokevirtual #38                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
      81: iadd
      82: putfield      #7                  // Field m_bytesWritten:I
      85: aload_0
      86: invokevirtual #33                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      89: invokevirtual #34                 // Method java/nio/ByteBuffer.remaining:()I
      92: ireturn

  static void access$1100(org.jgroups.blocks.ConnectionTableNIO$SelectorWriteHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method cancel:()V
       4: return
}
