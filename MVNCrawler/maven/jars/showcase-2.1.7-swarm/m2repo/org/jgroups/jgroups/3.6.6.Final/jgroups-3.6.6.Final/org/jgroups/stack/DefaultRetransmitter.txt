Compiled from "DefaultRetransmitter.java"
public class org.jgroups.stack.DefaultRetransmitter extends org.jgroups.stack.Retransmitter {
  private final java.util.concurrent.ConcurrentNavigableMap<java.lang.Long, org.jgroups.stack.Retransmitter$Task> msgs;

  public org.jgroups.stack.DefaultRetransmitter(org.jgroups.Address, org.jgroups.stack.Retransmitter$RetransmitCommand, org.jgroups.util.TimeScheduler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/jgroups/stack/Retransmitter."<init>":(Lorg/jgroups/Address;Lorg/jgroups/stack/Retransmitter$RetransmitCommand;Lorg/jgroups/util/TimeScheduler;)V
       7: aload_0
       8: new           #2                  // class java/util/concurrent/ConcurrentSkipListMap
      11: dup
      12: invokespecial #3                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      15: putfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
      18: return

  public void add(long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lcmp
       3: ifle          14
       6: lload_1
       7: lstore        5
       9: lload_3
      10: lstore_1
      11: lload         5
      13: lstore_3
      14: lload_1
      15: lstore        6
      17: lload         6
      19: lload_3
      20: lcmp
      21: ifgt          93
      24: new           #5                  // class org/jgroups/stack/DefaultRetransmitter$SeqnoTask
      27: dup
      28: aload_0
      29: lload         6
      31: aload_0
      32: getfield      #6                  // Field retransmit_timeouts:Lorg/jgroups/stack/Interval;
      35: invokeinterface #7,  1            // InterfaceMethod org/jgroups/stack/Interval.copy:()Lorg/jgroups/stack/Interval;
      40: aload_0
      41: getfield      #8                  // Field cmd:Lorg/jgroups/stack/Retransmitter$RetransmitCommand;
      44: aload_0
      45: getfield      #9                  // Field sender:Lorg/jgroups/Address;
      48: invokespecial #10                 // Method org/jgroups/stack/DefaultRetransmitter$SeqnoTask."<init>":(Lorg/jgroups/stack/DefaultRetransmitter;JLorg/jgroups/stack/Interval;Lorg/jgroups/stack/Retransmitter$RetransmitCommand;Lorg/jgroups/Address;)V
      51: astore        5
      53: aload_0
      54: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
      57: lload         6
      59: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      62: aload         5
      64: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #13                 // class org/jgroups/stack/Retransmitter$Task
      72: astore        8
      74: aload         8
      76: ifnonnull     84
      79: aload         5
      81: invokevirtual #14                 // Method org/jgroups/stack/Retransmitter$Task.doSchedule:()V
      84: lload         6
      86: lconst_1
      87: ladd
      88: lstore        6
      90: goto          17
      93: return

  public void remove(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: lload_1
       5: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #13                 // class org/jgroups/stack/Retransmitter$Task
      16: astore_3
      17: aload_3
      18: ifnull        25
      21: aload_3
      22: invokevirtual #16                 // Method org/jgroups/stack/Retransmitter$Task.cancel:()V
      25: return

  public void remove(long, boolean);
    Code:
       0: iload_3
       1: ifne          10
       4: aload_0
       5: lload_1
       6: invokevirtual #17                 // Method remove:(J)V
       9: return
      10: aload_0
      11: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
      14: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.isEmpty:()Z
      19: ifeq          23
      22: return
      23: aload_0
      24: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
      27: lload_1
      28: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: iconst_1
      32: invokeinterface #19,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      37: astore        4
      39: aload         4
      41: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.isEmpty:()Z
      46: ifeq          50
      49: return
      50: aload         4
      52: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.values:()Ljava/util/Collection;
      57: astore        5
      59: aload         5
      61: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      66: astore        6
      68: aload         6
      70: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          103
      78: aload         6
      80: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #13                 // class org/jgroups/stack/Retransmitter$Task
      88: astore        7
      90: aload         7
      92: ifnull        100
      95: aload         7
      97: invokevirtual #16                 // Method org/jgroups/stack/Retransmitter$Task.cancel:()V
     100: goto          68
     103: aload         4
     105: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.clear:()V
     110: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.values:()Ljava/util/Collection;
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          41
      24: aload_1
      25: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #13                 // class org/jgroups/stack/Retransmitter$Task
      33: astore_2
      34: aload_2
      35: invokevirtual #16                 // Method org/jgroups/stack/Retransmitter$Task.cancel:()V
      38: goto          15
      41: aload_0
      42: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
      45: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.clear:()V
      50: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.keySet:()Ljava/util/NavigableSet;
       9: astore_1
      10: aload_1
      11: invokeinterface #26,  1           // InterfaceMethod java/util/Set.size:()I
      16: istore_2
      17: new           #27                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      24: astore_3
      25: aload_3
      26: iload_2
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #30                 // String  messages to retransmit
      32: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: iload_2
      37: bipush        50
      39: if_icmpge     53
      42: aload_3
      43: ldc           #32                 // String :
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_3
      54: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field msgs:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.size:()I
       9: ireturn
}
