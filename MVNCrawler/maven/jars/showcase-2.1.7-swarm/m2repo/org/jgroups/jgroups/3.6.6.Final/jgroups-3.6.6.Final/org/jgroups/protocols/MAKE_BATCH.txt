Compiled from "MAKE_BATCH.java"
public class org.jgroups.protocols.MAKE_BATCH extends org.jgroups.stack.Protocol {
  protected boolean multicasts;

  protected boolean unicasts;

  protected long sleep_time;

  protected final java.util.Map<org.jgroups.Address, java.util.List<org.jgroups.Message>> reg_map_mcast;

  protected final java.util.Map<org.jgroups.Address, java.util.List<org.jgroups.Message>> reg_map_ucast;

  protected final java.util.Map<org.jgroups.Address, java.util.List<org.jgroups.Message>> oob_map_mcast;

  protected final java.util.Map<org.jgroups.Address, java.util.List<org.jgroups.Message>> oob_map_ucast;

  protected org.jgroups.util.TimeScheduler timer;

  protected org.jgroups.util.AsciiString cluster_name;

  protected org.jgroups.Address local_addr;

  protected java.util.concurrent.Future<?> batcher;

  public org.jgroups.protocols.MAKE_BATCH();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jgroups/stack/Protocol."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field multicasts:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field unicasts:Z
      14: aload_0
      15: ldc2_w        #5                  // long 100l
      18: putfield      #7                  // Field sleep_time:J
      21: aload_0
      22: new           #8                  // class java/util/HashMap
      25: dup
      26: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      29: putfield      #10                 // Field reg_map_mcast:Ljava/util/Map;
      32: aload_0
      33: new           #8                  // class java/util/HashMap
      36: dup
      37: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      40: putfield      #11                 // Field reg_map_ucast:Ljava/util/Map;
      43: aload_0
      44: new           #8                  // class java/util/HashMap
      47: dup
      48: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      51: putfield      #12                 // Field oob_map_mcast:Ljava/util/Map;
      54: aload_0
      55: new           #8                  // class java/util/HashMap
      58: dup
      59: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      62: putfield      #13                 // Field oob_map_ucast:Ljava/util/Map;
      65: return

  public org.jgroups.protocols.MAKE_BATCH multicasts(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field multicasts:Z
       5: aload_0
       6: areturn

  public org.jgroups.protocols.MAKE_BATCH unicasts(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field unicasts:Z
       5: aload_0
       6: areturn

  public org.jgroups.protocols.MAKE_BATCH sleepTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field sleep_time:J
       5: aload_0
       6: areturn

  public void init() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/jgroups/stack/Protocol.init:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #15                 // Method getTransport:()Lorg/jgroups/protocols/TP;
       9: invokevirtual #16                 // Method org/jgroups/protocols/TP.getTimer:()Lorg/jgroups/util/TimeScheduler;
      12: putfield      #17                 // Field timer:Lorg/jgroups/util/TimeScheduler;
      15: aload_0
      16: invokevirtual #18                 // Method startBatcher:()V
      19: return

  public void destroy();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/jgroups/stack/Protocol.destroy:()V
       4: aload_0
       5: invokevirtual #20                 // Method stopBatcher:()V
       8: return

  public java.lang.Object down(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method org/jgroups/Event.getType:()I
       4: lookupswitch  { // 5
                     2: 56
                     8: 77
                    80: 56
                    92: 56
                    93: 56
               default: 88
          }
      56: aload_0
      57: new           #22                 // class org/jgroups/util/AsciiString
      60: dup
      61: aload_1
      62: invokevirtual #23                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      65: checkcast     #24                 // class java/lang/String
      68: invokespecial #25                 // Method org/jgroups/util/AsciiString."<init>":(Ljava/lang/String;)V
      71: putfield      #26                 // Field cluster_name:Lorg/jgroups/util/AsciiString;
      74: goto          88
      77: aload_0
      78: aload_1
      79: invokevirtual #23                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      82: checkcast     #27                 // class org/jgroups/Address
      85: putfield      #28                 // Field local_addr:Lorg/jgroups/Address;
      88: aload_0
      89: getfield      #29                 // Field down_prot:Lorg/jgroups/stack/Protocol;
      92: aload_1
      93: invokevirtual #30                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      96: areturn

  public java.lang.Object up(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method org/jgroups/Event.getType:()I
       4: iconst_1
       5: if_icmpne     80
       8: aload_1
       9: invokevirtual #23                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      12: checkcast     #31                 // class org/jgroups/Message
      15: astore_2
      16: aload_2
      17: getstatic     #32                 // Field org/jgroups/Message$Flag.OOB:Lorg/jgroups/Message$Flag;
      20: invokevirtual #33                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      23: ifeq          45
      26: aload_2
      27: getstatic     #34                 // Field org/jgroups/Message$Flag.INTERNAL:Lorg/jgroups/Message$Flag;
      30: invokevirtual #33                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      33: ifeq          45
      36: aload_0
      37: getfield      #1                  // Field up_prot:Lorg/jgroups/stack/Protocol;
      40: aload_1
      41: invokevirtual #35                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      44: areturn
      45: aload_2
      46: invokevirtual #36                 // Method org/jgroups/Message.dest:()Lorg/jgroups/Address;
      49: ifnonnull     59
      52: aload_0
      53: getfield      #3                  // Field multicasts:Z
      56: ifne          73
      59: aload_2
      60: invokevirtual #36                 // Method org/jgroups/Message.dest:()Lorg/jgroups/Address;
      63: ifnull        80
      66: aload_0
      67: getfield      #4                  // Field unicasts:Z
      70: ifeq          80
      73: aload_0
      74: aload_2
      75: invokevirtual #37                 // Method queue:(Lorg/jgroups/Message;)V
      78: aconst_null
      79: areturn
      80: aload_0
      81: getfield      #1                  // Field up_prot:Lorg/jgroups/stack/Protocol;
      84: aload_1
      85: invokevirtual #35                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      88: areturn

  protected void queue(org.jgroups.Message);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/jgroups/Message.dest:()Lorg/jgroups/Address;
       4: astore_2
       5: aload_2
       6: ifnonnull     34
       9: aload_1
      10: getstatic     #32                 // Field org/jgroups/Message$Flag.OOB:Lorg/jgroups/Message$Flag;
      13: invokevirtual #33                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      16: ifeq          26
      19: aload_0
      20: getfield      #12                 // Field oob_map_mcast:Ljava/util/Map;
      23: goto          30
      26: aload_0
      27: getfield      #10                 // Field reg_map_mcast:Ljava/util/Map;
      30: astore_3
      31: goto          56
      34: aload_1
      35: getstatic     #32                 // Field org/jgroups/Message$Flag.OOB:Lorg/jgroups/Message$Flag;
      38: invokevirtual #33                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      41: ifeq          51
      44: aload_0
      45: getfield      #13                 // Field oob_map_ucast:Ljava/util/Map;
      48: goto          55
      51: aload_0
      52: getfield      #11                 // Field reg_map_ucast:Ljava/util/Map;
      55: astore_3
      56: aload_1
      57: invokevirtual #38                 // Method org/jgroups/Message.src:()Lorg/jgroups/Address;
      60: astore        4
      62: aload_3
      63: dup
      64: astore        5
      66: monitorenter
      67: aload_3
      68: aload         4
      70: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #40                 // class java/util/List
      78: astore        6
      80: aload         6
      82: ifnonnull     104
      85: aload_3
      86: aload         4
      88: new           #41                 // class java/util/ArrayList
      91: dup
      92: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
      95: dup
      96: astore        6
      98: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload         6
     106: aload_1
     107: invokeinterface #44,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: aload         5
     115: monitorexit
     116: goto          127
     119: astore        7
     121: aload         5
     123: monitorexit
     124: aload         7
     126: athrow
     127: return
    Exception table:
       from    to  target type
          67   116   119   any
         119   124   119   any

  public synchronized void startBatcher();
    Code:
       0: aload_0
       1: getfield      #17                 // Field timer:Lorg/jgroups/util/TimeScheduler;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: invokevirtual #15                 // Method getTransport:()Lorg/jgroups/protocols/TP;
      12: invokevirtual #16                 // Method org/jgroups/protocols/TP.getTimer:()Lorg/jgroups/util/TimeScheduler;
      15: putfield      #17                 // Field timer:Lorg/jgroups/util/TimeScheduler;
      18: aload_0
      19: getfield      #45                 // Field batcher:Ljava/util/concurrent/Future;
      22: ifnull        37
      25: aload_0
      26: getfield      #45                 // Field batcher:Ljava/util/concurrent/Future;
      29: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
      34: ifeq          69
      37: aload_0
      38: aload_0
      39: getfield      #17                 // Field timer:Lorg/jgroups/util/TimeScheduler;
      42: new           #47                 // class org/jgroups/protocols/MAKE_BATCH$Batcher
      45: dup
      46: aload_0
      47: invokespecial #48                 // Method org/jgroups/protocols/MAKE_BATCH$Batcher."<init>":(Lorg/jgroups/protocols/MAKE_BATCH;)V
      50: aload_0
      51: getfield      #7                  // Field sleep_time:J
      54: aload_0
      55: getfield      #7                  // Field sleep_time:J
      58: getstatic     #49                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      61: invokeinterface #50,  7           // InterfaceMethod org/jgroups/util/TimeScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      66: putfield      #45                 // Field batcher:Ljava/util/concurrent/Future;
      69: return

  protected synchronized void stopBatcher();
    Code:
       0: aload_0
       1: getfield      #45                 // Field batcher:Ljava/util/concurrent/Future;
       4: ifnull        23
       7: aload_0
       8: getfield      #45                 // Field batcher:Ljava/util/concurrent/Future;
      11: iconst_1
      12: invokeinterface #51,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: aload_0
      19: aconst_null
      20: putfield      #45                 // Field batcher:Ljava/util/concurrent/Future;
      23: return

  static org.jgroups.stack.Protocol access$000(org.jgroups.protocols.MAKE_BATCH);
    Code:
       0: aload_0
       1: getfield      #1                  // Field up_prot:Lorg/jgroups/stack/Protocol;
       4: areturn
}
