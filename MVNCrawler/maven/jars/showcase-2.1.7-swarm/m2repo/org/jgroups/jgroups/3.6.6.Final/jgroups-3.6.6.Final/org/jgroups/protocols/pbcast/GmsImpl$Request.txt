Compiled from "GmsImpl.java"
public class org.jgroups.protocols.pbcast.GmsImpl$Request {
  static final int JOIN;

  static final int LEAVE;

  static final int SUSPECT;

  static final int MERGE;

  static final int JOIN_WITH_STATE_TRANSFER;

  int type;

  org.jgroups.Address mbr;

  boolean suspected;

  java.util.Map<org.jgroups.Address, org.jgroups.View> views;

  boolean useFlushIfPresent;

  org.jgroups.protocols.pbcast.GmsImpl$Request(int, org.jgroups.Address, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field type:I
       9: aload_0
      10: iload_1
      11: putfield      #2                  // Field type:I
      14: aload_0
      15: aload_2
      16: putfield      #3                  // Field mbr:Lorg/jgroups/Address;
      19: aload_0
      20: iload_3
      21: putfield      #4                  // Field suspected:Z
      24: return

  org.jgroups.protocols.pbcast.GmsImpl$Request(int, org.jgroups.Address, boolean, java.util.Map<org.jgroups.Address, org.jgroups.View>, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokespecial #5                  // Method "<init>":(ILorg/jgroups/Address;Z)V
       7: aload_0
       8: aload         4
      10: putfield      #6                  // Field views:Ljava/util/Map;
      13: aload_0
      14: iload         5
      16: putfield      #7                  // Field useFlushIfPresent:Z
      19: return

  org.jgroups.protocols.pbcast.GmsImpl$Request(int, org.jgroups.Address, boolean, java.util.Map<org.jgroups.Address, org.jgroups.View>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: iconst_1
       7: invokespecial #8                  // Method "<init>":(ILorg/jgroups/Address;ZLjava/util/Map;Z)V
      10: return

  public int getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:I
       4: tableswitch   { // 1 to 6
                     1: 44
                     2: 100
                     3: 140
                     4: 168
                     5: 201
                     6: 72
               default: 201
          }
      44: new           #9                  // class java/lang/StringBuilder
      47: dup
      48: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #11                 // String JOIN(
      53: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
      60: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #14                 // String )
      65: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn
      72: new           #9                  // class java/lang/StringBuilder
      75: dup
      76: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #16                 // String JOIN_WITH_STATE_TRANSFER(
      81: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
      88: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #14                 // String )
      93: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn
     100: new           #9                  // class java/lang/StringBuilder
     103: dup
     104: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #17                 // String LEAVE(
     109: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
     116: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: ldc           #18                 // String ,
     121: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_0
     125: getfield      #4                  // Field suspected:Z
     128: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     131: ldc           #14                 // String )
     133: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: areturn
     140: new           #9                  // class java/lang/StringBuilder
     143: dup
     144: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #20                 // String SUSPECT(
     149: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_0
     153: getfield      #3                  // Field mbr:Lorg/jgroups/Address;
     156: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #14                 // String )
     161: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: areturn
     168: new           #9                  // class java/lang/StringBuilder
     171: dup
     172: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #21                 // String MERGE(
     177: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_0
     181: getfield      #6                  // Field views:Ljava/util/Map;
     184: invokeinterface #22,  1           // InterfaceMethod java/util/Map.size:()I
     189: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     192: ldc           #24                 // String  views)
     194: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: areturn
     201: new           #9                  // class java/lang/StringBuilder
     204: dup
     205: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     208: ldc           #25                 // String <invalid (type=
     210: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: aload_0
     214: getfield      #2                  // Field type:I
     217: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     220: ldc           #14                 // String )
     222: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: areturn

  public boolean canBeProcessedTogether(org.jgroups.protocols.pbcast.GmsImpl$Request);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: getfield      #2                  // Field type:I
      10: istore_2
      11: aload_0
      12: getfield      #2                  // Field type:I
      15: iconst_1
      16: if_icmpeq     35
      19: aload_0
      20: getfield      #2                  // Field type:I
      23: iconst_2
      24: if_icmpeq     35
      27: aload_0
      28: getfield      #2                  // Field type:I
      31: iconst_3
      32: if_icmpne     54
      35: iload_2
      36: iconst_1
      37: if_icmpeq     50
      40: iload_2
      41: iconst_2
      42: if_icmpeq     50
      45: iload_2
      46: iconst_3
      47: if_icmpne     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn
}
