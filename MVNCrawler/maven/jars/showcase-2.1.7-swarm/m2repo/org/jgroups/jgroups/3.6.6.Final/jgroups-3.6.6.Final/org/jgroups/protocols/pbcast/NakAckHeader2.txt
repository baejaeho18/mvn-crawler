Compiled from "NakAckHeader2.java"
public class org.jgroups.protocols.pbcast.NakAckHeader2 extends org.jgroups.Header {
  public static final byte MSG;

  public static final byte XMIT_REQ;

  public static final byte XMIT_RSP;

  public static final byte HIGHEST_SEQNO;

  byte type;

  long seqno;

  org.jgroups.Address sender;

  public org.jgroups.protocols.pbcast.NakAckHeader2();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field seqno:J
      11: return

  public static org.jgroups.protocols.pbcast.NakAckHeader2 createMessageHeader(long);
    Code:
       0: new           #5                  // class org/jgroups/protocols/pbcast/NakAckHeader2
       3: dup
       4: iconst_1
       5: lload_0
       6: invokespecial #6                  // Method "<init>":(BJ)V
       9: areturn

  public static org.jgroups.protocols.pbcast.NakAckHeader2 createXmitRequestHeader(org.jgroups.Address);
    Code:
       0: new           #5                  // class org/jgroups/protocols/pbcast/NakAckHeader2
       3: dup
       4: iconst_2
       5: aload_0
       6: invokespecial #7                  // Method "<init>":(BLorg/jgroups/Address;)V
       9: areturn

  public static org.jgroups.protocols.pbcast.NakAckHeader2 createXmitResponseHeader();
    Code:
       0: new           #5                  // class org/jgroups/protocols/pbcast/NakAckHeader2
       3: dup
       4: iconst_3
       5: ldc2_w        #2                  // long -1l
       8: invokespecial #6                  // Method "<init>":(BJ)V
      11: areturn

  public static org.jgroups.protocols.pbcast.NakAckHeader2 createHighestSeqnoHeader(long);
    Code:
       0: new           #5                  // class org/jgroups/protocols/pbcast/NakAckHeader2
       3: dup
       4: iconst_4
       5: lload_0
       6: invokespecial #6                  // Method "<init>":(BJ)V
       9: areturn

  private org.jgroups.protocols.pbcast.NakAckHeader2(byte, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field seqno:J
      11: aload_0
      12: iload_1
      13: putfield      #8                  // Field type:B
      16: aload_0
      17: lload_2
      18: putfield      #4                  // Field seqno:J
      21: return

  private org.jgroups.protocols.pbcast.NakAckHeader2(byte, org.jgroups.Address);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field seqno:J
      11: aload_0
      12: iload_1
      13: putfield      #8                  // Field type:B
      16: aload_0
      17: aload_2
      18: putfield      #9                  // Field sender:Lorg/jgroups/Address;
      21: return

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:B
       4: ireturn

  public long getSeqno();
    Code:
       0: aload_0
       1: getfield      #4                  // Field seqno:J
       4: lreturn

  public org.jgroups.Address getSender();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sender:Lorg/jgroups/Address;
       4: areturn

  public void writeTo(java.io.DataOutput) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field type:B
       5: invokeinterface #10,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: aload_0
      11: getfield      #8                  // Field type:B
      14: tableswitch   { // 1 to 4
                     1: 44
                     2: 55
                     3: 44
                     4: 44
               default: 63
          }
      44: aload_0
      45: getfield      #4                  // Field seqno:J
      48: aload_1
      49: invokestatic  #11                 // Method org/jgroups/util/Bits.writeLong:(JLjava/io/DataOutput;)V
      52: goto          63
      55: aload_0
      56: getfield      #9                  // Field sender:Lorg/jgroups/Address;
      59: aload_1
      60: invokestatic  #12                 // Method org/jgroups/util/Util.writeAddress:(Lorg/jgroups/Address;Ljava/io/DataOutput;)V
      63: return

  public void readFrom(java.io.DataInput) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod java/io/DataInput.readByte:()B
       7: putfield      #8                  // Field type:B
      10: aload_0
      11: getfield      #8                  // Field type:B
      14: tableswitch   { // 1 to 4
                     1: 44
                     2: 55
                     3: 44
                     4: 44
               default: 63
          }
      44: aload_0
      45: aload_1
      46: invokestatic  #14                 // Method org/jgroups/util/Bits.readLong:(Ljava/io/DataInput;)J
      49: putfield      #4                  // Field seqno:J
      52: goto          63
      55: aload_0
      56: aload_1
      57: invokestatic  #15                 // Method org/jgroups/util/Util.readAddress:(Ljava/io/DataInput;)Lorg/jgroups/Address;
      60: putfield      #9                  // Field sender:Lorg/jgroups/Address;
      63: return

  public int size();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #8                  // Field type:B
       6: tableswitch   { // 1 to 4
                     1: 36
                     2: 46
                     3: 36
                     4: 36
               default: 58
          }
      36: iload_1
      37: aload_0
      38: getfield      #4                  // Field seqno:J
      41: invokestatic  #16                 // Method org/jgroups/util/Bits.size:(J)I
      44: iadd
      45: ireturn
      46: iload_1
      47: aload_0
      48: getfield      #9                  // Field sender:Lorg/jgroups/Address;
      51: invokestatic  #17                 // Method org/jgroups/util/Util.size:(Lorg/jgroups/Address;)I
      54: iadd
      55: istore_1
      56: iload_1
      57: ireturn
      58: iload_1
      59: ireturn

  public org.jgroups.protocols.pbcast.NakAckHeader2 copy();
    Code:
       0: new           #5                  // class org/jgroups/protocols/pbcast/NakAckHeader2
       3: dup
       4: invokespecial #18                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field type:B
      13: putfield      #8                  // Field type:B
      16: aload_1
      17: aload_0
      18: getfield      #4                  // Field seqno:J
      21: putfield      #4                  // Field seqno:J
      24: aload_1
      25: aload_0
      26: getfield      #9                  // Field sender:Lorg/jgroups/Address;
      29: putfield      #9                  // Field sender:Lorg/jgroups/Address;
      32: aload_1
      33: areturn

  public static java.lang.String type2Str(byte);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 4
                     1: 32
                     2: 35
                     3: 38
                     4: 41
               default: 44
          }
      32: ldc           #19                 // String MSG
      34: areturn
      35: ldc           #20                 // String XMIT_REQ
      37: areturn
      38: ldc           #21                 // String XMIT_RSP
      40: areturn
      41: ldc           #22                 // String HIGHEST_SEQNO
      43: areturn
      44: ldc           #23                 // String <undefined>
      46: areturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #26                 // String [
      11: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #8                  // Field type:B
      18: invokestatic  #28                 // Method type2Str:(B)Ljava/lang/String;
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: getfield      #8                  // Field type:B
      29: tableswitch   { // 1 to 4
                     1: 60
                     2: 77
                     3: 60
                     4: 60
               default: 77
          }
      60: aload_1
      61: ldc           #29                 // String , seqno=
      63: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #4                  // Field seqno:J
      70: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      73: pop
      74: goto          77
      77: aload_0
      78: getfield      #9                  // Field sender:Lorg/jgroups/Address;
      81: ifnull        98
      84: aload_1
      85: ldc           #31                 // String , sender=
      87: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #9                  // Field sender:Lorg/jgroups/Address;
      94: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: pop
      98: aload_1
      99: bipush        93
     101: invokevirtual #33                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     104: pop
     105: aload_1
     106: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: areturn
}
