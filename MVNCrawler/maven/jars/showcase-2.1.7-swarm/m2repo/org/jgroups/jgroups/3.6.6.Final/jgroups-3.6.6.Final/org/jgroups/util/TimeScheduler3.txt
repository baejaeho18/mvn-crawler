Compiled from "TimeScheduler3.java"
public class org.jgroups.util.TimeScheduler3 implements org.jgroups.util.TimeScheduler,java.lang.Runnable {
  protected final java.util.concurrent.ThreadPoolExecutor pool;

  protected final java.util.concurrent.BlockingQueue<org.jgroups.util.TimeScheduler3$Task> queue;

  protected volatile java.lang.Thread runner;

  protected static final org.jgroups.logging.Log log;

  protected org.jgroups.util.ThreadFactory timer_thread_factory;

  public org.jgroups.util.TimeScheduler3();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/DelayQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/DelayQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/ThreadPoolExecutor
      24: dup
      25: iconst_4
      26: bipush        10
      28: ldc2_w        #7                  // long 5000l
      31: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      34: new           #10                 // class java/util/concurrent/LinkedBlockingQueue
      37: dup
      38: sipush        5000
      41: invokespecial #11                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      44: invokestatic  #12                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      47: new           #13                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
      50: dup
      51: invokespecial #14                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
      54: invokespecial #15                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      57: putfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      60: aload_0
      61: invokevirtual #17                 // Method start:()V
      64: return

  public org.jgroups.util.TimeScheduler3(org.jgroups.util.ThreadFactory, int, int, long, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/DelayQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/DelayQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      20: aload_0
      21: aload_1
      22: putfield      #5                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      25: aload_0
      26: new           #6                  // class java/util/concurrent/ThreadPoolExecutor
      29: dup
      30: iload_2
      31: iload_3
      32: lload         4
      34: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      37: new           #10                 // class java/util/concurrent/LinkedBlockingQueue
      40: dup
      41: iload         6
      43: invokespecial #11                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      46: aload_1
      47: aload         7
      49: invokestatic  #18                 // Method org/jgroups/util/Util.parseRejectionPolicy:(Ljava/lang/String;)Ljava/util/concurrent/RejectedExecutionHandler;
      52: invokespecial #15                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      55: putfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      58: aload_0
      59: invokevirtual #17                 // Method start:()V
      62: return

  public void setThreadFactory(org.jgroups.util.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #19                 // Method java/util/concurrent/ThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
       8: return

  public int getMinThreads();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #20                 // Method java/util/concurrent/ThreadPoolExecutor.getCorePoolSize:()I
       7: ireturn

  public void setMinThreads(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #21                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
       8: return

  public int getMaxThreads();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #22                 // Method java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize:()I
       7: ireturn

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #23                 // Method java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize:(I)V
       8: return

  public long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       7: invokevirtual #24                 // Method java/util/concurrent/ThreadPoolExecutor.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
      10: lreturn

  public void setKeepAliveTime(long);
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: lload_1
       5: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #25                 // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public int getCurrentThreads();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #26                 // Method java/util/concurrent/ThreadPoolExecutor.getPoolSize:()I
       7: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #27                 // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
       7: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      12: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #30                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #31                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
       7: ireturn

  public java.lang.String dumpTimerTasks();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      12: invokeinterface #34,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          67
      27: aload_2
      28: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #37                 // class org/jgroups/util/TimeScheduler3$Task
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_3
      44: invokevirtual #39                 // Method org/jgroups/util/TimeScheduler3$Task.isCancelled:()Z
      47: ifeq          57
      50: aload_1
      51: ldc           #40                 // String  (cancelled)
      53: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_1
      58: ldc           #42                 // String \n
      60: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: pop
      64: goto          18
      67: aload_1
      68: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: instanceof    #44                 // class org/jgroups/util/TimeScheduler$Task
       5: ifeq          36
       8: new           #45                 // class org/jgroups/util/TimeScheduler3$RecurringTask
      11: dup
      12: aload_0
      13: aload_1
      14: getstatic     #46                 // Field org/jgroups/util/TimeScheduler3$TaskType.dynamic:Lorg/jgroups/util/TimeScheduler3$TaskType;
      17: lconst_0
      18: aload_1
      19: checkcast     #44                 // class org/jgroups/util/TimeScheduler$Task
      22: invokeinterface #47,  1           // InterfaceMethod org/jgroups/util/TimeScheduler$Task.nextInterval:()J
      27: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      30: invokespecial #48                 // Method org/jgroups/util/TimeScheduler3$RecurringTask."<init>":(Lorg/jgroups/util/TimeScheduler3;Ljava/lang/Runnable;Lorg/jgroups/util/TimeScheduler3$TaskType;JJLjava/util/concurrent/TimeUnit;)V
      33: goto          44
      36: new           #37                 // class org/jgroups/util/TimeScheduler3$Task
      39: dup
      40: aload_1
      41: invokespecial #49                 // Method org/jgroups/util/TimeScheduler3$Task."<init>":(Ljava/lang/Runnable;)V
      44: invokevirtual #50                 // Method submitToPool:(Lorg/jgroups/util/TimeScheduler3$Task;)V
      47: return

  public java.util.concurrent.Future<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: new           #37                 // class org/jgroups/util/TimeScheduler3$Task
       4: dup
       5: aload_1
       6: lload_2
       7: aload         4
       9: invokespecial #51                 // Method org/jgroups/util/TimeScheduler3$Task."<init>":(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)V
      12: lload_2
      13: invokevirtual #52                 // Method doSchedule:(Lorg/jgroups/util/TimeScheduler3$Task;J)Ljava/util/concurrent/Future;
      16: areturn

  public java.util.concurrent.Future<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #53                 // Field org/jgroups/util/TimeScheduler3$TaskType.fixed_delay:Lorg/jgroups/util/TimeScheduler3$TaskType;
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokevirtual #54                 // Method scheduleRecurring:(Ljava/lang/Runnable;Lorg/jgroups/util/TimeScheduler3$TaskType;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      13: areturn

  public java.util.concurrent.Future<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #55                 // Field org/jgroups/util/TimeScheduler3$TaskType.fixed_rate:Lorg/jgroups/util/TimeScheduler3$TaskType;
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokevirtual #54                 // Method scheduleRecurring:(Ljava/lang/Runnable;Lorg/jgroups/util/TimeScheduler3$TaskType;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      13: areturn

  public java.util.concurrent.Future<?> scheduleWithDynamicInterval(org.jgroups.util.TimeScheduler$Task);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #46                 // Field org/jgroups/util/TimeScheduler3$TaskType.dynamic:Lorg/jgroups/util/TimeScheduler3$TaskType;
       5: aload_1
       6: invokeinterface #47,  1           // InterfaceMethod org/jgroups/util/TimeScheduler$Task.nextInterval:()J
      11: lconst_0
      12: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      15: invokevirtual #54                 // Method scheduleRecurring:(Ljava/lang/Runnable;Lorg/jgroups/util/TimeScheduler3$TaskType;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      18: areturn

  protected void start();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method startRunner:()V
       4: return

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method stopRunner:()V
       4: aload_0
       5: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       8: invokeinterface #58,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      13: ifne          68
      16: aload_0
      17: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      20: invokeinterface #34,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          65
      35: aload_1
      36: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #37                 // class org/jgroups/util/TimeScheduler3$Task
      44: astore_2
      45: aload_2
      46: iconst_1
      47: invokevirtual #59                 // Method org/jgroups/util/TimeScheduler3$Task.cancel:(Z)Z
      50: pop
      51: aload_0
      52: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      55: aload_2
      56: invokeinterface #60,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.remove:(Ljava/lang/Object;)Z
      61: pop
      62: goto          26
      65: goto          4
      68: aload_0
      69: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      72: invokeinterface #61,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      77: aload_0
      78: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      81: invokevirtual #62                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      84: astore_1
      85: aload_1
      86: invokeinterface #63,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      91: astore_2
      92: aload_2
      93: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          136
     101: aload_2
     102: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #64                 // class java/lang/Runnable
     110: astore_3
     111: aload_3
     112: instanceof    #65                 // class java/util/concurrent/Future
     115: ifeq          133
     118: aload_3
     119: checkcast     #65                 // class java/util/concurrent/Future
     122: astore        4
     124: aload         4
     126: iconst_1
     127: invokeinterface #66,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     132: pop
     133: goto          92
     136: aload_0
     137: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     140: invokevirtual #27                 // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
     143: invokeinterface #61,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
     148: aload_0
     149: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     152: ldc2_w        #67                 // long 3000l
     155: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     158: invokevirtual #69                 // Method java/util/concurrent/ThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     161: pop
     162: goto          166
     165: astore_2
     166: return
    Exception table:
       from    to  target type
         148   162   165   Class java/lang/InterruptedException

  public void run();
    Code:
       0: invokestatic  #71                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: getfield      #72                 // Field runner:Ljava/lang/Thread;
       7: if_acmpne     50
      10: aload_0
      11: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      14: invokeinterface #73,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      19: checkcast     #37                 // class org/jgroups/util/TimeScheduler3$Task
      22: astore_1
      23: aload_0
      24: aload_1
      25: invokevirtual #50                 // Method submitToPool:(Lorg/jgroups/util/TimeScheduler3$Task;)V
      28: goto          0
      31: astore_1
      32: goto          0
      35: astore_1
      36: getstatic     #75                 // Field log:Lorg/jgroups/logging/Log;
      39: ldc           #76                 // String failed submitting task to thread pool
      41: aload_1
      42: invokeinterface #77,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: goto          0
      50: return
    Exception table:
       from    to  target type
          10    28    31   Class java/lang/InterruptedException
          10    28    35   Class java/lang/Throwable

  protected java.util.concurrent.Future<?> scheduleRecurring(java.lang.Runnable, org.jgroups.util.TimeScheduler3$TaskType, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: new           #45                 // class org/jgroups/util/TimeScheduler3$RecurringTask
       4: dup
       5: aload_0
       6: aload_1
       7: aload_2
       8: lload_3
       9: lload         5
      11: aload         7
      13: invokespecial #48                 // Method org/jgroups/util/TimeScheduler3$RecurringTask."<init>":(Lorg/jgroups/util/TimeScheduler3;Ljava/lang/Runnable;Lorg/jgroups/util/TimeScheduler3$TaskType;JJLjava/util/concurrent/TimeUnit;)V
      16: lload_3
      17: invokevirtual #52                 // Method doSchedule:(Lorg/jgroups/util/TimeScheduler3$Task;J)Ljava/util/concurrent/Future;
      20: areturn

  protected java.util.concurrent.Future<?> doSchedule(org.jgroups.util.TimeScheduler3$Task, long);
    Code:
       0: aload_1
       1: invokevirtual #78                 // Method org/jgroups/util/TimeScheduler3$Task.getRunnable:()Ljava/lang/Runnable;
       4: ifnonnull     15
       7: new           #79                 // class java/lang/NullPointerException
      10: dup
      11: invokespecial #80                 // Method java/lang/NullPointerException."<init>":()V
      14: athrow
      15: aload_0
      16: invokevirtual #81                 // Method isShutdown:()Z
      19: ifeq          24
      22: aconst_null
      23: areturn
      24: lload_2
      25: lconst_0
      26: lcmp
      27: ifgt          37
      30: aload_0
      31: aload_1
      32: invokevirtual #50                 // Method submitToPool:(Lorg/jgroups/util/TimeScheduler3$Task;)V
      35: aload_1
      36: areturn
      37: aload_0
      38: aload_1
      39: invokevirtual #82                 // Method add:(Lorg/jgroups/util/TimeScheduler3$Task;)Lorg/jgroups/util/TimeScheduler3$Task;
      42: areturn

  protected void submitToPool(org.jgroups.util.TimeScheduler3$Task);
    Code:
       0: aload_0
       1: getfield      #16                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #83                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
       8: goto          49
      11: astore_2
      12: aload_0
      13: getfield      #5                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      16: ifnull        34
      19: aload_0
      20: getfield      #5                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      23: aload_1
      24: ldc           #85                 // String Timer temp thread
      26: invokeinterface #86,  3           // InterfaceMethod org/jgroups/util/ThreadFactory.newThread:(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Thread;
      31: goto          44
      34: new           #87                 // class java/lang/Thread
      37: dup
      38: aload_1
      39: ldc           #85                 // String Timer temp thread
      41: invokespecial #88                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      44: astore_3
      45: aload_3
      46: invokevirtual #89                 // Method java/lang/Thread.start:()V
      49: return
    Exception table:
       from    to  target type
           0     8    11   Class java/util/concurrent/RejectedExecutionException

  protected org.jgroups.util.TimeScheduler3$Task add(org.jgroups.util.TimeScheduler3$Task);
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method isRunning:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      13: aload_1
      14: invokeinterface #91,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_1
      21: areturn

  protected boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #72                 // Field runner:Ljava/lang/Thread;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #92                 // Method java/lang/Thread.isAlive:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected synchronized void startRunner();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method stopRunner:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
       9: ifnull        27
      12: aload_0
      13: getfield      #5                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      16: aload_0
      17: ldc           #93                 // String Timer runner
      19: invokeinterface #86,  3           // InterfaceMethod org/jgroups/util/ThreadFactory.newThread:(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Thread;
      24: goto          37
      27: new           #87                 // class java/lang/Thread
      30: dup
      31: aload_0
      32: ldc           #93                 // String Timer runner
      34: invokespecial #88                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      37: putfield      #72                 // Field runner:Ljava/lang/Thread;
      40: aload_0
      41: getfield      #72                 // Field runner:Ljava/lang/Thread;
      44: invokevirtual #89                 // Method java/lang/Thread.start:()V
      47: return

  protected synchronized void stopRunner();
    Code:
       0: aload_0
       1: getfield      #72                 // Field runner:Ljava/lang/Thread;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #72                 // Field runner:Ljava/lang/Thread;
      10: aload_1
      11: ifnull        29
      14: aload_1
      15: invokevirtual #94                 // Method java/lang/Thread.interrupt:()V
      18: aload_1
      19: ldc2_w        #95                 // long 500l
      22: invokevirtual #97                 // Method java/lang/Thread.join:(J)V
      25: goto          29
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      33: invokeinterface #61,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      38: return
    Exception table:
       from    to  target type
          18    25    28   Class java/lang/InterruptedException

  static {};
    Code:
       0: ldc_w         #98                 // class org/jgroups/util/TimeScheduler3
       3: invokestatic  #99                 // Method org/jgroups/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/jgroups/logging/Log;
       6: putstatic     #75                 // Field log:Lorg/jgroups/logging/Log;
       9: return
}
