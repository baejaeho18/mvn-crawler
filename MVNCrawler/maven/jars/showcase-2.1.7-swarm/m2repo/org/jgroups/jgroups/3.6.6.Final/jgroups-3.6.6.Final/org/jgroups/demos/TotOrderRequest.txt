Compiled from "TotalOrder.java"
class org.jgroups.demos.TotOrderRequest {
  public static final byte STOP;

  public static final byte ADDITION;

  public static final byte SUBTRACTION;

  public static final byte MULTIPLICATION;

  public static final byte DIVISION;

  static final int SIZE;

  public byte type;

  public int x;

  public int y;

  public int val;

  public org.jgroups.demos.TotOrderRequest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field x:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field y:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field val:I
      24: return

  org.jgroups.demos.TotOrderRequest(byte, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field x:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field y:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field val:I
      24: aload_0
      25: iload_1
      26: putfield      #2                  // Field type:B
      29: aload_0
      30: iload_2
      31: putfield      #3                  // Field x:I
      34: aload_0
      35: iload_3
      36: putfield      #4                  // Field y:I
      39: aload_0
      40: iload         4
      42: putfield      #5                  // Field val:I
      45: return

  public java.lang.String printType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:B
       4: tableswitch   { // 0 to 4
                     0: 40
                     1: 43
                     2: 46
                     3: 49
                     4: 52
               default: 55
          }
      40: ldc           #6                  // String STOP
      42: areturn
      43: ldc           #7                  // String ADDITION
      45: areturn
      46: ldc           #8                  // String SUBTRACTION
      48: areturn
      49: ldc           #9                  // String MULTIPLICATION
      51: areturn
      52: ldc           #10                 // String DIVISION
      54: areturn
      55: ldc           #11                 // String <unknown>
      57: areturn

  public byte[] toBuffer();
    Code:
       0: bipush        13
       2: invokestatic  #12                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: astore_1
       6: aload_1
       7: aload_0
       8: getfield      #2                  // Field type:B
      11: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #3                  // Field x:I
      20: invokevirtual #14                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #4                  // Field y:I
      29: invokevirtual #14                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      32: pop
      33: aload_1
      34: aload_0
      35: getfield      #5                  // Field val:I
      38: invokevirtual #14                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      41: pop
      42: aload_1
      43: invokevirtual #15                 // Method java/nio/ByteBuffer.array:()[B
      46: areturn

  public void init(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method java/nio/ByteBuffer.get:()B
       5: putfield      #2                  // Field type:B
       8: aload_0
       9: aload_1
      10: invokevirtual #17                 // Method java/nio/ByteBuffer.getInt:()I
      13: putfield      #3                  // Field x:I
      16: aload_0
      17: aload_1
      18: invokevirtual #17                 // Method java/nio/ByteBuffer.getInt:()I
      21: putfield      #4                  // Field y:I
      24: aload_0
      25: aload_1
      26: invokevirtual #17                 // Method java/nio/ByteBuffer.getInt:()I
      29: putfield      #5                  // Field val:I
      32: return

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #20                 // String [
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field x:I
      16: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: bipush        44
      21: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field y:I
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #24                 // String :
      33: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #25                 // Method printType:()Ljava/lang/String;
      40: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: bipush        40
      45: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #5                  // Field val:I
      52: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #26                 // String )]
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn
}
