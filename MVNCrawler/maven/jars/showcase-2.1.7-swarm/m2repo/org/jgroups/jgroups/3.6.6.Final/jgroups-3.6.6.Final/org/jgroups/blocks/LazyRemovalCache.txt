Compiled from "LazyRemovalCache.java"
public class org.jgroups.blocks.LazyRemovalCache<K, V> {
  private final java.util.concurrent.ConcurrentMap<K, org.jgroups.blocks.LazyRemovalCache$Entry<V>> map;

  private final int max_elements;

  private final long max_age;

  public org.jgroups.blocks.LazyRemovalCache();
    Code:
       0: aload_0
       1: sipush        200
       4: ldc2_w        #2                  // long 5000l
       7: invokespecial #4                  // Method "<init>":(IJ)V
      10: return

  public org.jgroups.blocks.LazyRemovalCache(int, long);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #6                  // Method org/jgroups/util/Util.createConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: iload_1
      13: putfield      #7                  // Field max_elements:I
      16: aload_0
      17: getstatic     #8                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      20: lload_2
      21: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      24: invokevirtual #10                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      27: putfield      #11                 // Field max_age:J
      30: return

  public boolean add(K, V);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: ifnull        37
       6: aload_2
       7: ifnull        37
      10: aload_0
      11: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      14: aload_1
      15: new           #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      18: dup
      19: aload_2
      20: invokespecial #13                 // Method org/jgroups/blocks/LazyRemovalCache$Entry."<init>":(Ljava/lang/Object;)V
      23: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: ifnonnull     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: istore_3
      37: aload_0
      38: invokespecial #15                 // Method checkMaxSizeExceeded:()V
      41: iload_3
      42: ireturn

  public boolean containsKey(K);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsKeys(java.util.Collection<K>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_2
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      27: aload_3
      28: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: goto          7
      41: iconst_1
      42: ireturn

  public V get(K);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      10: aload_1
      11: invokeinterface #20,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      19: astore_2
      20: aload_2
      21: ifnull        31
      24: aload_2
      25: getfield      #21                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.val:Ljava/lang/Object;
      28: goto          32
      31: aconst_null
      32: areturn

  public K getByValue(V);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      10: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      15: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          81
      30: aload_2
      31: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #24                 // class java/util/Map$Entry
      39: astore_3
      40: aload_3
      41: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      49: astore        4
      51: aload         4
      53: getfield      #21                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.val:Ljava/lang/Object;
      56: ifnull        78
      59: aload         4
      61: getfield      #21                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.val:Ljava/lang/Object;
      64: aload_1
      65: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      68: ifeq          78
      71: aload_3
      72: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      77: areturn
      78: goto          21
      81: aconst_null
      82: areturn

  public void remove(K);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #28                 // Method remove:(Ljava/lang/Object;Z)V
       6: return

  public void remove(K, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: iload_2
       6: ifeq          23
       9: aload_0
      10: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: invokeinterface #29,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: goto          46
      23: aload_0
      24: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      27: aload_1
      28: invokeinterface #20,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      36: astore_3
      37: aload_3
      38: ifnull        46
      41: aload_3
      42: iconst_1
      43: invokevirtual #30                 // Method org/jgroups/blocks/LazyRemovalCache$Entry.setRemovable:(Z)V
      46: aload_0
      47: invokespecial #15                 // Method checkMaxSizeExceeded:()V
      50: return

  public void removeAll(java.util.Collection<K>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #31                 // Method removeAll:(Ljava/util/Collection;Z)V
       6: return

  public void removeAll(java.util.Collection<K>, boolean);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          14
      13: return
      14: iload_2
      15: ifeq          37
      18: aload_0
      19: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      22: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      27: aload_1
      28: invokeinterface #34,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      33: pop
      34: goto          91
      37: aload_1
      38: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          91
      53: aload_3
      54: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: astore        4
      61: aload_0
      62: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      65: aload         4
      67: invokeinterface #20,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      75: astore        5
      77: aload         5
      79: ifnull        88
      82: aload         5
      84: iconst_1
      85: invokevirtual #30                 // Method org/jgroups/blocks/LazyRemovalCache$Entry.setRemovable:(Z)V
      88: goto          44
      91: aload_0
      92: invokespecial #15                 // Method checkMaxSizeExceeded:()V
      95: return

  public void clear(boolean);
    Code:
       0: iload_1
       1: ifeq          16
       4: aload_0
       5: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      13: goto          91
      16: aload_0
      17: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      20: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      25: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore_2
      31: aload_2
      32: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          91
      40: aload_2
      41: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #24                 // class java/util/Map$Entry
      49: astore_3
      50: aload_3
      51: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      59: astore        4
      61: aload         4
      63: ifnull        88
      66: aload_3
      67: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      75: astore        5
      77: aload         5
      79: ifnull        88
      82: aload         5
      84: iconst_1
      85: invokevirtual #30                 // Method org/jgroups/blocks/LazyRemovalCache$Entry.setRemovable:(Z)V
      88: goto          31
      91: return

  public void retainAll(java.util.Collection<K>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #36                 // Method retainAll:(Ljava/util/Collection;Z)V
       6: return

  public void retainAll(java.util.Collection<K>, boolean);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #32,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          14
      13: return
      14: iload_2
      15: ifeq          37
      18: aload_0
      19: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      22: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      27: aload_1
      28: invokeinterface #37,  2           // InterfaceMethod java/util/Set.retainAll:(Ljava/util/Collection;)Z
      33: pop
      34: goto          114
      37: aload_0
      38: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      41: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      46: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      51: astore_3
      52: aload_3
      53: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          114
      61: aload_3
      62: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #24                 // class java/util/Map$Entry
      70: astore        4
      72: aload_1
      73: aload         4
      75: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      80: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      85: ifne          111
      88: aload         4
      90: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      95: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      98: astore        5
     100: aload         5
     102: ifnull        111
     105: aload         5
     107: iconst_1
     108: invokevirtual #30                 // Method org/jgroups/blocks/LazyRemovalCache$Entry.setRemovable:(Z)V
     111: goto          52
     114: aload_1
     115: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     120: astore_3
     121: aload_3
     122: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          176
     130: aload_3
     131: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     136: astore        4
     138: aload_0
     139: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
     142: aload         4
     144: invokeinterface #20,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     149: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
     152: astore        5
     154: aload         5
     156: ifnull        173
     159: aload         5
     161: getfield      #39                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.removable:Z
     164: ifeq          173
     167: aload         5
     169: iconst_0
     170: invokevirtual #30                 // Method org/jgroups/blocks/LazyRemovalCache$Entry.setRemovable:(Z)V
     173: goto          121
     176: aload_0
     177: invokespecial #15                 // Method checkMaxSizeExceeded:()V
     180: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Set<V> values();
    Code:
       0: new           #40                 // class java/util/HashSet
       3: dup
       4: invokespecial #41                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #42,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          56
      32: aload_2
      33: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: getfield      #21                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.val:Ljava/lang/Object;
      47: invokeinterface #43,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          23
      56: aload_1
      57: areturn

  public java.lang.Iterable<org.jgroups.blocks.LazyRemovalCache$Entry<V>> valuesIterator();
    Code:
       0: new           #44                 // class org/jgroups/blocks/LazyRemovalCache$1
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method org/jgroups/blocks/LazyRemovalCache$1."<init>":(Lorg/jgroups/blocks/LazyRemovalCache;)V
       8: areturn

  public java.util.Set<V> nonRemovedValues();
    Code:
       0: new           #40                 // class java/util/HashSet
       3: dup
       4: invokespecial #41                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #42,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          63
      32: aload_2
      33: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      41: astore_3
      42: aload_3
      43: getfield      #39                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.removable:Z
      46: ifne          60
      49: aload_1
      50: aload_3
      51: getfield      #21                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.val:Ljava/lang/Object;
      54: invokeinterface #43,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          23
      63: aload_1
      64: areturn

  public java.util.Map<K, V> contents();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #46                 // Method contents:(Z)Ljava/util/Map;
       5: areturn

  public java.util.Map<K, V> contents(boolean);
    Code:
       0: new           #47                 // class java/util/HashMap
       3: dup
       4: invokespecial #48                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          100
      32: aload_3
      33: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #24                 // class java/util/Map$Entry
      41: astore        4
      43: aload         4
      45: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      53: astore        5
      55: aload         5
      57: invokevirtual #49                 // Method org/jgroups/blocks/LazyRemovalCache$Entry.isRemovable:()Z
      60: ifeq          70
      63: iload_1
      64: ifeq          70
      67: goto          23
      70: aload_2
      71: aload         4
      73: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      78: aload         4
      80: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      88: getfield      #21                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.val:Ljava/lang/Object;
      91: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: goto          23
     100: aload_2
     101: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public java.lang.String printCache();
    Code:
       0: new           #52                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          75
      32: aload_2
      33: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #24                 // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #55                 // String :
      54: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #57                 // String \n
      68: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: goto          23
      75: aload_1
      76: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn

  public java.lang.String printCache(org.jgroups.blocks.LazyRemovalCache$Printable);
    Code:
       0: new           #52                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          75
      32: aload_3
      33: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #24                 // class java/util/Map$Entry
      41: astore        4
      43: aload         4
      45: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      50: astore        5
      52: aload_2
      53: aload_1
      54: aload         5
      56: aload         4
      58: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: invokeinterface #59,  3           // InterfaceMethod org/jgroups/blocks/LazyRemovalCache$Printable.print:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
      68: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: goto          23
      75: aload_2
      76: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method printCache:()Ljava/lang/String;
       4: areturn

  private void checkMaxSizeExceeded();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: aload_0
      10: getfield      #7                  // Field max_elements:I
      13: if_icmple     21
      16: aload_0
      17: iconst_0
      18: invokevirtual #61                 // Method removeMarkedElements:(Z)V
      21: return

  public void removeMarkedElements(boolean);
    Code:
       0: invokestatic  #62                 // Method java/lang/System.nanoTime:()J
       3: lstore_2
       4: aload_0
       5: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      13: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          99
      30: aload         4
      32: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #24                 // class java/util/Map$Entry
      40: astore        5
      42: aload         5
      44: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: checkcast     #12                 // class org/jgroups/blocks/LazyRemovalCache$Entry
      52: astore        6
      54: aload         6
      56: ifnonnull     62
      59: goto          20
      62: aload         6
      64: getfield      #39                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.removable:Z
      67: ifeq          96
      70: iload_1
      71: ifne          89
      74: lload_2
      75: aload         6
      77: getfield      #64                 // Field org/jgroups/blocks/LazyRemovalCache$Entry.timestamp:J
      80: lsub
      81: aload_0
      82: getfield      #11                 // Field max_age:J
      85: lcmp
      86: iflt          96
      89: aload         4
      91: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.remove:()V
      96: goto          20
      99: return

  public void removeMarkedElements();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #61                 // Method removeMarkedElements:(Z)V
       5: return

  static java.util.concurrent.ConcurrentMap access$000(org.jgroups.blocks.LazyRemovalCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
