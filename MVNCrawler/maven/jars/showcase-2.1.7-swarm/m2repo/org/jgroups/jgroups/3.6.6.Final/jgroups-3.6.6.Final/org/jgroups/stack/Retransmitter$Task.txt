Compiled from "Retransmitter.java"
public abstract class org.jgroups.stack.Retransmitter$Task implements org.jgroups.util.TimeScheduler$Task {
  protected final org.jgroups.stack.Interval intervals;

  protected volatile java.util.concurrent.Future future;

  protected org.jgroups.Address msg_sender;

  protected org.jgroups.stack.Retransmitter$RetransmitCommand command;

  protected volatile boolean cancelled;

  final org.jgroups.stack.Retransmitter this$0;

  protected org.jgroups.stack.Retransmitter$Task(org.jgroups.stack.Retransmitter, org.jgroups.stack.Interval, org.jgroups.stack.Retransmitter$RetransmitCommand, org.jgroups.Address);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jgroups/stack/Retransmitter;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field msg_sender:Lorg/jgroups/Address;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field cancelled:Z
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field intervals:Lorg/jgroups/stack/Interval;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field command:Lorg/jgroups/stack/Retransmitter$RetransmitCommand;
      29: aload_0
      30: aload         4
      32: putfield      #3                  // Field msg_sender:Lorg/jgroups/Address;
      35: return

  public long nextInterval();
    Code:
       0: aload_0
       1: getfield      #5                  // Field intervals:Lorg/jgroups/stack/Interval;
       4: invokeinterface #7,  1            // InterfaceMethod org/jgroups/stack/Interval.next:()J
       9: lreturn

  public void doSchedule();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field intervals:Lorg/jgroups/stack/Interval;
      12: invokeinterface #7,  1            // InterfaceMethod org/jgroups/stack/Interval.next:()J
      17: lstore_1
      18: aload_0
      19: getfield      #1                  // Field this$0:Lorg/jgroups/stack/Retransmitter;
      22: getfield      #8                  // Field org/jgroups/stack/Retransmitter.xmit_stagger_timeout:J
      25: lconst_0
      26: lcmp
      27: ifle          45
      30: aload_0
      31: getfield      #1                  // Field this$0:Lorg/jgroups/stack/Retransmitter;
      34: getfield      #8                  // Field org/jgroups/stack/Retransmitter.xmit_stagger_timeout:J
      37: invokestatic  #9                  // Method org/jgroups/util/Util.random:(J)J
      40: lstore_3
      41: lload_1
      42: lload_3
      43: ladd
      44: lstore_1
      45: aload_0
      46: aload_0
      47: getfield      #1                  // Field this$0:Lorg/jgroups/stack/Retransmitter;
      50: getfield      #10                 // Field org/jgroups/stack/Retransmitter.timer:Lorg/jgroups/util/TimeScheduler;
      53: aload_0
      54: lload_1
      55: getstatic     #11                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      58: invokeinterface #12,  5           // InterfaceMethod org/jgroups/util/TimeScheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      63: putfield      #13                 // Field future:Ljava/util/concurrent/Future;
      66: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Z
       4: ifne          12
       7: aload_0
       8: iconst_1
       9: putfield      #4                  // Field cancelled:Z
      12: aload_0
      13: getfield      #13                 // Field future:Ljava/util/concurrent/Future;
      16: ifnull        30
      19: aload_0
      20: getfield      #13                 // Field future:Ljava/util/concurrent/Future;
      23: iconst_1
      24: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      29: pop
      30: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #15                 // Method callRetransmissionCommand:()V
      12: goto          38
      15: astore_1
      16: getstatic     #17                 // Field org/jgroups/stack/Retransmitter.log:Lorg/jgroups/logging/Log;
      19: invokeinterface #18,  1           // InterfaceMethod org/jgroups/logging/Log.isErrorEnabled:()Z
      24: ifeq          38
      27: getstatic     #17                 // Field org/jgroups/stack/Retransmitter.log:Lorg/jgroups/logging/Log;
      30: ldc           #19                 // String failed retransmission task
      32: aload_1
      33: invokeinterface #20,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: aload_0
      39: invokevirtual #21                 // Method doSchedule:()V
      42: return
    Exception table:
       from    to  target type
           8    12    15   Class java/lang/Throwable

  protected abstract void callRetransmissionCommand();
}
