Compiled from "ABP.java"
public class org.jgroups.protocols.ABP$Entry implements java.lang.Runnable {
  protected byte bit;

  protected final java.util.concurrent.BlockingQueue<org.jgroups.Message> send_queue;

  protected java.lang.Thread xmit_task;

  final org.jgroups.protocols.ABP this$0;

  protected org.jgroups.protocols.ABP$Entry(org.jgroups.protocols.ABP);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field bit:B
      14: aload_0
      15: new           #4                  // class org/jgroups/util/ConcurrentLinkedBlockingQueue
      18: dup
      19: sipush        500
      22: invokespecial #5                  // Method org/jgroups/util/ConcurrentLinkedBlockingQueue."<init>":(I)V
      25: putfield      #6                  // Field send_queue:Ljava/util/concurrent/BlockingQueue;
      28: return

  protected void send(org.jgroups.Message);
    Code:
       0: aload_0
       1: getfield      #6                  // Field send_queue:Ljava/util/concurrent/BlockingQueue;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field send_queue:Ljava/util/concurrent/BlockingQueue;
      11: aload_1
      12: invokeinterface #7,  2            // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: monitorexit
      20: goto          28
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
      28: aload_0
      29: invokevirtual #8                  // Method startTask:()V
      32: return
    Exception table:
       from    to  target type
           7    20    23   any
          23    26    23   any

  protected synchronized boolean handleMessage(org.jgroups.Address, byte);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #3                  // Field bit:B
       6: iload_2
       7: if_icmpne     23
      10: aload_0
      11: dup
      12: getfield      #3                  // Field bit:B
      15: iconst_1
      16: ixor
      17: i2b
      18: putfield      #3                  // Field bit:B
      21: iconst_1
      22: istore_3
      23: aload_0
      24: getfield      #3                  // Field bit:B
      27: iconst_1
      28: ixor
      29: i2b
      30: istore        4
      32: new           #9                  // class org/jgroups/Message
      35: dup
      36: aload_1
      37: invokespecial #10                 // Method org/jgroups/Message."<init>":(Lorg/jgroups/Address;)V
      40: aload_0
      41: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
      44: invokestatic  #11                 // Method org/jgroups/protocols/ABP.access$000:(Lorg/jgroups/protocols/ABP;)S
      47: new           #12                 // class org/jgroups/protocols/ABP$ABPHeader
      50: dup
      51: getstatic     #13                 // Field org/jgroups/protocols/ABP$Type.ack:Lorg/jgroups/protocols/ABP$Type;
      54: iload         4
      56: invokespecial #14                 // Method org/jgroups/protocols/ABP$ABPHeader."<init>":(Lorg/jgroups/protocols/ABP$Type;B)V
      59: invokevirtual #15                 // Method org/jgroups/Message.putHeader:(SLorg/jgroups/Header;)Lorg/jgroups/Message;
      62: astore        5
      64: aload_0
      65: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
      68: invokestatic  #16                 // Method org/jgroups/protocols/ABP.access$100:(Lorg/jgroups/protocols/ABP;)Lorg/jgroups/logging/Log;
      71: ldc           #17                 // String %s: --> %s.ack(%d)
      73: iconst_3
      74: anewarray     #18                 // class java/lang/Object
      77: dup
      78: iconst_0
      79: aload_0
      80: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
      83: getfield      #19                 // Field org/jgroups/protocols/ABP.local_addr:Lorg/jgroups/Address;
      86: aastore
      87: dup
      88: iconst_1
      89: aload_1
      90: aastore
      91: dup
      92: iconst_2
      93: iload         4
      95: invokestatic  #20                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      98: aastore
      99: invokeinterface #21,  3           // InterfaceMethod org/jgroups/logging/Log.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     104: aload_0
     105: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
     108: invokestatic  #22                 // Method org/jgroups/protocols/ABP.access$200:(Lorg/jgroups/protocols/ABP;)Lorg/jgroups/stack/Protocol;
     111: new           #23                 // class org/jgroups/Event
     114: dup
     115: iconst_1
     116: aload         5
     118: invokespecial #24                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
     121: invokevirtual #25                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
     124: pop
     125: iload_3
     126: ireturn

  protected synchronized void handleAck(byte);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bit:B
       4: iload_1
       5: if_icmpne     45
       8: aload_0
       9: dup
      10: getfield      #3                  // Field bit:B
      13: iconst_1
      14: ixor
      15: i2b
      16: putfield      #3                  // Field bit:B
      19: aload_0
      20: getfield      #6                  // Field send_queue:Ljava/util/concurrent/BlockingQueue;
      23: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      28: ifne          45
      31: aload_0
      32: getfield      #6                  // Field send_queue:Ljava/util/concurrent/BlockingQueue;
      35: iconst_0
      36: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.remove:(Ljava/lang/Object;)Z
      44: pop
      45: return

  protected synchronized void startTask();
    Code:
       0: aload_0
       1: getfield      #29                 // Field xmit_task:Ljava/lang/Thread;
       4: ifnull        17
       7: aload_0
       8: getfield      #29                 // Field xmit_task:Ljava/lang/Thread;
      11: invokevirtual #30                 // Method java/lang/Thread.isAlive:()Z
      14: ifne          46
      17: aload_0
      18: new           #31                 // class java/lang/Thread
      21: dup
      22: aload_0
      23: ldc           #32                 // String ABP.XmitTask
      25: invokespecial #33                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      28: putfield      #29                 // Field xmit_task:Ljava/lang/Thread;
      31: aload_0
      32: getfield      #29                 // Field xmit_task:Ljava/lang/Thread;
      35: iconst_1
      36: invokevirtual #34                 // Method java/lang/Thread.setDaemon:(Z)V
      39: aload_0
      40: getfield      #29                 // Field xmit_task:Ljava/lang/Thread;
      43: invokevirtual #35                 // Method java/lang/Thread.start:()V
      46: return

  public void run();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: getfield      #6                  // Field send_queue:Ljava/util/concurrent/BlockingQueue;
      10: ldc2_w        #36                 // long 1000l
      13: getstatic     #38                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      16: invokeinterface #39,  4           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      21: checkcast     #9                  // class org/jgroups/Message
      24: astore_1
      25: aload_1
      26: ifnonnull     40
      29: ldc2_w        #36                 // long 1000l
      32: invokestatic  #40                 // Method org/jgroups/util/Util.sleep:(J)V
      35: aload_3
      36: monitorexit
      37: goto          2
      40: goto          48
      43: astore        4
      45: aload_3
      46: monitorexit
      47: return
      48: aload_1
      49: invokevirtual #42                 // Method org/jgroups/Message.copy:()Lorg/jgroups/Message;
      52: aload_0
      53: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
      56: invokestatic  #43                 // Method org/jgroups/protocols/ABP.access$300:(Lorg/jgroups/protocols/ABP;)S
      59: new           #12                 // class org/jgroups/protocols/ABP$ABPHeader
      62: dup
      63: getstatic     #44                 // Field org/jgroups/protocols/ABP$Type.data:Lorg/jgroups/protocols/ABP$Type;
      66: aload_0
      67: getfield      #3                  // Field bit:B
      70: invokespecial #14                 // Method org/jgroups/protocols/ABP$ABPHeader."<init>":(Lorg/jgroups/protocols/ABP$Type;B)V
      73: invokevirtual #15                 // Method org/jgroups/Message.putHeader:(SLorg/jgroups/Header;)Lorg/jgroups/Message;
      76: astore_2
      77: aload_3
      78: monitorexit
      79: goto          89
      82: astore        5
      84: aload_3
      85: monitorexit
      86: aload         5
      88: athrow
      89: aload_0
      90: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
      93: invokestatic  #45                 // Method org/jgroups/protocols/ABP.access$400:(Lorg/jgroups/protocols/ABP;)Lorg/jgroups/logging/Log;
      96: ldc           #46                 // String %s: --> %s.msg(%d). Msg: %s
      98: iconst_4
      99: anewarray     #18                 // class java/lang/Object
     102: dup
     103: iconst_0
     104: aload_0
     105: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
     108: getfield      #19                 // Field org/jgroups/protocols/ABP.local_addr:Lorg/jgroups/Address;
     111: aastore
     112: dup
     113: iconst_1
     114: aload_2
     115: invokevirtual #47                 // Method org/jgroups/Message.dest:()Lorg/jgroups/Address;
     118: aastore
     119: dup
     120: iconst_2
     121: aload_0
     122: getfield      #3                  // Field bit:B
     125: invokestatic  #20                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     128: aastore
     129: dup
     130: iconst_3
     131: aload_2
     132: invokevirtual #48                 // Method org/jgroups/Message.printHeaders:()Ljava/lang/String;
     135: aastore
     136: invokeinterface #21,  3           // InterfaceMethod org/jgroups/logging/Log.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     141: aload_0
     142: getfield      #1                  // Field this$0:Lorg/jgroups/protocols/ABP;
     145: invokestatic  #49                 // Method org/jgroups/protocols/ABP.access$500:(Lorg/jgroups/protocols/ABP;)Lorg/jgroups/stack/Protocol;
     148: new           #23                 // class org/jgroups/Event
     151: dup
     152: iconst_1
     153: aload_2
     154: invokespecial #24                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
     157: invokevirtual #25                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
     160: pop
     161: goto          2
    Exception table:
       from    to  target type
           6    35    43   Class java/lang/InterruptedException
           6    37    82   any
          40    47    82   any
          48    79    82   any
          82    86    82   any
}
