Compiled from "TimeScheduler2.java"
public class org.jgroups.util.TimeScheduler2 implements org.jgroups.util.TimeScheduler,java.lang.Runnable {
  private final java.util.concurrent.ThreadPoolExecutor pool;

  private final java.util.concurrent.ConcurrentSkipListMap<java.lang.Long, org.jgroups.util.TimeScheduler2$Entry> tasks;

  private java.lang.Thread runner;

  private final java.util.concurrent.locks.Lock lock;

  private final java.util.concurrent.locks.Condition tasks_available;

  private long next_execution_time;

  protected final java.util.concurrent.atomic.AtomicBoolean no_tasks;

  protected volatile boolean running;

  protected static final org.jgroups.logging.Log log;

  protected org.jgroups.util.ThreadFactory timer_thread_factory;

  protected static final long SLEEP_TIME;

  public org.jgroups.util.TimeScheduler2();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentSkipListMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      12: putfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field runner:Ljava/lang/Thread;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/locks/ReentrantLock
      24: dup
      25: invokespecial #7                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      28: putfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      31: aload_0
      32: aload_0
      33: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      36: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      41: putfield      #10                 // Field tasks_available:Ljava/util/concurrent/locks/Condition;
      44: aload_0
      45: lconst_0
      46: putfield      #11                 // Field next_execution_time:J
      49: aload_0
      50: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean
      53: dup
      54: iconst_1
      55: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      58: putfield      #14                 // Field no_tasks:Ljava/util/concurrent/atomic/AtomicBoolean;
      61: aload_0
      62: iconst_0
      63: putfield      #15                 // Field running:Z
      66: aload_0
      67: aconst_null
      68: putfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      71: aload_0
      72: new           #17                 // class java/util/concurrent/ThreadPoolExecutor
      75: dup
      76: iconst_4
      77: bipush        10
      79: ldc2_w        #18                 // long 5000l
      82: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      85: new           #21                 // class java/util/concurrent/LinkedBlockingQueue
      88: dup
      89: sipush        5000
      92: invokespecial #22                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      95: invokestatic  #23                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      98: new           #24                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
     101: dup
     102: invokespecial #25                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
     105: invokespecial #26                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
     108: putfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     111: aload_0
     112: invokevirtual #28                 // Method init:()V
     115: return

  public org.jgroups.util.TimeScheduler2(org.jgroups.util.ThreadFactory, int, int, long, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentSkipListMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      12: putfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field runner:Ljava/lang/Thread;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/locks/ReentrantLock
      24: dup
      25: invokespecial #7                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      28: putfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      31: aload_0
      32: aload_0
      33: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      36: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      41: putfield      #10                 // Field tasks_available:Ljava/util/concurrent/locks/Condition;
      44: aload_0
      45: lconst_0
      46: putfield      #11                 // Field next_execution_time:J
      49: aload_0
      50: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean
      53: dup
      54: iconst_1
      55: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      58: putfield      #14                 // Field no_tasks:Ljava/util/concurrent/atomic/AtomicBoolean;
      61: aload_0
      62: iconst_0
      63: putfield      #15                 // Field running:Z
      66: aload_0
      67: aconst_null
      68: putfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      71: aload_0
      72: aload_1
      73: putfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      76: aload         7
      78: invokestatic  #29                 // Method org/jgroups/util/Util.parseRejectionPolicy:(Ljava/lang/String;)Ljava/util/concurrent/RejectedExecutionHandler;
      81: astore        8
      83: aload_0
      84: new           #17                 // class java/util/concurrent/ThreadPoolExecutor
      87: dup
      88: iload_2
      89: iload_3
      90: lload         4
      92: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      95: new           #21                 // class java/util/concurrent/LinkedBlockingQueue
      98: dup
      99: iload         6
     101: invokespecial #22                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
     104: aload_1
     105: aload         8
     107: invokespecial #26                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
     110: putfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     113: aload_0
     114: invokevirtual #28                 // Method init:()V
     117: return

  public org.jgroups.util.TimeScheduler2(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentSkipListMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      12: putfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field runner:Ljava/lang/Thread;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/locks/ReentrantLock
      24: dup
      25: invokespecial #7                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      28: putfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      31: aload_0
      32: aload_0
      33: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      36: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      41: putfield      #10                 // Field tasks_available:Ljava/util/concurrent/locks/Condition;
      44: aload_0
      45: lconst_0
      46: putfield      #11                 // Field next_execution_time:J
      49: aload_0
      50: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean
      53: dup
      54: iconst_1
      55: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      58: putfield      #14                 // Field no_tasks:Ljava/util/concurrent/atomic/AtomicBoolean;
      61: aload_0
      62: iconst_0
      63: putfield      #15                 // Field running:Z
      66: aload_0
      67: aconst_null
      68: putfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      71: aload_0
      72: new           #17                 // class java/util/concurrent/ThreadPoolExecutor
      75: dup
      76: iload_1
      77: iload_1
      78: iconst_2
      79: imul
      80: ldc2_w        #18                 // long 5000l
      83: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      86: new           #21                 // class java/util/concurrent/LinkedBlockingQueue
      89: dup
      90: sipush        5000
      93: invokespecial #22                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      96: invokestatic  #23                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      99: new           #24                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
     102: dup
     103: invokespecial #25                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
     106: invokespecial #26                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
     109: putfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     112: aload_0
     113: invokevirtual #28                 // Method init:()V
     116: return

  public void setThreadFactory(org.jgroups.util.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #30                 // Method java/util/concurrent/ThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
       8: return

  public int getMinThreads();
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #31                 // Method java/util/concurrent/ThreadPoolExecutor.getCorePoolSize:()I
       7: ireturn

  public void setMinThreads(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #32                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
       8: return

  public int getMaxThreads();
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #33                 // Method java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize:()I
       7: ireturn

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #34                 // Method java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize:(I)V
       8: return

  public long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       7: invokevirtual #35                 // Method java/util/concurrent/ThreadPoolExecutor.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
      10: lreturn

  public void setKeepAliveTime(long);
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: lload_1
       5: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #36                 // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public int getCurrentThreads();
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #37                 // Method java/util/concurrent/ThreadPoolExecutor.getPoolSize:()I
       7: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #38                 // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
       7: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      12: ireturn

  public java.lang.String dumpTimerTasks();
    Code:
       0: new           #40                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
      12: invokevirtual #42                 // Method java/util/concurrent/ConcurrentSkipListMap.values:()Ljava/util/Collection;
      15: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          57
      30: aload_2
      31: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #46                 // class org/jgroups/util/TimeScheduler2$Entry
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokevirtual #47                 // Method org/jgroups/util/TimeScheduler2$Entry.dump:()Ljava/lang/String;
      45: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #49                 // String \n
      50: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: goto          21
      57: aload_1
      58: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokevirtual #51                 // Method schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
       9: pop
      10: return

  public java.util.concurrent.Future<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aconst_null
       7: astore        5
       9: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
      12: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      15: lload_2
      16: aload         4
      18: invokevirtual #53                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      21: ladd
      22: lstore        6
      24: new           #46                 // class org/jgroups/util/TimeScheduler2$Entry
      27: dup
      28: aload_1
      29: aconst_null
      30: invokespecial #54                 // Method org/jgroups/util/TimeScheduler2$Entry."<init>":(Ljava/lang/Runnable;Lorg/jgroups/util/TimeScheduler2$1;)V
      33: astore        8
      35: aload_0
      36: invokevirtual #55                 // Method isShutdown:()Z
      39: ifne          94
      42: aload_0
      43: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
      46: lload         6
      48: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      51: aload         8
      53: invokevirtual #57                 // Method java/util/concurrent/ConcurrentSkipListMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #46                 // class org/jgroups/util/TimeScheduler2$Entry
      59: astore        9
      61: aload         9
      63: ifnonnull     76
      66: aload         8
      68: invokevirtual #58                 // Method org/jgroups/util/TimeScheduler2$Entry.getFuture:()Ljava/util/concurrent/Future;
      71: astore        5
      73: goto          94
      76: aload         9
      78: aload_1
      79: invokevirtual #59                 // Method org/jgroups/util/TimeScheduler2$Entry.add:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      82: dup
      83: astore        5
      85: ifnull        91
      88: goto          94
      91: goto          35
      94: lload         6
      96: aload_0
      97: getfield      #11                 // Field next_execution_time:J
     100: lcmp
     101: iflt          116
     104: aload_0
     105: getfield      #14                 // Field no_tasks:Ljava/util/concurrent/atomic/AtomicBoolean;
     108: iconst_1
     109: iconst_0
     110: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     113: ifeq          135
     116: lload         6
     118: aload_0
     119: getfield      #11                 // Field next_execution_time:J
     122: lcmp
     123: iflt          129
     126: lconst_0
     127: lstore        6
     129: aload_0
     130: lload         6
     132: invokevirtual #61                 // Method taskReady:(J)V
     135: aload         5
     137: areturn

  public java.util.concurrent.Future<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #62                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #63                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #55                 // Method isShutdown:()Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: new           #64                 // class org/jgroups/util/TimeScheduler2$FixedIntervalTask
      24: dup
      25: aload_0
      26: aload_1
      27: lload         4
      29: aconst_null
      30: invokespecial #65                 // Method org/jgroups/util/TimeScheduler2$FixedIntervalTask."<init>":(Lorg/jgroups/util/TimeScheduler2;Ljava/lang/Runnable;JLorg/jgroups/util/TimeScheduler2$1;)V
      33: astore        7
      35: aload         7
      37: lload_2
      38: invokevirtual #66                 // Method org/jgroups/util/TimeScheduler2$RecurringTask.doSchedule:(J)V
      41: aload         7
      43: areturn

  public java.util.concurrent.Future<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #62                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #63                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #55                 // Method isShutdown:()Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: new           #67                 // class org/jgroups/util/TimeScheduler2$FixedRateTask
      24: dup
      25: aload_0
      26: aload_1
      27: lload         4
      29: aconst_null
      30: invokespecial #68                 // Method org/jgroups/util/TimeScheduler2$FixedRateTask."<init>":(Lorg/jgroups/util/TimeScheduler2;Ljava/lang/Runnable;JLorg/jgroups/util/TimeScheduler2$1;)V
      33: astore        7
      35: aload         7
      37: lload_2
      38: invokevirtual #66                 // Method org/jgroups/util/TimeScheduler2$RecurringTask.doSchedule:(J)V
      41: aload         7
      43: areturn

  public java.util.concurrent.Future<?> scheduleWithDynamicInterval(org.jgroups.util.TimeScheduler$Task);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #62                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #63                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #55                 // Method isShutdown:()Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: new           #69                 // class org/jgroups/util/TimeScheduler2$DynamicIntervalTask
      24: dup
      25: aload_0
      26: aload_1
      27: aconst_null
      28: invokespecial #70                 // Method org/jgroups/util/TimeScheduler2$DynamicIntervalTask."<init>":(Lorg/jgroups/util/TimeScheduler2;Lorg/jgroups/util/TimeScheduler$Task;Lorg/jgroups/util/TimeScheduler2$1;)V
      31: astore_2
      32: aload_2
      33: invokevirtual #71                 // Method org/jgroups/util/TimeScheduler2$RecurringTask.doSchedule:()V
      36: aload_2
      37: areturn

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
       6: invokevirtual #42                 // Method java/util/concurrent/ConcurrentSkipListMap.values:()Ljava/util/Collection;
       9: astore_2
      10: aload_2
      11: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          48
      26: aload_3
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #46                 // class org/jgroups/util/TimeScheduler2$Entry
      35: astore        4
      37: iload_1
      38: aload         4
      40: invokevirtual #72                 // Method org/jgroups/util/TimeScheduler2$Entry.size:()I
      43: iadd
      44: istore_1
      45: goto          17
      48: iload_1
      49: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #74                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method stopRunner:()V
       4: aload_0
       5: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       8: invokevirtual #76                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      11: astore_1
      12: aload_1
      13: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          63
      28: aload_2
      29: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #78                 // class java/lang/Runnable
      37: astore_3
      38: aload_3
      39: instanceof    #79                 // class java/util/concurrent/Future
      42: ifeq          60
      45: aload_3
      46: checkcast     #79                 // class java/util/concurrent/Future
      49: astore        4
      51: aload         4
      53: iconst_1
      54: invokeinterface #80,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      59: pop
      60: goto          19
      63: aload_0
      64: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      67: invokevirtual #38                 // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      70: invokeinterface #81,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      75: aload_0
      76: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      79: ldc2_w        #82                 // long 3000l
      82: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      85: invokevirtual #84                 // Method java/util/concurrent/ThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      88: pop
      89: goto          93
      92: astore_2
      93: aload_0
      94: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
      97: invokevirtual #42                 // Method java/util/concurrent/ConcurrentSkipListMap.values:()Ljava/util/Collection;
     100: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     105: astore_2
     106: aload_2
     107: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          132
     115: aload_2
     116: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #46                 // class org/jgroups/util/TimeScheduler2$Entry
     124: astore_3
     125: aload_3
     126: invokevirtual #86                 // Method org/jgroups/util/TimeScheduler2$Entry.cancel:()V
     129: goto          106
     132: aload_0
     133: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
     136: invokevirtual #87                 // Method java/util/concurrent/ConcurrentSkipListMap.clear:()V
     139: return
    Exception table:
       from    to  target type
          75    89    92   Class java/lang/InterruptedException

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #88                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
       7: ireturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #15                 // Field running:Z
       4: ifeq          29
       7: aload_0
       8: invokevirtual #89                 // Method _run:()V
      11: goto          0
      14: astore_1
      15: getstatic     #91                 // Field log:Lorg/jgroups/logging/Log;
      18: ldc           #92                 // String failed executing tasks(s)
      20: aload_1
      21: invokeinterface #93,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: goto          0
      29: return
    Exception table:
       from    to  target type
           7    11    14   Class java/lang/Throwable

  protected void _run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
       4: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
       7: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: iconst_1
      11: invokevirtual #94                 // Method java/util/concurrent/ConcurrentSkipListMap.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      14: dup
      15: astore_1
      16: invokeinterface #95,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.isEmpty:()Z
      21: ifne          207
      24: new           #96                 // class java/util/LinkedList
      27: dup
      28: invokespecial #97                 // Method java/util/LinkedList."<init>":()V
      31: astore_2
      32: aload_1
      33: invokeinterface #98,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      38: invokeinterface #99,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore_3
      44: aload_3
      45: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          167
      53: aload_3
      54: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #100                // class java/util/Map$Entry
      62: astore        4
      64: aload         4
      66: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      71: checkcast     #102                // class java/lang/Long
      74: astore        5
      76: aload         4
      78: invokeinterface #103,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: checkcast     #46                 // class org/jgroups/util/TimeScheduler2$Entry
      86: astore        6
      88: new           #104                // class org/jgroups/util/TimeScheduler2$1
      91: dup
      92: aload_0
      93: aload         6
      95: invokespecial #105                // Method org/jgroups/util/TimeScheduler2$1."<init>":(Lorg/jgroups/util/TimeScheduler2;Lorg/jgroups/util/TimeScheduler2$Entry;)V
      98: astore        7
     100: aload_0
     101: getfield      #27                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     104: aload         7
     106: invokevirtual #106                // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
     109: goto          155
     112: astore        8
     114: aload_0
     115: getfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
     118: ifnull        137
     121: aload_0
     122: getfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
     125: aload         7
     127: ldc           #108                // String Timer temp thread
     129: invokeinterface #109,  3          // InterfaceMethod org/jgroups/util/ThreadFactory.newThread:(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Thread;
     134: goto          148
     137: new           #110                // class java/lang/Thread
     140: dup
     141: aload         7
     143: ldc           #108                // String Timer temp thread
     145: invokespecial #111                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
     148: astore        9
     150: aload         9
     152: invokevirtual #112                // Method java/lang/Thread.start:()V
     155: aload_2
     156: aload         5
     158: invokeinterface #113,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     163: pop
     164: goto          44
     167: aload_2
     168: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     173: astore_3
     174: aload_3
     175: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     180: ifeq          207
     183: aload_3
     184: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     189: checkcast     #102                // class java/lang/Long
     192: astore        4
     194: aload_0
     195: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
     198: aload         4
     200: invokevirtual #114                // Method java/util/concurrent/ConcurrentSkipListMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     203: pop
     204: goto          174
     207: aload_0
     208: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
     211: invokevirtual #115                // Method java/util/concurrent/ConcurrentSkipListMap.isEmpty:()Z
     214: ifeq          234
     217: aload_0
     218: getfield      #14                 // Field no_tasks:Ljava/util/concurrent/atomic/AtomicBoolean;
     221: iconst_0
     222: iconst_1
     223: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     226: pop
     227: aload_0
     228: invokevirtual #116                // Method waitFor:()V
     231: goto          238
     234: aload_0
     235: invokevirtual #117                // Method waitUntilNextExecution:()V
     238: return
    Exception table:
       from    to  target type
         100   109   112   Class java/util/concurrent/RejectedExecutionException

  protected void init();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method startRunner:()V
       4: return

  protected void waitUntilNextExecution();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #119,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #15                 // Field running:Z
      13: ifne          26
      16: aload_0
      17: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      25: return
      26: aload_0
      27: aload_0
      28: getfield      #4                  // Field tasks:Ljava/util/concurrent/ConcurrentSkipListMap;
      31: invokevirtual #121                // Method java/util/concurrent/ConcurrentSkipListMap.firstKey:()Ljava/lang/Object;
      34: checkcast     #102                // class java/lang/Long
      37: invokevirtual #122                // Method java/lang/Long.longValue:()J
      40: putfield      #11                 // Field next_execution_time:J
      43: aload_0
      44: getfield      #11                 // Field next_execution_time:J
      47: invokestatic  #52                 // Method java/lang/System.currentTimeMillis:()J
      50: lsub
      51: lstore_1
      52: aload_0
      53: getfield      #10                 // Field tasks_available:Ljava/util/concurrent/locks/Condition;
      56: lload_1
      57: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      60: invokeinterface #123,  4          // InterfaceMethod java/util/concurrent/locks/Condition.await:(JLjava/util/concurrent/TimeUnit;)Z
      65: pop
      66: aload_0
      67: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      70: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      75: goto          103
      78: astore_1
      79: aload_0
      80: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      83: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      88: goto          103
      91: astore_3
      92: aload_0
      93: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      96: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     101: aload_3
     102: athrow
     103: return
    Exception table:
       from    to  target type
           9    16    78   Class java/lang/InterruptedException
          26    66    78   Class java/lang/InterruptedException
           9    16    91   any
          26    66    91   any
          78    79    91   any
          91    92    91   any

  protected void waitFor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #119,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #15                 // Field running:Z
      13: ifne          26
      16: aload_0
      17: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      25: return
      26: aload_0
      27: getfield      #10                 // Field tasks_available:Ljava/util/concurrent/locks/Condition;
      30: ldc2_w        #124                // long 10000l
      33: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokeinterface #123,  4          // InterfaceMethod java/util/concurrent/locks/Condition.await:(JLjava/util/concurrent/TimeUnit;)Z
      41: pop
      42: aload_0
      43: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: goto          79
      54: astore_1
      55: aload_0
      56: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      59: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      64: goto          79
      67: astore_2
      68: aload_0
      69: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      72: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      77: aload_2
      78: athrow
      79: return
    Exception table:
       from    to  target type
           9    16    54   Class java/lang/InterruptedException
          26    42    54   Class java/lang/InterruptedException
           9    16    67   any
          26    42    67   any
          54    55    67   any
          67    68    67   any

  protected void taskReady(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #119,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: lload_1
      10: lconst_0
      11: lcmp
      12: ifle          20
      15: aload_0
      16: lload_1
      17: putfield      #11                 // Field next_execution_time:J
      20: aload_0
      21: getfield      #10                 // Field tasks_available:Ljava/util/concurrent/locks/Condition;
      24: invokeinterface #126,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      29: aload_0
      30: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: goto          53
      41: astore_3
      42: aload_0
      43: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: aload_3
      52: athrow
      53: return
    Exception table:
       from    to  target type
           9    29    41   any
          41    42    41   any

  protected void startRunner();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #15                 // Field running:Z
       5: aload_0
       6: aload_0
       7: getfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      10: ifnull        28
      13: aload_0
      14: getfield      #16                 // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      17: aload_0
      18: ldc           #127                // String Timer runner
      20: invokeinterface #109,  3          // InterfaceMethod org/jgroups/util/ThreadFactory.newThread:(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Thread;
      25: goto          38
      28: new           #110                // class java/lang/Thread
      31: dup
      32: aload_0
      33: ldc           #127                // String Timer runner
      35: invokespecial #111                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      38: putfield      #5                  // Field runner:Ljava/lang/Thread;
      41: aload_0
      42: getfield      #5                  // Field runner:Ljava/lang/Thread;
      45: invokevirtual #112                // Method java/lang/Thread.start:()V
      48: return

  protected void stopRunner();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #119,  1          // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: iconst_0
      11: putfield      #15                 // Field running:Z
      14: aload_0
      15: getfield      #10                 // Field tasks_available:Ljava/util/concurrent/locks/Condition;
      18: invokeinterface #126,  1          // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      23: aload_0
      24: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      27: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      32: goto          47
      35: astore_1
      36: aload_0
      37: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/Lock;
      40: invokeinterface #120,  1          // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      45: aload_1
      46: athrow
      47: return
    Exception table:
       from    to  target type
           9    23    35   any
          35    36    35   any

  static {};
    Code:
       0: ldc_w         #128                // class org/jgroups/util/TimeScheduler2
       3: invokestatic  #129                // Method org/jgroups/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/jgroups/logging/Log;
       6: putstatic     #91                 // Field log:Lorg/jgroups/logging/Log;
       9: return
}
