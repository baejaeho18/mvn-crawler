Compiled from "BARRIER.java"
public class org.jgroups.protocols.BARRIER extends org.jgroups.stack.Protocol {
  protected long max_close_time;

  protected long flush_timeout;

  protected final java.util.concurrent.locks.Lock lock;

  protected final java.util.concurrent.atomic.AtomicBoolean barrier_closed;

  protected java.util.concurrent.locks.Condition no_pending_threads;

  protected java.util.Map<java.lang.Thread, java.lang.Object> in_flight_threads;

  protected volatile java.util.concurrent.Future<?> barrier_opener_future;

  protected org.jgroups.util.TimeScheduler timer;

  protected org.jgroups.Address local_addr;

  protected final java.util.Set<org.jgroups.Address> holes;

  protected final java.util.Map<org.jgroups.Address, org.jgroups.Message> mcast_queue;

  protected final java.util.Map<org.jgroups.Address, org.jgroups.Message> ucast_queue;

  protected org.jgroups.protocols.TP transport;

  protected static final java.lang.Object NULL;

  public org.jgroups.protocols.BARRIER();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/stack/Protocol."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long 60000l
       8: putfield      #4                  // Field max_close_time:J
      11: aload_0
      12: ldc2_w        #5                  // long 5000l
      15: putfield      #7                  // Field flush_timeout:J
      18: aload_0
      19: new           #8                  // class java/util/concurrent/locks/ReentrantLock
      22: dup
      23: invokespecial #9                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      26: putfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      29: aload_0
      30: new           #11                 // class java/util/concurrent/atomic/AtomicBoolean
      33: dup
      34: iconst_0
      35: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      38: putfield      #13                 // Field barrier_closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      41: aload_0
      42: aload_0
      43: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #14,  1           // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      51: putfield      #15                 // Field no_pending_threads:Ljava/util/concurrent/locks/Condition;
      54: aload_0
      55: invokestatic  #16                 // Method org/jgroups/util/Util.createConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      58: putfield      #17                 // Field in_flight_threads:Ljava/util/Map;
      61: aload_0
      62: new           #18                 // class java/util/HashSet
      65: dup
      66: invokespecial #19                 // Method java/util/HashSet."<init>":()V
      69: putfield      #20                 // Field holes:Ljava/util/Set;
      72: aload_0
      73: new           #21                 // class java/util/concurrent/ConcurrentHashMap
      76: dup
      77: invokespecial #22                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      80: putfield      #23                 // Field mcast_queue:Ljava/util/Map;
      83: aload_0
      84: new           #21                 // class java/util/concurrent/ConcurrentHashMap
      87: dup
      88: invokespecial #22                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      91: putfield      #24                 // Field ucast_queue:Ljava/util/Map;
      94: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #13                 // Field barrier_closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public java.lang.String getHoles();
    Code:
       0: aload_0
       1: getfield      #20                 // Field holes:Ljava/util/Set;
       4: invokevirtual #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public int getNumberOfInFlightThreads();
    Code:
       0: aload_0
       1: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public int getInFlightThreadsCount();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getNumberOfInFlightThreads:()I
       4: ireturn

  public boolean isOpenerScheduled();
    Code:
       0: aload_0
       1: getfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
       4: ifnull        35
       7: aload_0
       8: getfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
      16: ifne          35
      19: aload_0
      20: getfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
      23: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public void init() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #32                 // Method org/jgroups/stack/Protocol.init:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #33                 // Method getTransport:()Lorg/jgroups/protocols/TP;
       9: putfield      #34                 // Field transport:Lorg/jgroups/protocols/TP;
      12: aload_0
      13: aload_0
      14: getfield      #34                 // Field transport:Lorg/jgroups/protocols/TP;
      17: invokevirtual #35                 // Method org/jgroups/protocols/TP.getTimer:()Lorg/jgroups/util/TimeScheduler;
      20: putfield      #36                 // Field timer:Lorg/jgroups/util/TimeScheduler;
      23: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/jgroups/stack/Protocol.stop:()V
       4: aload_0
       5: invokevirtual #38                 // Method openBarrier:()V
       8: return

  public void destroy();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/jgroups/stack/Protocol.destroy:()V
       4: aload_0
       5: invokevirtual #38                 // Method openBarrier:()V
       8: return

  public java.lang.Object down(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method org/jgroups/Event.getType:()I
       4: lookupswitch  { // 5
                     8: 68
                    76: 56
                    77: 62
                   106: 82
                   107: 103
               default: 124
          }
      56: aload_0
      57: invokevirtual #41                 // Method closeBarrier:()V
      60: aconst_null
      61: areturn
      62: aload_0
      63: invokevirtual #38                 // Method openBarrier:()V
      66: aconst_null
      67: areturn
      68: aload_0
      69: aload_1
      70: invokevirtual #42                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      73: checkcast     #43                 // class org/jgroups/Address
      76: putfield      #44                 // Field local_addr:Lorg/jgroups/Address;
      79: goto          124
      82: aload_1
      83: invokevirtual #42                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      86: checkcast     #43                 // class org/jgroups/Address
      89: astore_2
      90: aload_0
      91: getfield      #20                 // Field holes:Ljava/util/Set;
      94: aload_2
      95: invokeinterface #45,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     100: pop
     101: aconst_null
     102: areturn
     103: aload_1
     104: invokevirtual #42                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
     107: checkcast     #43                 // class org/jgroups/Address
     110: astore_2
     111: aload_0
     112: getfield      #20                 // Field holes:Ljava/util/Set;
     115: aload_2
     116: invokeinterface #46,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     121: pop
     122: aconst_null
     123: areturn
     124: aload_0
     125: getfield      #47                 // Field down_prot:Lorg/jgroups/stack/Protocol;
     128: aload_1
     129: invokevirtual #48                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
     132: areturn

  public java.lang.Object up(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method org/jgroups/Event.getType:()I
       4: lookupswitch  { // 3
                     1: 40
                    76: 199
                    77: 205
               default: 211
          }
      40: aload_1
      41: invokevirtual #42                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      44: checkcast     #49                 // class org/jgroups/Message
      47: astore_2
      48: aload_2
      49: getstatic     #50                 // Field org/jgroups/Message$Flag.SKIP_BARRIER:Lorg/jgroups/Message$Flag;
      52: invokevirtual #51                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      55: ifne          101
      58: aload_2
      59: invokevirtual #52                 // Method org/jgroups/Message.getDest:()Lorg/jgroups/Address;
      62: ifnull        110
      65: aload_2
      66: getstatic     #53                 // Field org/jgroups/Message$Flag.OOB:Lorg/jgroups/Message$Flag;
      69: invokevirtual #51                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      72: ifeq          85
      75: aload_2
      76: getstatic     #54                 // Field org/jgroups/Message$Flag.INTERNAL:Lorg/jgroups/Message$Flag;
      79: invokevirtual #51                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      82: ifne          101
      85: aload_0
      86: getfield      #20                 // Field holes:Ljava/util/Set;
      89: aload_2
      90: invokevirtual #55                 // Method org/jgroups/Message.getSrc:()Lorg/jgroups/Address;
      93: invokeinterface #56,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      98: ifeq          110
     101: aload_0
     102: getfield      #57                 // Field up_prot:Lorg/jgroups/stack/Protocol;
     105: aload_1
     106: invokevirtual #58                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     109: areturn
     110: aload_0
     111: getfield      #13                 // Field barrier_closed:Ljava/util/concurrent/atomic/AtomicBoolean;
     114: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     117: ifeq          153
     120: aload_2
     121: invokevirtual #52                 // Method org/jgroups/Message.getDest:()Lorg/jgroups/Address;
     124: ifnonnull     134
     127: aload_0
     128: getfield      #23                 // Field mcast_queue:Ljava/util/Map;
     131: goto          138
     134: aload_0
     135: getfield      #24                 // Field ucast_queue:Ljava/util/Map;
     138: astore_3
     139: aload_3
     140: aload_2
     141: invokevirtual #55                 // Method org/jgroups/Message.getSrc:()Lorg/jgroups/Address;
     144: aload_2
     145: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: aconst_null
     152: areturn
     153: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     156: astore_3
     157: aload_0
     158: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
     161: aload_3
     162: getstatic     #61                 // Field NULL:Ljava/lang/Object;
     165: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: aload_0
     172: getfield      #57                 // Field up_prot:Lorg/jgroups/stack/Protocol;
     175: aload_1
     176: invokevirtual #58                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     179: astore        4
     181: aload_0
     182: aload_3
     183: invokevirtual #62                 // Method unblock:(Ljava/lang/Thread;)V
     186: aload         4
     188: areturn
     189: astore        5
     191: aload_0
     192: aload_3
     193: invokevirtual #62                 // Method unblock:(Ljava/lang/Thread;)V
     196: aload         5
     198: athrow
     199: aload_0
     200: invokevirtual #41                 // Method closeBarrier:()V
     203: aconst_null
     204: areturn
     205: aload_0
     206: invokevirtual #38                 // Method openBarrier:()V
     209: aconst_null
     210: areturn
     211: aload_0
     212: getfield      #57                 // Field up_prot:Lorg/jgroups/stack/Protocol;
     215: aload_1
     216: invokevirtual #58                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     219: areturn
    Exception table:
       from    to  target type
         171   181   189   any
         189   191   189   any

  public void up(org.jgroups.util.MessageBatch);
    Code:
       0: aload_1
       1: invokevirtual #63                 // Method org/jgroups/util/MessageBatch.dest:()Lorg/jgroups/Address;
       4: ifnull        52
       7: aload_1
       8: invokevirtual #64                 // Method org/jgroups/util/MessageBatch.mode:()Lorg/jgroups/util/MessageBatch$Mode;
      11: getstatic     #65                 // Field org/jgroups/util/MessageBatch$Mode.OOB:Lorg/jgroups/util/MessageBatch$Mode;
      14: if_acmpne     27
      17: aload_1
      18: invokevirtual #64                 // Method org/jgroups/util/MessageBatch.mode:()Lorg/jgroups/util/MessageBatch$Mode;
      21: getstatic     #66                 // Field org/jgroups/util/MessageBatch$Mode.INTERNAL:Lorg/jgroups/util/MessageBatch$Mode;
      24: if_acmpeq     43
      27: aload_0
      28: getfield      #20                 // Field holes:Ljava/util/Set;
      31: aload_1
      32: invokevirtual #67                 // Method org/jgroups/util/MessageBatch.sender:()Lorg/jgroups/Address;
      35: invokeinterface #56,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      40: ifeq          52
      43: aload_0
      44: getfield      #57                 // Field up_prot:Lorg/jgroups/stack/Protocol;
      47: aload_1
      48: invokevirtual #68                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/util/MessageBatch;)V
      51: return
      52: aload_0
      53: getfield      #13                 // Field barrier_closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      56: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      59: ifeq          118
      62: aload_1
      63: invokevirtual #63                 // Method org/jgroups/util/MessageBatch.dest:()Lorg/jgroups/Address;
      66: ifnonnull     76
      69: aload_0
      70: getfield      #23                 // Field mcast_queue:Ljava/util/Map;
      73: goto          80
      76: aload_0
      77: getfield      #24                 // Field ucast_queue:Ljava/util/Map;
      80: astore_2
      81: aload_2
      82: aload_1
      83: invokevirtual #67                 // Method org/jgroups/util/MessageBatch.sender:()Lorg/jgroups/Address;
      86: aload_1
      87: invokevirtual #69                 // Method org/jgroups/util/MessageBatch.last:()Lorg/jgroups/Message;
      90: aload_0
      91: getfield      #34                 // Field transport:Lorg/jgroups/protocols/TP;
      94: invokevirtual #70                 // Method org/jgroups/protocols/TP.getId:()S
      97: new           #71                 // class org/jgroups/protocols/TpHeader
     100: dup
     101: aload_1
     102: invokevirtual #72                 // Method org/jgroups/util/MessageBatch.clusterName:()Lorg/jgroups/util/AsciiString;
     105: invokespecial #73                 // Method org/jgroups/protocols/TpHeader."<init>":(Lorg/jgroups/util/AsciiString;)V
     108: invokevirtual #74                 // Method org/jgroups/Message.putHeader:(SLorg/jgroups/Header;)Lorg/jgroups/Message;
     111: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: return
     118: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     121: astore_2
     122: aload_0
     123: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
     126: aload_2
     127: getstatic     #61                 // Field NULL:Ljava/lang/Object;
     130: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: aload_0
     137: getfield      #57                 // Field up_prot:Lorg/jgroups/stack/Protocol;
     140: aload_1
     141: invokevirtual #68                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/util/MessageBatch;)V
     144: aload_0
     145: aload_2
     146: invokevirtual #62                 // Method unblock:(Ljava/lang/Thread;)V
     149: goto          160
     152: astore_3
     153: aload_0
     154: aload_2
     155: invokevirtual #62                 // Method unblock:(Ljava/lang/Thread;)V
     158: aload_3
     159: athrow
     160: return
    Exception table:
       from    to  target type
         136   144   152   any
         152   153   152   any

  protected void unblock(java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: getstatic     #61                 // Field NULL:Ljava/lang/Object;
      13: if_acmpne     70
      16: aload_0
      17: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
      20: invokeinterface #76,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      25: ifeq          70
      28: aload_0
      29: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #77,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      37: aload_0
      38: getfield      #15                 // Field no_pending_threads:Ljava/util/concurrent/locks/Condition;
      41: invokeinterface #78,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      46: aload_0
      47: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: goto          70
      58: astore_2
      59: aload_0
      60: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      63: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      68: aload_2
      69: athrow
      70: return
    Exception table:
       from    to  target type
          37    46    58   any
          58    59    58   any

  protected void closeBarrier();
    Code:
       0: aload_0
       1: getfield      #13                 // Field barrier_closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          13
      12: return
      13: lconst_0
      14: lstore_1
      15: lconst_0
      16: lstore_3
      17: invokestatic  #81                 // Method java/lang/System.currentTimeMillis:()J
      20: lstore        5
      22: aload_0
      23: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
      26: invokestatic  #60                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      29: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #77,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      44: aload_0
      45: getfield      #13                 // Field barrier_closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      48: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      51: ifeq          230
      54: aload_0
      55: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
      58: invokeinterface #76,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      63: ifne          230
      66: lload_1
      67: lconst_0
      68: lcmp
      69: ifne          90
      72: aload_0
      73: getfield      #7                  // Field flush_timeout:J
      76: lconst_0
      77: lcmp
      78: ifle          90
      81: invokestatic  #81                 // Method java/lang/System.currentTimeMillis:()J
      84: aload_0
      85: getfield      #7                  // Field flush_timeout:J
      88: ladd
      89: lstore_1
      90: aload_0
      91: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
      94: invokeinterface #82,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      99: invokeinterface #83,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     104: astore        7
     106: aload         7
     108: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          157
     116: aload         7
     118: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #86                 // class java/lang/Thread
     126: astore        8
     128: aload         8
     130: invokevirtual #87                 // Method java/lang/Thread.isAlive:()Z
     133: ifeq          147
     136: aload         8
     138: invokevirtual #88                 // Method java/lang/Thread.getState:()Ljava/lang/Thread$State;
     141: getstatic     #89                 // Field java/lang/Thread$State.TERMINATED:Ljava/lang/Thread$State;
     144: if_acmpne     154
     147: aload         7
     149: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.remove:()V
     154: goto          106
     157: aload_0
     158: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
     161: invokeinterface #76,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     166: ifeq          172
     169: goto          230
     172: aload_0
     173: getfield      #7                  // Field flush_timeout:J
     176: lconst_0
     177: lcmp
     178: ifgt          193
     181: aload_0
     182: getfield      #15                 // Field no_pending_threads:Ljava/util/concurrent/locks/Condition;
     185: invokeinterface #91,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
     190: goto          222
     193: lload_1
     194: invokestatic  #81                 // Method java/lang/System.currentTimeMillis:()J
     197: lsub
     198: dup2
     199: lstore_3
     200: lconst_0
     201: lcmp
     202: ifgt          208
     205: goto          230
     208: aload_0
     209: getfield      #15                 // Field no_pending_threads:Ljava/util/concurrent/locks/Condition;
     212: lload_3
     213: getstatic     #92                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     216: invokeinterface #93,  4           // InterfaceMethod java/util/concurrent/locks/Condition.await:(JLjava/util/concurrent/TimeUnit;)Z
     221: pop
     222: goto          44
     225: astore        7
     227: goto          44
     230: aload_0
     231: getfield      #7                  // Field flush_timeout:J
     234: lconst_0
     235: lcmp
     236: ifle          306
     239: aload_0
     240: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
     243: invokeinterface #76,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     248: ifne          306
     251: invokestatic  #81                 // Method java/lang/System.currentTimeMillis:()J
     254: lload         5
     256: lsub
     257: lstore        7
     259: new           #95                 // class org/jgroups/TimeoutException
     262: dup
     263: new           #96                 // class java/lang/StringBuilder
     266: dup
     267: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
     270: aload_0
     271: getfield      #44                 // Field local_addr:Lorg/jgroups/Address;
     274: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     277: ldc           #99                 // String : failed flushing pending threads in
     279: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: lload         7
     284: invokevirtual #101                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     287: ldc           #102                // String  ms; threads:\n
     289: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: aload_0
     293: invokevirtual #103                // Method printInFlightThreads:()Ljava/lang/String;
     296: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     302: invokespecial #105                // Method org/jgroups/TimeoutException."<init>":(Ljava/lang/String;)V
     305: athrow
     306: aload_0
     307: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     310: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     315: goto          332
     318: astore        9
     320: aload_0
     321: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     324: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     329: aload         9
     331: athrow
     332: aload_0
     333: getfield      #4                  // Field max_close_time:J
     336: lconst_0
     337: lcmp
     338: ifle          345
     341: aload_0
     342: invokevirtual #106                // Method scheduleBarrierOpener:()V
     345: return
    Exception table:
       from    to  target type
         172   205   225   Class java/lang/InterruptedException
         208   222   225   Class java/lang/InterruptedException
          44   306   318   any
         318   320   318   any

  public void openBarrier();
    Code:
       0: aload_0
       1: getfield      #13                 // Field barrier_closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          13
      12: return
      13: aload_0
      14: invokevirtual #107                // Method cancelBarrierOpener:()V
      17: aload_0
      18: getfield      #23                 // Field mcast_queue:Ljava/util/Map;
      21: dup
      22: astore_1
      23: monitorenter
      24: aload_0
      25: aload_0
      26: getfield      #23                 // Field mcast_queue:Ljava/util/Map;
      29: invokevirtual #108                // Method flushQueue:(Ljava/util/Map;)V
      32: aload_1
      33: monitorexit
      34: goto          42
      37: astore_2
      38: aload_1
      39: monitorexit
      40: aload_2
      41: athrow
      42: aload_0
      43: getfield      #24                 // Field ucast_queue:Ljava/util/Map;
      46: dup
      47: astore_1
      48: monitorenter
      49: aload_0
      50: aload_0
      51: getfield      #24                 // Field ucast_queue:Ljava/util/Map;
      54: invokevirtual #108                // Method flushQueue:(Ljava/util/Map;)V
      57: aload_1
      58: monitorexit
      59: goto          67
      62: astore_3
      63: aload_1
      64: monitorexit
      65: aload_3
      66: athrow
      67: return
    Exception table:
       from    to  target type
          24    34    37   any
          37    40    37   any
          49    59    62   any
          62    65    62   any

  protected java.lang.String printInFlightThreads();
    Code:
       0: new           #96                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #97                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #17                 // Field in_flight_threads:Ljava/util/Map;
      12: invokeinterface #82,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokeinterface #109,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          59
      32: aload_2
      33: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #86                 // class java/lang/Thread
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #110                // Method java/lang/Thread.toString:()Ljava/lang/String;
      47: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #111                // String \n
      52: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: goto          23
      59: aload_1
      60: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  protected void flushQueue(java.util.Map<org.jgroups.Address, org.jgroups.Message>);
    Code:
       0: aload_1
       1: invokeinterface #76,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          10
       9: return
      10: aload_1
      11: invokeinterface #112,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokeinterface #113,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          123
      31: aload_2
      32: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #49                 // class org/jgroups/Message
      40: astore_3
      41: aload_0
      42: getfield      #34                 // Field transport:Lorg/jgroups/protocols/TP;
      45: aload_3
      46: getstatic     #53                 // Field org/jgroups/Message$Flag.OOB:Lorg/jgroups/Message$Flag;
      49: invokevirtual #51                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      52: aload_3
      53: getstatic     #54                 // Field org/jgroups/Message$Flag.INTERNAL:Lorg/jgroups/Message$Flag;
      56: invokevirtual #51                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      59: invokevirtual #114                // Method org/jgroups/protocols/TP.pickThreadPool:(ZZ)Ljava/util/concurrent/Executor;
      62: astore        4
      64: aload         4
      66: new           #115                // class org/jgroups/protocols/TP$SingleMessageHandler
      69: dup
      70: aload_0
      71: getfield      #34                 // Field transport:Lorg/jgroups/protocols/TP;
      74: dup
      75: invokevirtual #116                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      78: pop
      79: aload_3
      80: invokespecial #117                // Method org/jgroups/protocols/TP$SingleMessageHandler."<init>":(Lorg/jgroups/protocols/TP;Lorg/jgroups/Message;)V
      83: invokeinterface #118,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      88: goto          120
      91: astore        5
      93: aload_0
      94: getfield      #120                // Field log:Lorg/jgroups/logging/Log;
      97: ldc           #121                // String %s: failure passing message up the stack: %s
      99: iconst_2
     100: anewarray     #122                // class java/lang/Object
     103: dup
     104: iconst_0
     105: aload_0
     106: getfield      #44                 // Field local_addr:Lorg/jgroups/Address;
     109: aastore
     110: dup
     111: iconst_1
     112: aload         5
     114: aastore
     115: invokeinterface #123,  3          // InterfaceMethod org/jgroups/logging/Log.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     120: goto          22
     123: aload_1
     124: invokeinterface #124,  1          // InterfaceMethod java/util/Map.clear:()V
     129: return
    Exception table:
       from    to  target type
          64    88    91   Class java/lang/Throwable

  protected void scheduleBarrierOpener();
    Code:
       0: aload_0
       1: getfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
       4: ifnull        19
       7: aload_0
       8: getfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
      16: ifeq          47
      19: aload_0
      20: aload_0
      21: getfield      #36                 // Field timer:Lorg/jgroups/util/TimeScheduler;
      24: new           #125                // class org/jgroups/protocols/BARRIER$1
      27: dup
      28: aload_0
      29: invokespecial #126                // Method org/jgroups/protocols/BARRIER$1."<init>":(Lorg/jgroups/protocols/BARRIER;)V
      32: aload_0
      33: getfield      #4                  // Field max_close_time:J
      36: getstatic     #92                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      39: invokeinterface #127,  5          // InterfaceMethod org/jgroups/util/TimeScheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      44: putfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
      47: return

  protected void cancelBarrierOpener();
    Code:
       0: aload_0
       1: getfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
       4: ifnull        23
       7: aload_0
       8: getfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
      11: iconst_1
      12: invokeinterface #128,  2          // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: aload_0
      19: aconst_null
      20: putfield      #29                 // Field barrier_opener_future:Ljava/util/concurrent/Future;
      23: return

  static {};
    Code:
       0: new           #122                // class java/lang/Object
       3: dup
       4: invokespecial #129                // Method java/lang/Object."<init>":()V
       7: putstatic     #61                 // Field NULL:Ljava/lang/Object;
      10: return
}
