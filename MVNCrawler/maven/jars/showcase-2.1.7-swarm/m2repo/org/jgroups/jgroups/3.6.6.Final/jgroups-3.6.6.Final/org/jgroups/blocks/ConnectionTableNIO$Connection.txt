Compiled from "ConnectionTableNIO.java"
class org.jgroups.blocks.ConnectionTableNIO$Connection extends org.jgroups.blocks.BasicConnectionTable$Connection {
  private java.nio.channels.SocketChannel sock_ch;

  private org.jgroups.blocks.ConnectionTableNIO$WriteHandler m_writeHandler;

  private org.jgroups.blocks.ConnectionTableNIO$SelectorWriteHandler m_selectorWriteHandler;

  private final org.jgroups.blocks.ConnectionTableNIO$ConnectionReadState m_readState;

  private static final int HEADER_SIZE;

  final java.nio.ByteBuffer headerBuffer;

  final org.jgroups.blocks.ConnectionTableNIO this$0;

  org.jgroups.blocks.ConnectionTableNIO$Connection(org.jgroups.blocks.ConnectionTableNIO, java.nio.channels.SocketChannel, org.jgroups.Address);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/jgroups/blocks/ConnectionTableNIO;
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #4                  // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      11: aload_3
      12: invokespecial #5                  // Method org/jgroups/blocks/BasicConnectionTable$Connection."<init>":(Lorg/jgroups/blocks/BasicConnectionTable;Ljava/net/Socket;Lorg/jgroups/Address;)V
      15: aload_0
      16: aconst_null
      17: putfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      20: aload_0
      21: iconst_4
      22: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      25: putfield      #8                  // Field headerBuffer:Ljava/nio/ByteBuffer;
      28: aload_0
      29: aload_2
      30: putfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      33: aload_0
      34: new           #9                  // class org/jgroups/blocks/ConnectionTableNIO$ConnectionReadState
      37: dup
      38: aload_1
      39: aload_0
      40: invokespecial #10                 // Method org/jgroups/blocks/ConnectionTableNIO$ConnectionReadState."<init>":(Lorg/jgroups/blocks/ConnectionTableNIO;Lorg/jgroups/blocks/ConnectionTableNIO$Connection;)V
      43: putfield      #11                 // Field m_readState:Lorg/jgroups/blocks/ConnectionTableNIO$ConnectionReadState;
      46: aload_0
      47: iconst_1
      48: putfield      #12                 // Field is_running:Z
      51: return

  private org.jgroups.blocks.ConnectionTableNIO$ConnectionReadState getReadState();
    Code:
       0: aload_0
       1: getfield      #11                 // Field m_readState:Lorg/jgroups/blocks/ConnectionTableNIO$ConnectionReadState;
       4: areturn

  private void setupWriteHandler(org.jgroups.blocks.ConnectionTableNIO$WriteHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field m_writeHandler:Lorg/jgroups/blocks/ConnectionTableNIO$WriteHandler;
       5: aload_0
       6: aload_1
       7: aload_0
       8: getfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      11: invokestatic  #14                 // Method org/jgroups/blocks/ConnectionTableNIO$WriteHandler.access$900:(Lorg/jgroups/blocks/ConnectionTableNIO$WriteHandler;Ljava/nio/channels/SocketChannel;)Lorg/jgroups/blocks/ConnectionTableNIO$SelectorWriteHandler;
      14: putfield      #15                 // Field m_selectorWriteHandler:Lorg/jgroups/blocks/ConnectionTableNIO$SelectorWriteHandler;
      17: return

  void doSend(byte[], int, int) throws java.lang.Exception;
    Code:
       0: new           #16                 // class org/jgroups/blocks/ConnectionTableNIO$MyFuture
       3: dup
       4: invokespecial #17                 // Method org/jgroups/blocks/ConnectionTableNIO$MyFuture."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #13                 // Field m_writeHandler:Lorg/jgroups/blocks/ConnectionTableNIO$WriteHandler;
      13: aload_0
      14: getfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      23: aload         4
      25: aload_0
      26: getfield      #15                 // Field m_selectorWriteHandler:Lorg/jgroups/blocks/ConnectionTableNIO$SelectorWriteHandler;
      29: invokestatic  #19                 // Method org/jgroups/blocks/ConnectionTableNIO$WriteHandler.access$1000:(Lorg/jgroups/blocks/ConnectionTableNIO$WriteHandler;Ljava/nio/channels/SocketChannel;Ljava/nio/ByteBuffer;Lorg/jgroups/blocks/ConnectionTableNIO$MyFuture;Lorg/jgroups/blocks/ConnectionTableNIO$SelectorWriteHandler;)V
      32: aload         4
      34: invokevirtual #20                 // Method org/jgroups/blocks/ConnectionTableNIO$MyFuture.get:()Ljava/lang/Object;
      37: astore        5
      39: aload         5
      41: instanceof    #21                 // class java/lang/Exception
      44: ifeq          113
      47: aload_0
      48: getfield      #3                  // Field this$0:Lorg/jgroups/blocks/ConnectionTableNIO;
      51: getfield      #22                 // Field org/jgroups/blocks/ConnectionTableNIO.log:Lorg/jgroups/logging/Log;
      54: invokeinterface #23,  1           // InterfaceMethod org/jgroups/logging/Log.isErrorEnabled:()Z
      59: ifeq          81
      62: aload_0
      63: getfield      #3                  // Field this$0:Lorg/jgroups/blocks/ConnectionTableNIO;
      66: getfield      #22                 // Field org/jgroups/blocks/ConnectionTableNIO.log:Lorg/jgroups/logging/Log;
      69: ldc           #24                 // String failed sending message
      71: aload         5
      73: checkcast     #21                 // class java/lang/Exception
      76: invokeinterface #25,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      81: aload         5
      83: checkcast     #21                 // class java/lang/Exception
      86: invokevirtual #26                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
      89: instanceof    #27                 // class java/io/IOException
      92: ifeq          107
      95: aload         5
      97: checkcast     #21                 // class java/lang/Exception
     100: invokevirtual #26                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     103: checkcast     #27                 // class java/io/IOException
     106: athrow
     107: aload         5
     109: checkcast     #21                 // class java/lang/Exception
     112: athrow
     113: aload         4
     115: invokevirtual #20                 // Method org/jgroups/blocks/ConnectionTableNIO$MyFuture.get:()Ljava/lang/Object;
     118: pop
     119: return

  java.nio.channels.SocketChannel getSocketChannel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
       4: areturn

  synchronized void closeSocket();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
       4: ifnull        58
       7: aload_0
       8: getfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      11: invokevirtual #28                 // Method java/nio/channels/SocketChannel.isConnected:()Z
      14: ifeq          34
      17: aload_0
      18: getfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      21: invokevirtual #29                 // Method java/nio/channels/SocketChannel.isOpen:()Z
      24: ifeq          34
      27: aload_0
      28: getfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      31: invokevirtual #30                 // Method java/nio/channels/SocketChannel.close:()V
      34: goto          53
      37: astore_1
      38: aload_0
      39: getfield      #3                  // Field this$0:Lorg/jgroups/blocks/ConnectionTableNIO;
      42: getfield      #22                 // Field org/jgroups/blocks/ConnectionTableNIO.log:Lorg/jgroups/logging/Log;
      45: ldc           #31                 // String error closing socket connection
      47: aload_1
      48: invokeinterface #25,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: aload_0
      54: aconst_null
      55: putfield      #6                  // Field sock_ch:Ljava/nio/channels/SocketChannel;
      58: return
    Exception table:
       from    to  target type
           7    34    37   Class java/lang/Exception

  void closed();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getPeerAddress:()Lorg/jgroups/Address;
       4: astore_1
       5: aload_0
       6: getfield      #3                  // Field this$0:Lorg/jgroups/blocks/ConnectionTableNIO;
       9: getfield      #33                 // Field org/jgroups/blocks/ConnectionTableNIO.conns:Ljava/util/Map;
      12: dup
      13: astore_2
      14: monitorenter
      15: aload_0
      16: getfield      #3                  // Field this$0:Lorg/jgroups/blocks/ConnectionTableNIO;
      19: getfield      #33                 // Field org/jgroups/blocks/ConnectionTableNIO.conns:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #34,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_2
      30: monitorexit
      31: goto          39
      34: astore_3
      35: aload_2
      36: monitorexit
      37: aload_3
      38: athrow
      39: aload_0
      40: getfield      #3                  // Field this$0:Lorg/jgroups/blocks/ConnectionTableNIO;
      43: aload_1
      44: invokevirtual #35                 // Method org/jgroups/blocks/ConnectionTableNIO.notifyConnectionClosed:(Lorg/jgroups/Address;)V
      47: return
    Exception table:
       from    to  target type
          15    31    34   any
          34    37    34   any

  static void access$000(org.jgroups.blocks.ConnectionTableNIO$Connection, org.jgroups.blocks.ConnectionTableNIO$WriteHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method setupWriteHandler:(Lorg/jgroups/blocks/ConnectionTableNIO$WriteHandler;)V
       5: return

  static org.jgroups.blocks.ConnectionTableNIO$ConnectionReadState access$800(org.jgroups.blocks.ConnectionTableNIO$Connection);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getReadState:()Lorg/jgroups/blocks/ConnectionTableNIO$ConnectionReadState;
       4: areturn
}
