Compiled from "NakAckHeader.java"
public class org.jgroups.protocols.pbcast.NakAckHeader extends org.jgroups.Header {
  public static final byte MSG;

  public static final byte XMIT_REQ;

  public static final byte XMIT_RSP;

  byte type;

  long seqno;

  org.jgroups.util.Range range;

  org.jgroups.Address sender;

  public org.jgroups.protocols.pbcast.NakAckHeader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: ldc2_w        #3                  // long -1l
      13: putfield      #5                  // Field seqno:J
      16: aload_0
      17: aconst_null
      18: putfield      #6                  // Field range:Lorg/jgroups/util/Range;
      21: return

  public static org.jgroups.protocols.pbcast.NakAckHeader createMessageHeader(long);
    Code:
       0: new           #7                  // class org/jgroups/protocols/pbcast/NakAckHeader
       3: dup
       4: iconst_1
       5: lload_0
       6: invokespecial #8                  // Method "<init>":(BJ)V
       9: areturn

  public static org.jgroups.protocols.pbcast.NakAckHeader createXmitRequestHeader(long, long, org.jgroups.Address);
    Code:
       0: new           #7                  // class org/jgroups/protocols/pbcast/NakAckHeader
       3: dup
       4: iconst_2
       5: lload_0
       6: lload_2
       7: aload         4
       9: invokespecial #9                  // Method "<init>":(BJJLorg/jgroups/Address;)V
      12: areturn

  public static org.jgroups.protocols.pbcast.NakAckHeader createXmitResponseHeader();
    Code:
       0: new           #7                  // class org/jgroups/protocols/pbcast/NakAckHeader
       3: dup
       4: iconst_3
       5: ldc2_w        #3                  // long -1l
       8: invokespecial #8                  // Method "<init>":(BJ)V
      11: areturn

  private org.jgroups.protocols.pbcast.NakAckHeader(byte, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: ldc2_w        #3                  // long -1l
      13: putfield      #5                  // Field seqno:J
      16: aload_0
      17: aconst_null
      18: putfield      #6                  // Field range:Lorg/jgroups/util/Range;
      21: aload_0
      22: iload_1
      23: putfield      #2                  // Field type:B
      26: aload_0
      27: lload_2
      28: putfield      #5                  // Field seqno:J
      31: return

  private org.jgroups.protocols.pbcast.NakAckHeader(byte, long, long, org.jgroups.Address);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: ldc2_w        #3                  // long -1l
      13: putfield      #5                  // Field seqno:J
      16: aload_0
      17: aconst_null
      18: putfield      #6                  // Field range:Lorg/jgroups/util/Range;
      21: aload_0
      22: iload_1
      23: putfield      #2                  // Field type:B
      26: aload_0
      27: new           #10                 // class org/jgroups/util/Range
      30: dup
      31: lload_2
      32: lload         4
      34: invokespecial #11                 // Method org/jgroups/util/Range."<init>":(JJ)V
      37: putfield      #6                  // Field range:Lorg/jgroups/util/Range;
      40: aload_0
      41: aload         6
      43: putfield      #12                 // Field sender:Lorg/jgroups/Address;
      46: return

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:B
       4: ireturn

  public long getSeqno();
    Code:
       0: aload_0
       1: getfield      #5                  // Field seqno:J
       4: lreturn

  public org.jgroups.util.Range getRange();
    Code:
       0: aload_0
       1: getfield      #6                  // Field range:Lorg/jgroups/util/Range;
       4: areturn

  public org.jgroups.Address getSender();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sender:Lorg/jgroups/Address;
       4: areturn

  public void writeTo(java.io.DataOutput) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field type:B
       5: invokeinterface #13,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: aload_0
      11: getfield      #2                  // Field type:B
      14: tableswitch   { // 1 to 3
                     1: 40
                     2: 51
                     3: 40
               default: 67
          }
      40: aload_0
      41: getfield      #5                  // Field seqno:J
      44: aload_1
      45: invokestatic  #14                 // Method org/jgroups/util/Bits.writeLong:(JLjava/io/DataOutput;)V
      48: goto          67
      51: aload_0
      52: getfield      #6                  // Field range:Lorg/jgroups/util/Range;
      55: aload_1
      56: invokestatic  #15                 // Method org/jgroups/util/Util.writeStreamable:(Lorg/jgroups/util/Streamable;Ljava/io/DataOutput;)V
      59: aload_0
      60: getfield      #12                 // Field sender:Lorg/jgroups/Address;
      63: aload_1
      64: invokestatic  #16                 // Method org/jgroups/util/Util.writeAddress:(Lorg/jgroups/Address;Ljava/io/DataOutput;)V
      67: return

  public void readFrom(java.io.DataInput) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #17,  1           // InterfaceMethod java/io/DataInput.readByte:()B
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: getfield      #2                  // Field type:B
      14: tableswitch   { // 1 to 3
                     1: 40
                     2: 51
                     3: 40
               default: 73
          }
      40: aload_0
      41: aload_1
      42: invokestatic  #18                 // Method org/jgroups/util/Bits.readLong:(Ljava/io/DataInput;)J
      45: putfield      #5                  // Field seqno:J
      48: goto          73
      51: aload_0
      52: ldc_w         #10                 // class org/jgroups/util/Range
      55: aload_1
      56: invokestatic  #19                 // Method org/jgroups/util/Util.readStreamable:(Ljava/lang/Class;Ljava/io/DataInput;)Lorg/jgroups/util/Streamable;
      59: checkcast     #10                 // class org/jgroups/util/Range
      62: putfield      #6                  // Field range:Lorg/jgroups/util/Range;
      65: aload_0
      66: aload_1
      67: invokestatic  #20                 // Method org/jgroups/util/Util.readAddress:(Ljava/io/DataInput;)Lorg/jgroups/Address;
      70: putfield      #12                 // Field sender:Lorg/jgroups/Address;
      73: return

  public int size();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field type:B
       6: tableswitch   { // 1 to 3
                     1: 32
                     2: 42
                     3: 32
               default: 74
          }
      32: iload_1
      33: aload_0
      34: getfield      #5                  // Field seqno:J
      37: invokestatic  #21                 // Method org/jgroups/util/Bits.size:(J)I
      40: iadd
      41: ireturn
      42: iinc          1, 1
      45: aload_0
      46: getfield      #6                  // Field range:Lorg/jgroups/util/Range;
      49: ifnull        62
      52: iload_1
      53: aload_0
      54: getfield      #6                  // Field range:Lorg/jgroups/util/Range;
      57: invokevirtual #22                 // Method org/jgroups/util/Range.serializedSize:()I
      60: iadd
      61: istore_1
      62: iload_1
      63: aload_0
      64: getfield      #12                 // Field sender:Lorg/jgroups/Address;
      67: invokestatic  #23                 // Method org/jgroups/util/Util.size:(Lorg/jgroups/Address;)I
      70: iadd
      71: istore_1
      72: iload_1
      73: ireturn
      74: iload_1
      75: ireturn

  public org.jgroups.protocols.pbcast.NakAckHeader copy();
    Code:
       0: new           #7                  // class org/jgroups/protocols/pbcast/NakAckHeader
       3: dup
       4: invokespecial #24                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field type:B
      13: putfield      #2                  // Field type:B
      16: aload_1
      17: aload_0
      18: getfield      #5                  // Field seqno:J
      21: putfield      #5                  // Field seqno:J
      24: aload_1
      25: aload_0
      26: getfield      #6                  // Field range:Lorg/jgroups/util/Range;
      29: putfield      #6                  // Field range:Lorg/jgroups/util/Range;
      32: aload_1
      33: aload_0
      34: getfield      #12                 // Field sender:Lorg/jgroups/Address;
      37: putfield      #12                 // Field sender:Lorg/jgroups/Address;
      40: aload_1
      41: areturn

  public static java.lang.String type2Str(byte);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 3
                     1: 28
                     2: 31
                     3: 34
               default: 37
          }
      28: ldc           #25                 // String MSG
      30: areturn
      31: ldc           #26                 // String XMIT_REQ
      33: areturn
      34: ldc           #27                 // String XMIT_RSP
      36: areturn
      37: ldc           #28                 // String <undefined>
      39: areturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #31                 // String [
      11: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #2                  // Field type:B
      18: invokestatic  #33                 // Method type2Str:(B)Ljava/lang/String;
      21: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: getfield      #2                  // Field type:B
      29: tableswitch   { // 1 to 3
                     1: 56
                     2: 73
                     3: 56
               default: 107
          }
      56: aload_1
      57: ldc           #34                 // String , seqno=
      59: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #5                  // Field seqno:J
      66: invokevirtual #35                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      69: pop
      70: goto          107
      73: aload_0
      74: getfield      #6                  // Field range:Lorg/jgroups/util/Range;
      77: ifnull        107
      80: aload_1
      81: new           #29                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #36                 // String , range=
      90: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #6                  // Field range:Lorg/jgroups/util/Range;
      97: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: pop
     107: aload_0
     108: getfield      #12                 // Field sender:Lorg/jgroups/Address;
     111: ifnull        128
     114: aload_1
     115: ldc           #39                 // String , sender=
     117: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: getfield      #12                 // Field sender:Lorg/jgroups/Address;
     124: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: pop
     128: aload_1
     129: bipush        93
     131: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     134: pop
     135: aload_1
     136: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: areturn
}
