Compiled from "SEQUENCER.java"
public class org.jgroups.protocols.SEQUENCER$SequencerHeader extends org.jgroups.Header {
  protected static final byte FORWARD;

  protected static final byte FLUSH;

  protected static final byte BCAST;

  protected static final byte WRAPPED_BCAST;

  protected byte type;

  protected long seqno;

  protected boolean flush_ack;

  public org.jgroups.protocols.SEQUENCER$SequencerHeader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: ldc2_w        #3                  // long -1l
      13: putfield      #5                  // Field seqno:J
      16: return

  public org.jgroups.protocols.SEQUENCER$SequencerHeader(byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field type:B
       9: aload_0
      10: ldc2_w        #3                  // long -1l
      13: putfield      #5                  // Field seqno:J
      16: aload_0
      17: iload_1
      18: putfield      #2                  // Field type:B
      21: return

  public org.jgroups.protocols.SEQUENCER$SequencerHeader(byte, long);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #6                  // Method "<init>":(B)V
       5: aload_0
       6: lload_2
       7: putfield      #5                  // Field seqno:J
      10: return

  public long getSeqno();
    Code:
       0: aload_0
       1: getfield      #5                  // Field seqno:J
       4: lreturn

  public java.lang.String toString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: bipush        64
       6: invokespecial #8                  // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #9                  // Method printType:()Ljava/lang/String;
      15: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: pop
      19: aload_0
      20: getfield      #5                  // Field seqno:J
      23: lconst_0
      24: lcmp
      25: iflt          55
      28: aload_1
      29: new           #7                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #12                 // String  seqno=
      38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #5                  // Field seqno:J
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      48: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_0
      56: getfield      #15                 // Field flush_ack:Z
      59: ifeq          69
      62: aload_1
      63: ldc           #16                 // String  (flush_ack)
      65: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_1
      70: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn

  protected final java.lang.String printType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:B
       4: tableswitch   { // 1 to 4
                     1: 36
                     2: 39
                     3: 42
                     4: 45
               default: 48
          }
      36: ldc           #17                 // String FORWARD
      38: areturn
      39: ldc           #18                 // String FLUSH
      41: areturn
      42: ldc           #19                 // String BCAST
      44: areturn
      45: ldc           #20                 // String WRAPPED_BCAST
      47: areturn
      48: ldc           #21                 // String n/a
      50: areturn

  public void writeTo(java.io.DataOutput) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field type:B
       5: invokeinterface #22,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: aload_0
      11: getfield      #5                  // Field seqno:J
      14: aload_1
      15: invokestatic  #23                 // Method org/jgroups/util/Bits.writeLong:(JLjava/io/DataOutput;)V
      18: aload_1
      19: aload_0
      20: getfield      #15                 // Field flush_ack:Z
      23: invokeinterface #24,  2           // InterfaceMethod java/io/DataOutput.writeBoolean:(Z)V
      28: return

  public void readFrom(java.io.DataInput) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #25,  1           // InterfaceMethod java/io/DataInput.readByte:()B
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: aload_1
      12: invokestatic  #26                 // Method org/jgroups/util/Bits.readLong:(Ljava/io/DataInput;)J
      15: putfield      #5                  // Field seqno:J
      18: aload_0
      19: aload_1
      20: invokeinterface #27,  1           // InterfaceMethod java/io/DataInput.readBoolean:()Z
      25: putfield      #15                 // Field flush_ack:Z
      28: return

  public int size();
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #5                  // Field seqno:J
       5: invokestatic  #28                 // Method org/jgroups/util/Bits.size:(J)I
       8: iadd
       9: iconst_1
      10: iadd
      11: ireturn
}
