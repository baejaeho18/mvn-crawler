Compiled from "ConcurrentLinkedBlockingQueue2.java"
public class org.jgroups.util.ConcurrentLinkedBlockingQueue2<T> extends java.util.concurrent.ConcurrentLinkedQueue<T> implements java.util.concurrent.BlockingQueue<T> {
  private static final long serialVersionUID;

  protected final int capacity;

  protected final java.util.concurrent.atomic.AtomicInteger count;

  protected final java.util.concurrent.locks.Lock not_empty_lock;

  protected final java.util.concurrent.locks.Condition not_empty;

  int not_empty_awaits;

  public org.jgroups.util.ConcurrentLinkedBlockingQueue2(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/locks/ReentrantLock
      20: dup
      21: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      24: putfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      27: aload_0
      28: aload_0
      29: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      37: putfield      #9                  // Field not_empty:Ljava/util/concurrent/locks/Condition;
      40: aload_0
      41: iconst_0
      42: putfield      #10                 // Field not_empty_awaits:I
      45: aload_0
      46: iload_1
      47: putfield      #11                 // Field capacity:I
      50: invokestatic  #12                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      53: new           #13                 // class org/jgroups/util/ConcurrentLinkedBlockingQueue2$1
      56: dup
      57: aload_0
      58: invokespecial #14                 // Method org/jgroups/util/ConcurrentLinkedBlockingQueue2$1."<init>":(Lorg/jgroups/util/ConcurrentLinkedBlockingQueue2;)V
      61: invokevirtual #15                 // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      64: return

  public boolean offer(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
       5: istore_2
       6: iload_2
       7: ifeq          18
      10: aload_0
      11: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      17: pop
      18: iload_2
      19: ireturn

  public T take() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_0
      10: invokevirtual #19                 // Method decrCount:()V
      13: aload_1
      14: areturn
      15: aload_0
      16: invokevirtual #20                 // Method waitForNotEmpty:()V
      19: aload_0
      20: invokespecial #18                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      23: astore_1
      24: aload_1
      25: ifnull        32
      28: aload_0
      29: invokevirtual #19                 // Method decrCount:()V
      32: aload_1
      33: areturn

  public T poll();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_0
      10: invokevirtual #19                 // Method decrCount:()V
      13: aload_1
      14: areturn

  public T poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method java/util/concurrent/ConcurrentLinkedQueue.remove:(Ljava/lang/Object;)Z
       5: istore_2
       6: iload_2
       7: ifeq          14
      10: aload_0
      11: invokevirtual #19                 // Method decrCount:()V
      14: iload_2
      15: ireturn

  public int remainingCapacity();
    Code:
       0: aload_0
       1: getfield      #11                 // Field capacity:I
       4: aload_0
       5: invokevirtual #22                 // Method size:()I
       8: isub
       9: ireturn

  public int drainTo(java.util.Collection<? super T>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnonnull     8
       6: iload_2
       7: ireturn
       8: aload_0
       9: invokevirtual #23                 // Method poll:()Ljava/lang/Object;
      12: astore_3
      13: aload_3
      14: ifnonnull     20
      17: goto          34
      20: aload_1
      21: aload_3
      22: invokeinterface #24,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      27: pop
      28: iinc          2, 1
      31: goto          8
      34: aload_0
      35: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      38: iconst_0
      39: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      42: iload_2
      43: ireturn

  public void put(T) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
       5: ifeq          12
       8: aload_0
       9: invokevirtual #26                 // Method incrCount:()V
      12: return

  public boolean offer(T, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int drainTo(java.util.Collection<? super T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method drainTo:(Ljava/util/Collection;)I
       5: ireturn

  protected void waitForNotEmpty() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifne          85
      10: aload_0
      11: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      14: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      19: aload_0
      20: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      26: ifle          39
      29: aload_0
      30: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: return
      39: aload_0
      40: dup
      41: getfield      #10                 // Field not_empty_awaits:I
      44: iconst_1
      45: iadd
      46: putfield      #10                 // Field not_empty_awaits:I
      49: aload_0
      50: getfield      #9                  // Field not_empty:Ljava/util/concurrent/locks/Condition;
      53: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      58: aload_0
      59: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      62: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      67: goto          82
      70: astore_1
      71: aload_0
      72: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      75: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      80: aload_1
      81: athrow
      82: goto          0
      85: return
    Exception table:
       from    to  target type
          19    29    70   any
          39    58    70   any
          70    71    70   any

  protected void decrCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.getAndDecrement:()I
       7: pop
       8: return

  protected void incrCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: istore_1
       8: iload_1
       9: ifne          54
      12: aload_0
      13: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      16: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      21: aload_0
      22: getfield      #9                  // Field not_empty:Ljava/util/concurrent/locks/Condition;
      25: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      30: aload_0
      31: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      34: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      39: goto          54
      42: astore_2
      43: aload_0
      44: getfield      #7                  // Field not_empty_lock:Ljava/util/concurrent/locks/Lock;
      47: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
          21    30    42   any
          42    43    42   any
}
