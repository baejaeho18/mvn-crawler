Compiled from "DefaultTimeScheduler.java"
public class org.jgroups.util.DefaultTimeScheduler extends java.util.concurrent.ScheduledThreadPoolExecutor implements org.jgroups.util.TimeScheduler {
  private static int TIMER_DEFAULT_NUM_THREADS;

  protected static final org.jgroups.logging.Log log;

  public org.jgroups.util.DefaultTimeScheduler();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field TIMER_DEFAULT_NUM_THREADS:I
       4: invokespecial #2                  // Method "<init>":(I)V
       7: return

  public org.jgroups.util.DefaultTimeScheduler(org.jgroups.util.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field TIMER_DEFAULT_NUM_THREADS:I
       5: invokespecial #3                  // Method "<init>":(Lorg/jgroups/util/ThreadFactory;I)V
       8: return

  public org.jgroups.util.DefaultTimeScheduler(org.jgroups.util.ThreadFactory, int);
    Code:
       0: aload_0
       1: iload_2
       2: aload_1
       3: invokespecial #4                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
       6: aload_0
       7: new           #5                  // class org/jgroups/util/ShutdownRejectedExecutionHandler
      10: dup
      11: aload_0
      12: invokevirtual #6                  // Method getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
      15: invokespecial #7                  // Method org/jgroups/util/ShutdownRejectedExecutionHandler."<init>":(Ljava/util/concurrent/RejectedExecutionHandler;)V
      18: invokevirtual #8                  // Method setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
      21: return

  public org.jgroups.util.DefaultTimeScheduler(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(I)V
       5: aload_0
       6: new           #5                  // class org/jgroups/util/ShutdownRejectedExecutionHandler
       9: dup
      10: aload_0
      11: invokevirtual #6                  // Method getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
      14: invokespecial #7                  // Method org/jgroups/util/ShutdownRejectedExecutionHandler."<init>":(Ljava/util/concurrent/RejectedExecutionHandler;)V
      17: invokevirtual #8                  // Method setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
      20: return

  public void setThreadFactory(org.jgroups.util.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
       5: return

  public java.lang.String dumpTimerTasks();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getQueue:()Ljava/util/concurrent/BlockingQueue;
       4: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public int getCurrentThreads();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getPoolSize:()I
       4: ireturn

  public int getMinThreads();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getCorePoolSize:()I
       4: ireturn

  public void setMinThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setCorePoolSize:(I)V
       5: return

  public int getMaxThreads();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getMaximumPoolSize:()I
       4: ireturn

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #17                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setMaximumPoolSize:(I)V
       5: return

  public long getKeepAliveTime();
    Code:
       0: aload_0
       1: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       4: invokespecial #19                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
       7: lreturn

  public void setKeepAliveTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokespecial #20                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
       8: return

  public java.util.concurrent.Future<?> scheduleWithDynamicInterval(org.jgroups.util.TimeScheduler$Task);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #21                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #22                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #23                 // Method isShutdown:()Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: new           #24                 // class org/jgroups/util/DefaultTimeScheduler$TaskWrapper
      24: dup
      25: aload_0
      26: aload_1
      27: invokespecial #25                 // Method org/jgroups/util/DefaultTimeScheduler$TaskWrapper."<init>":(Lorg/jgroups/util/DefaultTimeScheduler;Lorg/jgroups/util/TimeScheduler$Task;)V
      30: astore_2
      31: aload_2
      32: invokevirtual #26                 // Method org/jgroups/util/DefaultTimeScheduler$TaskWrapper.doSchedule:()V
      35: aload_2
      36: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: new           #27                 // class org/jgroups/util/DefaultTimeScheduler$RobustRunnable
       4: dup
       5: aload_1
       6: invokespecial #28                 // Method org/jgroups/util/DefaultTimeScheduler$RobustRunnable."<init>":(Ljava/lang/Runnable;)V
       9: lload_2
      10: lload         4
      12: aload         6
      14: invokespecial #29                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      17: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getQueue:()Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
       9: ireturn

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method shutdownNow:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          56
      21: aload_2
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #35                 // class java/lang/Runnable
      30: astore_3
      31: aload_3
      32: instanceof    #36                 // class java/util/concurrent/Future
      35: ifeq          53
      38: aload_3
      39: checkcast     #36                 // class java/util/concurrent/Future
      42: astore        4
      44: aload         4
      46: iconst_1
      47: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      52: pop
      53: goto          12
      56: aload_0
      57: invokevirtual #11                 // Method getQueue:()Ljava/util/concurrent/BlockingQueue;
      60: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      65: aload_0
      66: ldc2_w        #39                 // long 3000l
      69: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      72: invokevirtual #41                 // Method awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      75: pop
      76: goto          80
      79: astore_2
      80: return
    Exception table:
       from    to  target type
          65    76    79   Class java/lang/InterruptedException

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #44                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  public java.util.concurrent.Future scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: aload         6
       7: invokespecial #45                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      10: areturn

  public java.util.concurrent.Future scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: aload         6
       7: invokevirtual #46                 // Method scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      10: areturn

  public java.util.concurrent.Future schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: invokespecial #47                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
       8: areturn

  static {};
    Code:
       0: iconst_3
       1: putstatic     #1                  // Field TIMER_DEFAULT_NUM_THREADS:I
       4: ldc_w         #48                 // class org/jgroups/util/DefaultTimeScheduler
       7: invokestatic  #49                 // Method org/jgroups/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/jgroups/logging/Log;
      10: putstatic     #50                 // Field log:Lorg/jgroups/logging/Log;
      13: ldc           #51                 // String jgroups.timer.num_threads
      15: invokestatic  #52                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      18: astore_0
      19: aload_0
      20: ifnull        30
      23: aload_0
      24: invokestatic  #53                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      27: putstatic     #1                  // Field TIMER_DEFAULT_NUM_THREADS:I
      30: goto          45
      33: astore_1
      34: getstatic     #50                 // Field log:Lorg/jgroups/logging/Log;
      37: ldc           #55                 // String could not set number of timer threads
      39: aload_1
      40: invokeinterface #56,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: return
    Exception table:
       from    to  target type
          13    30    33   Class java/lang/Exception
}
