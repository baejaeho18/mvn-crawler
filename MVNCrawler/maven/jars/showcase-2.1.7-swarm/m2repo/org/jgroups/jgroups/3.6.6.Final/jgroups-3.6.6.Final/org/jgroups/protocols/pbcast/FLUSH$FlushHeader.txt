Compiled from "FLUSH.java"
public class org.jgroups.protocols.pbcast.FLUSH$FlushHeader extends org.jgroups.Header {
  public static final byte START_FLUSH;

  public static final byte STOP_FLUSH;

  public static final byte FLUSH_COMPLETED;

  public static final byte ABORT_FLUSH;

  public static final byte FLUSH_BYPASS;

  public static final byte FLUSH_RECONCILE;

  public static final byte FLUSH_RECONCILE_OK;

  public static final byte FLUSH_NOT_COMPLETED;

  protected byte type;

  protected long viewID;

  public org.jgroups.protocols.pbcast.FLUSH$FlushHeader();
    Code:
       0: aload_0
       1: iconst_0
       2: lconst_0
       3: invokespecial #1                  // Method "<init>":(BJ)V
       6: return

  public org.jgroups.protocols.pbcast.FLUSH$FlushHeader(byte);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field type:B
       9: return

  public org.jgroups.protocols.pbcast.FLUSH$FlushHeader(byte, long);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method "<init>":(B)V
       5: aload_0
       6: lload_2
       7: putfield      #5                  // Field viewID:J
      10: return

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:B
       4: ireturn

  public long getViewID();
    Code:
       0: aload_0
       1: getfield      #5                  // Field viewID:J
       4: lreturn

  public int size();
    Code:
       0: bipush        9
       2: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:B
       4: tableswitch   { // 0 to 8
                     0: 56
                     1: 242
                     2: 79
                     3: 135
                     4: 242
                     5: 107
                     6: 163
                     7: 191
                     8: 214
               default: 242
          }
      56: new           #6                  // class java/lang/StringBuilder
      59: dup
      60: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #8                  // String FLUSH[type=START_FLUSH,viewId=
      65: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #5                  // Field viewID:J
      72: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      75: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn
      79: new           #6                  // class java/lang/StringBuilder
      82: dup
      83: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #12                 // String FLUSH[type=STOP_FLUSH,viewId=
      88: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #5                  // Field viewID:J
      95: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      98: ldc           #13                 // String ]
     100: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: areturn
     107: new           #6                  // class java/lang/StringBuilder
     110: dup
     111: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #14                 // String FLUSH[type=ABORT_FLUSH,viewId=
     116: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_0
     120: getfield      #5                  // Field viewID:J
     123: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     126: ldc           #13                 // String ]
     128: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: areturn
     135: new           #6                  // class java/lang/StringBuilder
     138: dup
     139: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #15                 // String FLUSH[type=FLUSH_COMPLETED,viewId=
     144: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_0
     148: getfield      #5                  // Field viewID:J
     151: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     154: ldc           #13                 // String ]
     156: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: areturn
     163: new           #6                  // class java/lang/StringBuilder
     166: dup
     167: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     170: ldc           #16                 // String FLUSH[type=FLUSH_BYPASS,viewId=
     172: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload_0
     176: getfield      #5                  // Field viewID:J
     179: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     182: ldc           #13                 // String ]
     184: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: areturn
     191: new           #6                  // class java/lang/StringBuilder
     194: dup
     195: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #17                 // String FLUSH[type=FLUSH_RECONCILE,viewId=
     200: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_0
     204: getfield      #5                  // Field viewID:J
     207: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     210: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: areturn
     214: new           #6                  // class java/lang/StringBuilder
     217: dup
     218: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #18                 // String FLUSH[type=FLUSH_RECONCILE_OK,viewId=
     223: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload_0
     227: getfield      #5                  // Field viewID:J
     230: invokevirtual #10                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     233: ldc           #13                 // String ]
     235: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     241: areturn
     242: new           #6                  // class java/lang/StringBuilder
     245: dup
     246: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     249: ldc           #19                 // String [FLUSH: unknown type (
     251: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: aload_0
     255: getfield      #3                  // Field type:B
     258: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     261: ldc           #21                 // String )]
     263: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     269: areturn

  public void writeTo(java.io.DataOutput) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field type:B
       5: invokeinterface #22,  2           // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: aload_1
      11: aload_0
      12: getfield      #5                  // Field viewID:J
      15: invokeinterface #23,  3           // InterfaceMethod java/io/DataOutput.writeLong:(J)V
      20: return

  public void readFrom(java.io.DataInput) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #24,  1           // InterfaceMethod java/io/DataInput.readByte:()B
       7: putfield      #3                  // Field type:B
      10: aload_0
      11: aload_1
      12: invokeinterface #25,  1           // InterfaceMethod java/io/DataInput.readLong:()J
      17: putfield      #5                  // Field viewID:J
      20: return
}
