Compiled from "MuxUpHandler.java"
public class org.jgroups.blocks.mux.MuxUpHandler implements org.jgroups.UpHandler, org.jgroups.blocks.mux.Muxer<org.jgroups.UpHandler> {
  protected final org.jgroups.logging.Log log;

  private final java.util.Map<java.lang.Short, org.jgroups.UpHandler> handlers;

  private volatile org.jgroups.UpHandler defaultHandler;

  private volatile org.jgroups.Event lastFlushEvent;

  private final java.lang.Object flushMutex;

  public org.jgroups.blocks.mux.MuxUpHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/jgroups/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/jgroups/logging/Log;
      12: putfield      #4                  // Field log:Lorg/jgroups/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method org/jgroups/util/Util.createConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      19: putfield      #6                  // Field handlers:Ljava/util/Map;
      22: aload_0
      23: new           #7                  // class java/lang/Object
      26: dup
      27: invokespecial #1                  // Method java/lang/Object."<init>":()V
      30: putfield      #8                  // Field flushMutex:Ljava/lang/Object;
      33: aload_0
      34: aconst_null
      35: putfield      #9                  // Field defaultHandler:Lorg/jgroups/UpHandler;
      38: return

  public org.jgroups.blocks.mux.MuxUpHandler(org.jgroups.UpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/jgroups/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/jgroups/logging/Log;
      12: putfield      #4                  // Field log:Lorg/jgroups/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method org/jgroups/util/Util.createConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      19: putfield      #6                  // Field handlers:Ljava/util/Map;
      22: aload_0
      23: new           #7                  // class java/lang/Object
      26: dup
      27: invokespecial #1                  // Method java/lang/Object."<init>":()V
      30: putfield      #8                  // Field flushMutex:Ljava/lang/Object;
      33: aload_0
      34: aload_1
      35: putfield      #9                  // Field defaultHandler:Lorg/jgroups/UpHandler;
      38: return

  public void add(short, org.jgroups.UpHandler);
    Code:
       0: aload_0
       1: getfield      #8                  // Field flushMutex:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field lastFlushEvent:Lorg/jgroups/Event;
      11: ifnull        25
      14: aload_2
      15: aload_0
      16: getfield      #10                 // Field lastFlushEvent:Lorg/jgroups/Event;
      19: invokeinterface #11,  2           // InterfaceMethod org/jgroups/UpHandler.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: getfield      #6                  // Field handlers:Ljava/util/Map;
      29: iload_1
      30: invokestatic  #12                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      33: aload_2
      34: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_3
      41: monitorexit
      42: goto          52
      45: astore        4
      47: aload_3
      48: monitorexit
      49: aload         4
      51: athrow
      52: return
    Exception table:
       from    to  target type
           7    42    45   any
          45    49    45   any

  public org.jgroups.UpHandler get(short);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handlers:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #12                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       8: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #15                 // class org/jgroups/UpHandler
      16: areturn

  public void remove(short);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handlers:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #12                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       8: invokeinterface #16,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public org.jgroups.UpHandler getDefaultHandler();
    Code:
       0: aload_0
       1: getfield      #9                  // Field defaultHandler:Lorg/jgroups/UpHandler;
       4: areturn

  public void setDefaultHandler(org.jgroups.UpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field defaultHandler:Lorg/jgroups/UpHandler;
       5: return

  public java.lang.Object up(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/jgroups/Event.getType:()I
       4: lookupswitch  { // 10
                     1: 96
                     6: 220
                     8: 220
                     9: 220
                    10: 188
                    17: 170
                    20: 170
                    71: 170
                    72: 170
                    75: 188
               default: 228
          }
      96: aload_1
      97: invokevirtual #18                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
     100: checkcast     #19                 // class org/jgroups/Message
     103: astore_2
     104: aload_2
     105: getstatic     #20                 // Field org/jgroups/blocks/mux/MuxRequestCorrelator.MUX_ID:S
     108: invokevirtual #21                 // Method org/jgroups/Message.getHeader:(S)Lorg/jgroups/Header;
     111: checkcast     #22                 // class org/jgroups/blocks/mux/MuxHeader
     114: astore_3
     115: aload_3
     116: ifnull        233
     119: aload_3
     120: invokevirtual #23                 // Method org/jgroups/blocks/mux/MuxHeader.getId:()S
     123: istore        4
     125: aload_0
     126: getfield      #6                  // Field handlers:Ljava/util/Map;
     129: iload         4
     131: invokestatic  #12                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
     134: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     139: checkcast     #15                 // class org/jgroups/UpHandler
     142: astore        5
     144: aload         5
     146: ifnull        160
     149: aload         5
     151: aload_1
     152: invokeinterface #11,  2           // InterfaceMethod org/jgroups/UpHandler.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     157: goto          169
     160: new           #24                 // class org/jgroups/blocks/mux/NoMuxHandler
     163: dup
     164: iload         4
     166: invokespecial #25                 // Method org/jgroups/blocks/mux/NoMuxHandler."<init>":(S)V
     169: areturn
     170: aload_0
     171: aload_1
     172: invokevirtual #26                 // Method handleStateTransferEvent:(Lorg/jgroups/Event;)Lorg/jgroups/util/ImmutableReference;
     175: astore        4
     177: aload         4
     179: ifnull        233
     182: aload         4
     184: invokevirtual #27                 // Method org/jgroups/util/ImmutableReference.get:()Ljava/lang/Object;
     187: areturn
     188: aload_0
     189: getfield      #8                  // Field flushMutex:Ljava/lang/Object;
     192: dup
     193: astore        5
     195: monitorenter
     196: aload_0
     197: aload_1
     198: putfield      #10                 // Field lastFlushEvent:Lorg/jgroups/Event;
     201: aload_0
     202: aload_1
     203: invokespecial #28                 // Method passToAllHandlers:(Lorg/jgroups/Event;)V
     206: aload         5
     208: monitorexit
     209: goto          233
     212: astore        6
     214: aload         5
     216: monitorexit
     217: aload         6
     219: athrow
     220: aload_0
     221: aload_1
     222: invokespecial #28                 // Method passToAllHandlers:(Lorg/jgroups/Event;)V
     225: goto          233
     228: aload_0
     229: aload_1
     230: invokespecial #28                 // Method passToAllHandlers:(Lorg/jgroups/Event;)V
     233: aload_0
     234: getfield      #9                  // Field defaultHandler:Lorg/jgroups/UpHandler;
     237: ifnull        253
     240: aload_0
     241: getfield      #9                  // Field defaultHandler:Lorg/jgroups/UpHandler;
     244: aload_1
     245: invokeinterface #11,  2           // InterfaceMethod org/jgroups/UpHandler.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     250: goto          254
     253: aconst_null
     254: areturn
    Exception table:
       from    to  target type
         196   209   212   any
         212   217   212   any

  protected org.jgroups.util.ImmutableReference<java.lang.Object> handleStateTransferEvent(org.jgroups.Event);
    Code:
       0: aconst_null
       1: areturn

  private void passToAllHandlers(org.jgroups.Event);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handlers:Ljava/util/Map;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_2
      25: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #15                 // class org/jgroups/UpHandler
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokeinterface #11,  2           // InterfaceMethod org/jgroups/UpHandler.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      41: pop
      42: goto          15
      45: return

  public void setDefaultHandler(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class org/jgroups/UpHandler
       5: invokevirtual #33                 // Method setDefaultHandler:(Lorg/jgroups/UpHandler;)V
       8: return

  public java.lang.Object getDefaultHandler();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getDefaultHandler:()Lorg/jgroups/UpHandler;
       4: areturn

  public java.lang.Object get(short);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #35                 // Method get:(S)Lorg/jgroups/UpHandler;
       5: areturn

  public void add(short, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #15                 // class org/jgroups/UpHandler
       6: invokevirtual #36                 // Method add:(SLorg/jgroups/UpHandler;)V
       9: return
}
