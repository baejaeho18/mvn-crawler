Compiled from "SHUFFLE.java"
public class org.jgroups.protocols.SHUFFLE extends org.jgroups.stack.Protocol {
  protected org.jgroups.util.TimeScheduler timer;

  protected final java.util.List<org.jgroups.Message> up_msgs;

  protected final java.util.List<org.jgroups.Message> down_msgs;

  protected java.util.concurrent.Future<?> task;

  protected boolean up;

  protected boolean down;

  protected int max_size;

  protected long max_time;

  public org.jgroups.protocols.SHUFFLE();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jgroups/stack/Protocol."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field timer:Lorg/jgroups/util/TimeScheduler;
       9: aload_0
      10: new           #4                  // class java/util/LinkedList
      13: dup
      14: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      17: putfield      #6                  // Field up_msgs:Ljava/util/List;
      20: aload_0
      21: new           #4                  // class java/util/LinkedList
      24: dup
      25: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      28: putfield      #7                  // Field down_msgs:Ljava/util/List;
      31: aload_0
      32: aconst_null
      33: putfield      #8                  // Field task:Ljava/util/concurrent/Future;
      36: aload_0
      37: iconst_1
      38: putfield      #9                  // Field up:Z
      41: aload_0
      42: iconst_0
      43: putfield      #10                 // Field down:Z
      46: aload_0
      47: bipush        10
      49: putfield      #11                 // Field max_size:I
      52: aload_0
      53: ldc2_w        #12                 // long 1500l
      56: putfield      #14                 // Field max_time:J
      59: return

  public boolean isUp();
    Code:
       0: aload_0
       1: getfield      #9                  // Field up:Z
       4: ireturn

  public void setUp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field up:Z
       5: return

  public boolean isDown();
    Code:
       0: aload_0
       1: getfield      #10                 // Field down:Z
       4: ireturn

  public void setDown(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field down:Z
       5: return

  public int getMaxSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field max_size:I
       4: ireturn

  public void setMaxSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field max_size:I
       5: return

  public long getMaxTime();
    Code:
       0: aload_0
       1: getfield      #14                 // Field max_time:J
       4: lreturn

  public void setMaxTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field max_time:J
       5: return

  public void init() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/jgroups/stack/Protocol.init:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #16                 // Method getTransport:()Lorg/jgroups/protocols/TP;
       9: invokevirtual #17                 // Method org/jgroups/protocols/TP.getTimer:()Lorg/jgroups/util/TimeScheduler;
      12: putfield      #3                  // Field timer:Lorg/jgroups/util/TimeScheduler;
      15: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/jgroups/stack/Protocol.stop:()V
       4: aload_0
       5: invokevirtual #19                 // Method stopTask:()V
       8: return

  public void destroy();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/jgroups/stack/Protocol.destroy:()V
       4: aload_0
       5: invokevirtual #19                 // Method stopTask:()V
       8: return

  public java.lang.Object up(org.jgroups.Event);
    Code:
       0: aload_0
       1: getfield      #9                  // Field up:Z
       4: ifne          16
       7: aload_0
       8: getfield      #21                 // Field up_prot:Lorg/jgroups/stack/Protocol;
      11: aload_1
      12: invokevirtual #22                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: invokevirtual #23                 // Method org/jgroups/Event.getType:()I
      20: iconst_1
      21: if_icmpeq     33
      24: aload_0
      25: getfield      #21                 // Field up_prot:Lorg/jgroups/stack/Protocol;
      28: aload_1
      29: invokevirtual #22                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      32: areturn
      33: aload_1
      34: invokevirtual #24                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      37: checkcast     #25                 // class org/jgroups/Message
      40: astore_2
      41: aload_0
      42: getfield      #6                  // Field up_msgs:Ljava/util/List;
      45: dup
      46: astore_3
      47: monitorenter
      48: aload_0
      49: getfield      #6                  // Field up_msgs:Ljava/util/List;
      52: aload_2
      53: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_3
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_3
      67: monitorexit
      68: aload         4
      70: athrow
      71: aload_0
      72: getfield      #6                  // Field up_msgs:Ljava/util/List;
      75: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      80: aload_0
      81: getfield      #11                 // Field max_size:I
      84: if_icmplt     94
      87: aload_0
      88: invokespecial #1                  // Method shuffleAndSendMessages:()V
      91: goto          98
      94: aload_0
      95: invokevirtual #28                 // Method startTask:()V
      98: aconst_null
      99: areturn
    Exception table:
       from    to  target type
          48    61    64   any
          64    68    64   any

  public void up(org.jgroups.util.MessageBatch);
    Code:
       0: aload_0
       1: getfield      #9                  // Field up:Z
       4: ifne          16
       7: aload_0
       8: getfield      #21                 // Field up_prot:Lorg/jgroups/stack/Protocol;
      11: aload_1
      12: invokevirtual #29                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/util/MessageBatch;)V
      15: return
      16: aload_0
      17: getfield      #6                  // Field up_msgs:Ljava/util/List;
      20: dup
      21: astore_2
      22: monitorenter
      23: aload_1
      24: invokevirtual #30                 // Method org/jgroups/util/MessageBatch.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          63
      37: aload_3
      38: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #25                 // class org/jgroups/Message
      46: astore        4
      48: aload_0
      49: getfield      #6                  // Field up_msgs:Ljava/util/List;
      52: aload         4
      54: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          28
      63: aload_2
      64: monitorexit
      65: goto          75
      68: astore        5
      70: aload_2
      71: monitorexit
      72: aload         5
      74: athrow
      75: aload_1
      76: invokevirtual #33                 // Method org/jgroups/util/MessageBatch.clear:()Lorg/jgroups/util/MessageBatch;
      79: pop
      80: aload_0
      81: getfield      #6                  // Field up_msgs:Ljava/util/List;
      84: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      89: aload_0
      90: getfield      #11                 // Field max_size:I
      93: if_icmplt     103
      96: aload_0
      97: invokespecial #1                  // Method shuffleAndSendMessages:()V
     100: goto          107
     103: aload_0
     104: invokevirtual #28                 // Method startTask:()V
     107: return
    Exception table:
       from    to  target type
          23    65    68   any
          68    72    68   any

  public java.lang.Object down(org.jgroups.Event);
    Code:
       0: aload_0
       1: getfield      #10                 // Field down:Z
       4: ifne          16
       7: aload_0
       8: getfield      #34                 // Field down_prot:Lorg/jgroups/stack/Protocol;
      11: aload_1
      12: invokevirtual #35                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      15: areturn
      16: aload_1
      17: invokevirtual #23                 // Method org/jgroups/Event.getType:()I
      20: iconst_1
      21: if_icmpeq     33
      24: aload_0
      25: getfield      #34                 // Field down_prot:Lorg/jgroups/stack/Protocol;
      28: aload_1
      29: invokevirtual #35                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      32: areturn
      33: aload_1
      34: invokevirtual #24                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      37: checkcast     #25                 // class org/jgroups/Message
      40: astore_2
      41: aload_0
      42: getfield      #7                  // Field down_msgs:Ljava/util/List;
      45: dup
      46: astore_3
      47: monitorenter
      48: aload_0
      49: getfield      #7                  // Field down_msgs:Ljava/util/List;
      52: aload_2
      53: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_3
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_3
      67: monitorexit
      68: aload         4
      70: athrow
      71: aload_0
      72: getfield      #7                  // Field down_msgs:Ljava/util/List;
      75: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      80: aload_0
      81: getfield      #11                 // Field max_size:I
      84: if_icmplt     94
      87: aload_0
      88: invokespecial #1                  // Method shuffleAndSendMessages:()V
      91: goto          98
      94: aload_0
      95: invokevirtual #28                 // Method startTask:()V
      98: aconst_null
      99: areturn
    Exception table:
       from    to  target type
          48    61    64   any
          64    68    64   any

  protected synchronized void startTask();
    Code:
       0: aload_0
       1: getfield      #8                  // Field task:Ljava/util/concurrent/Future;
       4: ifnull        31
       7: aload_0
       8: getfield      #8                  // Field task:Ljava/util/concurrent/Future;
      11: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
      16: ifne          31
      19: aload_0
      20: getfield      #8                  // Field task:Ljava/util/concurrent/Future;
      23: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      28: ifeq          59
      31: aload_0
      32: aload_0
      33: getfield      #3                  // Field timer:Lorg/jgroups/util/TimeScheduler;
      36: new           #38                 // class org/jgroups/protocols/SHUFFLE$1
      39: dup
      40: aload_0
      41: invokespecial #39                 // Method org/jgroups/protocols/SHUFFLE$1."<init>":(Lorg/jgroups/protocols/SHUFFLE;)V
      44: aload_0
      45: getfield      #14                 // Field max_time:J
      48: getstatic     #40                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      51: invokeinterface #41,  5           // InterfaceMethod org/jgroups/util/TimeScheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      56: putfield      #8                  // Field task:Ljava/util/concurrent/Future;
      59: return

  public synchronized void stopTask();
    Code:
       0: aload_0
       1: getfield      #8                  // Field task:Ljava/util/concurrent/Future;
       4: ifnull        18
       7: aload_0
       8: getfield      #8                  // Field task:Ljava/util/concurrent/Future;
      11: iconst_1
      12: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: return

  private void shuffleAndSendMessages();
    Code:
       0: aload_0
       1: getfield      #6                  // Field up_msgs:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field up_msgs:Ljava/util/List;
      11: invokeinterface #43,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          91
      19: aload_0
      20: getfield      #6                  // Field up_msgs:Ljava/util/List;
      23: invokestatic  #44                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      26: aload_0
      27: getfield      #6                  // Field up_msgs:Ljava/util/List;
      30: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          82
      45: aload_2
      46: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #25                 // class org/jgroups/Message
      54: astore_3
      55: aload_0
      56: getfield      #21                 // Field up_prot:Lorg/jgroups/stack/Protocol;
      59: ifnull        79
      62: aload_0
      63: getfield      #21                 // Field up_prot:Lorg/jgroups/stack/Protocol;
      66: new           #46                 // class org/jgroups/Event
      69: dup
      70: iconst_1
      71: aload_3
      72: invokespecial #47                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      75: invokevirtual #22                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      78: pop
      79: goto          36
      82: aload_0
      83: getfield      #6                  // Field up_msgs:Ljava/util/List;
      86: invokeinterface #48,  1           // InterfaceMethod java/util/List.clear:()V
      91: aload_1
      92: monitorexit
      93: goto          103
      96: astore        4
      98: aload_1
      99: monitorexit
     100: aload         4
     102: athrow
     103: aload_0
     104: getfield      #7                  // Field down_msgs:Ljava/util/List;
     107: dup
     108: astore_1
     109: monitorenter
     110: aload_0
     111: getfield      #7                  // Field down_msgs:Ljava/util/List;
     114: invokeinterface #43,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     119: ifne          187
     122: aload_0
     123: getfield      #7                  // Field down_msgs:Ljava/util/List;
     126: invokestatic  #44                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
     129: aload_0
     130: getfield      #7                  // Field down_msgs:Ljava/util/List;
     133: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     138: astore_2
     139: aload_2
     140: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     145: ifeq          178
     148: aload_2
     149: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     154: checkcast     #25                 // class org/jgroups/Message
     157: astore_3
     158: aload_0
     159: getfield      #34                 // Field down_prot:Lorg/jgroups/stack/Protocol;
     162: new           #46                 // class org/jgroups/Event
     165: dup
     166: iconst_1
     167: aload_3
     168: invokespecial #47                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
     171: invokevirtual #35                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
     174: pop
     175: goto          139
     178: aload_0
     179: getfield      #7                  // Field down_msgs:Ljava/util/List;
     182: invokeinterface #48,  1           // InterfaceMethod java/util/List.clear:()V
     187: aload_1
     188: monitorexit
     189: goto          199
     192: astore        5
     194: aload_1
     195: monitorexit
     196: aload         5
     198: athrow
     199: return
    Exception table:
       from    to  target type
           7    93    96   any
          96   100    96   any
         110   189   192   any
         192   196   192   any

  static void access$000(org.jgroups.protocols.SHUFFLE);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method shuffleAndSendMessages:()V
       4: return
}
