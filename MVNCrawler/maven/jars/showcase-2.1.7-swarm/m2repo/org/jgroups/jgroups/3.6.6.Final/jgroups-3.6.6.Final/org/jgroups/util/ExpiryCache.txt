Compiled from "ExpiryCache.java"
public class org.jgroups.util.ExpiryCache<K> {
  protected long timeout;

  protected final java.util.concurrent.ConcurrentMap<K, java.lang.Long> map;

  public org.jgroups.util.ExpiryCache(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: lload_1
      17: invokevirtual #5                  // Method setTimeout:(J)V
      20: return

  public long getTimeout();
    Code:
       0: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #7                  // Field timeout:J
       7: getstatic     #8                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      13: lreturn

  public void setTimeout(long);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       4: lload_1
       5: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      11: putfield      #7                  // Field timeout:J
      14: return

  public boolean addIfAbsentOrExpired(K);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/lang/Long
      13: astore_2
      14: aload_2
      15: ifnonnull     43
      18: aload_0
      19: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      22: aload_1
      23: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      26: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: ifnonnull     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn
      43: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      46: lstore_3
      47: aload_0
      48: aload_2
      49: invokevirtual #15                 // Method java/lang/Long.longValue:()J
      52: lload_3
      53: invokevirtual #16                 // Method hasExpired:(JJ)Z
      56: ifeq          81
      59: aload_0
      60: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      63: aload_1
      64: aload_2
      65: lload_3
      66: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      69: invokeinterface #17,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn

  public boolean contains(K);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasExpired(K);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/lang/Long
      13: astore_2
      14: aload_2
      15: ifnull        32
      18: aload_0
      19: aload_2
      20: invokevirtual #15                 // Method java/lang/Long.longValue:()J
      23: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      26: invokevirtual #16                 // Method hasExpired:(JJ)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public void remove(K);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void removeAll(java.util.Collection<K>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: aload_1
      10: invokeinterface #21,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      15: pop
      16: return

  public int removeExpiredElements();
    Code:
       0: iconst_0
       1: istore_1
       2: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
       5: lstore_2
       6: aload_0
       7: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      10: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      15: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          97
      32: aload         4
      34: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #26                 // class java/util/Map$Entry
      42: astore        5
      44: aload         5
      46: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #11                 // class java/lang/Long
      54: astore        6
      56: aload         6
      58: ifnull        74
      61: aload_0
      62: aload         6
      64: invokevirtual #15                 // Method java/lang/Long.longValue:()J
      67: lload_2
      68: invokevirtual #16                 // Method hasExpired:(JJ)Z
      71: ifeq          94
      74: aload_0
      75: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      78: aload         5
      80: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      85: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: iinc          1, 1
      94: goto          22
      97: iload_1
      98: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      11: lstore_2
      12: aload_0
      13: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      21: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore        4
      28: aload         4
      30: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          152
      38: aload         4
      40: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #26                 // class java/util/Map$Entry
      48: astore        5
      50: aload_1
      51: aload         5
      53: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc           #34                 // String : (age:
      63: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: aload         5
      69: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #11                 // class java/lang/Long
      77: invokevirtual #15                 // Method java/lang/Long.longValue:()J
      80: lstore        6
      82: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      85: lload_2
      86: lload         6
      88: lsub
      89: getstatic     #8                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      92: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      95: lstore        8
      97: lload         8
      99: ldc2_w        #36                 // long 1000l
     102: lcmp
     103: ifge          121
     106: aload_1
     107: lload         8
     109: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     112: ldc           #39                 // String  ms)
     114: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: pop
     118: goto          142
     121: aload_1
     122: getstatic     #40                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     125: lload         8
     127: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     130: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     133: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     136: ldc           #41                 // String  secs
     138: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: pop
     142: aload_1
     143: ldc           #42                 // String \n
     145: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: pop
     149: goto          28
     152: aload_1
     153: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: areturn

  protected boolean hasExpired(long, long);
    Code:
       0: lload_3
       1: lload_1
       2: lsub
       3: aload_0
       4: getfield      #7                  // Field timeout:J
       7: lcmp
       8: ifle          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
}
