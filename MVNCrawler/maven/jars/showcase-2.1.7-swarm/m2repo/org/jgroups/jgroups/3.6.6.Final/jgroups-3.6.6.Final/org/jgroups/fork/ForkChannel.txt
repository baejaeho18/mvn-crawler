Compiled from "ForkChannel.java"
public class org.jgroups.fork.ForkChannel extends org.jgroups.JChannel implements org.jgroups.ChannelListener {
  protected final org.jgroups.Channel main_channel;

  protected final java.lang.String fork_channel_id;

  protected static final java.lang.reflect.Field[] copied_fields;

  public org.jgroups.fork.ForkChannel(org.jgroups.Channel, java.lang.String, java.lang.String, boolean, int, java.lang.Class<? extends org.jgroups.stack.Protocol>, org.jgroups.stack.Protocol...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method org/jgroups/JChannel."<init>":(Z)V
       5: aload_1
       6: ifnonnull     19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String main channel cannot be null
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: ifnonnull     33
      23: new           #2                  // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #5                  // String fork_stack_id cannot be null
      29: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_3
      34: ifnonnull     47
      37: new           #2                  // class java/lang/IllegalArgumentException
      40: dup
      41: ldc           #6                  // String fork_channel_id cannot be null
      43: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: aload_1
      49: putfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
      52: aload_0
      53: aload_3
      54: putfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      57: aload_0
      58: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
      61: dup
      62: astore        9
      64: monitorenter
      65: aload_1
      66: iload         5
      68: aload         6
      70: iload         4
      72: invokestatic  #9                  // Method getFORK:(Lorg/jgroups/Channel;ILjava/lang/Class;Z)Lorg/jgroups/protocols/FORK;
      75: astore        8
      77: aload         9
      79: monitorexit
      80: goto          91
      83: astore        10
      85: aload         9
      87: monitorexit
      88: aload         10
      90: athrow
      91: aload_0
      92: aload         8
      94: aload_2
      95: aload         7
      97: ifnonnull     104
     100: aconst_null
     101: goto          109
     104: aload         7
     106: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     109: iconst_1
     110: invokevirtual #11                 // Method org/jgroups/protocols/FORK.createForkStack:(Ljava/lang/String;Ljava/util/List;Z)Lorg/jgroups/stack/ProtocolStack;
     113: putfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
     116: aload_0
     117: aload_1
     118: invokevirtual #13                 // Method org/jgroups/Channel.flushSupported:()Z
     121: putfield      #14                 // Field flush_supported:Z
     124: aload_0
     125: getstatic     #15                 // Field org/jgroups/Channel$State.OPEN:Lorg/jgroups/Channel$State;
     128: putfield      #16                 // Field state:Lorg/jgroups/Channel$State;
     131: return
    Exception table:
       from    to  target type
          65    80    83   any
          83    88    83   any

  public org.jgroups.fork.ForkChannel(org.jgroups.Channel, java.lang.String, java.lang.String, org.jgroups.stack.Protocol...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: iconst_0
       6: aconst_null
       7: aload         4
       9: invokespecial #17                 // Method "<init>":(Lorg/jgroups/Channel;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Class;[Lorg/jgroups/stack/Protocol;)V
      12: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field log:Lorg/jgroups/logging/Log;
       4: ldc           #19                 // String name (%s) cannot be set in a fork-channel
       6: iconst_1
       7: anewarray     #20                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: invokeinterface #21,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      19: return

  public org.jgroups.JChannel name(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field log:Lorg/jgroups/logging/Log;
       4: ldc           #19                 // String name (%s) cannot be set in a fork-channel
       6: iconst_1
       7: anewarray     #20                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: aastore
      14: invokeinterface #21,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      19: aload_0
      20: areturn

  public void channelConnected(org.jgroups.Channel);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method copyFields:()V
       4: aload_0
       5: getfield      #23                 // Field local_addr:Lorg/jgroups/Address;
       8: ifnonnull     12
      11: return
      12: new           #24                 // class org/jgroups/Event
      15: dup
      16: bipush        8
      18: aload_0
      19: getfield      #23                 // Field local_addr:Lorg/jgroups/Address;
      22: invokespecial #25                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      25: astore_2
      26: aload_0
      27: getfield      #26                 // Field up_handler:Lorg/jgroups/UpHandler;
      30: ifnull        44
      33: aload_0
      34: getfield      #26                 // Field up_handler:Lorg/jgroups/UpHandler;
      37: aload_2
      38: invokeinterface #27,  2           // InterfaceMethod org/jgroups/UpHandler.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      43: pop
      44: return

  public void channelDisconnected(org.jgroups.Channel);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method copyFields:()V
       4: return

  public void channelClosed(org.jgroups.Channel);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method copyFields:()V
       4: return

  public void connect(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
       4: invokevirtual #28                 // Method org/jgroups/Channel.isConnected:()Z
       7: ifne          20
      10: new           #29                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #30                 // String main channel is not connected
      16: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #16                 // Field state:Lorg/jgroups/Channel$State;
      24: getstatic     #32                 // Field org/jgroups/Channel$State.CONNECTED:Lorg/jgroups/Channel$State;
      27: if_acmpne     31
      30: return
      31: aload_0
      32: getfield      #16                 // Field state:Lorg/jgroups/Channel$State;
      35: getstatic     #33                 // Field org/jgroups/Channel$State.CLOSED:Lorg/jgroups/Channel$State;
      38: if_acmpne     51
      41: new           #29                 // class java/lang/IllegalStateException
      44: dup
      45: ldc           #34                 // String a closed fork channel cannot reconnect
      47: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: getstatic     #35                 // Field org/jgroups/Channel$State.CONNECTING:Lorg/jgroups/Channel$State;
      55: putfield      #16                 // Field state:Lorg/jgroups/Channel$State;
      58: aload_0
      59: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
      62: aload_0
      63: invokevirtual #36                 // Method org/jgroups/Channel.addChannelListener:(Lorg/jgroups/ChannelListener;)V
      66: aload_0
      67: invokevirtual #22                 // Method copyFields:()V
      70: aload_0
      71: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
      74: checkcast     #37                 // class org/jgroups/fork/ForkProtocolStack
      77: aload_0
      78: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      81: aload_0
      82: invokevirtual #38                 // Method org/jgroups/fork/ForkProtocolStack.putIfAbsent:(Ljava/lang/String;Lorg/jgroups/JChannel;)Lorg/jgroups/JChannel;
      85: astore_2
      86: aload_2
      87: ifnull        130
      90: aload_2
      91: aload_0
      92: if_acmpeq     130
      95: new           #2                  // class java/lang/IllegalArgumentException
      98: dup
      99: new           #39                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #41                 // String fork-channel with id=
     108: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
     115: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #43                 // String  is already present
     120: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: aload_0
     131: aload_0
     132: getfield      #23                 // Field local_addr:Lorg/jgroups/Address;
     135: invokevirtual #45                 // Method setLocalAddress:(Lorg/jgroups/Address;)V
     138: aload_0
     139: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
     142: aload_1
     143: aload_0
     144: getfield      #23                 // Field local_addr:Lorg/jgroups/Address;
     147: invokevirtual #46                 // Method org/jgroups/stack/ProtocolStack.startStack:(Ljava/lang/String;Lorg/jgroups/Address;)V
     150: aload_0
     151: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
     154: new           #24                 // class org/jgroups/Event
     157: dup
     158: iconst_2
     159: aload_1
     160: invokespecial #25                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
     163: invokevirtual #47                 // Method org/jgroups/stack/ProtocolStack.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
     166: pop
     167: aload_0
     168: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
     171: invokevirtual #48                 // Method org/jgroups/Channel.getView:()Lorg/jgroups/View;
     174: astore_3
     175: aload_3
     176: ifnull        212
     179: aload_0
     180: new           #24                 // class org/jgroups/Event
     183: dup
     184: bipush        6
     186: aload_3
     187: invokespecial #25                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
     190: invokevirtual #49                 // Method up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     193: pop
     194: aload_0
     195: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
     198: new           #24                 // class org/jgroups/Event
     201: dup
     202: bipush        6
     204: aload_3
     205: invokespecial #25                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
     208: invokevirtual #47                 // Method org/jgroups/stack/ProtocolStack.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
     211: pop
     212: aload_0
     213: getstatic     #32                 // Field org/jgroups/Channel$State.CONNECTED:Lorg/jgroups/Channel$State;
     216: putfield      #16                 // Field state:Lorg/jgroups/Channel$State;
     219: aload_0
     220: aload_0
     221: invokevirtual #50                 // Method notifyChannelConnected:(Lorg/jgroups/Channel;)V
     224: return

  public void connect(java.lang.String, org.jgroups.Address, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method connect:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
       9: aload_2
      10: lload_3
      11: invokevirtual #52                 // Method org/jgroups/Channel.getState:(Lorg/jgroups/Address;J)V
      14: return

  public void disconnect();
    Code:
       0: aload_0
       1: getfield      #16                 // Field state:Lorg/jgroups/Channel$State;
       4: getstatic     #32                 // Field org/jgroups/Channel$State.CONNECTED:Lorg/jgroups/Channel$State;
       7: if_acmpeq     11
      10: return
      11: aload_0
      12: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
      15: new           #24                 // class org/jgroups/Event
      18: dup
      19: iconst_4
      20: aload_0
      21: getfield      #23                 // Field local_addr:Lorg/jgroups/Address;
      24: invokespecial #25                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      27: invokevirtual #47                 // Method org/jgroups/stack/ProtocolStack.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
      35: aload_0
      36: getfield      #53                 // Field cluster_name:Ljava/lang/String;
      39: invokevirtual #54                 // Method org/jgroups/stack/ProtocolStack.stopStack:(Ljava/lang/String;)V
      42: aload_0
      43: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
      46: checkcast     #37                 // class org/jgroups/fork/ForkProtocolStack
      49: aload_0
      50: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      53: invokevirtual #55                 // Method org/jgroups/fork/ForkProtocolStack.remove:(Ljava/lang/String;)V
      56: aload_0
      57: invokevirtual #56                 // Method nullFields:()V
      60: aload_0
      61: getstatic     #15                 // Field org/jgroups/Channel$State.OPEN:Lorg/jgroups/Channel$State;
      64: putfield      #16                 // Field state:Lorg/jgroups/Channel$State;
      67: aload_0
      68: aload_0
      69: invokevirtual #57                 // Method notifyChannelDisconnected:(Lorg/jgroups/Channel;)V
      72: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
       4: checkcast     #37                 // class org/jgroups/fork/ForkProtocolStack
       7: aload_0
       8: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      11: invokevirtual #55                 // Method org/jgroups/fork/ForkProtocolStack.remove:(Ljava/lang/String;)V
      14: aload_0
      15: getfield      #16                 // Field state:Lorg/jgroups/Channel$State;
      18: getstatic     #33                 // Field org/jgroups/Channel$State.CLOSED:Lorg/jgroups/Channel$State;
      21: if_acmpne     25
      24: return
      25: aload_0
      26: invokevirtual #58                 // Method disconnect:()V
      29: aload_0
      30: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
      33: invokevirtual #59                 // Method org/jgroups/stack/ProtocolStack.destroy:()V
      36: aload_0
      37: getstatic     #33                 // Field org/jgroups/Channel$State.CLOSED:Lorg/jgroups/Channel$State;
      40: putfield      #16                 // Field state:Lorg/jgroups/Channel$State;
      43: aload_0
      44: aload_0
      45: invokevirtual #60                 // Method notifyChannelClosed:(Lorg/jgroups/Channel;)V
      48: return

  public java.lang.Object down(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method org/jgroups/Event.getType:()I
       4: iconst_1
       5: if_icmpne     19
       8: aload_0
       9: aload_1
      10: invokevirtual #62                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      13: checkcast     #63                 // class org/jgroups/Message
      16: invokevirtual #64                 // Method setHeader:(Lorg/jgroups/Message;)V
      19: aload_0
      20: aload_1
      21: invokespecial #65                 // Method org/jgroups/JChannel.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      24: areturn

  public void send(org.jgroups.Message) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method checkClosedOrNotConnected:()V
       4: aload_1
       5: getstatic     #67                 // Field org/jgroups/protocols/FORK.ID:S
       8: invokevirtual #68                 // Method org/jgroups/Message.getHeader:(S)Lorg/jgroups/Header;
      11: checkcast     #69                 // class org/jgroups/protocols/FORK$ForkHeader
      14: astore_2
      15: aload_2
      16: ifnull        30
      19: aload_2
      20: aload_0
      21: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      24: invokevirtual #70                 // Method org/jgroups/protocols/FORK$ForkHeader.setForkChannelId:(Ljava/lang/String;)V
      27: goto          52
      30: new           #69                 // class org/jgroups/protocols/FORK$ForkHeader
      33: dup
      34: aconst_null
      35: aload_0
      36: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      39: invokespecial #71                 // Method org/jgroups/protocols/FORK$ForkHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      42: astore_2
      43: aload_1
      44: getstatic     #67                 // Field org/jgroups/protocols/FORK.ID:S
      47: aload_2
      48: invokevirtual #72                 // Method org/jgroups/Message.putHeader:(SLorg/jgroups/Header;)Lorg/jgroups/Message;
      51: pop
      52: aload_0
      53: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
      56: new           #24                 // class org/jgroups/Event
      59: dup
      60: iconst_1
      61: aload_1
      62: invokespecial #25                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      65: invokevirtual #47                 // Method org/jgroups/stack/ProtocolStack.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      68: pop
      69: return

  public void startFlush(java.util.List<org.jgroups.Address>, boolean) throws java.lang.Exception;
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void startFlush(boolean) throws java.lang.Exception;
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void stopFlush();
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void stopFlush(java.util.List<org.jgroups.Address>);
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void getState(org.jgroups.Address, long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
       4: aload_1
       5: lload_2
       6: invokevirtual #52                 // Method org/jgroups/Channel.getState:(Lorg/jgroups/Address;J)V
       9: return

  public void addAddressGenerator(org.jgroups.stack.AddressGenerator);
    Code:
       0: aload_0
       1: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
       4: instanceof    #75                 // class org/jgroups/JChannel
       7: ifeq          21
      10: aload_0
      11: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
      14: checkcast     #75                 // class org/jgroups/JChannel
      17: aload_1
      18: invokevirtual #76                 // Method org/jgroups/JChannel.addAddressGenerator:(Lorg/jgroups/stack/AddressGenerator;)V
      21: return

  protected void setLocalAddress(org.jgroups.Address);
    Code:
       0: aload_1
       1: ifnull        44
       4: new           #24                 // class org/jgroups/Event
       7: dup
       8: bipush        8
      10: aload_1
      11: invokespecial #25                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      14: astore_2
      15: aload_0
      16: getfield      #12                 // Field prot_stack:Lorg/jgroups/stack/ProtocolStack;
      19: checkcast     #37                 // class org/jgroups/fork/ForkProtocolStack
      22: aload_1
      23: invokevirtual #77                 // Method org/jgroups/fork/ForkProtocolStack.setLocalAddress:(Lorg/jgroups/Address;)V
      26: aload_0
      27: getfield      #26                 // Field up_handler:Lorg/jgroups/UpHandler;
      30: ifnull        44
      33: aload_0
      34: getfield      #26                 // Field up_handler:Lorg/jgroups/UpHandler;
      37: aload_2
      38: invokeinterface #27,  2           // InterfaceMethod org/jgroups/UpHandler.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
      43: pop
      44: return

  protected static org.jgroups.protocols.FORK getFORK(org.jgroups.Channel, int, java.lang.Class<? extends org.jgroups.stack.Protocol>, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method org/jgroups/Channel.getProtocolStack:()Lorg/jgroups/stack/ProtocolStack;
       4: astore        4
       6: aload         4
       8: ldc_w         #79                 // class org/jgroups/protocols/FORK
      11: invokevirtual #80                 // Method org/jgroups/stack/ProtocolStack.findProtocol:(Ljava/lang/Class;)Lorg/jgroups/stack/Protocol;
      14: checkcast     #79                 // class org/jgroups/protocols/FORK
      17: astore        5
      19: aload         5
      21: ifnonnull     55
      24: iload_3
      25: ifne          38
      28: new           #2                  // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #81                 // String FORK not found in main stack
      34: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload         4
      40: new           #79                 // class org/jgroups/protocols/FORK
      43: dup
      44: invokespecial #82                 // Method org/jgroups/protocols/FORK."<init>":()V
      47: dup
      48: astore        5
      50: iload_1
      51: aload_2
      52: invokevirtual #83                 // Method org/jgroups/stack/ProtocolStack.insertProtocol:(Lorg/jgroups/stack/Protocol;ILjava/lang/Class;)V
      55: aload         5
      57: areturn

  protected void setHeader(org.jgroups.Message);
    Code:
       0: aload_1
       1: getstatic     #67                 // Field org/jgroups/protocols/FORK.ID:S
       4: invokevirtual #68                 // Method org/jgroups/Message.getHeader:(S)Lorg/jgroups/Header;
       7: checkcast     #69                 // class org/jgroups/protocols/FORK$ForkHeader
      10: astore_2
      11: aload_2
      12: ifnull        26
      15: aload_2
      16: aload_0
      17: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      20: invokevirtual #70                 // Method org/jgroups/protocols/FORK$ForkHeader.setForkChannelId:(Ljava/lang/String;)V
      23: goto          46
      26: aload_1
      27: getstatic     #67                 // Field org/jgroups/protocols/FORK.ID:S
      30: new           #69                 // class org/jgroups/protocols/FORK$ForkHeader
      33: dup
      34: aconst_null
      35: aload_0
      36: getfield      #8                  // Field fork_channel_id:Ljava/lang/String;
      39: invokespecial #71                 // Method org/jgroups/protocols/FORK$ForkHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      42: invokevirtual #72                 // Method org/jgroups/Message.putHeader:(SLorg/jgroups/Header;)Lorg/jgroups/Message;
      45: pop
      46: return

  protected void copyFields();
    Code:
       0: getstatic     #84                 // Field copied_fields:[Ljava/lang/reflect/Field;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     44
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: aload_0
      22: getfield      #7                  // Field main_channel:Lorg/jgroups/Channel;
      25: invokestatic  #85                 // Method org/jgroups/util/Util.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      28: astore        5
      30: aload         4
      32: aload_0
      33: aload         5
      35: invokestatic  #86                 // Method org/jgroups/util/Util.setField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
      38: iinc          3, 1
      41: goto          9
      44: return

  protected void nullFields();
    Code:
       0: getstatic     #84                 // Field copied_fields:[Ljava/lang/reflect/Field;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     32
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: aload_0
      22: aconst_null
      23: invokestatic  #86                 // Method org/jgroups/util/Util.setField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
      26: iinc          3, 1
      29: goto          9
      32: return

  public org.jgroups.Channel name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method name:(Ljava/lang/String;)Lorg/jgroups/JChannel;
       5: areturn

  static {};
    Code:
       0: iconst_5
       1: anewarray     #88                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #89                 // String state
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #90                 // String local_addr
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #91                 // String name
      18: aastore
      19: dup
      20: iconst_3
      21: ldc           #92                 // String cluster_name
      23: aastore
      24: dup
      25: iconst_4
      26: ldc           #93                 // String my_view
      28: aastore
      29: astore_0
      30: aload_0
      31: arraylength
      32: anewarray     #94                 // class java/lang/reflect/Field
      35: putstatic     #84                 // Field copied_fields:[Ljava/lang/reflect/Field;
      38: iconst_0
      39: istore_1
      40: iload_1
      41: aload_0
      42: arraylength
      43: if_icmpge     106
      46: ldc_w         #75                 // class org/jgroups/JChannel
      49: aload_0
      50: iload_1
      51: aaload
      52: invokestatic  #95                 // Method org/jgroups/util/Util.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      55: astore_2
      56: aload_2
      57: ifnonnull     94
      60: new           #29                 // class java/lang/IllegalStateException
      63: dup
      64: new           #39                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #96                 // String field \"
      73: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: iload_1
      78: aaload
      79: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #97                 // String \" not found in JChannel
      84: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: getstatic     #84                 // Field copied_fields:[Ljava/lang/reflect/Field;
      97: iload_1
      98: aload_2
      99: aastore
     100: iinc          1, 1
     103: goto          40
     106: return
}
