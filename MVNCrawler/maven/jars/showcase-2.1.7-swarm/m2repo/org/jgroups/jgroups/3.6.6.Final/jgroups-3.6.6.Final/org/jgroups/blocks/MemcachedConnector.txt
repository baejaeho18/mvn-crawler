Compiled from "MemcachedConnector.java"
public class org.jgroups.blocks.MemcachedConnector implements java.lang.Runnable {
  private int port;

  private java.net.InetAddress bind_addr;

  private org.jgroups.blocks.PartitionedHashMap<java.lang.String, byte[]> cache;

  private java.lang.Thread thread;

  private java.net.ServerSocket srv_sock;

  private int core_threads;

  private int max_threads;

  private long idle_time;

  private java.util.concurrent.Executor thread_pool;

  private long start_time;

  private final byte[] STORED;

  private final byte[] DELETED;

  private final byte[] END;

  private final byte[] RN;

  public org.jgroups.blocks.MemcachedConnector(java.net.InetAddress, int, org.jgroups.blocks.PartitionedHashMap<java.lang.String, byte[]>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        11211
       8: putfield      #7                  // Field port:I
      11: aload_0
      12: aconst_null
      13: putfield      #8                  // Field bind_addr:Ljava/net/InetAddress;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field cache:Lorg/jgroups/blocks/PartitionedHashMap;
      21: aload_0
      22: aconst_null
      23: putfield      #9                  // Field thread:Ljava/lang/Thread;
      26: aload_0
      27: iconst_1
      28: putfield      #10                 // Field core_threads:I
      31: aload_0
      32: sipush        500
      35: putfield      #11                 // Field max_threads:I
      38: aload_0
      39: ldc2_w        #12                 // long 5000l
      42: putfield      #14                 // Field idle_time:J
      45: aload_0
      46: ldc           #15                 // String STORED\r\n
      48: invokevirtual #16                 // Method java/lang/String.getBytes:()[B
      51: putfield      #4                  // Field STORED:[B
      54: aload_0
      55: ldc           #17                 // String DELETED\r\n
      57: invokevirtual #16                 // Method java/lang/String.getBytes:()[B
      60: putfield      #1                  // Field DELETED:[B
      63: aload_0
      64: ldc           #18                 // String END\r\n
      66: invokevirtual #16                 // Method java/lang/String.getBytes:()[B
      69: putfield      #2                  // Field END:[B
      72: aload_0
      73: ldc           #19                 // String \r\n
      75: invokevirtual #16                 // Method java/lang/String.getBytes:()[B
      78: putfield      #3                  // Field RN:[B
      81: aload_0
      82: aload_1
      83: putfield      #8                  // Field bind_addr:Ljava/net/InetAddress;
      86: aload_0
      87: aload_3
      88: putfield      #5                  // Field cache:Lorg/jgroups/blocks/PartitionedHashMap;
      91: aload_0
      92: iload_2
      93: putfield      #7                  // Field port:I
      96: return

  public java.net.InetAddress getBindAddress();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bind_addr:Ljava/net/InetAddress;
       4: areturn

  public void setBindAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field bind_addr:Ljava/net/InetAddress;
       5: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #7                  // Field port:I
       4: ireturn

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field port:I
       5: return

  public org.jgroups.blocks.PartitionedHashMap<java.lang.String, byte[]> getCache();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lorg/jgroups/blocks/PartitionedHashMap;
       4: areturn

  public void setCache(org.jgroups.blocks.PartitionedHashMap<java.lang.String, byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field cache:Lorg/jgroups/blocks/PartitionedHashMap;
       5: return

  public int getThreadPoolCoreThreads();
    Code:
       0: aload_0
       1: getfield      #10                 // Field core_threads:I
       4: ireturn

  public void setThreadPoolCoreThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field core_threads:I
       5: return

  public int getThreadPoolMaxThreads();
    Code:
       0: aload_0
       1: getfield      #11                 // Field max_threads:I
       4: ireturn

  public void setThreadPoolMaxThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field max_threads:I
       5: return

  public long getThreadPoolIdleTime();
    Code:
       0: aload_0
       1: getfield      #14                 // Field idle_time:J
       4: lreturn

  public void setThreadPoolIdleTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field idle_time:J
       5: return

  public java.util.concurrent.Executor getThreadPool();
    Code:
       0: aload_0
       1: getfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
       4: areturn

  public void setThreadPool(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
       4: instanceof    #21                 // class java/util/concurrent/ExecutorService
       7: ifeq          19
      10: aload_1
      11: checkcast     #21                 // class java/util/concurrent/ExecutorService
      14: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      19: aload_0
      20: aload_1
      21: putfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
      24: return

  public java.util.Map<java.lang.String, java.lang.Object> getStats();
    Code:
       0: new           #23                 // class java/util/HashMap
       3: dup
       4: invokespecial #24                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #25                 // String time
      11: invokestatic  #26                 // Method java/lang/System.currentTimeMillis:()J
      14: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      17: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_1
      24: ldc           #29                 // String uptime
      26: invokestatic  #26                 // Method java/lang/System.currentTimeMillis:()J
      29: aload_0
      30: getfield      #30                 // Field start_time:J
      33: lsub
      34: ldc2_w        #31                 // long 1000l
      37: ldiv
      38: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_1
      48: areturn

  public void start() throws java.io.IOException, javax.management.MalformedObjectNameException, javax.management.MBeanRegistrationException;
    Code:
       0: aload_0
       1: new           #33                 // class java/net/ServerSocket
       4: dup
       5: aload_0
       6: getfield      #7                  // Field port:I
       9: bipush        50
      11: aload_0
      12: getfield      #8                  // Field bind_addr:Ljava/net/InetAddress;
      15: invokespecial #34                 // Method java/net/ServerSocket."<init>":(IILjava/net/InetAddress;)V
      18: putfield      #35                 // Field srv_sock:Ljava/net/ServerSocket;
      21: aload_0
      22: getfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
      25: ifnonnull     68
      28: aload_0
      29: new           #36                 // class java/util/concurrent/ThreadPoolExecutor
      32: dup
      33: aload_0
      34: getfield      #10                 // Field core_threads:I
      37: aload_0
      38: getfield      #11                 // Field max_threads:I
      41: aload_0
      42: getfield      #14                 // Field idle_time:J
      45: getstatic     #37                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      48: new           #38                 // class java/util/concurrent/SynchronousQueue
      51: dup
      52: invokespecial #39                 // Method java/util/concurrent/SynchronousQueue."<init>":()V
      55: new           #40                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
      58: dup
      59: invokespecial #41                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
      62: invokespecial #42                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/RejectedExecutionHandler;)V
      65: putfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
      68: aload_0
      69: getfield      #9                  // Field thread:Ljava/lang/Thread;
      72: ifnull        85
      75: aload_0
      76: getfield      #9                  // Field thread:Ljava/lang/Thread;
      79: invokevirtual #43                 // Method java/lang/Thread.isAlive:()Z
      82: ifne          106
      85: aload_0
      86: new           #44                 // class java/lang/Thread
      89: dup
      90: aload_0
      91: ldc           #45                 // String Acceptor
      93: invokespecial #46                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      96: putfield      #9                  // Field thread:Ljava/lang/Thread;
      99: aload_0
     100: getfield      #9                  // Field thread:Ljava/lang/Thread;
     103: invokevirtual #47                 // Method java/lang/Thread.start:()V
     106: aload_0
     107: invokestatic  #26                 // Method java/lang/System.currentTimeMillis:()J
     110: putfield      #30                 // Field start_time:J
     113: return

  public void stop() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field srv_sock:Ljava/net/ServerSocket;
       4: invokestatic  #48                 // Method org/jgroups/util/Util.close:(Ljava/io/Closeable;)V
       7: aload_0
       8: aconst_null
       9: putfield      #9                  // Field thread:Ljava/lang/Thread;
      12: aload_0
      13: getfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
      16: instanceof    #21                 // class java/util/concurrent/ExecutorService
      19: ifeq          34
      22: aload_0
      23: getfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
      26: checkcast     #21                 // class java/util/concurrent/ExecutorService
      29: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      34: return

  public void run();
    Code:
       0: getstatic     #49                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #50                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #52                 // String MemcachedConnector listening on
      12: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: getfield      #35                 // Field srv_sock:Ljava/net/ServerSocket;
      19: invokevirtual #54                 // Method java/net/ServerSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      22: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokevirtual #57                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      31: aload_0
      32: getfield      #9                  // Field thread:Ljava/lang/Thread;
      35: ifnull        96
      38: invokestatic  #58                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      41: aload_0
      42: getfield      #9                  // Field thread:Ljava/lang/Thread;
      45: invokevirtual #59                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          96
      51: aconst_null
      52: astore_1
      53: aload_0
      54: getfield      #35                 // Field srv_sock:Ljava/net/ServerSocket;
      57: invokevirtual #60                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;
      60: astore_1
      61: new           #61                 // class org/jgroups/blocks/MemcachedConnector$RequestHandler
      64: dup
      65: aload_0
      66: aload_1
      67: invokespecial #62                 // Method org/jgroups/blocks/MemcachedConnector$RequestHandler."<init>":(Lorg/jgroups/blocks/MemcachedConnector;Ljava/net/Socket;)V
      70: astore_2
      71: aload_0
      72: getfield      #20                 // Field thread_pool:Ljava/util/concurrent/Executor;
      75: aload_2
      76: invokeinterface #63,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      81: goto          93
      84: astore_2
      85: aload_1
      86: invokestatic  #48                 // Method org/jgroups/util/Util.close:(Ljava/io/Closeable;)V
      89: goto          96
      92: astore_2
      93: goto          31
      96: return
    Exception table:
       from    to  target type
          53    81    84   Class java/nio/channels/ClosedSelectorException
          53    81    92   Class java/lang/Throwable

  static org.jgroups.blocks.PartitionedHashMap access$000(org.jgroups.blocks.MemcachedConnector);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lorg/jgroups/blocks/PartitionedHashMap;
       4: areturn

  static byte[] access$100(org.jgroups.blocks.MemcachedConnector);
    Code:
       0: aload_0
       1: getfield      #4                  // Field STORED:[B
       4: areturn

  static byte[] access$200(org.jgroups.blocks.MemcachedConnector);
    Code:
       0: aload_0
       1: getfield      #3                  // Field RN:[B
       4: areturn

  static byte[] access$300(org.jgroups.blocks.MemcachedConnector);
    Code:
       0: aload_0
       1: getfield      #2                  // Field END:[B
       4: areturn

  static byte[] access$400(org.jgroups.blocks.MemcachedConnector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field DELETED:[B
       4: areturn
}
