Compiled from "SCOPE.java"
public class org.jgroups.protocols.SCOPE extends org.jgroups.stack.Protocol {
  protected int thread_pool_min_threads;

  protected int thread_pool_max_threads;

  protected long thread_pool_keep_alive_time;

  protected java.lang.String thread_naming_pattern;

  protected long expiration_time;

  protected long expiration_interval;

  protected java.util.concurrent.Future<?> expiry_task;

  protected final java.util.concurrent.ConcurrentMap<org.jgroups.Address, java.util.concurrent.ConcurrentMap<java.lang.Short, org.jgroups.protocols.SCOPE$MessageQueue>> queues;

  protected java.lang.String cluster_name;

  protected org.jgroups.Address local_addr;

  protected java.util.concurrent.Executor thread_pool;

  protected org.jgroups.util.ThreadFactory thread_factory;

  protected org.jgroups.util.TimeScheduler timer;

  public org.jgroups.protocols.SCOPE();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/jgroups/stack/Protocol."<init>":()V
       4: aload_0
       5: iconst_2
       6: putfield      #4                  // Field thread_pool_min_threads:I
       9: aload_0
      10: bipush        10
      12: putfield      #5                  // Field thread_pool_max_threads:I
      15: aload_0
      16: ldc2_w        #6                  // long 30000l
      19: putfield      #8                  // Field thread_pool_keep_alive_time:J
      22: aload_0
      23: ldc           #9                  // String cl
      25: putfield      #10                 // Field thread_naming_pattern:Ljava/lang/String;
      28: aload_0
      29: ldc2_w        #6                  // long 30000l
      32: putfield      #11                 // Field expiration_time:J
      35: aload_0
      36: ldc2_w        #12                 // long 60000l
      39: putfield      #14                 // Field expiration_interval:J
      42: aload_0
      43: aconst_null
      44: putfield      #15                 // Field expiry_task:Ljava/util/concurrent/Future;
      47: aload_0
      48: invokestatic  #16                 // Method org/jgroups/util/Util.createConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      51: putfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
      54: return

  public int getNumberOfReceiverScopes();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
       6: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          53
      26: aload_2
      27: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      35: astore_3
      36: iload_1
      37: aload_3
      38: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      43: invokeinterface #24,  1           // InterfaceMethod java/util/Set.size:()I
      48: iadd
      49: istore_1
      50: goto          17
      53: iload_1
      54: ireturn

  public int getNumberOfMessages();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
       6: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          85
      26: aload_2
      27: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      35: astore_3
      36: aload_3
      37: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      42: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore        4
      49: aload         4
      51: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          82
      59: aload         4
      61: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #25                 // class org/jgroups/protocols/SCOPE$MessageQueue
      69: astore        5
      71: iload_1
      72: aload         5
      74: invokevirtual #26                 // Method org/jgroups/protocols/SCOPE$MessageQueue.size:()I
      77: iadd
      78: istore_1
      79: goto          49
      82: goto          17
      85: iload_1
      86: ireturn

  public void setThreadPoolMinThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field thread_pool_min_threads:I
       5: aload_0
       6: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
       9: instanceof    #28                 // class java/util/concurrent/ThreadPoolExecutor
      12: ifeq          26
      15: aload_0
      16: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
      19: checkcast     #28                 // class java/util/concurrent/ThreadPoolExecutor
      22: iload_1
      23: invokevirtual #29                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
      26: return

  public int getThreadPoolMinThreads();
    Code:
       0: aload_0
       1: getfield      #4                  // Field thread_pool_min_threads:I
       4: ireturn

  public void setThreadPoolMaxThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field thread_pool_max_threads:I
       5: aload_0
       6: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
       9: instanceof    #28                 // class java/util/concurrent/ThreadPoolExecutor
      12: ifeq          26
      15: aload_0
      16: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
      19: checkcast     #28                 // class java/util/concurrent/ThreadPoolExecutor
      22: iload_1
      23: invokevirtual #30                 // Method java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize:(I)V
      26: return

  public int getThreadPoolMaxThreads();
    Code:
       0: aload_0
       1: getfield      #5                  // Field thread_pool_max_threads:I
       4: ireturn

  public void setThreadPoolKeepAliveTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field thread_pool_keep_alive_time:J
       5: aload_0
       6: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
       9: instanceof    #28                 // class java/util/concurrent/ThreadPoolExecutor
      12: ifeq          29
      15: aload_0
      16: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
      19: checkcast     #28                 // class java/util/concurrent/ThreadPoolExecutor
      22: lload_1
      23: getstatic     #31                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokevirtual #32                 // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      29: return

  public long getThreadPoolKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #8                  // Field thread_pool_keep_alive_time:J
       4: lreturn

  public void removeAllQueues();
    Code:
       0: aload_0
       1: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  public void expire(short);
    Code:
       0: iload_1
       1: invokestatic  #34                 // Method org/jgroups/protocols/SCOPE$ScopeHeader.createExpireHeader:(S)Lorg/jgroups/protocols/SCOPE$ScopeHeader;
       4: astore_2
       5: new           #35                 // class org/jgroups/Message
       8: dup
       9: invokespecial #36                 // Method org/jgroups/Message."<init>":()V
      12: astore_3
      13: aload_3
      14: getstatic     #37                 // Field org/jgroups/Global.SCOPE_ID:S
      17: aload_2
      18: invokevirtual #38                 // Method org/jgroups/Message.putHeader:(SLorg/jgroups/Header;)Lorg/jgroups/Message;
      21: pop
      22: aload_3
      23: iconst_1
      24: anewarray     #39                 // class org/jgroups/Message$Flag
      27: dup
      28: iconst_0
      29: getstatic     #40                 // Field org/jgroups/Message.SCOPED:Lorg/jgroups/Message$Flag;
      32: aastore
      33: invokevirtual #41                 // Method org/jgroups/Message.setFlag:([Lorg/jgroups/Message$Flag;)Lorg/jgroups/Message;
      36: pop
      37: aload_0
      38: getfield      #42                 // Field down_prot:Lorg/jgroups/stack/Protocol;
      41: new           #43                 // class org/jgroups/Event
      44: dup
      45: iconst_1
      46: aload_3
      47: invokespecial #44                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      50: invokevirtual #45                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      53: pop
      54: return

  public void removeScope(org.jgroups.Address, short);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
       9: aload_1
      10: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      18: astore_3
      19: aload_3
      20: ifnull        48
      23: aload_3
      24: iload_2
      25: invokestatic  #47                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      28: invokeinterface #48,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #25                 // class org/jgroups/protocols/SCOPE$MessageQueue
      36: astore        4
      38: aload         4
      40: ifnull        48
      43: aload         4
      45: invokevirtual #49                 // Method org/jgroups/protocols/SCOPE$MessageQueue.clear:()V
      48: return

  public java.lang.String dumpScopes();
    Code:
       0: new           #50                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #53,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          90
      32: aload_2
      33: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #54                 // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #55,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #57                 // String :
      54: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: new           #59                 // class java/util/TreeSet
      60: dup
      61: aload_3
      62: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      67: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      70: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      75: invokespecial #61                 // Method java/util/TreeSet."<init>":(Ljava/util/Collection;)V
      78: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #62                 // String \n
      83: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: pop
      87: goto          23
      90: aload_1
      91: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  public int getNumActiveThreads();
    Code:
       0: aload_0
       1: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
       4: instanceof    #28                 // class java/util/concurrent/ThreadPoolExecutor
       7: ifeq          21
      10: aload_0
      11: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
      14: checkcast     #28                 // class java/util/concurrent/ThreadPoolExecutor
      17: invokevirtual #64                 // Method java/util/concurrent/ThreadPoolExecutor.getActiveCount:()I
      20: ireturn
      21: iconst_0
      22: ireturn

  public void init() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #65                 // Method org/jgroups/stack/Protocol.init:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #66                 // Method getTransport:()Lorg/jgroups/protocols/TP;
       9: invokevirtual #67                 // Method org/jgroups/protocols/TP.getTimer:()Lorg/jgroups/util/TimeScheduler;
      12: putfield      #68                 // Field timer:Lorg/jgroups/util/TimeScheduler;
      15: aload_0
      16: new           #69                 // class org/jgroups/util/DefaultThreadFactory
      19: dup
      20: ldc           #70                 // String SCOPE
      22: iconst_0
      23: iconst_1
      24: invokespecial #71                 // Method org/jgroups/util/DefaultThreadFactory."<init>":(Ljava/lang/String;ZZ)V
      27: putfield      #72                 // Field thread_factory:Lorg/jgroups/util/ThreadFactory;
      30: aload_0
      31: aload_0
      32: getfield      #73                 // Field cluster_name:Ljava/lang/String;
      35: aload_0
      36: getfield      #74                 // Field local_addr:Lorg/jgroups/Address;
      39: aload_0
      40: getfield      #10                 // Field thread_naming_pattern:Ljava/lang/String;
      43: invokespecial #75                 // Method setInAllThreadFactories:(Ljava/lang/String;Lorg/jgroups/Address;Ljava/lang/String;)V
      46: aload_0
      47: getfield      #14                 // Field expiration_interval:J
      50: lconst_0
      51: lcmp
      52: ifle          64
      55: aload_0
      56: getfield      #11                 // Field expiration_time:J
      59: lconst_0
      60: lcmp
      61: ifle          82
      64: aload_0
      65: getfield      #14                 // Field expiration_interval:J
      68: lconst_0
      69: lcmp
      70: ifgt          129
      73: aload_0
      74: getfield      #11                 // Field expiration_time:J
      77: lconst_0
      78: lcmp
      79: ifle          129
      82: new           #76                 // class java/lang/IllegalArgumentException
      85: dup
      86: new           #50                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #77                 // String expiration_interval (
      95: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #14                 // Field expiration_interval:J
     102: invokevirtual #78                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     105: ldc           #79                 // String ) and expiration_time (
     107: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: getfield      #11                 // Field expiration_time:J
     114: invokevirtual #78                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     117: ldc           #80                 // String ) don\'t match
     119: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #82                 // Method org/jgroups/stack/Protocol.start:()V
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field thread_pool_min_threads:I
       9: aload_0
      10: getfield      #5                  // Field thread_pool_max_threads:I
      13: aload_0
      14: getfield      #8                  // Field thread_pool_keep_alive_time:J
      17: aload_0
      18: getfield      #72                 // Field thread_factory:Lorg/jgroups/util/ThreadFactory;
      21: invokestatic  #83                 // Method createThreadPool:(IIJLorg/jgroups/util/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      24: putfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
      27: aload_0
      28: getfield      #14                 // Field expiration_interval:J
      31: lconst_0
      32: lcmp
      33: ifle          49
      36: aload_0
      37: getfield      #11                 // Field expiration_time:J
      40: lconst_0
      41: lcmp
      42: ifle          49
      45: aload_0
      46: invokevirtual #84                 // Method startExpiryTask:()V
      49: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #85                 // Method org/jgroups/stack/Protocol.stop:()V
       4: aload_0
       5: invokevirtual #86                 // Method stopExpiryTask:()V
       8: aload_0
       9: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
      12: invokestatic  #87                 // Method shutdownThreadPool:(Ljava/util/concurrent/Executor;)V
      15: aload_0
      16: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
      19: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          93
      39: aload_1
      40: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      48: astore_2
      49: aload_2
      50: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      55: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      60: astore_3
      61: aload_3
      62: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          90
      70: aload_3
      71: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #25                 // class org/jgroups/protocols/SCOPE$MessageQueue
      79: astore        4
      81: aload         4
      83: invokevirtual #88                 // Method org/jgroups/protocols/SCOPE$MessageQueue.release:()Z
      86: pop
      87: goto          61
      90: goto          30
      93: return

  public java.lang.Object down(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method org/jgroups/Event.getType:()I
       4: lookupswitch  { // 6
                     2: 92
                     6: 78
                     8: 64
                    80: 92
                    92: 92
                    93: 92
               default: 119
          }
      64: aload_0
      65: aload_1
      66: invokevirtual #90                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      69: checkcast     #91                 // class org/jgroups/Address
      72: putfield      #74                 // Field local_addr:Lorg/jgroups/Address;
      75: goto          119
      78: aload_0
      79: aload_1
      80: invokevirtual #90                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      83: checkcast     #92                 // class org/jgroups/View
      86: invokespecial #93                 // Method handleView:(Lorg/jgroups/View;)V
      89: goto          119
      92: aload_0
      93: aload_1
      94: invokevirtual #90                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      97: checkcast     #94                 // class java/lang/String
     100: putfield      #73                 // Field cluster_name:Ljava/lang/String;
     103: aload_0
     104: aload_0
     105: getfield      #73                 // Field cluster_name:Ljava/lang/String;
     108: aload_0
     109: getfield      #74                 // Field local_addr:Lorg/jgroups/Address;
     112: aload_0
     113: getfield      #10                 // Field thread_naming_pattern:Ljava/lang/String;
     116: invokespecial #75                 // Method setInAllThreadFactories:(Ljava/lang/String;Lorg/jgroups/Address;Ljava/lang/String;)V
     119: aload_0
     120: getfield      #42                 // Field down_prot:Lorg/jgroups/stack/Protocol;
     123: aload_1
     124: invokevirtual #45                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
     127: areturn

  public java.lang.Object up(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method org/jgroups/Event.getType:()I
       4: lookupswitch  { // 2
                     1: 32
                     6: 166
               default: 177
          }
      32: aload_1
      33: invokevirtual #90                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      36: checkcast     #35                 // class org/jgroups/Message
      39: astore_2
      40: aload_2
      41: getstatic     #40                 // Field org/jgroups/Message.SCOPED:Lorg/jgroups/Message$Flag;
      44: invokevirtual #95                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      47: ifeq          177
      50: aload_2
      51: getstatic     #96                 // Field org/jgroups/Message$Flag.OOB:Lorg/jgroups/Message$Flag;
      54: invokevirtual #95                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      57: ifeq          63
      60: goto          177
      63: aload_2
      64: aload_0
      65: getfield      #97                 // Field id:S
      68: invokevirtual #98                 // Method org/jgroups/Message.getHeader:(S)Lorg/jgroups/Header;
      71: checkcast     #99                 // class org/jgroups/protocols/SCOPE$ScopeHeader
      74: astore_3
      75: aload_3
      76: ifnonnull     89
      79: new           #100                // class java/lang/IllegalStateException
      82: dup
      83: ldc           #101                // String message doesn\'t have a ScopeHeader attached
      85: invokespecial #102                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_3
      90: getfield      #103                // Field org/jgroups/protocols/SCOPE$ScopeHeader.type:B
      93: iconst_2
      94: if_icmpne     111
      97: aload_0
      98: aload_2
      99: invokevirtual #104                // Method org/jgroups/Message.getSrc:()Lorg/jgroups/Address;
     102: aload_3
     103: getfield      #105                // Field org/jgroups/protocols/SCOPE$ScopeHeader.scope:S
     106: invokevirtual #106                // Method removeScope:(Lorg/jgroups/Address;S)V
     109: aconst_null
     110: areturn
     111: aload_0
     112: aload_2
     113: invokevirtual #104                // Method org/jgroups/Message.getSrc:()Lorg/jgroups/Address;
     116: aload_3
     117: getfield      #105                // Field org/jgroups/protocols/SCOPE$ScopeHeader.scope:S
     120: invokevirtual #107                // Method getOrCreateQueue:(Lorg/jgroups/Address;S)Lorg/jgroups/protocols/SCOPE$MessageQueue;
     123: astore        4
     125: aload         4
     127: aload_2
     128: invokevirtual #108                // Method org/jgroups/protocols/SCOPE$MessageQueue.add:(Lorg/jgroups/Message;)V
     131: aload         4
     133: invokevirtual #109                // Method org/jgroups/protocols/SCOPE$MessageQueue.acquire:()Z
     136: ifne          141
     139: aconst_null
     140: areturn
     141: new           #110                // class org/jgroups/protocols/SCOPE$QueueThread
     144: dup
     145: aload_0
     146: aload         4
     148: invokespecial #111                // Method org/jgroups/protocols/SCOPE$QueueThread."<init>":(Lorg/jgroups/protocols/SCOPE;Lorg/jgroups/protocols/SCOPE$MessageQueue;)V
     151: astore        5
     153: aload_0
     154: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
     157: aload         5
     159: invokeinterface #112,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     164: aconst_null
     165: areturn
     166: aload_0
     167: aload_1
     168: invokevirtual #90                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
     171: checkcast     #92                 // class org/jgroups/View
     174: invokespecial #93                 // Method handleView:(Lorg/jgroups/View;)V
     177: aload_0
     178: getfield      #2                  // Field up_prot:Lorg/jgroups/stack/Protocol;
     181: aload_1
     182: invokevirtual #113                // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     185: areturn

  public void up(org.jgroups.util.MessageBatch);
    Code:
       0: aload_1
       1: invokevirtual #114                // Method org/jgroups/util/MessageBatch.iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          161
      14: aload_2
      15: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #35                 // class org/jgroups/Message
      23: astore_3
      24: aload_3
      25: getstatic     #40                 // Field org/jgroups/Message.SCOPED:Lorg/jgroups/Message$Flag;
      28: invokevirtual #95                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      31: ifeq          5
      34: aload_3
      35: getstatic     #96                 // Field org/jgroups/Message$Flag.OOB:Lorg/jgroups/Message$Flag;
      38: invokevirtual #95                 // Method org/jgroups/Message.isFlagSet:(Lorg/jgroups/Message$Flag;)Z
      41: ifeq          47
      44: goto          5
      47: aload_3
      48: aload_0
      49: getfield      #97                 // Field id:S
      52: invokevirtual #98                 // Method org/jgroups/Message.getHeader:(S)Lorg/jgroups/Header;
      55: checkcast     #99                 // class org/jgroups/protocols/SCOPE$ScopeHeader
      58: astore        4
      60: aload         4
      62: ifnonnull     79
      65: aload_0
      66: getfield      #1                  // Field log:Lorg/jgroups/logging/Log;
      69: ldc           #101                // String message doesn\'t have a ScopeHeader attached
      71: invokeinterface #115,  2          // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;)V
      76: goto          5
      79: aload_1
      80: aload_3
      81: invokevirtual #116                // Method org/jgroups/util/MessageBatch.remove:(Lorg/jgroups/Message;)Lorg/jgroups/util/MessageBatch;
      84: pop
      85: aload         4
      87: getfield      #103                // Field org/jgroups/protocols/SCOPE$ScopeHeader.type:B
      90: iconst_2
      91: if_icmpne     110
      94: aload_0
      95: aload_3
      96: invokevirtual #104                // Method org/jgroups/Message.getSrc:()Lorg/jgroups/Address;
      99: aload         4
     101: getfield      #105                // Field org/jgroups/protocols/SCOPE$ScopeHeader.scope:S
     104: invokevirtual #106                // Method removeScope:(Lorg/jgroups/Address;S)V
     107: goto          5
     110: aload_0
     111: aload_3
     112: invokevirtual #104                // Method org/jgroups/Message.getSrc:()Lorg/jgroups/Address;
     115: aload         4
     117: getfield      #105                // Field org/jgroups/protocols/SCOPE$ScopeHeader.scope:S
     120: invokevirtual #107                // Method getOrCreateQueue:(Lorg/jgroups/Address;S)Lorg/jgroups/protocols/SCOPE$MessageQueue;
     123: astore        5
     125: aload         5
     127: aload_3
     128: invokevirtual #108                // Method org/jgroups/protocols/SCOPE$MessageQueue.add:(Lorg/jgroups/Message;)V
     131: aload         5
     133: invokevirtual #109                // Method org/jgroups/protocols/SCOPE$MessageQueue.acquire:()Z
     136: ifeq          158
     139: aload_0
     140: getfield      #27                 // Field thread_pool:Ljava/util/concurrent/Executor;
     143: new           #110                // class org/jgroups/protocols/SCOPE$QueueThread
     146: dup
     147: aload_0
     148: aload         5
     150: invokespecial #111                // Method org/jgroups/protocols/SCOPE$QueueThread."<init>":(Lorg/jgroups/protocols/SCOPE;Lorg/jgroups/protocols/SCOPE$MessageQueue;)V
     153: invokeinterface #112,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     158: goto          5
     161: aload_1
     162: invokevirtual #117                // Method org/jgroups/util/MessageBatch.isEmpty:()Z
     165: ifne          176
     168: aload_0
     169: getfield      #2                  // Field up_prot:Lorg/jgroups/stack/Protocol;
     172: aload_1
     173: invokevirtual #118                // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/util/MessageBatch;)V
     176: return

  protected org.jgroups.protocols.SCOPE$MessageQueue getOrCreateQueue(org.jgroups.Address, short);
    Code:
       0: aload_0
       1: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      13: astore_3
      14: aload_3
      15: ifnonnull     46
      18: invokestatic  #16                 // Method org/jgroups/util/Util.createConcurrentMap:()Ljava/util/concurrent/ConcurrentMap;
      21: astore_3
      22: aload_0
      23: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
      26: aload_1
      27: aload_3
      28: invokeinterface #119,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      36: astore        4
      38: aload         4
      40: ifnull        46
      43: aload         4
      45: astore_3
      46: aload_3
      47: iload_2
      48: invokestatic  #47                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      51: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #25                 // class org/jgroups/protocols/SCOPE$MessageQueue
      59: astore        4
      61: aload         4
      63: ifnonnull     101
      66: new           #25                 // class org/jgroups/protocols/SCOPE$MessageQueue
      69: dup
      70: invokespecial #120                // Method org/jgroups/protocols/SCOPE$MessageQueue."<init>":()V
      73: astore        4
      75: aload_3
      76: iload_2
      77: invokestatic  #47                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      80: aload         4
      82: invokeinterface #119,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #25                 // class org/jgroups/protocols/SCOPE$MessageQueue
      90: astore        5
      92: aload         5
      94: ifnull        101
      97: aload         5
      99: astore        4
     101: aload         4
     103: areturn

  protected synchronized void startExpiryTask();
    Code:
       0: aload_0
       1: getfield      #15                 // Field expiry_task:Ljava/util/concurrent/Future;
       4: ifnull        19
       7: aload_0
       8: getfield      #15                 // Field expiry_task:Ljava/util/concurrent/Future;
      11: invokeinterface #121,  1          // InterfaceMethod java/util/concurrent/Future.isDone:()Z
      16: ifeq          51
      19: aload_0
      20: aload_0
      21: getfield      #68                 // Field timer:Lorg/jgroups/util/TimeScheduler;
      24: new           #122                // class org/jgroups/protocols/SCOPE$ExpiryTask
      27: dup
      28: aload_0
      29: invokespecial #123                // Method org/jgroups/protocols/SCOPE$ExpiryTask."<init>":(Lorg/jgroups/protocols/SCOPE;)V
      32: aload_0
      33: getfield      #14                 // Field expiration_interval:J
      36: aload_0
      37: getfield      #14                 // Field expiration_interval:J
      40: getstatic     #31                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      43: invokeinterface #124,  7          // InterfaceMethod org/jgroups/util/TimeScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      48: putfield      #15                 // Field expiry_task:Ljava/util/concurrent/Future;
      51: return

  protected synchronized void stopExpiryTask();
    Code:
       0: aload_0
       1: getfield      #15                 // Field expiry_task:Ljava/util/concurrent/Future;
       4: ifnull        23
       7: aload_0
       8: getfield      #15                 // Field expiry_task:Ljava/util/concurrent/Future;
      11: iconst_1
      12: invokeinterface #125,  2          // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: aload_0
      19: aconst_null
      20: putfield      #15                 // Field expiry_task:Ljava/util/concurrent/Future;
      23: return

  protected static java.util.concurrent.ExecutorService createThreadPool(int, int, long, org.jgroups.util.ThreadFactory);
    Code:
       0: new           #28                 // class java/util/concurrent/ThreadPoolExecutor
       3: dup
       4: iload_0
       5: iload_1
       6: lload_2
       7: getstatic     #31                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      10: new           #126                // class java/util/concurrent/SynchronousQueue
      13: dup
      14: invokespecial #127                // Method java/util/concurrent/SynchronousQueue."<init>":()V
      17: invokespecial #128                // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V
      20: astore        5
      22: aload         5
      24: aload         4
      26: invokevirtual #129                // Method java/util/concurrent/ThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
      29: aload         5
      31: new           #130                // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
      34: dup
      35: invokespecial #131                // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
      38: invokevirtual #132                // Method java/util/concurrent/ThreadPoolExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
      41: aload         5
      43: areturn

  protected static void shutdownThreadPool(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: instanceof    #133                // class java/util/concurrent/ExecutorService
       4: ifeq          36
       7: aload_0
       8: checkcast     #133                // class java/util/concurrent/ExecutorService
      11: astore_1
      12: aload_1
      13: invokeinterface #134,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
      18: pop
      19: aload_1
      20: ldc2_w        #135                // long 3000l
      23: getstatic     #31                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokeinterface #137,  4          // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      31: pop
      32: goto          36
      35: astore_2
      36: return
    Exception table:
       from    to  target type
          19    32    35   Class java/lang/InterruptedException

  private void setInAllThreadFactories(java.lang.String, org.jgroups.Address, java.lang.String);
    Code:
       0: iconst_1
       1: anewarray     #139                // class org/jgroups/util/ThreadFactory
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #72                 // Field thread_factory:Lorg/jgroups/util/ThreadFactory;
      10: aastore
      11: astore        4
      13: aload         4
      15: astore        5
      17: aload         5
      19: arraylength
      20: istore        6
      22: iconst_0
      23: istore        7
      25: iload         7
      27: iload         6
      29: if_icmpge     84
      32: aload         5
      34: iload         7
      36: aaload
      37: astore        8
      39: aload_3
      40: ifnull        51
      43: aload         8
      45: aload_3
      46: invokeinterface #140,  2          // InterfaceMethod org/jgroups/util/ThreadFactory.setPattern:(Ljava/lang/String;)V
      51: aload_1
      52: ifnull        63
      55: aload         8
      57: aload_1
      58: invokeinterface #141,  2          // InterfaceMethod org/jgroups/util/ThreadFactory.setClusterName:(Ljava/lang/String;)V
      63: aload_2
      64: ifnull        78
      67: aload         8
      69: aload_2
      70: invokevirtual #142                // Method java/lang/Object.toString:()Ljava/lang/String;
      73: invokeinterface #143,  2          // InterfaceMethod org/jgroups/util/ThreadFactory.setAddress:(Ljava/lang/String;)V
      78: iinc          7, 1
      81: goto          25
      84: return

  private void handleView(org.jgroups.View);
    Code:
       0: aload_1
       1: invokevirtual #144                // Method org/jgroups/View.getMembers:()Ljava/util/List;
       4: astore_2
       5: new           #145                // class java/util/HashSet
       8: dup
       9: aload_0
      10: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      18: invokespecial #146                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      21: astore_3
      22: aload_3
      23: aload_2
      24: invokeinterface #147,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_3
      31: invokeinterface #53,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          69
      48: aload         4
      50: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #91                 // class org/jgroups/Address
      58: astore        5
      60: aload_0
      61: aload         5
      63: invokevirtual #148                // Method clearQueue:(Lorg/jgroups/Address;)V
      66: goto          38
      69: return

  public void clearQueue(org.jgroups.Address);
    Code:
       0: aload_0
       1: getfield      #17                 // Field queues:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class java/util/concurrent/ConcurrentMap
      13: astore_2
      14: aload_2
      15: ifnull        63
      18: aload_2
      19: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      24: astore_3
      25: aload_3
      26: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          63
      43: aload         4
      45: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #25                 // class org/jgroups/protocols/SCOPE$MessageQueue
      53: astore        5
      55: aload         5
      57: invokevirtual #49                 // Method org/jgroups/protocols/SCOPE$MessageQueue.clear:()V
      60: goto          33
      63: aload_0
      64: getfield      #1                  // Field log:Lorg/jgroups/logging/Log;
      67: invokeinterface #149,  1          // InterfaceMethod org/jgroups/logging/Log.isTraceEnabled:()Z
      72: ifeq          108
      75: aload_0
      76: getfield      #1                  // Field log:Lorg/jgroups/logging/Log;
      79: new           #50                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #150                // String removed
      88: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_1
      92: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: ldc           #151                // String  from receiver_table
      97: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokeinterface #152,  2          // InterfaceMethod org/jgroups/logging/Log.trace:(Ljava/lang/String;)V
     108: return

  static org.jgroups.stack.Protocol access$000(org.jgroups.protocols.SCOPE);
    Code:
       0: aload_0
       1: getfield      #2                  // Field up_prot:Lorg/jgroups/stack/Protocol;
       4: areturn

  static org.jgroups.logging.Log access$100(org.jgroups.protocols.SCOPE);
    Code:
       0: aload_0
       1: getfield      #1                  // Field log:Lorg/jgroups/logging/Log;
       4: areturn

  static org.jgroups.logging.Log access$200(org.jgroups.protocols.SCOPE);
    Code:
       0: aload_0
       1: getfield      #1                  // Field log:Lorg/jgroups/logging/Log;
       4: areturn

  static org.jgroups.logging.Log access$300(org.jgroups.protocols.SCOPE);
    Code:
       0: aload_0
       1: getfield      #1                  // Field log:Lorg/jgroups/logging/Log;
       4: areturn

  static org.jgroups.logging.Log access$400(org.jgroups.protocols.SCOPE);
    Code:
       0: aload_0
       1: getfield      #1                  // Field log:Lorg/jgroups/logging/Log;
       4: areturn
}
