Compiled from "MockTimeScheduler.java"
public class org.jgroups.util.MockTimeScheduler implements org.jgroups.util.TimeScheduler {
  public org.jgroups.util.MockTimeScheduler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void execute(java.lang.Runnable);
    Code:
       0: return

  public java.util.concurrent.Future<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aconst_null
       1: areturn

  public java.util.concurrent.Future<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aconst_null
       1: areturn

  public java.util.concurrent.Future<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aconst_null
       1: areturn

  public java.util.concurrent.Future<?> scheduleWithDynamicInterval(org.jgroups.util.TimeScheduler$Task);
    Code:
       0: aconst_null
       1: areturn

  public void setThreadFactory(org.jgroups.util.ThreadFactory);
    Code:
       0: return

  public java.lang.String dumpTimerTasks();
    Code:
       0: aconst_null
       1: areturn

  public int getMinThreads();
    Code:
       0: iconst_0
       1: ireturn

  public void setMinThreads(int);
    Code:
       0: return

  public int getMaxThreads();
    Code:
       0: iconst_0
       1: ireturn

  public void setMaxThreads(int);
    Code:
       0: return

  public long getKeepAliveTime();
    Code:
       0: lconst_0
       1: lreturn

  public void setKeepAliveTime(long);
    Code:
       0: return

  public int getCurrentThreads();
    Code:
       0: iconst_0
       1: ireturn

  public int size();
    Code:
       0: iconst_0
       1: ireturn

  public void stop();
    Code:
       0: return

  public boolean isShutdown();
    Code:
       0: iconst_0
       1: ireturn
}
