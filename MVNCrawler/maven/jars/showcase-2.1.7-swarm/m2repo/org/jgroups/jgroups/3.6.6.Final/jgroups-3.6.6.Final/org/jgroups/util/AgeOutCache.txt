Compiled from "AgeOutCache.java"
public class org.jgroups.util.AgeOutCache<K> {
  private final org.jgroups.util.TimeScheduler timer;

  private long timeout;

  private final java.util.concurrent.ConcurrentMap<K, java.util.concurrent.Future> map;

  private org.jgroups.util.AgeOutCache$Handler handler;

  public org.jgroups.util.AgeOutCache(org.jgroups.util.TimeScheduler, long);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field timer:Lorg/jgroups/util/TimeScheduler;
      20: aload_0
      21: lload_2
      22: putfield      #1                  // Field timeout:J
      25: return

  public org.jgroups.util.AgeOutCache(org.jgroups.util.TimeScheduler, long, org.jgroups.util.AgeOutCache$Handler);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #8                  // Method "<init>":(Lorg/jgroups/util/TimeScheduler;J)V
       6: aload_0
       7: aload         4
       9: putfield      #3                  // Field handler:Lorg/jgroups/util/AgeOutCache$Handler;
      12: return

  public long getTimeout();
    Code:
       0: aload_0
       1: getfield      #1                  // Field timeout:J
       4: lreturn

  public void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #1                  // Field timeout:J
       5: return

  public org.jgroups.util.AgeOutCache$Handler getHandler();
    Code:
       0: aload_0
       1: getfield      #3                  // Field handler:Lorg/jgroups/util/AgeOutCache$Handler;
       4: areturn

  public void setHandler(org.jgroups.util.AgeOutCache$Handler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field handler:Lorg/jgroups/util/AgeOutCache$Handler;
       5: return

  public void add(K);
    Code:
       0: aload_0
       1: getfield      #7                  // Field timer:Lorg/jgroups/util/TimeScheduler;
       4: new           #9                  // class org/jgroups/util/AgeOutCache$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #10                 // Method org/jgroups/util/AgeOutCache$1."<init>":(Lorg/jgroups/util/AgeOutCache;Ljava/lang/Object;)V
      13: aload_0
      14: getfield      #1                  // Field timeout:J
      17: getstatic     #11                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      20: invokeinterface #12,  5           // InterfaceMethod org/jgroups/util/TimeScheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
      25: astore_2
      26: aload_0
      27: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      30: aload_1
      31: aload_2
      32: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #14                 // class java/util/concurrent/Future
      40: astore_3
      41: aload_3
      42: ifnull        53
      45: aload_2
      46: iconst_1
      47: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      52: pop
      53: return

  public boolean contains(K);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_0
       5: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void remove(K);
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class java/util/concurrent/Future
      13: astore_2
      14: aload_2
      15: ifnull        26
      18: aload_2
      19: iconst_1
      20: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      25: pop
      26: return

  public void removeAll(java.util.Collection<K>);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_1
       5: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          35
      20: aload_2
      21: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokevirtual #21                 // Method remove:(Ljava/lang/Object;)V
      32: goto          11
      35: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_1
      25: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #14                 // class java/util/concurrent/Future
      33: astore_2
      34: aload_2
      35: iconst_1
      36: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      41: pop
      42: goto          15
      45: aload_0
      46: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      49: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      54: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          75
      32: aload_2
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #29                 // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #32                 // String :
      54: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #35                 // String \n
      68: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: goto          23
      75: aload_1
      76: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn

  static org.jgroups.util.AgeOutCache$Handler access$000(org.jgroups.util.AgeOutCache);
    Code:
       0: aload_0
       1: getfield      #3                  // Field handler:Lorg/jgroups/util/AgeOutCache$Handler;
       4: areturn

  static java.util.concurrent.ConcurrentMap access$100(org.jgroups.util.AgeOutCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static long access$200(org.jgroups.util.AgeOutCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field timeout:J
       4: lreturn
}
