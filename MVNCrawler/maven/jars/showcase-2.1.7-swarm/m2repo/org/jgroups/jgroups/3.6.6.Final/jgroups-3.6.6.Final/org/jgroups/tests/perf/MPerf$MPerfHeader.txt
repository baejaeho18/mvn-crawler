Compiled from "MPerf.java"
public class org.jgroups.tests.perf.MPerf$MPerfHeader extends org.jgroups.Header {
  protected static final byte DATA;

  protected static final byte START_SENDING;

  protected static final byte SENDING_DONE;

  protected static final byte RESULT;

  protected static final byte CLEAR_RESULTS;

  protected static final byte CONFIG_CHANGE;

  protected static final byte CONFIG_REQ;

  protected static final byte CONFIG_RSP;

  protected static final byte EXIT;

  protected static final byte NEW_CONFIG;

  protected static final byte ACK;

  protected byte type;

  protected long seqno;

  public org.jgroups.tests.perf.MPerf$MPerfHeader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: return

  public org.jgroups.tests.perf.MPerf$MPerfHeader(byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/Header."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field type:B
       9: return

  public org.jgroups.tests.perf.MPerf$MPerfHeader(byte, long);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method "<init>":(B)V
       5: aload_0
       6: lload_2
       7: putfield      #4                  // Field seqno:J
      10: return

  public int size();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field type:B
       6: iconst_1
       7: if_icmpne     20
      10: iload_1
      11: aload_0
      12: getfield      #4                  // Field seqno:J
      15: invokestatic  #5                  // Method org/jgroups/util/Bits.size:(J)I
      18: iadd
      19: istore_1
      20: iload_1
      21: ireturn

  public void writeTo(java.io.DataOutput) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field type:B
       5: invokeinterface #6,  2            // InterfaceMethod java/io/DataOutput.writeByte:(I)V
      10: aload_0
      11: getfield      #2                  // Field type:B
      14: iconst_1
      15: if_icmpne     26
      18: aload_0
      19: getfield      #4                  // Field seqno:J
      22: aload_1
      23: invokestatic  #7                  // Method org/jgroups/util/Bits.writeLong:(JLjava/io/DataOutput;)V
      26: return

  public void readFrom(java.io.DataInput) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  1            // InterfaceMethod java/io/DataInput.readByte:()B
       7: putfield      #2                  // Field type:B
      10: aload_0
      11: getfield      #2                  // Field type:B
      14: iconst_1
      15: if_icmpne     26
      18: aload_0
      19: aload_1
      20: invokestatic  #9                  // Method org/jgroups/util/Bits.readLong:(Ljava/io/DataInput;)J
      23: putfield      #4                  // Field seqno:J
      26: return

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field type:B
      11: invokestatic  #12                 // Method typeToString:(B)Ljava/lang/String;
      14: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #14                 // String
      19: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #4                  // Field seqno:J
      26: lconst_0
      27: lcmp
      28: ifle          41
      31: aload_0
      32: getfield      #4                  // Field seqno:J
      35: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: goto          43
      41: ldc           #16                 // String
      43: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  protected static java.lang.String typeToString(byte);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 11
                     1: 60
                     2: 63
                     3: 66
                     4: 69
                     5: 72
                     6: 75
                     7: 78
                     8: 81
                     9: 84
                    10: 87
                    11: 90
               default: 93
          }
      60: ldc           #19                 // String DATA
      62: areturn
      63: ldc           #20                 // String START_SENDING
      65: areturn
      66: ldc           #21                 // String SENDING_DONE
      68: areturn
      69: ldc           #22                 // String RESULT
      71: areturn
      72: ldc           #23                 // String CLEAR_RESULTS
      74: areturn
      75: ldc           #24                 // String CONFIG_CHANGE
      77: areturn
      78: ldc           #25                 // String CONFIG_REQ
      80: areturn
      81: ldc           #26                 // String CONFIG_RSP
      83: areturn
      84: ldc           #27                 // String EXIT
      86: areturn
      87: ldc           #28                 // String NEW_CONFIG
      89: areturn
      90: ldc           #29                 // String ACK
      92: areturn
      93: ldc           #30                 // String n/a
      95: areturn
}
