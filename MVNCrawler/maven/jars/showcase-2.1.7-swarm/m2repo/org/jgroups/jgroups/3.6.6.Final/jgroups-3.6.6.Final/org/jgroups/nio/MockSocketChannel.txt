Compiled from "MockSocketChannel.java"
public class org.jgroups.nio.MockSocketChannel extends java.nio.channels.SocketChannel {
  protected int bytes_to_write;

  protected java.nio.ByteBuffer bytes_to_read;

  protected boolean closed;

  public org.jgroups.nio.MockSocketChannel();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method java/nio/channels/SocketChannel."<init>":(Ljava/nio/channels/spi/SelectorProvider;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field closed:Z
      10: return

  public org.jgroups.nio.MockSocketChannel(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/nio/channels/SocketChannel."<init>":(Ljava/nio/channels/spi/SelectorProvider;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field closed:Z
      10: return

  public org.jgroups.nio.MockSocketChannel bytesToWrite(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field bytes_to_write:I
       5: aload_0
       6: areturn

  public org.jgroups.nio.MockSocketChannel bytesToRead(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       5: putfield      #5                  // Field bytes_to_read:Ljava/nio/ByteBuffer;
       8: aload_0
       9: areturn

  public org.jgroups.nio.MockSocketChannel bytesToRead(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field bytes_to_read:Ljava/nio/ByteBuffer;
       5: aload_0
       6: areturn

  public java.nio.channels.SocketChannel bind(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public void doClose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field closed:Z
       5: return

  public <T> java.nio.channels.SocketChannel setOption(java.net.SocketOption<T>, T) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T getOption(java.net.SocketOption<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<java.net.SocketOption<?>> supportedOptions();
    Code:
       0: aconst_null
       1: areturn

  public java.nio.channels.SocketChannel shutdownInput() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public java.nio.channels.SocketChannel shutdownOutput() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public java.net.Socket socket();
    Code:
       0: aconst_null
       1: areturn

  public boolean isConnected();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isConnectionPending();
    Code:
       0: iconst_0
       1: ireturn

  public boolean connect(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean finishConnect() throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public java.net.SocketAddress getRemoteAddress() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #6                  // Method java/nio/ByteBuffer.hasRemaining:()Z
       6: ifeq          37
       9: aload_0
      10: getfield      #5                  // Field bytes_to_read:Ljava/nio/ByteBuffer;
      13: invokevirtual #6                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          37
      19: aload_1
      20: aload_0
      21: getfield      #5                  // Field bytes_to_read:Ljava/nio/ByteBuffer;
      24: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      27: invokevirtual #8                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      30: pop
      31: iinc          2, 1
      34: goto          2
      37: iload_2
      38: ifle          45
      41: iload_2
      42: goto          57
      45: aload_0
      46: getfield      #2                  // Field closed:Z
      49: ifeq          56
      52: iconst_m1
      53: goto          57
      56: iload_2
      57: ireturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes_to_write:I
       4: ifne          9
       7: lconst_0
       8: lreturn
       9: iconst_0
      10: istore        4
      12: iload_2
      13: istore        5
      15: iload         5
      17: aload_1
      18: arraylength
      19: iload_3
      20: iload_2
      21: iadd
      22: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      25: if_icmpge     74
      28: aload_1
      29: iload         5
      31: aaload
      32: astore        6
      34: aload         6
      36: invokevirtual #6                  // Method java/nio/ByteBuffer.hasRemaining:()Z
      39: ifeq          68
      42: aload_0
      43: dup
      44: getfield      #3                  // Field bytes_to_write:I
      47: dup_x1
      48: iconst_1
      49: isub
      50: putfield      #3                  // Field bytes_to_write:I
      53: ifle          68
      56: aload         6
      58: invokevirtual #7                  // Method java/nio/ByteBuffer.get:()B
      61: pop
      62: iinc          4, 1
      65: goto          34
      68: iinc          5, 1
      71: goto          15
      74: iload         4
      76: i2l
      77: lreturn

  public java.net.SocketAddress getLocalAddress() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  protected void implCloseSelectableChannel() throws java.io.IOException;
    Code:
       0: return

  protected void implConfigureBlocking(boolean) throws java.io.IOException;
    Code:
       0: return

  public java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/SocketChannel;
       6: areturn

  public java.nio.channels.NetworkChannel bind(java.net.SocketAddress) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method bind:(Ljava/net/SocketAddress;)Ljava/nio/channels/SocketChannel;
       5: areturn
}
