Compiled from "ExecutionService.java"
public final class org.jgroups.blocks.executor.ExecutionService$DistributedFuture$Sync<V> extends java.util.concurrent.locks.AbstractQueuedSynchronizer {
  private static final long serialVersionUID;

  protected static final int RUNNING;

  protected static final int RAN;

  protected static final int CANCELLED;

  protected final org.jgroups.blocks.executor.ExecutionService$DistributedFuture<V> future;

  protected final java.util.concurrent.Callable<V> callable;

  protected V result;

  protected java.lang.Throwable exception;

  protected volatile transient java.lang.Thread runner;

  public org.jgroups.blocks.executor.ExecutionService$DistributedFuture$Sync(org.jgroups.blocks.executor.ExecutionService$DistributedFuture<V>, java.util.concurrent.Callable<V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/locks/AbstractQueuedSynchronizer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field future:Lorg/jgroups/blocks/executor/ExecutionService$DistributedFuture;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field callable:Ljava/util/concurrent/Callable;
      14: return

  private static boolean ranOrCancelled(int);
    Code:
       0: iload_0
       1: bipush        6
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected int tryAcquireShared(int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method innerIsDone:()Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_m1
      12: ireturn

  protected boolean tryReleaseShared(int);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field runner:Ljava/lang/Thread;
       5: iconst_1
       6: ireturn

  boolean innerIsCancelled();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getState:()I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  boolean innerIsDone();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getState:()I
       4: invokestatic  #7                  // Method ranOrCancelled:(I)Z
       7: ifeq          21
      10: aload_0
      11: getfield      #5                  // Field runner:Ljava/lang/Thread;
      14: ifnonnull     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  V innerGet() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #8                  // Method acquireSharedInterruptibly:(I)V
       5: aload_0
       6: invokevirtual #6                  // Method getState:()I
       9: iconst_4
      10: if_icmpne     21
      13: new           #9                  // class java/util/concurrent/CancellationException
      16: dup
      17: invokespecial #10                 // Method java/util/concurrent/CancellationException."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #11                 // Field exception:Ljava/lang/Throwable;
      25: ifnull        40
      28: new           #12                 // class java/util/concurrent/ExecutionException
      31: dup
      32: aload_0
      33: getfield      #11                 // Field exception:Ljava/lang/Throwable;
      36: invokespecial #13                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      39: athrow
      40: aload_0
      41: getfield      #14                 // Field result:Ljava/lang/Object;
      44: areturn

  V innerGet(long) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: iconst_0
       2: lload_1
       3: invokevirtual #15                 // Method tryAcquireSharedNanos:(IJ)Z
       6: ifne          17
       9: new           #16                 // class java/util/concurrent/TimeoutException
      12: dup
      13: invokespecial #17                 // Method java/util/concurrent/TimeoutException."<init>":()V
      16: athrow
      17: aload_0
      18: invokevirtual #6                  // Method getState:()I
      21: iconst_4
      22: if_icmpne     33
      25: new           #9                  // class java/util/concurrent/CancellationException
      28: dup
      29: invokespecial #10                 // Method java/util/concurrent/CancellationException."<init>":()V
      32: athrow
      33: aload_0
      34: getfield      #11                 // Field exception:Ljava/lang/Throwable;
      37: ifnull        52
      40: new           #12                 // class java/util/concurrent/ExecutionException
      43: dup
      44: aload_0
      45: getfield      #11                 // Field exception:Ljava/lang/Throwable;
      48: invokespecial #13                 // Method java/util/concurrent/ExecutionException."<init>":(Ljava/lang/Throwable;)V
      51: athrow
      52: aload_0
      53: getfield      #14                 // Field result:Ljava/lang/Object;
      56: areturn

  void innerSet(V);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getState:()I
       4: istore_2
       5: iload_2
       6: iconst_2
       7: if_icmpne     11
      10: return
      11: iload_2
      12: iconst_4
      13: if_icmpne     23
      16: aload_0
      17: iconst_0
      18: invokevirtual #18                 // Method releaseShared:(I)Z
      21: pop
      22: return
      23: aload_0
      24: iload_2
      25: iconst_2
      26: invokevirtual #19                 // Method compareAndSetState:(II)Z
      29: ifeq          51
      32: aload_0
      33: aload_1
      34: putfield      #14                 // Field result:Ljava/lang/Object;
      37: aload_0
      38: iconst_0
      39: invokevirtual #18                 // Method releaseShared:(I)Z
      42: pop
      43: aload_0
      44: getfield      #2                  // Field future:Lorg/jgroups/blocks/executor/ExecutionService$DistributedFuture;
      47: invokevirtual #20                 // Method org/jgroups/blocks/executor/ExecutionService$DistributedFuture.done:()V
      50: return
      51: goto          0

  void innerSetException(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getState:()I
       4: istore_2
       5: iload_2
       6: iconst_2
       7: if_icmpne     11
      10: return
      11: iload_2
      12: iconst_4
      13: if_icmpne     23
      16: aload_0
      17: iconst_0
      18: invokevirtual #18                 // Method releaseShared:(I)Z
      21: pop
      22: return
      23: aload_0
      24: iload_2
      25: iconst_2
      26: invokevirtual #19                 // Method compareAndSetState:(II)Z
      29: ifeq          56
      32: aload_0
      33: aload_1
      34: putfield      #11                 // Field exception:Ljava/lang/Throwable;
      37: aload_0
      38: aconst_null
      39: putfield      #14                 // Field result:Ljava/lang/Object;
      42: aload_0
      43: iconst_0
      44: invokevirtual #18                 // Method releaseShared:(I)Z
      47: pop
      48: aload_0
      49: getfield      #2                  // Field future:Lorg/jgroups/blocks/executor/ExecutionService$DistributedFuture;
      52: invokevirtual #20                 // Method org/jgroups/blocks/executor/ExecutionService$DistributedFuture.done:()V
      55: return
      56: goto          0

  boolean innerCancel(boolean);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getState:()I
       4: istore_2
       5: iload_2
       6: invokestatic  #7                  // Method ranOrCancelled:(I)Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: iload_2
      16: iconst_4
      17: invokevirtual #19                 // Method compareAndSetState:(II)Z
      20: ifeq          26
      23: goto          29
      26: goto          0
      29: iload_1
      30: ifeq          46
      33: aload_0
      34: getfield      #5                  // Field runner:Ljava/lang/Thread;
      37: astore_2
      38: aload_2
      39: ifnull        46
      42: aload_2
      43: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V
      46: aload_0
      47: iconst_0
      48: invokevirtual #18                 // Method releaseShared:(I)Z
      51: pop
      52: aload_0
      53: getfield      #2                  // Field future:Lorg/jgroups/blocks/executor/ExecutionService$DistributedFuture;
      56: invokevirtual #20                 // Method org/jgroups/blocks/executor/ExecutionService$DistributedFuture.done:()V
      59: iconst_1
      60: ireturn

  void innerRun();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokevirtual #19                 // Method compareAndSetState:(II)Z
       6: ifne          10
       9: return
      10: aload_0
      11: invokestatic  #22                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      14: putfield      #5                  // Field runner:Ljava/lang/Thread;
      17: aload_0
      18: invokevirtual #6                  // Method getState:()I
      21: iconst_1
      22: if_icmpne     41
      25: aload_0
      26: aload_0
      27: getfield      #3                  // Field callable:Ljava/util/concurrent/Callable;
      30: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      35: invokevirtual #24                 // Method innerSet:(Ljava/lang/Object;)V
      38: goto          47
      41: aload_0
      42: iconst_0
      43: invokevirtual #18                 // Method releaseShared:(I)Z
      46: pop
      47: goto          56
      50: astore_1
      51: aload_0
      52: aload_1
      53: invokevirtual #26                 // Method innerSetException:(Ljava/lang/Throwable;)V
      56: return
    Exception table:
       from    to  target type
          10    47    50   Class java/lang/Throwable

  boolean innerRunAndReset();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokevirtual #19                 // Method compareAndSetState:(II)Z
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: invokestatic  #22                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      15: putfield      #5                  // Field runner:Ljava/lang/Thread;
      18: aload_0
      19: invokevirtual #6                  // Method getState:()I
      22: iconst_1
      23: if_icmpne     36
      26: aload_0
      27: getfield      #3                  // Field callable:Ljava/util/concurrent/Callable;
      30: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      35: pop
      36: aload_0
      37: aconst_null
      38: putfield      #5                  // Field runner:Ljava/lang/Thread;
      41: aload_0
      42: iconst_1
      43: iconst_0
      44: invokevirtual #19                 // Method compareAndSetState:(II)Z
      47: ireturn
      48: astore_1
      49: aload_0
      50: aload_1
      51: invokevirtual #26                 // Method innerSetException:(Ljava/lang/Throwable;)V
      54: iconst_0
      55: ireturn
    Exception table:
       from    to  target type
          11    47    48   Class java/lang/Throwable
}
