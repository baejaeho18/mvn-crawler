Compiled from "ForkProtocolStack.java"
public class org.jgroups.fork.ForkProtocolStack extends org.jgroups.stack.ProtocolStack {
  protected org.jgroups.Address local_addr;

  protected final java.lang.String fork_stack_id;

  protected final java.util.concurrent.ConcurrentMap<java.lang.String, org.jgroups.JChannel> fork_channels;

  protected final org.jgroups.fork.UnknownForkHandler unknownForkHandler;

  protected final java.util.List<org.jgroups.stack.Protocol> protocols;

  protected int inits;

  protected int connects;

  public org.jgroups.fork.ForkProtocolStack(org.jgroups.fork.UnknownForkHandler, java.util.List<org.jgroups.stack.Protocol>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jgroups/stack/ProtocolStack."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field fork_channels:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field unknownForkHandler:Lorg/jgroups/fork/UnknownForkHandler;
      20: aload_0
      21: aload_3
      22: putfield      #6                  // Field fork_stack_id:Ljava/lang/String;
      25: aload_0
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: aload_2
      31: ifnull        43
      34: aload_2
      35: invokeinterface #8,  1            // InterfaceMethod java/util/List.size:()I
      40: goto          44
      43: iconst_0
      44: invokespecial #9                  // Method java/util/ArrayList."<init>":(I)V
      47: putfield      #10                 // Field protocols:Ljava/util/List;
      50: aload_2
      51: ifnull        93
      54: aload_2
      55: invokeinterface #8,  1            // InterfaceMethod java/util/List.size:()I
      60: iconst_1
      61: isub
      62: istore        4
      64: iload         4
      66: iflt          93
      69: aload_0
      70: getfield      #10                 // Field protocols:Ljava/util/List;
      73: aload_2
      74: iload         4
      76: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      81: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      86: pop
      87: iinc          4, -1
      90: goto          64
      93: return

  public java.util.concurrent.ConcurrentMap<java.lang.String, org.jgroups.JChannel> getForkChannels();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fork_channels:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public org.jgroups.JChannel get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fork_channels:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class org/jgroups/JChannel
      13: areturn

  public org.jgroups.JChannel putIfAbsent(java.lang.String, org.jgroups.JChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fork_channels:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #15,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #14                 // class org/jgroups/JChannel
      14: areturn

  public void remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fork_channels:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public synchronized int getInits();
    Code:
       0: aload_0
       1: getfield      #17                 // Field inits:I
       4: ireturn

  public synchronized int getConnects();
    Code:
       0: aload_0
       1: getfield      #18                 // Field connects:I
       4: ireturn

  public java.lang.Object down(org.jgroups.Event);
    Code:
       0: aload_0
       1: getfield      #19                 // Field down_prot:Lorg/jgroups/stack/Protocol;
       4: aload_1
       5: invokevirtual #20                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
       8: areturn

  public void setLocalAddress(org.jgroups.Address);
    Code:
       0: aload_0
       1: getfield      #21                 // Field local_addr:Lorg/jgroups/Address;
       4: ifnull        23
       7: aload_1
       8: ifnull        23
      11: aload_0
      12: getfield      #21                 // Field local_addr:Lorg/jgroups/Address;
      15: aload_1
      16: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ifeq          23
      22: return
      23: aload_0
      24: aload_1
      25: putfield      #21                 // Field local_addr:Lorg/jgroups/Address;
      28: aload_0
      29: getfield      #19                 // Field down_prot:Lorg/jgroups/stack/Protocol;
      32: new           #23                 // class org/jgroups/Event
      35: dup
      36: bipush        8
      38: aload_1
      39: invokespecial #24                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      42: invokevirtual #20                 // Method org/jgroups/stack/Protocol.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      45: pop
      46: return

  public java.util.List<org.jgroups.stack.Protocol> getProtocols();
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #10                 // Field protocols:Ljava/util/List;
       8: invokespecial #25                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  public synchronized org.jgroups.fork.ForkProtocolStack incrInits();
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field inits:I
       5: iconst_1
       6: iadd
       7: putfield      #17                 // Field inits:I
      10: aload_0
      11: areturn

  public void init() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/jgroups/stack/ProtocolStack.init:()V
       4: return

  public synchronized void startStack(java.lang.String, org.jgroups.Address) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: getfield      #18                 // Field connects:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #18                 // Field connects:I
      11: iconst_1
      12: if_icmpne     21
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #27                 // Method org/jgroups/stack/ProtocolStack.startStack:(Ljava/lang/String;Lorg/jgroups/Address;)V
      21: return

  public synchronized void stopStack(java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: getfield      #18                 // Field connects:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #18                 // Field connects:I
      11: ifne          19
      14: aload_0
      15: aload_1
      16: invokespecial #28                 // Method org/jgroups/stack/ProtocolStack.stopStack:(Ljava/lang/String;)V
      19: return

  public synchronized void destroy();
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field inits:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #17                 // Field inits:I
      11: ifne          46
      14: aload_0
      15: invokespecial #29                 // Method org/jgroups/stack/ProtocolStack.destroy:()V
      18: aload_0
      19: getfield      #10                 // Field protocols:Ljava/util/List;
      22: invokeinterface #30,  1           // InterfaceMethod java/util/List.clear:()V
      27: aload_0
      28: ldc_w         #31                 // class org/jgroups/protocols/FORK
      31: invokevirtual #32                 // Method findProtocol:(Ljava/lang/Class;)Lorg/jgroups/stack/Protocol;
      34: checkcast     #31                 // class org/jgroups/protocols/FORK
      37: astore_1
      38: aload_1
      39: aload_0
      40: getfield      #6                  // Field fork_stack_id:Ljava/lang/String;
      43: invokevirtual #33                 // Method org/jgroups/protocols/FORK.remove:(Ljava/lang/String;)V
      46: return

  public java.lang.Object up(org.jgroups.Event);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method org/jgroups/Event.getType:()I
       4: lookupswitch  { // 2
                     1: 32
                     6: 112
               default: 160
          }
      32: aload_1
      33: invokevirtual #35                 // Method org/jgroups/Event.getArg:()Ljava/lang/Object;
      36: checkcast     #36                 // class org/jgroups/Message
      39: astore_2
      40: aload_2
      41: getstatic     #37                 // Field org/jgroups/protocols/FORK.ID:S
      44: invokevirtual #38                 // Method org/jgroups/Message.getHeader:(S)Lorg/jgroups/Header;
      47: checkcast     #39                 // class org/jgroups/protocols/FORK$ForkHeader
      50: astore_3
      51: aload_3
      52: ifnonnull     58
      55: goto          160
      58: aload_3
      59: invokevirtual #40                 // Method org/jgroups/protocols/FORK$ForkHeader.getForkChannelId:()Ljava/lang/String;
      62: astore        4
      64: aload         4
      66: ifnonnull     79
      69: new           #41                 // class java/lang/IllegalArgumentException
      72: dup
      73: ldc           #42                 // String header has a null fork_channel_id
      75: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: aload         4
      82: invokevirtual #44                 // Method get:(Ljava/lang/String;)Lorg/jgroups/JChannel;
      85: astore        5
      87: aload         5
      89: ifnonnull     105
      92: aload_0
      93: getfield      #5                  // Field unknownForkHandler:Lorg/jgroups/fork/UnknownForkHandler;
      96: aload_2
      97: aload         4
      99: invokeinterface #45,  3           // InterfaceMethod org/jgroups/fork/UnknownForkHandler.handleUnknownForkChannel:(Lorg/jgroups/Message;Ljava/lang/String;)Ljava/lang/Object;
     104: areturn
     105: aload         5
     107: aload_1
     108: invokevirtual #46                 // Method org/jgroups/JChannel.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     111: areturn
     112: aload_0
     113: getfield      #4                  // Field fork_channels:Ljava/util/concurrent/ConcurrentMap;
     116: invokeinterface #47,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     121: invokeinterface #48,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     126: astore        6
     128: aload         6
     130: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     135: ifeq          160
     138: aload         6
     140: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     145: checkcast     #14                 // class org/jgroups/JChannel
     148: astore        7
     150: aload         7
     152: aload_1
     153: invokevirtual #46                 // Method org/jgroups/JChannel.up:(Lorg/jgroups/Event;)Ljava/lang/Object;
     156: pop
     157: goto          128
     160: aconst_null
     161: areturn

  public void up(org.jgroups.util.MessageBatch);
    Code:
       0: new           #51                 // class java/util/HashMap
       3: dup
       4: invokespecial #52                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #53                 // Method org/jgroups/util/MessageBatch.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          115
      22: aload_3
      23: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #36                 // class org/jgroups/Message
      31: astore        4
      33: aload         4
      35: getstatic     #37                 // Field org/jgroups/protocols/FORK.ID:S
      38: invokevirtual #38                 // Method org/jgroups/Message.getHeader:(S)Lorg/jgroups/Header;
      41: checkcast     #39                 // class org/jgroups/protocols/FORK$ForkHeader
      44: astore        5
      46: aload         5
      48: ifnull        112
      51: aload_1
      52: aload         4
      54: invokevirtual #54                 // Method org/jgroups/util/MessageBatch.remove:(Lorg/jgroups/Message;)Lorg/jgroups/util/MessageBatch;
      57: pop
      58: aload_2
      59: aload         5
      61: invokevirtual #40                 // Method org/jgroups/protocols/FORK$ForkHeader.getForkChannelId:()Ljava/lang/String;
      64: invokeinterface #55,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #56                 // class java/util/List
      72: astore        6
      74: aload         6
      76: ifnonnull     102
      79: new           #7                  // class java/util/ArrayList
      82: dup
      83: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
      86: astore        6
      88: aload_2
      89: aload         5
      91: invokevirtual #40                 // Method org/jgroups/protocols/FORK$ForkHeader.getForkChannelId:()Ljava/lang/String;
      94: aload         6
      96: invokeinterface #58,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload         6
     104: aload         4
     106: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     111: pop
     112: goto          13
     115: aload_2
     116: invokeinterface #59,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     121: invokeinterface #60,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     126: astore_3
     127: aload_3
     128: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     133: ifeq          262
     136: aload_3
     137: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     142: checkcast     #61                 // class java/util/Map$Entry
     145: astore        4
     147: aload         4
     149: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     154: checkcast     #63                 // class java/lang/String
     157: astore        5
     159: aload         4
     161: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     166: checkcast     #56                 // class java/util/List
     169: astore        6
     171: aload_0
     172: aload         5
     174: invokevirtual #44                 // Method get:(Ljava/lang/String;)Lorg/jgroups/JChannel;
     177: astore        7
     179: aload         7
     181: ifnonnull     207
     184: aload_0
     185: getfield      #65                 // Field log:Lorg/jgroups/logging/Log;
     188: ldc           #66                 // String fork-channel for id=%s not found; discarding message
     190: iconst_1
     191: anewarray     #67                 // class java/lang/Object
     194: dup
     195: iconst_0
     196: aload         5
     198: aastore
     199: invokeinterface #68,  3           // InterfaceMethod org/jgroups/logging/Log.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     204: goto          127
     207: new           #69                 // class org/jgroups/util/MessageBatch
     210: dup
     211: aload_1
     212: invokevirtual #70                 // Method org/jgroups/util/MessageBatch.dest:()Lorg/jgroups/Address;
     215: aload_1
     216: invokevirtual #71                 // Method org/jgroups/util/MessageBatch.sender:()Lorg/jgroups/Address;
     219: aload_1
     220: invokevirtual #72                 // Method org/jgroups/util/MessageBatch.clusterName:()Lorg/jgroups/util/AsciiString;
     223: aload_1
     224: invokevirtual #73                 // Method org/jgroups/util/MessageBatch.multicast:()Z
     227: aload         6
     229: invokespecial #74                 // Method org/jgroups/util/MessageBatch."<init>":(Lorg/jgroups/Address;Lorg/jgroups/Address;Lorg/jgroups/util/AsciiString;ZLjava/util/Collection;)V
     232: astore        8
     234: aload         7
     236: aload         8
     238: invokevirtual #75                 // Method org/jgroups/JChannel.up:(Lorg/jgroups/util/MessageBatch;)V
     241: goto          259
     244: astore        9
     246: aload_0
     247: getfield      #65                 // Field log:Lorg/jgroups/logging/Log;
     250: ldc           #77                 // String failed passing up batch
     252: aload         9
     254: invokeinterface #78,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     259: goto          127
     262: aload_1
     263: invokevirtual #79                 // Method org/jgroups/util/MessageBatch.isEmpty:()Z
     266: ifne          277
     269: aload_0
     270: getfield      #80                 // Field up_prot:Lorg/jgroups/stack/Protocol;
     273: aload_1
     274: invokevirtual #81                 // Method org/jgroups/stack/Protocol.up:(Lorg/jgroups/util/MessageBatch;)V
     277: return
    Exception table:
       from    to  target type
         234   241   244   Class java/lang/Throwable
}
