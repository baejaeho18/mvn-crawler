Compiled from "HashedTimingWheel.java"
public class org.jgroups.util.HashedTimingWheel implements org.jgroups.util.TimeScheduler,java.lang.Runnable {
  private final java.util.concurrent.ThreadPoolExecutor pool;

  private java.lang.Thread runner;

  private final java.util.concurrent.locks.Lock lock;

  protected volatile boolean running;

  protected static final org.jgroups.logging.Log log;

  protected org.jgroups.util.ThreadFactory timer_thread_factory;

  protected int wheel_size;

  protected long tick_time;

  protected final long ROTATION_TIME;

  protected final java.util.List<org.jgroups.util.HashedTimingWheel$MyTask>[] wheel;

  protected int wheel_position;

  public org.jgroups.util.HashedTimingWheel();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field runner:Ljava/lang/Thread;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      17: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      25: aload_0
      26: sipush        200
      29: putfield      #7                  // Field wheel_size:I
      32: aload_0
      33: ldc2_w        #8                  // long 50l
      36: putfield      #10                 // Field tick_time:J
      39: aload_0
      40: iconst_0
      41: putfield      #11                 // Field wheel_position:I
      44: aload_0
      45: aload_0
      46: getfield      #7                  // Field wheel_size:I
      49: i2l
      50: aload_0
      51: getfield      #10                 // Field tick_time:J
      54: lmul
      55: putfield      #12                 // Field ROTATION_TIME:J
      58: aload_0
      59: aload_0
      60: getfield      #7                  // Field wheel_size:I
      63: anewarray     #13                 // class java/util/List
      66: putfield      #14                 // Field wheel:[Ljava/util/List;
      69: aload_0
      70: new           #15                 // class java/util/concurrent/ThreadPoolExecutor
      73: dup
      74: iconst_4
      75: bipush        10
      77: ldc2_w        #16                 // long 5000l
      80: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      83: new           #19                 // class java/util/concurrent/LinkedBlockingQueue
      86: dup
      87: sipush        5000
      90: invokespecial #20                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      93: invokestatic  #21                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      96: new           #22                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
      99: dup
     100: invokespecial #23                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
     103: invokespecial #24                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
     106: putfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     109: aload_0
     110: invokevirtual #26                 // Method init:()V
     113: return

  public org.jgroups.util.HashedTimingWheel(org.jgroups.util.ThreadFactory, int, int, long, int, int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field runner:Ljava/lang/Thread;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      17: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      25: aload_0
      26: sipush        200
      29: putfield      #7                  // Field wheel_size:I
      32: aload_0
      33: ldc2_w        #8                  // long 50l
      36: putfield      #10                 // Field tick_time:J
      39: aload_0
      40: iconst_0
      41: putfield      #11                 // Field wheel_position:I
      44: aload_0
      45: iload         7
      47: putfield      #7                  // Field wheel_size:I
      50: aload_0
      51: lload         8
      53: putfield      #10                 // Field tick_time:J
      56: aload_0
      57: iload         7
      59: i2l
      60: lload         8
      62: lmul
      63: putfield      #12                 // Field ROTATION_TIME:J
      66: aload_0
      67: aload_0
      68: getfield      #7                  // Field wheel_size:I
      71: anewarray     #13                 // class java/util/List
      74: putfield      #14                 // Field wheel:[Ljava/util/List;
      77: aload_0
      78: aload_1
      79: putfield      #6                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      82: aload_0
      83: new           #15                 // class java/util/concurrent/ThreadPoolExecutor
      86: dup
      87: iload_2
      88: iload_3
      89: lload         4
      91: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      94: new           #19                 // class java/util/concurrent/LinkedBlockingQueue
      97: dup
      98: iload         6
     100: invokespecial #20                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
     103: aload_1
     104: new           #22                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
     107: dup
     108: invokespecial #23                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
     111: invokespecial #24                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
     114: putfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     117: aload_0
     118: invokevirtual #26                 // Method init:()V
     121: return

  public org.jgroups.util.HashedTimingWheel(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field runner:Ljava/lang/Thread;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      17: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      25: aload_0
      26: sipush        200
      29: putfield      #7                  // Field wheel_size:I
      32: aload_0
      33: ldc2_w        #8                  // long 50l
      36: putfield      #10                 // Field tick_time:J
      39: aload_0
      40: iconst_0
      41: putfield      #11                 // Field wheel_position:I
      44: aload_0
      45: aload_0
      46: getfield      #7                  // Field wheel_size:I
      49: i2l
      50: aload_0
      51: getfield      #10                 // Field tick_time:J
      54: lmul
      55: putfield      #12                 // Field ROTATION_TIME:J
      58: aload_0
      59: aload_0
      60: getfield      #7                  // Field wheel_size:I
      63: anewarray     #13                 // class java/util/List
      66: checkcast     #27                 // class "[Ljava/util/List;"
      69: putfield      #14                 // Field wheel:[Ljava/util/List;
      72: aload_0
      73: new           #15                 // class java/util/concurrent/ThreadPoolExecutor
      76: dup
      77: iload_1
      78: iload_1
      79: iconst_2
      80: imul
      81: ldc2_w        #16                 // long 5000l
      84: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      87: new           #19                 // class java/util/concurrent/LinkedBlockingQueue
      90: dup
      91: sipush        5000
      94: invokespecial #20                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      97: invokestatic  #21                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
     100: new           #22                 // class java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy
     103: dup
     104: invokespecial #23                 // Method java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy."<init>":()V
     107: invokespecial #24                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
     110: putfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
     113: aload_0
     114: invokevirtual #26                 // Method init:()V
     117: return

  public void setThreadFactory(org.jgroups.util.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: aload_1
       5: invokevirtual #28                 // Method java/util/concurrent/ThreadPoolExecutor.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V
       8: return

  public int getMinThreads();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #29                 // Method java/util/concurrent/ThreadPoolExecutor.getCorePoolSize:()I
       7: ireturn

  public void setMinThreads(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #30                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
       8: return

  public int getMaxThreads();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #31                 // Method java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize:()I
       7: ireturn

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: iload_1
       5: invokevirtual #32                 // Method java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize:(I)V
       8: return

  public long getKeepAliveTime();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       7: invokevirtual #33                 // Method java/util/concurrent/ThreadPoolExecutor.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J
      10: lreturn

  public void setKeepAliveTime(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: lload_1
       5: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #34                 // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public int getCurrentThreads();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #35                 // Method java/util/concurrent/ThreadPoolExecutor.getPoolSize:()I
       7: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #36                 // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
       7: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      12: ireturn

  public java.lang.String dumpTimerTasks();
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      12: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      17: aload_0
      18: getfield      #14                 // Field wheel:[Ljava/util/List;
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     68
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload         5
      42: invokeinterface #41,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      47: ifne          62
      50: aload_1
      51: aload         5
      53: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: ldc           #43                 // String \n
      58: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: iinc          4, 1
      65: goto          28
      68: aload_0
      69: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      72: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      77: goto          94
      80: astore        6
      82: aload_0
      83: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      86: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      91: aload         6
      93: athrow
      94: aload_1
      95: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: areturn
    Exception table:
       from    to  target type
          17    68    80   any
          80    82    80   any

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokevirtual #47                 // Method schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
       9: pop
      10: return

  public java.util.concurrent.Future<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #48                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #49                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #50                 // Method isShutdown:()Z
      16: ifne          26
      19: aload_0
      20: getfield      #51                 // Field running:Z
      23: ifne          28
      26: aconst_null
      27: areturn
      28: aconst_null
      29: astore        5
      31: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      34: lload_2
      35: aload         4
      37: invokevirtual #52                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      40: lstore        6
      42: aload_0
      43: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      51: lconst_1
      52: lload         6
      54: aload_0
      55: getfield      #12                 // Field ROTATION_TIME:J
      58: lrem
      59: aload_0
      60: getfield      #10                 // Field tick_time:J
      63: ldiv
      64: invokestatic  #53                 // Method java/lang/Math.max:(JJ)J
      67: l2i
      68: istore        8
      70: aload_0
      71: getfield      #11                 // Field wheel_position:I
      74: iload         8
      76: iadd
      77: aload_0
      78: getfield      #7                  // Field wheel_size:I
      81: irem
      82: istore        9
      84: lload         6
      86: aload_0
      87: getfield      #12                 // Field ROTATION_TIME:J
      90: ldiv
      91: l2i
      92: istore        10
      94: aload_0
      95: getfield      #14                 // Field wheel:[Ljava/util/List;
      98: iload         9
     100: aaload
     101: astore        11
     103: new           #54                 // class org/jgroups/util/HashedTimingWheel$MyTask
     106: dup
     107: aload_1
     108: iload         10
     110: invokespecial #55                 // Method org/jgroups/util/HashedTimingWheel$MyTask."<init>":(Ljava/lang/Runnable;I)V
     113: astore        5
     115: aload         11
     117: aload         5
     119: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload_0
     126: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     129: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     134: goto          151
     137: astore        12
     139: aload_0
     140: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     143: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     148: aload         12
     150: athrow
     151: aload         5
     153: areturn
    Exception table:
       from    to  target type
          51   125   137   any
         137   139   137   any

  public java.util.concurrent.Future<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #48                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #49                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #50                 // Method isShutdown:()Z
      16: ifne          26
      19: aload_0
      20: getfield      #51                 // Field running:Z
      23: ifne          28
      26: aconst_null
      27: areturn
      28: new           #57                 // class org/jgroups/util/HashedTimingWheel$FixedIntervalTask
      31: dup
      32: aload_0
      33: aload_1
      34: lload         4
      36: invokespecial #58                 // Method org/jgroups/util/HashedTimingWheel$FixedIntervalTask."<init>":(Lorg/jgroups/util/HashedTimingWheel;Ljava/lang/Runnable;J)V
      39: astore        7
      41: aload         7
      43: lload_2
      44: invokevirtual #59                 // Method org/jgroups/util/HashedTimingWheel$RecurringTask.doSchedule:(J)V
      47: aload         7
      49: areturn

  public java.util.concurrent.Future<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #48                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #49                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #50                 // Method isShutdown:()Z
      16: ifne          26
      19: aload_0
      20: getfield      #51                 // Field running:Z
      23: ifne          28
      26: aconst_null
      27: areturn
      28: new           #60                 // class org/jgroups/util/HashedTimingWheel$FixedRateTask
      31: dup
      32: aload_0
      33: aload_1
      34: lload         4
      36: invokespecial #61                 // Method org/jgroups/util/HashedTimingWheel$FixedRateTask."<init>":(Lorg/jgroups/util/HashedTimingWheel;Ljava/lang/Runnable;J)V
      39: astore        7
      41: aload         7
      43: lload_2
      44: invokevirtual #59                 // Method org/jgroups/util/HashedTimingWheel$RecurringTask.doSchedule:(J)V
      47: aload         7
      49: areturn

  public java.util.concurrent.Future<?> scheduleWithDynamicInterval(org.jgroups.util.TimeScheduler$Task);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #48                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #49                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #50                 // Method isShutdown:()Z
      16: ifne          26
      19: aload_0
      20: getfield      #51                 // Field running:Z
      23: ifne          28
      26: aconst_null
      27: areturn
      28: new           #62                 // class org/jgroups/util/HashedTimingWheel$DynamicIntervalTask
      31: dup
      32: aload_0
      33: aload_1
      34: invokespecial #63                 // Method org/jgroups/util/HashedTimingWheel$DynamicIntervalTask."<init>":(Lorg/jgroups/util/HashedTimingWheel;Lorg/jgroups/util/TimeScheduler$Task;)V
      37: astore_2
      38: aload_2
      39: invokevirtual #64                 // Method org/jgroups/util/HashedTimingWheel$RecurringTask.doSchedule:()V
      42: aload_2
      43: areturn

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       6: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      11: aload_0
      12: getfield      #14                 // Field wheel:[Ljava/util/List;
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     50
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: iload_1
      35: aload         5
      37: invokeinterface #65,  1           // InterfaceMethod java/util/List.size:()I
      42: iadd
      43: istore_1
      44: iinc          4, 1
      47: goto          22
      50: iload_1
      51: istore_2
      52: aload_0
      53: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      56: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: iload_2
      62: ireturn
      63: astore        6
      65: aload_0
      66: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      69: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      74: aload         6
      76: athrow
    Exception table:
       from    to  target type
          11    52    63   any
          63    65    63   any

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #67                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method stopRunner:()V
       4: aload_0
       5: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       8: invokevirtual #69                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      11: astore_1
      12: aload_1
      13: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          63
      28: aload_2
      29: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #73                 // class java/lang/Runnable
      37: astore_3
      38: aload_3
      39: instanceof    #74                 // class java/util/concurrent/Future
      42: ifeq          60
      45: aload_3
      46: checkcast     #74                 // class java/util/concurrent/Future
      49: astore        4
      51: aload         4
      53: iconst_1
      54: invokeinterface #75,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      59: pop
      60: goto          19
      63: aload_0
      64: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      67: invokevirtual #36                 // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      70: invokeinterface #76,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      75: aload_0
      76: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      79: ldc2_w        #77                 // long 3000l
      82: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      85: invokevirtual #79                 // Method java/util/concurrent/ThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      88: pop
      89: goto          93
      92: astore_2
      93: return
    Exception table:
       from    to  target type
          75    89    92   Class java/lang/InterruptedException

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #81                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
       7: ireturn

  public void run();
    Code:
       0: invokestatic  #82                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: lconst_0
       5: lstore        7
       7: aload_0
       8: getfield      #51                 // Field running:Z
      11: ifeq          69
      14: aload_0
      15: invokevirtual #83                 // Method _run:()V
      18: lload_1
      19: lload         7
      21: lconst_1
      22: ladd
      23: dup2
      24: lstore        7
      26: aload_0
      27: getfield      #10                 // Field tick_time:J
      30: lmul
      31: ladd
      32: lstore_3
      33: lconst_0
      34: lload_3
      35: invokestatic  #82                 // Method java/lang/System.currentTimeMillis:()J
      38: lsub
      39: invokestatic  #53                 // Method java/lang/Math.max:(JJ)J
      42: lstore        5
      44: lload         5
      46: invokestatic  #84                 // Method org/jgroups/util/Util.sleep:(J)V
      49: goto          7
      52: astore        9
      54: getstatic     #86                 // Field log:Lorg/jgroups/logging/Log;
      57: ldc           #87                 // String failed executing tasks(s)
      59: aload         9
      61: invokeinterface #88,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      66: goto          7
      69: return
    Exception table:
       from    to  target type
          14    49    52   Class java/lang/Throwable

  protected void _run();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: aload_0
      11: getfield      #11                 // Field wheel_position:I
      14: iconst_1
      15: iadd
      16: aload_0
      17: getfield      #7                  // Field wheel_size:I
      20: irem
      21: putfield      #11                 // Field wheel_position:I
      24: aload_0
      25: getfield      #14                 // Field wheel:[Ljava/util/List;
      28: aload_0
      29: getfield      #11                 // Field wheel_position:I
      32: aaload
      33: astore_1
      34: aload_1
      35: invokeinterface #41,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      40: ifeq          53
      43: aload_0
      44: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
      47: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      52: return
      53: aload_1
      54: invokeinterface #89,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore_2
      60: aload_2
      61: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          120
      69: aload_2
      70: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #54                 // class org/jgroups/util/HashedTimingWheel$MyTask
      78: astore_3
      79: aload_3
      80: invokevirtual #90                 // Method org/jgroups/util/HashedTimingWheel$MyTask.getAndDecrementRound:()I
      83: ifgt          117
      86: aload_0
      87: getfield      #25                 // Field pool:Ljava/util/concurrent/ThreadPoolExecutor;
      90: aload_3
      91: invokevirtual #91                 // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      94: goto          111
      97: astore        4
      99: getstatic     #86                 // Field log:Lorg/jgroups/logging/Log;
     102: ldc           #92                 // String failure submitting task to thread pool
     104: aload         4
     106: invokeinterface #88,  3           // InterfaceMethod org/jgroups/logging/Log.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     111: aload_2
     112: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.remove:()V
     117: goto          60
     120: aload_0
     121: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     124: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     129: goto          146
     132: astore        5
     134: aload_0
     135: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     138: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     143: aload         5
     145: athrow
     146: return
    Exception table:
       from    to  target type
          86    94    97   Class java/lang/Throwable
           9    43   132   any
          53   120   132   any
         132   134   132   any

  protected void init();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #14                 // Field wheel:[Ljava/util/List;
       7: arraylength
       8: if_icmpge     30
      11: aload_0
      12: getfield      #14                 // Field wheel:[Ljava/util/List;
      15: iload_1
      16: new           #94                 // class java/util/LinkedList
      19: dup
      20: invokespecial #95                 // Method java/util/LinkedList."<init>":()V
      23: aastore
      24: iinc          1, 1
      27: goto          2
      30: aload_0
      31: invokevirtual #96                 // Method startRunner:()V
      34: return

  protected void startRunner();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #51                 // Field running:Z
       5: aload_0
       6: aload_0
       7: getfield      #6                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      10: ifnull        28
      13: aload_0
      14: getfield      #6                  // Field timer_thread_factory:Lorg/jgroups/util/ThreadFactory;
      17: aload_0
      18: ldc           #97                 // String Timer runner
      20: invokeinterface #98,  3           // InterfaceMethod org/jgroups/util/ThreadFactory.newThread:(Ljava/lang/Runnable;Ljava/lang/String;)Ljava/lang/Thread;
      25: goto          38
      28: new           #99                 // class java/lang/Thread
      31: dup
      32: aload_0
      33: ldc           #97                 // String Timer runner
      35: invokespecial #100                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      38: putfield      #2                  // Field runner:Ljava/lang/Thread;
      41: aload_0
      42: getfield      #2                  // Field runner:Ljava/lang/Thread;
      45: invokevirtual #101                // Method java/lang/Thread.start:()V
      48: return

  protected void stopRunner();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: iconst_0
      11: putfield      #51                 // Field running:Z
      14: aload_0
      15: getfield      #14                 // Field wheel:[Ljava/util/List;
      18: astore_1
      19: aload_1
      20: arraylength
      21: istore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: iload_2
      26: if_icmpge     98
      29: aload_1
      30: iload_3
      31: aaload
      32: astore        4
      34: aload         4
      36: invokeinterface #41,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      41: ifne          92
      44: aload         4
      46: invokeinterface #70,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore        5
      53: aload         5
      55: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          85
      63: aload         5
      65: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #54                 // class org/jgroups/util/HashedTimingWheel$MyTask
      73: astore        6
      75: aload         6
      77: iconst_1
      78: invokevirtual #102                // Method org/jgroups/util/HashedTimingWheel$MyTask.cancel:(Z)Z
      81: pop
      82: goto          53
      85: aload         4
      87: invokeinterface #103,  1          // InterfaceMethod java/util/List.clear:()V
      92: iinc          3, 1
      95: goto          24
      98: aload_0
      99: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     102: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     107: goto          124
     110: astore        7
     112: aload_0
     113: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/Lock;
     116: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     121: aload         7
     123: athrow
     124: return
    Exception table:
       from    to  target type
           9    98   110   any
         110   112   110   any

  static {};
    Code:
       0: ldc_w         #104                // class org/jgroups/util/HashedTimingWheel
       3: invokestatic  #105                // Method org/jgroups/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/jgroups/logging/Log;
       6: putstatic     #86                 // Field log:Lorg/jgroups/logging/Log;
       9: return
}
