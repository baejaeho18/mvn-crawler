Compiled from "IBinaryType.java"
public interface org.eclipse.jdt.internal.compiler.env.IBinaryType extends org.eclipse.jdt.internal.compiler.env.IGenericType {
  public static final char[][] NoInterface;

  public static final org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] NoNestedType;

  public static final org.eclipse.jdt.internal.compiler.env.IBinaryField[] NoField;

  public static final org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] NoMethod;

  static {};
    Code:
       0: getstatic     #18                 // Field org/eclipse/jdt/core/compiler/CharOperation.NO_CHAR_CHAR:[[C
       3: putstatic     #23                 // Field NoInterface:[[C
       6: iconst_0
       7: anewarray     #25                 // class org/eclipse/jdt/internal/compiler/env/IBinaryNestedType
      10: putstatic     #27                 // Field NoNestedType:[Lorg/eclipse/jdt/internal/compiler/env/IBinaryNestedType;
      13: iconst_0
      14: anewarray     #29                 // class org/eclipse/jdt/internal/compiler/env/IBinaryField
      17: putstatic     #31                 // Field NoField:[Lorg/eclipse/jdt/internal/compiler/env/IBinaryField;
      20: iconst_0
      21: anewarray     #33                 // class org/eclipse/jdt/internal/compiler/env/IBinaryMethod
      24: putstatic     #35                 // Field NoMethod:[Lorg/eclipse/jdt/internal/compiler/env/IBinaryMethod;
      27: return

  public abstract org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation[] getAnnotations();

  public abstract org.eclipse.jdt.internal.compiler.env.IBinaryTypeAnnotation[] getTypeAnnotations();

  public abstract char[] getEnclosingMethod();

  public abstract char[] getEnclosingTypeName();

  public abstract org.eclipse.jdt.internal.compiler.env.IBinaryField[] getFields();

  public abstract char[] getGenericSignature();

  public abstract char[][] getInterfaceNames();

  public abstract org.eclipse.jdt.internal.compiler.env.IBinaryNestedType[] getMemberTypes();

  public abstract org.eclipse.jdt.internal.compiler.env.IBinaryMethod[] getMethods();

  public abstract char[][][] getMissingTypeNames();

  public abstract char[] getName();

  public abstract char[] getSourceName();

  public abstract char[] getSuperclassName();

  public abstract long getTagBits();

  public abstract boolean isAnonymous();

  public abstract boolean isLocal();

  public abstract boolean isMember();

  public abstract char[] sourceFileName();
}
