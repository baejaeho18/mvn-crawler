Compiled from "SwitchFlowContext.java"
public class org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext extends org.eclipse.jdt.internal.compiler.flow.FlowContext {
  public org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel;

  public org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnBreak;

  public org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext(org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method org/eclipse/jdt/internal/compiler/flow/FlowContext."<init>":(Lorg/eclipse/jdt/internal/compiler/flow/FlowContext;Lorg/eclipse/jdt/internal/compiler/ast/ASTNode;)V
       6: aload_0
       7: getstatic     #15                 // Field org/eclipse/jdt/internal/compiler/flow/FlowInfo.DEAD_END:Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      10: putfield      #20                 // Field initsOnBreak:Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      13: aload_0
      14: aload_3
      15: putfield      #22                 // Field breakLabel:Lorg/eclipse/jdt/internal/compiler/codegen/BranchLabel;
      18: iload         4
      20: ifeq          41
      23: aload_1
      24: getfield      #24                 // Field org/eclipse/jdt/internal/compiler/flow/FlowContext.conditionalLevel:I
      27: iconst_m1
      28: if_icmple     41
      31: aload_0
      32: dup
      33: getfield      #28                 // Field conditionalLevel:I
      36: iconst_1
      37: iadd
      38: putfield      #28                 // Field conditionalLevel:I
      41: return

  public org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel();
    Code:
       0: aload_0
       1: getfield      #22                 // Field breakLabel:Lorg/eclipse/jdt/internal/compiler/codegen/BranchLabel;
       4: areturn

  public java.lang.String individualToString();
    Code:
       0: new           #47                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #49                 // String Switch flow context
       6: invokespecial #51                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: ldc           #54                 // String [initsOnBreak -
      13: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: aload_0
      17: getfield      #20                 // Field initsOnBreak:Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      20: invokevirtual #60                 // Method org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.toString:()Ljava/lang/String;
      23: invokevirtual #56                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: bipush        93
      28: invokevirtual #65                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      31: pop
      32: aload_1
      33: invokevirtual #68                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      36: areturn

  public boolean isBreakable();
    Code:
       0: iconst_1
       1: ireturn

  public void recordBreakFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo);
    Code:
       0: aload_0
       1: getfield      #20                 // Field initsOnBreak:Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
       4: getfield      #75                 // Field org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.tagBits:I
       7: iconst_1
       8: iand
       9: ifne          30
      12: aload_0
      13: aload_0
      14: getfield      #20                 // Field initsOnBreak:Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      17: aload_1
      18: invokevirtual #78                 // Method org/eclipse/jdt/internal/compiler/flow/FlowInfo.unconditionalInits:()Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      21: invokevirtual #82                 // Method org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.mergedWith:(Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;)Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      24: putfield      #20                 // Field initsOnBreak:Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      27: goto          38
      30: aload_0
      31: aload_1
      32: invokevirtual #86                 // Method org/eclipse/jdt/internal/compiler/flow/FlowInfo.unconditionalCopy:()Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      35: putfield      #20                 // Field initsOnBreak:Lorg/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo;
      38: return
}
