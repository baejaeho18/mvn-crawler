Compiled from "RangeUtil.java"
class org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil$RangeResult {
  private static final int INITIAL_SIZE;

  int pos;

  int[] intervalStarts;

  int[] intervalEnds;

  int[] intervalFlags;

  org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil$RangeResult();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #19                 // Field pos:I
       9: aload_0
      10: bipush        10
      12: newarray       int
      14: putfield      #21                 // Field intervalStarts:[I
      17: aload_0
      18: bipush        10
      20: newarray       int
      22: putfield      #23                 // Field intervalEnds:[I
      25: aload_0
      26: bipush        10
      28: newarray       int
      30: putfield      #25                 // Field intervalFlags:[I
      33: return

  void addInterval(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokevirtual #33                 // Method addInterval:(III)V
       7: return

  void addInterval(int, int, int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field pos:I
       4: aload_0
       5: getfield      #21                 // Field intervalStarts:[I
       8: arraylength
       9: if_icmplt     90
      12: aload_0
      13: getfield      #21                 // Field intervalStarts:[I
      16: iconst_0
      17: aload_0
      18: aload_0
      19: getfield      #19                 // Field pos:I
      22: iconst_2
      23: imul
      24: newarray       int
      26: dup_x1
      27: putfield      #21                 // Field intervalStarts:[I
      30: iconst_0
      31: aload_0
      32: getfield      #19                 // Field pos:I
      35: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_0
      39: getfield      #23                 // Field intervalEnds:[I
      42: iconst_0
      43: aload_0
      44: aload_0
      45: getfield      #19                 // Field pos:I
      48: iconst_2
      49: imul
      50: newarray       int
      52: dup_x1
      53: putfield      #23                 // Field intervalEnds:[I
      56: iconst_0
      57: aload_0
      58: getfield      #19                 // Field pos:I
      61: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      64: aload_0
      65: getfield      #25                 // Field intervalFlags:[I
      68: iconst_0
      69: aload_0
      70: aload_0
      71: getfield      #19                 // Field pos:I
      74: iconst_2
      75: imul
      76: newarray       int
      78: dup_x1
      79: putfield      #25                 // Field intervalFlags:[I
      82: iconst_0
      83: aload_0
      84: getfield      #19                 // Field pos:I
      87: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      90: aload_0
      91: getfield      #21                 // Field intervalStarts:[I
      94: aload_0
      95: getfield      #19                 // Field pos:I
      98: iload_1
      99: iastore
     100: aload_0
     101: getfield      #23                 // Field intervalEnds:[I
     104: aload_0
     105: getfield      #19                 // Field pos:I
     108: iload_2
     109: iastore
     110: aload_0
     111: getfield      #25                 // Field intervalFlags:[I
     114: aload_0
     115: getfield      #19                 // Field pos:I
     118: iload_3
     119: iastore
     120: aload_0
     121: dup
     122: getfield      #19                 // Field pos:I
     125: iconst_1
     126: iadd
     127: putfield      #19                 // Field pos:I
     130: return

  int[][] getRanges();
    Code:
       0: aload_0
       1: getfield      #19                 // Field pos:I
       4: newarray       int
       6: astore_1
       7: aload_0
       8: getfield      #19                 // Field pos:I
      11: newarray       int
      13: astore_2
      14: aload_0
      15: getfield      #19                 // Field pos:I
      18: newarray       int
      20: astore_3
      21: aload_0
      22: getfield      #21                 // Field intervalStarts:[I
      25: iconst_0
      26: aload_1
      27: iconst_0
      28: aload_0
      29: getfield      #19                 // Field pos:I
      32: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: aload_0
      36: getfield      #23                 // Field intervalEnds:[I
      39: iconst_0
      40: aload_2
      41: iconst_0
      42: aload_0
      43: getfield      #19                 // Field pos:I
      46: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: aload_0
      50: getfield      #25                 // Field intervalFlags:[I
      53: iconst_0
      54: aload_3
      55: iconst_0
      56: aload_0
      57: getfield      #19                 // Field pos:I
      60: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: aload_1
      64: arraylength
      65: iconst_1
      66: if_icmple     81
      69: aload_0
      70: aload_1
      71: aload_2
      72: aload_3
      73: iconst_0
      74: aload_1
      75: arraylength
      76: iconst_1
      77: isub
      78: invokespecial #48                 // Method quickSort:([I[I[III)V
      81: iconst_3
      82: anewarray     #52                 // class "[I"
      85: dup
      86: iconst_0
      87: aload_1
      88: aastore
      89: dup
      90: iconst_1
      91: aload_2
      92: aastore
      93: dup
      94: iconst_2
      95: aload_3
      96: aastore
      97: areturn

  private void quickSort(int[], int[], int[], int, int);
    Code:
       0: iload         4
       2: istore        6
       4: iload         5
       6: istore        7
       8: aload_1
       9: iload         4
      11: iload         5
      13: iload         4
      15: isub
      16: iconst_2
      17: idiv
      18: iadd
      19: iaload
      20: istore        8
      22: goto          28
      25: iinc          4, 1
      28: aload_0
      29: aload_1
      30: iload         4
      32: iaload
      33: iload         8
      35: invokespecial #56                 // Method compare:(II)I
      38: iflt          25
      41: goto          47
      44: iinc          5, -1
      47: aload_0
      48: iload         8
      50: aload_1
      51: iload         5
      53: iaload
      54: invokespecial #56                 // Method compare:(II)I
      57: iflt          44
      60: iload         4
      62: iload         5
      64: if_icmpgt     133
      67: aload_1
      68: iload         4
      70: iaload
      71: istore        9
      73: aload_1
      74: iload         4
      76: aload_1
      77: iload         5
      79: iaload
      80: iastore
      81: aload_1
      82: iload         5
      84: iload         9
      86: iastore
      87: aload_2
      88: iload         4
      90: iaload
      91: istore        9
      93: aload_2
      94: iload         4
      96: aload_2
      97: iload         5
      99: iaload
     100: iastore
     101: aload_2
     102: iload         5
     104: iload         9
     106: iastore
     107: aload_3
     108: iload         4
     110: iaload
     111: istore        9
     113: aload_3
     114: iload         4
     116: aload_3
     117: iload         5
     119: iaload
     120: iastore
     121: aload_3
     122: iload         5
     124: iload         9
     126: iastore
     127: iinc          4, 1
     130: iinc          5, -1
     133: iload         4
     135: iload         5
     137: if_icmple     28
     140: iload         6
     142: iload         5
     144: if_icmpge     158
     147: aload_0
     148: aload_1
     149: aload_2
     150: aload_3
     151: iload         6
     153: iload         5
     155: invokespecial #48                 // Method quickSort:([I[I[III)V
     158: iload         4
     160: iload         7
     162: if_icmpge     176
     165: aload_0
     166: aload_1
     167: aload_2
     168: aload_3
     169: iload         4
     171: iload         7
     173: invokespecial #48                 // Method quickSort:([I[I[III)V
     176: return

  private int compare(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: isub
       3: ireturn
}
