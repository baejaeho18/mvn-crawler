Compiled from "EclipseFileObject.java"
public class org.eclipse.jdt.internal.compiler.tool.EclipseFileObject extends javax.tools.SimpleJavaFileObject {
  private java.io.File f;

  private java.nio.charset.Charset charset;

  private boolean parentsExist;

  private static int[] $SWITCH_TABLE$javax$tools$JavaFileObject$Kind;

  public org.eclipse.jdt.internal.compiler.tool.EclipseFileObject(java.lang.String, java.net.URI, javax.tools.JavaFileObject$Kind, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #16                 // Method javax/tools/SimpleJavaFileObject."<init>":(Ljava/net/URI;Ljavax/tools/JavaFileObject$Kind;)V
       6: aload_0
       7: new           #19                 // class java/io/File
      10: dup
      11: aload_0
      12: getfield      #21                 // Field uri:Ljava/net/URI;
      15: invokespecial #25                 // Method java/io/File."<init>":(Ljava/net/URI;)V
      18: putfield      #28                 // Field f:Ljava/io/File;
      21: aload_0
      22: aload         4
      24: putfield      #30                 // Field charset:Ljava/nio/charset/Charset;
      27: aload_0
      28: iconst_0
      29: putfield      #32                 // Field parentsExist:Z
      32: return

  public javax.lang.model.element.Modifier getAccessLevel();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getKind:()Ljavax/tools/JavaFileObject$Kind;
       4: getstatic     #48                 // Field javax/tools/JavaFileObject$Kind.CLASS:Ljavax/tools/JavaFileObject$Kind;
       7: if_acmpeq     12
      10: aconst_null
      11: areturn
      12: aconst_null
      13: astore_1
      14: aload_0
      15: getfield      #28                 // Field f:Ljava/io/File;
      18: invokestatic  #53                 // Method org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.read:(Ljava/io/File;)Lorg/eclipse/jdt/internal/compiler/classfmt/ClassFileReader;
      21: astore_1
      22: goto          30
      25: pop
      26: goto          30
      29: pop
      30: aload_1
      31: ifnonnull     36
      34: aconst_null
      35: areturn
      36: aload_1
      37: invokevirtual #59                 // Method org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.accessFlags:()I
      40: istore_2
      41: iload_2
      42: iconst_1
      43: iand
      44: ifeq          51
      47: getstatic     #63                 // Field javax/lang/model/element/Modifier.PUBLIC:Ljavax/lang/model/element/Modifier;
      50: areturn
      51: iload_2
      52: sipush        1024
      55: iand
      56: ifeq          63
      59: getstatic     #69                 // Field javax/lang/model/element/Modifier.ABSTRACT:Ljavax/lang/model/element/Modifier;
      62: areturn
      63: iload_2
      64: bipush        16
      66: iand
      67: ifeq          74
      70: getstatic     #72                 // Field javax/lang/model/element/Modifier.FINAL:Ljavax/lang/model/element/Modifier;
      73: areturn
      74: aconst_null
      75: areturn
    Exception table:
       from    to  target type
          14    22    25   Class org/eclipse/jdt/internal/compiler/classfmt/ClassFormatException
          14    22    29   Class java/io/IOException

  public javax.lang.model.element.NestingKind getNestingKind();
    Code:
       0: invokestatic  #85                 // Method $SWITCH_TABLE$javax$tools$JavaFileObject$Kind:()[I
       3: aload_0
       4: getfield      #88                 // Field kind:Ljavax/tools/JavaFileObject$Kind;
       7: invokevirtual #90                 // Method javax/tools/JavaFileObject$Kind.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 2
                     1: 32
                     2: 36
               default: 97
          }
      32: getstatic     #93                 // Field javax/lang/model/element/NestingKind.TOP_LEVEL:Ljavax/lang/model/element/NestingKind;
      35: areturn
      36: aconst_null
      37: astore_1
      38: aload_0
      39: getfield      #28                 // Field f:Ljava/io/File;
      42: invokestatic  #53                 // Method org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.read:(Ljava/io/File;)Lorg/eclipse/jdt/internal/compiler/classfmt/ClassFileReader;
      45: astore_1
      46: goto          54
      49: pop
      50: goto          54
      53: pop
      54: aload_1
      55: ifnonnull     60
      58: aconst_null
      59: areturn
      60: aload_1
      61: invokevirtual #99                 // Method org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.isAnonymous:()Z
      64: ifeq          71
      67: getstatic     #103                // Field javax/lang/model/element/NestingKind.ANONYMOUS:Ljavax/lang/model/element/NestingKind;
      70: areturn
      71: aload_1
      72: invokevirtual #106                // Method org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.isLocal:()Z
      75: ifeq          82
      78: getstatic     #109                // Field javax/lang/model/element/NestingKind.LOCAL:Ljavax/lang/model/element/NestingKind;
      81: areturn
      82: aload_1
      83: invokevirtual #112                // Method org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.isMember:()Z
      86: ifeq          93
      89: getstatic     #115                // Field javax/lang/model/element/NestingKind.MEMBER:Ljavax/lang/model/element/NestingKind;
      92: areturn
      93: getstatic     #93                 // Field javax/lang/model/element/NestingKind.TOP_LEVEL:Ljavax/lang/model/element/NestingKind;
      96: areturn
      97: aconst_null
      98: areturn
    Exception table:
       from    to  target type
          38    46    49   Class org/eclipse/jdt/internal/compiler/classfmt/ClassFormatException
          38    46    53   Class java/io/IOException

  public boolean delete();
    Code:
       0: aload_0
       1: getfield      #28                 // Field f:Ljava/io/File;
       4: invokevirtual #119                // Method java/io/File.delete:()Z
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #1                  // class org/eclipse/jdt/internal/compiler/tool/EclipseFileObject
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #1                  // class org/eclipse/jdt/internal/compiler/tool/EclipseFileObject
      13: astore_2
      14: aload_2
      15: invokevirtual #123                // Method toUri:()Ljava/net/URI;
      18: aload_0
      19: getfield      #21                 // Field uri:Ljava/net/URI;
      22: invokevirtual #127                // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public java.lang.CharSequence getCharContent(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #28                 // Field f:Ljava/io/File;
       6: invokestatic  #137                // Method org/eclipse/jdt/internal/compiler/util/Util.getFileByteContent:(Ljava/io/File;)[B
       9: aload_0
      10: getfield      #30                 // Field charset:Ljava/nio/charset/Charset;
      13: invokevirtual #143                // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      16: invokestatic  #149                // Method org/eclipse/jdt/internal/compiler/tool/Util.getCharContents:(Ljavax/tools/FileObject;Z[BLjava/lang/String;)Ljava/lang/CharSequence;
      19: areturn

  public long getLastModified();
    Code:
       0: aload_0
       1: getfield      #28                 // Field f:Ljava/io/File;
       4: invokevirtual #158                // Method java/io/File.lastModified:()J
       7: lreturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #28                 // Field f:Ljava/io/File;
       4: invokevirtual #162                // Method java/io/File.getPath:()Ljava/lang/String;
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #28                 // Field f:Ljava/io/File;
       4: invokevirtual #166                // Method java/io/File.hashCode:()I
       7: ireturn

  public java.io.InputStream openInputStream() throws java.io.IOException;
    Code:
       0: new           #170                // class java/io/FileInputStream
       3: dup
       4: aload_0
       5: getfield      #28                 // Field f:Ljava/io/File;
       8: invokespecial #172                // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      11: areturn

  public java.io.OutputStream openOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #177                // Method ensureParentDirectoriesExist:()V
       4: new           #181                // class java/io/FileOutputStream
       7: dup
       8: aload_0
       9: getfield      #28                 // Field f:Ljava/io/File;
      12: invokespecial #183                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      15: areturn

  public java.io.Reader openReader(boolean) throws java.io.IOException;
    Code:
       0: new           #186                // class java/io/FileReader
       3: dup
       4: aload_0
       5: getfield      #28                 // Field f:Ljava/io/File;
       8: invokespecial #188                // Method java/io/FileReader."<init>":(Ljava/io/File;)V
      11: areturn

  public java.io.Writer openWriter() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #177                // Method ensureParentDirectoriesExist:()V
       4: new           #191                // class java/io/FileWriter
       7: dup
       8: aload_0
       9: getfield      #28                 // Field f:Ljava/io/File;
      12: invokespecial #193                // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
      15: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #28                 // Field f:Ljava/io/File;
       4: invokevirtual #195                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       7: areturn

  private void ensureParentDirectoriesExist() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field parentsExist:Z
       4: ifne          79
       7: aload_0
       8: getfield      #28                 // Field f:Ljava/io/File;
      11: invokevirtual #198                // Method java/io/File.getParentFile:()Ljava/io/File;
      14: astore_1
      15: aload_1
      16: ifnull        74
      19: aload_1
      20: invokevirtual #202                // Method java/io/File.exists:()Z
      23: ifne          74
      26: aload_1
      27: invokevirtual #205                // Method java/io/File.mkdirs:()Z
      30: ifne          74
      33: aload_1
      34: invokevirtual #202                // Method java/io/File.exists:()Z
      37: ifeq          47
      40: aload_1
      41: invokevirtual #208                // Method java/io/File.isDirectory:()Z
      44: ifne          74
      47: new           #77                 // class java/io/IOException
      50: dup
      51: new           #211                // class java/lang/StringBuilder
      54: dup
      55: ldc           #213                // String Unable to create parent directories for
      57: invokespecial #215                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      60: aload_0
      61: getfield      #28                 // Field f:Ljava/io/File;
      64: invokevirtual #218                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #222                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #224                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: iconst_1
      76: putfield      #32                 // Field parentsExist:Z
      79: return

  static int[] $SWITCH_TABLE$javax$tools$JavaFileObject$Kind();
    Code:
       0: getstatic     #226                // Field $SWITCH_TABLE$javax$tools$JavaFileObject$Kind:[I
       3: dup
       4: ifnull        8
       7: areturn
       8: pop
       9: invokestatic  #228                // Method javax/tools/JavaFileObject$Kind.values:()[Ljavax/tools/JavaFileObject$Kind;
      12: arraylength
      13: newarray       int
      15: astore_0
      16: aload_0
      17: getstatic     #48                 // Field javax/tools/JavaFileObject$Kind.CLASS:Ljavax/tools/JavaFileObject$Kind;
      20: invokevirtual #90                 // Method javax/tools/JavaFileObject$Kind.ordinal:()I
      23: iconst_2
      24: iastore
      25: goto          29
      28: pop
      29: aload_0
      30: getstatic     #232                // Field javax/tools/JavaFileObject$Kind.HTML:Ljavax/tools/JavaFileObject$Kind;
      33: invokevirtual #90                 // Method javax/tools/JavaFileObject$Kind.ordinal:()I
      36: iconst_3
      37: iastore
      38: goto          42
      41: pop
      42: aload_0
      43: getstatic     #235                // Field javax/tools/JavaFileObject$Kind.OTHER:Ljavax/tools/JavaFileObject$Kind;
      46: invokevirtual #90                 // Method javax/tools/JavaFileObject$Kind.ordinal:()I
      49: iconst_4
      50: iastore
      51: goto          55
      54: pop
      55: aload_0
      56: getstatic     #238                // Field javax/tools/JavaFileObject$Kind.SOURCE:Ljavax/tools/JavaFileObject$Kind;
      59: invokevirtual #90                 // Method javax/tools/JavaFileObject$Kind.ordinal:()I
      62: iconst_1
      63: iastore
      64: goto          68
      67: pop
      68: aload_0
      69: dup
      70: putstatic     #226                // Field $SWITCH_TABLE$javax$tools$JavaFileObject$Kind:[I
      73: areturn
    Exception table:
       from    to  target type
          16    25    28   Class java/lang/NoSuchFieldError
          29    38    41   Class java/lang/NoSuchFieldError
          42    51    54   Class java/lang/NoSuchFieldError
          55    64    67   Class java/lang/NoSuchFieldError
}
