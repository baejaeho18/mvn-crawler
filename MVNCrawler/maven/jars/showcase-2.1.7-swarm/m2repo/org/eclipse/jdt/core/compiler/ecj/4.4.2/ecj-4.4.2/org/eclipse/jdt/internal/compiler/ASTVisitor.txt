Compiled from "ASTVisitor.java"
public abstract class org.eclipse.jdt.internal.compiler.ASTVisitor {
  public org.eclipse.jdt.internal.compiler.ASTVisitor();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  public void acceptProblem(org.eclipse.jdt.core.compiler.IProblem);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.AllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.AssertStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Assignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.BinaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Block, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.BreakStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.CaseStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.CastExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.CharLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Clinit, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ContinueStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.DoStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.DoubleLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.EmptyStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.EqualExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.FalseLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.lookup.MethodScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.FloatLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ForeachStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ForStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.IfStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ImportReference, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Initializer, org.eclipse.jdt.internal.compiler.lookup.MethodScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.IntLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.LabeledStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.LongLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.MemberValuePair, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.MemberValuePair, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.NullLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.PostfixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.PrefixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.StringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SwitchStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ThrowStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.TrueLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.TryStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.UnaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.UnionTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.UnionTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.WhileStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.LambdaExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.ReferenceExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: return

  public void endVisit(org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: return

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.AllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayInitializer, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.AssertStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Assignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.BinaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Block, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.BreakStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.CaseStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.CastExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.CharLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Clinit, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ContinueStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.DoStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.DoubleLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.EmptyStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.EqualExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.FalseLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.lookup.MethodScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.FloatLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ForeachStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ForStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.IfStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ImportReference, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Initializer, org.eclipse.jdt.internal.compiler.lookup.MethodScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.IntLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Javadoc, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.LabeledStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.LongLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.MemberValuePair, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.MemberValuePair, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.NullLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.PostfixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.PrefixExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ReturnStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.StringLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SuperReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SwitchStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ThisReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ThrowStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.TrueLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.TryStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.UnaryExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.UnionTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.UnionTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.WhileStatement, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.Wildcard, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.LambdaExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.ReferenceExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
    Code:
       0: iconst_1
       1: ireturn

  public boolean visit(org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope);
    Code:
       0: iconst_1
       1: ireturn
}
