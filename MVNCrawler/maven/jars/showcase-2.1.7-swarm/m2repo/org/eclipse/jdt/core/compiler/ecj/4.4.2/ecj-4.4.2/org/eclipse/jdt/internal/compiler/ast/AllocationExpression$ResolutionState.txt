Compiled from "AllocationExpression.java"
class org.eclipse.jdt.internal.compiler.ast.AllocationExpression$ResolutionState {
  org.eclipse.jdt.internal.compiler.lookup.BlockScope scope;

  boolean isDiamond;

  boolean diamondNeedsDeferring;

  boolean argsContainCast;

  boolean cannotInferDiamond;

  org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] argumentTypes;

  boolean hasReportedError;

  final org.eclipse.jdt.internal.compiler.ast.AllocationExpression this$0;

  org.eclipse.jdt.internal.compiler.ast.AllocationExpression$ResolutionState(org.eclipse.jdt.internal.compiler.ast.AllocationExpression, org.eclipse.jdt.internal.compiler.lookup.BlockScope, boolean, boolean, boolean, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field this$0:Lorg/eclipse/jdt/internal/compiler/ast/AllocationExpression;
       5: aload_0
       6: invokespecial #22                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #25                 // Field scope:Lorg/eclipse/jdt/internal/compiler/lookup/BlockScope;
      14: aload_0
      15: iload_3
      16: putfield      #27                 // Field isDiamond:Z
      19: aload_0
      20: iload         4
      22: putfield      #29                 // Field diamondNeedsDeferring:Z
      25: aload_0
      26: iload         5
      28: putfield      #31                 // Field argsContainCast:Z
      31: aload_0
      32: aload         6
      34: putfield      #33                 // Field argumentTypes:[Lorg/eclipse/jdt/internal/compiler/lookup/TypeBinding;
      37: return
}
