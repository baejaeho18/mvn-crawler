Compiled from "IIOPLogger.java"
public interface org.wildfly.iiop.openjdk.logging.IIOPLogger extends org.jboss.logging.BasicLogger {
  public static final org.wildfly.iiop.openjdk.logging.IIOPLogger ROOT_LOGGER;

  public abstract void activatingSubsystem();

  public abstract void failedToFetchCSIv2Policy(java.lang.Throwable);

  public abstract void caughtExceptionEncodingGSSUPMechOID(java.lang.Throwable);

  public abstract void logInternalError(java.lang.Exception);

  public abstract void failedToCreateNamingContext(java.lang.Exception);

  public abstract void failedToUnbindObject(java.lang.Object);

  public abstract void failedToObtainJSSEDomain(java.lang.String);

  public abstract void corbaNamingServiceStarted();

  public abstract void corbaORBServiceStarted();

  public abstract void warnClassDescDoesNotConformToSpec();

  public abstract void warnCouldNotDeactivateIRObject(java.lang.Throwable);

  public abstract void warnCouldNotDeactivateAnonIRObject(java.lang.Throwable);

  public abstract org.jboss.as.controller.OperationFailedException noSecurityDomainSpecified();

  public abstract java.lang.RuntimeException unexpectedException(java.lang.Throwable);

  public abstract org.omg.CORBA.NO_PERMISSION unexpectedContextErrorInSASReply(int, org.omg.CORBA.CompletionStatus);

  public abstract org.omg.CORBA.MARSHAL errorParsingSASReply(java.lang.Exception, int, org.omg.CORBA.CompletionStatus);

  public abstract java.lang.RuntimeException errorRegisteringSASCurrentInitRef(java.lang.Throwable);

  public abstract org.omg.CORBA.NO_PERMISSION missingSASContext();

  public abstract org.omg.CORBA.NO_PERMISSION errorDecodingInitContextToken();

  public abstract org.omg.CORBA.NO_PERMISSION errorDecodingTargetInContextToken();

  public abstract org.omg.CORBA.NO_PERMISSION errorDecodingPrincipalName();

  public abstract java.lang.RuntimeException errorDecodingContextData(java.lang.String, java.lang.Throwable);

  public abstract java.lang.IllegalArgumentException illegalBatchSize(java.lang.String);

  public abstract javax.naming.NamingException errorGettingBindingList();

  public abstract javax.naming.NamingException errorGeneratingObjectViaFactory();

  public abstract javax.naming.ConfigurationException errorConstructingCNCtx();

  public abstract javax.naming.ConfigurationException notANamingContext(java.lang.String);

  public abstract javax.naming.ConfigurationException errorConvertingIORToNamingCtx(java.lang.String);

  public abstract javax.naming.ConfigurationException errorResolvingNSInitRef();

  public abstract javax.naming.NamingException cosNamingNotRegisteredCorrectly();

  public abstract javax.naming.NamingException errorConnectingToORB();

  public abstract javax.naming.NamingException invalidURLOrIOR(java.lang.String);

  public abstract javax.naming.NamingException invalidObjectReference(java.lang.String);

  public abstract javax.naming.ConfigurationException urlDoesNotContainIOR(java.lang.String);

  public abstract java.lang.IllegalArgumentException notACorbaObject();

  public abstract javax.naming.NamingException noReferenceFound();

  public abstract javax.naming.InvalidNameException invalidEmptyName();

  public abstract javax.naming.InvalidNameException unescapedCharacter(java.lang.String);

  public abstract javax.naming.InvalidNameException invalidEscapedCharacter(java.lang.String);

  public abstract java.net.MalformedURLException invalidURL(java.lang.String, java.lang.String);

  public abstract javax.naming.ConfigurationException problemInvokingPortableRemoteObjectToStub();

  public abstract javax.naming.ConfigurationException cannotInvokePortableRemoteObjectToStub();

  public abstract java.lang.IllegalStateException noMethodDefForPortableRemoteObjectToStub();

  public abstract javax.naming.ConfigurationException problemInvokingStubConnect();

  public abstract javax.naming.ConfigurationException cannotInvokeStubConnect();

  public abstract java.lang.IllegalStateException noMethodDefForStubConnect();

  public abstract java.net.MalformedURLException invalidIIOPURLVersion(java.lang.String);

  public abstract javax.naming.ConfigurationException unavailableRMIPackages();

  public abstract java.net.MalformedURLException unavailableISOLatin1Decoder();

  public abstract java.net.MalformedURLException invalidURIEncoding(java.lang.String);

  public abstract javax.naming.ConfigurationException failedToLookupJSSEDomain();

  public abstract java.io.IOException errorObtainingKeyManagers(java.lang.String);

  public abstract java.io.IOException failedToGetSSLContext(java.lang.Throwable);

  public abstract org.jboss.msc.service.StartException failedToStartJBossCOSNaming(java.lang.Throwable);

  public abstract java.lang.UnsupportedOperationException foreignTransaction();

  public abstract java.lang.RuntimeException errorEncodingContext(java.lang.Throwable);

  public abstract java.lang.RuntimeException errorGettingSlotInTxInterceptor(java.lang.Throwable);

  public abstract java.lang.RuntimeException errorSettingSlotInTxInterceptor(java.lang.Throwable);

  public abstract java.lang.IllegalArgumentException cannotAnalyzeNullClass();

  public abstract java.lang.IllegalArgumentException badConstantType(java.lang.String);

  public abstract java.lang.IllegalArgumentException cannotAnalyzeSpecialClass(java.lang.String);

  public abstract java.lang.IllegalArgumentException notAnAccessor(java.lang.String);

  public abstract java.lang.IllegalArgumentException notAnClassOrInterface(java.lang.String);

  public abstract java.lang.IllegalArgumentException notAnInterface(java.lang.String);

  public abstract java.lang.IllegalArgumentException notAPrimitive(java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.RMIIIOPViolationException badRMIIIOPConstantType(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.RMIIIOPViolationException badRMIIIOPExceptionType(java.lang.String, java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.RMIIIOPViolationException badRMIIIOPMethodSignature(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException nameCannotBeNullEmptyOrQualified();

  public abstract java.lang.IllegalArgumentException primitivesHaveNoIRIds();

  public abstract java.lang.RuntimeException unavailableSHADigest(java.lang.Throwable);

  public abstract java.lang.RuntimeException unknownPrimitiveType(java.lang.String);

  public abstract java.lang.IllegalArgumentException cannotAnalyzeStringType();

  public abstract java.lang.IllegalArgumentException cannotAnalyzeClassType();

  public abstract org.wildfly.iiop.openjdk.rmi.RMIIIOPViolationException valueTypeCantImplementRemote(java.lang.String, java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.RMIIIOPViolationException valueTypeCantBeProxy(java.lang.String);

  public abstract java.lang.RuntimeException errorLoadingClass(java.lang.String, java.lang.Throwable);

  public abstract java.lang.RuntimeException noReadMethodInHelper(java.lang.String, java.lang.Throwable);

  public abstract java.lang.RuntimeException noWriteMethodInHelper(java.lang.String, java.lang.Throwable);

  public abstract java.lang.RuntimeException errorUnmarshaling(java.lang.Class<?>, java.lang.Throwable);

  public abstract java.lang.RuntimeException errorMarshaling(java.lang.Class<?>, java.lang.Throwable);

  public abstract java.lang.RuntimeException cannotObtainExceptionRepositoryID(java.lang.String, java.lang.Throwable);

  public abstract java.lang.RuntimeException errorMashalingParams();

  public abstract org.omg.CORBA.BAD_INV_ORDER cannotChangeRMIIIOPMapping();

  public abstract java.lang.RuntimeException badKindForTypeCode(int);

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException wrongInterfaceRepository();

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException duplicateRepositoryName();

  public abstract java.lang.IllegalArgumentException invalidNullClass();

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException badClassForConstant(java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException unknownTypeCodeForClass(java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException duplicateTypeCodeForClass(java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException collisionWhileCreatingPackage();

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException classIsNotArray(java.lang.String);

  public abstract org.omg.CORBA.BAD_INV_ORDER cannotDestroyRMIIIOPMapping();

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException badKindForSuperValueType(java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException errorResolvingRefToImplementedInterface(java.lang.String, java.lang.String);

  public abstract org.wildfly.iiop.openjdk.rmi.ir.IRConstructionException errorResolvingRefToAbstractValuetype(java.lang.String, java.lang.String);

  public abstract org.jboss.msc.service.StartException errorResolvingInitRef(java.lang.String, java.lang.Throwable);

  public abstract org.jboss.msc.service.StartException errorCreatingPOAFromParent(java.lang.Throwable);

  public abstract org.jboss.msc.service.StartException invalidPOACreationArgs();

  public abstract org.jboss.msc.service.StartException errorActivatingPOA(java.lang.Throwable);

  public abstract org.omg.CORBA.INTERNAL exceptionDestroingIterator(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException sslNotConfigured();

  static {};
    Code:
       0: ldc           #1                  // class org/wildfly/iiop/openjdk/logging/IIOPLogger
       2: ldc           #2                  // String org.wildfly.iiop.openjdk
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/wildfly/iiop/openjdk/logging/IIOPLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/wildfly/iiop/openjdk/logging/IIOPLogger;
      13: return
}
