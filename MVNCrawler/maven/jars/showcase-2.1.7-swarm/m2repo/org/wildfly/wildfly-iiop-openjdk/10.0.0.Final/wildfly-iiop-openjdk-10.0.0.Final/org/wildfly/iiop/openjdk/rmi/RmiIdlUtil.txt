Compiled from "RmiIdlUtil.java"
public class org.wildfly.iiop.openjdk.rmi.RmiIdlUtil {
  public org.wildfly.iiop.openjdk.rmi.RmiIdlUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean hasLegalRMIIIOPArguments(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpge     30
      13: aload_1
      14: iload_2
      15: aaload
      16: invokestatic  #3                  // Method isRMIIIOPType:(Ljava/lang/Class;)Z
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: iinc          2, 1
      27: goto          7
      30: iconst_1
      31: ireturn

  public static boolean hasLegalRMIIIOPReturnType(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
       4: invokestatic  #3                  // Method isRMIIIOPType:(Ljava/lang/Class;)Z
       7: ireturn

  public static boolean hasLegalRMIIIOPExceptionTypes(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/lang/reflect/Method.getExceptionTypes:()[Ljava/lang/Class;
       4: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          44
      22: aload_1
      23: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #10                 // class java/lang/Class
      31: astore_2
      32: aload_2
      33: invokestatic  #11                 // Method isRMIIDLExceptionType:(Ljava/lang/Class;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: goto          13
      44: iconst_1
      45: ireturn

  public static boolean throwsRemoteException(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/lang/reflect/Method.getExceptionTypes:()[Ljava/lang/Class;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpge     32
      13: aload_1
      14: iload_2
      15: aaload
      16: ldc           #12                 // class java/rmi/RemoteException
      18: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: iinc          2, 1
      29: goto          7
      32: iconst_0
      33: ireturn

  public static boolean isStatic(java.lang.reflect.Member);
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod java/lang/reflect/Member.getModifiers:()I
       6: invokestatic  #15                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       9: ireturn

  public static boolean isStatic(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #15                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       7: ireturn

  public static boolean isFinal(java.lang.reflect.Member);
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod java/lang/reflect/Member.getModifiers:()I
       6: invokestatic  #17                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       9: ireturn

  public static boolean isFinal(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #17                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       7: ireturn

  public static boolean isPublic(java.lang.reflect.Member);
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod java/lang/reflect/Member.getModifiers:()I
       6: invokestatic  #18                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
       9: ireturn

  public static boolean isPublic(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #18                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
       7: ireturn

  public static boolean isAllFieldsPublic(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpge     33
      13: aload_1
      14: iload_2
      15: aaload
      16: invokevirtual #20                 // Method java/lang/reflect/Field.getModifiers:()I
      19: invokestatic  #18                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: iinc          2, 1
      30: goto          7
      33: goto          39
      36: astore_1
      37: iconst_0
      38: ireturn
      39: iconst_1
      40: ireturn
    Exception table:
       from    to  target type
           0    26    36   Class java/lang/Exception
          27    33    36   Class java/lang/Exception

  public static boolean isAbstract(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #22                 // Method java/lang/reflect/Modifier.isAbstract:(I)Z
       7: ireturn

  public static boolean isRMIIIOPType(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method java/lang/Class.isPrimitive:()Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: invokevirtual #24                 // Method java/lang/Class.isArray:()Z
      13: ifeq          24
      16: aload_0
      17: invokevirtual #25                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      20: invokestatic  #3                  // Method isRMIIIOPType:(Ljava/lang/Class;)Z
      23: ireturn
      24: ldc           #26                 // class org/omg/CORBA/Object
      26: aload_0
      27: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: ldc           #27                 // class org/omg/CORBA/portable/IDLEntity
      37: aload_0
      38: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: aload_0
      47: invokestatic  #28                 // Method isRMIIDLRemoteInterface:(Ljava/lang/Class;)Z
      50: ifeq          55
      53: iconst_1
      54: ireturn
      55: aload_0
      56: invokestatic  #11                 // Method isRMIIDLExceptionType:(Ljava/lang/Class;)Z
      59: ifeq          64
      62: iconst_1
      63: ireturn
      64: aload_0
      65: invokestatic  #29                 // Method isRMIIDLValueType:(Ljava/lang/Class;)Z
      68: ifeq          73
      71: iconst_1
      72: ireturn
      73: iconst_0
      74: ireturn

  public static boolean isRMIIDLRemoteInterface(java.lang.Class);
    Code:
       0: ldc           #30                 // class java/rmi/Remote
       2: aload_0
       3: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: invokevirtual #31                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      15: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      18: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_1
      24: aload_1
      25: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          101
      33: aload_1
      34: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #32                 // class java/lang/reflect/Method
      42: astore_2
      43: aload_2
      44: invokestatic  #33                 // Method throwsRemoteException:(Ljava/lang/reflect/Method;)Z
      47: ifne          52
      50: iconst_0
      51: ireturn
      52: aload_2
      53: invokevirtual #5                  // Method java/lang/reflect/Method.getExceptionTypes:()[Ljava/lang/Class;
      56: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      59: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      64: astore_3
      65: aload_3
      66: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          98
      74: aload_3
      75: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #10                 // class java/lang/Class
      83: astore        4
      85: aload         4
      87: invokestatic  #11                 // Method isRMIIDLExceptionType:(Ljava/lang/Class;)Z
      90: ifne          95
      93: iconst_0
      94: ireturn
      95: goto          65
      98: goto          24
     101: aload_0
     102: invokevirtual #19                 // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
     105: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     108: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     113: astore_2
     114: aload_2
     115: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     120: ifeq          163
     123: aload_2
     124: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #34                 // class java/lang/reflect/Field
     132: astore_3
     133: aload_3
     134: invokevirtual #35                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     137: invokevirtual #23                 // Method java/lang/Class.isPrimitive:()Z
     140: ifeq          146
     143: goto          114
     146: aload_3
     147: invokevirtual #35                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     150: ldc           #36                 // class java/lang/String
     152: invokevirtual #37                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     155: ifeq          161
     158: goto          114
     161: iconst_0
     162: ireturn
     163: iconst_1
     164: ireturn

  public static boolean isAbstractInterface(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method java/lang/Class.isInterface:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #26                 // class org/omg/CORBA/Object
      11: aload_0
      12: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      15: ifeq          20
      18: iconst_0
      19: ireturn
      20: ldc           #30                 // class java/rmi/Remote
      22: aload_0
      23: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      26: ifeq          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #31                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      35: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      38: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      43: astore_1
      44: aload_1
      45: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          75
      53: aload_1
      54: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #32                 // class java/lang/reflect/Method
      62: astore_2
      63: aload_2
      64: invokestatic  #33                 // Method throwsRemoteException:(Ljava/lang/reflect/Method;)Z
      67: ifne          72
      70: iconst_0
      71: ireturn
      72: goto          44
      75: iconst_1
      76: ireturn

  public static boolean isRMIIDLExceptionType(java.lang.Class);
    Code:
       0: ldc           #39                 // class java/lang/Throwable
       2: aload_0
       3: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: ldc           #40                 // class java/lang/Error
      13: aload_0
      14: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: ldc           #41                 // class java/lang/RuntimeException
      24: aload_0
      25: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      28: ifeq          33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: invokestatic  #29                 // Method isRMIIDLValueType:(Ljava/lang/Class;)Z
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: iconst_1
      43: ireturn

  public static boolean isRMIIDLValueType(java.lang.Class);
    Code:
       0: ldc           #30                 // class java/rmi/Remote
       2: aload_0
       3: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          11
       9: iconst_0
      10: ireturn
      11: ldc           #26                 // class org/omg/CORBA/Object
      13: aload_0
      14: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: invokevirtual #42                 // Method java/lang/Class.getDeclaringClass:()Ljava/lang/Class;
      26: ifnull        48
      29: aload_0
      30: invokestatic  #43                 // Method isStatic:(Ljava/lang/Class;)Z
      33: ifeq          48
      36: aload_0
      37: invokevirtual #42                 // Method java/lang/Class.getDeclaringClass:()Ljava/lang/Class;
      40: invokestatic  #29                 // Method isRMIIDLValueType:(Ljava/lang/Class;)Z
      43: ifne          48
      46: iconst_0
      47: ireturn
      48: iconst_1
      49: ireturn

  public static boolean isAbstractValueType(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method java/lang/Class.isInterface:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: ldc           #26                 // class org/omg/CORBA/Object
      11: aload_0
      12: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      15: ifeq          20
      18: iconst_0
      19: ireturn
      20: iconst_0
      21: istore_1
      22: iconst_0
      23: istore_2
      24: ldc           #30                 // class java/rmi/Remote
      26: aload_0
      27: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      30: ifeq          38
      33: iconst_1
      34: istore_2
      35: goto          40
      38: iconst_1
      39: istore_1
      40: aload_0
      41: invokevirtual #31                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      44: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      47: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_3
      53: aload_3
      54: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          144
      62: aload_3
      63: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #32                 // class java/lang/reflect/Method
      71: astore        4
      73: aload         4
      75: invokestatic  #33                 // Method throwsRemoteException:(Ljava/lang/reflect/Method;)Z
      78: ifne          88
      81: iconst_1
      82: istore_2
      83: iconst_1
      84: istore_1
      85: goto          144
      88: aload         4
      90: invokevirtual #5                  // Method java/lang/reflect/Method.getExceptionTypes:()[Ljava/lang/Class;
      93: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      96: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     101: astore        5
     103: aload         5
     105: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     110: ifeq          141
     113: aload         5
     115: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #10                 // class java/lang/Class
     123: astore        6
     125: aload         6
     127: invokestatic  #11                 // Method isRMIIDLExceptionType:(Ljava/lang/Class;)Z
     130: ifne          138
     133: iconst_1
     134: istore_1
     135: goto          141
     138: goto          103
     141: goto          53
     144: iload_1
     145: ifne          219
     148: aload_0
     149: invokevirtual #19                 // Method java/lang/Class.getFields:()[Ljava/lang/reflect/Field;
     152: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     155: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     160: astore        4
     162: aload         4
     164: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     169: ifeq          219
     172: aload         4
     174: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     179: checkcast     #34                 // class java/lang/reflect/Field
     182: astore        5
     184: aload         5
     186: invokevirtual #35                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     189: invokevirtual #23                 // Method java/lang/Class.isPrimitive:()Z
     192: ifeq          198
     195: goto          162
     198: aload         5
     200: invokevirtual #35                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     203: ldc           #36                 // class java/lang/String
     205: invokevirtual #37                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     208: ifeq          214
     211: goto          162
     214: iconst_1
     215: istore_1
     216: goto          219
     219: iload_1
     220: ifeq          231
     223: iload_2
     224: ifeq          231
     227: iconst_1
     228: goto          232
     231: iconst_0
     232: ireturn

  public static void rethrowIfCorbaSystemException(java.lang.Exception);
    Code:
       0: aload_0
       1: instanceof    #44                 // class java/rmi/MarshalException
       4: ifeq          19
       7: new           #45                 // class org/omg/CORBA/MARSHAL
      10: dup
      11: aload_0
      12: invokevirtual #46                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      15: invokespecial #47                 // Method org/omg/CORBA/MARSHAL."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: instanceof    #48                 // class java/rmi/NoSuchObjectException
      23: ifeq          38
      26: new           #49                 // class org/omg/CORBA/OBJECT_NOT_EXIST
      29: dup
      30: aload_0
      31: invokevirtual #46                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      34: invokespecial #50                 // Method org/omg/CORBA/OBJECT_NOT_EXIST."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: instanceof    #51                 // class java/rmi/AccessException
      42: ifeq          57
      45: new           #52                 // class org/omg/CORBA/NO_PERMISSION
      48: dup
      49: aload_0
      50: invokevirtual #46                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      53: invokespecial #53                 // Method org/omg/CORBA/NO_PERMISSION."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: instanceof    #54                 // class javax/transaction/TransactionRequiredException
      61: ifeq          76
      64: new           #55                 // class org/omg/CORBA/TRANSACTION_REQUIRED
      67: dup
      68: aload_0
      69: invokevirtual #46                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      72: invokespecial #56                 // Method org/omg/CORBA/TRANSACTION_REQUIRED."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: instanceof    #57                 // class javax/transaction/TransactionRolledbackException
      80: ifeq          95
      83: new           #58                 // class org/omg/CORBA/TRANSACTION_ROLLEDBACK
      86: dup
      87: aload_0
      88: invokevirtual #46                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      91: invokespecial #59                 // Method org/omg/CORBA/TRANSACTION_ROLLEDBACK."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: instanceof    #60                 // class javax/transaction/InvalidTransactionException
      99: ifeq          114
     102: new           #61                 // class org/omg/CORBA/INVALID_TRANSACTION
     105: dup
     106: aload_0
     107: invokevirtual #46                 // Method java/lang/Exception.toString:()Ljava/lang/String;
     110: invokespecial #62                 // Method org/omg/CORBA/INVALID_TRANSACTION."<init>":(Ljava/lang/String;)V
     113: athrow
     114: aload_0
     115: instanceof    #63                 // class org/omg/CORBA/SystemException
     118: ifeq          126
     121: aload_0
     122: checkcast     #63                 // class org/omg/CORBA/SystemException
     125: athrow
     126: return
}
