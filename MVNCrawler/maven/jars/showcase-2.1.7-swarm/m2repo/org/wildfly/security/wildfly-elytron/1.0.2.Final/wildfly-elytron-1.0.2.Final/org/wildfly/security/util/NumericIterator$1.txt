Compiled from "NumericIterator.java"
class org.wildfly.security.util.NumericIterator$1 extends org.wildfly.security.util.NumericIterator$Base64ByteIterator {
  final org.wildfly.security.util.Alphabet$Base64Alphabet val$alphabet;

  final org.wildfly.security.util.NumericIterator this$0;

  org.wildfly.security.util.NumericIterator$1(org.wildfly.security.util.NumericIterator, org.wildfly.security.util.NumericIterator, boolean, org.wildfly.security.util.Alphabet$Base64Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
       5: aload_0
       6: aload         4
       8: putfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
      11: aload_0
      12: aload_2
      13: dup
      14: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: pop
      18: iload_3
      19: invokespecial #4                  // Method org/wildfly/security/util/NumericIterator$Base64ByteIterator."<init>":(Lorg/wildfly/security/util/NumericIterator;Z)V
      22: return

  int calc0(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base64Alphabet.decode:(I)I
       8: istore_3
       9: aload_0
      10: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
      13: iload_2
      14: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base64Alphabet.decode:(I)I
      17: istore        4
      19: iload_3
      20: iconst_m1
      21: if_icmpeq     30
      24: iload         4
      26: iconst_m1
      27: if_icmpne     39
      30: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      33: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase64Character:()Lorg/wildfly/security/util/DecodeException;
      38: athrow
      39: iload_3
      40: iload         4
      42: bipush        6
      44: ishl
      45: ior
      46: sipush        255
      49: iand
      50: ireturn

  int calc1(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base64Alphabet.decode:(I)I
       8: istore_3
       9: aload_0
      10: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
      13: iload_2
      14: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base64Alphabet.decode:(I)I
      17: istore        4
      19: iload_3
      20: iconst_m1
      21: if_icmpeq     30
      24: iload         4
      26: iconst_m1
      27: if_icmpne     39
      30: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      33: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase64Character:()Lorg/wildfly/security/util/DecodeException;
      38: athrow
      39: iload_3
      40: iconst_2
      41: ishr
      42: iload         4
      44: iconst_4
      45: ishl
      46: ior
      47: sipush        255
      50: iand
      51: ireturn

  int calc2(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base64Alphabet.decode:(I)I
       8: istore_3
       9: aload_0
      10: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
      13: iload_2
      14: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base64Alphabet.decode:(I)I
      17: istore        4
      19: iload_3
      20: iconst_m1
      21: if_icmpeq     30
      24: iload         4
      26: iconst_m1
      27: if_icmpne     39
      30: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      33: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase64Character:()Lorg/wildfly/security/util/DecodeException;
      38: athrow
      39: iload_3
      40: iconst_4
      41: ishr
      42: iload         4
      44: iconst_2
      45: ishl
      46: ior
      47: sipush        255
      50: iand
      51: ireturn
}
