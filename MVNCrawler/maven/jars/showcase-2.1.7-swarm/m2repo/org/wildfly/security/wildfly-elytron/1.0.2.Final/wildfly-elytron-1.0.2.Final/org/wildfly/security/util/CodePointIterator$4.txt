Compiled from "CodePointIterator.java"
class org.wildfly.security.util.CodePointIterator$4 extends org.wildfly.security.util.ByteIterator {
  private int st;

  private int cp;

  private int offset;

  final boolean val$escapeNul;

  final org.wildfly.security.util.CodePointIterator this$0;

  org.wildfly.security.util.CodePointIterator$4(org.wildfly.security.util.CodePointIterator, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$escapeNul:Z
      10: aload_0
      11: invokespecial #3                  // Method org/wildfly/security/util/ByteIterator."<init>":()V
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field cp:I
      19: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field st:I
       4: ifne          17
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
      11: invokevirtual #6                  // Method org/wildfly/security/util/CodePointIterator.hasNext:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasPrev();
    Code:
       0: aload_0
       1: getfield      #5                  // Field st:I
       4: ifne          17
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
      11: invokevirtual #7                  // Method org/wildfly/security/util/CodePointIterator.hasPrev:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public int next() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method hasNext:()Z
       4: ifne          15
       7: new           #9                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #10                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #11                 // Field offset:I
      20: iconst_1
      21: iadd
      22: putfield      #11                 // Field offset:I
      25: aload_0
      26: getfield      #5                  // Field st:I
      29: tableswitch   { // 0 to 6
                     0: 72
                     1: 191
                     2: 208
                     3: 191
                     4: 228
                     5: 248
                     6: 191
               default: 269
          }
      72: aload_0
      73: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
      76: invokevirtual #12                 // Method org/wildfly/security/util/CodePointIterator.next:()I
      79: istore_1
      80: iload_1
      81: ifne          91
      84: aload_0
      85: getfield      #2                  // Field val$escapeNul:Z
      88: ifeq          98
      91: iload_1
      92: sipush        128
      95: if_icmpge     100
      98: iload_1
      99: ireturn
     100: iload_1
     101: sipush        2048
     104: if_icmpge     126
     107: aload_0
     108: iload_1
     109: putfield      #4                  // Field cp:I
     112: aload_0
     113: iconst_1
     114: putfield      #5                  // Field st:I
     117: sipush        192
     120: iload_1
     121: bipush        6
     123: ishr
     124: ior
     125: ireturn
     126: iload_1
     127: ldc           #13                 // int 65536
     129: if_icmpge     151
     132: aload_0
     133: iload_1
     134: putfield      #4                  // Field cp:I
     137: aload_0
     138: iconst_2
     139: putfield      #5                  // Field st:I
     142: sipush        224
     145: iload_1
     146: bipush        12
     148: ishr
     149: ior
     150: ireturn
     151: iload_1
     152: ldc           #14                 // int 1114112
     154: if_icmpge     176
     157: aload_0
     158: iload_1
     159: putfield      #4                  // Field cp:I
     162: aload_0
     163: iconst_4
     164: putfield      #5                  // Field st:I
     167: sipush        240
     170: iload_1
     171: bipush        18
     173: ishr
     174: ior
     175: ireturn
     176: aload_0
     177: ldc           #15                 // int 65533
     179: putfield      #4                  // Field cp:I
     182: aload_0
     183: iconst_2
     184: putfield      #5                  // Field st:I
     187: sipush        239
     190: ireturn
     191: aload_0
     192: iconst_0
     193: putfield      #5                  // Field st:I
     196: sipush        128
     199: aload_0
     200: getfield      #4                  // Field cp:I
     203: bipush        63
     205: iand
     206: ior
     207: ireturn
     208: aload_0
     209: iconst_3
     210: putfield      #5                  // Field st:I
     213: sipush        128
     216: aload_0
     217: getfield      #4                  // Field cp:I
     220: bipush        6
     222: ishr
     223: bipush        63
     225: iand
     226: ior
     227: ireturn
     228: aload_0
     229: iconst_5
     230: putfield      #5                  // Field st:I
     233: sipush        128
     236: aload_0
     237: getfield      #4                  // Field cp:I
     240: bipush        12
     242: ishr
     243: bipush        63
     245: iand
     246: ior
     247: ireturn
     248: aload_0
     249: bipush        6
     251: putfield      #5                  // Field st:I
     254: sipush        128
     257: aload_0
     258: getfield      #4                  // Field cp:I
     261: bipush        6
     263: ishr
     264: bipush        63
     266: iand
     267: ior
     268: ireturn
     269: aload_0
     270: getfield      #5                  // Field st:I
     273: invokestatic  #16                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     276: athrow

  public int peekNext() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method hasNext:()Z
       4: ifne          15
       7: new           #9                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #10                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #5                  // Field st:I
      19: tableswitch   { // 0 to 6
                     0: 60
                     1: 127
                     2: 139
                     3: 127
                     4: 154
                     5: 139
                     6: 127
               default: 169
          }
      60: aload_0
      61: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
      64: invokevirtual #17                 // Method org/wildfly/security/util/CodePointIterator.peekNext:()I
      67: istore_1
      68: iload_1
      69: sipush        128
      72: if_icmpge     77
      75: iload_1
      76: ireturn
      77: iload_1
      78: sipush        2048
      81: if_icmpge     93
      84: sipush        192
      87: iload_1
      88: bipush        6
      90: ishr
      91: ior
      92: ireturn
      93: iload_1
      94: ldc           #13                 // int 65536
      96: if_icmpge     108
      99: sipush        224
     102: iload_1
     103: bipush        12
     105: ishr
     106: ior
     107: ireturn
     108: iload_1
     109: ldc           #14                 // int 1114112
     111: if_icmpge     123
     114: sipush        240
     117: iload_1
     118: bipush        18
     120: ishr
     121: ior
     122: ireturn
     123: sipush        239
     126: ireturn
     127: sipush        128
     130: aload_0
     131: getfield      #4                  // Field cp:I
     134: bipush        63
     136: iand
     137: ior
     138: ireturn
     139: sipush        128
     142: aload_0
     143: getfield      #4                  // Field cp:I
     146: bipush        6
     148: ishr
     149: bipush        63
     151: iand
     152: ior
     153: ireturn
     154: sipush        128
     157: aload_0
     158: getfield      #4                  // Field cp:I
     161: bipush        12
     163: ishr
     164: bipush        63
     166: iand
     167: ior
     168: ireturn
     169: aload_0
     170: getfield      #5                  // Field st:I
     173: invokestatic  #16                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     176: athrow

  public int prev() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method hasPrev:()Z
       4: ifne          15
       7: new           #9                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #10                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #11                 // Field offset:I
      20: iconst_1
      21: isub
      22: putfield      #11                 // Field offset:I
      25: aload_0
      26: getfield      #5                  // Field st:I
      29: tableswitch   { // 0 to 6
                     0: 72
                     1: 192
                     2: 209
                     3: 226
                     4: 246
                     5: 263
                     6: 283
               default: 303
          }
      72: aload_0
      73: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
      76: invokevirtual #19                 // Method org/wildfly/security/util/CodePointIterator.prev:()I
      79: istore_1
      80: iload_1
      81: ifne          91
      84: aload_0
      85: getfield      #2                  // Field val$escapeNul:Z
      88: ifeq          98
      91: iload_1
      92: sipush        128
      95: if_icmpge     100
      98: iload_1
      99: ireturn
     100: iload_1
     101: sipush        2048
     104: if_icmpge     126
     107: aload_0
     108: iload_1
     109: putfield      #4                  // Field cp:I
     112: aload_0
     113: iconst_1
     114: putfield      #5                  // Field st:I
     117: sipush        128
     120: iload_1
     121: bipush        63
     123: iand
     124: ior
     125: ireturn
     126: iload_1
     127: ldc           #13                 // int 65536
     129: if_icmpge     151
     132: aload_0
     133: iload_1
     134: putfield      #4                  // Field cp:I
     137: aload_0
     138: iconst_3
     139: putfield      #5                  // Field st:I
     142: sipush        128
     145: iload_1
     146: bipush        63
     148: iand
     149: ior
     150: ireturn
     151: iload_1
     152: ldc           #14                 // int 1114112
     154: if_icmpge     177
     157: aload_0
     158: iload_1
     159: putfield      #4                  // Field cp:I
     162: aload_0
     163: bipush        6
     165: putfield      #5                  // Field st:I
     168: sipush        128
     171: iload_1
     172: bipush        63
     174: iand
     175: ior
     176: ireturn
     177: aload_0
     178: ldc           #15                 // int 65533
     180: putfield      #4                  // Field cp:I
     183: aload_0
     184: iconst_3
     185: putfield      #5                  // Field st:I
     188: sipush        189
     191: ireturn
     192: aload_0
     193: iconst_0
     194: putfield      #5                  // Field st:I
     197: sipush        192
     200: aload_0
     201: getfield      #4                  // Field cp:I
     204: bipush        6
     206: ishr
     207: ior
     208: ireturn
     209: aload_0
     210: iconst_0
     211: putfield      #5                  // Field st:I
     214: sipush        224
     217: aload_0
     218: getfield      #4                  // Field cp:I
     221: bipush        12
     223: ishr
     224: ior
     225: ireturn
     226: aload_0
     227: iconst_2
     228: putfield      #5                  // Field st:I
     231: sipush        128
     234: aload_0
     235: getfield      #4                  // Field cp:I
     238: bipush        6
     240: ishr
     241: bipush        63
     243: iand
     244: ior
     245: ireturn
     246: aload_0
     247: iconst_0
     248: putfield      #5                  // Field st:I
     251: sipush        240
     254: aload_0
     255: getfield      #4                  // Field cp:I
     258: bipush        18
     260: ishr
     261: ior
     262: ireturn
     263: aload_0
     264: iconst_4
     265: putfield      #5                  // Field st:I
     268: sipush        128
     271: aload_0
     272: getfield      #4                  // Field cp:I
     275: bipush        12
     277: ishr
     278: bipush        63
     280: iand
     281: ior
     282: ireturn
     283: aload_0
     284: iconst_5
     285: putfield      #5                  // Field st:I
     288: sipush        128
     291: aload_0
     292: getfield      #4                  // Field cp:I
     295: bipush        6
     297: ishr
     298: bipush        63
     300: iand
     301: ior
     302: ireturn
     303: aload_0
     304: getfield      #5                  // Field st:I
     307: invokestatic  #16                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     310: athrow

  public int peekPrev() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method hasPrev:()Z
       4: ifne          15
       7: new           #9                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #10                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #5                  // Field st:I
      19: tableswitch   { // 0 to 6
                     0: 60
                     1: 138
                     2: 150
                     3: 162
                     4: 177
                     5: 189
                     6: 162
               default: 204
          }
      60: aload_0
      61: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
      64: invokevirtual #20                 // Method org/wildfly/security/util/CodePointIterator.peekPrev:()I
      67: istore_1
      68: iload_1
      69: ifne          79
      72: aload_0
      73: getfield      #2                  // Field val$escapeNul:Z
      76: ifeq          86
      79: iload_1
      80: sipush        128
      83: if_icmpge     88
      86: iload_1
      87: ireturn
      88: iload_1
      89: sipush        2048
      92: if_icmpge     104
      95: sipush        128
      98: iload_1
      99: bipush        63
     101: iand
     102: ior
     103: ireturn
     104: iload_1
     105: ldc           #13                 // int 65536
     107: if_icmpge     119
     110: sipush        128
     113: iload_1
     114: bipush        63
     116: iand
     117: ior
     118: ireturn
     119: iload_1
     120: ldc           #14                 // int 1114112
     122: if_icmpge     134
     125: sipush        128
     128: iload_1
     129: bipush        63
     131: iand
     132: ior
     133: ireturn
     134: sipush        189
     137: ireturn
     138: sipush        192
     141: aload_0
     142: getfield      #4                  // Field cp:I
     145: bipush        6
     147: ishr
     148: ior
     149: ireturn
     150: sipush        224
     153: aload_0
     154: getfield      #4                  // Field cp:I
     157: bipush        12
     159: ishr
     160: ior
     161: ireturn
     162: sipush        128
     165: aload_0
     166: getfield      #4                  // Field cp:I
     169: bipush        6
     171: ishr
     172: bipush        63
     174: iand
     175: ior
     176: ireturn
     177: sipush        240
     180: aload_0
     181: getfield      #4                  // Field cp:I
     184: bipush        18
     186: ishr
     187: ior
     188: ireturn
     189: sipush        128
     192: aload_0
     193: getfield      #4                  // Field cp:I
     196: bipush        12
     198: ishr
     199: bipush        63
     201: iand
     202: ior
     203: ireturn
     204: aload_0
     205: getfield      #5                  // Field st:I
     208: invokestatic  #16                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     211: athrow

  public org.wildfly.security.util.ByteStringBuilder appendTo(org.wildfly.security.util.ByteStringBuilder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field st:I
       4: ifne          39
       7: aload_1
       8: invokevirtual #21                 // Method org/wildfly/security/util/ByteStringBuilder.length:()I
      11: istore_2
      12: aload_1
      13: aload_0
      14: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/CodePointIterator;
      17: invokevirtual #22                 // Method org/wildfly/security/util/ByteStringBuilder.appendUtf8:(Lorg/wildfly/security/util/CodePointIterator;)Lorg/wildfly/security/util/ByteStringBuilder;
      20: pop
      21: aload_0
      22: dup
      23: getfield      #11                 // Field offset:I
      26: aload_1
      27: invokevirtual #21                 // Method org/wildfly/security/util/ByteStringBuilder.length:()I
      30: iload_2
      31: isub
      32: iadd
      33: putfield      #11                 // Field offset:I
      36: goto          45
      39: aload_0
      40: aload_1
      41: invokespecial #23                 // Method org/wildfly/security/util/ByteIterator.appendTo:(Lorg/wildfly/security/util/ByteStringBuilder;)Lorg/wildfly/security/util/ByteStringBuilder;
      44: pop
      45: aload_1
      46: areturn

  public int offset();
    Code:
       0: aload_0
       1: getfield      #11                 // Field offset:I
       4: ireturn
}
