Compiled from "ByteIterator.java"
abstract class org.wildfly.security.util.ByteIterator$Base32EncodingCodePointIterator extends org.wildfly.security.util.CodePointIterator {
  private final boolean addPadding;

  private int c0;

  private int c1;

  private int c2;

  private int c3;

  private int c4;

  private int c5;

  private int c6;

  private int c7;

  private int state;

  private int offset;

  static final boolean $assertionsDisabled;

  final org.wildfly.security.util.ByteIterator this$0;

  public org.wildfly.security.util.ByteIterator$Base32EncodingCodePointIterator(org.wildfly.security.util.ByteIterator, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
       5: aload_0
       6: invokespecial #2                  // Method org/wildfly/security/util/CodePointIterator."<init>":()V
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field addPadding:Z
      14: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ifne          17
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
      11: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
      14: ifne          33
      17: aload_0
      18: getfield      #4                  // Field state:I
      21: ifle          37
      24: aload_0
      25: getfield      #4                  // Field state:I
      28: bipush        41
      30: if_icmpge     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public boolean hasPrev();
    Code:
       0: aload_0
       1: getfield      #6                  // Field offset:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  abstract int calc0(int);

  abstract int calc1(int, int);

  abstract int calc2(int);

  abstract int calc3(int, int);

  abstract int calc4(int, int);

  abstract int calc5(int);

  abstract int calc6(int, int);

  abstract int calc7(int);

  public int next() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method hasNext:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #6                  // Field offset:I
      20: iconst_1
      21: iadd
      22: putfield      #6                  // Field offset:I
      25: aload_0
      26: getfield      #4                  // Field state:I
      29: tableswitch   { // 0 to 40
                     0: 208
                     1: 490
                     2: 505
                     3: 520
                     4: 535
                     5: 550
                     6: 565
                     7: 580
                     8: 591
                     9: 490
                    10: 601
                    11: 693
                    12: 693
                    13: 693
                    14: 693
                    15: 693
                    16: 706
                    17: 490
                    18: 505
                    19: 520
                    20: 624
                    21: 693
                    22: 693
                    23: 693
                    24: 715
                    25: 490
                    26: 505
                    27: 520
                    28: 535
                    29: 647
                    30: 693
                    31: 693
                    32: 724
                    33: 490
                    34: 505
                    35: 520
                    36: 535
                    37: 550
                    38: 565
                    39: 670
                    40: 733
               default: 742
          }
     208: getstatic     #10                 // Field $assertionsDisabled:Z
     211: ifne          232
     214: aload_0
     215: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     218: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     221: ifne          232
     224: new           #11                 // class java/lang/AssertionError
     227: dup
     228: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     231: athrow
     232: aload_0
     233: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     236: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     239: istore_1
     240: aload_0
     241: aload_0
     242: iload_1
     243: invokevirtual #14                 // Method calc0:(I)I
     246: putfield      #15                 // Field c0:I
     249: aload_0
     250: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     253: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     256: ifne          280
     259: aload_0
     260: aload_0
     261: iload_1
     262: iconst_0
     263: invokevirtual #16                 // Method calc1:(II)I
     266: putfield      #17                 // Field c1:I
     269: aload_0
     270: bipush        10
     272: putfield      #4                  // Field state:I
     275: aload_0
     276: getfield      #15                 // Field c0:I
     279: ireturn
     280: aload_0
     281: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     284: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     287: istore_2
     288: aload_0
     289: aload_0
     290: iload_1
     291: iload_2
     292: invokevirtual #16                 // Method calc1:(II)I
     295: putfield      #17                 // Field c1:I
     298: aload_0
     299: aload_0
     300: iload_2
     301: invokevirtual #18                 // Method calc2:(I)I
     304: putfield      #19                 // Field c2:I
     307: aload_0
     308: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     311: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     314: ifne          338
     317: aload_0
     318: aload_0
     319: iload_2
     320: iconst_0
     321: invokevirtual #20                 // Method calc3:(II)I
     324: putfield      #21                 // Field c3:I
     327: aload_0
     328: bipush        18
     330: putfield      #4                  // Field state:I
     333: aload_0
     334: getfield      #15                 // Field c0:I
     337: ireturn
     338: aload_0
     339: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     342: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     345: istore_3
     346: aload_0
     347: aload_0
     348: iload_2
     349: iload_3
     350: invokevirtual #20                 // Method calc3:(II)I
     353: putfield      #21                 // Field c3:I
     356: aload_0
     357: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     360: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     363: ifne          387
     366: aload_0
     367: aload_0
     368: iload_3
     369: iconst_0
     370: invokevirtual #22                 // Method calc4:(II)I
     373: putfield      #23                 // Field c4:I
     376: aload_0
     377: bipush        26
     379: putfield      #4                  // Field state:I
     382: aload_0
     383: getfield      #15                 // Field c0:I
     386: ireturn
     387: aload_0
     388: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     391: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     394: istore        4
     396: aload_0
     397: aload_0
     398: iload_3
     399: iload         4
     401: invokevirtual #22                 // Method calc4:(II)I
     404: putfield      #23                 // Field c4:I
     407: aload_0
     408: aload_0
     409: iload         4
     411: invokevirtual #24                 // Method calc5:(I)I
     414: putfield      #25                 // Field c5:I
     417: aload_0
     418: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     421: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     424: ifne          449
     427: aload_0
     428: aload_0
     429: iload         4
     431: iconst_0
     432: invokevirtual #26                 // Method calc6:(II)I
     435: putfield      #27                 // Field c6:I
     438: aload_0
     439: bipush        34
     441: putfield      #4                  // Field state:I
     444: aload_0
     445: getfield      #15                 // Field c0:I
     448: ireturn
     449: aload_0
     450: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     453: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     456: istore        5
     458: aload_0
     459: aload_0
     460: iload         4
     462: iload         5
     464: invokevirtual #26                 // Method calc6:(II)I
     467: putfield      #27                 // Field c6:I
     470: aload_0
     471: aload_0
     472: iload         5
     474: invokevirtual #28                 // Method calc7:(I)I
     477: putfield      #29                 // Field c7:I
     480: aload_0
     481: iconst_2
     482: putfield      #4                  // Field state:I
     485: aload_0
     486: getfield      #15                 // Field c0:I
     489: ireturn
     490: aload_0
     491: dup
     492: getfield      #4                  // Field state:I
     495: iconst_1
     496: iadd
     497: putfield      #4                  // Field state:I
     500: aload_0
     501: getfield      #15                 // Field c0:I
     504: ireturn
     505: aload_0
     506: dup
     507: getfield      #4                  // Field state:I
     510: iconst_1
     511: iadd
     512: putfield      #4                  // Field state:I
     515: aload_0
     516: getfield      #17                 // Field c1:I
     519: ireturn
     520: aload_0
     521: dup
     522: getfield      #4                  // Field state:I
     525: iconst_1
     526: iadd
     527: putfield      #4                  // Field state:I
     530: aload_0
     531: getfield      #19                 // Field c2:I
     534: ireturn
     535: aload_0
     536: dup
     537: getfield      #4                  // Field state:I
     540: iconst_1
     541: iadd
     542: putfield      #4                  // Field state:I
     545: aload_0
     546: getfield      #21                 // Field c3:I
     549: ireturn
     550: aload_0
     551: dup
     552: getfield      #4                  // Field state:I
     555: iconst_1
     556: iadd
     557: putfield      #4                  // Field state:I
     560: aload_0
     561: getfield      #23                 // Field c4:I
     564: ireturn
     565: aload_0
     566: dup
     567: getfield      #4                  // Field state:I
     570: iconst_1
     571: iadd
     572: putfield      #4                  // Field state:I
     575: aload_0
     576: getfield      #25                 // Field c5:I
     579: ireturn
     580: aload_0
     581: bipush        8
     583: putfield      #4                  // Field state:I
     586: aload_0
     587: getfield      #27                 // Field c6:I
     590: ireturn
     591: aload_0
     592: iconst_0
     593: putfield      #4                  // Field state:I
     596: aload_0
     597: getfield      #29                 // Field c7:I
     600: ireturn
     601: aload_0
     602: aload_0
     603: getfield      #3                  // Field addPadding:Z
     606: ifeq          614
     609: bipush        11
     611: goto          616
     614: bipush        41
     616: putfield      #4                  // Field state:I
     619: aload_0
     620: getfield      #17                 // Field c1:I
     623: ireturn
     624: aload_0
     625: aload_0
     626: getfield      #3                  // Field addPadding:Z
     629: ifeq          637
     632: bipush        21
     634: goto          639
     637: bipush        42
     639: putfield      #4                  // Field state:I
     642: aload_0
     643: getfield      #21                 // Field c3:I
     646: ireturn
     647: aload_0
     648: aload_0
     649: getfield      #3                  // Field addPadding:Z
     652: ifeq          660
     655: bipush        30
     657: goto          662
     660: bipush        43
     662: putfield      #4                  // Field state:I
     665: aload_0
     666: getfield      #23                 // Field c4:I
     669: ireturn
     670: aload_0
     671: aload_0
     672: getfield      #3                  // Field addPadding:Z
     675: ifeq          683
     678: bipush        40
     680: goto          685
     683: bipush        44
     685: putfield      #4                  // Field state:I
     688: aload_0
     689: getfield      #27                 // Field c6:I
     692: ireturn
     693: aload_0
     694: dup
     695: getfield      #4                  // Field state:I
     698: iconst_1
     699: iadd
     700: putfield      #4                  // Field state:I
     703: bipush        61
     705: ireturn
     706: aload_0
     707: bipush        41
     709: putfield      #4                  // Field state:I
     712: bipush        61
     714: ireturn
     715: aload_0
     716: bipush        42
     718: putfield      #4                  // Field state:I
     721: bipush        61
     723: ireturn
     724: aload_0
     725: bipush        43
     727: putfield      #4                  // Field state:I
     730: bipush        61
     732: ireturn
     733: aload_0
     734: bipush        44
     736: putfield      #4                  // Field state:I
     739: bipush        61
     741: ireturn
     742: aload_0
     743: getfield      #4                  // Field state:I
     746: invokestatic  #30                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     749: athrow

  public int peekNext() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method hasNext:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field state:I
      19: tableswitch   { // 0 to 40
                     0: 196
                     1: 478
                     2: 483
                     3: 488
                     4: 493
                     5: 498
                     6: 503
                     7: 508
                     8: 513
                     9: 478
                    10: 483
                    11: 518
                    12: 518
                    13: 518
                    14: 518
                    15: 518
                    16: 518
                    17: 478
                    18: 483
                    19: 488
                    20: 493
                    21: 518
                    22: 518
                    23: 518
                    24: 518
                    25: 478
                    26: 483
                    27: 488
                    28: 493
                    29: 498
                    30: 518
                    31: 518
                    32: 518
                    33: 478
                    34: 483
                    35: 488
                    36: 493
                    37: 498
                    38: 503
                    39: 508
                    40: 518
               default: 521
          }
     196: getstatic     #10                 // Field $assertionsDisabled:Z
     199: ifne          220
     202: aload_0
     203: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     206: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     209: ifne          220
     212: new           #11                 // class java/lang/AssertionError
     215: dup
     216: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     219: athrow
     220: aload_0
     221: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     224: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     227: istore_1
     228: aload_0
     229: aload_0
     230: iload_1
     231: invokevirtual #14                 // Method calc0:(I)I
     234: putfield      #15                 // Field c0:I
     237: aload_0
     238: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     241: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     244: ifne          268
     247: aload_0
     248: aload_0
     249: iload_1
     250: iconst_0
     251: invokevirtual #16                 // Method calc1:(II)I
     254: putfield      #17                 // Field c1:I
     257: aload_0
     258: bipush        9
     260: putfield      #4                  // Field state:I
     263: aload_0
     264: getfield      #15                 // Field c0:I
     267: ireturn
     268: aload_0
     269: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     272: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     275: istore_2
     276: aload_0
     277: aload_0
     278: iload_1
     279: iload_2
     280: invokevirtual #16                 // Method calc1:(II)I
     283: putfield      #17                 // Field c1:I
     286: aload_0
     287: aload_0
     288: iload_2
     289: invokevirtual #18                 // Method calc2:(I)I
     292: putfield      #19                 // Field c2:I
     295: aload_0
     296: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     299: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     302: ifne          326
     305: aload_0
     306: aload_0
     307: iload_2
     308: iconst_0
     309: invokevirtual #20                 // Method calc3:(II)I
     312: putfield      #21                 // Field c3:I
     315: aload_0
     316: bipush        17
     318: putfield      #4                  // Field state:I
     321: aload_0
     322: getfield      #15                 // Field c0:I
     325: ireturn
     326: aload_0
     327: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     330: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     333: istore_3
     334: aload_0
     335: aload_0
     336: iload_2
     337: iload_3
     338: invokevirtual #20                 // Method calc3:(II)I
     341: putfield      #21                 // Field c3:I
     344: aload_0
     345: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     348: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     351: ifne          375
     354: aload_0
     355: aload_0
     356: iload_3
     357: iconst_0
     358: invokevirtual #22                 // Method calc4:(II)I
     361: putfield      #23                 // Field c4:I
     364: aload_0
     365: bipush        25
     367: putfield      #4                  // Field state:I
     370: aload_0
     371: getfield      #15                 // Field c0:I
     374: ireturn
     375: aload_0
     376: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     379: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     382: istore        4
     384: aload_0
     385: aload_0
     386: iload_3
     387: iload         4
     389: invokevirtual #22                 // Method calc4:(II)I
     392: putfield      #23                 // Field c4:I
     395: aload_0
     396: aload_0
     397: iload         4
     399: invokevirtual #24                 // Method calc5:(I)I
     402: putfield      #25                 // Field c5:I
     405: aload_0
     406: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     409: invokevirtual #5                  // Method org/wildfly/security/util/ByteIterator.hasNext:()Z
     412: ifne          437
     415: aload_0
     416: aload_0
     417: iload         4
     419: iconst_0
     420: invokevirtual #26                 // Method calc6:(II)I
     423: putfield      #27                 // Field c6:I
     426: aload_0
     427: bipush        33
     429: putfield      #4                  // Field state:I
     432: aload_0
     433: getfield      #15                 // Field c0:I
     436: ireturn
     437: aload_0
     438: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     441: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     444: istore        5
     446: aload_0
     447: aload_0
     448: iload         4
     450: iload         5
     452: invokevirtual #26                 // Method calc6:(II)I
     455: putfield      #27                 // Field c6:I
     458: aload_0
     459: aload_0
     460: iload         5
     462: invokevirtual #28                 // Method calc7:(I)I
     465: putfield      #29                 // Field c7:I
     468: aload_0
     469: iconst_1
     470: putfield      #4                  // Field state:I
     473: aload_0
     474: getfield      #15                 // Field c0:I
     477: ireturn
     478: aload_0
     479: getfield      #15                 // Field c0:I
     482: ireturn
     483: aload_0
     484: getfield      #17                 // Field c1:I
     487: ireturn
     488: aload_0
     489: getfield      #19                 // Field c2:I
     492: ireturn
     493: aload_0
     494: getfield      #21                 // Field c3:I
     497: ireturn
     498: aload_0
     499: getfield      #23                 // Field c4:I
     502: ireturn
     503: aload_0
     504: getfield      #25                 // Field c5:I
     507: ireturn
     508: aload_0
     509: getfield      #27                 // Field c6:I
     512: ireturn
     513: aload_0
     514: getfield      #29                 // Field c7:I
     517: ireturn
     518: bipush        61
     520: ireturn
     521: aload_0
     522: getfield      #4                  // Field state:I
     525: invokestatic  #30                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     528: athrow

  public int prev() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method hasPrev:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #6                  // Field offset:I
      20: iconst_1
      21: isub
      22: putfield      #6                  // Field offset:I
      25: aload_0
      26: getfield      #4                  // Field state:I
      29: tableswitch   { // 0 to 45
                     0: 260
                     1: 260
                     2: 394
                     3: 409
                     4: 424
                     5: 439
                     6: 454
                     7: 469
                     8: 484
                     9: 252
                    10: 394
                    11: 409
                    12: 499
                    13: 499
                    14: 499
                    15: 499
                    16: 499
                    17: 244
                    18: 394
                    19: 409
                    20: 424
                    21: 439
                    22: 499
                    23: 499
                    24: 499
                    25: 236
                    26: 394
                    27: 409
                    28: 424
                    29: 439
                    30: 454
                    31: 499
                    32: 499
                    33: 228
                    34: 394
                    35: 409
                    36: 424
                    37: 439
                    38: 454
                    39: 469
                    40: 484
                    41: 512
                    42: 539
                    43: 566
                    44: 593
                    45: 260
               default: 620
          }
     228: aload_0
     229: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     232: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     235: pop
     236: aload_0
     237: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     240: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     243: pop
     244: aload_0
     245: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     248: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     251: pop
     252: aload_0
     253: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     256: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     259: pop
     260: aload_0
     261: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     264: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     267: istore_1
     268: aload_0
     269: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     272: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     275: istore_2
     276: aload_0
     277: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     280: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     283: istore_3
     284: aload_0
     285: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     288: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     291: istore        4
     293: aload_0
     294: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     297: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     300: istore        5
     302: aload_0
     303: aload_0
     304: iload         5
     306: invokevirtual #14                 // Method calc0:(I)I
     309: putfield      #15                 // Field c0:I
     312: aload_0
     313: aload_0
     314: iload         5
     316: iload         4
     318: invokevirtual #16                 // Method calc1:(II)I
     321: putfield      #17                 // Field c1:I
     324: aload_0
     325: aload_0
     326: iload         4
     328: invokevirtual #18                 // Method calc2:(I)I
     331: putfield      #19                 // Field c2:I
     334: aload_0
     335: aload_0
     336: iload         4
     338: iload_3
     339: invokevirtual #20                 // Method calc3:(II)I
     342: putfield      #21                 // Field c3:I
     345: aload_0
     346: aload_0
     347: iload_3
     348: iload_2
     349: invokevirtual #22                 // Method calc4:(II)I
     352: putfield      #23                 // Field c4:I
     355: aload_0
     356: aload_0
     357: iload_2
     358: invokevirtual #24                 // Method calc5:(I)I
     361: putfield      #25                 // Field c5:I
     364: aload_0
     365: aload_0
     366: iload_2
     367: iload_1
     368: invokevirtual #26                 // Method calc6:(II)I
     371: putfield      #27                 // Field c6:I
     374: aload_0
     375: aload_0
     376: iload_1
     377: invokevirtual #28                 // Method calc7:(I)I
     380: putfield      #29                 // Field c7:I
     383: aload_0
     384: bipush        8
     386: putfield      #4                  // Field state:I
     389: aload_0
     390: getfield      #29                 // Field c7:I
     393: ireturn
     394: aload_0
     395: dup
     396: getfield      #4                  // Field state:I
     399: iconst_1
     400: isub
     401: putfield      #4                  // Field state:I
     404: aload_0
     405: getfield      #15                 // Field c0:I
     408: ireturn
     409: aload_0
     410: dup
     411: getfield      #4                  // Field state:I
     414: iconst_1
     415: isub
     416: putfield      #4                  // Field state:I
     419: aload_0
     420: getfield      #17                 // Field c1:I
     423: ireturn
     424: aload_0
     425: dup
     426: getfield      #4                  // Field state:I
     429: iconst_1
     430: isub
     431: putfield      #4                  // Field state:I
     434: aload_0
     435: getfield      #19                 // Field c2:I
     438: ireturn
     439: aload_0
     440: dup
     441: getfield      #4                  // Field state:I
     444: iconst_1
     445: isub
     446: putfield      #4                  // Field state:I
     449: aload_0
     450: getfield      #21                 // Field c3:I
     453: ireturn
     454: aload_0
     455: dup
     456: getfield      #4                  // Field state:I
     459: iconst_1
     460: isub
     461: putfield      #4                  // Field state:I
     464: aload_0
     465: getfield      #23                 // Field c4:I
     468: ireturn
     469: aload_0
     470: dup
     471: getfield      #4                  // Field state:I
     474: iconst_1
     475: isub
     476: putfield      #4                  // Field state:I
     479: aload_0
     480: getfield      #25                 // Field c5:I
     483: ireturn
     484: aload_0
     485: dup
     486: getfield      #4                  // Field state:I
     489: iconst_1
     490: isub
     491: putfield      #4                  // Field state:I
     494: aload_0
     495: getfield      #27                 // Field c6:I
     498: ireturn
     499: aload_0
     500: dup
     501: getfield      #4                  // Field state:I
     504: iconst_1
     505: isub
     506: putfield      #4                  // Field state:I
     509: bipush        61
     511: ireturn
     512: aload_0
     513: getfield      #3                  // Field addPadding:Z
     516: ifeq          528
     519: aload_0
     520: bipush        16
     522: putfield      #4                  // Field state:I
     525: bipush        61
     527: ireturn
     528: aload_0
     529: bipush        10
     531: putfield      #4                  // Field state:I
     534: aload_0
     535: getfield      #17                 // Field c1:I
     538: ireturn
     539: aload_0
     540: getfield      #3                  // Field addPadding:Z
     543: ifeq          555
     546: aload_0
     547: bipush        24
     549: putfield      #4                  // Field state:I
     552: bipush        61
     554: ireturn
     555: aload_0
     556: bipush        20
     558: putfield      #4                  // Field state:I
     561: aload_0
     562: getfield      #21                 // Field c3:I
     565: ireturn
     566: aload_0
     567: getfield      #3                  // Field addPadding:Z
     570: ifeq          582
     573: aload_0
     574: bipush        32
     576: putfield      #4                  // Field state:I
     579: bipush        61
     581: ireturn
     582: aload_0
     583: bipush        29
     585: putfield      #4                  // Field state:I
     588: aload_0
     589: getfield      #23                 // Field c4:I
     592: ireturn
     593: aload_0
     594: getfield      #3                  // Field addPadding:Z
     597: ifeq          609
     600: aload_0
     601: bipush        40
     603: putfield      #4                  // Field state:I
     606: bipush        61
     608: ireturn
     609: aload_0
     610: bipush        39
     612: putfield      #4                  // Field state:I
     615: aload_0
     616: getfield      #27                 // Field c6:I
     619: ireturn
     620: aload_0
     621: getfield      #4                  // Field state:I
     624: invokestatic  #30                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     627: athrow

  public int peekPrev() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method hasPrev:()Z
       4: ifne          15
       7: new           #8                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field state:I
      19: tableswitch   { // 0 to 45
                     0: 248
                     1: 248
                     2: 387
                     3: 392
                     4: 397
                     5: 402
                     6: 407
                     7: 412
                     8: 417
                     9: 240
                    10: 387
                    11: 392
                    12: 422
                    13: 422
                    14: 422
                    15: 422
                    16: 422
                    17: 232
                    18: 387
                    19: 392
                    20: 397
                    21: 402
                    22: 422
                    23: 422
                    24: 422
                    25: 224
                    26: 387
                    27: 392
                    28: 397
                    29: 402
                    30: 407
                    31: 422
                    32: 422
                    33: 216
                    34: 387
                    35: 392
                    36: 397
                    37: 402
                    38: 407
                    39: 412
                    40: 417
                    41: 425
                    42: 442
                    43: 459
                    44: 476
                    45: 248
               default: 493
          }
     216: aload_0
     217: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     220: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     223: pop
     224: aload_0
     225: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     228: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     231: pop
     232: aload_0
     233: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     236: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     239: pop
     240: aload_0
     241: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     244: invokevirtual #32                 // Method org/wildfly/security/util/ByteIterator.prev:()I
     247: pop
     248: aload_0
     249: aload_0
     250: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     253: invokevirtual #33                 // Method org/wildfly/security/util/ByteIterator.peekPrev:()I
     256: invokevirtual #28                 // Method calc7:(I)I
     259: istore_1
     260: aload_0
     261: getfield      #4                  // Field state:I
     264: bipush        9
     266: if_icmpne     280
     269: aload_0
     270: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     273: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     276: pop
     277: goto          385
     280: aload_0
     281: getfield      #4                  // Field state:I
     284: bipush        17
     286: if_icmpne     308
     289: aload_0
     290: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     293: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     296: pop
     297: aload_0
     298: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     301: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     304: pop
     305: goto          385
     308: aload_0
     309: getfield      #4                  // Field state:I
     312: bipush        25
     314: if_icmpne     344
     317: aload_0
     318: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     321: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     324: pop
     325: aload_0
     326: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     329: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     332: pop
     333: aload_0
     334: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     337: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     340: pop
     341: goto          385
     344: aload_0
     345: getfield      #4                  // Field state:I
     348: bipush        33
     350: if_icmpne     385
     353: aload_0
     354: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     357: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     360: pop
     361: aload_0
     362: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     365: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     368: pop
     369: aload_0
     370: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     373: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     376: pop
     377: aload_0
     378: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/ByteIterator;
     381: invokevirtual #13                 // Method org/wildfly/security/util/ByteIterator.next:()I
     384: pop
     385: iload_1
     386: ireturn
     387: aload_0
     388: getfield      #15                 // Field c0:I
     391: ireturn
     392: aload_0
     393: getfield      #17                 // Field c1:I
     396: ireturn
     397: aload_0
     398: getfield      #19                 // Field c2:I
     401: ireturn
     402: aload_0
     403: getfield      #21                 // Field c3:I
     406: ireturn
     407: aload_0
     408: getfield      #23                 // Field c4:I
     411: ireturn
     412: aload_0
     413: getfield      #25                 // Field c5:I
     416: ireturn
     417: aload_0
     418: getfield      #27                 // Field c6:I
     421: ireturn
     422: bipush        61
     424: ireturn
     425: aload_0
     426: getfield      #3                  // Field addPadding:Z
     429: ifeq          437
     432: bipush        61
     434: goto          441
     437: aload_0
     438: getfield      #17                 // Field c1:I
     441: ireturn
     442: aload_0
     443: getfield      #3                  // Field addPadding:Z
     446: ifeq          454
     449: bipush        61
     451: goto          458
     454: aload_0
     455: getfield      #21                 // Field c3:I
     458: ireturn
     459: aload_0
     460: getfield      #3                  // Field addPadding:Z
     463: ifeq          471
     466: bipush        61
     468: goto          475
     471: aload_0
     472: getfield      #23                 // Field c4:I
     475: ireturn
     476: aload_0
     477: getfield      #3                  // Field addPadding:Z
     480: ifeq          488
     483: bipush        61
     485: goto          492
     488: aload_0
     489: getfield      #27                 // Field c6:I
     492: ireturn
     493: aload_0
     494: getfield      #4                  // Field state:I
     497: invokestatic  #30                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(I)Ljava/lang/IllegalStateException;
     500: athrow

  public int offset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field offset:I
       4: ireturn

  static {};
    Code:
       0: ldc           #34                 // class org/wildfly/security/util/ByteIterator
       2: invokevirtual #35                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #10                 // Field $assertionsDisabled:Z
      16: return
}
