Compiled from "NumericIterator.java"
abstract class org.wildfly.security.util.NumericIterator$Base64ByteIterator extends org.wildfly.security.util.ByteIterator {
  private final boolean requirePadding;

  private int state;

  private int o0;

  private int o1;

  private int o2;

  private int offset;

  final org.wildfly.security.util.NumericIterator this$0;

  protected org.wildfly.security.util.NumericIterator$Base64ByteIterator(org.wildfly.security.util.NumericIterator, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
       5: aload_0
       6: invokespecial #2                  // Method org/wildfly/security/util/ByteIterator."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field state:I
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field requirePadding:Z
      19: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: ifne          291
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
      11: invokevirtual #5                  // Method org/wildfly/security/util/NumericIterator.hasNext:()Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
      23: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
      26: istore_1
      27: iload_1
      28: bipush        61
      30: if_icmpne     42
      33: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      36: invokeinterface #8,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.unexpectedPadding:()Lorg/wildfly/security/util/DecodeException;
      41: athrow
      42: aload_0
      43: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
      46: invokevirtual #5                  // Method org/wildfly/security/util/NumericIterator.hasNext:()Z
      49: ifne          77
      52: aload_0
      53: getfield      #4                  // Field requirePadding:Z
      56: ifeq          68
      59: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      62: invokeinterface #9,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.expectedPadding:()Lorg/wildfly/security/util/DecodeException;
      67: athrow
      68: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      71: invokeinterface #10,  1           // InterfaceMethod org/wildfly/security/_private/ElytronMessages.incompleteDecode:()Lorg/wildfly/security/util/DecodeException;
      76: athrow
      77: aload_0
      78: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
      81: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
      84: istore_2
      85: iload_2
      86: bipush        61
      88: if_icmpne     100
      91: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      94: invokeinterface #8,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.unexpectedPadding:()Lorg/wildfly/security/util/DecodeException;
      99: athrow
     100: aload_0
     101: aload_0
     102: iload_1
     103: iload_2
     104: invokevirtual #11                 // Method calc0:(II)I
     107: putfield      #12                 // Field o0:I
     110: aload_0
     111: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     114: invokevirtual #5                  // Method org/wildfly/security/util/NumericIterator.hasNext:()Z
     117: ifne          144
     120: aload_0
     121: getfield      #4                  // Field requirePadding:Z
     124: ifeq          136
     127: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
     130: invokeinterface #9,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.expectedPadding:()Lorg/wildfly/security/util/DecodeException;
     135: pop
     136: aload_0
     137: bipush        9
     139: putfield      #3                  // Field state:I
     142: iconst_1
     143: ireturn
     144: aload_0
     145: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     148: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
     151: istore_3
     152: iload_3
     153: bipush        61
     155: if_icmpne     206
     158: aload_0
     159: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     162: invokevirtual #5                  // Method org/wildfly/security/util/NumericIterator.hasNext:()Z
     165: ifne          177
     168: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
     171: invokeinterface #13,  1           // InterfaceMethod org/wildfly/security/_private/ElytronMessages.expectedTwoPaddingCharacters:()Lorg/wildfly/security/util/DecodeException;
     176: athrow
     177: aload_0
     178: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     181: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
     184: bipush        61
     186: if_icmpeq     198
     189: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
     192: invokeinterface #13,  1           // InterfaceMethod org/wildfly/security/_private/ElytronMessages.expectedTwoPaddingCharacters:()Lorg/wildfly/security/util/DecodeException;
     197: athrow
     198: aload_0
     199: bipush        6
     201: putfield      #3                  // Field state:I
     204: iconst_1
     205: ireturn
     206: aload_0
     207: aload_0
     208: iload_2
     209: iload_3
     210: invokevirtual #14                 // Method calc1:(II)I
     213: putfield      #15                 // Field o1:I
     216: aload_0
     217: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     220: invokevirtual #5                  // Method org/wildfly/security/util/NumericIterator.hasNext:()Z
     223: ifne          250
     226: aload_0
     227: getfield      #4                  // Field requirePadding:Z
     230: ifeq          242
     233: getstatic     #7                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
     236: invokeinterface #9,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.expectedPadding:()Lorg/wildfly/security/util/DecodeException;
     241: pop
     242: aload_0
     243: bipush        7
     245: putfield      #3                  // Field state:I
     248: iconst_1
     249: ireturn
     250: aload_0
     251: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     254: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
     257: istore        4
     259: iload         4
     261: bipush        61
     263: if_icmpne     273
     266: aload_0
     267: iconst_4
     268: putfield      #3                  // Field state:I
     271: iconst_1
     272: ireturn
     273: aload_0
     274: aload_0
     275: iload_3
     276: iload         4
     278: invokevirtual #16                 // Method calc2:(II)I
     281: putfield      #17                 // Field o2:I
     284: aload_0
     285: iconst_1
     286: putfield      #3                  // Field state:I
     289: iconst_1
     290: ireturn
     291: aload_0
     292: getfield      #3                  // Field state:I
     295: bipush        10
     297: if_icmpge     304
     300: iconst_1
     301: goto          305
     304: iconst_0
     305: ireturn

  public boolean hasPrev();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: ifne          14
       7: aload_0
       8: getfield      #18                 // Field offset:I
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  abstract int calc0(int, int);

  abstract int calc1(int, int);

  abstract int calc2(int, int);

  public int next();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method hasNext:()Z
       4: ifne          15
       7: new           #20                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field state:I
      19: tableswitch   { // 1 to 9
                     1: 68
                     2: 88
                     3: 108
                     4: 128
                     5: 148
                     6: 169
                     7: 190
                     8: 211
                     9: 232
               default: 253
          }
      68: aload_0
      69: iconst_2
      70: putfield      #3                  // Field state:I
      73: aload_0
      74: dup
      75: getfield      #18                 // Field offset:I
      78: iconst_1
      79: iadd
      80: putfield      #18                 // Field offset:I
      83: aload_0
      84: getfield      #12                 // Field o0:I
      87: ireturn
      88: aload_0
      89: iconst_3
      90: putfield      #3                  // Field state:I
      93: aload_0
      94: dup
      95: getfield      #18                 // Field offset:I
      98: iconst_1
      99: iadd
     100: putfield      #18                 // Field offset:I
     103: aload_0
     104: getfield      #15                 // Field o1:I
     107: ireturn
     108: aload_0
     109: iconst_0
     110: putfield      #3                  // Field state:I
     113: aload_0
     114: dup
     115: getfield      #18                 // Field offset:I
     118: iconst_1
     119: iadd
     120: putfield      #18                 // Field offset:I
     123: aload_0
     124: getfield      #17                 // Field o2:I
     127: ireturn
     128: aload_0
     129: iconst_5
     130: putfield      #3                  // Field state:I
     133: aload_0
     134: dup
     135: getfield      #18                 // Field offset:I
     138: iconst_1
     139: iadd
     140: putfield      #18                 // Field offset:I
     143: aload_0
     144: getfield      #12                 // Field o0:I
     147: ireturn
     148: aload_0
     149: bipush        11
     151: putfield      #3                  // Field state:I
     154: aload_0
     155: dup
     156: getfield      #18                 // Field offset:I
     159: iconst_1
     160: iadd
     161: putfield      #18                 // Field offset:I
     164: aload_0
     165: getfield      #15                 // Field o1:I
     168: ireturn
     169: aload_0
     170: bipush        10
     172: putfield      #3                  // Field state:I
     175: aload_0
     176: dup
     177: getfield      #18                 // Field offset:I
     180: iconst_1
     181: iadd
     182: putfield      #18                 // Field offset:I
     185: aload_0
     186: getfield      #12                 // Field o0:I
     189: ireturn
     190: aload_0
     191: bipush        8
     193: putfield      #3                  // Field state:I
     196: aload_0
     197: dup
     198: getfield      #18                 // Field offset:I
     201: iconst_1
     202: iadd
     203: putfield      #18                 // Field offset:I
     206: aload_0
     207: getfield      #12                 // Field o0:I
     210: ireturn
     211: aload_0
     212: bipush        13
     214: putfield      #3                  // Field state:I
     217: aload_0
     218: dup
     219: getfield      #18                 // Field offset:I
     222: iconst_1
     223: iadd
     224: putfield      #18                 // Field offset:I
     227: aload_0
     228: getfield      #15                 // Field o1:I
     231: ireturn
     232: aload_0
     233: bipush        12
     235: putfield      #3                  // Field state:I
     238: aload_0
     239: dup
     240: getfield      #18                 // Field offset:I
     243: iconst_1
     244: iadd
     245: putfield      #18                 // Field offset:I
     248: aload_0
     249: getfield      #12                 // Field o0:I
     252: ireturn
     253: new           #20                 // class java/util/NoSuchElementException
     256: dup
     257: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
     260: athrow

  public int peekNext() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method hasNext:()Z
       4: ifne          15
       7: new           #20                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field state:I
      19: tableswitch   { // 1 to 9
                     1: 68
                     2: 73
                     3: 78
                     4: 68
                     5: 73
                     6: 68
                     7: 68
                     8: 73
                     9: 68
               default: 83
          }
      68: aload_0
      69: getfield      #12                 // Field o0:I
      72: ireturn
      73: aload_0
      74: getfield      #15                 // Field o1:I
      77: ireturn
      78: aload_0
      79: getfield      #17                 // Field o2:I
      82: ireturn
      83: new           #20                 // class java/util/NoSuchElementException
      86: dup
      87: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
      90: athrow

  public int prev();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method hasPrev:()Z
       4: ifne          15
       7: new           #20                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field state:I
      19: tableswitch   { // 0 to 13
                     0: 104
                     1: 104
                     2: 185
                     3: 205
                     4: 96
                     5: 225
                     6: 88
                     7: 104
                     8: 245
                     9: 104
                    10: 266
                    11: 287
                    12: 307
                    13: 328
               default: 349
          }
      88: aload_0
      89: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
      92: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
      95: pop
      96: aload_0
      97: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     100: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
     103: pop
     104: aload_0
     105: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     108: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
     111: istore_1
     112: aload_0
     113: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     116: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
     119: istore_2
     120: aload_0
     121: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     124: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
     127: istore_3
     128: aload_0
     129: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     132: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
     135: istore        4
     137: aload_0
     138: aload_0
     139: iload         4
     141: iload_3
     142: invokevirtual #11                 // Method calc0:(II)I
     145: putfield      #12                 // Field o0:I
     148: aload_0
     149: aload_0
     150: iload_3
     151: iload_2
     152: invokevirtual #14                 // Method calc1:(II)I
     155: putfield      #15                 // Field o1:I
     158: aload_0
     159: iconst_3
     160: putfield      #3                  // Field state:I
     163: aload_0
     164: dup
     165: getfield      #18                 // Field offset:I
     168: iconst_1
     169: isub
     170: putfield      #18                 // Field offset:I
     173: aload_0
     174: aload_0
     175: iload_2
     176: iload_1
     177: invokevirtual #16                 // Method calc2:(II)I
     180: dup_x1
     181: putfield      #17                 // Field o2:I
     184: ireturn
     185: aload_0
     186: iconst_1
     187: putfield      #3                  // Field state:I
     190: aload_0
     191: dup
     192: getfield      #18                 // Field offset:I
     195: iconst_1
     196: isub
     197: putfield      #18                 // Field offset:I
     200: aload_0
     201: getfield      #12                 // Field o0:I
     204: ireturn
     205: aload_0
     206: iconst_2
     207: putfield      #3                  // Field state:I
     210: aload_0
     211: dup
     212: getfield      #18                 // Field offset:I
     215: iconst_1
     216: isub
     217: putfield      #18                 // Field offset:I
     220: aload_0
     221: getfield      #15                 // Field o1:I
     224: ireturn
     225: aload_0
     226: iconst_4
     227: putfield      #3                  // Field state:I
     230: aload_0
     231: dup
     232: getfield      #18                 // Field offset:I
     235: iconst_1
     236: isub
     237: putfield      #18                 // Field offset:I
     240: aload_0
     241: getfield      #12                 // Field o0:I
     244: ireturn
     245: aload_0
     246: bipush        7
     248: putfield      #3                  // Field state:I
     251: aload_0
     252: dup
     253: getfield      #18                 // Field offset:I
     256: iconst_1
     257: isub
     258: putfield      #18                 // Field offset:I
     261: aload_0
     262: getfield      #12                 // Field o0:I
     265: ireturn
     266: aload_0
     267: bipush        6
     269: putfield      #3                  // Field state:I
     272: aload_0
     273: dup
     274: getfield      #18                 // Field offset:I
     277: iconst_1
     278: isub
     279: putfield      #18                 // Field offset:I
     282: aload_0
     283: getfield      #12                 // Field o0:I
     286: ireturn
     287: aload_0
     288: iconst_5
     289: putfield      #3                  // Field state:I
     292: aload_0
     293: dup
     294: getfield      #18                 // Field offset:I
     297: iconst_1
     298: isub
     299: putfield      #18                 // Field offset:I
     302: aload_0
     303: getfield      #15                 // Field o1:I
     306: ireturn
     307: aload_0
     308: bipush        9
     310: putfield      #3                  // Field state:I
     313: aload_0
     314: dup
     315: getfield      #18                 // Field offset:I
     318: iconst_1
     319: isub
     320: putfield      #18                 // Field offset:I
     323: aload_0
     324: getfield      #12                 // Field o0:I
     327: ireturn
     328: aload_0
     329: bipush        8
     331: putfield      #3                  // Field state:I
     334: aload_0
     335: dup
     336: getfield      #18                 // Field offset:I
     339: iconst_1
     340: isub
     341: putfield      #18                 // Field offset:I
     344: aload_0
     345: getfield      #15                 // Field o1:I
     348: ireturn
     349: new           #20                 // class java/util/NoSuchElementException
     352: dup
     353: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
     356: athrow

  public int peekPrev() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method hasPrev:()Z
       4: ifne          15
       7: new           #20                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field state:I
      19: tableswitch   { // 0 to 13
                     0: 104
                     1: 104
                     2: 179
                     3: 184
                     4: 96
                     5: 189
                     6: 88
                     7: 104
                     8: 194
                     9: 104
                    10: 199
                    11: 204
                    12: 209
                    13: 214
               default: 219
          }
      88: aload_0
      89: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
      92: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
      95: pop
      96: aload_0
      97: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     100: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
     103: pop
     104: aload_0
     105: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     108: invokevirtual #23                 // Method org/wildfly/security/util/NumericIterator.prev:()I
     111: istore_1
     112: aload_0
     113: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     116: invokevirtual #24                 // Method org/wildfly/security/util/NumericIterator.peekPrev:()I
     119: istore_2
     120: aload_0
     121: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     124: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
     127: pop
     128: aload_0
     129: getfield      #3                  // Field state:I
     132: iconst_4
     133: if_icmpne     147
     136: aload_0
     137: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     140: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
     143: pop
     144: goto          172
     147: aload_0
     148: getfield      #3                  // Field state:I
     151: bipush        6
     153: if_icmpne     172
     156: aload_0
     157: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     160: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
     163: pop
     164: aload_0
     165: getfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
     168: invokevirtual #6                  // Method org/wildfly/security/util/NumericIterator.next:()I
     171: pop
     172: aload_0
     173: iload_2
     174: iload_1
     175: invokevirtual #16                 // Method calc2:(II)I
     178: ireturn
     179: aload_0
     180: getfield      #12                 // Field o0:I
     183: ireturn
     184: aload_0
     185: getfield      #15                 // Field o1:I
     188: ireturn
     189: aload_0
     190: getfield      #12                 // Field o0:I
     193: ireturn
     194: aload_0
     195: getfield      #12                 // Field o0:I
     198: ireturn
     199: aload_0
     200: getfield      #12                 // Field o0:I
     203: ireturn
     204: aload_0
     205: getfield      #15                 // Field o1:I
     208: ireturn
     209: aload_0
     210: getfield      #12                 // Field o0:I
     213: ireturn
     214: aload_0
     215: getfield      #15                 // Field o1:I
     218: ireturn
     219: new           #20                 // class java/util/NoSuchElementException
     222: dup
     223: invokespecial #21                 // Method java/util/NoSuchElementException."<init>":()V
     226: athrow

  public int offset();
    Code:
       0: aload_0
       1: getfield      #18                 // Field offset:I
       4: ireturn
}
