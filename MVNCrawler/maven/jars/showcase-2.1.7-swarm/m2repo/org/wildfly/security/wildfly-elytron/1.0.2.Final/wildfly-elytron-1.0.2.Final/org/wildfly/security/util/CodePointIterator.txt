Compiled from "CodePointIterator.java"
public abstract class org.wildfly.security.util.CodePointIterator extends org.wildfly.security.util.NumericIterator {
  public static final org.wildfly.security.util.CodePointIterator EMPTY;

  public org.wildfly.security.util.CodePointIterator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/wildfly/security/util/NumericIterator."<init>":()V
       4: return

  public abstract boolean hasNext();

  public abstract boolean hasPrev();

  public abstract int next() throws java.util.NoSuchElementException;

  public abstract int peekNext() throws java.util.NoSuchElementException;

  public abstract int prev() throws java.util.NoSuchElementException;

  public abstract int peekPrev() throws java.util.NoSuchElementException;

  public abstract int offset();

  public final boolean contentEquals(org.wildfly.security.util.CodePointIterator);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method hasNext:()Z
       4: ifeq          42
       7: aload_1
       8: invokevirtual #2                  // Method hasNext:()Z
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #3                  // Method peekNext:()I
      20: aload_1
      21: invokevirtual #3                  // Method peekNext:()I
      24: if_icmpeq     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: invokevirtual #4                  // Method next:()I
      33: pop
      34: aload_1
      35: invokevirtual #4                  // Method next:()I
      38: pop
      39: goto          0
      42: aload_1
      43: invokevirtual #2                  // Method hasNext:()Z
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public final org.wildfly.security.util.CodePointIterator limitedTo(int);
    Code:
       0: iload_1
       1: ifle          11
       4: aload_0
       5: invokevirtual #2                  // Method hasNext:()Z
       8: ifne          15
      11: getstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
      14: areturn
      15: new           #6                  // class org/wildfly/security/util/CodePointIterator$1
      18: dup
      19: aload_0
      20: iload_1
      21: invokespecial #7                  // Method org/wildfly/security/util/CodePointIterator$1."<init>":(Lorg/wildfly/security/util/CodePointIterator;I)V
      24: areturn

  public final org.wildfly.security.util.CodePointIterator delimitedBy(int...);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: arraylength
       6: ifeq          16
       9: aload_0
      10: invokevirtual #2                  // Method hasNext:()Z
      13: ifne          20
      16: getstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
      19: areturn
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     58
      34: aload_2
      35: iload         4
      37: iaload
      38: istore        5
      40: iload         5
      42: invokestatic  #8                  // Method java/lang/Character.isValidCodePoint:(I)Z
      45: ifne          52
      48: getstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
      51: areturn
      52: iinc          4, 1
      55: goto          28
      58: new           #9                  // class org/wildfly/security/util/CodePointIterator$2
      61: dup
      62: aload_0
      63: aload_1
      64: invokespecial #10                 // Method org/wildfly/security/util/CodePointIterator$2."<init>":(Lorg/wildfly/security/util/CodePointIterator;[I)V
      67: areturn

  public java.lang.StringBuilder drainTo(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method hasNext:()Z
       4: ifeq          19
       7: aload_1
       8: aload_0
       9: invokevirtual #4                  // Method next:()I
      12: invokevirtual #11                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      15: pop
      16: goto          0
      19: aload_1
      20: areturn

  public java.lang.StringBuilder drainTo(java.lang.StringBuilder, java.lang.String, int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: aload_2
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore        6
      14: iload_3
      15: invokestatic  #8                  // Method java/lang/Character.isValidCodePoint:(I)Z
      18: istore        7
      20: aload_0
      21: invokevirtual #2                  // Method hasNext:()Z
      24: ifeq          116
      27: iload         6
      29: ifeq          38
      32: aload_1
      33: aload_2
      34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: invokevirtual #4                  // Method next:()I
      43: invokevirtual #11                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      46: pop
      47: iinc          5, 1
      50: aload_0
      51: invokevirtual #2                  // Method hasNext:()Z
      54: ifeq          116
      57: iload         5
      59: iload         4
      61: if_icmpne     101
      64: iload         7
      66: ifeq          75
      69: aload_1
      70: iload_3
      71: invokevirtual #11                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      74: pop
      75: iload         6
      77: ifeq          86
      80: aload_1
      81: aload_2
      82: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_1
      87: aload_0
      88: invokevirtual #4                  // Method next:()I
      91: invokevirtual #11                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      94: pop
      95: iconst_1
      96: istore        5
      98: goto          50
     101: aload_1
     102: aload_0
     103: invokevirtual #4                  // Method next:()I
     106: invokevirtual #11                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
     109: pop
     110: iinc          5, 1
     113: goto          50
     116: aload_1
     117: areturn

  public java.lang.StringBuilder drainTo(java.lang.StringBuilder, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: iload_3
       5: invokevirtual #13                 // Method drainTo:(Ljava/lang/StringBuilder;Ljava/lang/String;II)Ljava/lang/StringBuilder;
       8: areturn

  public java.lang.StringBuilder drainTo(java.lang.StringBuilder, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_m1
       4: iload_3
       5: invokevirtual #13                 // Method drainTo:(Ljava/lang/StringBuilder;Ljava/lang/String;II)Ljava/lang/StringBuilder;
       8: areturn

  public java.lang.String drainToString();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method hasNext:()Z
       4: ifeq          24
       7: aload_0
       8: new           #14                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      15: invokevirtual #16                 // Method drainTo:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
      18: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: goto          26
      24: ldc           #18                 // String
      26: areturn

  public java.lang.String drainToString(java.lang.String, int, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method hasNext:()Z
       4: ifeq          27
       7: aload_0
       8: new           #14                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: iload_2
      17: iload_3
      18: invokevirtual #13                 // Method drainTo:(Ljava/lang/StringBuilder;Ljava/lang/String;II)Ljava/lang/StringBuilder;
      21: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: goto          29
      27: ldc           #18                 // String
      29: areturn

  public java.lang.String drainToString(int, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method hasNext:()Z
       4: ifeq          27
       7: aload_0
       8: new           #14                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      15: aconst_null
      16: iload_1
      17: iload_2
      18: invokevirtual #13                 // Method drainTo:(Ljava/lang/StringBuilder;Ljava/lang/String;II)Ljava/lang/StringBuilder;
      21: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: goto          29
      27: ldc           #18                 // String
      29: areturn

  public java.lang.String drainToString(java.lang.String, int);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method hasNext:()Z
       4: ifeq          27
       7: aload_0
       8: new           #14                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: iconst_m1
      17: iload_2
      18: invokevirtual #13                 // Method drainTo:(Ljava/lang/StringBuilder;Ljava/lang/String;II)Ljava/lang/StringBuilder;
      21: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: goto          29
      27: ldc           #18                 // String
      29: areturn

  public org.wildfly.security.util.ByteIterator base64Decode(org.wildfly.security.util.Alphabet$Base64Alphabet, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #19                 // Method org/wildfly/security/util/NumericIterator.base64Decode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base64Decode(org.wildfly.security.util.Alphabet$Base64Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #19                 // Method org/wildfly/security/util/NumericIterator.base64Decode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base64Decode();
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/wildfly/security/util/Alphabet$Base64Alphabet.STANDARD:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
       4: iconst_1
       5: invokespecial #19                 // Method org/wildfly/security/util/NumericIterator.base64Decode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       8: areturn

  public org.wildfly.security.util.ByteIterator base32Decode(org.wildfly.security.util.Alphabet$Base32Alphabet, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #21                 // Method org/wildfly/security/util/NumericIterator.base32Decode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base32Decode(org.wildfly.security.util.Alphabet$Base32Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #21                 // Method org/wildfly/security/util/NumericIterator.base32Decode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base32Decode();
    Code:
       0: aload_0
       1: getstatic     #22                 // Field org/wildfly/security/util/Alphabet$Base32Alphabet.STANDARD:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iconst_1
       5: invokespecial #21                 // Method org/wildfly/security/util/NumericIterator.base32Decode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       8: areturn

  public org.wildfly.security.util.ByteIterator hexDecode();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/wildfly/security/util/NumericIterator.hexDecode:()Lorg/wildfly/security/util/ByteIterator;
       4: areturn

  public org.wildfly.security.util.ByteIterator asLatin1();
    Code:
       0: new           #24                 // class org/wildfly/security/util/CodePointIterator$3
       3: dup
       4: aload_0
       5: invokespecial #25                 // Method org/wildfly/security/util/CodePointIterator$3."<init>":(Lorg/wildfly/security/util/CodePointIterator;)V
       8: areturn

  public org.wildfly.security.util.ByteIterator asUtf8();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #26                 // Method asUtf8:(Z)Lorg/wildfly/security/util/ByteIterator;
       5: areturn

  public org.wildfly.security.util.ByteIterator asUtf8(boolean);
    Code:
       0: new           #27                 // class org/wildfly/security/util/CodePointIterator$4
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #28                 // Method org/wildfly/security/util/CodePointIterator$4."<init>":(Lorg/wildfly/security/util/CodePointIterator;Z)V
       9: areturn

  public static org.wildfly.security.util.CodePointIterator ofString(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: invokevirtual #29                 // Method java/lang/String.length:()I
       6: invokestatic  #30                 // Method ofString:(Ljava/lang/String;II)Lorg/wildfly/security/util/CodePointIterator;
       9: areturn

  public static org.wildfly.security.util.CodePointIterator ofString(java.lang.String, int, int);
    Code:
       0: iload_2
       1: ifne          8
       4: getstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
       7: areturn
       8: new           #31                 // class org/wildfly/security/util/CodePointIterator$5
      11: dup
      12: iload_2
      13: aload_0
      14: iload_1
      15: invokespecial #32                 // Method org/wildfly/security/util/CodePointIterator$5."<init>":(ILjava/lang/String;I)V
      18: areturn

  public static org.wildfly.security.util.CodePointIterator ofChars(char[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #33                 // Method ofChars:([CII)Lorg/wildfly/security/util/CodePointIterator;
       7: areturn

  public static org.wildfly.security.util.CodePointIterator ofChars(char[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: arraylength
       4: iload_1
       5: isub
       6: invokestatic  #33                 // Method ofChars:([CII)Lorg/wildfly/security/util/CodePointIterator;
       9: areturn

  public static org.wildfly.security.util.CodePointIterator ofChars(char[], int, int);
    Code:
       0: iload_2
       1: ifgt          8
       4: getstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
       7: areturn
       8: new           #34                 // class org/wildfly/security/util/CodePointIterator$6
      11: dup
      12: iload_2
      13: aload_0
      14: iload_1
      15: invokespecial #35                 // Method org/wildfly/security/util/CodePointIterator$6."<init>":(I[CI)V
      18: areturn

  public static org.wildfly.security.util.CodePointIterator ofUtf8Bytes(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #36                 // Method ofUtf8Bytes:([BII)Lorg/wildfly/security/util/CodePointIterator;
       7: areturn

  public static org.wildfly.security.util.CodePointIterator ofUtf8Bytes(byte[], int, int);
    Code:
       0: iload_2
       1: ifgt          8
       4: getstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
       7: areturn
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokestatic  #37                 // Method org/wildfly/security/util/ByteIterator.ofBytes:([BII)Lorg/wildfly/security/util/ByteIterator;
      14: invokevirtual #38                 // Method org/wildfly/security/util/ByteIterator.asUtf8String:()Lorg/wildfly/security/util/CodePointIterator;
      17: areturn

  public static org.wildfly.security.util.CodePointIterator ofLatin1Bytes(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #39                 // Method ofLatin1Bytes:([BII)Lorg/wildfly/security/util/CodePointIterator;
       7: areturn

  public static org.wildfly.security.util.CodePointIterator ofLatin1Bytes(byte[], int, int);
    Code:
       0: iload_2
       1: ifgt          8
       4: getstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
       7: areturn
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokestatic  #37                 // Method org/wildfly/security/util/ByteIterator.ofBytes:([BII)Lorg/wildfly/security/util/ByteIterator;
      14: invokevirtual #40                 // Method org/wildfly/security/util/ByteIterator.asLatin1String:()Lorg/wildfly/security/util/CodePointIterator;
      17: areturn

  static {};
    Code:
       0: new           #41                 // class org/wildfly/security/util/CodePointIterator$7
       3: dup
       4: invokespecial #42                 // Method org/wildfly/security/util/CodePointIterator$7."<init>":()V
       7: putstatic     #5                  // Field EMPTY:Lorg/wildfly/security/util/CodePointIterator;
      10: return
}
