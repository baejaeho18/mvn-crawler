Compiled from "ByteIterator.java"
public abstract class org.wildfly.security.util.ByteIterator extends org.wildfly.security.util.NumericIterator {
  private static final int OP_BUFFER_SIZE;

  private static final java.lang.ThreadLocal<byte[]> OP_BUFFER;

  private static final byte[] NO_BYTES;

  public static final org.wildfly.security.util.ByteIterator EMPTY;

  public org.wildfly.security.util.ByteIterator();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/wildfly/security/util/NumericIterator."<init>":()V
       4: return

  public abstract boolean hasNext();

  public abstract boolean hasPrev();

  public abstract int next() throws java.util.NoSuchElementException;

  public abstract int peekNext() throws java.util.NoSuchElementException;

  public abstract int prev() throws java.util.NoSuchElementException;

  public abstract int peekPrev() throws java.util.NoSuchElementException;

  public abstract int offset();

  public int getBE16() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method next:()I
       4: bipush        8
       6: ishl
       7: aload_0
       8: invokevirtual #3                  // Method next:()I
      11: ior
      12: ireturn

  public int getBE32() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method next:()I
       4: bipush        24
       6: ishl
       7: aload_0
       8: invokevirtual #3                  // Method next:()I
      11: bipush        16
      13: ishl
      14: ior
      15: aload_0
      16: invokevirtual #3                  // Method next:()I
      19: bipush        8
      21: ishl
      22: ior
      23: aload_0
      24: invokevirtual #3                  // Method next:()I
      27: ior
      28: ireturn

  public long getBE64() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method next:()I
       4: i2l
       5: bipush        52
       7: lshl
       8: aload_0
       9: invokevirtual #3                  // Method next:()I
      12: i2l
      13: bipush        48
      15: lshl
      16: lor
      17: aload_0
      18: invokevirtual #3                  // Method next:()I
      21: i2l
      22: bipush        40
      24: lshl
      25: lor
      26: aload_0
      27: invokevirtual #3                  // Method next:()I
      30: i2l
      31: bipush        32
      33: lshl
      34: lor
      35: aload_0
      36: invokevirtual #3                  // Method next:()I
      39: i2l
      40: bipush        24
      42: lshl
      43: lor
      44: aload_0
      45: invokevirtual #3                  // Method next:()I
      48: i2l
      49: bipush        16
      51: lshl
      52: lor
      53: aload_0
      54: invokevirtual #3                  // Method next:()I
      57: i2l
      58: bipush        8
      60: lshl
      61: lor
      62: aload_0
      63: invokevirtual #3                  // Method next:()I
      66: i2l
      67: lor
      68: lreturn

  public int getPackedBE32() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method next:()I
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iload_1
       8: sipush        128
      11: iand
      12: ifeq          33
      15: iload_2
      16: bipush        7
      18: ishl
      19: iload_1
      20: bipush        127
      22: iand
      23: ior
      24: istore_2
      25: aload_0
      26: invokevirtual #3                  // Method next:()I
      29: istore_1
      30: goto          7
      33: iload_2
      34: bipush        7
      36: ishl
      37: iload_1
      38: ior
      39: istore_2
      40: iload_2
      41: ireturn

  public long getPackedBE64() throws java.util.NoSuchElementException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method next:()I
       4: istore_1
       5: lconst_0
       6: lstore_2
       7: iload_1
       8: sipush        128
      11: iand
      12: ifeq          34
      15: lload_2
      16: bipush        7
      18: lshl
      19: iload_1
      20: bipush        127
      22: iand
      23: i2l
      24: lor
      25: lstore_2
      26: aload_0
      27: invokevirtual #3                  // Method next:()I
      30: istore_1
      31: goto          7
      34: lload_2
      35: bipush        7
      37: lshl
      38: iload_1
      39: i2l
      40: lor
      41: lstore_2
      42: lload_2
      43: lreturn

  public org.wildfly.security.util.ByteStringBuilder appendTo(org.wildfly.security.util.ByteStringBuilder);
    Code:
       0: getstatic     #4                  // Field OP_BUFFER:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #6                  // class "[B"
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #7                  // Method drain:([B)I
      15: istore_3
      16: iload_3
      17: ifle          37
      20: aload_1
      21: aload_2
      22: iconst_0
      23: iload_3
      24: invokevirtual #8                  // Method org/wildfly/security/util/ByteStringBuilder.append:([BII)Lorg/wildfly/security/util/ByteStringBuilder;
      27: pop
      28: aload_0
      29: aload_2
      30: invokevirtual #7                  // Method drain:([B)I
      33: istore_3
      34: goto          16
      37: aload_1
      38: areturn

  public void update(java.security.MessageDigest) throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #4                  // Field OP_BUFFER:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #6                  // class "[B"
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #7                  // Method drain:([B)I
      15: istore_3
      16: iload_3
      17: ifle          36
      20: aload_1
      21: aload_2
      22: iconst_0
      23: iload_3
      24: invokevirtual #9                  // Method java/security/MessageDigest.update:([BII)V
      27: aload_0
      28: aload_2
      29: invokevirtual #7                  // Method drain:([B)I
      32: istore_3
      33: goto          16
      36: return

  public org.wildfly.security.util.ByteIterator doFinal(java.security.MessageDigest) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method update:(Ljava/security/MessageDigest;)V
       5: aload_1
       6: invokevirtual #11                 // Method java/security/MessageDigest.digest:()[B
       9: invokestatic  #12                 // Method ofBytes:([B)Lorg/wildfly/security/util/ByteIterator;
      12: areturn

  public void update(javax.crypto.Mac) throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #4                  // Field OP_BUFFER:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #6                  // class "[B"
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #7                  // Method drain:([B)I
      15: istore_3
      16: iload_3
      17: ifle          36
      20: aload_1
      21: aload_2
      22: iconst_0
      23: iload_3
      24: invokevirtual #13                 // Method javax/crypto/Mac.update:([BII)V
      27: aload_0
      28: aload_2
      29: invokevirtual #7                  // Method drain:([B)I
      32: istore_3
      33: goto          16
      36: return

  public org.wildfly.security.util.ByteIterator doFinal(javax.crypto.Mac) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #14                 // Method drain:()[B
       5: invokevirtual #15                 // Method javax/crypto/Mac.doFinal:([B)[B
       8: invokestatic  #12                 // Method ofBytes:([B)Lorg/wildfly/security/util/ByteIterator;
      11: areturn

  public void update(java.security.Signature) throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #4                  // Field OP_BUFFER:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #6                  // class "[B"
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #7                  // Method drain:([B)I
      15: istore_3
      16: iload_3
      17: ifle          36
      20: aload_1
      21: aload_2
      22: iconst_0
      23: iload_3
      24: invokevirtual #16                 // Method java/security/Signature.update:([BII)V
      27: aload_0
      28: aload_2
      29: invokevirtual #7                  // Method drain:([B)I
      32: istore_3
      33: goto          16
      36: aload_1
      37: aload_0
      38: invokevirtual #14                 // Method drain:()[B
      41: invokevirtual #17                 // Method java/security/Signature.update:([B)V
      44: goto          57
      47: astore_3
      48: new           #19                 // class java/lang/IllegalStateException
      51: dup
      52: aload_3
      53: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      56: athrow
      57: return
    Exception table:
       from    to  target type
          10    44    47   Class java/security/SignatureException

  public org.wildfly.security.util.ByteIterator sign(java.security.Signature) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method update:(Ljava/security/Signature;)V
       5: aload_1
       6: invokevirtual #22                 // Method java/security/Signature.sign:()[B
       9: invokestatic  #12                 // Method ofBytes:([B)Lorg/wildfly/security/util/ByteIterator;
      12: areturn
      13: astore_2
      14: new           #19                 // class java/lang/IllegalStateException
      17: dup
      18: aload_2
      19: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           5    12    13   Class java/security/SignatureException

  public boolean verify(java.security.Signature) throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #4                  // Field OP_BUFFER:Ljava/lang/ThreadLocal;
       3: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #6                  // class "[B"
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #7                  // Method drain:([B)I
      15: istore_3
      16: iload_3
      17: ifle          36
      20: aload_1
      21: aload_2
      22: iconst_0
      23: iload_3
      24: invokevirtual #16                 // Method java/security/Signature.update:([BII)V
      27: aload_0
      28: aload_2
      29: invokevirtual #7                  // Method drain:([B)I
      32: istore_3
      33: goto          16
      36: aload_1
      37: getstatic     #1                  // Field NO_BYTES:[B
      40: invokevirtual #23                 // Method java/security/Signature.verify:([B)Z
      43: ireturn
      44: astore_3
      45: new           #19                 // class java/lang/IllegalStateException
      48: dup
      49: aload_3
      50: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      53: athrow
    Exception table:
       from    to  target type
          10    43    44   Class java/security/SignatureException

  public org.wildfly.security.util.ByteIterator base64Decode(org.wildfly.security.util.Alphabet$Base64Alphabet, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #24                 // Method org/wildfly/security/util/NumericIterator.base64Decode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base64Decode(org.wildfly.security.util.Alphabet$Base64Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #24                 // Method org/wildfly/security/util/NumericIterator.base64Decode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base64Decode();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/wildfly/security/util/Alphabet$Base64Alphabet.STANDARD:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
       4: iconst_1
       5: invokespecial #24                 // Method org/wildfly/security/util/NumericIterator.base64Decode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       8: areturn

  public org.wildfly.security.util.CodePointIterator base64Encode(org.wildfly.security.util.Alphabet$Base64Alphabet, boolean);
    Code:
       0: aload_1
       1: getfield      #26                 // Field org/wildfly/security/util/Alphabet$Base64Alphabet.littleEndian:Z
       4: ifeq          18
       7: new           #27                 // class org/wildfly/security/util/ByteIterator$2
      10: dup
      11: aload_0
      12: iload_2
      13: aload_1
      14: invokespecial #28                 // Method org/wildfly/security/util/ByteIterator$2."<init>":(Lorg/wildfly/security/util/ByteIterator;ZLorg/wildfly/security/util/Alphabet$Base64Alphabet;)V
      17: areturn
      18: new           #29                 // class org/wildfly/security/util/ByteIterator$3
      21: dup
      22: aload_0
      23: iload_2
      24: aload_1
      25: invokespecial #30                 // Method org/wildfly/security/util/ByteIterator$3."<init>":(Lorg/wildfly/security/util/ByteIterator;ZLorg/wildfly/security/util/Alphabet$Base64Alphabet;)V
      28: areturn

  public org.wildfly.security.util.CodePointIterator base64Encode(org.wildfly.security.util.Alphabet$Base64Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #31                 // Method base64Encode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/CodePointIterator;
       6: areturn

  public org.wildfly.security.util.CodePointIterator base64Encode();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field org/wildfly/security/util/Alphabet$Base64Alphabet.STANDARD:Lorg/wildfly/security/util/Alphabet$Base64Alphabet;
       4: iconst_1
       5: invokevirtual #31                 // Method base64Encode:(Lorg/wildfly/security/util/Alphabet$Base64Alphabet;Z)Lorg/wildfly/security/util/CodePointIterator;
       8: areturn

  public org.wildfly.security.util.ByteIterator base32Decode(org.wildfly.security.util.Alphabet$Base32Alphabet, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #32                 // Method org/wildfly/security/util/NumericIterator.base32Decode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base32Decode(org.wildfly.security.util.Alphabet$Base32Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #32                 // Method org/wildfly/security/util/NumericIterator.base32Decode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       6: areturn

  public org.wildfly.security.util.ByteIterator base32Decode();
    Code:
       0: aload_0
       1: getstatic     #33                 // Field org/wildfly/security/util/Alphabet$Base32Alphabet.STANDARD:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iconst_1
       5: invokespecial #32                 // Method org/wildfly/security/util/NumericIterator.base32Decode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/ByteIterator;
       8: areturn

  public org.wildfly.security.util.CodePointIterator base32Encode(org.wildfly.security.util.Alphabet$Base32Alphabet, boolean);
    Code:
       0: aload_1
       1: getfield      #34                 // Field org/wildfly/security/util/Alphabet$Base32Alphabet.littleEndian:Z
       4: ifeq          18
       7: new           #35                 // class org/wildfly/security/util/ByteIterator$4
      10: dup
      11: aload_0
      12: iload_2
      13: aload_1
      14: invokespecial #36                 // Method org/wildfly/security/util/ByteIterator$4."<init>":(Lorg/wildfly/security/util/ByteIterator;ZLorg/wildfly/security/util/Alphabet$Base32Alphabet;)V
      17: areturn
      18: new           #37                 // class org/wildfly/security/util/ByteIterator$5
      21: dup
      22: aload_0
      23: iload_2
      24: aload_1
      25: invokespecial #38                 // Method org/wildfly/security/util/ByteIterator$5."<init>":(Lorg/wildfly/security/util/ByteIterator;ZLorg/wildfly/security/util/Alphabet$Base32Alphabet;)V
      28: areturn

  public org.wildfly.security.util.CodePointIterator base32Encode(org.wildfly.security.util.Alphabet$Base32Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #39                 // Method base32Encode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/CodePointIterator;
       6: areturn

  public org.wildfly.security.util.CodePointIterator base32Encode();
    Code:
       0: aload_0
       1: getstatic     #33                 // Field org/wildfly/security/util/Alphabet$Base32Alphabet.STANDARD:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iconst_1
       5: invokevirtual #39                 // Method base32Encode:(Lorg/wildfly/security/util/Alphabet$Base32Alphabet;Z)Lorg/wildfly/security/util/CodePointIterator;
       8: areturn

  public org.wildfly.security.util.ByteIterator hexDecode();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method org/wildfly/security/util/NumericIterator.hexDecode:()Lorg/wildfly/security/util/ByteIterator;
       4: areturn

  public org.wildfly.security.util.CodePointIterator hexEncode(boolean);
    Code:
       0: new           #41                 // class org/wildfly/security/util/ByteIterator$6
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #42                 // Method org/wildfly/security/util/ByteIterator$6."<init>":(Lorg/wildfly/security/util/ByteIterator;Z)V
       9: areturn

  public org.wildfly.security.util.CodePointIterator hexEncode();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #43                 // Method hexEncode:(Z)Lorg/wildfly/security/util/CodePointIterator;
       5: areturn

  public org.wildfly.security.util.CodePointIterator asUtf8String();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method hasNext:()Z
       4: ifne          11
       7: getstatic     #45                 // Field org/wildfly/security/util/CodePointIterator.EMPTY:Lorg/wildfly/security/util/CodePointIterator;
      10: areturn
      11: new           #46                 // class org/wildfly/security/util/ByteIterator$7
      14: dup
      15: aload_0
      16: invokespecial #47                 // Method org/wildfly/security/util/ByteIterator$7."<init>":(Lorg/wildfly/security/util/ByteIterator;)V
      19: areturn

  public org.wildfly.security.util.CodePointIterator asLatin1String();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method hasNext:()Z
       4: ifne          11
       7: getstatic     #45                 // Field org/wildfly/security/util/CodePointIterator.EMPTY:Lorg/wildfly/security/util/CodePointIterator;
      10: areturn
      11: aload_0
      12: invokevirtual #48                 // Method offset:()I
      15: istore_1
      16: new           #49                 // class org/wildfly/security/util/ByteIterator$8
      19: dup
      20: aload_0
      21: iload_1
      22: invokespecial #50                 // Method org/wildfly/security/util/ByteIterator$8."<init>":(Lorg/wildfly/security/util/ByteIterator;I)V
      25: areturn

  public final boolean contentEquals(org.wildfly.security.util.ByteIterator);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method hasNext:()Z
       4: ifeq          29
       7: aload_1
       8: invokevirtual #44                 // Method hasNext:()Z
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #3                  // Method next:()I
      20: aload_1
      21: invokevirtual #3                  // Method next:()I
      24: if_icmpeq     0
      27: iconst_0
      28: ireturn
      29: aload_1
      30: invokevirtual #44                 // Method hasNext:()Z
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public final org.wildfly.security.util.ByteIterator limitedTo(int);
    Code:
       0: iload_1
       1: ifle          11
       4: aload_0
       5: invokevirtual #44                 // Method hasNext:()Z
       8: ifne          15
      11: getstatic     #51                 // Field EMPTY:Lorg/wildfly/security/util/ByteIterator;
      14: areturn
      15: new           #52                 // class org/wildfly/security/util/ByteIterator$9
      18: dup
      19: aload_0
      20: iload_1
      21: invokespecial #53                 // Method org/wildfly/security/util/ByteIterator$9."<init>":(Lorg/wildfly/security/util/ByteIterator;I)V
      24: areturn

  public final org.wildfly.security.util.ByteIterator delimitedBy(int...);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: arraylength
       6: ifeq          16
       9: aload_0
      10: invokevirtual #44                 // Method hasNext:()Z
      13: ifne          20
      16: getstatic     #51                 // Field EMPTY:Lorg/wildfly/security/util/ByteIterator;
      19: areturn
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     63
      34: aload_2
      35: iload         4
      37: iaload
      38: istore        5
      40: iload         5
      42: iflt          53
      45: iload         5
      47: sipush        255
      50: if_icmple     57
      53: getstatic     #51                 // Field EMPTY:Lorg/wildfly/security/util/ByteIterator;
      56: areturn
      57: iinc          4, 1
      60: goto          28
      63: new           #54                 // class org/wildfly/security/util/ByteIterator$10
      66: dup
      67: aload_0
      68: aload_1
      69: invokespecial #55                 // Method org/wildfly/security/util/ByteIterator$10."<init>":(Lorg/wildfly/security/util/ByteIterator;[I)V
      72: areturn

  public org.wildfly.security.util.ByteIterator interleavedWith(byte[]);
    Code:
       0: new           #56                 // class org/wildfly/security/util/ByteIterator$11
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #57                 // Method org/wildfly/security/util/ByteIterator$11."<init>":(Lorg/wildfly/security/util/ByteIterator;[B)V
       9: areturn

  public org.wildfly.security.util.ByteIterator interleavedWith(int[]);
    Code:
       0: new           #58                 // class org/wildfly/security/util/ByteIterator$12
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #59                 // Method org/wildfly/security/util/ByteIterator$12."<init>":(Lorg/wildfly/security/util/ByteIterator;[I)V
       9: areturn

  public java.io.ByteArrayOutputStream drainTo(java.io.ByteArrayOutputStream);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method hasNext:()Z
       4: ifeq          18
       7: aload_1
       8: aload_0
       9: invokevirtual #3                  // Method next:()I
      12: invokevirtual #60                 // Method java/io/ByteArrayOutputStream.write:(I)V
      15: goto          0
      18: aload_1
      19: areturn

  public byte[] drain();
    Code:
       0: aload_0
       1: new           #61                 // class java/io/ByteArrayOutputStream
       4: dup
       5: invokespecial #62                 // Method java/io/ByteArrayOutputStream."<init>":()V
       8: invokevirtual #63                 // Method drainTo:(Ljava/io/ByteArrayOutputStream;)Ljava/io/ByteArrayOutputStream;
      11: invokevirtual #64                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      14: areturn

  public byte[] drain(int);
    Code:
       0: iload_1
       1: ifne          8
       4: getstatic     #1                  // Field NO_BYTES:[B
       7: areturn
       8: iload_1
       9: newarray       byte
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #7                  // Method drain:([B)I
      17: istore_3
      18: iload_3
      19: ifne          28
      22: getstatic     #1                  // Field NO_BYTES:[B
      25: goto          43
      28: iload_3
      29: aload_2
      30: arraylength
      31: if_icmpge     42
      34: aload_2
      35: iload_3
      36: invokestatic  #65                 // Method java/util/Arrays.copyOf:([BI)[B
      39: goto          43
      42: aload_2
      43: areturn

  public byte[] drainAll(int) throws java.util.NoSuchElementException;
    Code:
       0: iload_1
       1: ifne          8
       4: getstatic     #1                  // Field NO_BYTES:[B
       7: areturn
       8: iload_1
       9: newarray       byte
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #7                  // Method drain:([B)I
      17: istore_3
      18: iload_3
      19: aload_2
      20: arraylength
      21: if_icmpge     32
      24: new           #66                 // class java/util/NoSuchElementException
      27: dup
      28: invokespecial #67                 // Method java/util/NoSuchElementException."<init>":()V
      31: athrow
      32: aload_2
      33: areturn

  public int drain(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #68                 // Method drain:([BII)I
       8: ireturn

  public int drain(byte[], int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     36
       9: aload_0
      10: invokevirtual #44                 // Method hasNext:()Z
      13: ifne          19
      16: iload         4
      18: ireturn
      19: aload_1
      20: iload_2
      21: iload         4
      23: iadd
      24: aload_0
      25: invokevirtual #3                  // Method next:()I
      28: i2b
      29: bastore
      30: iinc          4, 1
      33: goto          3
      36: iload_3
      37: ireturn

  public java.lang.String drainToUtf8(int);
    Code:
       0: new           #69                 // class java/lang/String
       3: dup
       4: aload_0
       5: iload_1
       6: invokevirtual #70                 // Method drain:(I)[B
       9: getstatic     #71                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      12: invokespecial #72                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      15: areturn

  public java.lang.String drainToLatin1(int);
    Code:
       0: new           #69                 // class java/lang/String
       3: dup
       4: aload_0
       5: iload_1
       6: invokevirtual #70                 // Method drain:(I)[B
       9: getstatic     #73                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      12: invokespecial #72                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      15: areturn

  public static org.wildfly.security.util.ByteIterator ofBytes(byte...);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #74                 // Method ofBytes:([BII)Lorg/wildfly/security/util/ByteIterator;
       7: areturn

  public static org.wildfly.security.util.ByteIterator ofBytes(byte[], int, int);
    Code:
       0: iload_2
       1: ifgt          8
       4: getstatic     #51                 // Field EMPTY:Lorg/wildfly/security/util/ByteIterator;
       7: areturn
       8: new           #75                 // class org/wildfly/security/util/ByteIterator$13
      11: dup
      12: iload_2
      13: aload_0
      14: iload_1
      15: invokespecial #76                 // Method org/wildfly/security/util/ByteIterator$13."<init>":(I[BI)V
      18: areturn

  public static org.wildfly.security.util.ByteIterator ofBytes(byte[], int, int, int[]);
    Code:
       0: iload_2
       1: ifgt          8
       4: getstatic     #51                 // Field EMPTY:Lorg/wildfly/security/util/ByteIterator;
       7: areturn
       8: new           #77                 // class org/wildfly/security/util/ByteIterator$14
      11: dup
      12: iload_2
      13: aload_0
      14: iload_1
      15: aload_3
      16: invokespecial #78                 // Method org/wildfly/security/util/ByteIterator$14."<init>":(I[BI[I)V
      19: areturn

  public static org.wildfly.security.util.ByteIterator ofBytes(byte[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: aload_1
       5: invokestatic  #79                 // Method ofBytes:([BII[I)Lorg/wildfly/security/util/ByteIterator;
       8: areturn

  public final java.io.InputStream asInputStream();
    Code:
       0: new           #80                 // class org/wildfly/security/util/ByteIterator$16
       3: dup
       4: aload_0
       5: invokespecial #81                 // Method org/wildfly/security/util/ByteIterator$16."<init>":(Lorg/wildfly/security/util/ByteIterator;)V
       8: areturn

  static byte[] access$000();
    Code:
       0: getstatic     #1                  // Field NO_BYTES:[B
       3: areturn

  static {};
    Code:
       0: new           #82                 // class org/wildfly/security/util/ByteIterator$1
       3: dup
       4: invokespecial #83                 // Method org/wildfly/security/util/ByteIterator$1."<init>":()V
       7: putstatic     #4                  // Field OP_BUFFER:Ljava/lang/ThreadLocal;
      10: iconst_0
      11: newarray       byte
      13: putstatic     #1                  // Field NO_BYTES:[B
      16: new           #84                 // class org/wildfly/security/util/ByteIterator$15
      19: dup
      20: invokespecial #85                 // Method org/wildfly/security/util/ByteIterator$15."<init>":()V
      23: putstatic     #51                 // Field EMPTY:Lorg/wildfly/security/util/ByteIterator;
      26: return
}
