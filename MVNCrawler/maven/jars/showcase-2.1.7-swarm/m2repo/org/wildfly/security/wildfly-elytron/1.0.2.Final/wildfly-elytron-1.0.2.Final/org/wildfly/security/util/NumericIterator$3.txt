Compiled from "NumericIterator.java"
class org.wildfly.security.util.NumericIterator$3 extends org.wildfly.security.util.NumericIterator$Base32ByteIterator {
  final org.wildfly.security.util.Alphabet$Base32Alphabet val$alphabet;

  final org.wildfly.security.util.NumericIterator this$0;

  org.wildfly.security.util.NumericIterator$3(org.wildfly.security.util.NumericIterator, org.wildfly.security.util.NumericIterator, boolean, org.wildfly.security.util.Alphabet$Base32Alphabet);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wildfly/security/util/NumericIterator;
       5: aload_0
       6: aload         4
       8: putfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      11: aload_0
      12: aload_2
      13: dup
      14: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: pop
      18: iload_3
      19: invokespecial #4                  // Method org/wildfly/security/util/NumericIterator$Base32ByteIterator."<init>":(Lorg/wildfly/security/util/NumericIterator;Z)V
      22: return

  int calc0(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
       8: istore_3
       9: aload_0
      10: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      13: iload_2
      14: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
      17: istore        4
      19: iload_3
      20: iconst_m1
      21: if_icmpeq     30
      24: iload         4
      26: iconst_m1
      27: if_icmpne     39
      30: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      33: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase32Character:()Lorg/wildfly/security/util/DecodeException;
      38: athrow
      39: iload_3
      40: iload         4
      42: iconst_5
      43: ishl
      44: ior
      45: sipush        255
      48: iand
      49: ireturn

  int calc1(int, int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
       8: istore        4
      10: aload_0
      11: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      14: iload_2
      15: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
      18: istore        5
      20: aload_0
      21: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      24: iload_3
      25: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
      28: istore        6
      30: iload         4
      32: iconst_m1
      33: if_icmpeq     48
      36: iload         5
      38: iconst_m1
      39: if_icmpeq     48
      42: iload         6
      44: iconst_m1
      45: if_icmpne     57
      48: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      51: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase32Character:()Lorg/wildfly/security/util/DecodeException;
      56: athrow
      57: iload         4
      59: iconst_3
      60: ishr
      61: iload         5
      63: iconst_2
      64: ishl
      65: ior
      66: iload         6
      68: bipush        7
      70: ishl
      71: ior
      72: sipush        255
      75: iand
      76: ireturn

  int calc2(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
       8: istore_3
       9: aload_0
      10: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      13: iload_2
      14: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
      17: istore        4
      19: iload_3
      20: iconst_m1
      21: if_icmpeq     30
      24: iload         4
      26: iconst_m1
      27: if_icmpne     39
      30: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      33: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase32Character:()Lorg/wildfly/security/util/DecodeException;
      38: athrow
      39: iload_3
      40: iconst_1
      41: ishr
      42: iload         4
      44: iconst_4
      45: ishl
      46: ior
      47: sipush        255
      50: iand
      51: ireturn

  int calc3(int, int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
       8: istore        4
      10: aload_0
      11: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      14: iload_2
      15: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
      18: istore        5
      20: aload_0
      21: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      24: iload_3
      25: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
      28: istore        6
      30: iload         4
      32: iconst_m1
      33: if_icmpeq     48
      36: iload         5
      38: iconst_m1
      39: if_icmpeq     48
      42: iload         6
      44: iconst_m1
      45: if_icmpne     57
      48: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      51: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase32Character:()Lorg/wildfly/security/util/DecodeException;
      56: athrow
      57: iload         4
      59: iconst_4
      60: ishr
      61: iload         5
      63: iconst_1
      64: ishl
      65: ior
      66: iload         6
      68: bipush        6
      70: ishl
      71: ior
      72: sipush        255
      75: iand
      76: ireturn

  int calc4(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
       4: iload_1
       5: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
       8: istore_3
       9: aload_0
      10: getfield      #2                  // Field val$alphabet:Lorg/wildfly/security/util/Alphabet$Base32Alphabet;
      13: iload_2
      14: invokevirtual #5                  // Method org/wildfly/security/util/Alphabet$Base32Alphabet.decode:(I)I
      17: istore        4
      19: iload_3
      20: iconst_m1
      21: if_icmpeq     30
      24: iload         4
      26: iconst_m1
      27: if_icmpne     39
      30: getstatic     #6                  // Field org/wildfly/security/_private/ElytronMessages.log:Lorg/wildfly/security/_private/ElytronMessages;
      33: invokeinterface #7,  1            // InterfaceMethod org/wildfly/security/_private/ElytronMessages.invalidBase32Character:()Lorg/wildfly/security/util/DecodeException;
      38: athrow
      39: iload_3
      40: iconst_2
      41: ishr
      42: iload         4
      44: iconst_3
      45: ishl
      46: ior
      47: sipush        255
      50: iand
      51: ireturn
}
