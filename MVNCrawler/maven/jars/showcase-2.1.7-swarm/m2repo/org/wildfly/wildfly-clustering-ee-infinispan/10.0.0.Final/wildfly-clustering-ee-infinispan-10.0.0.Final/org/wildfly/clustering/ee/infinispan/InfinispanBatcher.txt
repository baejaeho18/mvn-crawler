Compiled from "InfinispanBatcher.java"
public class org.wildfly.clustering.ee.infinispan.InfinispanBatcher implements org.wildfly.clustering.ee.Batcher<org.wildfly.clustering.ee.infinispan.TransactionBatch> {
  private static final org.wildfly.clustering.ee.BatchContext PASSIVE_BATCH_CONTEXT;

  private static final org.wildfly.clustering.ee.infinispan.TransactionBatch NON_TX_BATCH;

  private final javax.transaction.TransactionManager tm;

  public org.wildfly.clustering.ee.infinispan.InfinispanBatcher(org.infinispan.Cache<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
       7: invokeinterface #2,  1            // InterfaceMethod org/infinispan/AdvancedCache.getTransactionManager:()Ljavax/transaction/TransactionManager;
      12: invokespecial #3                  // Method "<init>":(Ljavax/transaction/TransactionManager;)V
      15: return

  public org.wildfly.clustering.ee.infinispan.InfinispanBatcher(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
       9: return

  public org.wildfly.clustering.ee.infinispan.TransactionBatch createBatch();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
       4: ifnonnull     11
       7: getstatic     #6                  // Field NON_TX_BATCH:Lorg/wildfly/clustering/ee/infinispan/TransactionBatch;
      10: areturn
      11: aload_0
      12: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
      15: invokeinterface #7,  1            // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      20: astore_1
      21: aload_1
      22: ifnull        53
      25: aload_1
      26: invokeinterface #8,  1            // InterfaceMethod javax/transaction/Transaction.getStatus:()I
      31: ifne          43
      34: new           #9                  // class org/wildfly/clustering/ee/infinispan/NestedTransactionBatch
      37: dup
      38: aload_1
      39: invokespecial #10                 // Method org/wildfly/clustering/ee/infinispan/NestedTransactionBatch."<init>":(Ljavax/transaction/Transaction;)V
      42: areturn
      43: aload_0
      44: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
      47: invokeinterface #11,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
      52: pop
      53: new           #12                 // class org/wildfly/clustering/ee/infinispan/NewTransactionBatch
      56: dup
      57: aload_0
      58: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
      61: invokespecial #13                 // Method org/wildfly/clustering/ee/infinispan/NewTransactionBatch."<init>":(Ljavax/transaction/TransactionManager;)V
      64: areturn
      65: astore_1
      66: new           #15                 // class org/infinispan/commons/CacheException
      69: dup
      70: aload_1
      71: invokespecial #16                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
    Exception table:
       from    to  target type
          11    42    65   Class javax/transaction/SystemException
          43    64    65   Class javax/transaction/SystemException

  public org.wildfly.clustering.ee.BatchContext resumeBatch(org.wildfly.clustering.ee.infinispan.TransactionBatch);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #17                 // Field PASSIVE_BATCH_CONTEXT:Lorg/wildfly/clustering/ee/BatchContext;
       7: areturn
       8: aload_1
       9: invokeinterface #18,  1           // InterfaceMethod org/wildfly/clustering/ee/infinispan/TransactionBatch.getTransaction:()Ljavax/transaction/Transaction;
      14: astore_2
      15: aload_2
      16: ifnull        34
      19: new           #19                 // class org/wildfly/clustering/ee/infinispan/InfinispanBatchContext
      22: dup
      23: aload_0
      24: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
      27: aload_2
      28: invokespecial #20                 // Method org/wildfly/clustering/ee/infinispan/InfinispanBatchContext."<init>":(Ljavax/transaction/TransactionManager;Ljavax/transaction/Transaction;)V
      31: goto          37
      34: getstatic     #17                 // Field PASSIVE_BATCH_CONTEXT:Lorg/wildfly/clustering/ee/BatchContext;
      37: areturn
      38: astore_2
      39: new           #15                 // class org/infinispan/commons/CacheException
      42: dup
      43: aload_2
      44: invokespecial #16                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           8    37    38   Class javax/transaction/SystemException
           8    37    38   Class javax/transaction/InvalidTransactionException

  public org.wildfly.clustering.ee.infinispan.TransactionBatch suspendBatch();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
      13: invokeinterface #11,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
      18: astore_1
      19: aload_1
      20: ifnull        38
      23: new           #22                 // class org/wildfly/clustering/ee/infinispan/ActiveTransactionBatch
      26: dup
      27: aload_0
      28: getfield      #5                  // Field tm:Ljavax/transaction/TransactionManager;
      31: aload_1
      32: invokespecial #23                 // Method org/wildfly/clustering/ee/infinispan/ActiveTransactionBatch."<init>":(Ljavax/transaction/TransactionManager;Ljavax/transaction/Transaction;)V
      35: goto          39
      38: aconst_null
      39: areturn
      40: astore_1
      41: new           #15                 // class org/infinispan/commons/CacheException
      44: dup
      45: aload_1
      46: invokespecial #16                 // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/Throwable;)V
      49: athrow
    Exception table:
       from    to  target type
           9    39    40   Class javax/transaction/SystemException

  public org.wildfly.clustering.ee.Batch suspendBatch();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method suspendBatch:()Lorg/wildfly/clustering/ee/infinispan/TransactionBatch;
       4: areturn

  public org.wildfly.clustering.ee.BatchContext resumeBatch(org.wildfly.clustering.ee.Batch);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class org/wildfly/clustering/ee/infinispan/TransactionBatch
       5: invokevirtual #26                 // Method resumeBatch:(Lorg/wildfly/clustering/ee/infinispan/TransactionBatch;)Lorg/wildfly/clustering/ee/BatchContext;
       8: areturn

  public org.wildfly.clustering.ee.Batch createBatch();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method createBatch:()Lorg/wildfly/clustering/ee/infinispan/TransactionBatch;
       4: areturn

  static {};
    Code:
       0: new           #28                 // class org/wildfly/clustering/ee/infinispan/InfinispanBatcher$1
       3: dup
       4: invokespecial #29                 // Method org/wildfly/clustering/ee/infinispan/InfinispanBatcher$1."<init>":()V
       7: putstatic     #17                 // Field PASSIVE_BATCH_CONTEXT:Lorg/wildfly/clustering/ee/BatchContext;
      10: new           #30                 // class org/wildfly/clustering/ee/infinispan/InfinispanBatcher$2
      13: dup
      14: invokespecial #31                 // Method org/wildfly/clustering/ee/infinispan/InfinispanBatcher$2."<init>":()V
      17: putstatic     #6                  // Field NON_TX_BATCH:Lorg/wildfly/clustering/ee/infinispan/TransactionBatch;
      20: return
}
