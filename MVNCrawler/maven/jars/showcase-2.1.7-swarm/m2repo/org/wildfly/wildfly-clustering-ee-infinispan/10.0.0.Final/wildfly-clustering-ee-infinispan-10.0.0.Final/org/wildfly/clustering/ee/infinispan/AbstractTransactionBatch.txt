Compiled from "AbstractTransactionBatch.java"
public abstract class org.wildfly.clustering.ee.infinispan.AbstractTransactionBatch implements org.wildfly.clustering.ee.infinispan.TransactionBatch {
  private final javax.transaction.Transaction tx;

  protected org.wildfly.clustering.ee.infinispan.AbstractTransactionBatch(javax.transaction.Transaction);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field tx:Ljavax/transaction/Transaction;
       9: return

  public javax.transaction.Transaction getTransaction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tx:Ljavax/transaction/Transaction;
       4: areturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tx:Ljavax/transaction/Transaction;
       4: invokeinterface #3,  1            // InterfaceMethod javax/transaction/Transaction.getStatus:()I
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn
      18: astore_1
      19: new           #5                  // class org/infinispan/commons/CacheException
      22: dup
      23: aload_1
      24: invokespecial #6                  // Method org/infinispan/commons/CacheException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    17    18   Class javax/transaction/SystemException
}
