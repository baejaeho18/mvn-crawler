Compiled from "CacheEntryMutator.java"
public class org.wildfly.clustering.ee.infinispan.CacheEntryMutator<K, V> implements org.wildfly.clustering.ee.infinispan.Mutator {
  private final org.infinispan.Cache<K, V> cache;

  private final K id;

  private final V value;

  private final java.util.concurrent.atomic.AtomicBoolean mutated;

  public org.wildfly.clustering.ee.infinispan.CacheEntryMutator(org.infinispan.Cache<K, V>, K, V);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cache:Lorg/infinispan/Cache;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field id:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field value:Ljava/lang/Object;
      19: aload_0
      20: aload_1
      21: invokeinterface #5,  1            // InterfaceMethod org/infinispan/Cache.getCacheConfiguration:()Lorg/infinispan/configuration/cache/Configuration;
      26: invokevirtual #6                  // Method org/infinispan/configuration/cache/Configuration.transaction:()Lorg/infinispan/configuration/cache/TransactionConfiguration;
      29: invokevirtual #7                  // Method org/infinispan/configuration/cache/TransactionConfiguration.transactionMode:()Lorg/infinispan/transaction/TransactionMode;
      32: invokevirtual #8                  // Method org/infinispan/transaction/TransactionMode.isTransactional:()Z
      35: ifeq          49
      38: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      41: dup
      42: iconst_0
      43: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      46: goto          50
      49: aconst_null
      50: putfield      #11                 // Field mutated:Ljava/util/concurrent/atomic/AtomicBoolean;
      53: return

  public void mutate();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mutated:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: ifnull        19
       7: aload_0
       8: getfield      #11                 // Field mutated:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_0
      12: iconst_1
      13: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      16: ifeq          63
      19: aload_0
      20: getfield      #2                  // Field cache:Lorg/infinispan/Cache;
      23: invokeinterface #13,  1           // InterfaceMethod org/infinispan/Cache.getAdvancedCache:()Lorg/infinispan/AdvancedCache;
      28: iconst_2
      29: anewarray     #14                 // class org/infinispan/context/Flag
      32: dup
      33: iconst_0
      34: getstatic     #15                 // Field org/infinispan/context/Flag.IGNORE_RETURN_VALUES:Lorg/infinispan/context/Flag;
      37: aastore
      38: dup
      39: iconst_1
      40: getstatic     #16                 // Field org/infinispan/context/Flag.FAIL_SILENTLY:Lorg/infinispan/context/Flag;
      43: aastore
      44: invokeinterface #17,  2           // InterfaceMethod org/infinispan/AdvancedCache.withFlags:([Lorg/infinispan/context/Flag;)Lorg/infinispan/AdvancedCache;
      49: aload_0
      50: getfield      #3                  // Field id:Ljava/lang/Object;
      53: aload_0
      54: getfield      #4                  // Field value:Ljava/lang/Object;
      57: invokeinterface #18,  3           // InterfaceMethod org/infinispan/AdvancedCache.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: return
}
