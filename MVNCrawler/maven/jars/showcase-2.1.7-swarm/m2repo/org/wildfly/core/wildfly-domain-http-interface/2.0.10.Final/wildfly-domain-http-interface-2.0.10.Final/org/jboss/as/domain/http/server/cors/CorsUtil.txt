Compiled from "CorsUtil.java"
public class org.jboss.as.domain.http.server.cors.CorsUtil {
  public org.jboss.as.domain.http.server.cors.CorsUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isCoreRequest(io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/jboss/as/domain/http/server/cors/CorsHeaders.ORIGIN:Lio/undertow/util/HttpString;
       4: invokevirtual #3                  // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
       7: ifne          30
      10: aload_0
      11: getstatic     #4                  // Field org/jboss/as/domain/http/server/cors/CorsHeaders.ACCESS_CONTROL_REQUEST_HEADERS:Lio/undertow/util/HttpString;
      14: invokevirtual #3                  // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      17: ifne          30
      20: aload_0
      21: getstatic     #5                  // Field org/jboss/as/domain/http/server/cors/CorsHeaders.ACCESS_CONTROL_REQUEST_METHOD:Lio/undertow/util/HttpString;
      24: invokevirtual #3                  // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public static java.lang.String matchOrigin(io.undertow.server.HttpServerExchange, java.util.Collection<java.lang.String>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: astore_2
       5: aload_2
       6: getstatic     #7                  // Field io/undertow/util/Headers.ORIGIN:Lio/undertow/util/HttpString;
       9: invokevirtual #8                  // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
      12: invokevirtual #9                  // Method io/undertow/util/HeaderValues.toArray:()[Ljava/lang/String;
      15: astore_3
      16: aload_1
      17: ifnull        109
      20: aload_1
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      26: ifne          109
      29: aload_1
      30: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          109
      47: aload         4
      49: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #14                 // class java/lang/String
      57: astore        5
      59: aload_3
      60: astore        6
      62: aload         6
      64: arraylength
      65: istore        7
      67: iconst_0
      68: istore        8
      70: iload         8
      72: iload         7
      74: if_icmpge     106
      77: aload         6
      79: iload         8
      81: aaload
      82: astore        9
      84: aload         5
      86: aload         9
      88: invokestatic  #15                 // Method sanitizeDefaultPort:(Ljava/lang/String;)Ljava/lang/String;
      91: invokevirtual #16                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      94: ifeq          100
      97: aload         5
      99: areturn
     100: iinc          8, 1
     103: goto          70
     106: goto          37
     109: aload_0
     110: invokestatic  #17                 // Method defaultOrigin:(Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
     113: astore        4
     115: aload_3
     116: astore        5
     118: aload         5
     120: arraylength
     121: istore        6
     123: iconst_0
     124: istore        7
     126: iload         7
     128: iload         6
     130: if_icmpge     162
     133: aload         5
     135: iload         7
     137: aaload
     138: astore        8
     140: aload         4
     142: aload         8
     144: invokestatic  #15                 // Method sanitizeDefaultPort:(Ljava/lang/String;)Ljava/lang/String;
     147: invokevirtual #16                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     150: ifeq          156
     153: aload         4
     155: areturn
     156: iinc          7, 1
     159: goto          126
     162: getstatic     #18                 // Field org/jboss/as/domain/http/server/logging/HttpServerLogger.ROOT_LOGGER:Lorg/jboss/as/domain/http/server/logging/HttpServerLogger;
     165: ldc           #19                 // String Request rejected due to HOST/ORIGIN mis-match.
     167: invokeinterface #20,  2           // InterfaceMethod org/jboss/as/domain/http/server/logging/HttpServerLogger.debug:(Ljava/lang/Object;)V
     172: getstatic     #21                 // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_403:Lio/undertow/server/handlers/ResponseCodeHandler;
     175: aload_0
     176: invokevirtual #22                 // Method io/undertow/server/handlers/ResponseCodeHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     179: aconst_null
     180: areturn

  public static java.lang.String defaultOrigin(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getHostName:()Ljava/lang/String;
       4: invokestatic  #24                 // Method io/undertow/util/NetworkUtils.formatPossibleIpv6Address:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getRequestScheme:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: invokevirtual #26                 // Method io/undertow/server/HttpServerExchange.getHostPort:()I
      17: istore_3
      18: new           #27                 // class java/lang/StringBuilder
      21: dup
      22: sipush        256
      25: invokespecial #28                 // Method java/lang/StringBuilder."<init>":(I)V
      28: astore        4
      30: aload         4
      32: aload_2
      33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #30                 // String ://
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: iload_3
      47: aload_2
      48: invokestatic  #31                 // Method isDefaultPort:(ILjava/lang/String;)Z
      51: ifne          66
      54: aload         4
      56: bipush        58
      58: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: iload_3
      62: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: pop
      66: aload         4
      68: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  private static boolean isDefaultPort(int, java.lang.String);
    Code:
       0: ldc           #35                 // String http
       2: aload_1
       3: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          15
       9: bipush        80
      11: iload_0
      12: if_icmpeq     31
      15: ldc           #37                 // String https
      17: aload_1
      18: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          35
      24: sipush        443
      27: iload_0
      28: if_icmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public static java.lang.String sanitizeDefaultPort(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #30                 // String ://
       3: invokevirtual #38                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       6: istore_1
       7: iload_1
       8: ifge          13
      11: aload_0
      12: areturn
      13: aload_0
      14: iconst_0
      15: iload_1
      16: invokevirtual #39                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: invokevirtual #40                 // Method java/lang/String.length:()I
      24: iconst_3
      25: iadd
      26: istore_3
      27: aload_0
      28: bipush        91
      30: iload_3
      31: invokevirtual #41                 // Method java/lang/String.indexOf:(II)I
      34: istore        4
      36: iload         4
      38: ifle          50
      41: aload_0
      42: bipush        93
      44: iload         4
      46: invokevirtual #41                 // Method java/lang/String.indexOf:(II)I
      49: istore_3
      50: aload_0
      51: bipush        58
      53: iload_3
      54: invokevirtual #41                 // Method java/lang/String.indexOf:(II)I
      57: istore        5
      59: iload         5
      61: iflt          94
      64: aload_0
      65: iload         5
      67: iconst_1
      68: iadd
      69: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      72: invokestatic  #43                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      75: istore        6
      77: iload         6
      79: aload_2
      80: invokestatic  #31                 // Method isDefaultPort:(ILjava/lang/String;)Z
      83: ifeq          94
      86: aload_0
      87: iconst_0
      88: iload         5
      90: invokevirtual #39                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      93: areturn
      94: aload_0
      95: areturn

  public static boolean isPreflightedRequest(io.undertow.server.HttpServerExchange);
    Code:
       0: getstatic     #44                 // Field io/undertow/util/Methods.OPTIONS:Lio/undertow/util/HttpString;
       3: aload_0
       4: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       7: invokevirtual #46                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      10: ifeq          27
      13: aload_0
      14: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      17: invokestatic  #47                 // Method isCoreRequest:(Lio/undertow/util/HeaderMap;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
}
