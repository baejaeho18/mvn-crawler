Compiled from "ControlPoint.java"
public class org.wildfly.extension.requestcontroller.ControlPoint {
  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.wildfly.extension.requestcontroller.ControlPoint> activeRequestCountUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.wildfly.extension.requestcontroller.ControlPoint, org.jboss.as.server.suspend.ServerActivityCallback> listenerUpdater;

  private final org.wildfly.extension.requestcontroller.RequestController controller;

  private final java.lang.String deployment;

  private final java.lang.String entryPoint;

  private final boolean trackIndividualControlPoints;

  private volatile int activeRequestCount;

  private volatile boolean paused;

  private volatile org.jboss.as.server.suspend.ServerActivityCallback listener;

  private int referenceCount;

  org.wildfly.extension.requestcontroller.ControlPoint(org.wildfly.extension.requestcontroller.RequestController, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field activeRequestCount:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field paused:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field listener:Lorg/jboss/as/server/suspend/ServerActivityCallback;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field referenceCount:I
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field controller:Lorg/wildfly/extension/requestcontroller/RequestController;
      29: aload_0
      30: aload_2
      31: putfield      #7                  // Field deployment:Ljava/lang/String;
      34: aload_0
      35: aload_3
      36: putfield      #8                  // Field entryPoint:Ljava/lang/String;
      39: aload_0
      40: iload         4
      42: putfield      #9                  // Field trackIndividualControlPoints:Z
      45: return

  public java.lang.String getEntryPoint();
    Code:
       0: aload_0
       1: getfield      #8                  // Field entryPoint:Ljava/lang/String;
       4: areturn

  public java.lang.String getDeployment();
    Code:
       0: aload_0
       1: getfield      #7                  // Field deployment:Ljava/lang/String;
       4: areturn

  public void pause(org.jboss.as.server.suspend.ServerActivityCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field paused:Z
       4: ifeq          16
       7: getstatic     #10                 // Field org/jboss/as/server/logging/ServerLogger.ROOT_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      10: invokeinterface #11,  1           // InterfaceMethod org/jboss/as/server/logging/ServerLogger.serverAlreadyPaused:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: iconst_1
      18: putfield      #3                  // Field paused:Z
      21: getstatic     #12                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: aload_0
      25: aload_1
      26: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: getstatic     #14                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: aload_0
      33: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      36: ifne          57
      39: getstatic     #12                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: aload_0
      43: aload_1
      44: aconst_null
      45: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifeq          57
      51: aload_1
      52: invokeinterface #17,  1           // InterfaceMethod org/jboss/as/server/suspend/ServerActivityCallback.done:()V
      57: return

  public void resume();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field paused:Z
       5: getstatic     #12                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       8: aload_0
       9: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #19                 // class org/jboss/as/server/suspend/ServerActivityCallback
      15: astore_1
      16: aload_1
      17: ifnull        30
      20: getstatic     #12                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: aload_0
      24: aload_1
      25: aconst_null
      26: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      29: pop
      30: return

  public org.wildfly.extension.requestcontroller.RunResult beginRequest() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field paused:Z
       4: ifeq          11
       7: getstatic     #20                 // Field org/wildfly/extension/requestcontroller/RunResult.REJECTED:Lorg/wildfly/extension/requestcontroller/RunResult;
      10: areturn
      11: aload_0
      12: getfield      #9                  // Field trackIndividualControlPoints:Z
      15: ifeq          26
      18: getstatic     #14                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      21: aload_0
      22: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
      25: pop
      26: aload_0
      27: getfield      #6                  // Field controller:Lorg/wildfly/extension/requestcontroller/RequestController;
      30: iconst_0
      31: invokevirtual #22                 // Method org/wildfly/extension/requestcontroller/RequestController.beginRequest:(Z)Lorg/wildfly/extension/requestcontroller/RunResult;
      34: astore_1
      35: aload_1
      36: getstatic     #20                 // Field org/wildfly/extension/requestcontroller/RunResult.REJECTED:Lorg/wildfly/extension/requestcontroller/RunResult;
      39: if_acmpne     46
      42: aload_0
      43: invokespecial #23                 // Method decreaseRequestCount:()V
      46: aload_1
      47: areturn

  public org.wildfly.extension.requestcontroller.RunResult forceBeginRequest() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field trackIndividualControlPoints:Z
       4: ifeq          15
       7: getstatic     #14                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
      14: pop
      15: aload_0
      16: getfield      #6                  // Field controller:Lorg/wildfly/extension/requestcontroller/RequestController;
      19: iconst_1
      20: invokevirtual #22                 // Method org/wildfly/extension/requestcontroller/RequestController.beginRequest:(Z)Lorg/wildfly/extension/requestcontroller/RunResult;
      23: areturn

  void beginExistingRequest();
    Code:
       0: aload_0
       1: getfield      #9                  // Field trackIndividualControlPoints:Z
       4: ifeq          15
       7: getstatic     #14                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
      14: pop
      15: return

  public void requestComplete();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method decreaseRequestCount:()V
       4: aload_0
       5: getfield      #6                  // Field controller:Lorg/wildfly/extension/requestcontroller/RequestController;
       8: invokevirtual #24                 // Method org/wildfly/extension/requestcontroller/RequestController.requestComplete:()V
      11: return

  private void decreaseRequestCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field trackIndividualControlPoints:Z
       4: ifeq          59
       7: getstatic     #14                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      14: istore_1
      15: aload_0
      16: getfield      #3                  // Field paused:Z
      19: ifeq          59
      22: iload_1
      23: ifne          59
      26: getstatic     #12                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: aload_0
      30: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #19                 // class org/jboss/as/server/suspend/ServerActivityCallback
      36: astore_2
      37: aload_2
      38: ifnull        59
      41: getstatic     #12                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      44: aload_0
      45: aload_2
      46: aconst_null
      47: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifeq          59
      53: aload_2
      54: invokeinterface #17,  1           // InterfaceMethod org/jboss/as/server/suspend/ServerActivityCallback.done:()V
      59: return

  public void queueTask(java.lang.Runnable, java.util.concurrent.Executor, long, java.lang.Runnable, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field controller:Lorg/wildfly/extension/requestcontroller/RequestController;
       4: aload_0
       5: aload_1
       6: aload_2
       7: lload_3
       8: aload         5
      10: iload         6
      12: iconst_0
      13: invokevirtual #26                 // Method org/wildfly/extension/requestcontroller/RequestController.queueTask:(Lorg/wildfly/extension/requestcontroller/ControlPoint;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;JLjava/lang/Runnable;ZZ)V
      16: return

  public void forceQueueTask(java.lang.Runnable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field controller:Lorg/wildfly/extension/requestcontroller/RequestController;
       4: aload_0
       5: aload_1
       6: aload_2
       7: ldc2_w        #27                 // long -1l
      10: aconst_null
      11: iconst_0
      12: iconst_1
      13: invokevirtual #26                 // Method org/wildfly/extension/requestcontroller/RequestController.queueTask:(Lorg/wildfly/extension/requestcontroller/ControlPoint;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;JLjava/lang/Runnable;ZZ)V
      16: return

  public boolean isPaused();
    Code:
       0: aload_0
       1: getfield      #3                  // Field paused:Z
       4: ireturn

  public int getActiveRequestCount();
    Code:
       0: getstatic     #14                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ireturn

  synchronized int increaseReferenceCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field referenceCount:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #5                  // Field referenceCount:I
      11: ireturn

  synchronized int decreaseReferenceCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field referenceCount:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #5                  // Field referenceCount:I
      11: ireturn

  static {};
    Code:
       0: ldc           #29                 // class org/wildfly/extension/requestcontroller/ControlPoint
       2: ldc           #30                 // String activeRequestCount
       4: invokestatic  #31                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #14                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #29                 // class org/wildfly/extension/requestcontroller/ControlPoint
      12: ldc           #19                 // class org/jboss/as/server/suspend/ServerActivityCallback
      14: ldc           #32                 // String listener
      16: invokestatic  #33                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      19: putstatic     #12                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      22: return
}
