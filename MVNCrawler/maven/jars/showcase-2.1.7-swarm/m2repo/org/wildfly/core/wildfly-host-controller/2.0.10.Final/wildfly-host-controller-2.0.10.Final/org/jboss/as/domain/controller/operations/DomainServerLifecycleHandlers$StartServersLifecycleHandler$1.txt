Compiled from "DomainServerLifecycleHandlers.java"
class org.jboss.as.domain.controller.operations.DomainServerLifecycleHandlers$StartServersLifecycleHandler$1 implements org.jboss.as.controller.OperationStepHandler {
  final org.jboss.dmr.ModelNode val$model;

  final java.lang.String val$group;

  final boolean val$blocking;

  final org.jboss.as.domain.controller.operations.DomainServerLifecycleHandlers$StartServersLifecycleHandler this$0;

  org.jboss.as.domain.controller.operations.DomainServerLifecycleHandlers$StartServersLifecycleHandler$1(org.jboss.as.domain.controller.operations.DomainServerLifecycleHandlers$StartServersLifecycleHandler, org.jboss.dmr.ModelNode, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field val$model:Lorg/jboss/dmr/ModelNode;
      10: aload_0
      11: aload_3
      12: putfield      #4                  // Field val$group:Ljava/lang/String;
      15: aload_0
      16: iload         4
      18: putfield      #5                  // Field val$blocking:Z
      21: aload_0
      22: invokespecial #6                  // Method java/lang/Object."<init>":()V
      25: return

  public void execute(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$model:Lorg/jboss/dmr/ModelNode;
       4: ldc           #7                  // String host
       6: invokevirtual #8                  // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       9: invokevirtual #9                  // Method org/jboss/dmr/ModelNode.keys:()Ljava/util/Set;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #12                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: getfield      #3                  // Field val$model:Lorg/jboss/dmr/ModelNode;
      30: iconst_2
      31: anewarray     #12                 // class java/lang/String
      34: dup
      35: iconst_0
      36: ldc           #7                  // String host
      38: aastore
      39: dup
      40: iconst_1
      41: aload_3
      42: aastore
      43: invokevirtual #13                 // Method org/jboss/dmr/ModelNode.get:([Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      46: ldc           #14                 // String server-config
      48: invokevirtual #8                  // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      51: astore        4
      53: aload_0
      54: getfield      #2                  // Field this$0:Lorg/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler;
      57: aload_0
      58: getfield      #3                  // Field val$model:Lorg/jboss/dmr/ModelNode;
      61: aload_0
      62: getfield      #4                  // Field val$group:Ljava/lang/String;
      65: invokevirtual #15                 // Method org/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler.getServersForGroup:(Lorg/jboss/dmr/ModelNode;Ljava/lang/String;)Ljava/util/Set;
      68: astore        5
      70: new           #16                 // class java/util/HashSet
      73: dup
      74: invokespecial #17                 // Method java/util/HashSet."<init>":()V
      77: astore        6
      79: aload         4
      81: invokevirtual #18                 // Method org/jboss/dmr/ModelNode.isDefined:()Z
      84: ifeq          273
      87: aload_1
      88: iconst_1
      89: invokeinterface #19,  2           // InterfaceMethod org/jboss/as/controller/OperationContext.getServiceRegistry:(Z)Lorg/jboss/msc/service/ServiceRegistry;
      94: pop
      95: aload         4
      97: invokevirtual #20                 // Method org/jboss/dmr/ModelNode.asPropertyList:()Ljava/util/List;
     100: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     105: astore        7
     107: aload         7
     109: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     114: ifeq          251
     117: aload         7
     119: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     124: checkcast     #23                 // class org/jboss/dmr/Property
     127: astore        8
     129: aload_0
     130: getfield      #2                  // Field this$0:Lorg/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler;
     133: getfield      #24                 // Field org/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler.serverInventory:Lorg/jboss/as/host/controller/ServerInventory;
     136: aload         8
     138: invokevirtual #25                 // Method org/jboss/dmr/Property.getName:()Ljava/lang/String;
     141: invokeinterface #26,  2           // InterfaceMethod org/jboss/as/host/controller/ServerInventory.determineServerStatus:(Ljava/lang/String;)Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
     146: astore        9
     148: aload         9
     150: getstatic     #27                 // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STARTING:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
     153: if_acmpeq     248
     156: aload         9
     158: getstatic     #28                 // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STARTED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
     161: if_acmpeq     248
     164: aload_0
     165: getfield      #4                  // Field val$group:Ljava/lang/String;
     168: ifnull        186
     171: aload         5
     173: aload         8
     175: invokevirtual #25                 // Method org/jboss/dmr/Property.getName:()Ljava/lang/String;
     178: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     183: ifeq          248
     186: aload         9
     188: getstatic     #30                 // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STOPPED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
     191: if_acmpeq     213
     194: aload_0
     195: getfield      #2                  // Field this$0:Lorg/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler;
     198: getfield      #24                 // Field org/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler.serverInventory:Lorg/jboss/as/host/controller/ServerInventory;
     201: aload         8
     203: invokevirtual #25                 // Method org/jboss/dmr/Property.getName:()Ljava/lang/String;
     206: iconst_0
     207: invokeinterface #31,  3           // InterfaceMethod org/jboss/as/host/controller/ServerInventory.stopServer:(Ljava/lang/String;I)Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
     212: pop
     213: aload_0
     214: getfield      #2                  // Field this$0:Lorg/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler;
     217: getfield      #24                 // Field org/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler.serverInventory:Lorg/jboss/as/host/controller/ServerInventory;
     220: aload         8
     222: invokevirtual #25                 // Method org/jboss/dmr/Property.getName:()Ljava/lang/String;
     225: aload_0
     226: getfield      #3                  // Field val$model:Lorg/jboss/dmr/ModelNode;
     229: invokeinterface #32,  3           // InterfaceMethod org/jboss/as/host/controller/ServerInventory.startServer:(Ljava/lang/String;Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
     234: pop
     235: aload         6
     237: aload         8
     239: invokevirtual #25                 // Method org/jboss/dmr/Property.getName:()Ljava/lang/String;
     242: invokeinterface #33,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     247: pop
     248: goto          107
     251: aload_0
     252: getfield      #5                  // Field val$blocking:Z
     255: ifeq          273
     258: aload_0
     259: getfield      #2                  // Field this$0:Lorg/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler;
     262: getfield      #24                 // Field org/jboss/as/domain/controller/operations/DomainServerLifecycleHandlers$StartServersLifecycleHandler.serverInventory:Lorg/jboss/as/host/controller/ServerInventory;
     265: aload         6
     267: iconst_1
     268: invokeinterface #34,  3           // InterfaceMethod org/jboss/as/host/controller/ServerInventory.awaitServersState:(Ljava/util/Collection;Z)V
     273: aload_1
     274: getstatic     #35                 // Field org/jboss/as/controller/OperationContext$RollbackHandler.NOOP_ROLLBACK_HANDLER:Lorg/jboss/as/controller/OperationContext$RollbackHandler;
     277: invokeinterface #36,  2           // InterfaceMethod org/jboss/as/controller/OperationContext.completeStep:(Lorg/jboss/as/controller/OperationContext$RollbackHandler;)V
     282: return
}
