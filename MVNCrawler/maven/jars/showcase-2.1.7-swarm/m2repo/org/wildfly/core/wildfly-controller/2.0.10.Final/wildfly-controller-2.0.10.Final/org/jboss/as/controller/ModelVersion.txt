Compiled from "ModelVersion.java"
public final class org.jboss.as.controller.ModelVersion implements org.jboss.as.controller.ModelVersionRange {
  public static final org.jboss.as.controller.ModelVersion CURRENT;

  private final int major;

  private final int minor;

  private final int micro;

  org.jboss.as.controller.ModelVersion(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field major:I
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field minor:I
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field micro:I
      19: return

  public int getMajor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field major:I
       4: ireturn

  public int getMinor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field minor:I
       4: ireturn

  public int getMicro();
    Code:
       0: aload_0
       1: getfield      #5                  // Field micro:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #7                  // class org/jboss/as/controller/ModelVersion
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field major:I
      33: aload_2
      34: getfield      #3                  // Field major:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #5                  // Field micro:I
      46: aload_2
      47: getfield      #5                  // Field micro:I
      50: if_icmpeq     55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: getfield      #4                  // Field minor:I
      59: aload_2
      60: getfield      #4                  // Field minor:I
      63: if_icmpeq     68
      66: iconst_0
      67: ireturn
      68: iconst_1
      69: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field major:I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #4                  // Field minor:I
      13: iadd
      14: istore_1
      15: bipush        31
      17: iload_1
      18: imul
      19: aload_0
      20: getfield      #5                  // Field micro:I
      23: iadd
      24: istore_1
      25: iload_1
      26: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field major:I
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: ldc           #11                 // String .
      18: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #4                  // Field minor:I
      25: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #11                 // String .
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #5                  // Field micro:I
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: pop
      41: aload_1
      42: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  public org.jboss.dmr.ModelNode toModelNode();
    Code:
       0: new           #14                 // class org/jboss/dmr/ModelNode
       3: dup
       4: invokespecial #15                 // Method org/jboss/dmr/ModelNode."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #16                 // Method addToExistingModel:(Lorg/jboss/dmr/ModelNode;)V
      13: aload_1
      14: areturn

  public void addToExistingModel(org.jboss.dmr.ModelNode);
    Code:
       0: aload_1
       1: ldc           #17                 // String management-major-version
       3: invokevirtual #18                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       6: aload_0
       7: getfield      #3                  // Field major:I
      10: invokevirtual #19                 // Method org/jboss/dmr/ModelNode.set:(I)Lorg/jboss/dmr/ModelNode;
      13: pop
      14: aload_1
      15: ldc           #20                 // String management-minor-version
      17: invokevirtual #18                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      20: aload_0
      21: getfield      #4                  // Field minor:I
      24: invokevirtual #19                 // Method org/jboss/dmr/ModelNode.set:(I)Lorg/jboss/dmr/ModelNode;
      27: pop
      28: aload_1
      29: ldc           #21                 // String management-micro-version
      31: invokevirtual #18                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      34: aload_0
      35: getfield      #5                  // Field micro:I
      38: invokevirtual #19                 // Method org/jboss/dmr/ModelNode.set:(I)Lorg/jboss/dmr/ModelNode;
      41: pop
      42: return

  public org.jboss.as.controller.ModelVersion[] getVersions();
    Code:
       0: iconst_1
       1: anewarray     #7                  // class org/jboss/as/controller/ModelVersion
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: areturn

  public static org.jboss.as.controller.ModelVersion create(int);
    Code:
       0: iload_0
       1: iconst_0
       2: iconst_0
       3: invokestatic  #22                 // Method create:(III)Lorg/jboss/as/controller/ModelVersion;
       6: areturn

  public static org.jboss.as.controller.ModelVersion create(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #22                 // Method create:(III)Lorg/jboss/as/controller/ModelVersion;
       6: areturn

  public static org.jboss.as.controller.ModelVersion create(int, int, int);
    Code:
       0: new           #7                  // class org/jboss/as/controller/ModelVersion
       3: dup
       4: iload_0
       5: iload_1
       6: iload_2
       7: invokespecial #23                 // Method "<init>":(III)V
      10: areturn

  public static org.jboss.as.controller.ModelVersion fromString(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method convert:(Ljava/lang/String;)Lorg/jboss/as/controller/ModelVersion;
       4: areturn

  static org.jboss.as.controller.ModelVersion convert(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #25                 // String \\.
       3: invokevirtual #26                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: arraylength
       9: istore_2
      10: iload_2
      11: iconst_3
      12: if_icmple     23
      15: new           #27                 // class java/lang/IllegalStateException
      18: dup
      19: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":()V
      22: athrow
      23: aload_1
      24: iconst_0
      25: aaload
      26: invokestatic  #29                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      29: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
      32: istore_3
      33: iload_2
      34: iconst_1
      35: if_icmple     50
      38: aload_1
      39: iconst_1
      40: aaload
      41: invokestatic  #29                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      44: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
      47: goto          51
      50: iconst_0
      51: istore        4
      53: iload_2
      54: iconst_3
      55: if_icmpne     70
      58: aload_1
      59: iconst_2
      60: aaload
      61: invokestatic  #29                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      64: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
      67: goto          71
      70: iconst_0
      71: istore        5
      73: iload_3
      74: iload         4
      76: iload         5
      78: invokestatic  #22                 // Method create:(III)Lorg/jboss/as/controller/ModelVersion;
      81: areturn

  public static int compare(org.jboss.as.controller.ModelVersion, org.jboss.as.controller.ModelVersion);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method getMajor:()I
       4: aload_0
       5: invokevirtual #31                 // Method getMajor:()I
       8: if_icmple     13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: invokevirtual #31                 // Method getMajor:()I
      17: aload_0
      18: invokevirtual #31                 // Method getMajor:()I
      21: if_icmpge     26
      24: iconst_m1
      25: ireturn
      26: aload_1
      27: invokevirtual #32                 // Method getMinor:()I
      30: aload_0
      31: invokevirtual #32                 // Method getMinor:()I
      34: if_icmple     39
      37: iconst_1
      38: ireturn
      39: aload_1
      40: invokevirtual #32                 // Method getMinor:()I
      43: aload_0
      44: invokevirtual #32                 // Method getMinor:()I
      47: if_icmpge     52
      50: iconst_m1
      51: ireturn
      52: aload_1
      53: invokevirtual #33                 // Method getMicro:()I
      56: aload_0
      57: invokevirtual #33                 // Method getMicro:()I
      60: if_icmple     65
      63: iconst_1
      64: ireturn
      65: aload_1
      66: invokevirtual #33                 // Method getMicro:()I
      69: aload_0
      70: invokevirtual #33                 // Method getMicro:()I
      73: if_icmpge     78
      76: iconst_m1
      77: ireturn
      78: iconst_0
      79: ireturn

  static {};
    Code:
       0: new           #7                  // class org/jboss/as/controller/ModelVersion
       3: dup
       4: iconst_4
       5: iconst_0
       6: iconst_0
       7: invokespecial #23                 // Method "<init>":(III)V
      10: putstatic     #35                 // Field CURRENT:Lorg/jboss/as/controller/ModelVersion;
      13: return
}
