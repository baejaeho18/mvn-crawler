Compiled from "ParsedRolloutPlanHeader.java"
public class org.jboss.as.cli.operation.impl.ParsedRolloutPlanHeader implements org.jboss.as.cli.operation.ParsedOperationRequestHeader {
  private static final java.lang.String HEADER_NAME;

  private static final int SEPARATOR_GROUP_SEQUENCE;

  private static final int SEPARATOR_GROUP_CONCURRENT;

  private static final int SEPARATOR_PROPERTY;

  private static final int SEPARATOR_PROPERTY_LIST_START;

  private static final int SEPARATOR_PROPERTY_LIST_END;

  private static final int SEPARATOR_PLAN_ID_VALUE;

  private final java.lang.String planId;

  private java.lang.String planRef;

  private java.util.List<org.jboss.as.cli.operation.impl.RolloutPlanGroup> groups;

  private java.util.Map<java.lang.String, java.lang.String> props;

  private org.jboss.as.cli.operation.impl.SingleRolloutPlanGroup lastGroup;

  private java.lang.String lastPropertyName;

  private java.lang.String lastPropertyValue;

  private int lastChunkIndex;

  private int separator;

  private int lastSeparatorIndex;

  private java.util.Set<java.lang.String> mentionedGroups;

  public org.jboss.as.cli.operation.impl.ParsedRolloutPlanHeader();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/String;)V
       5: return

  public org.jboss.as.cli.operation.impl.ParsedRolloutPlanHeader(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #3                  // Field separator:I
       9: aload_0
      10: iconst_m1
      11: putfield      #4                  // Field lastSeparatorIndex:I
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field planId:Ljava/lang/String;
      19: return

  public java.lang.String getName();
    Code:
       0: ldc           #7                  // String rollout
       2: areturn

  public java.lang.String getPlanId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field planId:Ljava/lang/String;
       4: areturn

  public java.lang.String getPlanRef();
    Code:
       0: aload_0
       1: getfield      #8                  // Field planRef:Ljava/lang/String;
       4: areturn

  public void setPlanRef(int, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          21
      11: new           #10                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #11                 // String Plan ref is null or empty.
      17: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #13                 // Field groups:Ljava/util/List;
      25: ifnull        38
      28: new           #14                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #15                 // String Plan ref can\'t be specified when groups are specified.
      34: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_2
      40: putfield      #8                  // Field planRef:Ljava/lang/String;
      43: aload_0
      44: iload_1
      45: putfield      #17                 // Field lastChunkIndex:I
      48: aload_0
      49: iconst_m1
      50: putfield      #3                  // Field separator:I
      53: return

  public boolean endsOnPlanIdValueSeparator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field separator:I
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void planIdValueSeparator(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field lastSeparatorIndex:I
       5: aload_0
       6: bipush        6
       8: putfield      #3                  // Field separator:I
      11: return

  public void addGroup(org.jboss.as.cli.operation.impl.SingleRolloutPlanGroup);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #18                 // String group is null
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #8                  // Field planRef:Ljava/lang/String;
      18: ifnull        31
      21: new           #14                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #19                 // String Groups can\'t be added if the plan ref is specified.
      27: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #13                 // Field groups:Ljava/util/List;
      35: ifnonnull     49
      38: aload_0
      39: new           #20                 // class java/util/ArrayList
      42: dup
      43: invokespecial #21                 // Method java/util/ArrayList."<init>":()V
      46: putfield      #13                 // Field groups:Ljava/util/List;
      49: aload_0
      50: getfield      #13                 // Field groups:Ljava/util/List;
      53: aload_1
      54: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_0
      61: aload_1
      62: putfield      #23                 // Field lastGroup:Lorg/jboss/as/cli/operation/impl/SingleRolloutPlanGroup;
      65: aload_0
      66: iconst_m1
      67: putfield      #3                  // Field separator:I
      70: aload_0
      71: getfield      #24                 // Field mentionedGroups:Ljava/util/Set;
      74: ifnonnull     88
      77: aload_0
      78: new           #25                 // class java/util/HashSet
      81: dup
      82: invokespecial #26                 // Method java/util/HashSet."<init>":()V
      85: putfield      #24                 // Field mentionedGroups:Ljava/util/Set;
      88: aload_0
      89: getfield      #24                 // Field mentionedGroups:Ljava/util/Set;
      92: aload_1
      93: invokevirtual #27                 // Method org/jboss/as/cli/operation/impl/SingleRolloutPlanGroup.getGroupName:()Ljava/lang/String;
      96: invokeinterface #28,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     101: pop
     102: return

  public void addConcurrentGroup(org.jboss.as.cli.operation.impl.SingleRolloutPlanGroup);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #18                 // String group is null
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #8                  // Field planRef:Ljava/lang/String;
      18: ifnull        31
      21: new           #14                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #19                 // String Groups can\'t be added if the plan ref is specified.
      27: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #13                 // Field groups:Ljava/util/List;
      35: ifnonnull     42
      38: iconst_m1
      39: goto          53
      42: aload_0
      43: getfield      #13                 // Field groups:Ljava/util/List;
      46: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      51: iconst_1
      52: isub
      53: istore_2
      54: iload_2
      55: ifge          68
      58: new           #14                 // class java/lang/IllegalStateException
      61: dup
      62: ldc           #30                 // String There must be a group before a concurrent group can be added.
      64: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #13                 // Field groups:Ljava/util/List;
      72: iload_2
      73: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      78: checkcast     #32                 // class org/jboss/as/cli/operation/impl/RolloutPlanGroup
      81: astore_3
      82: aload_3
      83: instanceof    #33                 // class org/jboss/as/cli/operation/impl/ConcurrentRolloutPlanGroup
      86: ifeq          100
      89: aload_3
      90: checkcast     #33                 // class org/jboss/as/cli/operation/impl/ConcurrentRolloutPlanGroup
      93: aload_1
      94: invokevirtual #34                 // Method org/jboss/as/cli/operation/impl/ConcurrentRolloutPlanGroup.addGroup:(Lorg/jboss/as/cli/operation/impl/RolloutPlanGroup;)V
      97: goto          134
     100: new           #33                 // class org/jboss/as/cli/operation/impl/ConcurrentRolloutPlanGroup
     103: dup
     104: invokespecial #35                 // Method org/jboss/as/cli/operation/impl/ConcurrentRolloutPlanGroup."<init>":()V
     107: astore        4
     109: aload         4
     111: aload_3
     112: invokevirtual #34                 // Method org/jboss/as/cli/operation/impl/ConcurrentRolloutPlanGroup.addGroup:(Lorg/jboss/as/cli/operation/impl/RolloutPlanGroup;)V
     115: aload         4
     117: aload_1
     118: invokevirtual #34                 // Method org/jboss/as/cli/operation/impl/ConcurrentRolloutPlanGroup.addGroup:(Lorg/jboss/as/cli/operation/impl/RolloutPlanGroup;)V
     121: aload_0
     122: getfield      #13                 // Field groups:Ljava/util/List;
     125: iload_2
     126: aload         4
     128: invokeinterface #36,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: aload_0
     135: aload_1
     136: putfield      #23                 // Field lastGroup:Lorg/jboss/as/cli/operation/impl/SingleRolloutPlanGroup;
     139: aload_0
     140: iconst_m1
     141: putfield      #3                  // Field separator:I
     144: aload_0
     145: getfield      #24                 // Field mentionedGroups:Ljava/util/Set;
     148: ifnonnull     162
     151: aload_0
     152: new           #25                 // class java/util/HashSet
     155: dup
     156: invokespecial #26                 // Method java/util/HashSet."<init>":()V
     159: putfield      #24                 // Field mentionedGroups:Ljava/util/Set;
     162: aload_0
     163: getfield      #24                 // Field mentionedGroups:Ljava/util/Set;
     166: aload_1
     167: invokevirtual #27                 // Method org/jboss/as/cli/operation/impl/SingleRolloutPlanGroup.getGroupName:()Ljava/lang/String;
     170: invokeinterface #28,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     175: pop
     176: return

  public boolean containsGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field mentionedGroups:Ljava/util/Set;
       4: ifnonnull     11
       7: iconst_0
       8: goto          21
      11: aload_0
      12: getfield      #24                 // Field mentionedGroups:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #37,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      21: ireturn

  public void addProperty(java.lang.String, java.lang.String, int);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          38
      11: new           #10                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #38                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #40                 // String Invalid property name:
      24: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_2
      39: ifnull        49
      42: aload_2
      43: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
      46: ifeq          76
      49: new           #10                 // class java/lang/IllegalArgumentException
      52: dup
      53: new           #38                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #43                 // String Invalid property value:
      62: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #44                 // Field props:Ljava/util/Map;
      80: ifnonnull     94
      83: aload_0
      84: new           #45                 // class java/util/HashMap
      87: dup
      88: invokespecial #46                 // Method java/util/HashMap."<init>":()V
      91: putfield      #44                 // Field props:Ljava/util/Map;
      94: aload_0
      95: getfield      #44                 // Field props:Ljava/util/Map;
      98: aload_1
      99: aload_2
     100: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: aload_0
     107: aconst_null
     108: putfield      #23                 // Field lastGroup:Lorg/jboss/as/cli/operation/impl/SingleRolloutPlanGroup;
     111: aload_0
     112: iconst_m1
     113: putfield      #3                  // Field separator:I
     116: aload_0
     117: aload_1
     118: putfield      #48                 // Field lastPropertyName:Ljava/lang/String;
     121: aload_0
     122: aload_2
     123: putfield      #49                 // Field lastPropertyValue:Ljava/lang/String;
     126: aload_0
     127: iload_3
     128: putfield      #17                 // Field lastChunkIndex:I
     131: return

  public void addProperty(java.lang.String, int);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          38
      11: new           #10                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #38                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #40                 // String Invalid property name:
      24: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #44                 // Field props:Ljava/util/Map;
      42: ifnonnull     56
      45: aload_0
      46: new           #45                 // class java/util/HashMap
      49: dup
      50: invokespecial #46                 // Method java/util/HashMap."<init>":()V
      53: putfield      #44                 // Field props:Ljava/util/Map;
      56: aload_0
      57: getfield      #44                 // Field props:Ljava/util/Map;
      60: aload_1
      61: ldc           #51                 // String true
      63: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload_0
      70: aconst_null
      71: putfield      #23                 // Field lastGroup:Lorg/jboss/as/cli/operation/impl/SingleRolloutPlanGroup;
      74: aload_0
      75: iconst_m1
      76: putfield      #3                  // Field separator:I
      79: aload_0
      80: aload_1
      81: putfield      #48                 // Field lastPropertyName:Ljava/lang/String;
      84: aload_0
      85: iload_2
      86: putfield      #17                 // Field lastChunkIndex:I
      89: return

  public java.lang.String getProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #44                 // Field props:Ljava/util/Map;
       4: ifnonnull     11
       7: aconst_null
       8: goto          24
      11: aload_0
      12: getfield      #44                 // Field props:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #53                 // class java/lang/String
      24: areturn

  public boolean hasProperties();
    Code:
       0: aload_0
       1: getfield      #44                 // Field props:Ljava/util/Map;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void groupSequenceSeparator(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #4                  // Field lastSeparatorIndex:I
      10: return

  public void groupConcurrentSeparator(int);
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #3                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #4                  // Field lastSeparatorIndex:I
      10: return

  public void propertySeparator(int);
    Code:
       0: aload_0
       1: iconst_3
       2: putfield      #3                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #4                  // Field lastSeparatorIndex:I
      10: return

  public boolean endsOnGroupSeparator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field separator:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #3                  // Field separator:I
      12: iconst_2
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean endsOnPropertySeparator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field separator:I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnPropertyListStart();
    Code:
       0: aload_0
       1: getfield      #3                  // Field separator:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnPropertyListEnd();
    Code:
       0: aload_0
       1: getfield      #3                  // Field separator:I
       4: iconst_5
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int getLastSeparatorIndex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lastSeparatorIndex:I
       4: ireturn

  public int getLastChunkIndex();
    Code:
       0: aload_0
       1: getfield      #17                 // Field lastChunkIndex:I
       4: ireturn

  public java.lang.String getLastPropertyName();
    Code:
       0: aload_0
       1: getfield      #48                 // Field lastPropertyName:Ljava/lang/String;
       4: areturn

  public java.lang.String getLastPropertyValue();
    Code:
       0: aload_0
       1: getfield      #49                 // Field lastPropertyValue:Ljava/lang/String;
       4: areturn

  public void propertyListStart(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field lastSeparatorIndex:I
       5: aload_0
       6: iconst_4
       7: putfield      #3                  // Field separator:I
      10: return

  public void propertyListEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field lastSeparatorIndex:I
       5: aload_0
       6: iconst_5
       7: putfield      #3                  // Field separator:I
      10: aload_0
      11: aconst_null
      12: putfield      #48                 // Field lastPropertyName:Ljava/lang/String;
      15: aload_0
      16: aconst_null
      17: putfield      #49                 // Field lastPropertyValue:Ljava/lang/String;
      20: return

  public void addTo(org.jboss.as.cli.CommandContext, org.jboss.dmr.ModelNode) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field planRef:Ljava/lang/String;
       4: ifnull        28
       7: aload_1
       8: invokeinterface #54,  1           // InterfaceMethod org/jboss/as/cli/CommandContext.getModelControllerClient:()Lorg/jboss/as/controller/client/ModelControllerClient;
      13: aload_0
      14: getfield      #8                  // Field planRef:Ljava/lang/String;
      17: invokestatic  #55                 // Method org/jboss/as/cli/Util.getRolloutPlan:(Lorg/jboss/as/controller/client/ModelControllerClient;Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      20: astore_3
      21: aload_2
      22: aload_3
      23: invokevirtual #56                 // Method org/jboss/dmr/ModelNode.set:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/dmr/ModelNode;
      26: pop
      27: return
      28: aload_2
      29: ldc           #57                 // String rollout-plan
      31: invokevirtual #58                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      34: astore_3
      35: aload_3
      36: ldc           #59                 // String in-series
      38: invokevirtual #58                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      41: astore        4
      43: aload_0
      44: getfield      #13                 // Field groups:Ljava/util/List;
      47: invokeinterface #60,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore        5
      54: aload         5
      56: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          88
      64: aload         5
      66: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #32                 // class org/jboss/as/cli/operation/impl/RolloutPlanGroup
      74: astore        6
      76: aload         6
      78: aload         4
      80: invokeinterface #63,  2           // InterfaceMethod org/jboss/as/cli/operation/impl/RolloutPlanGroup.addTo:(Lorg/jboss/dmr/ModelNode;)V
      85: goto          54
      88: aload_0
      89: getfield      #44                 // Field props:Ljava/util/Map;
      92: ifnull        160
      95: aload_0
      96: getfield      #44                 // Field props:Ljava/util/Map;
      99: invokeinterface #64,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     104: invokeinterface #65,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     109: astore        5
     111: aload         5
     113: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     118: ifeq          160
     121: aload         5
     123: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     128: checkcast     #53                 // class java/lang/String
     131: astore        6
     133: aload_3
     134: aload         6
     136: invokevirtual #58                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
     139: aload_0
     140: getfield      #44                 // Field props:Ljava/util/Map;
     143: aload         6
     145: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     150: checkcast     #53                 // class java/lang/String
     153: invokevirtual #66                 // Method org/jboss/dmr/ModelNode.set:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
     156: pop
     157: goto          111
     160: return

  public org.jboss.as.cli.operation.impl.SingleRolloutPlanGroup getLastGroup();
    Code:
       0: aload_0
       1: getfield      #23                 // Field lastGroup:Lorg/jboss/as/cli/operation/impl/SingleRolloutPlanGroup;
       4: areturn
}
