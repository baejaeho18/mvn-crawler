Compiled from "DomainController.java"
public interface org.jboss.as.domain.controller.DomainController {
  public static final org.jboss.msc.service.ServiceName SERVICE_NAME;

  public abstract org.jboss.as.controller.RunningMode getCurrentRunningMode();

  public abstract org.jboss.as.domain.controller.LocalHostControllerInfo getLocalHostInfo();

  public abstract void registerRemoteHost(java.lang.String, org.jboss.as.protocol.mgmt.ManagementChannelHandler, org.jboss.as.controller.transform.Transformers, java.lang.Long, boolean) throws org.jboss.as.domain.controller.SlaveRegistrationException;

  public abstract boolean isHostRegistered(java.lang.String);

  public abstract void unregisterRemoteHost(java.lang.String, java.lang.Long, boolean);

  public abstract void pingRemoteHost(java.lang.String);

  public abstract void registerRunningServer(org.jboss.as.controller.ProxyController);

  public abstract void unregisterRunningServer(java.lang.String);

  public abstract org.jboss.dmr.ModelNode getProfileOperations(java.lang.String);

  public abstract org.jboss.as.repository.HostFileRepository getLocalFileRepository();

  public abstract org.jboss.as.repository.HostFileRepository getRemoteFileRepository();

  public abstract void stopLocalHost();

  public abstract void stopLocalHost(int);

  public abstract org.jboss.as.controller.extension.ExtensionRegistry getExtensionRegistry();

  public abstract org.jboss.as.controller.capability.registry.ImmutableCapabilityRegistry getCapabilityRegistry();

  public abstract org.jboss.as.controller.ExpressionResolver getExpressionResolver();

  public abstract void initializeMasterDomainRegistry(org.jboss.as.controller.registry.ManagementResourceRegistration, org.jboss.as.controller.persistence.ExtensibleConfigurationPersister, org.jboss.as.repository.ContentRepository, org.jboss.as.repository.HostFileRepository, org.jboss.as.controller.extension.ExtensionRegistry, org.jboss.as.controller.services.path.PathManagerService);

  public abstract void initializeSlaveDomainRegistry(org.jboss.as.controller.registry.ManagementResourceRegistration, org.jboss.as.controller.persistence.ExtensibleConfigurationPersister, org.jboss.as.repository.ContentRepository, org.jboss.as.repository.HostFileRepository, org.jboss.as.domain.controller.LocalHostControllerInfo, org.jboss.as.controller.extension.ExtensionRegistry, org.jboss.as.host.controller.ignored.IgnoredDomainResourceRegistry, org.jboss.as.controller.services.path.PathManagerService);

  static {};
    Code:
       0: getstatic     #1                  // Field org/jboss/msc/service/ServiceName.JBOSS:Lorg/jboss/msc/service/ServiceName;
       3: iconst_2
       4: anewarray     #2                  // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #3                  // String domain
      11: aastore
      12: dup
      13: iconst_1
      14: ldc           #4                  // String controller
      16: aastore
      17: invokevirtual #5                  // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      20: putstatic     #6                  // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      23: return
}
