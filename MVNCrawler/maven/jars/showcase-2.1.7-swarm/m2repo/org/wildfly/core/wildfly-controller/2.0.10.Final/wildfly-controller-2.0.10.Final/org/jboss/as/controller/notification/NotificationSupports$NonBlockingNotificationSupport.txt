Compiled from "NotificationSupports.java"
class org.jboss.as.controller.notification.NotificationSupports$NonBlockingNotificationSupport implements org.jboss.as.controller.notification.NotificationSupport {
  private final org.jboss.as.controller.registry.NotificationHandlerRegistration registry;

  private final java.util.concurrent.ExecutorService executor;

  private final java.util.Queue<org.jboss.as.controller.notification.Notification> queue;

  private final java.util.concurrent.locks.ReadWriteLock lock;

  public org.jboss.as.controller.notification.NotificationSupports$NonBlockingNotificationSupport(org.jboss.as.controller.registry.NotificationHandlerRegistration, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #2                  // Field queue:Ljava/util/Queue;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      23: putfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
      26: aload_0
      27: aload_1
      28: putfield      #1                  // Field registry:Lorg/jboss/as/controller/registry/NotificationHandlerRegistration;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field executor:Ljava/util/concurrent/ExecutorService;
      36: return

  public synchronized void emit(org.jboss.as.controller.notification.Notification...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokeinterface #11,  2           // InterfaceMethod java/util/Queue.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: getfield      #9                  // Field executor:Ljava/util/concurrent/ExecutorService;
      18: new           #12                 // class org/jboss/as/controller/notification/NotificationSupports$NonBlockingNotificationSupport$1
      21: dup
      22: aload_0
      23: invokespecial #13                 // Method org/jboss/as/controller/notification/NotificationSupports$NonBlockingNotificationSupport$1."<init>":(Lorg/jboss/as/controller/notification/NotificationSupports$NonBlockingNotificationSupport;)V
      26: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      31: return

  public org.jboss.as.controller.registry.NotificationHandlerRegistration getNotificationRegistry();
    Code:
       0: aload_0
       1: getfield      #1                  // Field registry:Lorg/jboss/as/controller/registry/NotificationHandlerRegistration;
       4: areturn

  static java.util.concurrent.locks.ReadWriteLock access$100(org.jboss.as.controller.notification.NotificationSupports$NonBlockingNotificationSupport);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: areturn

  static java.util.Queue access$200(org.jboss.as.controller.notification.NotificationSupports$NonBlockingNotificationSupport);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: areturn

  static org.jboss.as.controller.registry.NotificationHandlerRegistration access$300(org.jboss.as.controller.notification.NotificationSupports$NonBlockingNotificationSupport);
    Code:
       0: aload_0
       1: getfield      #1                  // Field registry:Lorg/jboss/as/controller/registry/NotificationHandlerRegistration;
       4: areturn
}
