Compiled from "S3Util.java"
class org.jboss.as.host.controller.discovery.S3Util$CallingFormat$PathCallingFormat extends org.jboss.as.host.controller.discovery.S3Util$CallingFormat {
  private org.jboss.as.host.controller.discovery.S3Util$CallingFormat$PathCallingFormat();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jboss/as/host/controller/discovery/S3Util$CallingFormat."<init>":()V
       4: return

  public boolean supportsLocatedBuckets();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getPathBase(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method isBucketSpecified:(Ljava/lang/String;)Z
       4: ifeq          38
       7: new           #4                  // class java/lang/StringBuilder
      10: dup
      11: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #6                  // String /
      16: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #6                  // String /
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: goto          40
      38: ldc           #6                  // String /
      40: areturn

  public java.lang.String getEndpoint(java.lang.String, int, java.lang.String);
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #9                  // String :
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: iload_2
      17: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      20: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  public java.net.URL getURL(boolean, java.lang.String, int, java.lang.String, java.lang.String, java.util.Map) throws java.net.MalformedURLException;
    Code:
       0: aload         4
       2: invokestatic  #3                  // Method isBucketSpecified:(Ljava/lang/String;)Z
       5: ifeq          41
       8: new           #4                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #6                  // String /
      17: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload         4
      22: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #6                  // String /
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload         5
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: goto          43
      41: ldc           #6                  // String /
      43: astore        7
      45: aload         6
      47: invokestatic  #11                 // Method org/jboss/as/host/controller/discovery/S3Util$Utils.convertPathArgsHashToString:(Ljava/util/Map;)Ljava/lang/String;
      50: astore        8
      52: new           #12                 // class java/net/URL
      55: dup
      56: iload_1
      57: ifeq          65
      60: ldc           #13                 // String https
      62: goto          67
      65: ldc           #14                 // String http
      67: aload_2
      68: iload_3
      69: new           #4                  // class java/lang/StringBuilder
      72: dup
      73: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      76: aload         7
      78: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload         8
      83: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #15                 // Method java/net/URL."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
      92: areturn

  private static boolean isBucketSpecified(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: invokevirtual #16                 // Method java/lang/String.length:()I
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  org.jboss.as.host.controller.discovery.S3Util$CallingFormat$PathCallingFormat(org.jboss.as.host.controller.discovery.S3Util$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
