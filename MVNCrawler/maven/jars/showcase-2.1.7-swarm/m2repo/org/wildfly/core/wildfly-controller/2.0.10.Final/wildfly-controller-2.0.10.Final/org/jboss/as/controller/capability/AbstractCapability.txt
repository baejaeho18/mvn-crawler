Compiled from "AbstractCapability.java"
public abstract class org.jboss.as.controller.capability.AbstractCapability implements org.jboss.as.controller.capability.Capability {
  private final java.lang.String name;

  private final boolean dynamic;

  private final java.util.Set<java.lang.String> requirements;

  private final java.util.Set<java.lang.String> optionalRequirements;

  private final java.util.Set<java.lang.String> runtimeOnlyRequirements;

  private final java.util.Set<java.lang.String> dynamicRequirements;

  private final java.util.Set<java.lang.String> dynamicOptionalRequirements;

  static final boolean $assertionsDisabled;

  protected org.jboss.as.controller.capability.AbstractCapability(java.lang.String, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field $assertionsDisabled:Z
       7: ifne          22
      10: aload_1
      11: ifnonnull     22
      14: new           #3                  // class java/lang/AssertionError
      17: dup
      18: invokespecial #4                  // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #5                  // Field name:Ljava/lang/String;
      27: aload_0
      28: iload_2
      29: putfield      #6                  // Field dynamic:Z
      32: aload_0
      33: aload_3
      34: invokestatic  #7                  // Method establishRequirements:(Ljava/util/Set;)Ljava/util/Set;
      37: putfield      #8                  // Field requirements:Ljava/util/Set;
      40: aload_0
      41: aload         4
      43: invokestatic  #7                  // Method establishRequirements:(Ljava/util/Set;)Ljava/util/Set;
      46: putfield      #9                  // Field optionalRequirements:Ljava/util/Set;
      49: aload_0
      50: aload         5
      52: invokestatic  #7                  // Method establishRequirements:(Ljava/util/Set;)Ljava/util/Set;
      55: putfield      #10                 // Field runtimeOnlyRequirements:Ljava/util/Set;
      58: aload_0
      59: aload         6
      61: invokestatic  #7                  // Method establishRequirements:(Ljava/util/Set;)Ljava/util/Set;
      64: putfield      #11                 // Field dynamicRequirements:Ljava/util/Set;
      67: aload_0
      68: aload         7
      70: invokestatic  #7                  // Method establishRequirements:(Ljava/util/Set;)Ljava/util/Set;
      73: putfield      #12                 // Field dynamicOptionalRequirements:Ljava/util/Set;
      76: return

  private static java.util.Set<java.lang.String> establishRequirements(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: ifnull        25
       4: aload_0
       5: invokeinterface #13,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      10: ifne          25
      13: new           #14                 // class java/util/HashSet
      16: dup
      17: aload_0
      18: invokespecial #15                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      21: invokestatic  #16                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      24: areturn
      25: invokestatic  #17                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      28: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public java.util.Set<java.lang.String> getRequirements();
    Code:
       0: aload_0
       1: getfield      #8                  // Field requirements:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getOptionalRequirements();
    Code:
       0: aload_0
       1: getfield      #9                  // Field optionalRequirements:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getRuntimeOnlyRequirements();
    Code:
       0: aload_0
       1: getfield      #10                 // Field runtimeOnlyRequirements:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getDynamicRequirements();
    Code:
       0: aload_0
       1: getfield      #11                 // Field dynamicRequirements:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getDynamicOptionalRequirements();
    Code:
       0: aload_0
       1: getfield      #12                 // Field dynamicOptionalRequirements:Ljava/util/Set;
       4: areturn

  public boolean isDynamicallyNamed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dynamic:Z
       4: ireturn

  public java.lang.String getDynamicName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field dynamic:Z
       4: ifne          15
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: new           #20                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      22: aload_0
      23: getfield      #5                  // Field name:Ljava/lang/String;
      26: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #23                 // String .
      31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #26                 // class org/jboss/as/controller/capability/AbstractCapability
      28: astore_2
      29: aload_0
      30: getfield      #5                  // Field name:Ljava/lang/String;
      33: aload_2
      34: getfield      #5                  // Field name:Ljava/lang/String;
      37: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: invokevirtual #28                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: ldc           #26                 // class org/jboss/as/controller/capability/AbstractCapability
       2: invokevirtual #29                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #2                  // Field $assertionsDisabled:Z
      16: return
}
