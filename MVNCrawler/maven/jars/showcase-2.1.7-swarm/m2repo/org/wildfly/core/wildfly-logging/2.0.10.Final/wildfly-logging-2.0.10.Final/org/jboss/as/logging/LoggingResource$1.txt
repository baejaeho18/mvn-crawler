Compiled from "LoggingResource.java"
final class org.jboss.as.logging.LoggingResource$1 extends java.nio.file.SimpleFileVisitor<java.nio.file.Path> {
  boolean first;

  final boolean val$relativize;

  final java.nio.file.Path val$dir;

  final java.util.Collection val$validFileNames;

  final java.util.Set val$logFiles;

  org.jboss.as.logging.LoggingResource$1(boolean, java.nio.file.Path, java.util.Collection, java.util.Set);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field val$relativize:Z
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$dir:Ljava/nio/file/Path;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$validFileNames:Ljava/util/Collection;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$logFiles:Ljava/util/Set;
      21: aload_0
      22: invokespecial #5                  // Method java/nio/file/SimpleFileVisitor."<init>":()V
      25: aload_0
      26: iconst_1
      27: putfield      #6                  // Field first:Z
      30: return

  public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field first:Z
       4: ifne          14
       7: aload_0
       8: getfield      #1                  // Field val$relativize:Z
      11: ifeq          23
      14: aload_0
      15: iconst_0
      16: putfield      #6                  // Field first:Z
      19: getstatic     #7                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      22: areturn
      23: getstatic     #8                  // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
      26: areturn

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$dir:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      10: astore_3
      11: aload_3
      12: invokeinterface #10,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      17: astore        4
      19: aload_0
      20: getfield      #3                  // Field val$validFileNames:Ljava/util/Collection;
      23: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          114
      40: aload         5
      42: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #14                 // class java/lang/String
      50: astore        6
      52: aload_1
      53: invokestatic  #15                 // Method java/nio/file/Files.isReadable:(Ljava/nio/file/Path;)Z
      56: ifeq          111
      59: aload         4
      61: aload         6
      63: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifne          79
      69: aload         4
      71: aload         6
      73: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      76: ifeq          111
      79: aload_0
      80: getfield      #1                  // Field val$relativize:Z
      83: ifeq          100
      86: aload_0
      87: getfield      #4                  // Field val$logFiles:Ljava/util/Set;
      90: aload_3
      91: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      96: pop
      97: goto          111
     100: aload_0
     101: getfield      #4                  // Field val$logFiles:Ljava/util/Set;
     104: aload_1
     105: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     110: pop
     111: goto          30
     114: getstatic     #7                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
     117: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #20                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #21                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn
}
