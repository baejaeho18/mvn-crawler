Compiled from "ProxyControllerRegistration.java"
final class org.jboss.as.controller.registry.ProxyControllerRegistration extends org.jboss.as.controller.registry.AbstractResourceRegistration implements org.jboss.as.controller.descriptions.DescriptionProvider {
  private volatile java.util.Map<java.lang.String, org.jboss.as.controller.registry.OperationEntry> operations;

  private volatile java.util.Map<java.lang.String, org.jboss.as.controller.registry.AttributeAccess> attributes;

  private final org.jboss.as.controller.ProxyController proxyController;

  private final org.jboss.as.controller.registry.OperationEntry operationEntry;

  private static final org.jboss.as.controller.registry.AtomicMapFieldUpdater<org.jboss.as.controller.registry.ProxyControllerRegistration, java.lang.String, org.jboss.as.controller.registry.OperationEntry> operationsUpdater;

  private static final org.jboss.as.controller.registry.AtomicMapFieldUpdater<org.jboss.as.controller.registry.ProxyControllerRegistration, java.lang.String, org.jboss.as.controller.registry.AttributeAccess> attributesUpdater;

  org.jboss.as.controller.registry.ProxyControllerRegistration(java.lang.String, org.jboss.as.controller.registry.NodeSubregistry, org.jboss.as.controller.ProxyController);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/jboss/as/controller/registry/AbstractResourceRegistration."<init>":(Ljava/lang/String;Lorg/jboss/as/controller/registry/NodeSubregistry;)V
       6: aload_0
       7: new           #3                  // class org/jboss/as/controller/registry/OperationEntry
      10: dup
      11: new           #4                  // class org/jboss/as/controller/ProxyStepHandler
      14: dup
      15: aload_3
      16: invokespecial #5                  // Method org/jboss/as/controller/ProxyStepHandler."<init>":(Lorg/jboss/as/controller/ProxyController;)V
      19: aload_0
      20: iconst_0
      21: getstatic     #6                  // Field org/jboss/as/controller/registry/OperationEntry$EntryType.PRIVATE:Lorg/jboss/as/controller/registry/OperationEntry$EntryType;
      24: invokespecial #7                  // Method org/jboss/as/controller/registry/OperationEntry."<init>":(Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/descriptions/DescriptionProvider;ZLorg/jboss/as/controller/registry/OperationEntry$EntryType;)V
      27: putfield      #1                  // Field operationEntry:Lorg/jboss/as/controller/registry/OperationEntry;
      30: aload_0
      31: aload_3
      32: putfield      #8                  // Field proxyController:Lorg/jboss/as/controller/ProxyController;
      35: getstatic     #9                  // Field operationsUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      38: aload_0
      39: invokevirtual #10                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.clear:(Ljava/lang/Object;)V
      42: getstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      45: aload_0
      46: invokevirtual #10                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.clear:(Ljava/lang/Object;)V
      49: return

  org.jboss.as.controller.registry.OperationEntry getOperationEntry(java.util.ListIterator<org.jboss.as.controller.PathElement>, java.lang.String, org.jboss.as.controller.registry.OperationEntry);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aload_1
       4: invokeinterface #13,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
       9: ifne          40
      12: getstatic     #9                  // Field operationsUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      15: aload_0
      16: aload_2
      17: invokevirtual #14                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #3                  // class org/jboss/as/controller/registry/OperationEntry
      23: astore        4
      25: aload         4
      27: ifnonnull     37
      30: aload_0
      31: getfield      #1                  // Field operationEntry:Lorg/jboss/as/controller/registry/OperationEntry;
      34: goto          39
      37: aload         4
      39: areturn
      40: aload_0
      41: getfield      #1                  // Field operationEntry:Lorg/jboss/as/controller/registry/OperationEntry;
      44: areturn

  org.jboss.as.controller.registry.OperationEntry getInheritableOperationEntry(java.lang.String);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aconst_null
       4: areturn

  public int getMaxOccurs();
    Code:
       0: iconst_1
       1: ireturn

  public int getMinOccurs();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isRuntimeOnly();
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: iconst_1
       4: ireturn

  public void setRuntimeOnly(boolean);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: return

  public boolean isRemote();
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: iconst_1
       4: ireturn

  public java.util.List<org.jboss.as.controller.access.management.AccessConstraintDefinition> getAccessConstraints();
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: invokestatic  #15                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       6: areturn

  public org.jboss.as.controller.registry.ManagementResourceRegistration registerSubModel(org.jboss.as.controller.ResourceDefinition);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void registerCapability(org.jboss.as.controller.capability.RuntimeCapability);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void unregisterSubModel(org.jboss.as.controller.PathElement) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public org.jboss.as.controller.registry.ManagementResourceRegistration registerOverrideModel(java.lang.String, org.jboss.as.controller.descriptions.OverrideDescriptionProvider);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void unregisterOverrideModel(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void registerOperationHandler(org.jboss.as.controller.OperationDefinition, org.jboss.as.controller.OperationStepHandler, boolean);
    Code:
       0: getstatic     #9                  // Field operationsUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #17                 // Method org/jboss/as/controller/OperationDefinition.getName:()Ljava/lang/String;
       8: new           #3                  // class org/jboss/as/controller/registry/OperationEntry
      11: dup
      12: aload_2
      13: aload_1
      14: invokevirtual #18                 // Method org/jboss/as/controller/OperationDefinition.getDescriptionProvider:()Lorg/jboss/as/controller/descriptions/DescriptionProvider;
      17: iload_3
      18: aload_1
      19: invokevirtual #19                 // Method org/jboss/as/controller/OperationDefinition.getEntryType:()Lorg/jboss/as/controller/registry/OperationEntry$EntryType;
      22: aload_1
      23: invokevirtual #20                 // Method org/jboss/as/controller/OperationDefinition.getFlags:()Ljava/util/EnumSet;
      26: aload_1
      27: invokevirtual #21                 // Method org/jboss/as/controller/OperationDefinition.getAccessConstraints:()Ljava/util/List;
      30: invokespecial #22                 // Method org/jboss/as/controller/registry/OperationEntry."<init>":(Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/descriptions/DescriptionProvider;ZLorg/jboss/as/controller/registry/OperationEntry$EntryType;Ljava/util/EnumSet;Ljava/util/List;)V
      33: invokevirtual #23                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: ifnull        50
      39: aload_0
      40: ldc           #24                 // String operation handler
      42: aload_1
      43: invokevirtual #17                 // Method org/jboss/as/controller/OperationDefinition.getName:()Ljava/lang/String;
      46: invokespecial #25                 // Method alreadyRegistered:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      49: athrow
      50: return

  public void unregisterOperationHandler(java.lang.String);
    Code:
       0: getstatic     #9                  // Field operationsUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #26                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnonnull     29
      11: aload_0
      12: aload_1
      13: aload_0
      14: getfield      #8                  // Field proxyController:Lorg/jboss/as/controller/ProxyController;
      17: invokeinterface #27,  1           // InterfaceMethod org/jboss/as/controller/ProxyController.getProxyNodeAddress:()Lorg/jboss/as/controller/PathAddress;
      22: invokevirtual #28                 // Method org/jboss/as/controller/PathAddress.getLastElement:()Lorg/jboss/as/controller/PathElement;
      25: invokespecial #29                 // Method operationNotRegisteredException:(Ljava/lang/String;Lorg/jboss/as/controller/PathElement;)Ljava/lang/IllegalArgumentException;
      28: athrow
      29: return

  public void registerReadWriteAttribute(org.jboss.as.controller.AttributeDefinition, org.jboss.as.controller.OperationStepHandler, org.jboss.as.controller.OperationStepHandler);
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method org/jboss/as/controller/AttributeDefinition.getFlags:()Ljava/util/EnumSet;
       4: astore        4
       6: aload_1
       7: invokevirtual #31                 // Method org/jboss/as/controller/AttributeDefinition.getName:()Ljava/lang/String;
      10: astore        5
      12: aload         4
      14: ifnull        34
      17: aload         4
      19: getstatic     #32                 // Field org/jboss/as/controller/registry/AttributeAccess$Flag.STORAGE_RUNTIME:Lorg/jboss/as/controller/registry/AttributeAccess$Flag;
      22: invokevirtual #33                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      25: ifeq          34
      28: getstatic     #34                 // Field org/jboss/as/controller/registry/AttributeAccess$Storage.RUNTIME:Lorg/jboss/as/controller/registry/AttributeAccess$Storage;
      31: goto          37
      34: getstatic     #35                 // Field org/jboss/as/controller/registry/AttributeAccess$Storage.CONFIGURATION:Lorg/jboss/as/controller/registry/AttributeAccess$Storage;
      37: astore        6
      39: new           #36                 // class org/jboss/as/controller/registry/AttributeAccess
      42: dup
      43: getstatic     #37                 // Field org/jboss/as/controller/registry/AttributeAccess$AccessType.READ_WRITE:Lorg/jboss/as/controller/registry/AttributeAccess$AccessType;
      46: aload         6
      48: aload_2
      49: aload_3
      50: aload_1
      51: aload         4
      53: invokespecial #38                 // Method org/jboss/as/controller/registry/AttributeAccess."<init>":(Lorg/jboss/as/controller/registry/AttributeAccess$AccessType;Lorg/jboss/as/controller/registry/AttributeAccess$Storage;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/AttributeDefinition;Ljava/util/EnumSet;)V
      56: astore        7
      58: getstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      61: aload_0
      62: aload         5
      64: aload         7
      66: invokevirtual #23                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: ifnull        81
      72: aload_0
      73: ldc           #39                 // String attribute
      75: aload         5
      77: invokespecial #25                 // Method alreadyRegistered:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      80: athrow
      81: return

  public void registerReadOnlyAttribute(org.jboss.as.controller.AttributeDefinition, org.jboss.as.controller.OperationStepHandler);
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method org/jboss/as/controller/AttributeDefinition.getFlags:()Ljava/util/EnumSet;
       4: astore_3
       5: aload_1
       6: invokevirtual #31                 // Method org/jboss/as/controller/AttributeDefinition.getName:()Ljava/lang/String;
       9: astore        4
      11: aload_3
      12: ifnull        31
      15: aload_3
      16: getstatic     #32                 // Field org/jboss/as/controller/registry/AttributeAccess$Flag.STORAGE_RUNTIME:Lorg/jboss/as/controller/registry/AttributeAccess$Flag;
      19: invokevirtual #33                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      22: ifeq          31
      25: getstatic     #34                 // Field org/jboss/as/controller/registry/AttributeAccess$Storage.RUNTIME:Lorg/jboss/as/controller/registry/AttributeAccess$Storage;
      28: goto          34
      31: getstatic     #35                 // Field org/jboss/as/controller/registry/AttributeAccess$Storage.CONFIGURATION:Lorg/jboss/as/controller/registry/AttributeAccess$Storage;
      34: astore        5
      36: new           #36                 // class org/jboss/as/controller/registry/AttributeAccess
      39: dup
      40: getstatic     #40                 // Field org/jboss/as/controller/registry/AttributeAccess$AccessType.READ_ONLY:Lorg/jboss/as/controller/registry/AttributeAccess$AccessType;
      43: aload         5
      45: aload_2
      46: aconst_null
      47: aload_1
      48: aload_3
      49: invokespecial #38                 // Method org/jboss/as/controller/registry/AttributeAccess."<init>":(Lorg/jboss/as/controller/registry/AttributeAccess$AccessType;Lorg/jboss/as/controller/registry/AttributeAccess$Storage;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/AttributeDefinition;Ljava/util/EnumSet;)V
      52: astore        6
      54: getstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      57: aload_0
      58: aload         4
      60: aload         6
      62: invokevirtual #23                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: ifnull        77
      68: aload_0
      69: ldc           #39                 // String attribute
      71: aload         4
      73: invokespecial #25                 // Method alreadyRegistered:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      76: athrow
      77: return

  public void unregisterAttribute(java.lang.String);
    Code:
       0: getstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #26                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public void registerMetric(org.jboss.as.controller.AttributeDefinition, org.jboss.as.controller.OperationStepHandler);
    Code:
       0: new           #36                 // class org/jboss/as/controller/registry/AttributeAccess
       3: dup
       4: getstatic     #41                 // Field org/jboss/as/controller/registry/AttributeAccess$AccessType.METRIC:Lorg/jboss/as/controller/registry/AttributeAccess$AccessType;
       7: getstatic     #34                 // Field org/jboss/as/controller/registry/AttributeAccess$Storage.RUNTIME:Lorg/jboss/as/controller/registry/AttributeAccess$Storage;
      10: aload_2
      11: aconst_null
      12: aload_1
      13: aload_1
      14: invokevirtual #30                 // Method org/jboss/as/controller/AttributeDefinition.getFlags:()Ljava/util/EnumSet;
      17: invokespecial #38                 // Method org/jboss/as/controller/registry/AttributeAccess."<init>":(Lorg/jboss/as/controller/registry/AttributeAccess$AccessType;Lorg/jboss/as/controller/registry/AttributeAccess$Storage;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/AttributeDefinition;Ljava/util/EnumSet;)V
      20: astore_3
      21: getstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      24: aload_0
      25: aload_1
      26: invokevirtual #31                 // Method org/jboss/as/controller/AttributeDefinition.getName:()Ljava/lang/String;
      29: aload_3
      30: invokevirtual #23                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: ifnull        47
      36: aload_0
      37: ldc           #39                 // String attribute
      39: aload_1
      40: invokevirtual #31                 // Method org/jboss/as/controller/AttributeDefinition.getName:()Ljava/lang/String;
      43: invokespecial #25                 // Method alreadyRegistered:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      46: athrow
      47: return

  public void registerProxyController(org.jboss.as.controller.PathElement, org.jboss.as.controller.ProxyController) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void unregisterProxyController(org.jboss.as.controller.PathElement) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void registerAlias(org.jboss.as.controller.PathElement, org.jboss.as.controller.registry.AliasEntry);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void unregisterAlias(org.jboss.as.controller.PathElement);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void registerNotification(org.jboss.as.controller.NotificationDefinition, boolean);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void registerNotification(org.jboss.as.controller.NotificationDefinition);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  public void unregisterNotification(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  void getOperationDescriptions(java.util.ListIterator<org.jboss.as.controller.PathElement>, java.util.Map<java.lang.String, org.jboss.as.controller.registry.OperationEntry>, boolean);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: return

  void getInheritedOperationEntries(java.util.Map<java.lang.String, org.jboss.as.controller.registry.OperationEntry>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: return

  void getNotificationDescriptions(java.util.ListIterator<org.jboss.as.controller.PathElement>, java.util.Map<java.lang.String, org.jboss.as.controller.registry.NotificationEntry>, boolean);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: return

  void getInheritedNotificationEntries(java.util.Map<java.lang.String, org.jboss.as.controller.registry.NotificationEntry>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: return

  java.util.Set<org.jboss.as.controller.capability.RuntimeCapability> getCapabilities(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: invokestatic  #42                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  org.jboss.as.controller.descriptions.DescriptionProvider getModelDescription(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aload_0
       4: areturn

  java.util.Set<java.lang.String> getAttributeNames(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aload_1
       4: invokeinterface #13,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
       9: ifeq          16
      12: invokestatic  #42                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      15: areturn
      16: getstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      19: aload_0
      20: invokevirtual #43                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.get:(Ljava/lang/Object;)Ljava/util/Map;
      23: astore_2
      24: aload_2
      25: invokeinterface #44,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      30: areturn

  java.util.Set<java.lang.String> getChildNames(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: invokestatic  #42                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       6: areturn

  java.util.Set<org.jboss.as.controller.PathElement> getChildAddresses(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: invokestatic  #42                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       6: areturn

  org.jboss.as.controller.registry.AttributeAccess getAttributeAccess(java.util.ListIterator<org.jboss.as.controller.PathElement>, java.lang.String);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aload_1
       4: invokeinterface #13,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: getstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      17: aload_0
      18: invokevirtual #43                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.get:(Ljava/lang/Object;)Ljava/util/Map;
      21: astore_3
      22: aload_3
      23: aload_2
      24: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #36                 // class org/jboss/as/controller/registry/AttributeAccess
      32: areturn

  org.jboss.as.controller.ProxyController getProxyController(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aload_0
       4: getfield      #8                  // Field proxyController:Lorg/jboss/as/controller/ProxyController;
       7: areturn

  void getProxyControllers(java.util.ListIterator<org.jboss.as.controller.PathElement>, java.util.Set<org.jboss.as.controller.ProxyController>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aload_2
       4: aload_0
       5: getfield      #8                  // Field proxyController:Lorg/jboss/as/controller/ProxyController;
       8: invokeinterface #46,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  org.jboss.as.controller.registry.ManagementResourceRegistration getResourceRegistration(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokeinterface #13,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
       8: ifeq          49
      11: aload_0
      12: invokevirtual #47                 // Method getPathAddress:()Lorg/jboss/as/controller/PathAddress;
      15: astore_2
      16: aload_1
      17: invokeinterface #13,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
      22: ifeq          49
      25: aload_2
      26: iconst_1
      27: anewarray     #48                 // class org/jboss/as/controller/PathElement
      30: dup
      31: iconst_0
      32: aload_1
      33: invokeinterface #49,  1           // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      38: checkcast     #48                 // class org/jboss/as/controller/PathElement
      41: aastore
      42: invokevirtual #50                 // Method org/jboss/as/controller/PathAddress.append:([Lorg/jboss/as/controller/PathElement;)Lorg/jboss/as/controller/PathAddress;
      45: astore_2
      46: goto          16
      49: invokestatic  #12                 // Method checkPermission:()V
      52: aload_2
      53: ifnonnull     60
      56: aload_0
      57: goto          69
      60: new           #51                 // class org/jboss/as/controller/registry/ProxyControllerRegistration$ChildRegistration
      63: dup
      64: aload_0
      65: aload_2
      66: invokespecial #52                 // Method org/jboss/as/controller/registry/ProxyControllerRegistration$ChildRegistration."<init>":(Lorg/jboss/as/controller/registry/ProxyControllerRegistration;Lorg/jboss/as/controller/PathAddress;)V
      69: areturn

  public org.jboss.dmr.ModelNode getModelDescription(java.util.Locale);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: new           #53                 // class org/jboss/dmr/ModelNode
       6: dup
       7: invokespecial #54                 // Method org/jboss/dmr/ModelNode."<init>":()V
      10: areturn

  private java.lang.IllegalArgumentException alreadyRegistered();
    Code:
       0: getstatic     #55                 // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
       3: aload_0
       4: invokevirtual #56                 // Method getLocationString:()Ljava/lang/String;
       7: invokeinterface #57,  2           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.proxyHandlerAlreadyRegistered:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      12: areturn

  private java.lang.IllegalArgumentException alreadyRegistered(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #55                 // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
       3: aload_1
       4: aload_2
       5: aload_0
       6: invokevirtual #56                 // Method getLocationString:()Ljava/lang/String;
       9: invokeinterface #58,  4           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.alreadyRegistered:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: areturn

  private java.lang.IllegalArgumentException operationNotRegisteredException(java.lang.String, org.jboss.as.controller.PathElement);
    Code:
       0: getstatic     #55                 // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
       3: aload_1
       4: iconst_1
       5: anewarray     #48                 // class org/jboss/as/controller/PathElement
       8: dup
       9: iconst_0
      10: aload_2
      11: aastore
      12: invokestatic  #59                 // Method org/jboss/as/controller/PathAddress.pathAddress:([Lorg/jboss/as/controller/PathElement;)Lorg/jboss/as/controller/PathAddress;
      15: invokeinterface #60,  3           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.operationNotRegisteredException:(Ljava/lang/String;Lorg/jboss/as/controller/PathAddress;)Ljava/lang/IllegalArgumentException;
      20: areturn

  public org.jboss.as.controller.registry.AliasEntry getAliasEntry();
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: aconst_null
       4: areturn

  public void setOrderedChild(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method alreadyRegistered:()Ljava/lang/IllegalArgumentException;
       4: athrow

  protected void registerAlias(org.jboss.as.controller.PathElement, org.jboss.as.controller.registry.AliasEntry, org.jboss.as.controller.registry.AbstractResourceRegistration);
    Code:
       0: getstatic     #55                 // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
       3: aload_0
       4: invokevirtual #56                 // Method getLocationString:()Ljava/lang/String;
       7: invokeinterface #57,  2           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.proxyHandlerAlreadyRegistered:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      12: athrow

  public boolean isOrderedChildResource();
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: iconst_0
       4: ireturn

  java.util.Set<java.lang.String> getOrderedChildTypes(java.util.ListIterator<org.jboss.as.controller.PathElement>);
    Code:
       0: invokestatic  #12                 // Method checkPermission:()V
       3: invokestatic  #42                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       6: areturn

  static org.jboss.as.controller.registry.OperationEntry access$000(org.jboss.as.controller.registry.ProxyControllerRegistration);
    Code:
       0: aload_0
       1: getfield      #1                  // Field operationEntry:Lorg/jboss/as/controller/registry/OperationEntry;
       4: areturn

  static {};
    Code:
       0: ldc           #61                 // class org/jboss/as/controller/registry/ProxyControllerRegistration
       2: ldc           #62                 // class java/util/Map
       4: ldc           #63                 // String operations
       6: invokestatic  #64                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: invokestatic  #65                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.newMapUpdater:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      12: putstatic     #9                  // Field operationsUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      15: ldc           #61                 // class org/jboss/as/controller/registry/ProxyControllerRegistration
      17: ldc           #62                 // class java/util/Map
      19: ldc           #66                 // String attributes
      21: invokestatic  #64                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: invokestatic  #65                 // Method org/jboss/as/controller/registry/AtomicMapFieldUpdater.newMapUpdater:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      27: putstatic     #11                 // Field attributesUpdater:Lorg/jboss/as/controller/registry/AtomicMapFieldUpdater;
      30: return
}
