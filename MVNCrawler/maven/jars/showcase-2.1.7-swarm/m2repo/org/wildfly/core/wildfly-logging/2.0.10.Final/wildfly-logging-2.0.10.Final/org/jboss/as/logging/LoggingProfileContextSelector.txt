Compiled from "LoggingProfileContextSelector.java"
public final class org.jboss.as.logging.LoggingProfileContextSelector {
  private static final org.jboss.as.logging.LoggingProfileContextSelector INSTANCE;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.jboss.logmanager.LogContext> profileContexts;

  private org.jboss.as.logging.LoggingProfileContextSelector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field profileContexts:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public static org.jboss.as.logging.LoggingProfileContextSelector getInstance();
    Code:
       0: getstatic     #5                  // Field INSTANCE:Lorg/jboss/as/logging/LoggingProfileContextSelector;
       3: areturn

  protected org.jboss.logmanager.LogContext getOrCreate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field profileContexts:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class org/jboss/logmanager/LogContext
      13: astore_2
      14: aload_2
      15: ifnonnull     43
      18: invokestatic  #8                  // Method org/jboss/logmanager/LogContext.create:()Lorg/jboss/logmanager/LogContext;
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field profileContexts:Ljava/util/concurrent/ConcurrentMap;
      26: aload_1
      27: aload_2
      28: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #7                  // class org/jboss/logmanager/LogContext
      36: astore_3
      37: aload_3
      38: ifnull        43
      41: aload_3
      42: astore_2
      43: aload_2
      44: areturn

  public org.jboss.logmanager.LogContext get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field profileContexts:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class org/jboss/logmanager/LogContext
      13: areturn

  public boolean exists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field profileContexts:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public org.jboss.logmanager.LogContext remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field profileContexts:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class org/jboss/logmanager/LogContext
      13: areturn

  static {};
    Code:
       0: new           #12                 // class org/jboss/as/logging/LoggingProfileContextSelector
       3: dup
       4: invokespecial #13                 // Method "<init>":()V
       7: putstatic     #5                  // Field INSTANCE:Lorg/jboss/as/logging/LoggingProfileContextSelector;
      10: return
}
