Compiled from "ControllerClientLogger_$logger.java"
public class org.jboss.as.controller.client.logging.ControllerClientLogger_$logger extends org.jboss.logging.DelegatingBasicLogger implements org.jboss.as.controller.client.logging.ControllerClientLogger,org.jboss.logging.BasicLogger,java.io.Serializable {
  private static final long serialVersionUID;

  private static final java.lang.String FQCN;

  private static final java.lang.String cannotAddDeploymentAction;

  private static final java.lang.String cannotAddDeploymentActionsAfterStart;

  private static final java.lang.String cannotConvert;

  private static final java.lang.String cannotDeriveDeploymentName;

  private static final java.lang.String cannotUseDeploymentPlan;

  private static final java.lang.String channelClosed;

  private static final java.lang.String domainDeploymentAlreadyExists;

  private static final java.lang.String failed;

  private static final java.lang.String globalRollbackNotCompatible;

  private static final java.lang.String gracefulShutdownAlreadyConfigured;

  private static final java.lang.String incompleteDeploymentReplace;

  private static final java.lang.String invalidActionType;

  private static final java.lang.String invalidPrecedingAction;

  private static final java.lang.String invalidUri;

  private static final java.lang.String invalidValue3;

  private static final java.lang.String invalidValue4;

  private static final java.lang.String maxDisplayUnitLength;

  private static final java.lang.String noActiveRequest;

  private static final java.lang.String noFailureDetails;

  private static final java.lang.String notConfigured;

  private static final java.lang.String nullVar;

  private static final java.lang.String objectIsClosed;

  private static final java.lang.String operationOutcome;

  private static final java.lang.String operationsNotAllowed;

  private static final java.lang.String rollbackCancelled;

  private static final java.lang.String rollbackRolledBack;

  private static final java.lang.String rollbackTimedOut;

  private static final java.lang.String serverDeploymentAlreadyExists;

  private static final java.lang.String unknownActionType;

  private static final java.lang.String controllerClientNotClosed;

  private static final java.lang.String noFailureDescription;

  private static final java.lang.String operationNameNotFound;

  private static final java.lang.String invalidAddressType;

  private static final java.lang.String leakedControllerClient;

  private static final java.lang.String cannotDeleteTempFile;

  private static final java.lang.String streamWasClosed;

  public org.jboss.as.controller.client.logging.ControllerClientLogger_$logger(org.jboss.logging.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/DelegatingBasicLogger."<init>":(Lorg/jboss/logging/Logger;)V
       5: return

  protected java.lang.String cannotAddDeploymentAction$str();
    Code:
       0: ldc           #3                  // String WFLYCC0001: Cannot add deployment actions after starting creation of a rollout plan
       2: areturn

  public final java.lang.IllegalStateException cannotAddDeploymentAction();
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #5                  // Method cannotAddDeploymentAction$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String cannotAddDeploymentActionsAfterStart$str();
    Code:
       0: ldc           #13                 // String WFLYCC0002: Cannot add deployment actions after starting creation of a rollout plan
       2: areturn

  public final java.lang.IllegalStateException cannotAddDeploymentActionsAfterStart();
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #14                 // Method cannotAddDeploymentActionsAfterStart$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String cannotConvert$str();
    Code:
       0: ldc           #15                 // String WFLYCC0003: Cannot convert %s to %s
       2: areturn

  public final java.lang.String cannotConvert(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method cannotConvert$str:()Ljava/lang/String;
       4: iconst_2
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String cannotDeriveDeploymentName$str();
    Code:
       0: ldc           #17                 // String WFLYCC0004: Cannot derive a deployment name from %s -- use an overloaded method variant that takes a \'name\' parameter
       2: areturn

  public final java.lang.IllegalArgumentException cannotDeriveDeploymentName(java.net.URL);
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #19                 // Method cannotDeriveDeploymentName$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String cannotUseDeploymentPlan$str();
    Code:
       0: ldc           #23                 // String WFLYCC0005: Cannot use a DeploymentPlan not created by this manager
       2: areturn

  public final java.lang.IllegalArgumentException cannotUseDeploymentPlan();
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #24                 // Method cannotUseDeploymentPlan$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String channelClosed$str();
    Code:
       0: ldc           #25                 // String WFLYCC0006: Channel closed
       2: areturn

  public final java.io.IOException channelClosed(java.io.IOException);
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: aload_0
       5: invokevirtual #27                 // Method channelClosed$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: aload_1
      16: invokespecial #28                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #29                 // Method java/io/IOException.getStackTrace:()[Ljava/lang/StackTraceElement;
      24: astore_3
      25: aload_2
      26: aload_3
      27: iconst_1
      28: aload_3
      29: arraylength
      30: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      33: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      36: invokevirtual #30                 // Method java/io/IOException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      39: aload_2
      40: areturn

  protected java.lang.String domainDeploymentAlreadyExists$str();
    Code:
       0: ldc           #31                 // String WFLYCC0007: Deployment with name %s already present in the domain
       2: areturn

  public final java.lang.String domainDeploymentAlreadyExists(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method domainDeploymentAlreadyExists$str:()Ljava/lang/String;
       4: iconst_1
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String failed$str();
    Code:
       0: ldc           #33                 // String WFLYCC0008: failed
       2: areturn

  public final java.lang.String failed();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method failed$str:()Ljava/lang/String;
       4: iconst_0
       5: anewarray     #6                  // class java/lang/Object
       8: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      11: areturn

  protected java.lang.String globalRollbackNotCompatible$str();
    Code:
       0: ldc           #35                 // String WFLYCC0009: Global rollback is not compatible with a server restart
       2: areturn

  public final java.lang.IllegalStateException globalRollbackNotCompatible();
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #36                 // Method globalRollbackNotCompatible$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String gracefulShutdownAlreadyConfigured$str();
    Code:
       0: ldc           #37                 // String WFLYCC0010: Graceful shutdown already configured with a timeout of %d ms
       2: areturn

  public final java.lang.IllegalStateException gracefulShutdownAlreadyConfigured(long);
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #38                 // Method gracefulShutdownAlreadyConfigured$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: lload_1
      15: invokestatic  #39                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: aastore
      19: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: astore_3
      26: aload_3
      27: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      30: astore        4
      32: aload_3
      33: aload         4
      35: iconst_1
      36: aload         4
      38: arraylength
      39: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      42: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      45: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      48: aload_3
      49: areturn

  protected java.lang.String incompleteDeploymentReplace$str();
    Code:
       0: ldc           #40                 // String WFLYCC0011: Only one version of deployment with a given unique name can exist in the domain. The deployment plan specified that a new version of deployment %s replace an existing deployment with the same unique name, but did not apply the replacement to all server groups. Missing server groups were: %s
       2: areturn

  public final java.lang.String incompleteDeploymentReplace(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method incompleteDeploymentReplace$str:()Ljava/lang/String;
       4: iconst_2
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String invalidActionType$str();
    Code:
       0: ldc           #42                 // String WFLYCC0012: Invalid action type %s
       2: areturn

  public final java.lang.IllegalStateException invalidActionType(org.jboss.as.controller.client.helpers.domain.DeploymentAction$Type);
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #43                 // Method invalidActionType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidPrecedingAction$str();
    Code:
       0: ldc           #44                 // String WFLYCC0013: Preceding action was not a %s
       2: areturn

  public final java.lang.IllegalStateException invalidPrecedingAction(java.lang.Object);
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #45                 // Method invalidPrecedingAction$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidUri$str();
    Code:
       0: ldc           #46                 // String WFLYCC0014: %s is not a valid URI
       2: areturn

  public final java.lang.IllegalArgumentException invalidUri(java.lang.Throwable, java.net.URL);
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #47                 // Method invalidUri$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: aload_1
      20: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: astore_3
      24: aload_3
      25: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      28: astore        4
      30: aload_3
      31: aload         4
      33: iconst_1
      34: aload         4
      36: arraylength
      37: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      40: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      43: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      46: aload_3
      47: areturn

  protected java.lang.String invalidValue3$str();
    Code:
       0: ldc           #49                 // String WFLYCC0015: Illegal %s value %d -- must be greater than %d
       2: areturn

  public final java.lang.IllegalArgumentException invalidValue(java.lang.String, int, int);
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #50                 // Method invalidValue3$str:()Ljava/lang/String;
       8: iconst_3
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: dup
      24: iconst_2
      25: iload_3
      26: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: astore        4
      38: aload         4
      40: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      43: astore        5
      45: aload         4
      47: aload         5
      49: iconst_1
      50: aload         5
      52: arraylength
      53: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      56: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      59: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      62: aload         4
      64: areturn

  protected java.lang.String invalidValue4$str();
    Code:
       0: ldc           #52                 // String WFLYCC0016: Illegal %s value %d -- must be greater than %d and less than %d
       2: areturn

  public final java.lang.IllegalArgumentException invalidValue(java.lang.String, int, int, int);
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #53                 // Method invalidValue4$str:()Ljava/lang/String;
       8: iconst_4
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: dup
      24: iconst_2
      25: iload_3
      26: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: dup
      31: iconst_3
      32: iload         4
      34: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: aastore
      38: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: astore        5
      46: aload         5
      48: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      51: astore        6
      53: aload         5
      55: aload         6
      57: iconst_1
      58: aload         6
      60: arraylength
      61: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      64: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      67: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      70: aload         5
      72: areturn

  protected java.lang.String maxDisplayUnitLength$str();
    Code:
       0: ldc           #54                 // String WFLYCC0017: Screen real estate is expensive; displayUnits must be 5 characters or less
       2: areturn

  public final java.lang.RuntimeException maxDisplayUnitLength();
    Code:
       0: new           #55                 // class java/lang/RuntimeException
       3: dup
       4: aload_0
       5: invokevirtual #56                 // Method maxDisplayUnitLength$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #57                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #58                 // Method java/lang/RuntimeException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #59                 // Method java/lang/RuntimeException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String noActiveRequest$str();
    Code:
       0: ldc           #60                 // String WFLYCC0018: No active request found for %d
       2: areturn

  public final java.io.IOException noActiveRequest(int);
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: aload_0
       5: invokevirtual #61                 // Method noActiveRequest$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: iload_1
      15: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: aastore
      19: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      25: astore_2
      26: aload_2
      27: invokevirtual #29                 // Method java/io/IOException.getStackTrace:()[Ljava/lang/StackTraceElement;
      30: astore_3
      31: aload_2
      32: aload_3
      33: iconst_1
      34: aload_3
      35: arraylength
      36: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      39: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      42: invokevirtual #30                 // Method java/io/IOException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      45: aload_2
      46: areturn

  protected java.lang.String noFailureDetails$str();
    Code:
       0: ldc           #63                 // String WFLYCC0019: No failure details provided
       2: areturn

  public final java.lang.String noFailureDetails();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method noFailureDetails$str:()Ljava/lang/String;
       4: iconst_0
       5: anewarray     #6                  // class java/lang/Object
       8: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      11: areturn

  protected java.lang.String notConfigured$str();
    Code:
       0: ldc           #65                 // String WFLYCC0020: No %s is configured
       2: areturn

  public final java.lang.IllegalStateException notConfigured(java.lang.String);
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #66                 // Method notConfigured$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String nullVar$str();
    Code:
       0: ldc           #67                 // String WFLYCC0021: %s is null
       2: areturn

  public final java.lang.IllegalArgumentException nullVar(java.lang.String);
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #68                 // Method nullVar$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String objectIsClosed$str();
    Code:
       0: ldc           #69                 // String WFLYCC0022: %s is closed
       2: areturn

  public final java.lang.IllegalStateException objectIsClosed(java.lang.String);
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #70                 // Method objectIsClosed$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String operationOutcome$str();
    Code:
       0: ldc           #71                 // String WFLYCC0023: Operation outcome is %s
       2: areturn

  public final java.lang.RuntimeException operationOutcome(java.lang.String);
    Code:
       0: new           #55                 // class java/lang/RuntimeException
       3: dup
       4: aload_0
       5: invokevirtual #72                 // Method operationOutcome$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #57                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #58                 // Method java/lang/RuntimeException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #59                 // Method java/lang/RuntimeException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String operationsNotAllowed$str();
    Code:
       0: ldc           #73                 // String WFLYCC0024: %s operations are not allowed after content and deployment modifications
       2: areturn

  public final java.lang.IllegalStateException operationsNotAllowed(java.lang.String);
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #74                 // Method operationsNotAllowed$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String rollbackCancelled$str();
    Code:
       0: ldc           #75                 // String WFLYCC0025: Rollback was cancelled
       2: areturn

  public final org.jboss.as.controller.client.helpers.domain.RollbackCancelledException rollbackCancelled();
    Code:
       0: new           #76                 // class org/jboss/as/controller/client/helpers/domain/RollbackCancelledException
       3: dup
       4: aload_0
       5: invokevirtual #77                 // Method rollbackCancelled$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #78                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #79                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #80                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String rollbackRolledBack$str();
    Code:
       0: ldc           #81                 // String WFLYCC0026: Rollback was itself rolled back
       2: areturn

  public final org.jboss.as.controller.client.helpers.domain.RollbackCancelledException rollbackRolledBack();
    Code:
       0: new           #76                 // class org/jboss/as/controller/client/helpers/domain/RollbackCancelledException
       3: dup
       4: aload_0
       5: invokevirtual #82                 // Method rollbackRolledBack$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #78                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #79                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #80                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String rollbackTimedOut$str();
    Code:
       0: ldc           #83                 // String WFLYCC0027: Rollback timed out
       2: areturn

  public final org.jboss.as.controller.client.helpers.domain.RollbackCancelledException rollbackTimedOut();
    Code:
       0: new           #76                 // class org/jboss/as/controller/client/helpers/domain/RollbackCancelledException
       3: dup
       4: aload_0
       5: invokevirtual #84                 // Method rollbackTimedOut$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #78                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #79                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #80                 // Method org/jboss/as/controller/client/helpers/domain/RollbackCancelledException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String serverDeploymentAlreadyExists$str();
    Code:
       0: ldc           #85                 // String WFLYCC0028: Deployment with name %s already present in the server
       2: areturn

  public final java.lang.String serverDeploymentAlreadyExists(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method serverDeploymentAlreadyExists$str:()Ljava/lang/String;
       4: iconst_1
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String unknownActionType$str();
    Code:
       0: ldc           #87                 // String WFLYCC0029: Unknown action type %s
       2: areturn

  public final java.lang.IllegalStateException unknownActionType(java.lang.Object);
    Code:
       0: new           #4                  // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #88                 // Method unknownActionType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #9                  // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #12                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String controllerClientNotClosed$str();
    Code:
       0: ldc           #89                 // String WFLYCC0030: Allocation stack trace:
       2: areturn

  public final org.jboss.as.controller.client.logging.ControllerClientLogger$LeakDescription controllerClientNotClosed();
    Code:
       0: new           #90                 // class org/jboss/as/controller/client/logging/ControllerClientLogger$LeakDescription
       3: dup
       4: aload_0
       5: invokevirtual #91                 // Method controllerClientNotClosed$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #92                 // Method org/jboss/as/controller/client/logging/ControllerClientLogger$LeakDescription."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #93                 // Method org/jboss/as/controller/client/logging/ControllerClientLogger$LeakDescription.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #94                 // Method org/jboss/as/controller/client/logging/ControllerClientLogger$LeakDescription.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String noFailureDescription$str();
    Code:
       0: ldc           #95                 // String WFLYCC0031: No failure description as the operation was successful.
       2: areturn

  public final java.lang.IllegalArgumentException noFailureDescription();
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #96                 // Method noFailureDescription$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String operationNameNotFound$str();
    Code:
       0: ldc           #97                 // String WFLYCC0032: The operation name was not defined.
       2: areturn

  public final java.lang.IllegalArgumentException operationNameNotFound();
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #98                 // Method operationNameNotFound$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String invalidAddressType$str();
    Code:
       0: ldc           #99                 // String WFLYCC0033: The address must be of type ModelType.LIST.
       2: areturn

  public final java.lang.IllegalArgumentException invalidAddressType();
    Code:
       0: new           #18                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #100                // Method invalidAddressType$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #22                 // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  public final void leakedControllerClient(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #101                // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #102                // Field FQCN:Ljava/lang/String;
       7: getstatic     #103                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #104                // Method leakedControllerClient$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #105                // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String leakedControllerClient$str();
    Code:
       0: ldc           #106                // String WFLYCC0034: Closing leaked controller client
       2: areturn

  public final void cannotDeleteTempFile(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #101                // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #102                // Field FQCN:Ljava/lang/String;
       7: getstatic     #103                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #107                // Method cannotDeleteTempFile$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #108                // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String cannotDeleteTempFile$str();
    Code:
       0: ldc           #109                // String WFLYCC0035: Cannot delete temp file %s, will be deleted on exit
       2: areturn

  protected java.lang.String streamWasClosed$str();
    Code:
       0: ldc           #110                // String WFLYCC0036: Stream was closed
       2: areturn

  public final java.io.IOException streamWasClosed();
    Code:
       0: new           #26                 // class java/io/IOException
       3: dup
       4: aload_0
       5: invokevirtual #111                // Method streamWasClosed$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #7                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #62                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #29                 // Method java/io/IOException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #11                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #30                 // Method java/io/IOException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/jboss/as/controller/client/logging/ControllerClientLogger_$logger
       2: invokevirtual #112                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #102                // Field FQCN:Ljava/lang/String;
       8: return
}
