#####################################################################################################
#
# This file is for reference only, changes have no effect on the generated interface implementations.
#
#####################################################################################################

# Id: 1
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Attempted to reconnect non-existent process '%s'
# @param 1: processName - the name of the process.
attemptToReconnectNonExistentProcess=Attempted to reconnect non-existent process '%s'
# Id: 2
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Attempted to remove non-existent process '%s'
# @param 1: processName - the name of the process.
attemptToRemoveNonExistentProcess=Attempted to remove non-existent process '%s'
# Id: 3
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Attempted to start non-existent process '%s'
# @param 1: processName - the name of the process.
attemptToStartNonExistentProcess=Attempted to start non-existent process '%s'
# Id: 4
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Attempted to stop non-existent process '%s'
# @param 1: processName - the name of the process.
attemptToStopNonExistentProcess=Attempted to stop non-existent process '%s'
# Id: 5
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Attempted to register duplicate named process '%s'
# @param 1: processName - the duplicate name.
duplicateProcessName=Attempted to register duplicate named process '%s'
# Id: 6
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Failed to send authentication key to process '%s': %s
# @param 1: processName - the process name.
# @param 2: error - th error.
failedToSendAuthKey=Failed to send authentication key to process '%s': %s
# Id: 7
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to send data bytes to process '%s' input stream
# @param 1: processName - the process name.
failedToSendDataBytes=Failed to send data bytes to process '%s' input stream
# Id: 8
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to send reconnect message to process '%s' input stream
# @param 1: processName - the process name.
failedToSendReconnect=Failed to send reconnect message to process '%s' input stream
# Id: 9
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to start process '%s'
# @param 1: processName - the process name.
failedToStartProcess=Failed to start process '%s'
# Id: 10
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to write %s message to connection: %s
# @param 1: messageType - the type of the message that failed to write.
# @param 2: t - the cause of the error.
failedToWriteMessage=Failed to write %s message to connection: %s
# Id: 11
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Process '%s' finished with an exit status of %d
# @param 1: processName - the process name.
# @param 2: exitCode - the exit code.
processFinished=Process '%s' finished with an exit status of %d
# Id: 12
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Received connection with invalid version from %s
# @param 1: address - the address.
receivedInvalidVersion=Received connection with invalid version from %s
# Id: 13
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Received unrecognized greeting code 0x%02x from %s
# @param 1: code - the unknown code.
# @param 2: address - the address
receivedUnknownGreetingCode=Received unrecognized greeting code 0x%02x from %s
# Id: 14
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Received connection with unknown credentials from %s
# @param 1: address - the address
receivedUnknownCredentials=Received connection with unknown credentials from %s
# Id: 15
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Received unknown message with code 0x%02x
# @param 1: code - the unknown code.
receivedUnknownMessageCode=Received unknown message with code 0x%02x
# Id: 16
# Level: org.jboss.logging.Logger.Level.INFO
# Message: All processes finished; exiting
shutdownComplete=All processes finished; exiting
# Id: 17
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Shutting down process controller
shuttingDown=Shutting down process controller
# Id: 18
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Starting process '%s'
# @param 1: processName - the process name.
startingProcess=Starting process '%s'
# Id: 19
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Stopping process '%s'
# @param 1: processName - the process name.
stoppingProcess=Stopping process '%s'
# Id: 20
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Stream processing failed for process '%s': %s
# @param 1: processName - the process name.
# @param 2: error - the error.
streamProcessingFailed=Stream processing failed for process '%s': %s
# Id: 21
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Waiting %d seconds until trying to restart process %s.
# @param 1: seconds - the seconds
# @param 2: processName - the process name
waitingToRestart=Waiting %d seconds until trying to restart process %s.
# Id: 22
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Failed to kill process '%s', trying to destroy the process instead.
# @param 1: process - 
failedToKillProcess=Failed to kill process '%s', trying to destroy the process instead.
# Id: none
# Message: Usage: %s [args...]%nwhere args include:
# @param 1: executableName - 
argUsage=Usage: %s [args...]%nwhere args include:
# Id: none
# Message: Keep a copy of the persistent domain configuration even if this host is not the Domain Controller
argBackup=Keep a copy of the persistent domain configuration even if this host is not the Domain Controller
# Id: none
# Message: If this host is not the Domain Controller and cannot contact the Domain Controller at boot, boot using a locally cached copy of the domain configuration (see --backup)
argCachedDc=If this host is not the Domain Controller and cannot contact the Domain Controller at boot, boot using a locally cached copy of the domain configuration (see --backup)
# Id: none
# Message: Name of the domain configuration file to use (default is "domain.xml") (Same as -c)
argDomainConfig=Name of the domain configuration file to use (default is "domain.xml") (Same as -c)
# Id: none
# Message: Name of the domain configuration file to use (default is "domain.xml") (Same as --domain-config)
argShortDomainConfig=Name of the domain configuration file to use (default is "domain.xml") (Same as --domain-config)
# Id: none
# Message: Name of the domain configuration file to use. This differs from '--domain-config', '-c' and '-domain-config' in that the initial file is never overwritten.
argReadOnlyDomainConfig=Name of the domain configuration file to use. This differs from '--domain-config', '-c' and '-domain-config' in that the initial file is never overwritten.
# Id: none
# Message: Display this message and exit
argHelp=Display this message and exit
# Id: none
# Message: Address on which the host controller should listen for communication from the process controller
argInterProcessHcAddress=Address on which the host controller should listen for communication from the process controller
# Id: none
# Message: Port on which the host controller should listen for communication from the process controller
argInterProcessHcPort=Port on which the host controller should listen for communication from the process controller
# Id: none
# Message: Name of the host configuration file to use (default is "host.xml")
argHostConfig=Name of the host configuration file to use (default is "host.xml")
# Id: none
# Message: Name of the host configuration file to use. This differs from '--host-config' in that the initial file is never overwritten.
argReadOnlyHostConfig=Name of the host configuration file to use. This differs from '--host-config' in that the initial file is never overwritten.
# Id: none
# Message: Address on which the process controller listens for communication from processes it controls
argPcAddress=Address on which the process controller listens for communication from processes it controls
# Id: none
# Message: Port on which the process controller listens for communication from processes it controls
argPcPort=Port on which the process controller listens for communication from processes it controls
# Id: none
# Message: Load system properties from the given url
argProperties=Load system properties from the given url
# Id: none
# Message: Set a system property
argSystem=Set a system property
# Id: none
# Message: Print version and exit
argVersion=Print version and exit
# Id: none
# Message: Set system property jboss.bind.address to the given value
argPublicBindAddress=Set system property jboss.bind.address to the given value
# Id: none
# Message: Set system property jboss.bind.address.<interface> to the given value
argInterfaceBindAddress=Set system property jboss.bind.address.<interface> to the given value
# Id: none
# Message: Set system property jboss.default.multicast.address to the given value
argDefaultMulticastAddress=Set system property jboss.default.multicast.address to the given value
# Id: none
# Message: Set the host controller's running type to ADMIN_ONLY causing it to open administrative interfaces and accept management requests but not start servers or, if this host controller is the master for the domain, accept incoming connections from slave host controllers.
argAdminOnly=Set the host controller's running type to ADMIN_ONLY causing it to open administrative interfaces and accept management requests but not start servers or, if this host controller is the master for the domain, accept incoming connections from slave host controllers.
# Id: none
# Message: Set system property jboss.domain.master.address to the given value. In a default slave Host Controller config, this is used to configure the address of the master Host Controller.
argMasterAddress=Set system property jboss.domain.master.address to the given value. In a default slave Host Controller config, this is used to configure the address of the master Host Controller.
# Id: none
# Message: Set system property jboss.domain.master.port to the given value. In a default slave Host Controller config, this is used to configure the port used for native management communication by the master Host Controller.
argMasterPort=Set system property jboss.domain.master.port to the given value. In a default slave Host Controller config, this is used to configure the port used for native management communication by the master Host Controller.
# Id: none
# Message: Runs the server with a security manager installed.
argSecMgr=Runs the server with a security manager installed.
# Id: 23
# Message: No value was provided for argument %s
# @param 1: argument - the name of the argument
noArgValue=No value was provided for argument %s
# Id: 24
# Message: Could not find java executable under %s.
# @param 1: binDir - the directory the executable file should be located.
cannotFindJavaExe=Could not find java executable under %s.
# Id: 25
# Message: Authentication key must be 24 bytes long
invalidAuthKeyLen=Authentication key must be 24 bytes long
# Id: 26
# Message: cmd must have at least one entry
invalidCommandLen=cmd must have at least one entry
# Id: 27
# Message: Java home '%s' does not exist.
# @param 1: dir - the directory to Java home.
invalidJavaHome=Java home '%s' does not exist.
# Id: 28
# Message: Java home's bin '%s' does not exist. The home directory was determined to be %s.
# @param 1: binDir - the bin directory.
# @param 2: javaHomeDir - the Java home directory.
invalidJavaHomeBin=Java home's bin '%s' does not exist. The home directory was determined to be %s.
# Id: 29
# Message: %s length is invalid
# @param 1: parameterName - the parameter name.
invalidLength=%s length is invalid
# Id: 30
# Message: Invalid option: %s
# @param 1: option - the invalid option.
invalidOption=Invalid option: %s
# Id: 31
# Message: Command contains a null component
nullCommandComponent=Command contains a null component
# Id: 32
# Message: %s is null
# @param 1: varName - the variable name.
nullVar=%s is null
# Id: 33
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to accept a connection
failedToAcceptConnection=Failed to accept a connection
# Id: 34
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to close resource %s
# @param 1: resource - the resource.
failedToCloseResource=Failed to close resource %s
# Id: 35
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to close the server socket %s
# @param 1: socket - the server socket.
failedToCloseServerSocket=Failed to close the server socket %s
# Id: 36
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to close a socket
failedToCloseSocket=Failed to close a socket
# Id: 37
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to finish the marshaller %s
# @param 1: marshaller - the marshaller in error.
failedToFinishMarshaller=Failed to finish the marshaller %s
# Id: 38
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to finish the unmarshaller %s
# @param 1: unmarshaller - the marshaller in error.
failedToFinishUnmarshaller=Failed to finish the unmarshaller %s
# Id: 39
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to handle incoming connection
failedToHandleIncomingConnection=Failed to handle incoming connection
# Id: 40
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to handle socket failure condition
failedToHandleSocketFailure=Failed to handle socket failure condition
# Id: 41
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to handle socket finished condition
failedToHandleSocketFinished=Failed to handle socket finished condition
# Id: 42
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to handle socket shut down condition
failedToHandleSocketShutdown=Failed to handle socket shut down condition
# Id: 43
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Failed to read a message
failedToReadMessage=Failed to read a message
# Id: 44
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Leaked a message output stream; cleaning
leakedMessageOutputStream=Leaked a message output stream; cleaning
# Id: 45
# Message: Failed to create server thread
failedToCreateServerThread=Failed to create server thread
# Id: 46
# Message: Failed to read object
failedToReadObject=Failed to read object
# Id: 47
# Message: Invalid byte
invalidByte.0=Invalid byte
# Id: 48
# Message: Invalid byte:%s(%d)
# @param 1: c - the character.
# @param 2: i - the raw integer.
invalidByte.2=Invalid byte:%s(%d)
# Id: 49
# Message: Invalid byte token.  Expecting '%s' received '%s'
# @param 1: expected - the expected value.
# @param 2: actual - the actual value.
invalidByteToken=Invalid byte token.  Expecting '%s' received '%s'
# Id: 50
# Message: Invalid command byte read: %s
# @param 1: commandByte - the command byte read.
invalidCommandByte=Invalid command byte read: %s
# Id: 51
# Message: Invalid start chunk start [%s]
# @param 1: chunk - the start chunk.
invalidStartChunk=Invalid start chunk start [%s]
# Id: 56
# Message: Read %d bytes.
# @param 1: bytesRead - the number of bytes read.
readBytes=Read %d bytes.
# Id: 58
# Message: Stream closed
streamClosed=Stream closed
# Id: 59
# Message: Thread creation was refused
threadCreationRefused=Thread creation was refused
# Id: 60
# Message: Unexpected end of stream
unexpectedEndOfStream=Unexpected end of stream
# Id: 61
# Message: Write channel closed
writeChannelClosed=Write channel closed
# Id: 62
# Message: Writes are already shut down
writesAlreadyShutdown=Writes are already shut down
