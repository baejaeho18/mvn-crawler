Compiled from "BaseAccessRequirement.java"
public abstract class org.jboss.as.cli.accesscontrol.BaseAccessRequirement implements org.jboss.as.cli.accesscontrol.AccessRequirement,org.jboss.as.cli.CliEventListener {
  protected org.jboss.logging.Logger log;

  protected final boolean traceEnabled;

  private java.lang.Boolean satisfied;

  public org.jboss.as.cli.accesscontrol.BaseAccessRequirement();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
      12: putfield      #4                  // Field log:Lorg/jboss/logging/Logger;
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field log:Lorg/jboss/logging/Logger;
      20: invokevirtual #5                  // Method org/jboss/logging/Logger.isTraceEnabled:()Z
      23: putfield      #6                  // Field traceEnabled:Z
      26: return

  public boolean isSatisfied(org.jboss.as.cli.CommandContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field satisfied:Ljava/lang/Boolean;
       4: ifnonnull     62
       7: aload_0
       8: aload_0
       9: aload_1
      10: invokevirtual #8                  // Method checkAccess:(Lorg/jboss/as/cli/CommandContext;)Z
      13: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      16: putfield      #7                  // Field satisfied:Ljava/lang/Boolean;
      19: aload_0
      20: getfield      #6                  // Field traceEnabled:Z
      23: ifeq          62
      26: aload_0
      27: getfield      #4                  // Field log:Lorg/jboss/logging/Logger;
      30: new           #10                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_0
      38: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #14                 // String
      46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #7                  // Field satisfied:Ljava/lang/Boolean;
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokevirtual #17                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
      62: aload_0
      63: getfield      #7                  // Field satisfied:Ljava/lang/Boolean;
      66: invokevirtual #18                 // Method java/lang/Boolean.booleanValue:()Z
      69: ireturn

  public void cliEvent(org.jboss.as.cli.CliEvent, org.jboss.as.cli.CommandContext);
    Code:
       0: aload_1
       1: getstatic     #19                 // Field org/jboss/as/cli/CliEvent.DISCONNECTED:Lorg/jboss/as/cli/CliEvent;
       4: if_acmpne     16
       7: aload_0
       8: aconst_null
       9: putfield      #7                  // Field satisfied:Ljava/lang/Boolean;
      12: aload_0
      13: invokevirtual #20                 // Method resetState:()V
      16: return

  protected void resetState();
    Code:
       0: return

  protected abstract boolean checkAccess(org.jboss.as.cli.CommandContext);
}
