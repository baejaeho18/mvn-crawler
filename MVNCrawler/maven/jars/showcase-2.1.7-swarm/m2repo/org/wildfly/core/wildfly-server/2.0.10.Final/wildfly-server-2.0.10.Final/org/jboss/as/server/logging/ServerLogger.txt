Compiled from "ServerLogger.java"
public interface org.jboss.as.server.logging.ServerLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.server.logging.ServerLogger ROOT_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger AS_ROOT_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger CONFIG_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger FD_LIMIT_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger DEPLOYMENT_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger PRIVATE_DEP_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger UNSUPPORTED_DEP_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger MODULE_SERVICE_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger NETWORK_LOGGER;

  public static final org.jboss.as.server.logging.ServerLogger DEPRECATED_DEP_LOGGER;

  public abstract void jbossDeploymentStructureIgnored(java.lang.String);

  public abstract void cannotLoadAnnotationIndex(java.lang.String);

  public abstract void cannotIndexClass(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void undeploymentRolledBack(java.lang.String, java.lang.String);

  public abstract void undeploymentRolledBackWithNoMessage(java.lang.String);

  public abstract void deploymentUndeployed(java.lang.String, java.lang.String);

  public abstract void deploymentDeployed(java.lang.String, java.lang.String);

  public abstract void redeployRolledBack(java.lang.String, java.lang.String);

  public abstract void redeployRolledBackWithNoMessage(java.lang.String);

  public abstract void deploymentRedeployed(java.lang.String);

  public abstract void replaceRolledBack(java.lang.String, java.lang.String, java.lang.String);

  public abstract void replaceRolledBackWithNoMessage(java.lang.String, java.lang.String);

  public abstract void deploymentReplaced(java.lang.String, java.lang.String);

  public abstract void annotationImportIgnored(org.jboss.modules.ModuleIdentifier, org.jboss.modules.ModuleIdentifier);

  public abstract void privateApiUsed(java.lang.String, org.jboss.modules.ModuleIdentifier);

  public abstract void unsupportedApiUsed(java.lang.String, org.jboss.modules.ModuleIdentifier);

  public abstract void failedToRemoveDeploymentContent(java.lang.Throwable, java.lang.String);

  public abstract void deploymentRolledBack(java.lang.String, java.lang.String);

  public abstract void deploymentRolledBackWithNoMessage(java.lang.String);

  public abstract void failedToParseCommandLineInteger(java.lang.String, java.lang.String);

  public abstract void cannotAddURLStreamHandlerFactory(java.lang.Exception, java.lang.String);

  public abstract void startedClean(java.lang.String, long, int, int, int);

  public abstract void startedWitErrors(java.lang.String, long, int, int, int, int);

  public abstract void startingDeployment(java.lang.String, java.lang.String);

  public abstract void stoppedDeployment(java.lang.String, java.lang.String, int);

  public abstract void caughtExceptionRevertingOperation(java.lang.Exception, java.lang.String, java.lang.String, org.jboss.as.controller.PathAddress);

  public abstract void nativeManagementInterfaceIsUnsecured();

  public abstract void httpManagementInterfaceIsUnsecured();

  public abstract void creatingHttpManagementServiceOnPort(java.lang.String, int);

  public abstract void creatingHttpManagementServiceOnSecurePort(java.lang.String, int);

  public abstract void creatingHttpManagementServiceOnPortAndSecurePort(java.lang.String, int, int);

  public abstract void creatingHttpManagementServiceOnSocket(java.lang.String);

  public abstract void creatingHttpManagementServiceOnSecureSocket(java.lang.String);

  public abstract void creatingHttpManagementServiceOnSocketAndSecureSocket(java.lang.String, java.lang.String);

  public abstract void caughtExceptionClosingContentInputStream(java.lang.Exception);

  public abstract void caughtExceptionUndeploying(java.lang.Throwable, org.jboss.as.server.deployment.DeploymentUnitProcessor, org.jboss.as.server.deployment.Phase, org.jboss.as.server.deployment.DeploymentUnit);

  public abstract void noCompositeIndex(org.jboss.modules.ModuleIdentifier, java.lang.String);

  public abstract void extensionMissingManifestAttribute(java.lang.String, java.lang.String, java.util.jar.Attributes$Name);

  public abstract void invalidExtensionURI(java.lang.String, java.net.URISyntaxException);

  public abstract void cannotFindExtensionListEntry(org.jboss.as.server.deployment.module.ExtensionListEntry, org.jboss.as.server.deployment.module.ResourceRoot);

  public abstract void duplicateServerNameConfiguration(java.lang.String, java.lang.String, java.lang.String);

  public abstract void serverStarting(java.lang.String);

  public abstract void serverStopped(java.lang.String, int);

  public abstract void logHttpConsole(java.lang.String, int);

  public abstract void logHttpsConsole(java.lang.String, int);

  public abstract void logHttpAndHttpsConsole(java.lang.String, int, java.lang.String, int);

  public abstract void logNoConsole();

  public abstract void caughtExceptionDuringBoot(java.lang.Exception);

  public abstract java.lang.String unsuccessfulBoot();

  public abstract void reportAdminOnlyMissingDeploymentContent(java.lang.String, java.lang.String);

  public abstract void additionalResourceRootDoesNotExist(java.lang.String);

  public abstract void classPathEntryNotValid(java.lang.String, java.lang.String);

  public abstract void logHttpManagement(java.lang.String, int);

  public abstract void logHttpsManagement(java.lang.String, int);

  public abstract void logHttpAndHttpsManagement(java.lang.String, int, java.lang.String, int);

  public abstract void logNoHttpManagement();

  public abstract void jbossDeploymentStructureNamespaceIgnored(java.lang.String);

  public abstract void failedToUnmountContentOverride(java.lang.Throwable);

  public abstract void deploymentDependenciesAreATopLevelElement(java.lang.String);

  public abstract void reportAdminOnlyMissingDeploymentOverlayContent(java.lang.String, java.lang.String, java.lang.String);

  public abstract void infoDeferDeploymentPhase(org.jboss.as.server.deployment.Phase, java.lang.String, org.jboss.msc.service.ServiceController$Mode);

  public abstract void deploymentRestartDetected(java.lang.String);

  public abstract void fdTooLow(long);

  public abstract java.lang.String argServerConfig();

  public abstract java.lang.String argShortServerConfig();

  public abstract java.lang.String argReadOnlyServerConfig();

  public abstract java.lang.String argHelp();

  public abstract java.lang.String argProperties();

  public abstract java.lang.String argSecurityProperty();

  public abstract java.lang.String argSystem();

  public abstract java.lang.String argVersion();

  public abstract java.lang.String argPublicBindAddress();

  public abstract java.lang.String argInterfaceBindAddress();

  public abstract java.lang.String argDefaultMulticastAddress();

  public abstract java.lang.String argAdminOnly();

  public abstract java.lang.String argDebugPort();

  public abstract java.lang.String argSecMgr();

  public abstract java.lang.String valueExpectedForCommandLineOption(java.lang.String);

  public abstract java.lang.String invalidCommandLineOption(java.lang.String);

  public abstract java.lang.String malformedCommandLineURL(java.lang.String, java.lang.String);

  public abstract java.lang.String unableToLoadProperties(java.net.URL);

  public abstract java.lang.RuntimeException cannotCreateVault(org.jboss.as.server.services.security.VaultReaderException, org.jboss.as.server.services.security.VaultReaderException);

  public abstract java.lang.IllegalArgumentException hostControllerNameNonNullInStandalone();

  public abstract java.lang.IllegalArgumentException hostControllerNameNullInDomain();

  public abstract org.jboss.as.controller.OperationFailedException cannotResolveInterface(java.lang.Exception, java.lang.Exception);

  public abstract org.jboss.msc.service.StartException failedToResolveInterface(java.lang.String);

  public abstract org.jboss.msc.service.StartException failedToStartHttpManagementService(java.lang.Exception);

  public abstract org.jboss.as.controller.OperationFailedException noSuchDeploymentContent(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException noSuchDeployment(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException cannotReplaceDeployment(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException deploymentAlreadyStarted(java.lang.String);

  public abstract java.lang.IllegalStateException missingHomeDirConfiguration(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException attributeIsRequired(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException attributeNotAllowedWhenAlternativeIsPresent(java.lang.String, java.util.List<java.lang.String>);

  public abstract org.jboss.as.controller.OperationFailedException attributeIsInvalid(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException caughtIOExceptionUploadingContent(java.io.IOException);

  public abstract org.jboss.as.controller.OperationFailedException nullStreamAttachment(int);

  public abstract org.jboss.as.controller.OperationFailedException invalidDeploymentURL(java.lang.String, java.net.MalformedURLException);

  public abstract org.jboss.as.controller.OperationFailedException problemOpeningStreamFromDeploymentURL(java.lang.String, java.io.IOException);

  public abstract java.lang.IllegalStateException serviceModuleLoaderAlreadyStarted();

  public abstract java.lang.IllegalStateException serviceModuleLoaderAlreadyStopped();

  public abstract java.lang.IllegalArgumentException missingModulePrefix(org.jboss.modules.ModuleIdentifier, java.lang.String);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException failedToReadVirtualFile(org.jboss.vfs.VirtualFile, java.io.IOException);

  public abstract java.lang.IllegalArgumentException deploymentRootRequired();

  public abstract java.lang.IllegalArgumentException subdeploymentsRequireParent();

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException noModuleIdentifier(java.lang.String);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException failedToCreateVFSResourceLoader(java.lang.String, java.io.IOException);

  public abstract java.lang.RuntimeException failedToGetFileFromRemoteRepository(java.lang.Throwable);

  public abstract java.io.IOException cannotCreateLocalDirectory(java.io.File);

  public abstract java.io.IOException didNotReadEntireFile(long);

  public abstract java.lang.String noArgValue(java.lang.String);

  public abstract java.lang.IllegalStateException couldNotFindHcFileRepositoryConnection();

  public abstract java.lang.IllegalArgumentException unknownMountType(org.jboss.as.server.deployment.MountType);

  public abstract org.jboss.msc.service.StartException failedCreatingTempProvider(java.lang.Throwable);

  public abstract org.jboss.as.controller.OperationFailedException illegalCombinationOfHttpManagementInterfaceConfigurations(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException systemPropertyNotManageable(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException systemPropertyCannotOverrideServerName(java.lang.String);

  public abstract java.io.IOException unableToInitialiseSSLContext(java.lang.String);

  public abstract java.lang.IllegalStateException modulesDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException homeDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException bundlesDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException configDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException serverBaseDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException serverDataDirectoryIsNotDirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateServerDataDirectory(java.io.File);

  public abstract java.lang.IllegalStateException serverContentDirectoryIsNotDirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateServerContentDirectory(java.io.File);

  public abstract java.lang.IllegalStateException logDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateLogDirectory(java.io.File);

  public abstract java.lang.IllegalStateException serverTempDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateServerTempDirectory(java.io.File);

  public abstract java.lang.IllegalStateException controllerTempDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateControllerTempDirectory(java.io.File);

  public abstract java.lang.IllegalStateException domainBaseDirDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException domainConfigDirDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException serverBaseDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateServerBaseDirectory(java.io.File);

  public abstract org.jboss.as.controller.OperationFailedException noSuchDeploymentContentAtBoot(java.lang.String, java.lang.String);

  public abstract java.lang.String configuredSystemPropertiesLabel();

  public abstract java.lang.String vmArgumentsLabel(java.lang.String);

  public abstract java.lang.String configuredSystemEnvironmentLabel();

  public abstract java.lang.IllegalStateException vfsNotAvailable();

  public abstract org.jboss.msc.service.ServiceNotFoundException serverControllerServiceRemoved();

  public abstract java.lang.IllegalStateException rootServiceRemoved();

  public abstract java.lang.IllegalStateException cannotStartServer(java.lang.Exception);

  public abstract java.lang.IllegalStateException namingContextHasNotBeenSet();

  public abstract java.lang.IllegalArgumentException embeddedServerDirectoryNotFound(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException propertySpecifiedFileDoesNotExist(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException propertySpecifiedFileIsNotADirectory(java.lang.String, java.lang.String);

  public abstract java.lang.RuntimeException errorCopyingFile(java.lang.String, java.lang.String, java.io.IOException);

  public abstract java.io.InvalidObjectException invalidObject(java.lang.String);

  public abstract java.io.InvalidObjectException invalidPortOffset();

  public abstract org.jboss.as.controller.OperationFailedException invalidStreamIndex(java.lang.String, int, int);

  public abstract org.jboss.as.controller.OperationFailedException invalidStreamURL(java.lang.Exception, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException invalidStreamBytes(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException multipleContentItemsNotSupported();

  public abstract org.jboss.msc.service.StartException deploymentPhaseFailed(org.jboss.as.server.deployment.Phase, org.jboss.as.server.deployment.DeploymentUnit, java.lang.Throwable);

  public abstract java.lang.IllegalArgumentException nullInitialDeploymentUnit();

  public abstract java.lang.IllegalArgumentException nullAttachmentKey();

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException deploymentIndexingFailed(java.lang.Throwable);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException noSeamIntegrationJarPresent(org.jboss.modules.Module);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException failedToInstantiateClassFileTransformer(java.lang.String, java.lang.Exception);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException noDeploymentRepositoryAvailable();

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException deploymentMountFailed(java.io.IOException);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException failedToGetManifest(org.jboss.vfs.VirtualFile, java.io.IOException);

  public abstract java.lang.IllegalArgumentException cannotMergeResourceRoot(org.jboss.vfs.VirtualFile, org.jboss.vfs.VirtualFile);

  public abstract java.lang.RuntimeException failedToCreateTempFileProvider(java.io.IOException);

  public abstract java.io.IOException resourceTooLarge();

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException subdeploymentNotFound(java.lang.String, java.lang.StringBuilder);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException deploymentStructureFileNotFound(java.io.File);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException errorLoadingDeploymentStructureFile(java.lang.String, javax.xml.stream.XMLStreamException);

  public abstract javax.xml.stream.XMLStreamException duplicateSubdeploymentListing(java.lang.String);

  public abstract javax.xml.stream.XMLStreamException invalidModuleName(java.lang.String);

  public abstract javax.xml.stream.XMLStreamException externalResourceRootsNotSupported(java.lang.String);

  public abstract javax.xml.stream.XMLStreamException unexpectedEndOfDocument(javax.xml.stream.Location);

  public abstract javax.xml.stream.XMLStreamException missingRequiredAttributes(java.lang.String, javax.xml.stream.Location);

  public abstract javax.xml.stream.XMLStreamException unexpectedContent(java.lang.String, javax.xml.namespace.QName, java.lang.String, javax.xml.stream.Location);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException noMethodFound(org.jboss.invocation.proxy.MethodIdentifier, java.lang.Class<?>);

  public abstract java.lang.IllegalArgumentException nullMethod();

  public abstract java.lang.RuntimeException errorGettingReflectiveInformation(java.lang.Class<?>, java.lang.ClassLoader, java.lang.Throwable);

  public abstract java.lang.IllegalStateException externalModuleServiceAlreadyStarted();

  public abstract org.jboss.msc.service.StartException failedToLoadModule(org.jboss.modules.ModuleIdentifier, org.jboss.modules.ModuleLoadException);

  public abstract org.jboss.as.controller.OperationFailedException conflictingConfigs(java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException internalUseOnly();

  public abstract java.lang.RuntimeException cannotGetRootResource();

  public abstract org.jboss.as.controller.OperationFailedException failedToResolveMulticastAddress(java.net.UnknownHostException, java.lang.String);

  public abstract java.lang.RuntimeException failedToResolveMulticastAddressForRollback(java.net.UnknownHostException, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException cannotAddMoreThanOneSocketBindingGroupForServerOrHost(org.jboss.as.controller.PathAddress, org.jboss.as.controller.PathAddress);

  public abstract java.lang.IllegalArgumentException cannotHaveBothInitialServerConfigAndServerConfig();

  public abstract javax.xml.stream.XMLStreamException duplicateJBossXmlNamespace(javax.xml.namespace.QName, javax.xml.stream.Location);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException equivalentNamespacesInJBossXml(javax.xml.namespace.QName, javax.xml.namespace.QName);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException errorLoadingJBossXmlFile(java.lang.String, javax.xml.stream.XMLStreamException);

  public abstract java.lang.IllegalStateException nullModuleAttachment(org.jboss.as.server.deployment.DeploymentUnit);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException deploymentOverlayFailed(java.lang.Exception, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException noSuchDeploymentOverlayContentAtBoot(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException noSuchDeploymentOverlayContent(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException failedToLoadFile(org.jboss.vfs.VirtualFile, java.io.IOException);

  public abstract org.jboss.as.controller.OperationFailedException cannotHaveMoreThanOneManagedContentItem(java.util.Set<java.lang.String>);

  public abstract org.jboss.as.controller.OperationFailedException unknownContentItemKey(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException cannotMixUnmanagedAndManagedContentItems(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);

  public abstract org.jboss.as.controller.OperationFailedException nullParameter(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException runtimeNameMustBeUnique(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalStateException duplicateDeploymentUnitProcessor(int, java.lang.Class);

  public abstract void startingSubDeployment(java.lang.String);

  public abstract void stoppedSubDeployment(java.lang.String, int);

  public abstract org.jboss.as.controller.OperationFailedException vaultModuleWithNoCode();

  public abstract java.lang.IllegalStateException serverAlreadyPaused();

  public abstract void suspendingServer(long);

  public abstract void resumingServer();

  public abstract void failedToConnectToHostController();

  public abstract org.jboss.as.controller.OperationFailedException noSecurityRealmForSsl();

  public abstract void failedToResume(org.jboss.as.server.suspend.ServerActivity);

  public abstract void failedToCleanObsoleteContent(java.lang.String);

  public abstract void failedToCleanObsoleteContent(java.lang.Exception);

  public abstract void failedToStopRepositoryCleaner(java.lang.Exception);

  public abstract void undeployingDeploymentHasBeenRedeployed(java.lang.String);

  public abstract void shutdownHookInvoked();

  public abstract void deprecatedApiUsed(java.lang.String, org.jboss.modules.ModuleIdentifier);

  public abstract java.lang.IllegalArgumentException illegalPermissionName(java.lang.String);

  public abstract java.lang.IllegalArgumentException illegalPermissionActions(java.lang.String);

  public abstract void couldNotMountOverlay(java.lang.String, org.jboss.vfs.VirtualFile);

  public abstract java.lang.RuntimeException unableToCreateSelfContainedDir();

  public abstract java.lang.RuntimeException runtimeException(java.lang.Throwable);

  public abstract org.jboss.as.server.services.security.VaultReaderException vaultReaderException(java.lang.Throwable);

  public abstract java.lang.SecurityException securityException(java.lang.Throwable);

  public abstract java.lang.SecurityException securityException(java.lang.String);

  public abstract java.lang.SecurityException vaultNotInitializedException();

  public abstract java.lang.IllegalStateException couldNotObtainServerUuidFile(java.lang.Throwable, java.nio.file.Path);

  public abstract org.jboss.as.controller.OperationFailedException couldNotGetModuleInfo(java.lang.String, java.lang.Throwable);

  public abstract java.lang.String deploymentUndeployedNotification(java.lang.String, java.lang.String);

  public abstract java.lang.String deploymentDeployedNotification(java.lang.String, java.lang.String);

  public abstract void securityManagerEnabled();

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
       2: ldc           #2                  // String org.jboss.as.server
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      13: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
      15: ldc           #5                  // String org.jboss.as
      17: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
      23: putstatic     #6                  // Field AS_ROOT_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      26: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
      28: ldc           #7                  // String org.jboss.as.config
      30: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
      36: putstatic     #8                  // Field CONFIG_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      39: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
      41: ldc           #9                  // String org.jboss.as.warn.fd-limit
      43: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      46: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
      49: putstatic     #10                 // Field FD_LIMIT_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      52: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
      54: ldc           #11                 // String org.jboss.as.server.deployment
      56: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      59: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
      62: putstatic     #12                 // Field DEPLOYMENT_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      65: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
      67: ldc           #13                 // String org.jboss.as.dependency.private
      69: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      72: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
      75: putstatic     #14                 // Field PRIVATE_DEP_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      78: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
      80: ldc           #15                 // String org.jboss.as.dependency.unsupported
      82: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      85: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
      88: putstatic     #16                 // Field UNSUPPORTED_DEP_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
      91: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
      93: ldc           #17                 // String org.jboss.as.server.moduleservice
      95: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      98: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
     101: putstatic     #18                 // Field MODULE_SERVICE_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
     104: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
     106: ldc           #19                 // String org.jboss.as.server.net
     108: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     111: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
     114: putstatic     #20                 // Field NETWORK_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
     117: ldc           #1                  // class org/jboss/as/server/logging/ServerLogger
     119: ldc           #21                 // String org.jboss.as.dependency.deprecated
     121: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     124: checkcast     #1                  // class org/jboss/as/server/logging/ServerLogger
     127: putstatic     #22                 // Field DEPRECATED_DEP_LOGGER:Lorg/jboss/as/server/logging/ServerLogger;
     130: return
}
