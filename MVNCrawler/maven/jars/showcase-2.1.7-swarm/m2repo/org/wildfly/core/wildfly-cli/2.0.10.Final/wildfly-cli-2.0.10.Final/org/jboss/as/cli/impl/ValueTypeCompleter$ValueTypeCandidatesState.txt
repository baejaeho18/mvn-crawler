Compiled from "ValueTypeCompleter.java"
abstract class org.jboss.as.cli.impl.ValueTypeCompleter$ValueTypeCandidatesState extends org.jboss.as.cli.parsing.DefaultParsingState implements org.jboss.as.cli.impl.ValueTypeCompleter$ValueTypeCandidatesProvider {
  private final java.util.Collection<java.lang.String> candidates;

  org.jboss.as.cli.impl.ValueTypeCompleter$ValueTypeCandidatesState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/as/cli/parsing/DefaultParsingState."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field candidates:Ljava/util/Collection;
      16: return

  protected void addCandidate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field candidates:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  protected void addCandidates(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field candidates:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: return

  public java.util.Collection<java.lang.String> getCandidates(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field candidates:Ljava/util/Collection;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
       9: ifeq          16
      12: invokestatic  #8                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      15: areturn
      16: aload_1
      17: ifnull        27
      20: aload_1
      21: invokevirtual #9                  // Method java/lang/String.length:()I
      24: ifne          32
      27: aload_0
      28: getfield      #4                  // Field candidates:Ljava/util/Collection;
      31: areturn
      32: new           #2                  // class java/util/ArrayList
      35: dup
      36: aload_0
      37: getfield      #4                  // Field candidates:Ljava/util/Collection;
      40: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.size:()I
      45: invokespecial #11                 // Method java/util/ArrayList."<init>":(I)V
      48: astore_2
      49: aload_0
      50: getfield      #4                  // Field candidates:Ljava/util/Collection;
      53: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      58: astore_3
      59: aload_3
      60: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          100
      68: aload_3
      69: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #15                 // class java/lang/String
      77: astore        4
      79: aload         4
      81: aload_1
      82: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      85: ifeq          97
      88: aload_2
      89: aload         4
      91: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: goto          59
     100: aload_2
     101: areturn
}
