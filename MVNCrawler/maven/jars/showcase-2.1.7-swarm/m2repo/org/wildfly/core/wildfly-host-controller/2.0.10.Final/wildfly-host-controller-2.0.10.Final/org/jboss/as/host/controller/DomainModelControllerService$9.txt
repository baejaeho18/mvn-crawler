Compiled from "DomainModelControllerService.java"
class org.jboss.as.host.controller.DomainModelControllerService$9 implements org.jboss.as.host.controller.ServerInventory {
  final org.jboss.as.host.controller.DomainModelControllerService this$0;

  org.jboss.as.host.controller.DomainModelControllerService$9(org.jboss.as.host.controller.DomainModelControllerService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jboss/as/host/controller/DomainModelControllerService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public java.lang.String getServerProcessName(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method org/jboss/as/host/controller/ManagedServer.getServerProcessName:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  public java.lang.String getProcessServerName(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method org/jboss/as/host/controller/ManagedServer.getServerName:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, org.jboss.as.process.ProcessInfo> determineRunningProcesses();
    Code:
       0: invokestatic  #5                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public java.util.Map<java.lang.String, org.jboss.as.process.ProcessInfo> determineRunningProcesses(boolean);
    Code:
       0: invokestatic  #5                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public org.jboss.as.controller.client.helpers.domain.ServerStatus determineServerStatus(java.lang.String);
    Code:
       0: getstatic     #6                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STOPPED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public org.jboss.as.controller.client.helpers.domain.ServerStatus startServer(java.lang.String, org.jboss.dmr.ModelNode);
    Code:
       0: getstatic     #6                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STOPPED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public org.jboss.as.controller.client.helpers.domain.ServerStatus startServer(java.lang.String, org.jboss.dmr.ModelNode, boolean);
    Code:
       0: getstatic     #6                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STOPPED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public org.jboss.as.controller.client.helpers.domain.ServerStatus restartServer(java.lang.String, int, org.jboss.dmr.ModelNode);
    Code:
       0: getstatic     #6                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STOPPED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public org.jboss.as.controller.client.helpers.domain.ServerStatus restartServer(java.lang.String, int, org.jboss.dmr.ModelNode, boolean);
    Code:
       0: getstatic     #6                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STOPPED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public org.jboss.as.controller.client.helpers.domain.ServerStatus stopServer(java.lang.String, int);
    Code:
       0: getstatic     #7                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STARTED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public org.jboss.as.controller.client.helpers.domain.ServerStatus stopServer(java.lang.String, int, boolean);
    Code:
       0: getstatic     #7                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STARTED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public void stopServers(int);
    Code:
       0: return

  public void stopServers(int, boolean);
    Code:
       0: return

  public void reconnectServer(java.lang.String, org.jboss.dmr.ModelNode, java.lang.String, boolean, boolean);
    Code:
       0: return

  public org.jboss.as.controller.client.helpers.domain.ServerStatus reloadServer(java.lang.String, boolean);
    Code:
       0: getstatic     #6                  // Field org/jboss/as/controller/client/helpers/domain/ServerStatus.STOPPED:Lorg/jboss/as/controller/client/helpers/domain/ServerStatus;
       3: areturn

  public void destroyServer(java.lang.String);
    Code:
       0: return

  public void killServer(java.lang.String);
    Code:
       0: return

  public javax.security.auth.callback.CallbackHandler getServerCallbackHandler();
    Code:
       0: new           #8                  // class org/jboss/as/host/controller/DomainModelControllerService$9$1
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method org/jboss/as/host/controller/DomainModelControllerService$9$1."<init>":(Lorg/jboss/as/host/controller/DomainModelControllerService$9;)V
       8: astore_1
       9: aload_1
      10: areturn

  public org.jboss.as.controller.ProxyController serverCommunicationRegistered(java.lang.String, org.jboss.as.protocol.mgmt.ManagementChannelHandler);
    Code:
       0: new           #10                 // class org/jboss/as/host/controller/DomainModelControllerService$9$2
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method org/jboss/as/host/controller/DomainModelControllerService$9$2."<init>":(Lorg/jboss/as/host/controller/DomainModelControllerService$9;)V
       8: areturn

  public boolean serverReconnected(java.lang.String, org.jboss.as.protocol.mgmt.ManagementChannelHandler);
    Code:
       0: iconst_1
       1: ireturn

  public void serverStarted(java.lang.String);
    Code:
       0: return

  public void serverStartFailed(java.lang.String);
    Code:
       0: return

  public void serverProcessStopped(java.lang.String);
    Code:
       0: return

  public void connectionFinished();
    Code:
       0: return

  public void serverProcessAdded(java.lang.String);
    Code:
       0: return

  public void serverProcessStarted(java.lang.String);
    Code:
       0: return

  public void serverProcessRemoved(java.lang.String);
    Code:
       0: return

  public void operationFailed(java.lang.String, org.jboss.as.process.ProcessMessageHandler$OperationType);
    Code:
       0: return

  public void processInventory(java.util.Map<java.lang.String, org.jboss.as.process.ProcessInfo>);
    Code:
       0: return

  public void awaitServersState(java.util.Collection<java.lang.String>, boolean);
    Code:
       0: return

  public void suspendServer(java.lang.String);
    Code:
       0: return

  public void resumeServer(java.lang.String);
    Code:
       0: return

  public boolean awaitServerSuspend(java.util.Set<java.lang.String>, int);
    Code:
       0: iconst_0
       1: ireturn
}
