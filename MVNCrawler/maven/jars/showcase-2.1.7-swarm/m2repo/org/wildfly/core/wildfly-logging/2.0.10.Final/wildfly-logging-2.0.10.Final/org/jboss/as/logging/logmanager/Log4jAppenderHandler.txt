Compiled from "Log4jAppenderHandler.java"
public class org.jboss.as.logging.logmanager.Log4jAppenderHandler extends org.jboss.logmanager.ExtHandler {
  public static final java.lang.String ACTIVATE_OPTIONS_METHOD_NAME;

  public static final java.lang.String ACTIVATOR_PROPERTY_METHOD_NAME;

  private volatile org.apache.log4j.Appender appender;

  private final boolean applyLayout;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.jboss.as.logging.logmanager.Log4jAppenderHandler, org.apache.log4j.Appender> appenderUpdater;

  public org.jboss.as.logging.logmanager.Log4jAppenderHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/logmanager/ExtHandler."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field applyLayout:Z
      14: return

  public org.jboss.as.logging.logmanager.Log4jAppenderHandler(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #4                  // Method "<init>":(Lorg/apache/log4j/Appender;Z)V
       6: return

  public org.jboss.as.logging.logmanager.Log4jAppenderHandler(org.apache.log4j.Appender, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/logmanager/ExtHandler."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field applyLayout:Z
      14: iload_2
      15: ifeq          25
      18: aload_1
      19: aconst_null
      20: invokeinterface #5,  2            // InterfaceMethod org/apache/log4j/Appender.setLayout:(Lorg/apache/log4j/Layout;)V
      25: getstatic     #6                  // Field appenderUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      28: aload_0
      29: aload_1
      30: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      33: return

  public org.apache.log4j.Appender getAppender();
    Code:
       0: aload_0
       1: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
       4: areturn

  public void setDummy(java.lang.String);
    Code:
       0: return

  public void activate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
       4: instanceof    #8                  // class org/apache/log4j/spi/OptionHandler
       7: ifeq          62
      10: aload_0
      11: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
      14: checkcast     #8                  // class org/apache/log4j/spi/OptionHandler
      17: invokeinterface #9,  1            // InterfaceMethod org/apache/log4j/spi/OptionHandler.activateOptions:()V
      22: getstatic     #10                 // Field org/jboss/as/logging/logging/LoggingLogger.ROOT_LOGGER:Lorg/jboss/as/logging/logging/LoggingLogger;
      25: invokeinterface #11,  1           // InterfaceMethod org/jboss/as/logging/logging/LoggingLogger.isDebugEnabled:()Z
      30: ifeq          62
      33: getstatic     #10                 // Field org/jboss/as/logging/logging/LoggingLogger.ROOT_LOGGER:Lorg/jboss/as/logging/logging/LoggingLogger;
      36: ldc           #12                 // String Invoking OptionHandler.activateOptions() on appender %s (%s)
      38: aload_0
      39: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
      42: invokeinterface #13,  1           // InterfaceMethod org/apache/log4j/Appender.getName:()Ljava/lang/String;
      47: aload_0
      48: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
      51: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #15                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      57: invokeinterface #16,  4           // InterfaceMethod org/jboss/as/logging/logging/LoggingLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      62: return

  public void setAppender(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
       4: ifnull        11
       7: aload_0
       8: invokevirtual #17                 // Method close:()V
      11: aload_0
      12: invokestatic  #18                 // Method checkAccess:(Lorg/jboss/logmanager/ExtHandler;)V
      15: aload_0
      16: getfield      #3                  // Field applyLayout:Z
      19: ifeq          54
      22: aload_1
      23: ifnull        54
      26: aload_0
      27: invokevirtual #19                 // Method getFormatter:()Ljava/util/logging/Formatter;
      30: astore_2
      31: aload_1
      32: aload_2
      33: ifnonnull     40
      36: aconst_null
      37: goto          49
      40: new           #20                 // class org/jboss/as/logging/logmanager/Log4jAppenderHandler$FormatterLayout
      43: dup
      44: aload_0
      45: aload_2
      46: invokespecial #21                 // Method org/jboss/as/logging/logmanager/Log4jAppenderHandler$FormatterLayout."<init>":(Lorg/jboss/as/logging/logmanager/Log4jAppenderHandler;Ljava/util/logging/Formatter;)V
      49: invokeinterface #5,  2            // InterfaceMethod org/apache/log4j/Appender.setLayout:(Lorg/apache/log4j/Layout;)V
      54: getstatic     #6                  // Field appenderUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      57: aload_0
      58: aload_1
      59: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      62: return

  public void setFormatter(java.util.logging.Formatter) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field applyLayout:Z
       4: ifeq          31
       7: aload_0
       8: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
      11: astore_2
      12: aload_2
      13: ifnull        31
      16: aload_2
      17: new           #20                 // class org/jboss/as/logging/logmanager/Log4jAppenderHandler$FormatterLayout
      20: dup
      21: aload_0
      22: aload_1
      23: invokespecial #21                 // Method org/jboss/as/logging/logmanager/Log4jAppenderHandler$FormatterLayout."<init>":(Lorg/jboss/as/logging/logmanager/Log4jAppenderHandler;Ljava/util/logging/Formatter;)V
      26: invokeinterface #5,  2            // InterfaceMethod org/apache/log4j/Appender.setLayout:(Lorg/apache/log4j/Layout;)V
      31: aload_0
      32: aload_1
      33: invokespecial #22                 // Method org/jboss/logmanager/ExtHandler.setFormatter:(Ljava/util/logging/Formatter;)V
      36: return

  protected void doPublish(org.jboss.logmanager.ExtLogRecord);
    Code:
       0: aload_0
       1: getfield      #2                  // Field appender:Lorg/apache/log4j/Appender;
       4: astore_2
       5: aload_2
       6: ifnonnull     18
       9: getstatic     #10                 // Field org/jboss/as/logging/logging/LoggingLogger.ROOT_LOGGER:Lorg/jboss/as/logging/logging/LoggingLogger;
      12: invokeinterface #23,  1           // InterfaceMethod org/jboss/as/logging/logging/LoggingLogger.handlerClosed:()Ljava/lang/IllegalStateException;
      17: athrow
      18: new           #24                 // class org/apache/log4j/spi/LoggingEvent
      21: dup
      22: aload_1
      23: aload_1
      24: invokevirtual #25                 // Method org/jboss/logmanager/ExtLogRecord.getLoggerName:()Ljava/lang/String;
      27: invokestatic  #26                 // Method org/jboss/as/logging/logmanager/Log4jAppenderHandler$DummyCategory.of:(Ljava/lang/String;)Lorg/jboss/as/logging/logmanager/Log4jAppenderHandler$DummyCategory;
      30: invokespecial #27                 // Method org/apache/log4j/spi/LoggingEvent."<init>":(Lorg/jboss/logmanager/ExtLogRecord;Lorg/apache/log4j/Category;)V
      33: astore_3
      34: aload_2
      35: aload_3
      36: invokeinterface #28,  2           // InterfaceMethod org/apache/log4j/Appender.doAppend:(Lorg/apache/log4j/spi/LoggingEvent;)V
      41: aload_0
      42: aload_1
      43: invokespecial #29                 // Method org/jboss/logmanager/ExtHandler.doPublish:(Lorg/jboss/logmanager/ExtLogRecord;)V
      46: return

  public void flush();
    Code:
       0: return

  public void close() throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method checkAccess:(Lorg/jboss/logmanager/ExtHandler;)V
       4: getstatic     #6                  // Field appenderUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       7: aload_0
       8: aconst_null
       9: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #31                 // class org/apache/log4j/Appender
      15: astore_1
      16: aload_1
      17: ifnull        26
      20: aload_1
      21: invokeinterface #32,  1           // InterfaceMethod org/apache/log4j/Appender.close:()V
      26: return

  static {};
    Code:
       0: ldc           #33                 // class org/jboss/as/logging/logmanager/Log4jAppenderHandler
       2: ldc           #31                 // class org/apache/log4j/Appender
       4: ldc           #34                 // String appender
       6: invokestatic  #35                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #6                  // Field appenderUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
