Compiled from "ManagedAuditLoggerImpl.java"
abstract class org.jboss.as.controller.audit.ManagedAuditLoggerImpl$ManagedAuditLogConfiguration {
  final boolean manualCommit;

  final boolean core;

  final org.jboss.as.controller.audit.ManagedAuditLoggerImpl$SharedConfiguration sharedConfiguration;

  private volatile org.jboss.as.controller.audit.AuditLogger$Status status;

  private volatile boolean logBoot;

  private volatile boolean logReadOnly;

  protected final java.util.Set<java.lang.String> handlerReferences;

  org.jboss.as.controller.audit.ManagedAuditLoggerImpl$ManagedAuditLogConfiguration(org.jboss.as.controller.audit.ManagedAuditLoggerImpl$SharedConfiguration, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/jboss/as/controller/audit/AuditLogger$Status.QUEUEING:Lorg/jboss/as/controller/audit/AuditLogger$Status;
       8: putfield      #3                  // Field status:Lorg/jboss/as/controller/audit/AuditLogger$Status;
      11: aload_0
      12: iconst_1
      13: putfield      #4                  // Field logBoot:Z
      16: aload_0
      17: new           #5                  // class java/util/HashSet
      20: dup
      21: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      24: invokestatic  #7                  // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      27: putfield      #8                  // Field handlerReferences:Ljava/util/Set;
      30: aload_0
      31: aload_1
      32: putfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
      35: aload_0
      36: iload_2
      37: putfield      #10                 // Field core:Z
      40: aload_0
      41: iload_3
      42: putfield      #11                 // Field manualCommit:Z
      45: return

  boolean isManualCommit();
    Code:
       0: aload_0
       1: getfield      #11                 // Field manualCommit:Z
       4: ireturn

  boolean hasHandlerReference(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field handlerReferences:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  void addHandlerReference(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field handlerReferences:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  void removeHandlerReference(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field handlerReferences:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  java.util.List<org.jboss.as.controller.audit.AuditLogHandler> getHandlersForLogging();
    Code:
       0: new           #15                 // class java/util/ArrayList
       3: dup
       4: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
      12: invokevirtual #17                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.getConfiguredHandlers:()Ljava/util/Map;
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          92
      35: aload_2
      36: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #22                 // class java/util/Map$Entry
      44: astore_3
      45: aload_3
      46: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #24                 // class org/jboss/as/controller/audit/AuditLogHandler
      54: invokevirtual #25                 // Method org/jboss/as/controller/audit/AuditLogHandler.isActive:()Z
      57: ifeq          89
      60: aload_0
      61: aload_3
      62: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      67: checkcast     #27                 // class java/lang/String
      70: invokevirtual #28                 // Method hasHandlerReference:(Ljava/lang/String;)Z
      73: ifeq          89
      76: aload_1
      77: aload_3
      78: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      88: pop
      89: goto          26
      92: aload_1
      93: areturn

  void lock();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: invokevirtual #30                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.lock:()V
       7: return

  void unlock();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: invokevirtual #31                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.unlock:()V
       7: return

  java.lang.String getAsVersion();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: invokevirtual #32                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.getAsVersion:()Ljava/lang/String;
       7: areturn

  boolean isServer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: invokevirtual #33                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.isServer:()Z
       7: ireturn

  org.jboss.as.controller.audit.AuditLogItemFormatter getFormatter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: aload_1
       5: invokevirtual #34                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.getFormatter:(Ljava/lang/String;)Lorg/jboss/as/controller/audit/AuditLogItemFormatter;
       8: areturn

  org.jboss.as.controller.audit.AuditLogHandler getConfiguredHandler(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: aload_1
       5: invokevirtual #35                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.getConfiguredHandler:(Ljava/lang/String;)Lorg/jboss/as/controller/audit/AuditLogHandler;
       8: areturn

  void setBooting(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: iload_1
       5: invokevirtual #36                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.setBooting:(Z)V
       8: return

  boolean isBooting();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sharedConfiguration:Lorg/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration;
       4: invokevirtual #37                 // Method org/jboss/as/controller/audit/ManagedAuditLoggerImpl$SharedConfiguration.isBooting:()Z
       7: ireturn

  boolean isLogReadOnly();
    Code:
       0: aload_0
       1: getfield      #38                 // Field logReadOnly:Z
       4: ireturn

  void setLogReadOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field logReadOnly:Z
       5: return

  boolean isLogBoot();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logBoot:Z
       4: ireturn

  void setLogBoot(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field logBoot:Z
       5: return

  org.jboss.as.controller.audit.AuditLogger$Status getLoggerStatus();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:Lorg/jboss/as/controller/audit/AuditLogger$Status;
       4: areturn

  void setLoggerStatus(org.jboss.as.controller.audit.AuditLogger$Status);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field status:Lorg/jboss/as/controller/audit/AuditLogger$Status;
       5: return

  boolean isCore();
    Code:
       0: aload_0
       1: getfield      #10                 // Field core:Z
       4: ireturn

  abstract void putConfiguredHandler(org.jboss.as.controller.audit.AuditLogHandler);

  abstract org.jboss.as.controller.audit.AuditLogHandler removeConfiguredHandler(java.lang.String);

  abstract void addFormatter(org.jboss.as.controller.audit.AuditLogItemFormatter);

  abstract void removeFormatter(java.lang.String);

  abstract void recycleHandler(java.lang.String);
}
