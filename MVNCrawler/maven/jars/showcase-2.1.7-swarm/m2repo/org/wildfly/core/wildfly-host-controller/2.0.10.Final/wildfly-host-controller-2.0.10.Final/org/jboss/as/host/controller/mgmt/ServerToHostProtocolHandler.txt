Compiled from "ServerToHostProtocolHandler.java"
public class org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler implements org.jboss.as.protocol.mgmt.ManagementRequestHandlerFactory {
  static final org.jboss.as.controller.client.Operation EMPTY_OP;

  private final org.jboss.as.host.controller.ServerInventory serverInventory;

  private final org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler$OperationExecutor operationExecutor;

  private final org.jboss.as.domain.controller.DomainController domainController;

  private final org.jboss.as.protocol.mgmt.ManagementChannelHandler channelHandler;

  private final org.jboss.as.repository.DeploymentFileRepository deploymentFileRepository;

  private final java.util.concurrent.Executor registrations;

  private final org.jboss.as.controller.ExpressionResolver expressionResolver;

  private volatile java.lang.String serverProcessName;

  org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler(org.jboss.as.host.controller.ServerInventory, org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler$OperationExecutor, org.jboss.as.domain.controller.DomainController, org.jboss.as.protocol.mgmt.ManagementChannelHandler, java.util.concurrent.Executor, org.jboss.as.controller.ExpressionResolver);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field serverInventory:Lorg/jboss/as/host/controller/ServerInventory;
       9: aload_0
      10: aload_2
      11: putfield      #8                  // Field operationExecutor:Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$OperationExecutor;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field domainController:Lorg/jboss/as/domain/controller/DomainController;
      19: aload_0
      20: aload         4
      22: putfield      #3                  // Field channelHandler:Lorg/jboss/as/protocol/mgmt/ManagementChannelHandler;
      25: aload_0
      26: aload         5
      28: putfield      #7                  // Field registrations:Ljava/util/concurrent/Executor;
      31: aload_0
      32: aload_3
      33: invokeinterface #11,  1           // InterfaceMethod org/jboss/as/domain/controller/DomainController.getLocalFileRepository:()Lorg/jboss/as/repository/HostFileRepository;
      38: putfield      #2                  // Field deploymentFileRepository:Lorg/jboss/as/repository/DeploymentFileRepository;
      41: aload_0
      42: aload         6
      44: putfield      #4                  // Field expressionResolver:Lorg/jboss/as/controller/ExpressionResolver;
      47: return

  public org.jboss.as.protocol.mgmt.ManagementRequestHandler<?, ?> resolveHandler(org.jboss.as.protocol.mgmt.ManagementRequestHandlerFactory$RequestHandlerChain, org.jboss.as.protocol.mgmt.ManagementRequestHeader);
    Code:
       0: aload_2
       1: invokevirtual #12                 // Method org/jboss/as/protocol/mgmt/ManagementRequestHeader.getOperationId:()B
       4: istore_3
       5: iload_3
       6: lookupswitch  { // 4
                     0: 48
                     2: 121
                     3: 72
                    36: 96
               default: 153
          }
      48: aload_1
      49: aload_2
      50: invokevirtual #13                 // Method org/jboss/as/protocol/mgmt/ManagementRequestHeader.getBatchId:()I
      53: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aconst_null
      57: invokeinterface #15,  3           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementRequestHandlerFactory$RequestHandlerChain.registerActiveOperation:(Ljava/lang/Integer;Ljava/lang/Object;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
      62: pop
      63: new           #16                 // class org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$ServerRegistrationRequestHandler
      66: dup
      67: aload_0
      68: invokespecial #17                 // Method org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$ServerRegistrationRequestHandler."<init>":(Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler;)V
      71: areturn
      72: aload_1
      73: aload_2
      74: invokevirtual #13                 // Method org/jboss/as/protocol/mgmt/ManagementRequestHeader.getBatchId:()I
      77: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: aconst_null
      81: invokeinterface #15,  3           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementRequestHandlerFactory$RequestHandlerChain.registerActiveOperation:(Ljava/lang/Integer;Ljava/lang/Object;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
      86: pop
      87: new           #18                 // class org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$ServerReconnectRequestHandler
      90: dup
      91: aload_0
      92: invokespecial #19                 // Method org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$ServerReconnectRequestHandler."<init>":(Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler;)V
      95: areturn
      96: aload_1
      97: aload_2
      98: invokevirtual #13                 // Method org/jboss/as/protocol/mgmt/ManagementRequestHeader.getBatchId:()I
     101: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: aconst_null
     105: invokeinterface #15,  3           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementRequestHandlerFactory$RequestHandlerChain.registerActiveOperation:(Ljava/lang/Integer;Ljava/lang/Object;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
     110: pop
     111: new           #20                 // class org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$GetFileOperation
     114: dup
     115: aload_0
     116: aconst_null
     117: invokespecial #21                 // Method org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$GetFileOperation."<init>":(Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler;Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$1;)V
     120: areturn
     121: aload_1
     122: aload_2
     123: invokevirtual #13                 // Method org/jboss/as/protocol/mgmt/ManagementRequestHeader.getBatchId:()I
     126: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     129: aload_0
     130: getfield      #6                  // Field serverInventory:Lorg/jboss/as/host/controller/ServerInventory;
     133: invokeinterface #15,  3           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementRequestHandlerFactory$RequestHandlerChain.registerActiveOperation:(Ljava/lang/Integer;Ljava/lang/Object;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
     138: pop
     139: new           #22                 // class org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$ServerStartedHandler
     142: dup
     143: aload_0
     144: aload_0
     145: getfield      #9                  // Field serverProcessName:Ljava/lang/String;
     148: aconst_null
     149: invokespecial #23                 // Method org/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$ServerStartedHandler."<init>":(Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler;Ljava/lang/String;Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$1;)V
     152: areturn
     153: aload_1
     154: invokeinterface #24,  1           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementRequestHandlerFactory$RequestHandlerChain.resolveNext:()Lorg/jboss/as/protocol/mgmt/ManagementRequestHandler;
     159: areturn

  protected static void safeWriteResponse(org.jboss.as.protocol.mgmt.ManagementRequestContext<?>, java.lang.Exception);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementRequestContext.getChannel:()Lorg/jboss/remoting3/Channel;
       6: aload_0
       7: invokeinterface #26,  1           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementRequestContext.getRequestHeader:()Lorg/jboss/as/protocol/mgmt/ManagementProtocolHeader;
      12: aload_1
      13: invokestatic  #27                 // Method safeWriteResponse:(Lorg/jboss/remoting3/Channel;Lorg/jboss/as/protocol/mgmt/ManagementProtocolHeader;Ljava/lang/Exception;)V
      16: return

  protected static void safeWriteResponse(org.jboss.remoting3.Channel, org.jboss.as.protocol.mgmt.ManagementProtocolHeader, java.lang.Exception);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/jboss/as/protocol/mgmt/ManagementProtocolHeader.getType:()B
       4: iconst_2
       5: if_icmpne     34
       8: aload_0
       9: aload_1
      10: checkcast     #30                 // class org/jboss/as/protocol/mgmt/ManagementRequestHeader
      13: aload_2
      14: invokestatic  #31                 // Method writeResponse:(Lorg/jboss/remoting3/Channel;Lorg/jboss/as/protocol/mgmt/ManagementRequestHeader;Ljava/lang/Exception;)V
      17: goto          34
      20: astore_3
      21: getstatic     #33                 // Field org/jboss/as/host/controller/logging/HostControllerLogger.ROOT_LOGGER:Lorg/jboss/as/host/controller/logging/HostControllerLogger;
      24: aload_3
      25: ldc           #34                 // String failed to write error response for %s on channel: %s
      27: aload_1
      28: aload_0
      29: invokeinterface #35,  5           // InterfaceMethod org/jboss/as/host/controller/logging/HostControllerLogger.tracef:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: return
    Exception table:
       from    to  target type
           8    17    20   Class java/io/IOException

  protected static void writeResponse(org.jboss.remoting3.Channel, org.jboss.as.protocol.mgmt.ManagementRequestHeader, java.lang.Exception) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #36                 // Method org/jboss/as/protocol/mgmt/ManagementResponseHeader.create:(Lorg/jboss/as/protocol/mgmt/ManagementRequestHeader;Ljava/lang/Throwable;)Lorg/jboss/as/protocol/mgmt/ManagementResponseHeader;
       5: astore_3
       6: aload_0
       7: invokeinterface #37,  1           // InterfaceMethod org/jboss/remoting3/Channel.writeMessage:()Lorg/jboss/remoting3/MessageOutputStream;
      12: astore        4
      14: aload_3
      15: aload         4
      17: invokestatic  #38                 // Method writeHeader:(Lorg/jboss/as/protocol/mgmt/ManagementProtocolHeader;Ljava/io/OutputStream;)V
      20: aload         4
      22: bipush        36
      24: invokevirtual #39                 // Method org/jboss/remoting3/MessageOutputStream.write:(I)V
      27: aload         4
      29: invokevirtual #40                 // Method org/jboss/remoting3/MessageOutputStream.close:()V
      32: aload         4
      34: invokestatic  #41                 // Method org/jboss/as/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      37: goto          50
      40: astore        5
      42: aload         4
      44: invokestatic  #41                 // Method org/jboss/as/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      47: aload         5
      49: athrow
      50: return
    Exception table:
       from    to  target type
          14    32    40   any
          40    42    40   any

  protected static void safeWriteResponse(org.jboss.remoting3.Channel, org.jboss.as.protocol.mgmt.ManagementProtocolHeader, byte);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/jboss/as/protocol/mgmt/ManagementProtocolHeader.getType:()B
       4: iconst_2
       5: if_icmpne     34
       8: aload_0
       9: aload_1
      10: checkcast     #30                 // class org/jboss/as/protocol/mgmt/ManagementRequestHeader
      13: iload_2
      14: invokestatic  #42                 // Method writeResponse:(Lorg/jboss/remoting3/Channel;Lorg/jboss/as/protocol/mgmt/ManagementRequestHeader;B)V
      17: goto          34
      20: astore_3
      21: getstatic     #33                 // Field org/jboss/as/host/controller/logging/HostControllerLogger.ROOT_LOGGER:Lorg/jboss/as/host/controller/logging/HostControllerLogger;
      24: aload_3
      25: ldc           #34                 // String failed to write error response for %s on channel: %s
      27: aload_1
      28: aload_0
      29: invokeinterface #35,  5           // InterfaceMethod org/jboss/as/host/controller/logging/HostControllerLogger.tracef:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: return
    Exception table:
       from    to  target type
           8    17    20   Class java/io/IOException

  protected static void writeResponse(org.jboss.remoting3.Channel, org.jboss.as.protocol.mgmt.ManagementRequestHeader, byte) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method org/jboss/as/protocol/mgmt/ManagementResponseHeader.create:(Lorg/jboss/as/protocol/mgmt/ManagementRequestHeader;)Lorg/jboss/as/protocol/mgmt/ManagementResponseHeader;
       4: astore_3
       5: aload_0
       6: invokeinterface #37,  1           // InterfaceMethod org/jboss/remoting3/Channel.writeMessage:()Lorg/jboss/remoting3/MessageOutputStream;
      11: astore        4
      13: aload_3
      14: aload         4
      16: invokestatic  #38                 // Method writeHeader:(Lorg/jboss/as/protocol/mgmt/ManagementProtocolHeader;Ljava/io/OutputStream;)V
      19: aload         4
      21: iload_2
      22: invokevirtual #39                 // Method org/jboss/remoting3/MessageOutputStream.write:(I)V
      25: aload         4
      27: bipush        36
      29: invokevirtual #39                 // Method org/jboss/remoting3/MessageOutputStream.write:(I)V
      32: aload         4
      34: invokevirtual #40                 // Method org/jboss/remoting3/MessageOutputStream.close:()V
      37: aload         4
      39: invokestatic  #41                 // Method org/jboss/as/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      42: goto          55
      45: astore        5
      47: aload         4
      49: invokestatic  #41                 // Method org/jboss/as/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      52: aload         5
      54: athrow
      55: return
    Exception table:
       from    to  target type
          13    37    45   any
          45    47    45   any

  protected static void writeHeader(org.jboss.as.protocol.mgmt.ManagementProtocolHeader, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #44                 // Method org/jboss/as/protocol/mgmt/ProtocolUtils.wrapAsDataOutput:(Ljava/io/OutputStream;)Lorg/jboss/as/protocol/mgmt/FlushableDataOutput;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #45                 // Method org/jboss/as/protocol/mgmt/ManagementProtocolHeader.write:(Ljava/io/DataOutput;)V
      10: return

  static java.lang.String access$202(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #9                  // Field serverProcessName:Ljava/lang/String;
       6: areturn

  static org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler$OperationExecutor access$300(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler);
    Code:
       0: aload_0
       1: getfield      #8                  // Field operationExecutor:Lorg/jboss/as/host/controller/mgmt/ServerToHostProtocolHandler$OperationExecutor;
       4: areturn

  static java.util.concurrent.Executor access$400(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field registrations:Ljava/util/concurrent/Executor;
       4: areturn

  static org.jboss.as.host.controller.ServerInventory access$500(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field serverInventory:Lorg/jboss/as/host/controller/ServerInventory;
       4: areturn

  static org.jboss.as.domain.controller.DomainController access$600(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler);
    Code:
       0: aload_0
       1: getfield      #5                  // Field domainController:Lorg/jboss/as/domain/controller/DomainController;
       4: areturn

  static org.jboss.as.controller.ExpressionResolver access$700(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expressionResolver:Lorg/jboss/as/controller/ExpressionResolver;
       4: areturn

  static org.jboss.as.protocol.mgmt.ManagementChannelHandler access$800(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channelHandler:Lorg/jboss/as/protocol/mgmt/ManagementChannelHandler;
       4: areturn

  static org.jboss.as.repository.DeploymentFileRepository access$900(org.jboss.as.host.controller.mgmt.ServerToHostProtocolHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field deploymentFileRepository:Lorg/jboss/as/repository/DeploymentFileRepository;
       4: areturn

  static {};
    Code:
       0: new           #46                 // class org/jboss/dmr/ModelNode
       3: dup
       4: invokespecial #47                 // Method org/jboss/dmr/ModelNode."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #48                 // String operation
      11: invokevirtual #49                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      14: ldc           #50                 // String register-server
      16: invokevirtual #51                 // Method org/jboss/dmr/ModelNode.set:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      19: pop
      20: aload_0
      21: ldc           #52                 // String address
      23: invokevirtual #49                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      26: invokevirtual #53                 // Method org/jboss/dmr/ModelNode.setEmptyList:()Lorg/jboss/dmr/ModelNode;
      29: pop
      30: aload_0
      31: invokevirtual #54                 // Method org/jboss/dmr/ModelNode.protect:()V
      34: aload_0
      35: invokestatic  #55                 // Method org/jboss/as/controller/client/OperationBuilder.create:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/client/OperationBuilder;
      38: invokevirtual #56                 // Method org/jboss/as/controller/client/OperationBuilder.build:()Lorg/jboss/as/controller/client/Operation;
      41: putstatic     #57                 // Field EMPTY_OP:Lorg/jboss/as/controller/client/Operation;
      44: return
}
