Compiled from "ServerInventory.java"
public interface org.jboss.as.host.controller.ServerInventory {
  public abstract java.lang.String getServerProcessName(java.lang.String);

  public abstract java.lang.String getProcessServerName(java.lang.String);

  public abstract java.util.Map<java.lang.String, org.jboss.as.process.ProcessInfo> determineRunningProcesses();

  public abstract java.util.Map<java.lang.String, org.jboss.as.process.ProcessInfo> determineRunningProcesses(boolean);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus determineServerStatus(java.lang.String);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus startServer(java.lang.String, org.jboss.dmr.ModelNode);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus startServer(java.lang.String, org.jboss.dmr.ModelNode, boolean);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus restartServer(java.lang.String, int, org.jboss.dmr.ModelNode);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus restartServer(java.lang.String, int, org.jboss.dmr.ModelNode, boolean);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus stopServer(java.lang.String, int);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus stopServer(java.lang.String, int, boolean);

  public abstract void stopServers(int);

  public abstract void stopServers(int, boolean);

  public abstract void reconnectServer(java.lang.String, org.jboss.dmr.ModelNode, java.lang.String, boolean, boolean);

  public abstract org.jboss.as.controller.client.helpers.domain.ServerStatus reloadServer(java.lang.String, boolean);

  public abstract void destroyServer(java.lang.String);

  public abstract void killServer(java.lang.String);

  public abstract javax.security.auth.callback.CallbackHandler getServerCallbackHandler();

  public abstract org.jboss.as.controller.ProxyController serverCommunicationRegistered(java.lang.String, org.jboss.as.protocol.mgmt.ManagementChannelHandler);

  public abstract boolean serverReconnected(java.lang.String, org.jboss.as.protocol.mgmt.ManagementChannelHandler);

  public abstract void serverStarted(java.lang.String);

  public abstract void serverStartFailed(java.lang.String);

  public abstract void serverProcessStopped(java.lang.String);

  public abstract void connectionFinished();

  public abstract void serverProcessAdded(java.lang.String);

  public abstract void serverProcessStarted(java.lang.String);

  public abstract void serverProcessRemoved(java.lang.String);

  public abstract void operationFailed(java.lang.String, org.jboss.as.process.ProcessMessageHandler$OperationType);

  public abstract void processInventory(java.util.Map<java.lang.String, org.jboss.as.process.ProcessInfo>);

  public abstract void awaitServersState(java.util.Collection<java.lang.String>, boolean);

  public abstract void suspendServer(java.lang.String);

  public abstract void resumeServer(java.lang.String);

  public abstract boolean awaitServerSuspend(java.util.Set<java.lang.String>, int);
}
