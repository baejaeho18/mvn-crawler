Compiled from "UserPropertiesFileLoader.java"
public class org.jboss.as.domain.management.security.UserPropertiesFileLoader extends org.jboss.as.domain.management.security.PropertiesFileLoader {
  private static final java.lang.String REALM_COMMENT_PREFIX;

  private static final java.lang.String REALM_COMMENT_SUFFIX;

  private static final java.lang.String REALM_COMMENT_COMMENT;

  private java.lang.String realmName;

  private java.util.List<java.lang.String> enabledUserNames;

  private java.util.List<java.lang.String> disabledUserNames;

  private boolean realmWritten;

  public org.jboss.as.domain.management.security.UserPropertiesFileLoader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/jboss/as/domain/management/security/PropertiesFileLoader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: new           #2                  // class java/util/ArrayList
      10: dup
      11: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      14: putfield      #4                  // Field enabledUserNames:Ljava/util/List;
      17: aload_0
      18: new           #2                  // class java/util/ArrayList
      21: dup
      22: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      25: putfield      #5                  // Field disabledUserNames:Ljava/util/List;
      28: aload_0
      29: iconst_0
      30: putfield      #6                  // Field realmWritten:Z
      33: return

  public java.lang.String getRealmName() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method loadAsRequired:()V
       4: aload_0
       5: getfield      #8                  // Field realmName:Ljava/lang/String;
       8: areturn

  public void setRealmName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field realmName:Ljava/lang/String;
       5: return

  public java.util.List<java.lang.String> getUserNames() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method loadAsRequired:()V
       4: new           #2                  // class java/util/ArrayList
       7: dup
       8: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #4                  // Field enabledUserNames:Ljava/util/List;
      17: invokeinterface #9,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      22: pop
      23: aload_1
      24: aload_0
      25: getfield      #5                  // Field disabledUserNames:Ljava/util/List;
      28: invokeinterface #9,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      33: pop
      34: aload_1
      35: areturn

  public java.util.List<java.lang.String> getEnabledUserNames() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method loadAsRequired:()V
       4: aload_0
       5: getfield      #4                  // Field enabledUserNames:Ljava/util/List;
       8: areturn

  public java.util.List<java.lang.String> getDisabledUserNames() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method loadAsRequired:()V
       4: aload_0
       5: getfield      #5                  // Field disabledUserNames:Ljava/util/List;
       8: areturn

  protected void load() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/jboss/as/domain/management/security/PropertiesFileLoader.load:()V
       4: aconst_null
       5: astore_1
       6: new           #11                 // class java/io/BufferedReader
       9: dup
      10: new           #12                 // class java/io/FileReader
      13: dup
      14: aload_0
      15: getfield      #13                 // Field propertiesFile:Ljava/io/File;
      18: invokespecial #14                 // Method java/io/FileReader."<init>":(Ljava/io/File;)V
      21: invokespecial #15                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      24: astore_2
      25: aload_0
      26: getfield      #5                  // Field disabledUserNames:Ljava/util/List;
      29: invokeinterface #16,  1           // InterfaceMethod java/util/List.clear:()V
      34: aload_0
      35: getfield      #4                  // Field enabledUserNames:Ljava/util/List;
      38: invokeinterface #16,  1           // InterfaceMethod java/util/List.clear:()V
      43: aload_1
      44: ifnonnull     196
      47: aload_2
      48: invokevirtual #17                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      51: dup
      52: astore_3
      53: ifnull        196
      56: aload_3
      57: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;
      60: astore        4
      62: getstatic     #19                 // Field PROPERTY_PATTERN:Ljava/util/regex/Pattern;
      65: aload_3
      66: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;
      69: invokevirtual #20                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      72: astore        5
      74: aload         5
      76: invokevirtual #21                 // Method java/util/regex/Matcher.matches:()Z
      79: ifeq          131
      82: aload_0
      83: aload         5
      85: iconst_1
      86: invokevirtual #22                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      89: invokevirtual #23                 // Method cleanKey:(Ljava/lang/String;)Ljava/lang/String;
      92: astore        6
      94: aload         4
      96: ldc           #25                 // String #
      98: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     101: ifeq          119
     104: aload_0
     105: getfield      #5                  // Field disabledUserNames:Ljava/util/List;
     108: aload         6
     110: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: goto          131
     119: aload_0
     120: getfield      #4                  // Field enabledUserNames:Ljava/util/List;
     123: aload         6
     125: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     130: pop
     131: aload         4
     133: ldc           #25                 // String #
     135: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     138: ifeq          193
     141: aload         4
     143: ldc           #29                 // String $REALM_NAME=
     145: invokevirtual #30                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     148: ifeq          193
     151: aload         4
     153: ldc           #29                 // String $REALM_NAME=
     155: invokevirtual #31                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     158: ldc           #29                 // String $REALM_NAME=
     160: invokevirtual #32                 // Method java/lang/String.length:()I
     163: iadd
     164: istore        6
     166: aload         4
     168: ldc           #33                 // String $
     170: iload         6
     172: invokevirtual #34                 // Method java/lang/String.indexOf:(Ljava/lang/String;I)I
     175: istore        7
     177: iload         7
     179: iconst_m1
     180: if_icmple     193
     183: aload         4
     185: iload         6
     187: iload         7
     189: invokevirtual #35                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     192: astore_1
     193: goto          43
     196: aload_0
     197: aload_2
     198: invokevirtual #36                 // Method safeClose:(Ljava/io/Closeable;)V
     201: goto          214
     204: astore        8
     206: aload_0
     207: aload_2
     208: invokevirtual #36                 // Method safeClose:(Ljava/io/Closeable;)V
     211: aload         8
     213: athrow
     214: aload_0
     215: aload_1
     216: putfield      #8                  // Field realmName:Ljava/lang/String;
     219: return
    Exception table:
       from    to  target type
          43   196   204   any
         204   206   204   any

  protected void beginPersistence() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/jboss/as/domain/management/security/PropertiesFileLoader.beginPersistence:()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field realmWritten:Z
       9: return

  protected void write(java.io.BufferedWriter, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field realmWritten:Z
       4: ifne          38
       7: aload_2
       8: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;
      11: astore        4
      13: aload         4
      15: ldc           #25                 // String #
      17: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      20: ifeq          38
      23: aload         4
      25: ldc           #29                 // String $REALM_NAME=
      27: invokevirtual #30                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      30: ifeq          38
      33: aload_0
      34: iconst_1
      35: putfield      #6                  // Field realmWritten:Z
      38: aload_0
      39: aload_1
      40: aload_2
      41: iload_3
      42: invokespecial #38                 // Method org/jboss/as/domain/management/security/PropertiesFileLoader.write:(Ljava/io/BufferedWriter;Ljava/lang/String;Z)V
      45: return

  protected void endPersistence(java.io.BufferedWriter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #39                 // Method org/jboss/as/domain/management/security/PropertiesFileLoader.endPersistence:(Ljava/io/BufferedWriter;)V
       5: aload_0
       6: getfield      #6                  // Field realmWritten:Z
       9: ifne          21
      12: aload_0
      13: aload_1
      14: aload_0
      15: getfield      #8                  // Field realmName:Ljava/lang/String;
      18: invokespecial #40                 // Method writeRealm:(Ljava/io/BufferedWriter;Ljava/lang/String;)V
      21: return

  protected void addLineContent(java.io.BufferedReader, java.util.List<java.lang.String>, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_3
       1: ldc           #25                 // String #
       3: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          86
       9: aload_3
      10: invokevirtual #32                 // Method java/lang/String.length:()I
      13: iconst_1
      14: if_icmpne     86
      17: aload_1
      18: invokevirtual #17                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      21: astore        4
      23: aload         4
      25: ifnull        76
      28: aload         4
      30: ldc           #25                 // String #
      32: invokevirtual #26                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      35: ifeq          56
      38: aload         4
      40: ldc           #29                 // String $REALM_NAME=
      42: invokevirtual #30                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      45: ifeq          56
      48: aload_1
      49: invokevirtual #17                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      52: pop
      53: goto          83
      56: aload_2
      57: aload_3
      58: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: aload_2
      65: aload         4
      67: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: goto          83
      76: aload_0
      77: aload_1
      78: aload_2
      79: aload_3
      80: invokespecial #41                 // Method org/jboss/as/domain/management/security/PropertiesFileLoader.addLineContent:(Ljava/io/BufferedReader;Ljava/util/List;Ljava/lang/String;)V
      83: goto          93
      86: aload_0
      87: aload_1
      88: aload_2
      89: aload_3
      90: invokespecial #41                 // Method org/jboss/as/domain/management/security/PropertiesFileLoader.addLineContent:(Ljava/io/BufferedReader;Ljava/util/List;Ljava/lang/String;)V
      93: return

  private void writeRealm(java.io.BufferedWriter, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #25                 // String #
       3: invokevirtual #42                 // Method java/io/BufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       6: pop
       7: aload_1
       8: invokevirtual #43                 // Method java/io/BufferedWriter.newLine:()V
      11: aload_1
      12: ldc           #25                 // String #
      14: invokevirtual #42                 // Method java/io/BufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      17: pop
      18: aload_1
      19: ldc           #29                 // String $REALM_NAME=
      21: invokevirtual #42                 // Method java/io/BufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      24: pop
      25: aload_1
      26: aload_2
      27: invokevirtual #42                 // Method java/io/BufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      30: pop
      31: aload_1
      32: ldc           #33                 // String $
      34: invokevirtual #42                 // Method java/io/BufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      37: pop
      38: aload_1
      39: ldc           #44                 // String  This line is used by the add-user utility to identify the realm name already used in this file.
      41: invokevirtual #42                 // Method java/io/BufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      44: pop
      45: aload_1
      46: invokevirtual #43                 // Method java/io/BufferedWriter.newLine:()V
      49: aload_1
      50: ldc           #25                 // String #
      52: invokevirtual #42                 // Method java/io/BufferedWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      55: pop
      56: aload_1
      57: invokevirtual #43                 // Method java/io/BufferedWriter.newLine:()V
      60: return
}
