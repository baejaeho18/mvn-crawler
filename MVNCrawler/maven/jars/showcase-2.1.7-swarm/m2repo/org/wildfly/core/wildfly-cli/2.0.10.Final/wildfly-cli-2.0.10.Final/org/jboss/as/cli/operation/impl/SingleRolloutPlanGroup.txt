Compiled from "SingleRolloutPlanGroup.java"
public class org.jboss.as.cli.operation.impl.SingleRolloutPlanGroup implements org.jboss.as.cli.operation.impl.RolloutPlanGroup {
  private static final int SEPARATOR_PROPERTY_LIST_START;

  private static final int SEPARATOR_PROPERTY_LIST_END;

  private static final int SEPARATOR_PROPERTY_VALUE;

  private static final int SEPARATOR_PROPERTY;

  private java.lang.String groupName;

  private java.util.Map<java.lang.String, java.lang.String> props;

  private int lastSeparatorIndex;

  private int separator;

  private int lastChunkIndex;

  private java.lang.String lastPropertyName;

  private java.lang.String lastPropertyValue;

  public org.jboss.as.cli.operation.impl.SingleRolloutPlanGroup();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.jboss.as.cli.operation.impl.SingleRolloutPlanGroup(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: invokevirtual #2                  // Method java/lang/String.isEmpty:()Z
      12: ifeq          42
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: new           #4                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #6                  // String Invalid group name:
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: putfield      #10                 // Field groupName:Ljava/lang/String;
      47: return

  public java.lang.String getGroupName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field groupName:Ljava/lang/String;
       4: areturn

  public void setGroupName(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field groupName:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #11                 // Field lastChunkIndex:I
      10: return

  public int getLastChunkIndex();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lastChunkIndex:I
       4: ireturn

  public void addProperty(java.lang.String, java.lang.String, int);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #2                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          38
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: new           #4                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #12                 // String Invalid property name:
      24: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_2
      39: ifnull        49
      42: aload_2
      43: invokevirtual #2                  // Method java/lang/String.isEmpty:()Z
      46: ifeq          76
      49: new           #3                  // class java/lang/IllegalArgumentException
      52: dup
      53: new           #4                  // class java/lang/StringBuilder
      56: dup
      57: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #13                 // String Invalid property value:
      62: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #14                 // Field props:Ljava/util/Map;
      80: ifnonnull     94
      83: aload_0
      84: new           #15                 // class java/util/HashMap
      87: dup
      88: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      91: putfield      #14                 // Field props:Ljava/util/Map;
      94: aload_0
      95: getfield      #14                 // Field props:Ljava/util/Map;
      98: aload_1
      99: aload_2
     100: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: aload_0
     107: aload_1
     108: putfield      #18                 // Field lastPropertyName:Ljava/lang/String;
     111: aload_0
     112: aload_2
     113: putfield      #19                 // Field lastPropertyValue:Ljava/lang/String;
     116: aload_0
     117: iload_3
     118: putfield      #11                 // Field lastChunkIndex:I
     121: aload_0
     122: iconst_m1
     123: putfield      #20                 // Field separator:I
     126: return

  public void addProperty(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field lastPropertyName:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #11                 // Field lastChunkIndex:I
      10: aload_0
      11: iconst_m1
      12: putfield      #20                 // Field separator:I
      15: return

  public void propertyValueSeparator(int);
    Code:
       0: aload_0
       1: iconst_3
       2: putfield      #20                 // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #22                 // Field lastSeparatorIndex:I
      10: return

  public void propertySeparator(int);
    Code:
       0: aload_0
       1: iconst_4
       2: putfield      #20                 // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #22                 // Field lastSeparatorIndex:I
      10: aload_0
      11: aconst_null
      12: putfield      #18                 // Field lastPropertyName:Ljava/lang/String;
      15: aload_0
      16: aconst_null
      17: putfield      #19                 // Field lastPropertyValue:Ljava/lang/String;
      20: return

  public boolean hasProperties();
    Code:
       0: aload_0
       1: getfield      #18                 // Field lastPropertyName:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #14                 // Field props:Ljava/util/Map;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void propertyListStart(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field lastSeparatorIndex:I
       5: aload_0
       6: iconst_1
       7: putfield      #20                 // Field separator:I
      10: return

  public boolean endsOnPropertyListStart();
    Code:
       0: aload_0
       1: getfield      #20                 // Field separator:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void propertyListEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field lastSeparatorIndex:I
       5: aload_0
       6: iconst_2
       7: putfield      #20                 // Field separator:I
      10: aload_0
      11: aconst_null
      12: putfield      #18                 // Field lastPropertyName:Ljava/lang/String;
      15: aload_0
      16: aconst_null
      17: putfield      #19                 // Field lastPropertyValue:Ljava/lang/String;
      20: return

  public boolean endsOnPropertyListEnd();
    Code:
       0: aload_0
       1: getfield      #20                 // Field separator:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnPropertyValueSeparator();
    Code:
       0: aload_0
       1: getfield      #20                 // Field separator:I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnPropertySeparator();
    Code:
       0: aload_0
       1: getfield      #20                 // Field separator:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int getLastSeparatorIndex();
    Code:
       0: aload_0
       1: getfield      #22                 // Field lastSeparatorIndex:I
       4: ireturn

  public java.lang.String getLastPropertyName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field lastPropertyName:Ljava/lang/String;
       4: areturn

  public java.lang.String getLastPropertyValue();
    Code:
       0: aload_0
       1: getfield      #19                 // Field lastPropertyValue:Ljava/lang/String;
       4: areturn

  public boolean hasProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field props:Ljava/util/Map;
       4: ifnonnull     11
       7: iconst_0
       8: goto          21
      11: aload_0
      12: getfield      #14                 // Field props:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #23,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      21: ireturn

  public org.jboss.dmr.ModelNode toModelNode() throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: new           #24                 // class org/jboss/dmr/ModelNode
       3: dup
       4: invokespecial #25                 // Method org/jboss/dmr/ModelNode."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #14                 // Field props:Ljava/util/Map;
      12: ifnull        74
      15: aload_0
      16: getfield      #14                 // Field props:Ljava/util/Map;
      19: invokeinterface #26,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      24: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          74
      39: aload_2
      40: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #30                 // class java/lang/String
      48: astore_3
      49: aload_1
      50: aload_3
      51: invokevirtual #31                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      54: aload_0
      55: getfield      #14                 // Field props:Ljava/util/Map;
      58: aload_3
      59: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #30                 // class java/lang/String
      67: invokevirtual #33                 // Method org/jboss/dmr/ModelNode.set:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      70: pop
      71: goto          30
      74: aload_1
      75: areturn

  public void addTo(org.jboss.dmr.ModelNode) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method org/jboss/dmr/ModelNode.add:()Lorg/jboss/dmr/ModelNode;
       4: ldc           #36                 // String server-group
       6: invokevirtual #31                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       9: aload_0
      10: getfield      #10                 // Field groupName:Ljava/lang/String;
      13: invokevirtual #31                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      16: aload_0
      17: invokevirtual #37                 // Method toModelNode:()Lorg/jboss/dmr/ModelNode;
      20: invokevirtual #38                 // Method org/jboss/dmr/ModelNode.set:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/dmr/ModelNode;
      23: pop
      24: return
}
