Compiled from "RequestController.java"
public class org.wildfly.extension.requestcontroller.RequestController implements org.jboss.msc.service.Service<org.wildfly.extension.requestcontroller.RequestController>, org.jboss.as.server.suspend.ServerActivity {
  public static final org.jboss.msc.service.ServiceName SERVICE_NAME;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.wildfly.extension.requestcontroller.RequestController> activeRequestCountUpdater;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.wildfly.extension.requestcontroller.RequestController, org.jboss.as.server.suspend.ServerActivityCallback> listenerUpdater;

  private volatile int maxRequestCount;

  private volatile int activeRequestCount;

  private volatile boolean paused;

  private final java.util.Map<org.wildfly.extension.requestcontroller.RequestController$ControlPointIdentifier, org.wildfly.extension.requestcontroller.ControlPoint> entryPoints;

  private final org.jboss.msc.value.InjectedValue<org.jboss.as.server.suspend.SuspendController> shutdownControllerInjectedValue;

  private volatile org.jboss.as.server.suspend.ServerActivityCallback listener;

  private final boolean trackIndividualControlPoints;

  private java.util.Timer timer;

  private final java.util.Deque<org.wildfly.extension.requestcontroller.RequestController$QueuedTask> taskQueue;

  public org.wildfly.extension.requestcontroller.RequestController(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field maxRequestCount:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field activeRequestCount:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field paused:Z
      19: aload_0
      20: new           #5                  // class java/util/HashMap
      23: dup
      24: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      27: putfield      #7                  // Field entryPoints:Ljava/util/Map;
      30: aload_0
      31: new           #8                  // class org/jboss/msc/value/InjectedValue
      34: dup
      35: invokespecial #9                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      38: putfield      #10                 // Field shutdownControllerInjectedValue:Lorg/jboss/msc/value/InjectedValue;
      41: aload_0
      42: aconst_null
      43: putfield      #11                 // Field listener:Lorg/jboss/as/server/suspend/ServerActivityCallback;
      46: aload_0
      47: new           #12                 // class java/util/concurrent/LinkedBlockingDeque
      50: dup
      51: invokespecial #13                 // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
      54: putfield      #14                 // Field taskQueue:Ljava/util/Deque;
      57: aload_0
      58: iload_1
      59: putfield      #15                 // Field trackIndividualControlPoints:Z
      62: return

  public void preSuspend(org.jboss.as.server.suspend.ServerActivityCallback);
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod org/jboss/as/server/suspend/ServerActivityCallback.done:()V
       6: return

  public synchronized void suspended(org.jboss.as.server.suspend.ServerActivityCallback);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field paused:Z
       5: getstatic     #17                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       8: aload_0
       9: aload_1
      10: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      13: getstatic     #19                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      16: aload_0
      17: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      20: ifne          41
      23: getstatic     #17                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      26: aload_0
      27: aload_1
      28: aconst_null
      29: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          41
      35: aload_1
      36: invokeinterface #16,  1           // InterfaceMethod org/jboss/as/server/suspend/ServerActivityCallback.done:()V
      41: return

  public synchronized void resume();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field paused:Z
       5: getstatic     #17                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       8: aload_0
       9: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #23                 // class org/jboss/as/server/suspend/ServerActivityCallback
      15: astore_1
      16: aload_1
      17: ifnull        30
      20: getstatic     #17                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: aload_0
      24: aload_1
      25: aconst_null
      26: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
      34: invokeinterface #24,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      39: ifne          69
      42: aload_0
      43: getfield      #3                  // Field activeRequestCount:I
      46: aload_0
      47: getfield      #2                  // Field maxRequestCount:I
      50: if_icmplt     60
      53: aload_0
      54: getfield      #2                  // Field maxRequestCount:I
      57: ifge          69
      60: aload_0
      61: iconst_0
      62: invokespecial #25                 // Method runQueuedTask:(Z)Z
      65: pop
      66: goto          30
      69: return

  public synchronized void pauseDeployment(java.lang.String, org.jboss.as.server.suspend.ServerActivityCallback);
    Code:
       0: new           #26                 // class java/util/ArrayList
       3: dup
       4: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #7                  // Field entryPoints:Ljava/util/Map;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          78
      34: aload         4
      36: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
      44: astore        5
      46: aload         5
      48: invokevirtual #33                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getDeployment:()Ljava/lang/String;
      51: aload_1
      52: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          75
      58: aload         5
      60: invokevirtual #35                 // Method org/wildfly/extension/requestcontroller/ControlPoint.isPaused:()Z
      63: ifne          75
      66: aload_3
      67: aload         5
      69: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: goto          24
      78: new           #37                 // class org/jboss/as/server/suspend/CountingRequestCountCallback
      81: dup
      82: aload_3
      83: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      88: aload_2
      89: invokespecial #39                 // Method org/jboss/as/server/suspend/CountingRequestCountCallback."<init>":(ILorg/jboss/as/server/suspend/ServerActivityCallback;)V
      92: astore        4
      94: aload_3
      95: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     100: astore        5
     102: aload         5
     104: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     109: ifeq          134
     112: aload         5
     114: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     119: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
     122: astore        6
     124: aload         6
     126: aload         4
     128: invokevirtual #41                 // Method org/wildfly/extension/requestcontroller/ControlPoint.pause:(Lorg/jboss/as/server/suspend/ServerActivityCallback;)V
     131: goto          102
     134: return

  public synchronized void resumeDeployment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field entryPoints:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          52
      24: aload_2
      25: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
      33: astore_3
      34: aload_3
      35: invokevirtual #33                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getDeployment:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          49
      45: aload_3
      46: invokevirtual #42                 // Method org/wildfly/extension/requestcontroller/ControlPoint.resume:()V
      49: goto          15
      52: return

  public synchronized void pauseControlPoint(java.lang.String, org.jboss.as.server.suspend.ServerActivityCallback);
    Code:
       0: new           #26                 // class java/util/ArrayList
       3: dup
       4: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #7                  // Field entryPoints:Ljava/util/Map;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          78
      34: aload         4
      36: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
      44: astore        5
      46: aload         5
      48: invokevirtual #43                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getEntryPoint:()Ljava/lang/String;
      51: aload_1
      52: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          75
      58: aload         5
      60: invokevirtual #35                 // Method org/wildfly/extension/requestcontroller/ControlPoint.isPaused:()Z
      63: ifne          75
      66: aload_3
      67: aload         5
      69: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: goto          24
      78: aload_3
      79: invokeinterface #44,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      84: ifeq          97
      87: aload_2
      88: ifnull        97
      91: aload_2
      92: invokeinterface #16,  1           // InterfaceMethod org/jboss/as/server/suspend/ServerActivityCallback.done:()V
      97: new           #37                 // class org/jboss/as/server/suspend/CountingRequestCountCallback
     100: dup
     101: aload_3
     102: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
     107: aload_2
     108: invokespecial #39                 // Method org/jboss/as/server/suspend/CountingRequestCountCallback."<init>":(ILorg/jboss/as/server/suspend/ServerActivityCallback;)V
     111: astore        4
     113: aload_3
     114: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     119: astore        5
     121: aload         5
     123: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     128: ifeq          153
     131: aload         5
     133: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
     141: astore        6
     143: aload         6
     145: aload         4
     147: invokevirtual #41                 // Method org/wildfly/extension/requestcontroller/ControlPoint.pause:(Lorg/jboss/as/server/suspend/ServerActivityCallback;)V
     150: goto          121
     153: return

  public synchronized void resumeControlPoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field entryPoints:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          52
      24: aload_2
      25: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
      33: astore_3
      34: aload_3
      35: invokevirtual #43                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getEntryPoint:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          49
      45: aload_3
      46: invokevirtual #42                 // Method org/wildfly/extension/requestcontroller/ControlPoint.resume:()V
      49: goto          15
      52: return

  public synchronized org.wildfly.extension.requestcontroller.RequestControllerState getState();
    Code:
       0: new           #26                 // class java/util/ArrayList
       3: dup
       4: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field entryPoints:Ljava/util/Map;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          75
      32: aload_2
      33: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
      41: astore_3
      42: aload_1
      43: new           #45                 // class org/wildfly/extension/requestcontroller/RequestControllerState$EntryPointState
      46: dup
      47: aload_3
      48: invokevirtual #33                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getDeployment:()Ljava/lang/String;
      51: aload_3
      52: invokevirtual #43                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getEntryPoint:()Ljava/lang/String;
      55: aload_3
      56: invokevirtual #35                 // Method org/wildfly/extension/requestcontroller/ControlPoint.isPaused:()Z
      59: aload_3
      60: invokevirtual #46                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getActiveRequestCount:()I
      63: invokespecial #47                 // Method org/wildfly/extension/requestcontroller/RequestControllerState$EntryPointState."<init>":(Ljava/lang/String;Ljava/lang/String;ZI)V
      66: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          23
      75: new           #48                 // class org/wildfly/extension/requestcontroller/RequestControllerState
      78: dup
      79: aload_0
      80: getfield      #4                  // Field paused:Z
      83: aload_0
      84: getfield      #3                  // Field activeRequestCount:I
      87: aload_0
      88: getfield      #2                  // Field maxRequestCount:I
      91: aload_1
      92: invokespecial #49                 // Method org/wildfly/extension/requestcontroller/RequestControllerState."<init>":(ZIILjava/util/List;)V
      95: areturn

  org.wildfly.extension.requestcontroller.RunResult beginRequest(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxRequestCount:I
       4: istore_2
       5: getstatic     #19                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload_2
      17: ifle          25
      20: iload_3
      21: iload_2
      22: if_icmpge     67
      25: aload_0
      26: getfield      #4                  // Field paused:Z
      29: ifeq          36
      32: iload_1
      33: ifeq          67
      36: getstatic     #19                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: aload_0
      40: iload_3
      41: iload_3
      42: iconst_1
      43: iadd
      44: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      47: ifeq          56
      50: iconst_1
      51: istore        4
      53: goto          67
      56: getstatic     #19                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      59: aload_0
      60: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      63: istore_3
      64: goto          16
      67: iload         4
      69: ifeq          95
      72: iload_1
      73: ifne          91
      76: aload_0
      77: getfield      #4                  // Field paused:Z
      80: ifeq          91
      83: aload_0
      84: invokevirtual #51                 // Method requestComplete:()V
      87: getstatic     #52                 // Field org/wildfly/extension/requestcontroller/RunResult.REJECTED:Lorg/wildfly/extension/requestcontroller/RunResult;
      90: areturn
      91: getstatic     #53                 // Field org/wildfly/extension/requestcontroller/RunResult.RUN:Lorg/wildfly/extension/requestcontroller/RunResult;
      94: areturn
      95: getstatic     #52                 // Field org/wildfly/extension/requestcontroller/RunResult.REJECTED:Lorg/wildfly/extension/requestcontroller/RunResult;
      98: areturn

  void requestComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #25                 // Method runQueuedTask:(Z)Z
       5: pop
       6: return

  private void decrementRequestCount();
    Code:
       0: getstatic     #19                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
       7: istore_1
       8: aload_0
       9: getfield      #4                  // Field paused:Z
      12: ifeq          59
      15: aload_0
      16: getfield      #4                  // Field paused:Z
      19: ifeq          59
      22: iload_1
      23: ifne          59
      26: getstatic     #17                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: aload_0
      30: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #23                 // class org/jboss/as/server/suspend/ServerActivityCallback
      36: astore_2
      37: aload_2
      38: ifnull        59
      41: getstatic     #17                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      44: aload_0
      45: aload_2
      46: aconst_null
      47: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifeq          59
      53: aload_2
      54: invokeinterface #16,  1           // InterfaceMethod org/jboss/as/server/suspend/ServerActivityCallback.done:()V
      59: return

  public synchronized org.wildfly.extension.requestcontroller.ControlPoint getControlPoint(java.lang.String, java.lang.String);
    Code:
       0: new           #55                 // class org/wildfly/extension/requestcontroller/RequestController$ControlPointIdentifier
       3: dup
       4: aload_1
       5: aload_2
       6: aconst_null
       7: invokespecial #56                 // Method org/wildfly/extension/requestcontroller/RequestController$ControlPointIdentifier."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/wildfly/extension/requestcontroller/RequestController$1;)V
      10: astore_3
      11: aload_0
      12: getfield      #7                  // Field entryPoints:Ljava/util/Map;
      15: aload_3
      16: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
      24: astore        4
      26: aload         4
      28: ifnonnull     60
      31: new           #32                 // class org/wildfly/extension/requestcontroller/ControlPoint
      34: dup
      35: aload_0
      36: aload_1
      37: aload_2
      38: aload_0
      39: getfield      #15                 // Field trackIndividualControlPoints:Z
      42: invokespecial #58                 // Method org/wildfly/extension/requestcontroller/ControlPoint."<init>":(Lorg/wildfly/extension/requestcontroller/RequestController;Ljava/lang/String;Ljava/lang/String;Z)V
      45: astore        4
      47: aload_0
      48: getfield      #7                  // Field entryPoints:Ljava/util/Map;
      51: aload_3
      52: aload         4
      54: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload         4
      62: invokevirtual #60                 // Method org/wildfly/extension/requestcontroller/ControlPoint.increaseReferenceCount:()I
      65: pop
      66: aload         4
      68: areturn

  public synchronized void removeControlPoint(org.wildfly.extension.requestcontroller.ControlPoint);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method org/wildfly/extension/requestcontroller/ControlPoint.decreaseReferenceCount:()I
       4: ifne          35
       7: new           #55                 // class org/wildfly/extension/requestcontroller/RequestController$ControlPointIdentifier
      10: dup
      11: aload_1
      12: invokevirtual #33                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getDeployment:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #43                 // Method org/wildfly/extension/requestcontroller/ControlPoint.getEntryPoint:()Ljava/lang/String;
      19: aconst_null
      20: invokespecial #56                 // Method org/wildfly/extension/requestcontroller/RequestController$ControlPointIdentifier."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/wildfly/extension/requestcontroller/RequestController$1;)V
      23: astore_2
      24: aload_0
      25: getfield      #7                  // Field entryPoints:Ljava/util/Map;
      28: aload_2
      29: invokeinterface #62,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: return

  public int getMaxRequestCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxRequestCount:I
       4: ireturn

  public void setMaxRequestCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxRequestCount:I
       5: aload_0
       6: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
       9: invokeinterface #24,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      14: ifne          40
      17: aload_0
      18: getfield      #3                  // Field activeRequestCount:I
      21: iload_1
      22: if_icmplt     29
      25: iload_1
      26: ifge          40
      29: aload_0
      30: iconst_0
      31: invokespecial #25                 // Method runQueuedTask:(Z)Z
      34: ifne          5
      37: goto          40
      40: return

  public boolean isPaused();
    Code:
       0: aload_0
       1: getfield      #4                  // Field paused:Z
       4: ireturn

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field shutdownControllerInjectedValue:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #63                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #64                 // class org/jboss/as/server/suspend/SuspendController
      10: aload_0
      11: invokevirtual #65                 // Method org/jboss/as/server/suspend/SuspendController.registerActivity:(Lorg/jboss/as/server/suspend/ServerActivity;)V
      14: aload_0
      15: new           #66                 // class java/util/Timer
      18: dup
      19: invokespecial #67                 // Method java/util/Timer."<init>":()V
      22: putfield      #68                 // Field timer:Ljava/util/Timer;
      25: return

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: getfield      #10                 // Field shutdownControllerInjectedValue:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #63                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #64                 // class org/jboss/as/server/suspend/SuspendController
      10: aload_0
      11: invokevirtual #69                 // Method org/jboss/as/server/suspend/SuspendController.unRegisterActivity:(Lorg/jboss/as/server/suspend/ServerActivity;)V
      14: aload_0
      15: getfield      #68                 // Field timer:Ljava/util/Timer;
      18: invokevirtual #70                 // Method java/util/Timer.cancel:()V
      21: aload_0
      22: aconst_null
      23: putfield      #68                 // Field timer:Ljava/util/Timer;
      26: aload_0
      27: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
      30: invokeinterface #24,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      35: ifne          62
      38: aload_0
      39: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
      42: invokeinterface #71,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      47: checkcast     #72                 // class org/wildfly/extension/requestcontroller/RequestController$QueuedTask
      50: astore_2
      51: aload_2
      52: ifnull        59
      55: aload_2
      56: invokevirtual #73                 // Method org/wildfly/extension/requestcontroller/RequestController$QueuedTask.run:()V
      59: goto          26
      62: return

  public org.wildfly.extension.requestcontroller.RequestController getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: areturn

  public org.jboss.msc.value.InjectedValue<org.jboss.as.server.suspend.SuspendController> getShutdownControllerInjectedValue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field shutdownControllerInjectedValue:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  public int getActiveRequestCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeRequestCount:I
       4: ireturn

  void queueTask(org.wildfly.extension.requestcontroller.ControlPoint, java.lang.Runnable, java.util.concurrent.Executor, long, java.lang.Runnable, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field paused:Z
       4: ifeq          26
       7: iload         7
       9: ifeq          26
      12: iload         8
      14: ifne          26
      17: aload_3
      18: aload         6
      20: invokeinterface #74,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      25: return
      26: new           #72                 // class org/wildfly/extension/requestcontroller/RequestController$QueuedTask
      29: dup
      30: aload_3
      31: aload_2
      32: aload         6
      34: aload_1
      35: iload         8
      37: aconst_null
      38: invokespecial #75                 // Method org/wildfly/extension/requestcontroller/RequestController$QueuedTask."<init>":(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;Ljava/lang/Runnable;Lorg/wildfly/extension/requestcontroller/ControlPoint;ZLorg/wildfly/extension/requestcontroller/RequestController$1;)V
      41: astore        9
      43: aload_0
      44: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
      47: aload         9
      49: invokeinterface #76,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      54: pop
      55: aload_0
      56: iconst_0
      57: invokespecial #25                 // Method runQueuedTask:(Z)Z
      60: pop
      61: aload         9
      63: invokevirtual #77                 // Method org/wildfly/extension/requestcontroller/RequestController$QueuedTask.isQueued:()Z
      66: ifeq          87
      69: lload         4
      71: lconst_0
      72: lcmp
      73: ifle          87
      76: aload_0
      77: getfield      #68                 // Field timer:Ljava/util/Timer;
      80: aload         9
      82: lload         4
      84: invokevirtual #78                 // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      87: return

  private boolean runQueuedTask(boolean);
    Code:
       0: aconst_null
       1: astore_2
       2: iload_1
       3: ifne          136
       6: aload_0
       7: getfield      #4                  // Field paused:Z
      10: ifne          42
      13: aload_0
      14: iconst_0
      15: invokevirtual #79                 // Method beginRequest:(Z)Lorg/wildfly/extension/requestcontroller/RunResult;
      18: getstatic     #52                 // Field org/wildfly/extension/requestcontroller/RunResult.REJECTED:Lorg/wildfly/extension/requestcontroller/RunResult;
      21: if_acmpne     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
      30: invokeinterface #71,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      35: checkcast     #72                 // class org/wildfly/extension/requestcontroller/RequestController$QueuedTask
      38: astore_2
      39: goto          136
      42: new           #26                 // class java/util/ArrayList
      45: dup
      46: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      49: astore_3
      50: aload_2
      51: ifnonnull     106
      54: aload_0
      55: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
      58: invokeinterface #24,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      63: ifne          106
      66: aload_0
      67: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
      70: invokeinterface #71,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      75: checkcast     #72                 // class org/wildfly/extension/requestcontroller/RequestController$QueuedTask
      78: astore        4
      80: aload         4
      82: invokestatic  #80                 // Method org/wildfly/extension/requestcontroller/RequestController$QueuedTask.access$200:(Lorg/wildfly/extension/requestcontroller/RequestController$QueuedTask;)Z
      85: ifeq          94
      88: aload         4
      90: astore_2
      91: goto          103
      94: aload_3
      95: aload         4
      97: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     102: pop
     103: goto          50
     106: aload_0
     107: getfield      #14                 // Field taskQueue:Ljava/util/Deque;
     110: aload_3
     111: invokeinterface #81,  2           // InterfaceMethod java/util/Deque.addAll:(Ljava/util/Collection;)Z
     116: pop
     117: aload_2
     118: ifnonnull     123
     121: iconst_0
     122: ireturn
     123: aload_0
     124: iconst_1
     125: invokevirtual #79                 // Method beginRequest:(Z)Lorg/wildfly/extension/requestcontroller/RunResult;
     128: getstatic     #52                 // Field org/wildfly/extension/requestcontroller/RunResult.REJECTED:Lorg/wildfly/extension/requestcontroller/RunResult;
     131: if_acmpne     136
     134: iconst_0
     135: ireturn
     136: aload_2
     137: ifnull        153
     140: aload_2
     141: invokevirtual #82                 // Method org/wildfly/extension/requestcontroller/RequestController$QueuedTask.runRequest:()Z
     144: ifne          151
     147: aload_0
     148: invokespecial #83                 // Method decrementRequestCount:()V
     151: iconst_1
     152: ireturn
     153: aload_0
     154: invokespecial #83                 // Method decrementRequestCount:()V
     157: iconst_0
     158: ireturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method getValue:()Lorg/wildfly/extension/requestcontroller/RequestController;
       4: areturn

  static {};
    Code:
       0: getstatic     #85                 // Field org/wildfly/extension/requestcontroller/RequestControllerRootDefinition.REQUEST_CONTROLLER_CAPABILITY:Lorg/jboss/as/controller/capability/RuntimeCapability;
       3: invokevirtual #86                 // Method org/jboss/as/controller/capability/RuntimeCapability.getCapabilityServiceName:()Lorg/jboss/msc/service/ServiceName;
       6: putstatic     #87                 // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
       9: ldc           #88                 // class org/wildfly/extension/requestcontroller/RequestController
      11: ldc           #89                 // String activeRequestCount
      13: invokestatic  #90                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      16: putstatic     #19                 // Field activeRequestCountUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: ldc           #88                 // class org/wildfly/extension/requestcontroller/RequestController
      21: ldc           #23                 // class org/jboss/as/server/suspend/ServerActivityCallback
      23: ldc           #91                 // String listener
      25: invokestatic  #92                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      28: putstatic     #17                 // Field listenerUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: return
}
