Compiled from "FilePersistenceUtils.java"
class org.jboss.as.controller.persistence.FilePersistenceUtils {
  org.jboss.as.controller.persistence.FilePersistenceUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.io.File createTempFile(java.io.File);
    Code:
       0: new           #2                  // class java/io/File
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method java/io/File.getParentFile:()Ljava/io/File;
       8: new           #4                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #6                  // Method java/io/File.getName:()Ljava/lang/String;
      19: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #8                  // String .tmp
      24: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #10                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      33: areturn

  static org.jboss.as.controller.persistence.ExposedByteArrayOutputStream marshalXml(org.jboss.as.controller.persistence.AbstractConfigurationPersister, org.jboss.dmr.ModelNode) throws org.jboss.as.controller.persistence.ConfigurationPersistenceException;
    Code:
       0: new           #11                 // class org/jboss/as/controller/persistence/ExposedByteArrayOutputStream
       3: dup
       4: sipush        8192
       7: invokespecial #12                 // Method org/jboss/as/controller/persistence/ExposedByteArrayOutputStream."<init>":(I)V
      10: astore_2
      11: new           #13                 // class java/io/BufferedOutputStream
      14: dup
      15: aload_2
      16: invokespecial #14                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      19: astore_3
      20: aload_0
      21: aload_1
      22: aload_3
      23: invokevirtual #15                 // Method org/jboss/as/controller/persistence/AbstractConfigurationPersister.marshallAsXml:(Lorg/jboss/dmr/ModelNode;Ljava/io/OutputStream;)V
      26: aload_3
      27: invokevirtual #16                 // Method java/io/BufferedOutputStream.close:()V
      30: aload_2
      31: invokevirtual #17                 // Method org/jboss/as/controller/persistence/ExposedByteArrayOutputStream.close:()V
      34: aload_2
      35: invokestatic  #18                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      38: goto          50
      41: astore        4
      43: aload_2
      44: invokestatic  #18                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      47: aload         4
      49: athrow
      50: goto          64
      53: astore_3
      54: getstatic     #20                 // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
      57: aload_3
      58: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.failedToMarshalConfiguration:(Ljava/lang/Throwable;)Lorg/jboss/as/controller/persistence/ConfigurationPersistenceException;
      63: athrow
      64: aload_2
      65: areturn
    Exception table:
       from    to  target type
          11    34    41   any
          41    43    41   any
          11    50    53   Class java/lang/Exception

  static void copyFile(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: aload_1
       5: invokevirtual #22                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       8: iconst_2
       9: anewarray     #23                 // class java/nio/file/CopyOption
      12: dup
      13: iconst_0
      14: getstatic     #24                 // Field java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
      17: aastore
      18: dup
      19: iconst_1
      20: getstatic     #25                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      23: aastore
      24: invokestatic  #26                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      27: pop
      28: return

  static void rename(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
       5: ifne          20
       8: aload_0
       9: invokevirtual #28                 // Method java/io/File.exists:()Z
      12: ifeq          20
      15: aload_0
      16: aload_1
      17: invokestatic  #29                 // Method copyFile:(Ljava/io/File;Ljava/io/File;)V
      20: return

  static void moveTempFileToMain(java.io.File, java.io.File) throws org.jboss.as.controller.persistence.ConfigurationPersistenceException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: aload_1
       5: invokevirtual #22                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       8: iconst_1
       9: anewarray     #23                 // class java/nio/file/CopyOption
      12: dup
      13: iconst_0
      14: getstatic     #25                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      17: aastore
      18: invokestatic  #30                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      21: pop
      22: goto          38
      25: astore_2
      26: getstatic     #20                 // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
      29: aload_2
      30: aload_0
      31: aload_1
      32: invokeinterface #31,  4           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.failedToRenameTempFile:(Ljava/lang/Throwable;Ljava/io/File;Ljava/io/File;)Lorg/jboss/as/controller/persistence/ConfigurationPersistenceException;
      37: athrow
      38: return
    Exception table:
       from    to  target type
           0    22    25   Class java/lang/Exception

  static void deleteFile(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/io/File.exists:()Z
       4: ifeq          42
       7: aload_0
       8: invokevirtual #32                 // Method java/io/File.delete:()Z
      11: ifne          42
      14: aload_0
      15: invokevirtual #28                 // Method java/io/File.exists:()Z
      18: ifeq          42
      21: aload_0
      22: invokevirtual #33                 // Method java/io/File.deleteOnExit:()V
      25: new           #34                 // class java/lang/IllegalStateException
      28: dup
      29: getstatic     #20                 // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
      32: aload_0
      33: invokeinterface #35,  2           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.couldNotDeleteFile:(Ljava/io/File;)Ljava/lang/IllegalStateException;
      38: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      41: athrow
      42: return

  static java.io.File writeToTempFile(org.jboss.as.controller.persistence.ExposedByteArrayOutputStream, java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: astore_3
       5: aload_1
       6: invokestatic  #37                 // Method deleteFile:(Ljava/io/File;)V
       9: aload_3
      10: aload_2
      11: invokestatic  #38                 // Method createTempFileWithAttributes:(Ljava/nio/file/Path;Ljava/io/File;)Ljava/nio/file/Path;
      14: pop
      15: goto          25
      18: astore        4
      20: aload         4
      22: invokevirtual #40                 // Method java/io/IOException.printStackTrace:()V
      25: aload_0
      26: invokevirtual #41                 // Method org/jboss/as/controller/persistence/ExposedByteArrayOutputStream.getInputStream:()Ljava/io/ByteArrayInputStream;
      29: astore        4
      31: aconst_null
      32: astore        5
      34: aload         4
      36: aload_3
      37: iconst_1
      38: anewarray     #23                 // class java/nio/file/CopyOption
      41: dup
      42: iconst_0
      43: getstatic     #25                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      46: aastore
      47: invokestatic  #42                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      50: pop2
      51: aload         4
      53: ifnull        138
      56: aload         5
      58: ifnull        81
      61: aload         4
      63: invokevirtual #43                 // Method java/io/InputStream.close:()V
      66: goto          138
      69: astore        6
      71: aload         5
      73: aload         6
      75: invokevirtual #45                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      78: goto          138
      81: aload         4
      83: invokevirtual #43                 // Method java/io/InputStream.close:()V
      86: goto          138
      89: astore        6
      91: aload         6
      93: astore        5
      95: aload         6
      97: athrow
      98: astore        7
     100: aload         4
     102: ifnull        135
     105: aload         5
     107: ifnull        130
     110: aload         4
     112: invokevirtual #43                 // Method java/io/InputStream.close:()V
     115: goto          135
     118: astore        8
     120: aload         5
     122: aload         8
     124: invokevirtual #45                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     127: goto          135
     130: aload         4
     132: invokevirtual #43                 // Method java/io/InputStream.close:()V
     135: aload         7
     137: athrow
     138: aload_1
     139: areturn
    Exception table:
       from    to  target type
           9    15    18   Class java/io/IOException
          61    66    69   Class java/lang/Throwable
          34    51    89   Class java/lang/Throwable
          34    51    98   any
         110   115   118   Class java/lang/Throwable
          89   100    98   any

  static java.nio.file.Path createTempFileWithAttributes(java.nio.file.Path, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: astore_2
       5: new           #46                 // class java/util/ArrayList
       8: dup
       9: iconst_2
      10: invokespecial #47                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_3
      14: aload_3
      15: aload_2
      16: invokestatic  #48                 // Method getPosixAttributes:(Ljava/nio/file/Path;)Ljava/util/List;
      19: invokeinterface #49,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: aload_3
      26: aload_2
      27: invokestatic  #50                 // Method getAclAttributes:(Ljava/nio/file/Path;)Ljava/util/List;
      30: invokeinterface #49,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      35: pop
      36: aload_3
      37: invokeinterface #51,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      42: ifne          70
      45: aload_0
      46: aload_3
      47: aload_3
      48: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      53: anewarray     #53                 // class java/nio/file/attribute/FileAttribute
      56: invokeinterface #54,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      61: checkcast     #55                 // class "[Ljava/nio/file/attribute/FileAttribute;"
      64: invokestatic  #56                 // Method java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      67: areturn
      68: astore        4
      70: aload_0
      71: iconst_0
      72: anewarray     #53                 // class java/nio/file/attribute/FileAttribute
      75: invokestatic  #56                 // Method java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      78: areturn
    Exception table:
       from    to  target type
          45    67    68   Class java/lang/UnsupportedOperationException

  private static java.util.List<java.nio.file.attribute.FileAttribute<java.util.Set<java.nio.file.attribute.PosixFilePermission>>> getPosixAttributes(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #58                 // class java/nio/file/LinkOption
       5: invokestatic  #59                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          59
      11: aload_0
      12: invokestatic  #60                 // Method java/nio/file/Files.getFileStore:(Ljava/nio/file/Path;)Ljava/nio/file/FileStore;
      15: ldc           #61                 // class java/nio/file/attribute/PosixFileAttributeView
      17: invokevirtual #62                 // Method java/nio/file/FileStore.supportsFileAttributeView:(Ljava/lang/Class;)Z
      20: ifeq          59
      23: aload_0
      24: ldc           #61                 // class java/nio/file/attribute/PosixFileAttributeView
      26: iconst_0
      27: anewarray     #58                 // class java/nio/file/LinkOption
      30: invokestatic  #63                 // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      33: checkcast     #61                 // class java/nio/file/attribute/PosixFileAttributeView
      36: astore_1
      37: aload_1
      38: ifnull        59
      41: aload_1
      42: invokeinterface #64,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;
      47: invokeinterface #65,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;
      52: invokestatic  #66                 // Method java/nio/file/attribute/PosixFilePermissions.asFileAttribute:(Ljava/util/Set;)Ljava/nio/file/attribute/FileAttribute;
      55: invokestatic  #67                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      58: areturn
      59: invokestatic  #68                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      62: areturn

  private static java.util.List<java.nio.file.attribute.FileAttribute<java.util.List<java.nio.file.attribute.AclEntry>>> getAclAttributes(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #58                 // class java/nio/file/LinkOption
       5: invokestatic  #59                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          60
      11: aload_0
      12: invokestatic  #60                 // Method java/nio/file/Files.getFileStore:(Ljava/nio/file/Path;)Ljava/nio/file/FileStore;
      15: ldc           #69                 // class java/nio/file/attribute/AclFileAttributeView
      17: invokevirtual #62                 // Method java/nio/file/FileStore.supportsFileAttributeView:(Ljava/lang/Class;)Z
      20: ifeq          60
      23: aload_0
      24: ldc           #69                 // class java/nio/file/attribute/AclFileAttributeView
      26: iconst_0
      27: anewarray     #58                 // class java/nio/file/LinkOption
      30: invokestatic  #63                 // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      33: checkcast     #69                 // class java/nio/file/attribute/AclFileAttributeView
      36: astore_1
      37: aload_1
      38: ifnull        60
      41: aload_1
      42: invokeinterface #70,  1           // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;
      47: astore_2
      48: new           #71                 // class org/jboss/as/controller/persistence/FilePersistenceUtils$1
      51: dup
      52: aload_2
      53: invokespecial #72                 // Method org/jboss/as/controller/persistence/FilePersistenceUtils$1."<init>":(Ljava/util/List;)V
      56: invokestatic  #67                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      59: areturn
      60: invokestatic  #68                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      63: areturn
}
