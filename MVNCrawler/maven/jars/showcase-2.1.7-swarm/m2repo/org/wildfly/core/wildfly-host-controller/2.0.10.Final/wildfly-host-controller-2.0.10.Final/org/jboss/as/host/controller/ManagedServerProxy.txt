Compiled from "ManagedServerProxy.java"
class org.jboss.as.host.controller.ManagedServerProxy implements org.jboss.as.controller.remote.TransactionalProtocolClient {
  private static final org.jboss.as.controller.remote.TransactionalProtocolClient DISCONNECTED;

  private final org.jboss.as.host.controller.ManagedServer server;

  private final java.util.Map<org.jboss.as.controller.remote.TransactionalProtocolClient, java.util.Set<org.jboss.threads.AsyncFuture<org.jboss.as.controller.client.OperationResponse>>> activeRequests;

  private volatile org.jboss.as.controller.remote.TransactionalProtocolClient remoteClient;

  org.jboss.as.host.controller.ManagedServerProxy(org.jboss.as.host.controller.ManagedServer);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashMap
       8: dup
       9: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      12: putfield      #6                  // Field activeRequests:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field server:Lorg/jboss/as/host/controller/ManagedServer;
      20: aload_0
      21: getstatic     #8                  // Field DISCONNECTED:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
      24: putfield      #9                  // Field remoteClient:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
      27: return

  synchronized void connected(org.jboss.as.controller.remote.TransactionalProtocolClient);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field remoteClient:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
       5: return

  synchronized boolean disconnected(org.jboss.as.controller.remote.TransactionalProtocolClient);
    Code:
       0: aload_0
       1: getfield      #9                  // Field remoteClient:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
       4: aload_1
       5: if_acmpne     74
       8: aload_0
       9: getstatic     #8                  // Field DISCONNECTED:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
      12: putfield      #9                  // Field remoteClient:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
      15: aload_0
      16: getfield      #6                  // Field activeRequests:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #10,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #11                 // class java/util/Set
      28: astore_2
      29: aload_2
      30: ifnull        72
      33: aload_2
      34: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          72
      49: aload_3
      50: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #15                 // class org/jboss/threads/AsyncFuture
      58: astore        4
      60: aload         4
      62: iconst_1
      63: invokeinterface #16,  2           // InterfaceMethod org/jboss/threads/AsyncFuture.cancel:(Z)Z
      68: pop
      69: goto          40
      72: iconst_1
      73: ireturn
      74: iconst_0
      75: ireturn

  public org.jboss.threads.AsyncFuture<org.jboss.as.controller.client.OperationResponse> execute(org.jboss.as.controller.remote.TransactionalProtocolClient$TransactionalOperationListener<org.jboss.as.controller.remote.TransactionalProtocolClient$Operation>, org.jboss.dmr.ModelNode, org.jboss.as.controller.client.OperationMessageHandler, org.jboss.as.controller.client.OperationAttachments) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #17                 // Method org/jboss/as/controller/remote/TransactionalProtocolHandlers.wrap:(Lorg/jboss/dmr/ModelNode;Lorg/jboss/as/controller/client/OperationMessageHandler;Lorg/jboss/as/controller/client/OperationAttachments;)Lorg/jboss/as/controller/remote/TransactionalProtocolClient$Operation;
       9: invokevirtual #18                 // Method execute:(Lorg/jboss/as/controller/remote/TransactionalProtocolClient$TransactionalOperationListener;Lorg/jboss/as/controller/remote/TransactionalProtocolClient$Operation;)Lorg/jboss/threads/AsyncFuture;
      12: areturn

  public <T extends org.jboss.as.controller.remote.TransactionalProtocolClient$Operation> org.jboss.threads.AsyncFuture<org.jboss.as.controller.client.OperationResponse> execute(org.jboss.as.controller.remote.TransactionalProtocolClient$TransactionalOperationListener<T>, T) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field remoteClient:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
       4: astore_3
       5: aload_2
       6: invokeinterface #19,  1           // InterfaceMethod org/jboss/as/controller/remote/TransactionalProtocolClient$Operation.getOperation:()Lorg/jboss/dmr/ModelNode;
      11: astore        4
      13: aload_3
      14: getstatic     #8                  // Field DISCONNECTED:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
      17: if_acmpne     49
      20: aload         4
      22: ldc           #20                 // String operation
      24: invokevirtual #21                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      27: invokevirtual #22                 // Method org/jboss/dmr/ModelNode.asString:()Ljava/lang/String;
      30: astore        5
      32: ldc           #24                 // String server-set-restart-required
      34: aload         5
      36: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          49
      42: aload_0
      43: getfield      #7                  // Field server:Lorg/jboss/as/host/controller/ManagedServer;
      46: invokevirtual #26                 // Method org/jboss/as/host/controller/ManagedServer.requireReload:()V
      49: aload_3
      50: aload_1
      51: aload_2
      52: invokeinterface #27,  3           // InterfaceMethod org/jboss/as/controller/remote/TransactionalProtocolClient.execute:(Lorg/jboss/as/controller/remote/TransactionalProtocolClient$TransactionalOperationListener;Lorg/jboss/as/controller/remote/TransactionalProtocolClient$Operation;)Lorg/jboss/threads/AsyncFuture;
      57: astore        5
      59: aload_0
      60: aload_3
      61: aload         5
      63: invokespecial #28                 // Method registerFuture:(Lorg/jboss/as/controller/remote/TransactionalProtocolClient;Lorg/jboss/threads/AsyncFuture;)V
      66: aload         5
      68: areturn

  private synchronized void registerFuture(org.jboss.as.controller.remote.TransactionalProtocolClient, org.jboss.threads.AsyncFuture<org.jboss.as.controller.client.OperationResponse>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field remoteClient:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
       4: aload_1
       5: if_acmpeq     19
       8: aload_2
       9: iconst_1
      10: invokeinterface #16,  2           // InterfaceMethod org/jboss/threads/AsyncFuture.cancel:(Z)Z
      15: pop
      16: goto          81
      19: aload_0
      20: getfield      #6                  // Field activeRequests:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #11                 // class java/util/Set
      32: astore_3
      33: aload_3
      34: ifnonnull     57
      37: new           #30                 // class java/util/HashSet
      40: dup
      41: invokespecial #31                 // Method java/util/HashSet."<init>":()V
      44: astore_3
      45: aload_0
      46: getfield      #6                  // Field activeRequests:Ljava/util/Map;
      49: aload_1
      50: aload_3
      51: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_3
      58: aload_2
      59: invokeinterface #33,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      64: pop
      65: aload_2
      66: new           #34                 // class org/jboss/as/host/controller/ManagedServerProxy$1
      69: dup
      70: aload_0
      71: aload_2
      72: invokespecial #35                 // Method org/jboss/as/host/controller/ManagedServerProxy$1."<init>":(Lorg/jboss/as/host/controller/ManagedServerProxy;Lorg/jboss/threads/AsyncFuture;)V
      75: aload_1
      76: invokeinterface #36,  3           // InterfaceMethod org/jboss/threads/AsyncFuture.addListener:(Lorg/jboss/threads/AsyncFuture$Listener;Ljava/lang/Object;)V
      81: return

  private synchronized void futureDone(org.jboss.as.controller.remote.TransactionalProtocolClient, org.jboss.threads.AsyncFuture<? extends org.jboss.as.controller.client.OperationResponse>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field activeRequests:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/util/Set
      13: astore_3
      14: aload_3
      15: ifnull        26
      18: aload_3
      19: aload_2
      20: invokeinterface #37,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      25: pop
      26: return

  static void access$000(org.jboss.as.host.controller.ManagedServerProxy, org.jboss.as.controller.remote.TransactionalProtocolClient, org.jboss.threads.AsyncFuture);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method futureDone:(Lorg/jboss/as/controller/remote/TransactionalProtocolClient;Lorg/jboss/threads/AsyncFuture;)V
       6: return

  static {};
    Code:
       0: new           #38                 // class org/jboss/as/host/controller/ManagedServerProxy$DisconnectedProtocolClient
       3: dup
       4: invokespecial #39                 // Method org/jboss/as/host/controller/ManagedServerProxy$DisconnectedProtocolClient."<init>":()V
       7: putstatic     #8                  // Field DISCONNECTED:Lorg/jboss/as/controller/remote/TransactionalProtocolClient;
      10: return
}
