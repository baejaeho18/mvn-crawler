Compiled from "DefaultCallbackHandler.java"
public class org.jboss.as.cli.operation.impl.DefaultCallbackHandler extends org.jboss.as.cli.operation.impl.ValidatingCallbackHandler implements org.jboss.as.cli.operation.ParsedCommandLine {
  private static final int SEPARATOR_NONE;

  private static final int SEPARATOR_NODE_TYPE_NAME;

  private static final int SEPARATOR_NODE;

  private static final int SEPARATOR_ADDRESS_OPERATION;

  private static final int SEPARATOR_OPERATION_ARGUMENTS;

  private static final int SEPARATOR_ARG_NAME_VALUE;

  private static final int SEPARATOR_ARG;

  private static final int SEPARATOR_ARG_LIST_END;

  private static final int SEPARATOR_HEADERS_START;

  private static final int SEPARATOR_HEADER;

  private static final org.jboss.as.cli.operation.impl.DefaultOperationRequestAddress EMPTY_ADDRESS;

  private int separator;

  private int lastSeparatorIndex;

  private int lastChunkIndex;

  private boolean operationComplete;

  private java.lang.String operationName;

  private org.jboss.as.cli.operation.OperationRequestAddress address;

  private boolean addressChanged;

  private java.util.Map<java.lang.String, java.lang.String> props;

  private java.util.List<java.lang.String> otherArgs;

  private java.lang.String outputTarget;

  private java.lang.String lastPropName;

  private java.lang.String lastPropValue;

  private java.lang.String lastHeaderName;

  private org.jboss.as.cli.CommandLineFormat format;

  private boolean validation;

  private java.lang.String originalLine;

  private java.lang.String substitutedLine;

  private java.util.LinkedHashMap<java.lang.String, org.jboss.as.cli.operation.ParsedOperationRequestHeader> headers;

  private org.jboss.as.cli.operation.ParsedOperationRequestHeader lastHeader;

  public org.jboss.as.cli.operation.impl.DefaultCallbackHandler();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.jboss.as.cli.operation.impl.DefaultCallbackHandler(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jboss/as/cli/operation/impl/ValidatingCallbackHandler."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field separator:I
       9: aload_0
      10: iconst_m1
      11: putfield      #5                  // Field lastSeparatorIndex:I
      14: aload_0
      15: iconst_0
      16: putfield      #6                  // Field lastChunkIndex:I
      19: aload_0
      20: invokestatic  #7                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      23: putfield      #8                  // Field props:Ljava/util/Map;
      26: aload_0
      27: invokestatic  #9                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      30: putfield      #10                 // Field otherArgs:Ljava/util/List;
      33: aload_0
      34: iload_1
      35: putfield      #11                 // Field validation:Z
      38: return

  public org.jboss.as.cli.operation.impl.DefaultCallbackHandler(org.jboss.as.cli.operation.OperationRequestAddress);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jboss/as/cli/operation/impl/ValidatingCallbackHandler."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field separator:I
       9: aload_0
      10: iconst_m1
      11: putfield      #5                  // Field lastSeparatorIndex:I
      14: aload_0
      15: iconst_0
      16: putfield      #6                  // Field lastChunkIndex:I
      19: aload_0
      20: invokestatic  #7                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      23: putfield      #8                  // Field props:Ljava/util/Map;
      26: aload_0
      27: invokestatic  #9                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      30: putfield      #10                 // Field otherArgs:Ljava/util/List;
      33: aload_0
      34: aload_1
      35: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      38: return

  public void parse(org.jboss.as.cli.operation.OperationRequestAddress, java.lang.String) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #13                 // Method parse:(Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;Lorg/jboss/as/cli/CommandContext;)V
       7: return

  public void parse(org.jboss.as.cli.operation.OperationRequestAddress, java.lang.String, org.jboss.as.cli.CommandContext) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method reset:()V
       4: aload_1
       5: ifnull        20
       8: aload_0
       9: new           #15                 // class org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress
      12: dup
      13: aload_1
      14: invokespecial #16                 // Method org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress."<init>":(Lorg/jboss/as/cli/operation/OperationRequestAddress;)V
      17: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      20: aload_0
      21: aload_2
      22: putfield      #17                 // Field originalLine:Ljava/lang/String;
      25: aload_0
      26: aload_2
      27: aload_0
      28: aload_0
      29: getfield      #11                 // Field validation:Z
      32: aload_3
      33: invokestatic  #18                 // Method org/jboss/as/cli/parsing/ParserUtil.parse:(Ljava/lang/String;Lorg/jboss/as/cli/operation/CommandLineParser$CallbackHandler;ZLorg/jboss/as/cli/CommandContext;)Ljava/lang/String;
      36: putfield      #19                 // Field substitutedLine:Ljava/lang/String;
      39: return

  public void parse(org.jboss.as.cli.operation.OperationRequestAddress, java.lang.String, boolean) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #20                 // Method parse:(Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;ZLorg/jboss/as/cli/CommandContext;)V
       8: return

  public void parse(org.jboss.as.cli.operation.OperationRequestAddress, java.lang.String, boolean, org.jboss.as.cli.CommandContext) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field validation:Z
       4: istore        5
       6: aload_0
       7: iload_3
       8: putfield      #11                 // Field validation:Z
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload         4
      16: invokevirtual #13                 // Method parse:(Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;Lorg/jboss/as/cli/CommandContext;)V
      19: aload_0
      20: iload         5
      22: putfield      #11                 // Field validation:Z
      25: goto          39
      28: astore        6
      30: aload_0
      31: iload         5
      33: putfield      #11                 // Field validation:Z
      36: aload         6
      38: athrow
      39: return
    Exception table:
       from    to  target type
          11    19    28   any
          28    30    28   any

  public void parseOperation(org.jboss.as.cli.operation.OperationRequestAddress, java.lang.String) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method reset:()V
       4: aload_0
       5: getstatic     #21                 // Field org/jboss/as/cli/parsing/operation/OperationFormat.INSTANCE:Lorg/jboss/as/cli/parsing/operation/OperationFormat;
       8: invokevirtual #22                 // Method setFormat:(Lorg/jboss/as/cli/CommandLineFormat;)V
      11: aload_1
      12: ifnull        27
      15: aload_0
      16: new           #15                 // class org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress
      19: dup
      20: aload_1
      21: invokespecial #16                 // Method org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress."<init>":(Lorg/jboss/as/cli/operation/OperationRequestAddress;)V
      24: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      27: aload_0
      28: getstatic     #21                 // Field org/jboss/as/cli/parsing/operation/OperationFormat.INSTANCE:Lorg/jboss/as/cli/parsing/operation/OperationFormat;
      31: invokevirtual #22                 // Method setFormat:(Lorg/jboss/as/cli/CommandLineFormat;)V
      34: aload_0
      35: aload_2
      36: putfield      #17                 // Field originalLine:Ljava/lang/String;
      39: aload_0
      40: aload_2
      41: aload_0
      42: invokestatic  #23                 // Method org/jboss/as/cli/parsing/ParserUtil.parseOperationRequest:(Ljava/lang/String;Lorg/jboss/as/cli/operation/CommandLineParser$CallbackHandler;)Ljava/lang/String;
      45: putfield      #19                 // Field substitutedLine:Ljava/lang/String;
      48: return

  public void parseHeaders(java.lang.String) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method reset:()V
       4: aload_0
       5: aload_1
       6: putfield      #17                 // Field originalLine:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: aload_0
      12: invokestatic  #24                 // Method org/jboss/as/cli/parsing/ParserUtil.parseHeaders:(Ljava/lang/String;Lorg/jboss/as/cli/operation/CommandLineParser$CallbackHandler;)Ljava/lang/String;
      15: putfield      #19                 // Field substitutedLine:Ljava/lang/String;
      18: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #25                 // Field operationComplete:Z
       5: aload_0
       6: aconst_null
       7: putfield      #26                 // Field operationName:Ljava/lang/String;
      10: aload_0
      11: aconst_null
      12: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      15: aload_0
      16: iconst_0
      17: putfield      #27                 // Field addressChanged:Z
      20: aload_0
      21: invokestatic  #7                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      24: putfield      #8                  // Field props:Ljava/util/Map;
      27: aload_0
      28: invokestatic  #9                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      31: putfield      #10                 // Field otherArgs:Ljava/util/List;
      34: aload_0
      35: aconst_null
      36: putfield      #28                 // Field outputTarget:Ljava/lang/String;
      39: aload_0
      40: aconst_null
      41: putfield      #29                 // Field lastPropName:Ljava/lang/String;
      44: aload_0
      45: aconst_null
      46: putfield      #30                 // Field lastPropValue:Ljava/lang/String;
      49: aload_0
      50: iconst_0
      51: putfield      #4                  // Field separator:I
      54: aload_0
      55: iconst_m1
      56: putfield      #5                  // Field lastSeparatorIndex:I
      59: aload_0
      60: iconst_0
      61: putfield      #6                  // Field lastChunkIndex:I
      64: aload_0
      65: aconst_null
      66: putfield      #31                 // Field format:Lorg/jboss/as/cli/CommandLineFormat;
      69: aload_0
      70: aconst_null
      71: putfield      #17                 // Field originalLine:Ljava/lang/String;
      74: aload_0
      75: aconst_null
      76: putfield      #19                 // Field substitutedLine:Ljava/lang/String;
      79: aload_0
      80: aconst_null
      81: putfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
      84: aload_0
      85: aconst_null
      86: putfield      #33                 // Field lastHeaderName:Ljava/lang/String;
      89: aload_0
      90: aconst_null
      91: putfield      #34                 // Field lastHeader:Lorg/jboss/as/cli/operation/ParsedOperationRequestHeader;
      94: return

  public java.lang.String getOriginalLine();
    Code:
       0: aload_0
       1: getfield      #17                 // Field originalLine:Ljava/lang/String;
       4: areturn

  public java.lang.String getSubstitutedLine();
    Code:
       0: aload_0
       1: getfield      #19                 // Field substitutedLine:Ljava/lang/String;
       4: areturn

  public java.util.List<java.lang.String> getOtherProperties();
    Code:
       0: aload_0
       1: getfield      #10                 // Field otherArgs:Ljava/util/List;
       4: areturn

  public boolean isRequestComplete();
    Code:
       0: aload_0
       1: getfield      #25                 // Field operationComplete:Z
       4: ireturn

  public boolean endsOnPropertySeparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean endsOnPropertyValueSeparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: iconst_5
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnPropertyListStart();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnPropertyListEnd();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: bipush        7
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean endsOnHeaderListStart();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: bipush        8
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean endsOnAddressOperationNameSeparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnNodeSeparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnNodeTypeNameSeparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean endsOnSeparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.jboss.as.cli.operation.OperationRequestAddress getAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
       4: ifnonnull     13
       7: getstatic     #35                 // Field EMPTY_ADDRESS:Lorg/jboss/as/cli/operation/impl/DefaultOperationRequestAddress;
      10: goto          17
      13: aload_0
      14: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      17: areturn

  public boolean hasOperationName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field operationName:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getOperationName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field operationName:Ljava/lang/String;
       4: areturn

  public boolean hasProperties();
    Code:
       0: aload_0
       1: getfield      #8                  // Field props:Ljava/util/Map;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          24
      12: aload_0
      13: getfield      #10                 // Field otherArgs:Ljava/util/List;
      16: invokeinterface #37,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean hasProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field props:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public void validatedNodeType(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
       4: ifnonnull     21
       7: aload_0
       8: new           #15                 // class org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress
      11: dup
      12: invokespecial #39                 // Method org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress."<init>":()V
      15: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      18: goto          65
      21: aload_0
      22: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      25: invokeinterface #40,  1           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.endsOnType:()Z
      30: ifeq          65
      33: new           #41                 // class org/jboss/as/cli/operation/OperationFormatException
      36: dup
      37: new           #42                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #44                 // String Can\'t proceed with node type \'
      46: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_2
      50: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #46                 // String \' until the node name for the previous node type has been specified.
      55: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #48                 // Method org/jboss/as/cli/operation/OperationFormatException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      69: aload_2
      70: invokeinterface #49,  2           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.toNodeType:(Ljava/lang/String;)V
      75: aload_0
      76: iconst_0
      77: putfield      #4                  // Field separator:I
      80: aload_0
      81: iload_1
      82: putfield      #6                  // Field lastChunkIndex:I
      85: return

  public void nodeTypeNameSeparator(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #5                  // Field lastSeparatorIndex:I
      10: return

  public void validatedNodeName(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
       4: ifnonnull     18
       7: aload_0
       8: new           #15                 // class org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress
      11: dup
      12: invokespecial #39                 // Method org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress."<init>":()V
      15: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      18: aload_0
      19: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      22: invokeinterface #40,  1           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.endsOnType:()Z
      27: ifne          71
      30: new           #41                 // class org/jboss/as/cli/operation/OperationFormatException
      33: dup
      34: new           #42                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #50                 // String Node path format is wrong around \'
      43: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #51                 // String \' (index=
      52: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_1
      56: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: ldc           #53                 // String ).
      61: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #48                 // Method org/jboss/as/cli/operation/OperationFormatException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      75: aload_2
      76: invokeinterface #54,  2           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.toNode:(Ljava/lang/String;)V
      81: aload_0
      82: iconst_0
      83: putfield      #4                  // Field separator:I
      86: aload_0
      87: iload_1
      88: putfield      #6                  // Field lastChunkIndex:I
      91: return

  public void nodeSeparator(int);
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #4                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #5                  // Field lastSeparatorIndex:I
      10: return

  public void addressOperationSeparator(int) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: iconst_1
       5: if_icmpne     35
       8: new           #55                 // class org/jboss/as/cli/CommandFormatException
      11: dup
      12: new           #42                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #56                 // String Node type is not complete at index
      21: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #57                 // Method org/jboss/as/cli/CommandFormatException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: iconst_3
      37: putfield      #4                  // Field separator:I
      40: aload_0
      41: iload_1
      42: putfield      #5                  // Field lastSeparatorIndex:I
      45: return

  public void operationName(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field validation:Z
       4: ifeq          16
       7: aload_0
       8: iload_1
       9: aload_2
      10: invokespecial #58                 // Method org/jboss/as/cli/operation/impl/ValidatingCallbackHandler.operationName:(ILjava/lang/String;)V
      13: goto          22
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokevirtual #59                 // Method validatedOperationName:(ILjava/lang/String;)V
      22: return

  public void validatedOperationName(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #26                 // Field operationName:Ljava/lang/String;
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field separator:I
      10: aload_0
      11: iload_1
      12: putfield      #6                  // Field lastChunkIndex:I
      15: return

  public void propertyListStart(int);
    Code:
       0: aload_0
       1: iconst_4
       2: putfield      #4                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #5                  // Field lastSeparatorIndex:I
      10: return

  public void propertyName(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field validation:Z
       4: ifeq          16
       7: aload_0
       8: iload_1
       9: aload_2
      10: invokespecial #60                 // Method org/jboss/as/cli/operation/impl/ValidatingCallbackHandler.propertyName:(ILjava/lang/String;)V
      13: goto          22
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokevirtual #61                 // Method validatedPropertyName:(ILjava/lang/String;)V
      22: return

  protected void validatedPropertyName(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: aload_2
       2: aconst_null
       3: invokespecial #62                 // Method putProperty:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_2
       8: putfield      #29                 // Field lastPropName:Ljava/lang/String;
      11: aload_0
      12: aconst_null
      13: putfield      #30                 // Field lastPropValue:Ljava/lang/String;
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field separator:I
      21: aload_0
      22: iload_1
      23: putfield      #6                  // Field lastChunkIndex:I
      26: return

  public void propertyNameValueSeparator(int);
    Code:
       0: aload_0
       1: iconst_5
       2: putfield      #4                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #5                  // Field lastSeparatorIndex:I
      10: return

  public void property(java.lang.String, java.lang.String, int) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field validation:Z
       4: ifeq          17
       7: aload_0
       8: aload_1
       9: aload_2
      10: iload_3
      11: invokespecial #63                 // Method org/jboss/as/cli/operation/impl/ValidatingCallbackHandler.property:(Ljava/lang/String;Ljava/lang/String;I)V
      14: goto          24
      17: aload_0
      18: aload_1
      19: aload_2
      20: iload_3
      21: invokevirtual #64                 // Method validatedProperty:(Ljava/lang/String;Ljava/lang/String;I)V
      24: return

  protected void validatedProperty(java.lang.String, java.lang.String, int) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aload_2
       6: invokespecial #65                 // Method addArgument:(Ljava/lang/String;)V
       9: goto          18
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #62                 // Method putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: putfield      #29                 // Field lastPropName:Ljava/lang/String;
      23: aload_0
      24: aload_2
      25: putfield      #30                 // Field lastPropValue:Ljava/lang/String;
      28: aload_0
      29: iconst_0
      30: putfield      #4                  // Field separator:I
      33: iload_3
      34: iflt          42
      37: aload_0
      38: iload_3
      39: putfield      #5                  // Field lastSeparatorIndex:I
      42: aload_0
      43: iload_3
      44: putfield      #6                  // Field lastChunkIndex:I
      47: return

  public void propertySeparator(int);
    Code:
       0: aload_0
       1: bipush        6
       3: putfield      #4                  // Field separator:I
       6: aload_0
       7: iload_1
       8: putfield      #5                  // Field lastSeparatorIndex:I
      11: aload_0
      12: aconst_null
      13: putfield      #29                 // Field lastPropName:Ljava/lang/String;
      16: aload_0
      17: aconst_null
      18: putfield      #30                 // Field lastPropValue:Ljava/lang/String;
      21: return

  public void propertyListEnd(int);
    Code:
       0: aload_0
       1: bipush        7
       3: putfield      #4                  // Field separator:I
       6: aload_0
       7: iload_1
       8: putfield      #5                  // Field lastSeparatorIndex:I
      11: aload_0
      12: aconst_null
      13: putfield      #29                 // Field lastPropName:Ljava/lang/String;
      16: aload_0
      17: aconst_null
      18: putfield      #30                 // Field lastPropValue:Ljava/lang/String;
      21: return

  public void headerListStart(int);
    Code:
       0: aload_0
       1: bipush        8
       3: putfield      #4                  // Field separator:I
       6: aload_0
       7: iload_1
       8: putfield      #5                  // Field lastSeparatorIndex:I
      11: return

  public void headerListEnd(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #5                  // Field lastSeparatorIndex:I
      10: aload_0
      11: iconst_1
      12: putfield      #25                 // Field operationComplete:Z
      15: return

  public void headerSeparator(int);
    Code:
       0: aload_0
       1: bipush        9
       3: putfield      #4                  // Field separator:I
       6: aload_0
       7: iload_1
       8: putfield      #5                  // Field lastSeparatorIndex:I
      11: return

  public void headerNameValueSeparator(int);
    Code:
       0: aload_0
       1: iconst_5
       2: putfield      #4                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #5                  // Field lastSeparatorIndex:I
      10: return

  public org.jboss.as.cli.parsing.ParsingStateCallbackHandler headerName(int, java.lang.String) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field separator:I
       5: aload_0
       6: iload_1
       7: putfield      #6                  // Field lastChunkIndex:I
      10: aload_0
      11: aload_2
      12: putfield      #33                 // Field lastHeaderName:Ljava/lang/String;
      15: aload_0
      16: aconst_null
      17: putfield      #34                 // Field lastHeader:Lorg/jboss/as/cli/operation/ParsedOperationRequestHeader;
      20: aload_2
      21: ldc           #66                 // String rollout
      23: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          38
      29: new           #68                 // class org/jboss/as/cli/parsing/operation/header/RolloutPlanHeaderCallbackHandler
      32: dup
      33: aload_0
      34: invokespecial #69                 // Method org/jboss/as/cli/parsing/operation/header/RolloutPlanHeaderCallbackHandler."<init>":(Lorg/jboss/as/cli/operation/impl/DefaultCallbackHandler;)V
      37: areturn
      38: aconst_null
      39: areturn

  public void header(java.lang.String, java.lang.String, int) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #70                 // class java/util/LinkedHashMap
      11: dup
      12: invokespecial #71                 // Method java/util/LinkedHashMap."<init>":()V
      15: putfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
      18: aload_0
      19: new           #72                 // class org/jboss/as/cli/operation/impl/SimpleParsedOperationRequestHeader
      22: dup
      23: aload_1
      24: aload_2
      25: invokespecial #73                 // Method org/jboss/as/cli/operation/impl/SimpleParsedOperationRequestHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      28: putfield      #34                 // Field lastHeader:Lorg/jboss/as/cli/operation/ParsedOperationRequestHeader;
      31: aload_0
      32: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
      35: aload_1
      36: aload_0
      37: getfield      #34                 // Field lastHeader:Lorg/jboss/as/cli/operation/ParsedOperationRequestHeader;
      40: invokevirtual #74                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_0
      45: iconst_0
      46: putfield      #4                  // Field separator:I
      49: aload_0
      50: iload_3
      51: iconst_1
      52: isub
      53: putfield      #5                  // Field lastSeparatorIndex:I
      56: aload_0
      57: iload_3
      58: putfield      #6                  // Field lastChunkIndex:I
      61: aload_0
      62: aconst_null
      63: putfield      #33                 // Field lastHeaderName:Ljava/lang/String;
      66: return

  public void header(org.jboss.as.cli.operation.ParsedOperationRequestHeader);
    Code:
       0: aload_0
       1: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #70                 // class java/util/LinkedHashMap
      11: dup
      12: invokespecial #71                 // Method java/util/LinkedHashMap."<init>":()V
      15: putfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
      18: aload_0
      19: aload_1
      20: putfield      #34                 // Field lastHeader:Lorg/jboss/as/cli/operation/ParsedOperationRequestHeader;
      23: aload_0
      24: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
      27: aload_1
      28: invokeinterface #75,  1           // InterfaceMethod org/jboss/as/cli/operation/ParsedOperationRequestHeader.getName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #74                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: iconst_0
      40: putfield      #4                  // Field separator:I
      43: aload_0
      44: aconst_null
      45: putfield      #33                 // Field lastHeaderName:Ljava/lang/String;
      48: return

  public boolean hasHeaders();
    Code:
       0: aload_0
       1: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #33                 // Field lastHeaderName:Ljava/lang/String;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean hasHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
       4: ifnull        22
       7: aload_0
       8: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
      11: aload_1
      12: invokevirtual #76                 // Method java/util/LinkedHashMap.containsKey:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public java.lang.String getLastHeaderName();
    Code:
       0: aload_0
       1: getfield      #33                 // Field lastHeaderName:Ljava/lang/String;
       4: areturn

  public java.util.Collection<org.jboss.as.cli.operation.ParsedOperationRequestHeader> getHeaders();
    Code:
       0: aload_0
       1: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
       4: ifnonnull     13
       7: invokestatic  #9                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: goto          20
      13: aload_0
      14: getfield      #32                 // Field headers:Ljava/util/LinkedHashMap;
      17: invokevirtual #77                 // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      20: areturn

  public org.jboss.as.cli.operation.ParsedOperationRequestHeader getLastHeader();
    Code:
       0: aload_0
       1: getfield      #34                 // Field lastHeader:Lorg/jboss/as/cli/operation/ParsedOperationRequestHeader;
       4: areturn

  public void rootNode(int) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field addressChanged:Z
       4: ifeq          34
       7: new           #41                 // class org/jboss/as/cli/operation/OperationFormatException
      10: dup
      11: new           #42                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #78                 // String Can\'t reset to root in the middle of the path @
      20: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: iload_1
      24: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #48                 // Method org/jboss/as/cli/operation/OperationFormatException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      38: ifnonnull     55
      41: aload_0
      42: new           #15                 // class org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress
      45: dup
      46: invokespecial #39                 // Method org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress."<init>":()V
      49: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      52: goto          64
      55: aload_0
      56: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      59: invokeinterface #79,  1           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.reset:()V
      64: aload_0
      65: iconst_0
      66: putfield      #4                  // Field separator:I
      69: aload_0
      70: iload_1
      71: putfield      #6                  // Field lastChunkIndex:I
      74: aload_0
      75: iconst_1
      76: putfield      #27                 // Field addressChanged:Z
      79: return

  public void parentNode(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
       4: ifnonnull     17
       7: new           #80                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #81                 // String The address hasn\'t been initialized yet.
      13: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      21: invokeinterface #83,  1           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.toParentNode:()Lorg/jboss/as/cli/operation/OperationRequestAddress$Node;
      26: pop
      27: aload_0
      28: iconst_0
      29: putfield      #4                  // Field separator:I
      32: aload_0
      33: iload_1
      34: putfield      #6                  // Field lastChunkIndex:I
      37: aload_0
      38: iconst_1
      39: putfield      #27                 // Field addressChanged:Z
      42: return

  public void nodeType(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
       4: ifnonnull     17
       7: new           #80                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #81                 // String The address hasn\'t been initialized yet.
      13: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      21: invokeinterface #84,  1           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.toNodeType:()Ljava/lang/String;
      26: pop
      27: aload_0
      28: iconst_0
      29: putfield      #4                  // Field separator:I
      32: aload_0
      33: iload_1
      34: putfield      #6                  // Field lastChunkIndex:I
      37: aload_0
      38: iconst_1
      39: putfield      #27                 // Field addressChanged:Z
      42: return

  public void nodeName(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field validation:Z
       4: ifeq          16
       7: aload_0
       8: iload_1
       9: aload_2
      10: invokespecial #85                 // Method org/jboss/as/cli/operation/impl/ValidatingCallbackHandler.nodeName:(ILjava/lang/String;)V
      13: goto          22
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokevirtual #86                 // Method validatedNodeName:(ILjava/lang/String;)V
      22: aload_0
      23: iconst_1
      24: putfield      #27                 // Field addressChanged:Z
      27: return

  public void nodeType(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field validation:Z
       4: ifeq          16
       7: aload_0
       8: iload_1
       9: aload_2
      10: invokespecial #87                 // Method org/jboss/as/cli/operation/impl/ValidatingCallbackHandler.nodeType:(ILjava/lang/String;)V
      13: goto          22
      16: aload_0
      17: iload_1
      18: aload_2
      19: invokevirtual #88                 // Method validatedNodeType:(ILjava/lang/String;)V
      22: aload_0
      23: iconst_1
      24: putfield      #27                 // Field addressChanged:Z
      27: return

  public void nodeTypeOrName(int, java.lang.String) throws org.jboss.as.cli.operation.OperationFormatException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
       4: ifnonnull     18
       7: aload_0
       8: new           #15                 // class org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress
      11: dup
      12: invokespecial #39                 // Method org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress."<init>":()V
      15: putfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      18: aload_0
      19: getfield      #12                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      22: invokeinterface #40,  1           // InterfaceMethod org/jboss/as/cli/operation/OperationRequestAddress.endsOnType:()Z
      27: ifeq          39
      30: aload_0
      31: iload_1
      32: aload_2
      33: invokevirtual #89                 // Method nodeName:(ILjava/lang/String;)V
      36: goto          45
      39: aload_0
      40: iload_1
      41: aload_2
      42: invokevirtual #90                 // Method nodeType:(ILjava/lang/String;)V
      45: aload_0
      46: iconst_0
      47: putfield      #4                  // Field separator:I
      50: aload_0
      51: iconst_1
      52: putfield      #27                 // Field addressChanged:Z
      55: return

  public java.util.Set<java.lang.String> getPropertyNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field props:Ljava/util/Map;
       4: invokeinterface #91,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.String getPropertyValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field props:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #92,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #93                 // class java/lang/String
      13: areturn

  public int getLastSeparatorIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lastSeparatorIndex:I
       4: ireturn

  public int getLastChunkIndex();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lastChunkIndex:I
       4: ireturn

  public void outputTarget(int, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #28                 // Field outputTarget:Ljava/lang/String;
       5: aload_0
       6: iload_1
       7: putfield      #6                  // Field lastChunkIndex:I
      10: return

  public java.lang.String getOutputTarget();
    Code:
       0: aload_0
       1: getfield      #28                 // Field outputTarget:Ljava/lang/String;
       4: areturn

  public java.lang.String getLastParsedPropertyName();
    Code:
       0: aload_0
       1: getfield      #29                 // Field lastPropName:Ljava/lang/String;
       4: areturn

  public java.lang.String getLastParsedPropertyValue();
    Code:
       0: aload_0
       1: getfield      #30                 // Field lastPropValue:Ljava/lang/String;
       4: areturn

  public org.jboss.dmr.ModelNode toOperationRequest(org.jboss.as.cli.CommandContext) throws org.jboss.as.cli.CommandFormatException;
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #94                 // Method org/jboss/as/cli/Util.toOperationRequest:(Lorg/jboss/as/cli/CommandContext;Lorg/jboss/as/cli/operation/ParsedCommandLine;)Lorg/jboss/dmr/ModelNode;
       5: areturn

  public void setFormat(org.jboss.as.cli.CommandLineFormat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field format:Lorg/jboss/as/cli/CommandLineFormat;
       5: return

  public org.jboss.as.cli.CommandLineFormat getFormat();
    Code:
       0: aload_0
       1: getfield      #31                 // Field format:Lorg/jboss/as/cli/CommandLineFormat;
       4: areturn

  public boolean endsOnHeaderSeparator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field separator:I
       4: bipush        9
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private void putProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field props:Ljava/util/Map;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          23
      12: aload_0
      13: new           #95                 // class java/util/HashMap
      16: dup
      17: invokespecial #96                 // Method java/util/HashMap."<init>":()V
      20: putfield      #8                  // Field props:Ljava/util/Map;
      23: aload_0
      24: getfield      #8                  // Field props:Ljava/util/Map;
      27: aload_1
      28: aload_2
      29: invokeinterface #97,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: return

  private void addArgument(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field otherArgs:Ljava/util/List;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          23
      12: aload_0
      13: new           #98                 // class java/util/ArrayList
      16: dup
      17: invokespecial #99                 // Method java/util/ArrayList."<init>":()V
      20: putfield      #10                 // Field otherArgs:Ljava/util/List;
      23: aload_0
      24: getfield      #10                 // Field otherArgs:Ljava/util/List;
      27: aload_1
      28: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: return

  static {};
    Code:
       0: new           #15                 // class org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress
       3: dup
       4: invokespecial #39                 // Method org/jboss/as/cli/operation/impl/DefaultOperationRequestAddress."<init>":()V
       7: putstatic     #35                 // Field EMPTY_ADDRESS:Lorg/jboss/as/cli/operation/impl/DefaultOperationRequestAddress;
      10: return
}
