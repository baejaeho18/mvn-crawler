Compiled from "LoggingLogger.java"
public interface org.jboss.as.logging.logging.LoggingLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.logging.logging.LoggingLogger ROOT_LOGGER;

  public abstract void errorSettingProperty(java.lang.Throwable, java.lang.String, java.lang.String);

  public abstract void unknownProperty(java.lang.String, java.lang.String);

  public abstract void failedToCloseResource(java.lang.Throwable, java.io.Closeable);

  public abstract void invalidPropertyAttribute(java.lang.String);

  public abstract java.lang.String pathManagerServiceNotStarted();

  public abstract void filterNotSupported();

  public abstract void loggingProfileNotFound(java.lang.String, org.jboss.as.server.deployment.module.ResourceRoot);

  public abstract void julConfigurationFileFound(java.lang.String);

  public abstract void replacingNamedHandler(java.lang.String);

  public abstract void replacingConfigurator(org.jboss.logmanager.Configurator);

  public abstract void logContextNotRemoved(org.jboss.logmanager.LogContext, java.lang.String);

  public abstract void perDeploymentPropertyDeprecated(java.lang.String, java.lang.String);

  public abstract void perLoggingDeploymentIgnored(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String cannotAccessClass(java.lang.Throwable, java.lang.String);

  public abstract java.lang.IllegalArgumentException cannotInstantiateClass(java.lang.Throwable, java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException cannotLoadModule(java.lang.Throwable, java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String cannotUnassignHandler(java.lang.String);

  public abstract java.lang.String classNotFound(java.lang.Throwable, java.lang.String);

  public abstract java.lang.IllegalArgumentException failedToSetHandlerEncoding(java.lang.Throwable, java.lang.String);

  public abstract java.lang.String handlerAlreadyDefined(java.lang.String);

  public abstract java.lang.IllegalArgumentException handlerNotFound(java.lang.String);

  public abstract java.lang.String invalidFilter(java.lang.String);

  public abstract java.lang.String invalidLogLevel(java.lang.String);

  public abstract java.lang.String invalidOverflowAction(java.lang.String);

  public abstract java.lang.String invalidSize(java.lang.String);

  public abstract java.lang.String invalidTargetName(java.util.EnumSet<org.jboss.as.logging.Target>);

  public abstract java.lang.String invalidValueTypeKey(java.lang.String, java.util.Collection<java.lang.String>);

  public abstract java.lang.String missingRequiredNestedFilterElement();

  public abstract java.lang.IllegalArgumentException unknownParameterType(java.lang.Class<?>, java.lang.String, java.lang.Class<?>);

  public abstract java.lang.String loggerNotFound(java.lang.String);

  public abstract java.lang.String invalidRelativeTo(java.lang.String);

  public abstract java.lang.String invalidPath(java.lang.String, java.lang.String);

  public abstract java.lang.String invalidSuffix(java.lang.String);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException failedToConfigureLogging(java.lang.Throwable, java.lang.String);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException errorProcessingLoggingConfiguration(java.lang.Throwable);

  public abstract org.jboss.as.controller.OperationFailedException handlerAttachedToHandlers(java.lang.String, java.util.Collection<java.lang.String>);

  public abstract org.jboss.as.controller.OperationFailedException handlerAttachedToLoggers(java.lang.String, java.util.Collection<java.lang.String>);

  public abstract java.lang.String cannotAddHandlerToSelf(java.lang.String);

  public abstract java.lang.IllegalStateException handlerClosed();

  public abstract java.lang.IllegalStateException handlerClosed(java.lang.String, java.lang.String);

  public abstract java.lang.String handlerConfigurationNotFound(java.lang.String);

  public abstract java.lang.String loggerConfigurationNotFound(java.lang.String);

  public abstract java.lang.UnsupportedOperationException unsupportedMethod(java.lang.String, java.lang.String);

  public abstract java.lang.RuntimeException failedToWriteConfigurationFile(java.lang.Throwable, java.io.File);

  public abstract java.lang.RuntimeException rollbackFailure(java.lang.Throwable);

  public abstract java.lang.IllegalArgumentException nullVar(java.lang.String);

  public abstract java.lang.IllegalArgumentException failedToLoadClass(java.lang.Throwable, java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException invalidProperty(java.lang.String, java.lang.String, java.lang.String, java.lang.Class<?>);

  public abstract java.lang.IllegalArgumentException failedToLocateConstructor(java.lang.Throwable, java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException cannotSetRemovedProperty(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException propertySetterNotFound(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException propertyTypeNotFound(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException propertyAlreadyRemoved(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String formatterNotFound(java.lang.String);

  public abstract java.lang.IllegalArgumentException unsupportedCharSet(java.lang.String);

  public abstract java.lang.IllegalArgumentException errorManagerNotFound(java.lang.String);

  public abstract java.lang.IllegalArgumentException nestedHandlersNotSupported(java.lang.Class<? extends java.util.logging.Handler>);

  public abstract java.lang.IllegalArgumentException loggerAlreadyExists(java.lang.String);

  public abstract java.lang.IllegalArgumentException formatterAlreadyExists(java.lang.String);

  public abstract java.lang.IllegalArgumentException filterAlreadyExists(java.lang.String);

  public abstract java.lang.IllegalArgumentException errorManagerAlreadyExists(java.lang.String);

  public abstract java.lang.IllegalArgumentException cannotAssignNullToPrimitive(java.lang.String, java.lang.Class<?>);

  public abstract java.lang.IllegalArgumentException truncatedFilterExpression();

  public abstract java.lang.IllegalArgumentException invalidEscapeFoundInFilterExpression();

  public abstract java.lang.IllegalArgumentException filterNotFound(java.lang.String);

  public abstract java.lang.IllegalArgumentException expectedIdentifier();

  public abstract java.lang.IllegalArgumentException expectedString();

  public abstract java.lang.IllegalArgumentException expected(java.lang.String);

  public abstract java.lang.IllegalArgumentException expected(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException unexpectedEnd();

  public abstract java.lang.IllegalArgumentException extraData();

  public abstract java.lang.IllegalStateException extensionNotInitialized();

  public abstract java.lang.RuntimeException failedToReadLogFile(java.lang.Throwable, java.lang.String);

  public abstract org.jboss.as.controller.registry.Resource$NoSuchResourceException logFileNotFound(java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException readNotAllowed(java.lang.String);

  public abstract java.lang.String suffixContainsMillis(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException invalidLogFile(java.lang.String);

  public abstract java.lang.UnsupportedOperationException cannotRegisterResourceOfType(java.lang.String);

  public abstract java.lang.UnsupportedOperationException cannotRemoveResourceOfType(java.lang.String);

  public abstract java.lang.IllegalArgumentException deploymentNameNotFound(org.jboss.as.controller.PathAddress);

  public abstract void errorProcessingLogDirectory(java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/logging/logging/LoggingLogger
       2: ldc           #2                  // String org.jboss.as.logging
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/logging/logging/LoggingLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/logging/logging/LoggingLogger;
      13: return
}
