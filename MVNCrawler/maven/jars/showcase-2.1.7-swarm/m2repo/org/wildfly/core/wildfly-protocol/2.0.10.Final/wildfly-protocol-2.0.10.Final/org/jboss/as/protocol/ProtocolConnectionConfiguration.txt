Compiled from "ProtocolConnectionConfiguration.java"
public class org.jboss.as.protocol.ProtocolConnectionConfiguration {
  private static final long DEFAULT_CONNECT_TIMEOUT;

  private static final java.lang.String JBOSS_CLIENT_SOCKET_BIND_ADDRESS;

  private java.net.URI uri;

  private org.jboss.remoting3.Endpoint endpoint;

  private org.xnio.OptionMap optionMap;

  private long connectionTimeout;

  private javax.security.auth.callback.CallbackHandler callbackHandler;

  private java.util.Map<java.lang.String, java.lang.String> saslOptions;

  private javax.net.ssl.SSLContext sslContext;

  private java.lang.String clientBindAddress;

  private org.jboss.as.protocol.ProtocolTimeoutHandler timeoutHandler;

  private boolean sslEnabled;

  private boolean useStartTLS;

  protected org.jboss.as.protocol.ProtocolConnectionConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       8: putfield      #3                  // Field optionMap:Lorg/xnio/OptionMap;
      11: aload_0
      12: ldc2_w        #5                  // long 5000l
      15: putfield      #7                  // Field connectionTimeout:J
      18: aload_0
      19: invokestatic  #8                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      22: putfield      #9                  // Field saslOptions:Ljava/util/Map;
      25: aload_0
      26: iconst_1
      27: putfield      #10                 // Field sslEnabled:Z
      30: aload_0
      31: iconst_1
      32: putfield      #11                 // Field useStartTLS:Z
      35: aload_0
      36: ldc           #12                 // String jboss.management.client_socket_bind_address
      38: invokestatic  #13                 // Method org/jboss/as/protocol/SecurityActions.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;
      41: putfield      #14                 // Field clientBindAddress:Ljava/lang/String;
      44: aload_0
      45: getfield      #14                 // Field clientBindAddress:Ljava/lang/String;
      48: ifnull        61
      51: getstatic     #15                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      54: ldc           #12                 // String jboss.management.client_socket_bind_address
      56: invokeinterface #16,  2           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.deprecatedCLIConfiguration:(Ljava/lang/String;)V
      61: return

  protected void validate();
    Code:
       0: aload_0
       1: getfield      #17                 // Field endpoint:Lorg/jboss/remoting3/Endpoint;
       4: ifnonnull     18
       7: getstatic     #15                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      10: ldc           #18                 // String endpoint
      12: invokeinterface #19,  2           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      17: athrow
      18: aload_0
      19: getfield      #3                  // Field optionMap:Lorg/xnio/OptionMap;
      22: ifnonnull     36
      25: getstatic     #15                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      28: ldc           #20                 // String optionMap
      30: invokeinterface #19,  2           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      35: athrow
      36: aload_0
      37: getfield      #21                 // Field uri:Ljava/net/URI;
      40: ifnonnull     54
      43: getstatic     #15                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      46: ldc           #22                 // String uri
      48: invokeinterface #19,  2           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      53: athrow
      54: return

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #21                 // Field uri:Ljava/net/URI;
       4: areturn

  public void setUri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field uri:Ljava/net/URI;
       5: ldc           #23                 // String http-remoting
       7: aload_1
       8: invokevirtual #24                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      11: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          30
      17: aload_0
      18: iconst_0
      19: putfield      #10                 // Field sslEnabled:Z
      22: aload_0
      23: iconst_0
      24: putfield      #11                 // Field useStartTLS:Z
      27: goto          52
      30: ldc           #26                 // String https-remoting
      32: aload_1
      33: invokevirtual #24                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      36: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          52
      42: aload_0
      43: iconst_1
      44: putfield      #10                 // Field sslEnabled:Z
      47: aload_0
      48: iconst_0
      49: putfield      #11                 // Field useStartTLS:Z
      52: return

  public org.jboss.remoting3.Endpoint getEndpoint();
    Code:
       0: aload_0
       1: getfield      #17                 // Field endpoint:Lorg/jboss/remoting3/Endpoint;
       4: areturn

  public void setEndpoint(org.jboss.remoting3.Endpoint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field endpoint:Lorg/jboss/remoting3/Endpoint;
       5: return

  public org.xnio.OptionMap getOptionMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field optionMap:Lorg/xnio/OptionMap;
       4: areturn

  public void setOptionMap(org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field optionMap:Lorg/xnio/OptionMap;
       5: return

  public long getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectionTimeout:J
       4: lreturn

  public void setConnectionTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field connectionTimeout:J
       5: return

  public javax.security.auth.callback.CallbackHandler getCallbackHandler();
    Code:
       0: aload_0
       1: getfield      #27                 // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       4: areturn

  public void setCallbackHandler(javax.security.auth.callback.CallbackHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getSaslOptions();
    Code:
       0: aload_0
       1: getfield      #9                  // Field saslOptions:Ljava/util/Map;
       4: areturn

  public void setSaslOptions(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field saslOptions:Ljava/util/Map;
       5: return

  public javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #28                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  public void setSslContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       5: return

  public java.lang.String getClientBindAddress();
    Code:
       0: aload_0
       1: getfield      #14                 // Field clientBindAddress:Ljava/lang/String;
       4: areturn

  public void setClientBindAddress(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: getfield      #14                 // Field clientBindAddress:Ljava/lang/String;
       8: ifnonnull     16
      11: aload_0
      12: aload_1
      13: putfield      #14                 // Field clientBindAddress:Ljava/lang/String;
      16: return

  public org.jboss.as.protocol.ProtocolTimeoutHandler getTimeoutHandler();
    Code:
       0: aload_0
       1: getfield      #29                 // Field timeoutHandler:Lorg/jboss/as/protocol/ProtocolTimeoutHandler;
       4: areturn

  public void setTimeoutHandler(org.jboss.as.protocol.ProtocolTimeoutHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field timeoutHandler:Lorg/jboss/as/protocol/ProtocolTimeoutHandler;
       5: return

  public boolean isSslEnabled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sslEnabled:Z
       4: ireturn

  public boolean isUseStartTLS();
    Code:
       0: aload_0
       1: getfield      #11                 // Field useStartTLS:Z
       4: ireturn

  public org.jboss.as.protocol.ProtocolConnectionConfiguration copy();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method copy:(Lorg/jboss/as/protocol/ProtocolConnectionConfiguration;)Lorg/jboss/as/protocol/ProtocolConnectionConfiguration;
       4: areturn

  public static org.jboss.as.protocol.ProtocolConnectionConfiguration create(org.jboss.remoting3.Endpoint, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
       5: invokestatic  #31                 // Method create:(Lorg/jboss/remoting3/Endpoint;Ljava/net/URI;Lorg/xnio/OptionMap;)Lorg/jboss/as/protocol/ProtocolConnectionConfiguration;
       8: areturn

  public static org.jboss.as.protocol.ProtocolConnectionConfiguration create(org.jboss.remoting3.Endpoint, java.net.URI, org.xnio.OptionMap);
    Code:
       0: new           #4                  // class org/jboss/as/protocol/ProtocolConnectionConfiguration
       3: dup
       4: invokespecial #32                 // Method "<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokevirtual #33                 // Method setEndpoint:(Lorg/jboss/remoting3/Endpoint;)V
      13: aload_3
      14: aload_1
      15: invokevirtual #34                 // Method setUri:(Ljava/net/URI;)V
      18: aload_3
      19: aload_2
      20: invokevirtual #35                 // Method setOptionMap:(Lorg/xnio/OptionMap;)V
      23: aload_3
      24: areturn

  public static org.jboss.as.protocol.ProtocolConnectionConfiguration copy(org.jboss.as.protocol.ProtocolConnectionConfiguration);
    Code:
       0: new           #4                  // class org/jboss/as/protocol/ProtocolConnectionConfiguration
       3: dup
       4: invokespecial #32                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #21                 // Field uri:Ljava/net/URI;
      13: putfield      #21                 // Field uri:Ljava/net/URI;
      16: aload_1
      17: aload_0
      18: getfield      #17                 // Field endpoint:Lorg/jboss/remoting3/Endpoint;
      21: putfield      #17                 // Field endpoint:Lorg/jboss/remoting3/Endpoint;
      24: aload_1
      25: aload_0
      26: getfield      #3                  // Field optionMap:Lorg/xnio/OptionMap;
      29: putfield      #3                  // Field optionMap:Lorg/xnio/OptionMap;
      32: aload_1
      33: aload_0
      34: getfield      #7                  // Field connectionTimeout:J
      37: putfield      #7                  // Field connectionTimeout:J
      40: aload_1
      41: aload_0
      42: getfield      #27                 // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
      45: putfield      #27                 // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
      48: aload_1
      49: aload_0
      50: getfield      #9                  // Field saslOptions:Ljava/util/Map;
      53: putfield      #9                  // Field saslOptions:Ljava/util/Map;
      56: aload_1
      57: aload_0
      58: getfield      #28                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      61: putfield      #28                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      64: aload_1
      65: aload_0
      66: getfield      #14                 // Field clientBindAddress:Ljava/lang/String;
      69: putfield      #14                 // Field clientBindAddress:Ljava/lang/String;
      72: aload_1
      73: aload_0
      74: getfield      #29                 // Field timeoutHandler:Lorg/jboss/as/protocol/ProtocolTimeoutHandler;
      77: putfield      #29                 // Field timeoutHandler:Lorg/jboss/as/protocol/ProtocolTimeoutHandler;
      80: aload_1
      81: aload_0
      82: getfield      #10                 // Field sslEnabled:Z
      85: putfield      #10                 // Field sslEnabled:Z
      88: aload_1
      89: aload_0
      90: getfield      #11                 // Field useStartTLS:Z
      93: putfield      #11                 // Field useStartTLS:Z
      96: aload_1
      97: areturn
}
