Compiled from "ManagementPermissionCollection.java"
public class org.jboss.as.controller.access.permission.ManagementPermissionCollection extends java.security.PermissionCollection {
  private final java.lang.Class<? extends org.jboss.as.controller.access.permission.ManagementPermission> type;

  private final java.lang.String name;

  private final java.util.Map<org.jboss.as.controller.access.Action$ActionEffect, org.jboss.as.controller.access.permission.ManagementPermission> permissions;

  public org.jboss.as.controller.access.permission.ManagementPermissionCollection(java.lang.Class<? extends org.jboss.as.controller.access.permission.ManagementPermission>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Class;)V
       6: return

  public org.jboss.as.controller.access.permission.ManagementPermissionCollection(java.lang.String, java.lang.Class<? extends org.jboss.as.controller.access.permission.ManagementPermission>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/security/PermissionCollection."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field permissions:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field name:Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: putfield      #7                  // Field type:Ljava/lang/Class;
      25: return

  public void add(java.security.Permission);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method isReadOnly:()Z
       4: ifeq          16
       7: getstatic     #9                  // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
      10: invokeinterface #10,  1           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.permissionCollectionIsReadOnly:()Ljava/lang/SecurityException;
      15: athrow
      16: aload_0
      17: getfield      #7                  // Field type:Ljava/lang/Class;
      20: aload_1
      21: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      27: ifeq          72
      30: aload_1
      31: checkcast     #13                 // class org/jboss/as/controller/access/permission/ManagementPermission
      34: astore_2
      35: aload_0
      36: getfield      #5                  // Field permissions:Ljava/util/Map;
      39: dup
      40: astore_3
      41: monitorenter
      42: aload_0
      43: getfield      #5                  // Field permissions:Ljava/util/Map;
      46: aload_2
      47: invokevirtual #14                 // Method org/jboss/as/controller/access/permission/ManagementPermission.getActionEffect:()Lorg/jboss/as/controller/access/Action$ActionEffect;
      50: aload_2
      51: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_3
      58: monitorexit
      59: goto          69
      62: astore        4
      64: aload_3
      65: monitorexit
      66: aload         4
      68: athrow
      69: goto          85
      72: getstatic     #9                  // Field org/jboss/as/controller/logging/ControllerLogger.ROOT_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
      75: aload_1
      76: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      79: invokeinterface #16,  2           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.incompatiblePermissionType:(Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
      84: athrow
      85: return
    Exception table:
       from    to  target type
          42    59    62   any
          62    66    62   any

  public boolean implies(java.security.Permission);
    Code:
       0: aload_1
       1: instanceof    #13                 // class org/jboss/as/controller/access/permission/ManagementPermission
       4: ifeq          104
       7: aload_1
       8: checkcast     #13                 // class org/jboss/as/controller/access/permission/ManagementPermission
      11: astore_2
      12: aload_2
      13: invokevirtual #14                 // Method org/jboss/as/controller/access/permission/ManagementPermission.getActionEffect:()Lorg/jboss/as/controller/access/Action$ActionEffect;
      16: astore_3
      17: aload_0
      18: getfield      #5                  // Field permissions:Ljava/util/Map;
      21: dup
      22: astore        5
      24: monitorenter
      25: aload_0
      26: getfield      #5                  // Field permissions:Ljava/util/Map;
      29: aload_3
      30: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #13                 // class org/jboss/as/controller/access/permission/ManagementPermission
      38: astore        4
      40: aload         5
      42: monitorexit
      43: goto          54
      46: astore        6
      48: aload         5
      50: monitorexit
      51: aload         6
      53: athrow
      54: aload         4
      56: ifnonnull     76
      59: getstatic     #18                 // Field org/jboss/as/controller/logging/ControllerLogger.ACCESS_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
      62: ldc           #19                 // String Permission collection \'%s\' does not provide a permission for %s
      64: aload_0
      65: getfield      #6                  // Field name:Ljava/lang/String;
      68: aload_3
      69: invokeinterface #20,  4           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      74: iconst_0
      75: ireturn
      76: aload         4
      78: aload_2
      79: invokevirtual #21                 // Method org/jboss/as/controller/access/permission/ManagementPermission.implies:(Ljava/security/Permission;)Z
      82: ifne          102
      85: getstatic     #18                 // Field org/jboss/as/controller/logging/ControllerLogger.ACCESS_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
      88: ldc           #22                 // String Permission provided in collection \'%s\' for action %s does not imply the requested permission
      90: aload_0
      91: getfield      #6                  // Field name:Ljava/lang/String;
      94: aload_3
      95: invokeinterface #20,  4           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     100: iconst_0
     101: ireturn
     102: iconst_1
     103: ireturn
     104: getstatic     #18                 // Field org/jboss/as/controller/logging/ControllerLogger.ACCESS_LOGGER:Lorg/jboss/as/controller/logging/ControllerLogger;
     107: ldc           #23                 // String Permission collection %s does not imply %s as it is not a ManagementPermission
     109: aload_0
     110: getfield      #6                  // Field name:Ljava/lang/String;
     113: aload_1
     114: invokeinterface #20,  4           // InterfaceMethod org/jboss/as/controller/logging/ControllerLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     119: iconst_0
     120: ireturn
    Exception table:
       from    to  target type
          25    43    46   any
          46    51    46   any

  public java.util.Enumeration<java.security.Permission> elements();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method iterator:()Ljava/util/Iterator;
       4: astore_1
       5: new           #25                 // class org/jboss/as/controller/access/permission/ManagementPermissionCollection$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #26                 // Method org/jboss/as/controller/access/permission/ManagementPermissionCollection$1."<init>":(Lorg/jboss/as/controller/access/permission/ManagementPermissionCollection;Ljava/util/Iterator;)V
      14: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field name:Ljava/lang/String;
       4: areturn

  private java.util.Iterator<org.jboss.as.controller.access.permission.ManagementPermission> iterator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field permissions:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field permissions:Ljava/util/Map;
      11: invokeinterface #27,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      16: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: aload_1
      22: monitorexit
      23: areturn
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           7    23    24   any
          24    27    24   any
}
