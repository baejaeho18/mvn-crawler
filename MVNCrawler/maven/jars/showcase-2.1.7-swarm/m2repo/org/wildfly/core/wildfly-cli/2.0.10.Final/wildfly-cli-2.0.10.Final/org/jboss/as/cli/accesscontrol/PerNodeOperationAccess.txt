Compiled from "PerNodeOperationAccess.java"
public class org.jboss.as.cli.accesscontrol.PerNodeOperationAccess extends org.jboss.as.cli.accesscontrol.BaseOperationAccessRequirement {
  private static final java.lang.Boolean[] EMPTY_BARR;

  private final java.lang.String nodeType;

  private java.util.List<java.lang.String> nodeNames;

  private java.lang.Boolean[] stateOn;

  private java.util.List<java.lang.String> allowedOn;

  org.jboss.as.cli.accesscontrol.PerNodeOperationAccess(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/jboss/as/cli/accesscontrol/BaseOperationAccessRequirement."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: putfield      #3                  // Field nodeNames:Ljava/util/List;
      12: aload_0
      13: aconst_null
      14: putfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      17: aload_1
      18: ifnonnull     30
      21: new           #5                  // class java/lang/IllegalArgumentException
      24: dup
      25: aload_1
      26: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: aload_1
      32: putfield      #7                  // Field nodeType:Ljava/lang/String;
      35: return

  public org.jboss.as.cli.accesscontrol.PerNodeOperationAccess(org.jboss.as.cli.CommandContext, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       8: aload_1
       9: aload_0
      10: invokeinterface #9,  2            // InterfaceMethod org/jboss/as/cli/CommandContext.addEventListener:(Lorg/jboss/as/cli/CliEventListener;)V
      15: return

  org.jboss.as.cli.accesscontrol.PerNodeOperationAccess(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #10                 // Method org/jboss/as/cli/accesscontrol/BaseOperationAccessRequirement."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: putfield      #3                  // Field nodeNames:Ljava/util/List;
      13: aload_0
      14: aconst_null
      15: putfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      18: aload_1
      19: ifnonnull     31
      22: new           #5                  // class java/lang/IllegalArgumentException
      25: dup
      26: aload_1
      27: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_1
      33: putfield      #7                  // Field nodeType:Ljava/lang/String;
      36: return

  org.jboss.as.cli.accesscontrol.PerNodeOperationAccess(java.lang.String, org.jboss.as.cli.operation.OperationRequestAddress, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #11                 // Method org/jboss/as/cli/accesscontrol/BaseOperationAccessRequirement."<init>":(Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: putfield      #3                  // Field nodeNames:Ljava/util/List;
      13: aload_0
      14: aconst_null
      15: putfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      18: aload_1
      19: ifnonnull     31
      22: new           #5                  // class java/lang/IllegalArgumentException
      25: dup
      26: aload_1
      27: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_1
      33: putfield      #7                  // Field nodeType:Ljava/lang/String;
      36: return

  public void resetState();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field nodeNames:Ljava/util/List;
       5: aload_0
       6: aconst_null
       7: putfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      10: aload_0
      11: aconst_null
      12: putfield      #12                 // Field allowedOn:Ljava/util/List;
      15: return

  public java.util.List<java.lang.String> getAllowedOn(org.jboss.as.cli.CommandContext);
    Code:
       0: aload_0
       1: getfield      #12                 // Field allowedOn:Ljava/util/List;
       4: ifnonnull     70
       7: aload_1
       8: invokeinterface #13,  1           // InterfaceMethod org/jboss/as/cli/CommandContext.getConfig:()Lorg/jboss/as/cli/CliConfig;
      13: invokeinterface #14,  1           // InterfaceMethod org/jboss/as/cli/CliConfig.isAccessControl:()Z
      18: ifeq          52
      21: aload_0
      22: getfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      25: ifnonnull     39
      28: aload_0
      29: aload_1
      30: invokeinterface #15,  1           // InterfaceMethod org/jboss/as/cli/CommandContext.getModelControllerClient:()Lorg/jboss/as/controller/client/ModelControllerClient;
      35: invokevirtual #16                 // Method initList:(Lorg/jboss/as/controller/client/ModelControllerClient;)Z
      38: pop
      39: aload_0
      40: aload_1
      41: invokeinterface #15,  1           // InterfaceMethod org/jboss/as/cli/CommandContext.getModelControllerClient:()Lorg/jboss/as/controller/client/ModelControllerClient;
      46: invokevirtual #17                 // Method completeAllowedOn:(Lorg/jboss/as/controller/client/ModelControllerClient;)V
      49: goto          70
      52: aload_0
      53: aload_1
      54: invokeinterface #15,  1           // InterfaceMethod org/jboss/as/cli/CommandContext.getModelControllerClient:()Lorg/jboss/as/controller/client/ModelControllerClient;
      59: aconst_null
      60: aload_0
      61: getfield      #7                  // Field nodeType:Ljava/lang/String;
      64: invokestatic  #18                 // Method org/jboss/as/cli/Util.getNodeNames:(Lorg/jboss/as/controller/client/ModelControllerClient;Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;)Ljava/util/List;
      67: putfield      #12                 // Field allowedOn:Ljava/util/List;
      70: aload_0
      71: getfield      #12                 // Field allowedOn:Ljava/util/List;
      74: areturn

  protected boolean checkAccess(org.jboss.as.cli.CommandContext);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod org/jboss/as/cli/CommandContext.getModelControllerClient:()Lorg/jboss/as/controller/client/ModelControllerClient;
       6: astore_2
       7: aload_2
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokeinterface #19,  1           // InterfaceMethod org/jboss/as/cli/CommandContext.isDomainMode:()Z
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_2
      26: invokevirtual #16                 // Method initList:(Lorg/jboss/as/controller/client/ModelControllerClient;)Z
      29: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #20                 // Field toString:Ljava/lang/String;
       4: ifnonnull     44
       7: new           #21                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      14: astore_1
      15: aload_1
      16: aload_0
      17: getfield      #7                  // Field nodeType:Ljava/lang/String;
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #24                 // String =*
      25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokespecial #25                 // Method org/jboss/as/cli/accesscontrol/BaseOperationAccessRequirement.toString:()Ljava/lang/String;
      32: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_0
      37: aload_1
      38: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: putfield      #20                 // Field toString:Ljava/lang/String;
      44: aload_0
      45: getfield      #20                 // Field toString:Ljava/lang/String;
      48: areturn

  protected boolean initList(org.jboss.as.controller.client.ModelControllerClient);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_0
       4: getfield      #7                  // Field nodeType:Ljava/lang/String;
       7: invokestatic  #18                 // Method org/jboss/as/cli/Util.getNodeNames:(Lorg/jboss/as/controller/client/ModelControllerClient;Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;)Ljava/util/List;
      10: putfield      #3                  // Field nodeNames:Ljava/util/List;
      13: aload_0
      14: getfield      #3                  // Field nodeNames:Ljava/util/List;
      17: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      22: ifeq          42
      25: aload_0
      26: aload_0
      27: getfield      #3                  // Field nodeNames:Ljava/util/List;
      30: putfield      #12                 // Field allowedOn:Ljava/util/List;
      33: aload_0
      34: getstatic     #28                 // Field EMPTY_BARR:[Ljava/lang/Boolean;
      37: putfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      40: iconst_0
      41: ireturn
      42: aload_0
      43: aload_0
      44: getfield      #3                  // Field nodeNames:Ljava/util/List;
      47: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      52: anewarray     #30                 // class java/lang/Boolean
      55: putfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      58: iconst_2
      59: anewarray     #31                 // class java/lang/String
      62: astore_2
      63: aload_2
      64: iconst_0
      65: aload_0
      66: getfield      #7                  // Field nodeType:Ljava/lang/String;
      69: aastore
      70: iconst_0
      71: istore_3
      72: iload_3
      73: aload_0
      74: getfield      #3                  // Field nodeNames:Ljava/util/List;
      77: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      82: if_icmpge     145
      85: aload_2
      86: iconst_1
      87: aload_0
      88: getfield      #3                  // Field nodeNames:Ljava/util/List;
      91: iload_3
      92: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      97: checkcast     #31                 // class java/lang/String
     100: aastore
     101: aload_1
     102: aload_2
     103: aload_0
     104: getfield      #33                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
     107: aload_0
     108: getfield      #34                 // Field operation:Ljava/lang/String;
     111: invokestatic  #35                 // Method org/jboss/as/cli/accesscontrol/CLIAccessControl.isExecute:(Lorg/jboss/as/controller/client/ModelControllerClient;[Ljava/lang/String;Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;)Z
     114: ifeq          129
     117: aload_0
     118: getfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
     121: iload_3
     122: iconst_1
     123: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     126: aastore
     127: iconst_1
     128: ireturn
     129: aload_0
     130: getfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
     133: iload_3
     134: iconst_0
     135: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     138: aastore
     139: iinc          3, 1
     142: goto          72
     145: iconst_0
     146: ireturn

  protected void completeAllowedOn(org.jboss.as.controller.client.ModelControllerClient);
    Code:
       0: aload_0
       1: getfield      #3                  // Field nodeNames:Ljava/util/List;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          21
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field nodeNames:Ljava/util/List;
      17: putfield      #12                 // Field allowedOn:Ljava/util/List;
      20: return
      21: aload_0
      22: new           #37                 // class java/util/ArrayList
      25: dup
      26: aload_0
      27: getfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      30: arraylength
      31: invokespecial #38                 // Method java/util/ArrayList."<init>":(I)V
      34: putfield      #12                 // Field allowedOn:Ljava/util/List;
      37: iconst_2
      38: anewarray     #31                 // class java/lang/String
      41: astore_2
      42: aload_2
      43: iconst_0
      44: aload_0
      45: getfield      #7                  // Field nodeType:Ljava/lang/String;
      48: aastore
      49: iconst_0
      50: istore_3
      51: iload_3
      52: aload_0
      53: getfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      56: arraylength
      57: if_icmpge     149
      60: aload_0
      61: getfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
      64: iload_3
      65: aaload
      66: astore        4
      68: aload         4
      70: ifnonnull     115
      73: aload_2
      74: iconst_1
      75: aload_0
      76: getfield      #3                  // Field nodeNames:Ljava/util/List;
      79: iload_3
      80: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      85: checkcast     #31                 // class java/lang/String
      88: aastore
      89: aload_1
      90: aload_2
      91: aload_0
      92: getfield      #33                 // Field address:Lorg/jboss/as/cli/operation/OperationRequestAddress;
      95: aload_0
      96: getfield      #34                 // Field operation:Ljava/lang/String;
      99: invokestatic  #35                 // Method org/jboss/as/cli/accesscontrol/CLIAccessControl.isExecute:(Lorg/jboss/as/controller/client/ModelControllerClient;[Ljava/lang/String;Lorg/jboss/as/cli/operation/OperationRequestAddress;Ljava/lang/String;)Z
     102: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     105: astore        4
     107: aload_0
     108: getfield      #4                  // Field stateOn:[Ljava/lang/Boolean;
     111: iload_3
     112: aload         4
     114: aastore
     115: aload         4
     117: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
     120: ifeq          143
     123: aload_0
     124: getfield      #12                 // Field allowedOn:Ljava/util/List;
     127: aload_0
     128: getfield      #3                  // Field nodeNames:Ljava/util/List;
     131: iload_3
     132: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     137: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     142: pop
     143: iinc          3, 1
     146: goto          51
     149: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #30                 // class java/lang/Boolean
       4: putstatic     #28                 // Field EMPTY_BARR:[Ljava/lang/Boolean;
       7: return
}
