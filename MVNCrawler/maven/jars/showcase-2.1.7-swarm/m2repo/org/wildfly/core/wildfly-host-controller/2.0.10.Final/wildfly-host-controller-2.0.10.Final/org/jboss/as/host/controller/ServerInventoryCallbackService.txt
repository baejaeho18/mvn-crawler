Compiled from "ServerInventoryCallbackService.java"
class org.jboss.as.host.controller.ServerInventoryCallbackService implements javax.security.auth.callback.CallbackHandler, org.jboss.msc.service.Service<javax.security.auth.callback.CallbackHandler> {
  static final org.jboss.msc.service.ServiceName SERVICE_NAME;

  private volatile javax.security.auth.callback.CallbackHandler callbackHandler;

  org.jboss.as.host.controller.ServerInventoryCallbackService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static void install(org.jboss.msc.service.ServiceTarget);
    Code:
       0: new           #2                  // class org/jboss/as/host/controller/ServerInventoryCallbackService
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: getstatic     #4                  // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      12: aload_1
      13: invokeinterface #5,  3            // InterfaceMethod org/jboss/msc/service/ServiceTarget.addService:(Lorg/jboss/msc/service/ServiceName;Lorg/jboss/msc/service/Service;)Lorg/jboss/msc/service/ServiceBuilder;
      18: getstatic     #6                  // Field org/jboss/msc/service/ServiceController$Mode.ON_DEMAND:Lorg/jboss/msc/service/ServiceController$Mode;
      21: invokeinterface #7,  2            // InterfaceMethod org/jboss/msc/service/ServiceBuilder.setInitialMode:(Lorg/jboss/msc/service/ServiceController$Mode;)Lorg/jboss/msc/service/ServiceBuilder;
      26: invokeinterface #8,  1            // InterfaceMethod org/jboss/msc/service/ServiceBuilder.install:()Lorg/jboss/msc/service/ServiceController;
      31: pop
      32: return

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: return

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: return

  public javax.security.auth.callback.CallbackHandler getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: areturn

  protected void setCallbackHandler(javax.security.auth.callback.CallbackHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       5: return

  public void handle(javax.security.auth.callback.Callback[]) throws java.io.IOException, javax.security.auth.callback.UnsupportedCallbackException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field callbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: aload_1
      11: invokeinterface #10,  2           // InterfaceMethod javax/security/auth/callback/CallbackHandler.handle:([Ljavax/security/auth/callback/Callback;)V
      16: return

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getValue:()Ljavax/security/auth/callback/CallbackHandler;
       4: areturn

  static {};
    Code:
       0: getstatic     #12                 // Field org/jboss/as/host/controller/ServerInventoryService.SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
       3: iconst_1
       4: anewarray     #13                 // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #14                 // String callback
      11: aastore
      12: invokevirtual #15                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      15: putstatic     #4                  // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      18: return
}
