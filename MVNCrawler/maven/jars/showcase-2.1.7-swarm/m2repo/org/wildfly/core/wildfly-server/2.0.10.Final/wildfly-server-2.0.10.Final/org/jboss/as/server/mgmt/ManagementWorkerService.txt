Compiled from "ManagementWorkerService.java"
public class org.jboss.as.server.mgmt.ManagementWorkerService implements org.jboss.msc.service.Service<org.xnio.XnioWorker> {
  public static final org.jboss.msc.service.ServiceName SERVICE_NAME;

  private final org.xnio.OptionMap options;

  private org.xnio.XnioWorker worker;

  private volatile org.jboss.msc.service.StopContext stopContext;

  static final boolean $assertionsDisabled;

  private org.jboss.as.server.mgmt.ManagementWorkerService(org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field options:Lorg/xnio/OptionMap;
       9: return

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: invokestatic  #3                  // Method org/xnio/Xnio.getInstance:()Lorg/xnio/Xnio;
       3: astore_2
       4: aload_0
       5: aload_2
       6: aconst_null
       7: aload_0
       8: getfield      #2                  // Field options:Lorg/xnio/OptionMap;
      11: aload_0
      12: invokedynamic #4,  0              // InvokeDynamic #0:run:(Lorg/jboss/as/server/mgmt/ManagementWorkerService;)Ljava/lang/Runnable;
      17: invokevirtual #5                  // Method org/xnio/Xnio.createWorker:(Ljava/lang/ThreadGroup;Lorg/xnio/OptionMap;Ljava/lang/Runnable;)Lorg/xnio/XnioWorker;
      20: putfield      #6                  // Field worker:Lorg/xnio/XnioWorker;
      23: goto          36
      26: astore_3
      27: new           #8                  // class org/jboss/msc/service/StartException
      30: dup
      31: aload_3
      32: invokespecial #9                  // Method org/jboss/msc/service/StartException."<init>":(Ljava/lang/Throwable;)V
      35: athrow
      36: return
    Exception table:
       from    to  target type
           4    23    26   Class java/io/IOException

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field stopContext:Lorg/jboss/msc/service/StopContext;
       5: aload_1
       6: invokeinterface #11,  1           // InterfaceMethod org/jboss/msc/service/StopContext.asynchronous:()V
      11: aload_0
      12: getfield      #6                  // Field worker:Lorg/xnio/XnioWorker;
      15: invokevirtual #12                 // Method org/xnio/XnioWorker.shutdown:()V
      18: aload_0
      19: aconst_null
      20: putfield      #6                  // Field worker:Lorg/xnio/XnioWorker;
      23: return

  private void stopDone();
    Code:
       0: aload_0
       1: getfield      #10                 // Field stopContext:Lorg/jboss/msc/service/StopContext;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #10                 // Field stopContext:Lorg/jboss/msc/service/StopContext;
      10: getstatic     #13                 // Field $assertionsDisabled:Z
      13: ifne          28
      16: aload_1
      17: ifnonnull     28
      20: new           #14                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #15                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_1
      29: invokeinterface #16,  1           // InterfaceMethod org/jboss/msc/service/StopContext.complete:()V
      34: return

  public org.xnio.XnioWorker getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field worker:Lorg/xnio/XnioWorker;
       4: areturn

  public static void installService(org.jboss.msc.service.ServiceTarget);
    Code:
       0: new           #17                 // class org/jboss/as/server/mgmt/ManagementWorkerService
       3: dup
       4: invokestatic  #18                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
       7: getstatic     #19                 // Field org/xnio/Options.WORKER_IO_THREADS:Lorg/xnio/Option;
      10: iconst_2
      11: invokevirtual #20                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      14: getstatic     #21                 // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      17: iconst_5
      18: invokevirtual #20                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      21: getstatic     #22                 // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      24: bipush        10
      26: invokevirtual #20                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      29: getstatic     #23                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      32: iconst_1
      33: invokevirtual #24                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      36: getstatic     #25                 // Field org/xnio/Options.CORK:Lorg/xnio/Option;
      39: iconst_1
      40: invokevirtual #24                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      43: getstatic     #26                 // Field org/xnio/Options.WORKER_NAME:Lorg/xnio/Option;
      46: ldc           #27                 // String management
      48: invokevirtual #28                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap$Builder;
      51: invokevirtual #29                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      54: invokespecial #30                 // Method "<init>":(Lorg/xnio/OptionMap;)V
      57: astore_1
      58: aload_0
      59: getstatic     #31                 // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      62: aload_1
      63: invokeinterface #32,  3           // InterfaceMethod org/jboss/msc/service/ServiceTarget.addService:(Lorg/jboss/msc/service/ServiceName;Lorg/jboss/msc/service/Service;)Lorg/jboss/msc/service/ServiceBuilder;
      68: getstatic     #33                 // Field org/jboss/msc/service/ServiceController$Mode.ON_DEMAND:Lorg/jboss/msc/service/ServiceController$Mode;
      71: invokeinterface #34,  2           // InterfaceMethod org/jboss/msc/service/ServiceBuilder.setInitialMode:(Lorg/jboss/msc/service/ServiceController$Mode;)Lorg/jboss/msc/service/ServiceBuilder;
      76: invokeinterface #35,  1           // InterfaceMethod org/jboss/msc/service/ServiceBuilder.install:()Lorg/jboss/msc/service/ServiceController;
      81: pop
      82: return

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getValue:()Lorg/xnio/XnioWorker;
       4: areturn

  static {};
    Code:
       0: ldc           #17                 // class org/jboss/as/server/mgmt/ManagementWorkerService
       2: invokevirtual #37                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #13                 // Field $assertionsDisabled:Z
      16: getstatic     #38                 // Field org/jboss/msc/service/ServiceName.JBOSS:Lorg/jboss/msc/service/ServiceName;
      19: iconst_4
      20: anewarray     #39                 // class java/lang/String
      23: dup
      24: iconst_0
      25: ldc           #40                 // String serverManagement
      27: aastore
      28: dup
      29: iconst_1
      30: ldc           #41                 // String controller
      32: aastore
      33: dup
      34: iconst_2
      35: ldc           #27                 // String management
      37: aastore
      38: dup
      39: iconst_3
      40: ldc           #42                 // String worker
      42: aastore
      43: invokevirtual #43                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      46: putstatic     #31                 // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      49: return
}
