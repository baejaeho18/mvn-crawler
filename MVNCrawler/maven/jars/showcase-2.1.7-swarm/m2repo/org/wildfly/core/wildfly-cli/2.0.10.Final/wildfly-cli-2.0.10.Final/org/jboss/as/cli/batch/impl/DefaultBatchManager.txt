Compiled from "DefaultBatchManager.java"
public class org.jboss.as.cli.batch.impl.DefaultBatchManager implements org.jboss.as.cli.batch.BatchManager {
  private java.util.Map<java.lang.String, org.jboss.as.cli.batch.impl.DefaultBatch> batches;

  private org.jboss.as.cli.batch.impl.DefaultBatch activeBatch;

  public org.jboss.as.cli.batch.impl.DefaultBatchManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #3                  // Field batches:Ljava/util/Map;
      11: return

  public boolean holdbackActiveBatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field batches:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #5,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      19: ifeq          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #3                  // Field batches:Ljava/util/Map;
      28: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      33: ifeq          47
      36: aload_0
      37: new           #7                  // class java/util/HashMap
      40: dup
      41: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      44: putfield      #3                  // Field batches:Ljava/util/Map;
      47: aload_0
      48: getfield      #3                  // Field batches:Ljava/util/Map;
      51: aload_1
      52: aload_0
      53: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
      56: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload_0
      63: aconst_null
      64: putfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
      67: iconst_1
      68: ireturn

  public boolean discardActiveBatch();
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
      14: iconst_1
      15: ireturn

  public java.util.Set<java.lang.String> getHeldbackNames();
    Code:
       0: aload_0
       1: getfield      #3                  // Field batches:Ljava/util/Map;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public org.jboss.as.cli.batch.Batch getActiveBatch();
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
       4: areturn

  public boolean isHeldback(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field batches:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean activateNewBatch();
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
       4: ifnull        9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: new           #11                 // class org/jboss/as/cli/batch/impl/DefaultBatch
      13: dup
      14: invokespecial #12                 // Method org/jboss/as/cli/batch/impl/DefaultBatch."<init>":()V
      17: putfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
      20: iconst_1
      21: ireturn

  public boolean isBatchActive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean activateHeldbackBatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
       4: ifnull        9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field batches:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #5,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_0
      26: getfield      #3                  // Field batches:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #11                 // class org/jboss/as/cli/batch/impl/DefaultBatch
      38: putfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
      41: aload_0
      42: getfield      #4                  // Field activeBatch:Lorg/jboss/as/cli/batch/impl/DefaultBatch;
      45: ifnull        52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn
}
