Compiled from "ActiveOperationSupport.java"
class org.jboss.as.protocol.mgmt.ActiveOperationSupport {
  private static final java.util.concurrent.Executor directExecutor;

  private static final org.jboss.as.protocol.mgmt.ActiveOperation$CompletedCallback<?> NO_OP_CALLBACK;

  private final java.util.concurrent.ConcurrentMap<java.lang.Integer, org.jboss.as.protocol.mgmt.ActiveOperationSupport$ActiveOperationImpl<?, ?>> activeRequests;

  private final org.jboss.as.protocol.mgmt.ManagementBatchIdManager operationIdManager;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private final java.util.concurrent.locks.Condition condition;

  private int activeCount;

  private volatile boolean shutdown;

  private static final java.util.List<org.xnio.Cancellable> CANCEL_REQUESTED;

  static final boolean $assertionsDisabled;

  protected org.jboss.as.protocol.mgmt.ActiveOperationSupport();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        16
      11: ldc           #5                  // float 0.75f
      13: invokestatic  #6                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      16: invokevirtual #7                  // Method java/lang/Runtime.availableProcessors:()I
      19: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      22: putfield      #9                  // Field activeRequests:Ljava/util/concurrent/ConcurrentMap;
      25: aload_0
      26: new           #10                 // class org/jboss/as/protocol/mgmt/ManagementBatchIdManager$DefaultManagementBatchIdManager
      29: dup
      30: invokespecial #11                 // Method org/jboss/as/protocol/mgmt/ManagementBatchIdManager$DefaultManagementBatchIdManager."<init>":()V
      33: putfield      #12                 // Field operationIdManager:Lorg/jboss/as/protocol/mgmt/ManagementBatchIdManager;
      36: aload_0
      37: new           #13                 // class java/util/concurrent/locks/ReentrantLock
      40: dup
      41: invokespecial #14                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      44: putfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      47: aload_0
      48: aload_0
      49: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      52: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      55: putfield      #17                 // Field condition:Ljava/util/concurrent/locks/Condition;
      58: aload_0
      59: iconst_0
      60: putfield      #18                 // Field activeCount:I
      63: aload_0
      64: iconst_0
      65: putfield      #19                 // Field shutdown:Z
      68: return

  static <T> org.jboss.as.protocol.mgmt.ActiveOperation$CompletedCallback<T> getDefaultCallback();
    Code:
       0: getstatic     #20                 // Field NO_OP_CALLBACK:Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;
       3: areturn

  static <T> org.jboss.as.protocol.mgmt.ActiveOperation$CompletedCallback<T> getCheckedCallback(org.jboss.as.protocol.mgmt.ActiveOperation$CompletedCallback<T>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #21                 // Method getDefaultCallback:()Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;
       7: areturn
       8: aload_0
       9: areturn

  protected <T, A> org.jboss.as.protocol.mgmt.ActiveOperation<T, A> registerActiveOperation(A);
    Code:
       0: invokestatic  #21                 // Method getDefaultCallback:()Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #22                 // Method registerActiveOperation:(Ljava/lang/Object;Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
      10: areturn

  protected <T, A> org.jboss.as.protocol.mgmt.ActiveOperation<T, A> registerActiveOperation(A, org.jboss.as.protocol.mgmt.ActiveOperation$CompletedCallback<T>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokevirtual #23                 // Method registerActiveOperation:(Ljava/lang/Integer;Ljava/lang/Object;Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
       7: areturn

  protected <T, A> org.jboss.as.protocol.mgmt.ActiveOperation<T, A> registerActiveOperation(java.lang.Integer, A);
    Code:
       0: invokestatic  #21                 // Method getDefaultCallback:()Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #23                 // Method registerActiveOperation:(Ljava/lang/Integer;Ljava/lang/Object;Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
      11: areturn

  protected <T, A> org.jboss.as.protocol.mgmt.ActiveOperation<T, A> registerActiveOperation(java.lang.Integer, A, org.jboss.as.protocol.mgmt.ActiveOperation$CompletedCallback<T>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_1
       8: ifnonnull     28
      11: aload_0
      12: getfield      #12                 // Field operationIdManager:Lorg/jboss/as/protocol/mgmt/ManagementBatchIdManager;
      15: invokeinterface #25,  1           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementBatchIdManager.createBatchId:()I
      20: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: astore        4
      25: goto          60
      28: aload_0
      29: getfield      #12                 // Field operationIdManager:Lorg/jboss/as/protocol/mgmt/ManagementBatchIdManager;
      32: aload_1
      33: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
      36: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementBatchIdManager.lockBatchId:(I)Z
      41: ifne          57
      44: getstatic     #29                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      47: aload_1
      48: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
      51: invokeinterface #30,  2           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.operationIdAlreadyExists:(I)Ljava/lang/IllegalStateException;
      56: athrow
      57: aload_1
      58: astore        4
      60: new           #31                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl
      63: dup
      64: aload_0
      65: aload         4
      67: aload_2
      68: aload_3
      69: invokestatic  #32                 // Method getCheckedCallback:(Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;)Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;
      72: aconst_null
      73: invokespecial #33                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl."<init>":(Lorg/jboss/as/protocol/mgmt/ActiveOperationSupport;Ljava/lang/Integer;Ljava/lang/Object;Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;Lorg/jboss/as/protocol/mgmt/ActiveOperationSupport$1;)V
      76: astore        5
      78: aload_0
      79: getfield      #9                  // Field activeRequests:Ljava/util/concurrent/ConcurrentMap;
      82: aload         4
      84: aload         5
      86: invokeinterface #34,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: checkcast     #35                 // class org/jboss/as/protocol/mgmt/ActiveOperation
      94: astore        6
      96: aload         6
      98: ifnull        115
     101: getstatic     #29                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
     104: aload         4
     106: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
     109: invokeinterface #30,  2           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.operationIdAlreadyExists:(I)Ljava/lang/IllegalStateException;
     114: athrow
     115: getstatic     #29                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
     118: ldc           #36                 // String Registered active operation %d
     120: aload         4
     122: invokeinterface #37,  3           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
     127: aload_0
     128: dup
     129: getfield      #18                 // Field activeCount:I
     132: iconst_1
     133: iadd
     134: putfield      #18                 // Field activeCount:I
     137: aload         5
     139: astore        7
     141: aload_0
     142: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     145: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     148: aload         7
     150: areturn
     151: astore        8
     153: aload_0
     154: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     157: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     160: aload         8
     162: athrow
    Exception table:
       from    to  target type
           7   141   151   any
         151   153   151   any

  protected <T, A> org.jboss.as.protocol.mgmt.ActiveOperation<T, A> getActiveOperation(org.jboss.as.protocol.mgmt.ManagementRequestHeader);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method org/jboss/as/protocol/mgmt/ManagementRequestHeader.getBatchId:()I
       5: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #40                 // Method getActiveOperation:(Ljava/lang/Integer;)Lorg/jboss/as/protocol/mgmt/ActiveOperation;
      11: areturn

  protected <T, A> org.jboss.as.protocol.mgmt.ActiveOperation<T, A> getActiveOperation(java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field activeRequests:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #35                 // class org/jboss/as/protocol/mgmt/ActiveOperation
      13: areturn

  protected <T, A> org.jboss.as.protocol.mgmt.ActiveOperation<T, A> removeActiveOperation(java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #9                  // Field activeRequests:Ljava/util/concurrent/ConcurrentMap;
      11: aload_1
      12: invokeinterface #42,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #35                 // class org/jboss/as/protocol/mgmt/ActiveOperation
      20: astore_2
      21: aload_2
      22: ifnull        68
      25: getstatic     #29                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      28: ldc           #43                 // String Deregistered active operation %d
      30: aload_1
      31: invokeinterface #37,  3           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;)V
      36: aload_0
      37: dup
      38: getfield      #18                 // Field activeCount:I
      41: iconst_1
      42: isub
      43: putfield      #18                 // Field activeCount:I
      46: aload_0
      47: getfield      #12                 // Field operationIdManager:Lorg/jboss/as/protocol/mgmt/ManagementBatchIdManager;
      50: aload_1
      51: invokevirtual #27                 // Method java/lang/Integer.intValue:()I
      54: invokeinterface #44,  2           // InterfaceMethod org/jboss/as/protocol/mgmt/ManagementBatchIdManager.freeBatchId:(I)V
      59: aload_0
      60: getfield      #17                 // Field condition:Ljava/util/concurrent/locks/Condition;
      63: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      68: aload_2
      69: astore_3
      70: aload_0
      71: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      74: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      77: aload_3
      78: areturn
      79: astore        4
      81: aload_0
      82: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      85: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      88: aload         4
      90: athrow
    Exception table:
       from    to  target type
           7    70    79   any
          79    81    79   any

  public void handleChannelClosed(org.jboss.remoting3.Channel, java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #9                  // Field activeRequests:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_3
      25: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #31                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl
      33: astore        4
      35: aload         4
      37: invokestatic  #50                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl.access$100:(Lorg/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl;)Lorg/jboss/remoting3/Channel;
      40: aload_1
      41: if_acmpne     54
      44: aload         4
      46: invokevirtual #51                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl.getResultHandler:()Lorg/jboss/as/protocol/mgmt/ActiveOperation$ResultHandler;
      49: invokeinterface #52,  1           // InterfaceMethod org/jboss/as/protocol/mgmt/ActiveOperation$ResultHandler.cancel:()V
      54: goto          15
      57: return

  protected java.util.List<java.lang.Integer> cancelAllActiveOperations();
    Code:
       0: new           #53                 // class java/util/ArrayList
       3: dup
       4: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field activeRequests:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          61
      32: aload_2
      33: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #31                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl
      41: astore_3
      42: aload_3
      43: iconst_0
      44: invokevirtual #55                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl.asyncCancel:(Z)V
      47: aload_1
      48: aload_3
      49: invokevirtual #56                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl.getOperationId:()Ljava/lang/Integer;
      52: invokeinterface #57,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          23
      61: aload_1
      62: areturn

  protected boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #19                 // Field shutdown:Z
       4: ireturn

  protected void shutdown();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: iconst_1
       9: putfield      #19                 // Field shutdown:Z
      12: aload_0
      13: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: goto          32
      22: astore_1
      23: aload_0
      24: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      27: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      30: aload_1
      31: athrow
      32: return
    Exception table:
       from    to  target type
           7    12    22   any

  protected boolean awaitCompletion(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: lload_1
       2: invokevirtual #58                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       5: invokestatic  #59                 // Method java/lang/System.currentTimeMillis:()J
       8: ladd
       9: lstore        4
      11: aload_0
      12: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      15: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      18: getstatic     #60                 // Field $assertionsDisabled:Z
      21: ifne          39
      24: aload_0
      25: getfield      #19                 // Field shutdown:Z
      28: ifne          39
      31: new           #61                 // class java/lang/AssertionError
      34: dup
      35: invokespecial #62                 // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: aload_0
      40: getfield      #18                 // Field activeCount:I
      43: ifeq          82
      46: lload         4
      48: invokestatic  #59                 // Method java/lang/System.currentTimeMillis:()J
      51: lsub
      52: lstore        6
      54: lload         6
      56: lconst_0
      57: lcmp
      58: ifgt          64
      61: goto          82
      64: aload_0
      65: getfield      #17                 // Field condition:Ljava/util/concurrent/locks/Condition;
      68: lload         6
      70: getstatic     #63                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      73: invokeinterface #64,  4           // InterfaceMethod java/util/concurrent/locks/Condition.await:(JLjava/util/concurrent/TimeUnit;)Z
      78: pop
      79: goto          39
      82: aload_0
      83: getfield      #18                 // Field activeCount:I
      86: ifne          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: istore        6
      96: iload         6
      98: ifne          125
     101: getstatic     #29                 // Field org/jboss/as/protocol/logging/ProtocolLogger.ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
     104: ldc           #65                 // String ActiveOperation(s) %s have not completed within %d %s
     106: aload_0
     107: getfield      #9                  // Field activeRequests:Ljava/util/concurrent/ConcurrentMap;
     110: invokeinterface #66,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
     115: lload_1
     116: invokestatic  #67                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: aload_3
     120: invokeinterface #68,  5           // InterfaceMethod org/jboss/as/protocol/logging/ProtocolLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     125: iload         6
     127: istore        7
     129: aload_0
     130: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     133: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     136: iload         7
     138: ireturn
     139: astore        8
     141: aload_0
     142: getfield      #15                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     145: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     148: aload         8
     150: athrow
    Exception table:
       from    to  target type
          18   129   139   any
         139   141   139   any

  static void updateChannelRef(org.jboss.as.protocol.mgmt.ActiveOperation<?, ?>, org.jboss.remoting3.Channel);
    Code:
       0: aload_0
       1: instanceof    #31                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl
       4: ifeq          25
       7: aload_0
       8: checkcast     #31                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl
      11: astore_2
      12: aload_2
      13: invokestatic  #50                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl.access$100:(Lorg/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl;)Lorg/jboss/remoting3/Channel;
      16: ifnonnull     25
      19: aload_2
      20: aload_1
      21: invokestatic  #69                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl.access$102:(Lorg/jboss/as/protocol/mgmt/ActiveOperationSupport$ActiveOperationImpl;Lorg/jboss/remoting3/Channel;)Lorg/jboss/remoting3/Channel;
      24: pop
      25: return

  static java.util.concurrent.Executor access$600();
    Code:
       0: getstatic     #2                  // Field directExecutor:Ljava/util/concurrent/Executor;
       3: areturn

  static java.util.List access$700();
    Code:
       0: getstatic     #1                  // Field CANCEL_REQUESTED:Ljava/util/List;
       3: areturn

  static {};
    Code:
       0: ldc           #70                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport
       2: invokevirtual #71                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #60                 // Field $assertionsDisabled:Z
      16: new           #72                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport$1
      19: dup
      20: invokespecial #73                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$1."<init>":()V
      23: putstatic     #2                  // Field directExecutor:Ljava/util/concurrent/Executor;
      26: new           #74                 // class org/jboss/as/protocol/mgmt/ActiveOperationSupport$2
      29: dup
      30: invokespecial #75                 // Method org/jboss/as/protocol/mgmt/ActiveOperationSupport$2."<init>":()V
      33: putstatic     #20                 // Field NO_OP_CALLBACK:Lorg/jboss/as/protocol/mgmt/ActiveOperation$CompletedCallback;
      36: invokestatic  #76                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      39: putstatic     #1                  // Field CANCEL_REQUESTED:Ljava/util/List;
      42: return
}
