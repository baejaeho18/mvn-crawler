Compiled from "ModelControllerMBeanHelper.java"
abstract class org.jboss.as.jmx.model.ModelControllerMBeanHelper$ObjectNameMatchResourceAction<T> implements org.jboss.as.jmx.model.RootResourceIterator$ResourceAction<T> {
  private final javax.management.ObjectName baseName;

  private final java.util.Map<java.lang.String, java.lang.String> properties;

  private final javax.management.ObjectName domainOnlyName;

  final org.jboss.as.jmx.model.ModelControllerMBeanHelper this$0;

  protected org.jboss.as.jmx.model.ModelControllerMBeanHelper$ObjectNameMatchResourceAction(org.jboss.as.jmx.model.ModelControllerMBeanHelper, javax.management.ObjectName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jboss/as/jmx/model/ModelControllerMBeanHelper;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field baseName:Ljavax/management/ObjectName;
      14: aload_0
      15: aload_2
      16: ifnonnull     25
      19: invokestatic  #4                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      22: goto          29
      25: aload_2
      26: invokevirtual #5                  // Method javax/management/ObjectName.getKeyPropertyList:()Ljava/util/Hashtable;
      29: putfield      #6                  // Field properties:Ljava/util/Map;
      32: aload_0
      33: aload_2
      34: ifnonnull     41
      37: aconst_null
      38: goto          66
      41: new           #7                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      48: aload_2
      49: invokevirtual #9                  // Method javax/management/ObjectName.getDomain:()Ljava/lang/String;
      52: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #11                 // String :*
      57: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokestatic  #13                 // Method javax/management/ObjectName.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      66: putfield      #14                 // Field domainOnlyName:Ljavax/management/ObjectName;
      69: goto          82
      72: astore_3
      73: new           #16                 // class java/lang/IllegalStateException
      76: dup
      77: aload_3
      78: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      81: athrow
      82: return
    Exception table:
       from    to  target type
          32    69    72   Class javax/management/MalformedObjectNameException

  public javax.management.ObjectName onAddress(org.jboss.as.controller.PathAddress);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/jboss/as/jmx/model/ModelControllerMBeanHelper;
       4: aload_1
       5: invokestatic  #18                 // Method org/jboss/as/jmx/model/ModelControllerMBeanHelper.access$000:(Lorg/jboss/as/jmx/model/ModelControllerMBeanHelper;Lorg/jboss/as/controller/PathAddress;)Z
       8: ifeq          13
      11: aconst_null
      12: areturn
      13: aconst_null
      14: astore_2
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/jboss/as/jmx/model/ModelControllerMBeanHelper;
      19: invokestatic  #19                 // Method org/jboss/as/jmx/model/ModelControllerMBeanHelper.access$100:(Lorg/jboss/as/jmx/model/ModelControllerMBeanHelper;)Ljava/lang/String;
      22: aload_1
      23: invokestatic  #20                 // Method org/jboss/as/jmx/model/ObjectNameAddressUtil.createObjectName:(Ljava/lang/String;Lorg/jboss/as/controller/PathAddress;)Ljavax/management/ObjectName;
      26: astore_3
      27: aload_0
      28: getfield      #3                  // Field baseName:Ljavax/management/ObjectName;
      31: ifnonnull     39
      34: aload_3
      35: astore_2
      36: goto          225
      39: aload_1
      40: invokevirtual #21                 // Method org/jboss/as/controller/PathAddress.size:()I
      43: ifne          62
      46: aload_0
      47: getfield      #14                 // Field domainOnlyName:Ljavax/management/ObjectName;
      50: aload_3
      51: invokevirtual #22                 // Method javax/management/ObjectName.apply:(Ljavax/management/ObjectName;)Z
      54: ifeq          225
      57: aload_3
      58: astore_2
      59: goto          225
      62: aload_1
      63: invokevirtual #21                 // Method org/jboss/as/controller/PathAddress.size:()I
      66: aload_0
      67: getfield      #6                  // Field properties:Ljava/util/Map;
      70: invokeinterface #23,  1           // InterfaceMethod java/util/Map.size:()I
      75: if_icmplt     94
      78: aload_0
      79: getfield      #3                  // Field baseName:Ljavax/management/ObjectName;
      82: aload_3
      83: invokevirtual #22                 // Method javax/management/ObjectName.apply:(Ljavax/management/ObjectName;)Z
      86: ifeq          225
      89: aload_3
      90: astore_2
      91: goto          225
      94: aload_0
      95: getfield      #14                 // Field domainOnlyName:Ljavax/management/ObjectName;
      98: aload_3
      99: invokevirtual #22                 // Method javax/management/ObjectName.apply:(Ljavax/management/ObjectName;)Z
     102: istore        4
     104: iload         4
     106: ifeq          218
     109: aload_3
     110: invokevirtual #5                  // Method javax/management/ObjectName.getKeyPropertyList:()Ljava/util/Hashtable;
     113: invokevirtual #24                 // Method java/util/Hashtable.entrySet:()Ljava/util/Set;
     116: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     121: astore        5
     123: aload         5
     125: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     130: ifeq          218
     133: aload         5
     135: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #28                 // class java/util/Map$Entry
     143: astore        6
     145: aload_0
     146: getfield      #6                  // Field properties:Ljava/util/Map;
     149: aload         6
     151: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     156: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     161: checkcast     #31                 // class java/lang/String
     164: astore        7
     166: aload         7
     168: ifnull        209
     171: aload         6
     173: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     178: checkcast     #31                 // class java/lang/String
     181: aload         7
     183: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     186: ifne          215
     189: aload_0
     190: getfield      #3                  // Field baseName:Ljavax/management/ObjectName;
     193: aload         6
     195: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     200: checkcast     #31                 // class java/lang/String
     203: invokevirtual #34                 // Method javax/management/ObjectName.isPropertyValuePattern:(Ljava/lang/String;)Z
     206: ifne          215
     209: iconst_0
     210: istore        4
     212: goto          218
     215: goto          123
     218: iload         4
     220: ifeq          225
     223: aload_3
     224: astore_2
     225: aload_2
     226: areturn
}
