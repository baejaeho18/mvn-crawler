Compiled from "ProcessController.java"
public final class org.jboss.as.process.ProcessController {
  private final java.lang.Object lock;

  private final org.jboss.as.process.protocol.ProtocolServer server;

  private final java.util.Map<java.lang.String, org.jboss.as.process.ManagedProcess> processes;

  private final java.util.Map<org.jboss.as.process.ProcessController$Key, org.jboss.as.process.ManagedProcess> processesByKey;

  private final java.util.Set<org.jboss.as.process.protocol.Connection> managedConnections;

  private volatile boolean shutdown;

  public static final short AUTH_BYTES_LENGTH;

  public static final short AUTH_BYTES_ENCODED_LENGTH;

  private final java.io.PrintStream stdout;

  private final java.io.PrintStream stderr;

  public org.jboss.as.process.ProcessController(org.jboss.as.process.protocol.ProtocolServer$Configuration, java.io.PrintStream, java.io.PrintStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #1                  // Method java/lang/Object."<init>":()V
      12: putfield      #3                  // Field lock:Ljava/lang/Object;
      15: aload_0
      16: new           #4                  // class java/util/HashMap
      19: dup
      20: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      23: invokestatic  #6                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      26: putfield      #7                  // Field processes:Ljava/util/Map;
      29: aload_0
      30: new           #4                  // class java/util/HashMap
      33: dup
      34: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      37: putfield      #8                  // Field processesByKey:Ljava/util/Map;
      40: aload_0
      41: new           #9                  // class java/util/concurrent/CopyOnWriteArraySet
      44: dup
      45: invokespecial #10                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      48: putfield      #11                 // Field managedConnections:Ljava/util/Set;
      51: aload_0
      52: aload_2
      53: putfield      #12                 // Field stdout:Ljava/io/PrintStream;
      56: aload_0
      57: aload_3
      58: putfield      #13                 // Field stderr:Ljava/io/PrintStream;
      61: aload_1
      62: new           #14                 // class org/jboss/as/process/ProcessControllerServerHandler
      65: dup
      66: aload_0
      67: invokespecial #15                 // Method org/jboss/as/process/ProcessControllerServerHandler."<init>":(Lorg/jboss/as/process/ProcessController;)V
      70: invokevirtual #16                 // Method org/jboss/as/process/protocol/ProtocolServer$Configuration.setConnectionHandler:(Lorg/jboss/as/process/protocol/ConnectionHandler;)V
      73: new           #17                 // class org/jboss/as/process/protocol/ProtocolServer
      76: dup
      77: aload_1
      78: invokespecial #18                 // Method org/jboss/as/process/protocol/ProtocolServer."<init>":(Lorg/jboss/as/process/protocol/ProtocolServer$Configuration;)V
      81: astore        4
      83: aload         4
      85: invokevirtual #19                 // Method org/jboss/as/process/protocol/ProtocolServer.start:()V
      88: aload_0
      89: aload         4
      91: putfield      #20                 // Field server:Lorg/jboss/as/process/protocol/ProtocolServer;
      94: return

  void addManagedConnection(org.jboss.as.process.protocol.Connection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #21                 // Field shutdown:Z
      11: ifeq          17
      14: aload_2
      15: monitorexit
      16: return
      17: aload_0
      18: getfield      #11                 // Field managedConnections:Ljava/util/Set;
      21: aload_1
      22: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_2
      29: monitorexit
      30: goto          38
      33: astore_3
      34: aload_2
      35: monitorexit
      36: aload_3
      37: athrow
      38: return
    Exception table:
       from    to  target type
           7    16    33   any
          17    30    33   any
          33    36    33   any

  void removeManagedConnection(org.jboss.as.process.protocol.Connection);
    Code:
       0: aload_0
       1: getfield      #11                 // Field managedConnections:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addProcess(java.lang.String, java.util.List<java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String, boolean, boolean);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore        7
       6: new           #25                 // class java/util/Random
       9: dup
      10: new           #26                 // class java/security/SecureRandom
      13: dup
      14: invokespecial #27                 // Method java/security/SecureRandom."<init>":()V
      17: invokevirtual #28                 // Method java/security/SecureRandom.nextLong:()J
      20: invokespecial #29                 // Method java/util/Random."<init>":(J)V
      23: aload         7
      25: invokevirtual #30                 // Method java/util/Random.nextBytes:([B)V
      28: invokestatic  #31                 // Method java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
      31: aload         7
      33: invokevirtual #32                 // Method java/util/Base64$Encoder.encodeToString:([B)Ljava/lang/String;
      36: astore        8
      38: aload_0
      39: aload_1
      40: aload         8
      42: aload_2
      43: aload_3
      44: aload         4
      46: iload         5
      48: iload         6
      50: invokevirtual #33                 // Method addProcess:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;ZZ)V
      53: return

  public void addProcess(java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String, boolean, boolean);
    Code:
       0: aload_3
       1: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore        8
       8: aload         8
      10: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          47
      18: aload         8
      20: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #37                 // class java/lang/String
      28: astore        9
      30: aload         9
      32: ifnonnull     44
      35: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      38: invokeinterface #39,  1           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullCommandComponent:()Ljava/lang/IllegalArgumentException;
      43: athrow
      44: goto          8
      47: aload_0
      48: getfield      #3                  // Field lock:Ljava/lang/Object;
      51: dup
      52: astore        8
      54: monitorenter
      55: aload_0
      56: getfield      #21                 // Field shutdown:Z
      59: ifeq          66
      62: aload         8
      64: monitorexit
      65: return
      66: aload_0
      67: getfield      #7                  // Field processes:Ljava/util/Map;
      70: astore        9
      72: aload         9
      74: aload_1
      75: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      80: ifeq          96
      83: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      86: aload_1
      87: invokeinterface #41,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.duplicateProcessName:(Ljava/lang/String;)V
      92: aload         8
      94: monitorexit
      95: return
      96: new           #42                 // class org/jboss/as/process/ManagedProcess
      99: dup
     100: aload_1
     101: aload_3
     102: aload         4
     104: aload         5
     106: aload_0
     107: getfield      #3                  // Field lock:Ljava/lang/Object;
     110: aload_0
     111: aload_2
     112: iload         6
     114: iload         7
     116: invokespecial #43                 // Method org/jboss/as/process/ManagedProcess."<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/jboss/as/process/ProcessController;Ljava/lang/String;ZZ)V
     119: astore        10
     121: aload         9
     123: aload_1
     124: aload         10
     126: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: aload_0
     133: getfield      #8                  // Field processesByKey:Ljava/util/Map;
     136: new           #45                 // class org/jboss/as/process/ProcessController$Key
     139: dup
     140: aload_2
     141: ldc           #46                 // String US-ASCII
     143: invokestatic  #47                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     146: invokevirtual #48                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     149: invokespecial #49                 // Method org/jboss/as/process/ProcessController$Key."<init>":([B)V
     152: aload         10
     154: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     159: pop
     160: aload_0
     161: aload_1
     162: invokevirtual #50                 // Method processAdded:(Ljava/lang/String;)V
     165: aload         8
     167: monitorexit
     168: goto          179
     171: astore        11
     173: aload         8
     175: monitorexit
     176: aload         11
     178: athrow
     179: return
    Exception table:
       from    to  target type
          55    65   171   any
          66    95   171   any
          96   168   171   any
         171   176   171   any

  public void startProcess(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #21                 // Field shutdown:Z
      11: ifeq          17
      14: aload_2
      15: monitorexit
      16: return
      17: aload_0
      18: getfield      #7                  // Field processes:Ljava/util/Map;
      21: astore_3
      22: aload_3
      23: aload_1
      24: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      32: astore        4
      34: aload         4
      36: ifnonnull     51
      39: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      42: aload_1
      43: invokeinterface #52,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.attemptToStartNonExistentProcess:(Ljava/lang/String;)V
      48: aload_2
      49: monitorexit
      50: return
      51: aload         4
      53: invokevirtual #53                 // Method org/jboss/as/process/ManagedProcess.start:()V
      56: aload_2
      57: monitorexit
      58: goto          68
      61: astore        5
      63: aload_2
      64: monitorexit
      65: aload         5
      67: athrow
      68: return
    Exception table:
       from    to  target type
           7    16    61   any
          17    50    61   any
          51    58    61   any
          61    65    61   any

  public void stopProcess(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field processes:Ljava/util/Map;
      11: astore_3
      12: aload_3
      13: aload_1
      14: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      22: astore        4
      24: aload         4
      26: ifnonnull     41
      29: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      32: aload_1
      33: invokeinterface #54,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.attemptToStopNonExistentProcess:(Ljava/lang/String;)V
      38: aload_2
      39: monitorexit
      40: return
      41: aload         4
      43: invokevirtual #55                 // Method org/jboss/as/process/ManagedProcess.stop:()V
      46: aload_2
      47: monitorexit
      48: goto          58
      51: astore        5
      53: aload_2
      54: monitorexit
      55: aload         5
      57: athrow
      58: return
    Exception table:
       from    to  target type
           7    40    51   any
          41    48    51   any
          51    55    51   any

  public void destroyProcess(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field processes:Ljava/util/Map;
      11: astore_3
      12: aload_3
      13: aload_1
      14: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      22: astore        4
      24: aload         4
      26: ifnonnull     32
      29: aload_2
      30: monitorexit
      31: return
      32: aload         4
      34: invokevirtual #56                 // Method org/jboss/as/process/ManagedProcess.destroy:()V
      37: aload_2
      38: monitorexit
      39: goto          49
      42: astore        5
      44: aload_2
      45: monitorexit
      46: aload         5
      48: athrow
      49: return
    Exception table:
       from    to  target type
           7    31    42   any
          32    39    42   any
          42    46    42   any

  public void killProcess(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field processes:Ljava/util/Map;
      11: astore_3
      12: aload_3
      13: aload_1
      14: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      22: astore        4
      24: aload         4
      26: ifnonnull     32
      29: aload_2
      30: monitorexit
      31: return
      32: aload         4
      34: invokevirtual #57                 // Method org/jboss/as/process/ManagedProcess.kill:()V
      37: aload_2
      38: monitorexit
      39: goto          49
      42: astore        5
      44: aload_2
      45: monitorexit
      46: aload         5
      48: athrow
      49: return
    Exception table:
       from    to  target type
           7    31    42   any
          32    39    42   any
          42    46    42   any

  public void removeProcess(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field processes:Ljava/util/Map;
      11: astore_3
      12: aload_3
      13: aload_1
      14: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      22: astore        4
      24: aload         4
      26: ifnonnull     41
      29: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      32: aload_1
      33: invokeinterface #58,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.attemptToRemoveNonExistentProcess:(Ljava/lang/String;)V
      38: aload_2
      39: monitorexit
      40: return
      41: aload_3
      42: aload_1
      43: invokeinterface #59,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      48: ifnull        55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: istore        5
      58: aload_0
      59: getfield      #8                  // Field processesByKey:Ljava/util/Map;
      62: new           #45                 // class org/jboss/as/process/ProcessController$Key
      65: dup
      66: aload         4
      68: invokevirtual #60                 // Method org/jboss/as/process/ManagedProcess.getAuthKey:()Ljava/lang/String;
      71: ldc           #46                 // String US-ASCII
      73: invokestatic  #47                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      76: invokevirtual #48                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      79: invokespecial #49                 // Method org/jboss/as/process/ProcessController$Key."<init>":([B)V
      82: invokeinterface #59,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: iload         5
      90: ifeq          98
      93: aload_0
      94: aload_1
      95: invokevirtual #61                 // Method processRemoved:(Ljava/lang/String;)V
      98: aload_0
      99: getfield      #3                  // Field lock:Ljava/lang/Object;
     102: invokevirtual #62                 // Method java/lang/Object.notifyAll:()V
     105: aload_2
     106: monitorexit
     107: goto          117
     110: astore        6
     112: aload_2
     113: monitorexit
     114: aload         6
     116: athrow
     117: return
    Exception table:
       from    to  target type
           7    40   110   any
          41   107   110   any
         110   114   110   any

  public void sendStdin(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #21                 // Field shutdown:Z
      11: ifeq          17
      14: aload_3
      15: monitorexit
      16: return
      17: aload_0
      18: getfield      #7                  // Field processes:Ljava/util/Map;
      21: astore        4
      23: aload         4
      25: aload_1
      26: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      34: astore        5
      36: aload         5
      38: ifnonnull     44
      41: aload_3
      42: monitorexit
      43: return
      44: aload         5
      46: aload_2
      47: invokevirtual #63                 // Method org/jboss/as/process/ManagedProcess.sendStdin:(Ljava/io/InputStream;)V
      50: aload_3
      51: monitorexit
      52: goto          62
      55: astore        6
      57: aload_3
      58: monitorexit
      59: aload         6
      61: athrow
      62: return
    Exception table:
       from    to  target type
           7    16    55   any
          17    43    55   any
          44    52    55   any
          55    59    55   any

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #21                 // Field shutdown:Z
      11: ifeq          17
      14: aload_1
      15: monitorexit
      16: return
      17: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      20: invokeinterface #64,  1           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.shuttingDown:()V
      25: aload_0
      26: iconst_1
      27: putfield      #21                 // Field shutdown:Z
      30: aload_0
      31: getfield      #7                  // Field processes:Ljava/util/Map;
      34: ldc           #66                 // String Host Controller
      36: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      44: astore_2
      45: aload_2
      46: ifnull        88
      49: aload_2
      50: invokevirtual #67                 // Method org/jboss/as/process/ManagedProcess.isRunning:()Z
      53: ifeq          88
      56: aload_2
      57: invokevirtual #68                 // Method org/jboss/as/process/ManagedProcess.shutdown:()V
      60: aload_0
      61: getfield      #7                  // Field processes:Ljava/util/Map;
      64: ldc           #66                 // String Host Controller
      66: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      71: ifeq          88
      74: aload_0
      75: getfield      #3                  // Field lock:Ljava/lang/Object;
      78: invokevirtual #69                 // Method java/lang/Object.wait:()V
      81: goto          60
      84: astore_3
      85: goto          60
      88: aload_0
      89: getfield      #7                  // Field processes:Ljava/util/Map;
      92: invokeinterface #71,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      97: invokeinterface #72,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     102: astore_3
     103: aload_3
     104: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     109: ifeq          131
     112: aload_3
     113: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
     121: astore        4
     123: aload         4
     125: invokevirtual #68                 // Method org/jboss/as/process/ManagedProcess.shutdown:()V
     128: goto          103
     131: aload_0
     132: getfield      #7                  // Field processes:Ljava/util/Map;
     135: invokeinterface #73,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     140: ifne          157
     143: aload_0
     144: getfield      #3                  // Field lock:Ljava/lang/Object;
     147: invokevirtual #69                 // Method java/lang/Object.wait:()V
     150: goto          131
     153: astore_3
     154: goto          131
     157: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
     160: invokeinterface #74,  1           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.shutdownComplete:()V
     165: aload_1
     166: monitorexit
     167: goto          177
     170: astore        5
     172: aload_1
     173: monitorexit
     174: aload         5
     176: athrow
     177: return
    Exception table:
       from    to  target type
          74    81    84   Class java/lang/InterruptedException
         143   150   153   Class java/lang/InterruptedException
           7    16   170   any
          17   167   170   any
         170   174   170   any

  public org.jboss.as.process.ManagedProcess getServerByAuthCode(byte[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #8                  // Field processesByKey:Ljava/util/Map;
      11: new           #45                 // class org/jboss/as/process/ProcessController$Key
      14: dup
      15: aload_1
      16: invokespecial #49                 // Method org/jboss/as/process/ProcessController$Key."<init>":([B)V
      19: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      27: aload_2
      28: monitorexit
      29: areturn
      30: astore_3
      31: aload_2
      32: monitorexit
      33: aload_3
      34: athrow
    Exception table:
       from    to  target type
           7    29    30   any
          30    33    30   any

  void processAdded(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field managedConnections:Ljava/util/Set;
      11: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          102
      26: aload_3
      27: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #76                 // class org/jboss/as/process/protocol/Connection
      35: astore        4
      37: aload         4
      39: invokeinterface #77,  1           // InterfaceMethod org/jboss/as/process/protocol/Connection.writeMessage:()Ljava/io/OutputStream;
      44: astore        5
      46: aload         5
      48: bipush        16
      50: invokevirtual #79                 // Method java/io/OutputStream.write:(I)V
      53: aload         5
      55: aload_1
      56: invokestatic  #80                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
      59: aload         5
      61: invokevirtual #81                 // Method java/io/OutputStream.close:()V
      64: aload         5
      66: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      69: goto          82
      72: astore        6
      74: aload         5
      76: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      79: aload         6
      81: athrow
      82: goto          99
      85: astore        5
      87: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      90: ldc           #84                 // String PROCESS_ADDED
      92: aload         5
      94: invokeinterface #85,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToWriteMessage:(Ljava/lang/String;Ljava/lang/Throwable;)V
      99: goto          17
     102: aload_2
     103: monitorexit
     104: goto          114
     107: astore        7
     109: aload_2
     110: monitorexit
     111: aload         7
     113: athrow
     114: return
    Exception table:
       from    to  target type
          46    64    72   any
          72    74    72   any
          37    82    85   Class java/io/IOException
           7   104   107   any
         107   111   107   any

  void processStarted(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field managedConnections:Ljava/util/Set;
      11: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          108
      26: aload_3
      27: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #76                 // class org/jboss/as/process/protocol/Connection
      35: astore        4
      37: aload         4
      39: invokeinterface #77,  1           // InterfaceMethod org/jboss/as/process/protocol/Connection.writeMessage:()Ljava/io/OutputStream;
      44: astore        5
      46: aload         5
      48: bipush        17
      50: invokevirtual #79                 // Method java/io/OutputStream.write:(I)V
      53: aload         5
      55: aload_1
      56: invokestatic  #80                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
      59: aload         5
      61: invokevirtual #81                 // Method java/io/OutputStream.close:()V
      64: aload         5
      66: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      69: goto          82
      72: astore        6
      74: aload         5
      76: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      79: aload         6
      81: athrow
      82: goto          105
      85: astore        5
      87: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      90: ldc           #86                 // String PROCESS_STARTED
      92: aload         5
      94: invokeinterface #85,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToWriteMessage:(Ljava/lang/String;Ljava/lang/Throwable;)V
      99: aload_0
     100: aload         4
     102: invokevirtual #87                 // Method removeManagedConnection:(Lorg/jboss/as/process/protocol/Connection;)V
     105: goto          17
     108: aload_2
     109: monitorexit
     110: goto          120
     113: astore        7
     115: aload_2
     116: monitorexit
     117: aload         7
     119: athrow
     120: return
    Exception table:
       from    to  target type
          46    64    72   any
          72    74    72   any
          37    82    85   Class java/io/IOException
           7   110   113   any
         113   117   113   any

  void processStopped(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #11                 // Field managedConnections:Ljava/util/Set;
      12: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore        5
      19: aload         5
      21: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          118
      29: aload         5
      31: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #76                 // class org/jboss/as/process/protocol/Connection
      39: astore        6
      41: aload         6
      43: invokeinterface #77,  1           // InterfaceMethod org/jboss/as/process/protocol/Connection.writeMessage:()Ljava/io/OutputStream;
      48: astore        7
      50: aload         7
      52: bipush        18
      54: invokevirtual #79                 // Method java/io/OutputStream.write:(I)V
      57: aload         7
      59: aload_1
      60: invokestatic  #80                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
      63: aload         7
      65: lload_2
      66: invokestatic  #88                 // Method org/jboss/as/process/protocol/StreamUtils.writeLong:(Ljava/io/OutputStream;J)V
      69: aload         7
      71: invokevirtual #81                 // Method java/io/OutputStream.close:()V
      74: aload         7
      76: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      79: goto          92
      82: astore        8
      84: aload         7
      86: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      89: aload         8
      91: athrow
      92: goto          115
      95: astore        7
      97: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
     100: ldc           #89                 // String PROCESS_STOPPED
     102: aload         7
     104: invokeinterface #85,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToWriteMessage:(Ljava/lang/String;Ljava/lang/Throwable;)V
     109: aload_0
     110: aload         6
     112: invokevirtual #87                 // Method removeManagedConnection:(Lorg/jboss/as/process/protocol/Connection;)V
     115: goto          19
     118: aload         4
     120: monitorexit
     121: goto          132
     124: astore        9
     126: aload         4
     128: monitorexit
     129: aload         9
     131: athrow
     132: return
    Exception table:
       from    to  target type
          50    74    82   any
          82    84    82   any
          41    92    95   Class java/io/IOException
           8   121   124   any
         124   129   124   any

  void processRemoved(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field managedConnections:Ljava/util/Set;
      11: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          125
      26: aload_3
      27: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #76                 // class org/jboss/as/process/protocol/Connection
      35: astore        4
      37: aload         4
      39: invokeinterface #77,  1           // InterfaceMethod org/jboss/as/process/protocol/Connection.writeMessage:()Ljava/io/OutputStream;
      44: astore        5
      46: aload         5
      48: bipush        19
      50: invokevirtual #79                 // Method java/io/OutputStream.write:(I)V
      53: aload         5
      55: aload_1
      56: invokestatic  #80                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
      59: aload         5
      61: invokevirtual #81                 // Method java/io/OutputStream.close:()V
      64: aload         5
      66: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      69: goto          82
      72: astore        6
      74: aload         5
      76: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      79: aload         6
      81: athrow
      82: goto          122
      85: astore        5
      87: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      90: new           #90                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #92                 // String PROCESS_REMOVED
      99: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_1
     103: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: aload         5
     111: invokeinterface #85,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToWriteMessage:(Ljava/lang/String;Ljava/lang/Throwable;)V
     116: aload_0
     117: aload         4
     119: invokevirtual #87                 // Method removeManagedConnection:(Lorg/jboss/as/process/protocol/Connection;)V
     122: goto          17
     125: aload_2
     126: monitorexit
     127: goto          137
     130: astore        7
     132: aload_2
     133: monitorexit
     134: aload         7
     136: athrow
     137: return
    Exception table:
       from    to  target type
          46    64    72   any
          72    74    72   any
          37    82    85   Class java/io/IOException
           7   127   130   any
         130   134   130   any

  void sendInventory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field managedConnections:Ljava/util/Set;
      11: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          204
      26: aload_2
      27: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #76                 // class org/jboss/as/process/protocol/Connection
      35: astore_3
      36: aload_3
      37: invokeinterface #77,  1           // InterfaceMethod org/jboss/as/process/protocol/Connection.writeMessage:()Ljava/io/OutputStream;
      42: astore        4
      44: aload         4
      46: bipush        20
      48: invokevirtual #79                 // Method java/io/OutputStream.write:(I)V
      51: aload_0
      52: getfield      #7                  // Field processes:Ljava/util/Map;
      55: invokeinterface #71,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      60: astore        5
      62: aload         4
      64: aload         5
      66: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.size:()I
      71: invokestatic  #96                 // Method org/jboss/as/process/protocol/StreamUtils.writeInt:(Ljava/io/OutputStream;I)V
      74: aload         5
      76: invokeinterface #72,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      81: astore        6
      83: aload         6
      85: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          156
      93: aload         6
      95: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
     103: astore        7
     105: aload         4
     107: aload         7
     109: invokevirtual #97                 // Method org/jboss/as/process/ManagedProcess.getProcessName:()Ljava/lang/String;
     112: invokestatic  #80                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
     115: aload         4
     117: aload         7
     119: invokevirtual #60                 // Method org/jboss/as/process/ManagedProcess.getAuthKey:()Ljava/lang/String;
     122: ldc           #46                 // String US-ASCII
     124: invokestatic  #47                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     127: invokevirtual #48                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     130: invokevirtual #98                 // Method java/io/OutputStream.write:([B)V
     133: aload         4
     135: aload         7
     137: invokevirtual #67                 // Method org/jboss/as/process/ManagedProcess.isRunning:()Z
     140: invokestatic  #99                 // Method org/jboss/as/process/protocol/StreamUtils.writeBoolean:(Ljava/io/OutputStream;Z)V
     143: aload         4
     145: aload         7
     147: invokevirtual #100                // Method org/jboss/as/process/ManagedProcess.isStopping:()Z
     150: invokestatic  #99                 // Method org/jboss/as/process/protocol/StreamUtils.writeBoolean:(Ljava/io/OutputStream;Z)V
     153: goto          83
     156: aload         4
     158: invokevirtual #81                 // Method java/io/OutputStream.close:()V
     161: aload         4
     163: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
     166: goto          179
     169: astore        8
     171: aload         4
     173: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
     176: aload         8
     178: athrow
     179: goto          201
     182: astore        4
     184: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
     187: ldc           #101                // String PROCESS_INVENTORY
     189: aload         4
     191: invokeinterface #85,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToWriteMessage:(Ljava/lang/String;Ljava/lang/Throwable;)V
     196: aload_0
     197: aload_3
     198: invokevirtual #87                 // Method removeManagedConnection:(Lorg/jboss/as/process/protocol/Connection;)V
     201: goto          17
     204: aload_1
     205: monitorexit
     206: goto          216
     209: astore        9
     211: aload_1
     212: monitorexit
     213: aload         9
     215: athrow
     216: return
    Exception table:
       from    to  target type
          44   161   169   any
         169   171   169   any
          36   179   182   Class java/io/IOException
           7   206   209   any
         209   213   209   any

  public void sendReconnectProcess(java.lang.String, java.lang.String, java.lang.String, int, boolean, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore        7
       7: monitorenter
       8: aload_0
       9: getfield      #7                  // Field processes:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #42                 // class org/jboss/as/process/ManagedProcess
      21: astore        8
      23: aload         8
      25: ifnonnull     41
      28: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      31: aload_1
      32: invokeinterface #102,  2          // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.attemptToReconnectNonExistentProcess:(Ljava/lang/String;)V
      37: aload         7
      39: monitorexit
      40: return
      41: aload         8
      43: aload_2
      44: aload_3
      45: iload         4
      47: iload         5
      49: aload         6
      51: invokevirtual #103                // Method org/jboss/as/process/ManagedProcess.reconnect:(Ljava/lang/String;Ljava/lang/String;IZLjava/lang/String;)V
      54: aload         7
      56: monitorexit
      57: goto          68
      60: astore        9
      62: aload         7
      64: monitorexit
      65: aload         9
      67: athrow
      68: return
    Exception table:
       from    to  target type
           8    40    60   any
          41    57    60   any
          60    65    60   any

  void operationFailed(java.lang.String, org.jboss.as.process.ProcessMessageHandler$OperationType);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field managedConnections:Ljava/util/Set;
      11: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          120
      28: aload         4
      30: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #76                 // class org/jboss/as/process/protocol/Connection
      38: astore        5
      40: aload         5
      42: invokeinterface #77,  1           // InterfaceMethod org/jboss/as/process/protocol/Connection.writeMessage:()Ljava/io/OutputStream;
      47: astore        6
      49: aload         6
      51: bipush        22
      53: invokevirtual #79                 // Method java/io/OutputStream.write:(I)V
      56: aload         6
      58: aload_2
      59: invokevirtual #104                // Method org/jboss/as/process/ProcessMessageHandler$OperationType.getCode:()I
      62: invokevirtual #79                 // Method java/io/OutputStream.write:(I)V
      65: aload         6
      67: aload_1
      68: invokestatic  #80                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
      71: aload         6
      73: invokevirtual #81                 // Method java/io/OutputStream.close:()V
      76: aload         6
      78: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      81: goto          94
      84: astore        7
      86: aload         6
      88: invokestatic  #82                 // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      91: aload         7
      93: athrow
      94: goto          117
      97: astore        6
      99: getstatic     #38                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
     102: ldc           #105                // String OPERATION_FAILED
     104: aload         6
     106: invokeinterface #85,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToWriteMessage:(Ljava/lang/String;Ljava/lang/Throwable;)V
     111: aload_0
     112: aload         5
     114: invokevirtual #87                 // Method removeManagedConnection:(Lorg/jboss/as/process/protocol/Connection;)V
     117: goto          18
     120: aload_3
     121: monitorexit
     122: goto          132
     125: astore        8
     127: aload_3
     128: monitorexit
     129: aload         8
     131: athrow
     132: return
    Exception table:
       from    to  target type
          49    76    84   any
          84    86    84   any
          40    94    97   Class java/io/IOException
           7   122   125   any
         125   129   125   any

  int getOngoingProcessCount();
    Code:
       0: aload_0
       1: getfield      #21                 // Field shutdown:Z
       4: ifeq          11
       7: iconst_0
       8: goto          20
      11: aload_0
      12: getfield      #7                  // Field processes:Ljava/util/Map;
      15: invokeinterface #106,  1          // InterfaceMethod java/util/Map.size:()I
      20: ireturn

  public org.jboss.as.process.protocol.ProtocolServer getServer();
    Code:
       0: aload_0
       1: getfield      #20                 // Field server:Lorg/jboss/as/process/protocol/ProtocolServer;
       4: areturn

  java.io.PrintStream getStdout();
    Code:
       0: aload_0
       1: getfield      #12                 // Field stdout:Ljava/io/PrintStream;
       4: areturn

  java.io.PrintStream getStderr();
    Code:
       0: aload_0
       1: getfield      #13                 // Field stderr:Ljava/io/PrintStream;
       4: areturn
}
