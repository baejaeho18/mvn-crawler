Compiled from "HostControllerLogger.java"
public interface org.jboss.as.host.controller.logging.HostControllerLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.host.controller.logging.HostControllerLogger ROOT_LOGGER;

  public static final org.jboss.as.host.controller.logging.HostControllerLogger DOMAIN_LOGGER;

  public abstract void cannotConnect(java.net.URI, java.lang.Exception);

  public abstract void cannotConnectToMaster(java.lang.Exception);

  public abstract void creatingHttpManagementService(java.lang.String, int, int);

  public abstract void errorRetrievingDomainModel(java.lang.String, int, java.lang.String);

  public abstract void existingServerWithState(java.lang.String, org.jboss.as.controller.client.helpers.domain.ServerStatus);

  public abstract void failedToCreateServerProcess(java.lang.Throwable, java.lang.String);

  public abstract void failedToSendReconnect(java.lang.Throwable, java.lang.String);

  public abstract void failedToStartServer(java.lang.Throwable, java.lang.String);

  public abstract void failedToStopServer(java.lang.Throwable, java.lang.String);

  public abstract void gracefulShutdownNotSupported(java.lang.String);

  public abstract void ignoringPermGen(org.jboss.as.host.controller.model.jvm.JvmType, java.lang.String);

  public abstract void noDomainControllerConfigurationProvided(org.jboss.as.controller.RunningMode, java.lang.String, org.jboss.as.controller.RunningMode);

  public abstract void noSecurityRealmDefined();

  public abstract void noServerAvailable(java.lang.String);

  public abstract void lostRemoteDomainConnection();

  public abstract void optionAlreadySet(java.lang.String, java.lang.String, java.lang.String);

  public abstract void reconnectingServer(java.lang.String);

  public abstract void registeredRemoteSlaveHost(java.lang.String, java.lang.String);

  public abstract void registeringServer(java.lang.String);

  public abstract void serverConnected(java.lang.String, org.jboss.remoting3.Channel);

  public abstract void serviceShutdownIncomplete(java.lang.Throwable);

  public abstract void startingServer(java.lang.String);

  public abstract void stoppingServer(java.lang.String);

  public abstract void unexpectedServerState(java.lang.String, org.jboss.as.server.ServerState, org.jboss.as.server.ServerState);

  public abstract void unregisteredRemoteSlaveHost(java.lang.String);

  public abstract void unregisteringServer(java.lang.String);

  public abstract void registeredAtRemoteHostController();

  public abstract void unregisteredAtRemoteHostController();

  public abstract void lostConnectionToRemoteHost(java.lang.String);

  public abstract void invalidRemoteBackupPersisterState();

  public abstract void invalidCachedPersisterState();

  public abstract void caughtExceptionDuringBoot(java.lang.Exception);

  public abstract java.lang.String unsuccessfulBoot();

  public abstract void reportAdminOnlyDomainXmlFailure();

  public abstract void gracefulManagementChannelHandlerShutdownTimedOut(int);

  public abstract void masterHostControllerChanged();

  public abstract void masterHostControllerUnreachable(long);

  public abstract void slaveHostControllerChanged(java.lang.String);

  public abstract void slaveHostControllerUnreachable(java.lang.String, long);

  public abstract java.lang.String argumentExpected(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException attemptingToSet(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalStateException authenticationFailureUnableToConnect(java.lang.Throwable);

  public abstract java.lang.IllegalStateException cannotAccessRemoteFileRepository();

  public abstract java.io.IOException cannotCreateLocalDirectory(java.io.File);

  public abstract java.lang.RuntimeException cannotObtainValidDefaultAddress(java.lang.Throwable, java.lang.String, java.lang.String);

  public abstract java.lang.String cannotRestartServer(java.lang.String, org.jboss.as.controller.client.helpers.domain.ServerStatus);

  public abstract java.lang.String cannotStartServersInvalidMode(org.jboss.as.controller.RunningMode);

  public abstract java.lang.UnsupportedOperationException closeShouldBeManagedByService();

  public abstract java.lang.IllegalStateException configurationPersisterAlreadyInitialized();

  public abstract java.lang.IllegalStateException connectionToMasterInterrupted();

  public abstract java.lang.IllegalStateException connectionToMasterTimeout(java.lang.Throwable, int, long);

  public abstract java.lang.RuntimeException couldNotGetServerInventory(long, java.lang.String);

  public abstract java.io.IOException didNotReadEntireFile(long);

  public abstract java.lang.RuntimeException errorClosingDownHost(java.lang.Throwable);

  public abstract java.lang.String failedProfileOperationsRetrieval();

  public abstract java.lang.RuntimeException failedToGetFileFromRemoteRepository(java.lang.Throwable);

  public abstract java.lang.String failedToGetServerStatus();

  public abstract java.lang.String failedToReadAuthenticationKey(java.lang.Throwable);

  public abstract java.lang.IllegalArgumentException hostNameAlreadyConnected(java.lang.String);

  public abstract javax.security.sasl.SaslException insufficientInformationToGenerateHash();

  public abstract java.lang.String invalidOption(java.lang.String, java.lang.String);

  public abstract org.jboss.as.protocol.mgmt.RequestProcessingException invalidRootId(int);

  public abstract java.lang.String invalidValue(java.lang.String, java.lang.String, java.lang.Object, java.lang.String);

  public abstract java.lang.IllegalStateException invocationNotAllowedAfterBoot(java.lang.String);

  public abstract java.lang.String invocationNotAllowedAfterBoot(org.jboss.dmr.ModelNode);

  public abstract java.lang.String malformedUrl(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalStateException mustInvokeBeforeCheckingSlaveStatus(java.lang.String);

  public abstract java.lang.IllegalStateException mustInvokeBeforePersisting(java.lang.String);

  public abstract java.lang.IllegalArgumentException noChannelForHost(java.lang.String);

  public abstract java.lang.IllegalArgumentException noNameAttributeOnHost();

  public abstract java.lang.IllegalStateException noServerInventory();

  public abstract java.lang.IllegalArgumentException propertyAlreadyExists(java.lang.String);

  public abstract java.lang.IllegalArgumentException propertyNotFound(java.lang.String);

  public abstract java.lang.IllegalArgumentException propertyValueNull(java.lang.String);

  public abstract java.lang.IllegalStateException propertyValueHasNullValue(java.lang.String);

  public abstract java.lang.IllegalArgumentException nullVar(java.lang.String);

  public abstract java.lang.IllegalArgumentException serverNameAlreadyRegistered(java.lang.String);

  public abstract java.lang.String serverStillRunning(java.lang.String);

  public abstract javax.security.sasl.SaslException unableToGenerateHash(java.lang.Throwable);

  public abstract java.lang.String unableToLoadProperties(java.net.URL, java.lang.String);

  public abstract java.lang.IllegalArgumentException undefinedSocketBinding(java.lang.String);

  public abstract java.lang.IllegalStateException undefinedSocketBindingGroup(java.lang.String);

  public abstract java.lang.IllegalStateException unexpectedState(org.jboss.as.server.ServerState);

  public abstract java.lang.IllegalArgumentException unknown(java.lang.String, java.lang.Object);

  public abstract java.lang.String unknownHostValue(java.lang.String, java.lang.Object, java.lang.String);

  public abstract java.io.IOException unrecognizedType(byte);

  public abstract java.lang.IllegalStateException hostAlreadyShutdown();

  public abstract org.jboss.as.controller.OperationFailedException noServerGroupCalled(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException noSocketBindingGroupCalled(java.lang.String);

  public abstract java.lang.UnsupportedOperationException hostControllerSystemPropertyUpdateNotSupported();

  public abstract org.jboss.as.controller.OperationFailedException cannotIgnoreTypeHost(java.lang.String);

  public abstract javax.xml.stream.XMLStreamException duplicateIgnoredResourceType(java.lang.String, java.lang.String, javax.xml.stream.Location);

  public abstract java.lang.String cannotAccessJvmInputArgument(java.lang.Exception);

  public abstract java.lang.IllegalStateException missingHomeDirConfiguration(java.lang.String);

  public abstract java.lang.IllegalStateException homeDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException modulesDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException domainBaseDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException domainBaseDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException configDirectoryDoesNotExist(java.io.File);

  public abstract java.lang.IllegalStateException domainDataDirectoryIsNotDirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateDomainDataDirectory(java.io.File);

  public abstract java.lang.IllegalStateException domainContentDirectoryIsNotDirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateDomainContentDirectory(java.io.File);

  public abstract java.lang.IllegalStateException logDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateLogDirectory(java.io.File);

  public abstract java.lang.IllegalStateException serversDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateServersDirectory(java.io.File);

  public abstract java.lang.IllegalStateException domainTempDirectoryIsNotADirectory(java.io.File);

  public abstract java.lang.IllegalStateException couldNotCreateDomainTempDirectory(java.io.File);

  public abstract java.lang.IllegalStateException sslFailureUnableToConnect(java.lang.Throwable);

  public abstract java.lang.IllegalStateException jvmOptionAlreadyExists(java.lang.String);

  public abstract java.lang.IllegalStateException envVariableAlreadyExists(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException unsupportedManagementVersionForHost(int, int, int, int);

  public abstract java.lang.IllegalStateException failedToAddExtensions(org.jboss.dmr.ModelNode);

  public abstract java.lang.String argumentHasNoValue(java.lang.String, java.lang.String);

  public abstract java.lang.String usageNote(java.lang.String);

  public abstract java.lang.IllegalStateException cannotAccessS3File(java.lang.String);

  public abstract java.lang.IllegalStateException failedMarshallingDomainControllerData();

  public abstract java.io.IOException cannotWriteToS3File(java.lang.String);

  public abstract java.lang.IllegalStateException cannotAccessS3Bucket(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalStateException discoveryOptionsFailureUnableToConnect(java.lang.Throwable);

  public abstract java.lang.IllegalStateException preSignedUrlsMustHaveSamePath();

  public abstract java.lang.IllegalStateException preSignedUrlsMustBeSetOrUnset();

  public abstract java.lang.IllegalStateException preSignedUrlMustPointToFile(java.lang.String);

  public abstract java.lang.IllegalStateException invalidPreSignedUrl(java.lang.String);

  public abstract java.lang.IllegalStateException invalidPreSignedUrlLength(java.lang.String);

  public abstract java.lang.IllegalArgumentException creatingBucketWithUnsupportedCallingFormat();

  public abstract java.lang.IllegalArgumentException invalidS3Location(java.lang.String);

  public abstract java.lang.IllegalArgumentException invalidS3Bucket(java.lang.String);

  public abstract java.io.IOException bucketAuthenticationFailure(java.lang.String, int, java.lang.String);

  public abstract java.io.IOException unexpectedResponse(java.lang.String);

  public abstract java.lang.RuntimeException httpRedirectSupportRequired();

  public abstract java.lang.RuntimeException errorParsingBucketListings(java.lang.Throwable);

  public abstract java.lang.RuntimeException cannotInitializeSaxDriver();

  public abstract java.lang.IllegalStateException cannotInstantiateDiscoveryOptionClass(java.lang.String, java.lang.String);

  public abstract void cannotWriteDomainControllerData(java.lang.Exception);

  public abstract void cannotRemoveS3File(java.lang.Exception);

  public abstract org.jboss.as.controller.OperationFailedException invalidDiscoveryOptionsOrdering(java.lang.String);

  public abstract java.lang.IllegalStateException cannotExecuteTransactionalOperationFromSlave(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException noResourceFor(org.jboss.as.controller.PathAddress);

  public abstract void failedToApplyDomainConfig(java.lang.Exception);

  public abstract void failedToApplyDomainConfig(java.lang.String, org.jboss.dmr.ModelNode);

  public abstract void fetchConfigFromDomainMasterFailed(org.jboss.as.controller.RunningMode, java.lang.String, org.jboss.as.host.controller.model.host.AdminOnlyDomainConfigPolicy, java.lang.String);

  public abstract void noAccessControlConfigurationAvailable(org.jboss.as.controller.RunningMode, java.lang.String, org.jboss.as.host.controller.model.host.AdminOnlyDomainConfigPolicy, java.lang.String, org.jboss.as.controller.RunningMode);

  public abstract void failedDiscoveringMaster(org.jboss.as.host.controller.discovery.DiscoveryOption, java.lang.Exception);

  public abstract void noDiscoveryOptionsLeft();

  public abstract void connectedToMaster(java.net.URI);

  public abstract void usingCachedDC(java.lang.String, java.lang.String);

  public abstract void reconnectingToMaster();

  public abstract void noDomainControllerConfigurationProvidedForAdminOnly(java.lang.String, org.jboss.as.host.controller.model.host.AdminOnlyDomainConfigPolicy, java.lang.String, org.jboss.as.controller.RunningMode);

  public abstract void serverLaunchCommandPrefix(java.lang.String, java.lang.String);

  public abstract java.io.IOException channelClosed();

  public abstract org.jboss.as.controller.OperationFailedException noSecurityRealmForSsl();

  public abstract void jvmVersionUnknown(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException failedToResolveInterface(java.lang.String);

  public abstract java.lang.IllegalStateException couldNotCreateDomainAutoStartDirectory(java.nio.file.Path, java.lang.Throwable);

  public abstract void couldNotPersistAutoStartServerStatus(java.lang.Throwable);

  public abstract java.lang.String invalidDiscoveryType(java.lang.String);

  public abstract java.lang.IllegalStateException couldNotObtainDomainUuid(java.lang.Throwable, java.nio.file.Path);

  public abstract org.jboss.as.controller.OperationFailedException missingReferences(java.lang.String, java.util.Set<java.lang.String>);

  public abstract org.jboss.as.controller.OperationFailedException bindingNameNotUnique(java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException profileInvolvedInACycle(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException profileAttemptingToOverrideSubsystem(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException socketBindingGroupInvolvedInACycle(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException socketBindingGroupAttemptingToOverrideSocketBinding(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException profileIncludesSameSubsystem(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException socketBindingGroupIncludesSameSocketBinding(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException embeddedHostControllerRestartMustProvideAdminOnlyTrue();

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/host/controller/logging/HostControllerLogger
       2: ldc           #2                  // String org.jboss.as.host.controller
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/host/controller/logging/HostControllerLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/host/controller/logging/HostControllerLogger;
      13: ldc           #1                  // class org/jboss/as/host/controller/logging/HostControllerLogger
      15: ldc           #5                  // String org.jboss.as.domain.controller
      17: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #1                  // class org/jboss/as/host/controller/logging/HostControllerLogger
      23: putstatic     #6                  // Field DOMAIN_LOGGER:Lorg/jboss/as/host/controller/logging/HostControllerLogger;
      26: return
}
