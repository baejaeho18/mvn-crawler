Compiled from "ModelControllerLock.java"
class org.jboss.as.controller.ModelControllerLock$Sync extends java.util.concurrent.locks.AbstractQueuedSynchronizer {
  private static final long serialVersionUID;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Object> permitHolder;

  final org.jboss.as.controller.ModelControllerLock this$0;

  private org.jboss.as.controller.ModelControllerLock$Sync(org.jboss.as.controller.ModelControllerLock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/jboss/as/controller/ModelControllerLock;
       5: aload_0
       6: invokespecial #3                  // Method java/util/concurrent/locks/AbstractQueuedSynchronizer."<init>":()V
       9: aload_0
      10: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: aconst_null
      15: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      18: putfield      #6                  // Field permitHolder:Ljava/util/concurrent/atomic/AtomicReference;
      21: return

  protected synchronized boolean tryAcquire(int);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokevirtual #7                  // Method compareAndSetState:(II)Z
       6: ifeq          22
       9: aload_0
      10: getfield      #6                  // Field permitHolder:Ljava/util/concurrent/atomic/AtomicReference;
      13: iload_1
      14: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #6                  // Field permitHolder:Ljava/util/concurrent/atomic/AtomicReference;
      26: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      29: iload_1
      30: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          76
      39: aload_0
      40: invokevirtual #12                 // Method getState:()I
      43: istore_2
      44: iload_2
      45: iconst_1
      46: iadd
      47: istore_3
      48: iload_3
      49: ifge          62
      52: new           #13                 // class java/lang/Error
      55: dup
      56: ldc           #14                 // String Maximum lock count exceeded
      58: invokespecial #15                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: iload_2
      64: iload_3
      65: invokevirtual #7                  // Method compareAndSetState:(II)Z
      68: ifeq          73
      71: iconst_1
      72: ireturn
      73: goto          39
      76: iconst_0
      77: ireturn

  protected synchronized boolean tryRelease(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field permitHolder:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: ifnonnull     20
      12: new           #16                 // class java/lang/IllegalStateException
      15: dup
      16: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":()V
      19: athrow
      20: aload_2
      21: iload_1
      22: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          86
      31: aload_0
      32: invokevirtual #12                 // Method getState:()I
      35: istore_3
      36: iload_3
      37: iconst_1
      38: isub
      39: istore        4
      41: iload         4
      43: ifge          54
      46: new           #16                 // class java/lang/IllegalStateException
      49: dup
      50: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":()V
      53: athrow
      54: aload_0
      55: iload_3
      56: iload         4
      58: invokevirtual #7                  // Method compareAndSetState:(II)Z
      61: ifeq          83
      64: iload         4
      66: ifne          81
      69: aload_0
      70: getfield      #6                  // Field permitHolder:Ljava/util/concurrent/atomic/AtomicReference;
      73: aload_2
      74: aconst_null
      75: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      78: pop
      79: iconst_1
      80: ireturn
      81: iconst_0
      82: ireturn
      83: goto          31
      86: iconst_0
      87: ireturn

  org.jboss.as.controller.ModelControllerLock$Sync(org.jboss.as.controller.ModelControllerLock, org.jboss.as.controller.ModelControllerLock$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/jboss/as/controller/ModelControllerLock;)V
       5: return
}
