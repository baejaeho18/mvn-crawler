Compiled from "BackupXmlConfigurationPersister.java"
public class org.jboss.as.controller.persistence.BackupXmlConfigurationPersister extends org.jboss.as.controller.persistence.XmlConfigurationPersister {
  org.jboss.as.controller.persistence.ConfigurationFile configurationFile;

  private final java.util.concurrent.atomic.AtomicBoolean successfulBoot;

  public org.jboss.as.controller.persistence.BackupXmlConfigurationPersister(org.jboss.as.controller.persistence.ConfigurationFile, javax.xml.namespace.QName, org.jboss.staxmapper.XMLElementReader<java.util.List<org.jboss.dmr.ModelNode>>, org.jboss.staxmapper.XMLElementWriter<org.jboss.as.controller.persistence.ModelMarshallingContext>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/jboss/as/controller/persistence/ConfigurationFile.getBootFile:()Ljava/io/File;
       5: aload_2
       6: aload_3
       7: aload         4
       9: iconst_0
      10: invokespecial #2                  // Method org/jboss/as/controller/persistence/XmlConfigurationPersister."<init>":(Ljava/io/File;Ljavax/xml/namespace/QName;Lorg/jboss/staxmapper/XMLElementReader;Lorg/jboss/staxmapper/XMLElementWriter;Z)V
      13: aload_0
      14: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      17: dup
      18: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      21: putfield      #5                  // Field successfulBoot:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field configurationFile:Lorg/jboss/as/controller/persistence/ConfigurationFile;
      29: return

  public org.jboss.as.controller.persistence.BackupXmlConfigurationPersister(org.jboss.as.controller.persistence.ConfigurationFile, javax.xml.namespace.QName, org.jboss.staxmapper.XMLElementReader<java.util.List<org.jboss.dmr.ModelNode>>, org.jboss.staxmapper.XMLElementWriter<org.jboss.as.controller.persistence.ModelMarshallingContext>, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/jboss/as/controller/persistence/ConfigurationFile.getBootFile:()Ljava/io/File;
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload_1
      10: iload         5
      12: iload         6
      14: invokestatic  #7                  // Method isSuppressLoad:(Lorg/jboss/as/controller/persistence/ConfigurationFile;ZZ)Z
      17: invokespecial #2                  // Method org/jboss/as/controller/persistence/XmlConfigurationPersister."<init>":(Ljava/io/File;Ljavax/xml/namespace/QName;Lorg/jboss/staxmapper/XMLElementReader;Lorg/jboss/staxmapper/XMLElementWriter;Z)V
      20: aload_0
      21: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
      24: dup
      25: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      28: putfield      #5                  // Field successfulBoot:Ljava/util/concurrent/atomic/AtomicBoolean;
      31: aload_0
      32: aload_1
      33: putfield      #6                  // Field configurationFile:Lorg/jboss/as/controller/persistence/ConfigurationFile;
      36: return

  private static boolean isSuppressLoad(org.jboss.as.controller.persistence.ConfigurationFile, boolean, boolean);
    Code:
       0: iload_2
       1: ifeq          18
       4: aload_0
       5: invokevirtual #1                  // Method org/jboss/as/controller/persistence/ConfigurationFile.getBootFile:()Ljava/io/File;
       8: invokevirtual #8                  // Method java/io/File.length:()J
      11: lconst_0
      12: lcmp
      13: ifne          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: invokevirtual #9                  // Method org/jboss/as/controller/persistence/ConfigurationFile.getInteractionPolicy:()Lorg/jboss/as/controller/persistence/ConfigurationFile$InteractionPolicy;
      22: astore_3
      23: aload_3
      24: getstatic     #10                 // Field org/jboss/as/controller/persistence/ConfigurationFile$InteractionPolicy.NEW:Lorg/jboss/as/controller/persistence/ConfigurationFile$InteractionPolicy;
      27: if_acmpeq     37
      30: aload_3
      31: getstatic     #11                 // Field org/jboss/as/controller/persistence/ConfigurationFile$InteractionPolicy.DISCARD:Lorg/jboss/as/controller/persistence/ConfigurationFile$InteractionPolicy;
      34: if_acmpne     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: istore        4
      44: iload         4
      46: ifeq          57
      49: iload_1
      50: ifne          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public void registerAdditionalRootElement(javax.xml.namespace.QName, org.jboss.staxmapper.XMLElementReader<java.util.List<org.jboss.dmr.ModelNode>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method org/jboss/as/controller/persistence/XmlConfigurationPersister.registerAdditionalRootElement:(Ljavax/xml/namespace/QName;Lorg/jboss/staxmapper/XMLElementReader;)V
       6: return

  public void successfulBoot() throws org.jboss.as.controller.persistence.ConfigurationPersistenceException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field successfulBoot:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          19
      12: aload_0
      13: getfield      #6                  // Field configurationFile:Lorg/jboss/as/controller/persistence/ConfigurationFile;
      16: invokevirtual #14                 // Method org/jboss/as/controller/persistence/ConfigurationFile.successfulBoot:()V
      19: return

  public org.jboss.as.controller.persistence.ConfigurationPersister$PersistenceResource store(org.jboss.dmr.ModelNode, java.util.Set<org.jboss.as.controller.PathAddress>) throws org.jboss.as.controller.persistence.ConfigurationPersistenceException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field successfulBoot:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          19
      10: new           #16                 // class org/jboss/as/controller/persistence/BackupXmlConfigurationPersister$1
      13: dup
      14: aload_0
      15: invokespecial #17                 // Method org/jboss/as/controller/persistence/BackupXmlConfigurationPersister$1."<init>":(Lorg/jboss/as/controller/persistence/BackupXmlConfigurationPersister;)V
      18: areturn
      19: new           #18                 // class org/jboss/as/controller/persistence/ConfigurationFilePersistenceResource
      22: dup
      23: aload_1
      24: aload_0
      25: getfield      #6                  // Field configurationFile:Lorg/jboss/as/controller/persistence/ConfigurationFile;
      28: aload_0
      29: invokespecial #19                 // Method org/jboss/as/controller/persistence/ConfigurationFilePersistenceResource."<init>":(Lorg/jboss/dmr/ModelNode;Lorg/jboss/as/controller/persistence/ConfigurationFile;Lorg/jboss/as/controller/persistence/AbstractConfigurationPersister;)V
      32: areturn

  public java.lang.String snapshot() throws org.jboss.as.controller.persistence.ConfigurationPersistenceException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field configurationFile:Lorg/jboss/as/controller/persistence/ConfigurationFile;
       4: invokevirtual #20                 // Method org/jboss/as/controller/persistence/ConfigurationFile.snapshot:()Ljava/lang/String;
       7: areturn

  public org.jboss.as.controller.persistence.ConfigurationPersister$SnapshotInfo listSnapshots();
    Code:
       0: aload_0
       1: getfield      #6                  // Field configurationFile:Lorg/jboss/as/controller/persistence/ConfigurationFile;
       4: invokevirtual #21                 // Method org/jboss/as/controller/persistence/ConfigurationFile.listSnapshots:()Lorg/jboss/as/controller/persistence/ConfigurationPersister$SnapshotInfo;
       7: areturn

  public void deleteSnapshot(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field configurationFile:Lorg/jboss/as/controller/persistence/ConfigurationFile;
       4: aload_1
       5: invokevirtual #22                 // Method org/jboss/as/controller/persistence/ConfigurationFile.deleteSnapshot:(Ljava/lang/String;)V
       8: return
}
