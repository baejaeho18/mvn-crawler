Compiled from "ProtocolLogger.java"
public interface org.jboss.as.protocol.logging.ProtocolLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.protocol.logging.ProtocolLogger ROOT_LOGGER;

  public static final org.jboss.as.protocol.logging.ProtocolLogger CLIENT_LOGGER;

  public static final org.jboss.as.protocol.logging.ProtocolLogger CONNECTION_LOGGER;

  public abstract void errorClosingChannel(java.lang.String);

  public abstract void failedToCloseResource(java.lang.Throwable, java.lang.Object);

  public abstract void failedToCloseServerSocket(java.lang.Throwable, java.net.ServerSocket);

  public abstract void executorNotNeeded();

  public abstract void noSuchRequest(int, org.jboss.remoting3.Channel);

  public abstract java.net.ConnectException couldNotConnect(java.net.URI);

  public abstract java.io.IOException invalidByteToken(int, byte);

  public abstract java.io.IOException invalidSignature(java.lang.String);

  public abstract java.io.IOException invalidType(java.lang.String);

  public abstract java.lang.IllegalArgumentException invalidType(java.lang.String, java.lang.String, byte);

  public abstract java.lang.IllegalArgumentException nullVar(java.lang.String);

  public abstract java.lang.IllegalStateException operationIdAlreadyExists(int);

  public abstract java.lang.IllegalArgumentException nullExecutor();

  public abstract java.net.ConnectException failedToConnect(java.net.URI, java.io.IOException);

  public abstract java.io.IOException channelClosed();

  public abstract java.io.IOException noSuchResponseHandler(java.lang.String);

  public abstract java.io.IOException responseHandlerNotFound(int);

  public abstract void cancelledAsyncTask(java.lang.String, java.lang.Thread);

  public abstract void cancelledAsyncTaskBeforeRun(java.lang.String);

  public abstract void deprecatedCLIConfiguration(java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/protocol/logging/ProtocolLogger
       2: ldc           #2                  // String org.jboss.as.protocol
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/protocol/logging/ProtocolLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      13: ldc           #1                  // class org/jboss/as/protocol/logging/ProtocolLogger
      15: ldc           #5                  // String org.jboss.as.protocol.client
      17: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #1                  // class org/jboss/as/protocol/logging/ProtocolLogger
      23: putstatic     #6                  // Field CLIENT_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      26: ldc           #1                  // class org/jboss/as/protocol/logging/ProtocolLogger
      28: ldc           #7                  // String org.jboss.as.protocol.connection
      30: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #1                  // class org/jboss/as/protocol/logging/ProtocolLogger
      36: putstatic     #8                  // Field CONNECTION_LOGGER:Lorg/jboss/as/protocol/logging/ProtocolLogger;
      39: return
}
