Compiled from "ProcessLogger.java"
public interface org.jboss.as.process.logging.ProcessLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.process.logging.ProcessLogger ROOT_LOGGER;

  public static final org.jboss.as.process.logging.ProcessLogger CLIENT_LOGGER;

  public static final org.jboss.as.process.logging.ProcessLogger PROTOCOL_LOGGER;

  public static final org.jboss.as.process.logging.ProcessLogger PROTOCOL_CLIENT_LOGGER;

  public static final org.jboss.as.process.logging.ProcessLogger PROTOCOL_CONNECTION_LOGGER;

  public static final org.jboss.as.process.logging.ProcessLogger SERVER_LOGGER;

  public abstract void attemptToReconnectNonExistentProcess(java.lang.String);

  public abstract void attemptToRemoveNonExistentProcess(java.lang.String);

  public abstract void attemptToStartNonExistentProcess(java.lang.String);

  public abstract void attemptToStopNonExistentProcess(java.lang.String);

  public abstract void duplicateProcessName(java.lang.String);

  public abstract void failedToSendAuthKey(java.lang.String, java.lang.Throwable);

  public abstract void failedToSendDataBytes(java.lang.Throwable, java.lang.String);

  public abstract void failedToSendReconnect(java.lang.Throwable, java.lang.String);

  public abstract void failedToStartProcess(java.lang.String);

  public abstract void failedToWriteMessage(java.lang.String, java.lang.Throwable);

  public abstract void processFinished(java.lang.String, int);

  public abstract void receivedInvalidVersion(java.net.InetAddress);

  public abstract void receivedUnknownGreetingCode(int, java.net.InetAddress);

  public abstract void receivedUnknownCredentials(java.net.InetAddress);

  public abstract void receivedUnknownMessageCode(int);

  public abstract void shutdownComplete();

  public abstract void shuttingDown();

  public abstract void startingProcess(java.lang.String);

  public abstract void stoppingProcess(java.lang.String);

  public abstract void streamProcessingFailed(java.lang.String, java.lang.Throwable);

  public abstract void waitingToRestart(int, java.lang.String);

  public abstract void failedToKillProcess(java.lang.String);

  public abstract java.lang.String argUsage(java.lang.String);

  public abstract java.lang.String argBackup();

  public abstract java.lang.String argCachedDc();

  public abstract java.lang.String argDomainConfig();

  public abstract java.lang.String argShortDomainConfig();

  public abstract java.lang.String argReadOnlyDomainConfig();

  public abstract java.lang.String argHelp();

  public abstract java.lang.String argInterProcessHcAddress();

  public abstract java.lang.String argInterProcessHcPort();

  public abstract java.lang.String argHostConfig();

  public abstract java.lang.String argReadOnlyHostConfig();

  public abstract java.lang.String argPcAddress();

  public abstract java.lang.String argPcPort();

  public abstract java.lang.String argProperties();

  public abstract java.lang.String argSystem();

  public abstract java.lang.String argVersion();

  public abstract java.lang.String argPublicBindAddress();

  public abstract java.lang.String argInterfaceBindAddress();

  public abstract java.lang.String argDefaultMulticastAddress();

  public abstract java.lang.String argAdminOnly();

  public abstract java.lang.String argMasterAddress();

  public abstract java.lang.String argMasterPort();

  public abstract java.lang.String argSecMgr();

  public abstract java.lang.String noArgValue(java.lang.String);

  public abstract java.lang.IllegalStateException cannotFindJavaExe(java.lang.String);

  public abstract java.lang.IllegalArgumentException invalidAuthKeyLen();

  public abstract java.lang.IllegalArgumentException invalidCommandLen();

  public abstract java.lang.IllegalStateException invalidJavaHome(java.lang.String);

  public abstract java.lang.IllegalStateException invalidJavaHomeBin(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException invalidLength(java.lang.String);

  public abstract java.lang.IllegalArgumentException invalidOption(java.lang.String);

  public abstract java.lang.IllegalArgumentException nullCommandComponent();

  public abstract java.lang.IllegalArgumentException nullVar(java.lang.String);

  public abstract void failedToAcceptConnection(java.lang.Throwable);

  public abstract void failedToCloseResource(java.lang.Throwable, java.lang.Object);

  public abstract void failedToCloseServerSocket(java.lang.Throwable, java.net.ServerSocket);

  public abstract void failedToCloseSocket(java.lang.Throwable);

  public abstract void failedToFinishMarshaller(java.lang.Throwable, org.jboss.marshalling.Marshaller);

  public abstract void failedToFinishUnmarshaller(java.lang.Throwable, org.jboss.marshalling.Unmarshaller);

  public abstract void failedToHandleIncomingConnection(java.lang.Throwable);

  public abstract void failedToHandleSocketFailure(java.lang.Throwable);

  public abstract void failedToHandleSocketFinished(java.lang.Throwable);

  public abstract void failedToHandleSocketShutdown(java.lang.Throwable);

  public abstract void failedToReadMessage(java.lang.Throwable);

  public abstract void leakedMessageOutputStream();

  public abstract java.io.IOException failedToCreateServerThread();

  public abstract java.io.IOException failedToReadObject(java.lang.Throwable);

  public abstract java.io.UTFDataFormatException invalidByte();

  public abstract java.io.UTFDataFormatException invalidByte(char, int);

  public abstract java.io.IOException invalidByteToken(int, byte);

  public abstract java.io.IOException invalidCommandByte(int);

  public abstract java.io.IOException invalidStartChunk(int);

  public abstract java.io.EOFException readBytes(int);

  public abstract java.io.IOException streamClosed();

  public abstract java.lang.IllegalStateException threadCreationRefused();

  public abstract java.io.EOFException unexpectedEndOfStream();

  public abstract java.io.IOException writeChannelClosed();

  public abstract java.io.IOException writesAlreadyShutdown();

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/process/logging/ProcessLogger
       2: ldc           #2                  // String org.jboss.as.process
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/process/logging/ProcessLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      13: ldc           #1                  // class org/jboss/as/process/logging/ProcessLogger
      15: ldc           #5                  // String org.jboss.as.process-controller.client
      17: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #1                  // class org/jboss/as/process/logging/ProcessLogger
      23: putstatic     #6                  // Field CLIENT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      26: ldc           #1                  // class org/jboss/as/process/logging/ProcessLogger
      28: ldc           #7                  // String org.jboss.as.process.protocol
      30: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #1                  // class org/jboss/as/process/logging/ProcessLogger
      36: putstatic     #8                  // Field PROTOCOL_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      39: ldc           #1                  // class org/jboss/as/process/logging/ProcessLogger
      41: ldc           #9                  // String org.jboss.as.protocol.client
      43: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      46: checkcast     #1                  // class org/jboss/as/process/logging/ProcessLogger
      49: putstatic     #10                 // Field PROTOCOL_CLIENT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      52: ldc           #1                  // class org/jboss/as/process/logging/ProcessLogger
      54: ldc           #11                 // String org.jboss.as.protocol.connection
      56: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      59: checkcast     #1                  // class org/jboss/as/process/logging/ProcessLogger
      62: putstatic     #12                 // Field PROTOCOL_CONNECTION_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      65: ldc           #1                  // class org/jboss/as/process/logging/ProcessLogger
      67: ldc           #13                 // String org.jboss.as.process-controller.server
      69: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      72: checkcast     #1                  // class org/jboss/as/process/logging/ProcessLogger
      75: putstatic     #14                 // Field SERVER_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      78: return
}
