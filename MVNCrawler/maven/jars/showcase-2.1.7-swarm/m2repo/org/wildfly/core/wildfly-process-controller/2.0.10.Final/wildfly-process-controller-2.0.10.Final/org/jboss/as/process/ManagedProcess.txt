Compiled from "ManagedProcess.java"
final class org.jboss.as.process.ManagedProcess {
  private final java.lang.String processName;

  private final java.util.List<java.lang.String> command;

  private final java.util.Map<java.lang.String, java.lang.String> env;

  private final java.lang.String workingDirectory;

  private final org.jboss.as.process.logging.ProcessLogger log;

  private final java.lang.Object lock;

  private final org.jboss.as.process.ProcessController processController;

  private final java.lang.String authKey;

  private final boolean isPrivileged;

  private final org.jboss.as.process.RespawnPolicy respawnPolicy;

  private java.io.OutputStream stdin;

  private volatile org.jboss.as.process.ManagedProcess$State state;

  private java.lang.Process process;

  private boolean shutdown;

  private boolean stopRequested;

  private final java.util.concurrent.atomic.AtomicInteger respawnCount;

  static final boolean $assertionsDisabled;

  public java.lang.String getAuthKey();
    Code:
       0: aload_0
       1: getfield      #10                 // Field authKey:Ljava/lang/String;
       4: areturn

  public boolean isPrivileged();
    Code:
       0: aload_0
       1: getfield      #11                 // Field isPrivileged:Z
       4: ireturn

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
       4: getstatic     #12                 // Field org/jboss/as/process/ManagedProcess$State.STARTED:Lorg/jboss/as/process/ManagedProcess$State;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      14: getstatic     #13                 // Field org/jboss/as/process/ManagedProcess$State.STOPPING:Lorg/jboss/as/process/ManagedProcess$State;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isStopping();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
       4: getstatic     #13                 // Field org/jboss/as/process/ManagedProcess$State.STOPPING:Lorg/jboss/as/process/ManagedProcess$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  org.jboss.as.process.ManagedProcess(java.lang.String, java.util.List<java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.Object, org.jboss.as.process.ProcessController, java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #15                 // Field org/jboss/as/process/ManagedProcess$State.DOWN:Lorg/jboss/as/process/ManagedProcess$State;
       8: putfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      11: aload_0
      12: iconst_0
      13: putfield      #2                  // Field stopRequested:Z
      16: aload_0
      17: new           #16                 // class java/util/concurrent/atomic/AtomicInteger
      20: dup
      21: iconst_0
      22: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      25: putfield      #18                 // Field respawnCount:Ljava/util/concurrent/atomic/AtomicInteger;
      28: aload_1
      29: ifnonnull     43
      32: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      35: ldc           #20                 // String processName
      37: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      42: athrow
      43: aload_2
      44: ifnonnull     58
      47: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      50: ldc           #22                 // String command
      52: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      57: athrow
      58: aload_3
      59: ifnonnull     73
      62: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      65: ldc           #23                 // String env
      67: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      72: athrow
      73: aload         4
      75: ifnonnull     89
      78: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      81: ldc           #24                 // String workingDirectory
      83: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      88: athrow
      89: aload         5
      91: ifnonnull     105
      94: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
      97: ldc           #25                 // String lock
      99: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     104: athrow
     105: aload         6
     107: ifnonnull     121
     110: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
     113: ldc           #26                 // String controller
     115: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     120: athrow
     121: aload         7
     123: ifnonnull     137
     126: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
     129: ldc           #27                 // String authKey
     131: invokeinterface #21,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     136: athrow
     137: aload         7
     139: invokevirtual #28                 // Method java/lang/String.length:()I
     142: bipush        24
     144: if_icmpeq     158
     147: getstatic     #19                 // Field org/jboss/as/process/logging/ProcessLogger.ROOT_LOGGER:Lorg/jboss/as/process/logging/ProcessLogger;
     150: ldc           #27                 // String authKey
     152: invokeinterface #30,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.invalidLength:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     157: athrow
     158: aload_0
     159: aload_1
     160: putfield      #9                  // Field processName:Ljava/lang/String;
     163: aload_0
     164: aload_2
     165: putfield      #31                 // Field command:Ljava/util/List;
     168: aload_0
     169: aload_3
     170: putfield      #32                 // Field env:Ljava/util/Map;
     173: aload_0
     174: aload         4
     176: putfield      #33                 // Field workingDirectory:Ljava/lang/String;
     179: aload_0
     180: aload         5
     182: putfield      #7                  // Field lock:Ljava/lang/Object;
     185: aload_0
     186: aload         6
     188: putfield      #8                  // Field processController:Lorg/jboss/as/process/ProcessController;
     191: aload_0
     192: aload         7
     194: putfield      #10                 // Field authKey:Ljava/lang/String;
     197: aload_0
     198: iload         8
     200: putfield      #11                 // Field isPrivileged:Z
     203: aload_0
     204: iload         9
     206: ifeq          215
     209: getstatic     #34                 // Field org/jboss/as/process/RespawnPolicy.RESPAWN:Lorg/jboss/as/process/RespawnPolicy;
     212: goto          218
     215: getstatic     #35                 // Field org/jboss/as/process/RespawnPolicy.NONE:Lorg/jboss/as/process/RespawnPolicy;
     218: putfield      #1                  // Field respawnPolicy:Lorg/jboss/as/process/RespawnPolicy;
     221: aload_0
     222: ldc           #36                 // class org/jboss/as/process/logging/ProcessLogger
     224: new           #37                 // class java/lang/StringBuilder
     227: dup
     228: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     231: ldc           #39                 // String org.jboss.as.process.
     233: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload_1
     237: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: ldc           #41                 // String .status
     242: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     248: invokestatic  #43                 // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
     251: checkcast     #36                 // class org/jboss/as/process/logging/ProcessLogger
     254: putfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
     257: return

  int incrementAndGetRespawnCount();
    Code:
       0: aload_0
       1: getfield      #18                 // Field respawnCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: ireturn

  int resetRespawnCount();
    Code:
       0: aload_0
       1: getfield      #18                 // Field respawnCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_0
       5: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicInteger.getAndSet:(I)I
       8: ireturn

  public java.lang.String getProcessName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field processName:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      11: getstatic     #15                 // Field org/jboss/as/process/ManagedProcess$State.DOWN:Lorg/jboss/as/process/ManagedProcess$State;
      14: if_acmpeq     35
      17: aload_0
      18: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      21: ldc           #46                 // String Attempted to start already-running process \'%s\'
      23: aload_0
      24: getfield      #9                  // Field processName:Ljava/lang/String;
      27: invokeinterface #47,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_1
      33: monitorexit
      34: return
      35: aload_0
      36: invokevirtual #48                 // Method resetRespawnCount:()I
      39: pop
      40: aload_0
      41: iconst_0
      42: invokevirtual #49                 // Method doStart:(Z)V
      45: aload_1
      46: monitorexit
      47: goto          55
      50: astore_2
      51: aload_1
      52: monitorexit
      53: aload_2
      54: athrow
      55: return
    Exception table:
       from    to  target type
           7    34    50   any
          35    47    50   any
          50    53    50   any

  public void sendStdin(java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #50                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #7                  // Field lock:Ljava/lang/Object;
      10: invokestatic  #51                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifne          24
      16: new           #52                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #53                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #54                 // Field stdin:Ljava/io/OutputStream;
      28: invokestatic  #55                 // Method getBase64OutputStream:(Ljava/io/OutputStream;)Lorg/jboss/as/process/stdin/Base64OutputStream;
      31: astore_2
      32: aload_1
      33: aload_2
      34: invokestatic  #56                 // Method org/jboss/as/process/protocol/StreamUtils.copyStream:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      37: aload_2
      38: invokevirtual #57                 // Method org/jboss/as/process/stdin/Base64OutputStream.close:()V
      41: goto          61
      44: astore_2
      45: aload_0
      46: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      49: aload_2
      50: aload_0
      51: getfield      #9                  // Field processName:Ljava/lang/String;
      54: invokeinterface #59,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToSendDataBytes:(Ljava/lang/Throwable;Ljava/lang/String;)V
      59: aload_2
      60: athrow
      61: return
    Exception table:
       from    to  target type
          24    41    44   Class java/io/IOException

  public void reconnect(java.lang.String, java.lang.String, int, boolean, java.lang.String);
    Code:
       0: getstatic     #50                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #7                  // Field lock:Ljava/lang/Object;
      10: invokestatic  #51                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifne          24
      16: new           #52                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #53                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #54                 // Field stdin:Ljava/io/OutputStream;
      28: invokestatic  #55                 // Method getBase64OutputStream:(Ljava/io/OutputStream;)Lorg/jboss/as/process/stdin/Base64OutputStream;
      31: astore        6
      33: aload         6
      35: aload_1
      36: invokestatic  #60                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
      39: aload         6
      41: aload_2
      42: invokestatic  #60                 // Method org/jboss/as/process/protocol/StreamUtils.writeUTFZBytes:(Ljava/io/OutputStream;Ljava/lang/String;)V
      45: aload         6
      47: iload_3
      48: invokestatic  #61                 // Method org/jboss/as/process/protocol/StreamUtils.writeInt:(Ljava/io/OutputStream;I)V
      51: aload         6
      53: iload         4
      55: invokestatic  #62                 // Method org/jboss/as/process/protocol/StreamUtils.writeBoolean:(Ljava/io/OutputStream;Z)V
      58: aload         6
      60: aload         5
      62: ldc           #63                 // String US-ASCII
      64: invokestatic  #64                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      67: invokevirtual #65                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      70: invokevirtual #66                 // Method org/jboss/as/process/stdin/Base64OutputStream.write:([B)V
      73: aload         6
      75: invokevirtual #57                 // Method org/jboss/as/process/stdin/Base64OutputStream.close:()V
      78: goto          108
      81: astore        6
      83: aload_0
      84: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      87: getstatic     #12                 // Field org/jboss/as/process/ManagedProcess$State.STARTED:Lorg/jboss/as/process/ManagedProcess$State;
      90: if_acmpne     108
      93: aload_0
      94: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      97: aload         6
      99: aload_0
     100: getfield      #9                  // Field processName:Ljava/lang/String;
     103: invokeinterface #67,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToSendReconnect:(Ljava/lang/Throwable;Ljava/lang/String;)V
     108: return
    Exception table:
       from    to  target type
          24    78    81   Class java/io/IOException

  void doStart(boolean);
    Code:
       0: getstatic     #50                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #7                  // Field lock:Ljava/lang/Object;
      10: invokestatic  #51                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifne          24
      16: new           #52                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #53                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: iconst_0
      26: putfield      #2                  // Field stopRequested:Z
      29: new           #68                 // class java/util/ArrayList
      32: dup
      33: aload_0
      34: getfield      #31                 // Field command:Ljava/util/List;
      37: invokespecial #69                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      40: astore_2
      41: iload_1
      42: ifeq          54
      45: aload_2
      46: ldc           #71                 // String --process-restarted
      48: invokeinterface #72,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      58: aload_0
      59: getfield      #9                  // Field processName:Ljava/lang/String;
      62: invokeinterface #73,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.startingProcess:(Ljava/lang/String;)V
      67: aload_0
      68: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      71: ldc           #74                 // String Process name=\'%s\' command=\'%s\' workingDirectory=\'%s\'
      73: aload_0
      74: getfield      #9                  // Field processName:Ljava/lang/String;
      77: aload_2
      78: aload_0
      79: getfield      #33                 // Field workingDirectory:Ljava/lang/String;
      82: invokeinterface #75,  5           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      87: new           #76                 // class java/lang/ProcessBuilder
      90: dup
      91: aload_2
      92: invokeinterface #77,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      97: invokedynamic #78,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     102: invokeinterface #79,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     107: invokestatic  #80                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     110: invokeinterface #81,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     115: checkcast     #82                 // class java/util/List
     118: invokespecial #83                 // Method java/lang/ProcessBuilder."<init>":(Ljava/util/List;)V
     121: astore_3
     122: aload_3
     123: invokevirtual #84                 // Method java/lang/ProcessBuilder.environment:()Ljava/util/Map;
     126: aload_0
     127: getfield      #32                 // Field env:Ljava/util/Map;
     130: invokeinterface #85,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     135: aload_3
     136: new           #86                 // class java/io/File
     139: dup
     140: aload_0
     141: getfield      #33                 // Field workingDirectory:Ljava/lang/String;
     144: invokespecial #87                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     147: invokevirtual #88                 // Method java/lang/ProcessBuilder.directory:(Ljava/io/File;)Ljava/lang/ProcessBuilder;
     150: pop
     151: aload_3
     152: invokevirtual #89                 // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
     155: astore        4
     157: goto          195
     160: astore        5
     162: aload         5
     164: invokevirtual #90                 // Method java/io/IOException.printStackTrace:()V
     167: aload_0
     168: getfield      #8                  // Field processController:Lorg/jboss/as/process/ProcessController;
     171: aload_0
     172: getfield      #9                  // Field processName:Ljava/lang/String;
     175: getstatic     #91                 // Field org/jboss/as/process/ProcessMessageHandler$OperationType.START:Lorg/jboss/as/process/ProcessMessageHandler$OperationType;
     178: invokevirtual #92                 // Method org/jboss/as/process/ProcessController.operationFailed:(Ljava/lang/String;Lorg/jboss/as/process/ProcessMessageHandler$OperationType;)V
     181: aload_0
     182: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
     185: aload_0
     186: getfield      #9                  // Field processName:Ljava/lang/String;
     189: invokeinterface #93,  2           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToStartProcess:(Ljava/lang/String;)V
     194: return
     195: invokestatic  #94                 // Method java/lang/System.currentTimeMillis:()J
     198: lstore        5
     200: aload         4
     202: invokevirtual #95                 // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
     205: astore        7
     207: aload         4
     209: invokevirtual #96                 // Method java/lang/Process.getErrorStream:()Ljava/io/InputStream;
     212: astore        8
     214: aload         4
     216: invokevirtual #97                 // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
     219: astore        9
     221: new           #98                 // class java/lang/Thread
     224: dup
     225: new           #99                 // class org/jboss/as/process/ManagedProcess$ReadTask
     228: dup
     229: aload_0
     230: aload         8
     232: aload_0
     233: getfield      #8                  // Field processController:Lorg/jboss/as/process/ProcessController;
     236: invokevirtual #100                // Method org/jboss/as/process/ProcessController.getStderr:()Ljava/io/PrintStream;
     239: aconst_null
     240: invokespecial #101                // Method org/jboss/as/process/ManagedProcess$ReadTask."<init>":(Lorg/jboss/as/process/ManagedProcess;Ljava/io/InputStream;Ljava/io/PrintStream;Lorg/jboss/as/process/ManagedProcess$1;)V
     243: invokespecial #102                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
     246: astore        10
     248: aload         10
     250: ldc           #103                // String stderr for %s
     252: iconst_1
     253: anewarray     #104                // class java/lang/Object
     256: dup
     257: iconst_0
     258: aload_0
     259: getfield      #9                  // Field processName:Ljava/lang/String;
     262: aastore
     263: invokestatic  #105                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     266: invokevirtual #106                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     269: aload         10
     271: invokevirtual #107                // Method java/lang/Thread.start:()V
     274: new           #98                 // class java/lang/Thread
     277: dup
     278: new           #99                 // class org/jboss/as/process/ManagedProcess$ReadTask
     281: dup
     282: aload_0
     283: aload         9
     285: aload_0
     286: getfield      #8                  // Field processController:Lorg/jboss/as/process/ProcessController;
     289: invokevirtual #108                // Method org/jboss/as/process/ProcessController.getStdout:()Ljava/io/PrintStream;
     292: aconst_null
     293: invokespecial #101                // Method org/jboss/as/process/ManagedProcess$ReadTask."<init>":(Lorg/jboss/as/process/ManagedProcess;Ljava/io/InputStream;Ljava/io/PrintStream;Lorg/jboss/as/process/ManagedProcess$1;)V
     296: invokespecial #102                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
     299: astore        11
     301: aload         11
     303: ldc           #109                // String stdout for %s
     305: iconst_1
     306: anewarray     #104                // class java/lang/Object
     309: dup
     310: iconst_0
     311: aload_0
     312: getfield      #9                  // Field processName:Ljava/lang/String;
     315: aastore
     316: invokestatic  #105                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     319: invokevirtual #106                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     322: aload         11
     324: invokevirtual #107                // Method java/lang/Thread.start:()V
     327: new           #98                 // class java/lang/Thread
     330: dup
     331: new           #110                // class org/jboss/as/process/ManagedProcess$JoinTask
     334: dup
     335: aload_0
     336: lload         5
     338: invokespecial #111                // Method org/jboss/as/process/ManagedProcess$JoinTask."<init>":(Lorg/jboss/as/process/ManagedProcess;J)V
     341: invokespecial #102                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
     344: astore        12
     346: aload         12
     348: ldc           #112                // String reaper for %s
     350: iconst_1
     351: anewarray     #104                // class java/lang/Object
     354: dup
     355: iconst_0
     356: aload_0
     357: getfield      #9                  // Field processName:Ljava/lang/String;
     360: aastore
     361: invokestatic  #105                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     364: invokevirtual #106                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     367: aload         12
     369: invokevirtual #107                // Method java/lang/Thread.start:()V
     372: iconst_0
     373: istore        13
     375: aload         7
     377: invokestatic  #55                 // Method getBase64OutputStream:(Ljava/io/OutputStream;)Lorg/jboss/as/process/stdin/Base64OutputStream;
     380: astore        14
     382: aload         14
     384: aload_0
     385: getfield      #10                 // Field authKey:Ljava/lang/String;
     388: ldc           #63                 // String US-ASCII
     390: invokestatic  #64                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     393: invokevirtual #65                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     396: invokevirtual #113                // Method java/io/OutputStream.write:([B)V
     399: aload         14
     401: invokevirtual #114                // Method java/io/OutputStream.close:()V
     404: iconst_1
     405: istore        13
     407: goto          427
     410: astore        14
     412: aload_0
     413: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
     416: aload_0
     417: getfield      #9                  // Field processName:Ljava/lang/String;
     420: aload         14
     422: invokeinterface #116,  3          // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToSendAuthKey:(Ljava/lang/String;Ljava/lang/Throwable;)V
     427: aload_0
     428: aload         4
     430: putfield      #6                  // Field process:Ljava/lang/Process;
     433: aload_0
     434: aload         7
     436: putfield      #54                 // Field stdin:Ljava/io/OutputStream;
     439: iload         13
     441: ifeq          465
     444: aload_0
     445: getstatic     #12                 // Field org/jboss/as/process/ManagedProcess$State.STARTED:Lorg/jboss/as/process/ManagedProcess$State;
     448: putfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
     451: aload_0
     452: getfield      #8                  // Field processController:Lorg/jboss/as/process/ProcessController;
     455: aload_0
     456: getfield      #9                  // Field processName:Ljava/lang/String;
     459: invokevirtual #117                // Method org/jboss/as/process/ProcessController.processStarted:(Ljava/lang/String;)V
     462: goto          479
     465: aload_0
     466: getfield      #8                  // Field processController:Lorg/jboss/as/process/ProcessController;
     469: aload_0
     470: getfield      #9                  // Field processName:Ljava/lang/String;
     473: getstatic     #91                 // Field org/jboss/as/process/ProcessMessageHandler$OperationType.START:Lorg/jboss/as/process/ProcessMessageHandler$OperationType;
     476: invokevirtual #92                 // Method org/jboss/as/process/ProcessController.operationFailed:(Ljava/lang/String;Lorg/jboss/as/process/ProcessMessageHandler$OperationType;)V
     479: return
    Exception table:
       from    to  target type
         151   157   160   Class java/io/IOException
         375   407   410   Class java/lang/Exception

  public void stop();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      11: getstatic     #12                 // Field org/jboss/as/process/ManagedProcess$State.STARTED:Lorg/jboss/as/process/ManagedProcess$State;
      14: if_acmpeq     35
      17: aload_0
      18: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      21: ldc           #118                // String Attempted to stop already-stopping or down process \'%s\'
      23: aload_0
      24: getfield      #9                  // Field processName:Ljava/lang/String;
      27: invokeinterface #47,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_1
      33: monitorexit
      34: return
      35: aload_0
      36: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      39: aload_0
      40: getfield      #9                  // Field processName:Ljava/lang/String;
      43: invokeinterface #119,  2          // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.stoppingProcess:(Ljava/lang/String;)V
      48: aload_0
      49: iconst_1
      50: putfield      #2                  // Field stopRequested:Z
      53: aload_0
      54: getfield      #54                 // Field stdin:Ljava/io/OutputStream;
      57: invokestatic  #120                // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      60: aload_0
      61: getstatic     #13                 // Field org/jboss/as/process/ManagedProcess$State.STOPPING:Lorg/jboss/as/process/ManagedProcess$State;
      64: putfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      67: aload_1
      68: monitorexit
      69: goto          77
      72: astore_2
      73: aload_1
      74: monitorexit
      75: aload_2
      76: athrow
      77: return
    Exception table:
       from    to  target type
           7    34    72   any
          35    69    72   any
          72    75    72   any

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      11: getstatic     #13                 // Field org/jboss/as/process/ManagedProcess$State.STOPPING:Lorg/jboss/as/process/ManagedProcess$State;
      14: if_acmpeq     24
      17: aload_0
      18: invokevirtual #121                // Method stop:()V
      21: goto          46
      24: aload_0
      25: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      28: ldc           #122                // String Destroying process \'%s\'
      30: aload_0
      31: getfield      #9                  // Field processName:Ljava/lang/String;
      34: invokeinterface #47,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #6                  // Field process:Ljava/lang/Process;
      43: invokevirtual #123                // Method java/lang/Process.destroy:()V
      46: aload_1
      47: monitorexit
      48: goto          56
      51: astore_2
      52: aload_1
      53: monitorexit
      54: aload_2
      55: athrow
      56: return
    Exception table:
       from    to  target type
           7    48    51   any
          51    54    51   any

  public void kill();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      11: getstatic     #13                 // Field org/jboss/as/process/ManagedProcess$State.STOPPING:Lorg/jboss/as/process/ManagedProcess$State;
      14: if_acmpeq     24
      17: aload_0
      18: invokevirtual #121                // Method stop:()V
      21: goto          69
      24: aload_0
      25: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      28: ldc           #124                // String Attempting to kill -KILL process \'%s\'
      30: aload_0
      31: getfield      #9                  // Field processName:Ljava/lang/String;
      34: invokeinterface #47,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #9                  // Field processName:Ljava/lang/String;
      43: invokestatic  #125                // Method org/jboss/as/process/ProcessUtils.killProcess:(Ljava/lang/String;)Z
      46: ifne          69
      49: aload_0
      50: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      53: aload_0
      54: getfield      #9                  // Field processName:Ljava/lang/String;
      57: invokeinterface #126,  2          // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.failedToKillProcess:(Ljava/lang/String;)V
      62: aload_0
      63: getfield      #6                  // Field process:Ljava/lang/Process;
      66: invokevirtual #123                // Method java/lang/Process.destroy:()V
      69: aload_1
      70: monitorexit
      71: goto          79
      74: astore_2
      75: aload_1
      76: monitorexit
      77: aload_2
      78: athrow
      79: return
    Exception table:
       from    to  target type
           7    71    74   any
          74    77    74   any

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #3                  // Field shutdown:Z
      11: ifeq          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #3                  // Field shutdown:Z
      22: aload_0
      23: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      26: getstatic     #12                 // Field org/jboss/as/process/ManagedProcess$State.STARTED:Lorg/jboss/as/process/ManagedProcess$State;
      29: if_acmpne     67
      32: aload_0
      33: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      36: aload_0
      37: getfield      #9                  // Field processName:Ljava/lang/String;
      40: invokeinterface #119,  2          // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.stoppingProcess:(Ljava/lang/String;)V
      45: aload_0
      46: iconst_1
      47: putfield      #2                  // Field stopRequested:Z
      50: aload_0
      51: getfield      #54                 // Field stdin:Ljava/io/OutputStream;
      54: invokestatic  #120                // Method org/jboss/as/process/protocol/StreamUtils.safeClose:(Ljava/io/Closeable;)V
      57: aload_0
      58: getstatic     #13                 // Field org/jboss/as/process/ManagedProcess$State.STOPPING:Lorg/jboss/as/process/ManagedProcess$State;
      61: putfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      64: goto          91
      67: aload_0
      68: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      71: getstatic     #13                 // Field org/jboss/as/process/ManagedProcess$State.STOPPING:Lorg/jboss/as/process/ManagedProcess$State;
      74: if_acmpne     80
      77: aload_1
      78: monitorexit
      79: return
      80: new           #127                // class org/jboss/as/process/ManagedProcess$1
      83: dup
      84: aload_0
      85: invokespecial #128                // Method org/jboss/as/process/ManagedProcess$1."<init>":(Lorg/jboss/as/process/ManagedProcess;)V
      88: invokevirtual #129                // Method org/jboss/as/process/ManagedProcess$1.start:()V
      91: aload_1
      92: monitorexit
      93: goto          101
      96: astore_2
      97: aload_1
      98: monitorexit
      99: aload_2
     100: athrow
     101: return
    Exception table:
       from    to  target type
           7    16    96   any
          17    79    96   any
          80    93    96   any
          96    99    96   any

  void respawn();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
      11: getstatic     #15                 // Field org/jboss/as/process/ManagedProcess$State.DOWN:Lorg/jboss/as/process/ManagedProcess$State;
      14: if_acmpeq     35
      17: aload_0
      18: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
      21: ldc           #130                // String Attempted to respawn already-running process \'%s\'
      23: aload_0
      24: getfield      #9                  // Field processName:Ljava/lang/String;
      27: invokeinterface #47,  3           // InterfaceMethod org/jboss/as/process/logging/ProcessLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_1
      33: monitorexit
      34: return
      35: aload_0
      36: iconst_1
      37: invokevirtual #49                 // Method doStart:(Z)V
      40: aload_1
      41: monitorexit
      42: goto          50
      45: astore_2
      46: aload_1
      47: monitorexit
      48: aload_2
      49: athrow
      50: return
    Exception table:
       from    to  target type
           7    34    45   any
          35    42    45   any
          45    48    45   any

  private static org.jboss.as.process.stdin.Base64OutputStream getBase64OutputStream(java.io.OutputStream);
    Code:
       0: new           #131                // class org/jboss/as/process/ManagedProcess$2
       3: dup
       4: aload_0
       5: invokespecial #132                // Method org/jboss/as/process/ManagedProcess$2."<init>":(Ljava/io/OutputStream;)V
       8: astore_1
       9: new           #133                // class org/jboss/as/process/stdin/Base64OutputStream
      12: dup
      13: aload_1
      14: invokespecial #134                // Method org/jboss/as/process/stdin/Base64OutputStream."<init>":(Ljava/io/OutputStream;)V
      17: areturn

  private static java.lang.String lambda$doStart$0(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #135                // Method java/lang/String.trim:()Ljava/lang/String;
       4: areturn

  static java.lang.String access$100(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #9                  // Field processName:Ljava/lang/String;
       4: areturn

  static org.jboss.as.process.ProcessController access$200(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #8                  // Field processController:Lorg/jboss/as/process/ProcessController;
       4: areturn

  static java.lang.Object access$300(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/lang/Object;
       4: areturn

  static java.lang.Process access$400(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #6                  // Field process:Ljava/lang/Process;
       4: areturn

  static org.jboss.as.process.logging.ProcessLogger access$500(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #5                  // Field log:Lorg/jboss/as/process/logging/ProcessLogger;
       4: areturn

  static org.jboss.as.process.ManagedProcess$State access$602(org.jboss.as.process.ManagedProcess, org.jboss.as.process.ManagedProcess$State);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field state:Lorg/jboss/as/process/ManagedProcess$State;
       6: areturn

  static boolean access$700(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #3                  // Field shutdown:Z
       4: ireturn

  static boolean access$800(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stopRequested:Z
       4: ireturn

  static boolean access$802(org.jboss.as.process.ManagedProcess, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field stopRequested:Z
       6: ireturn

  static org.jboss.as.process.RespawnPolicy access$900(org.jboss.as.process.ManagedProcess);
    Code:
       0: aload_0
       1: getfield      #1                  // Field respawnPolicy:Lorg/jboss/as/process/RespawnPolicy;
       4: areturn

  static {};
    Code:
       0: ldc           #136                // class org/jboss/as/process/ManagedProcess
       2: invokevirtual #137                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #50                 // Field $assertionsDisabled:Z
      16: return
}
