Compiled from "RemoteOutboundConnectionWriteHandler.java"
class org.jboss.as.remoting.RemoteOutboundConnectionWriteHandler extends org.jboss.as.controller.AbstractWriteAttributeHandler<java.lang.Boolean> {
  static final org.jboss.as.remoting.RemoteOutboundConnectionWriteHandler INSTANCE;

  private org.jboss.as.remoting.RemoteOutboundConnectionWriteHandler();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/jboss/as/remoting/RemoteOutboundConnectionResourceDefinition.ATTRIBUTE_DEFINITIONS:[Lorg/jboss/as/controller/AttributeDefinition;
       4: invokespecial #2                  // Method org/jboss/as/controller/AbstractWriteAttributeHandler."<init>":([Lorg/jboss/as/controller/AttributeDefinition;)V
       7: return

  protected boolean applyUpdateToRuntime(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode, java.lang.String, org.jboss.dmr.ModelNode, org.jboss.dmr.ModelNode, org.jboss.as.controller.AbstractWriteAttributeHandler$HandbackHolder<java.lang.Boolean>) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: aload_1
       1: getstatic     #3                  // Field org/jboss/as/controller/PathAddress.EMPTY_ADDRESS:Lorg/jboss/as/controller/PathAddress;
       4: invokeinterface #4,  2            // InterfaceMethod org/jboss/as/controller/OperationContext.readResource:(Lorg/jboss/as/controller/PathAddress;)Lorg/jboss/as/controller/registry/Resource;
       9: invokestatic  #5                  // Method org/jboss/as/controller/registry/Resource$Tools.readModel:(Lorg/jboss/as/controller/registry/Resource;)Lorg/jboss/dmr/ModelNode;
      12: astore        7
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload         7
      19: invokespecial #6                  // Method applyModelToRuntime:(Lorg/jboss/as/controller/OperationContext;Lorg/jboss/dmr/ModelNode;Lorg/jboss/dmr/ModelNode;)Z
      22: istore        8
      24: aload         6
      26: iload         8
      28: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      31: invokevirtual #8                  // Method org/jboss/as/controller/AbstractWriteAttributeHandler$HandbackHolder.setHandback:(Ljava/lang/Object;)V
      34: iload         8
      36: ireturn

  protected void revertUpdateToRuntime(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode, java.lang.String, org.jboss.dmr.ModelNode, org.jboss.dmr.ModelNode, java.lang.Boolean) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: aload         6
       2: ifnull        48
       5: aload         6
       7: invokevirtual #9                  // Method java/lang/Boolean.booleanValue:()Z
      10: ifne          48
      13: aload_1
      14: getstatic     #3                  // Field org/jboss/as/controller/PathAddress.EMPTY_ADDRESS:Lorg/jboss/as/controller/PathAddress;
      17: invokeinterface #4,  2            // InterfaceMethod org/jboss/as/controller/OperationContext.readResource:(Lorg/jboss/as/controller/PathAddress;)Lorg/jboss/as/controller/registry/Resource;
      22: invokestatic  #5                  // Method org/jboss/as/controller/registry/Resource$Tools.readModel:(Lorg/jboss/as/controller/registry/Resource;)Lorg/jboss/dmr/ModelNode;
      25: astore        7
      27: aload         7
      29: aload_3
      30: invokevirtual #10                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      33: aload         4
      35: invokevirtual #11                 // Method org/jboss/dmr/ModelNode.set:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/dmr/ModelNode;
      38: pop
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload         7
      44: invokespecial #6                  // Method applyModelToRuntime:(Lorg/jboss/as/controller/OperationContext;Lorg/jboss/dmr/ModelNode;Lorg/jboss/dmr/ModelNode;)Z
      47: pop
      48: return

  private boolean applyModelToRuntime(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode, org.jboss.dmr.ModelNode) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_2
       4: ldc           #13                 // String address
       6: invokevirtual #10                 // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       9: invokestatic  #14                 // Method org/jboss/as/controller/PathAddress.pathAddress:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/PathAddress;
      12: invokevirtual #15                 // Method org/jboss/as/controller/PathAddress.getLastElement:()Lorg/jboss/as/controller/PathElement;
      15: invokevirtual #16                 // Method org/jboss/as/controller/PathElement.getValue:()Ljava/lang/String;
      18: astore        5
      20: getstatic     #17                 // Field org/jboss/as/remoting/RemoteOutboundConnectionService.OUTBOUND_CONNECTION_BASE_SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      23: iconst_1
      24: anewarray     #18                 // class java/lang/String
      27: dup
      28: iconst_0
      29: aload         5
      31: aastore
      32: invokevirtual #19                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      35: astore        6
      37: aload_1
      38: iconst_1
      39: invokeinterface #20,  2           // InterfaceMethod org/jboss/as/controller/OperationContext.getServiceRegistry:(Z)Lorg/jboss/msc/service/ServiceRegistry;
      44: astore        7
      46: aload         7
      48: aload         6
      50: invokeinterface #21,  2           // InterfaceMethod org/jboss/msc/service/ServiceRegistry.getService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      55: astore        8
      57: aload         8
      59: ifnull        81
      62: aload         8
      64: invokeinterface #22,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getState:()Lorg/jboss/msc/service/ServiceController$State;
      69: getstatic     #23                 // Field org/jboss/msc/service/ServiceController$State.UP:Lorg/jboss/msc/service/ServiceController$State;
      72: if_acmpne     81
      75: iconst_1
      76: istore        4
      78: goto          99
      81: aload_1
      82: aload         6
      84: invokeinterface #24,  2           // InterfaceMethod org/jboss/as/controller/OperationContext.removeService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      89: pop
      90: getstatic     #25                 // Field org/jboss/as/remoting/RemoteOutboundConnectionAdd.INSTANCE:Lorg/jboss/as/remoting/RemoteOutboundConnectionAdd;
      93: aload_1
      94: aload_2
      95: aload_3
      96: invokevirtual #26                 // Method org/jboss/as/remoting/RemoteOutboundConnectionAdd.installRuntimeService:(Lorg/jboss/as/controller/OperationContext;Lorg/jboss/dmr/ModelNode;Lorg/jboss/dmr/ModelNode;)V
      99: iload         4
     101: ireturn

  protected void revertUpdateToRuntime(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode, java.lang.String, org.jboss.dmr.ModelNode, org.jboss.dmr.ModelNode, java.lang.Object) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: checkcast     #27                 // class java/lang/Boolean
      13: invokevirtual #28                 // Method revertUpdateToRuntime:(Lorg/jboss/as/controller/OperationContext;Lorg/jboss/dmr/ModelNode;Ljava/lang/String;Lorg/jboss/dmr/ModelNode;Lorg/jboss/dmr/ModelNode;Ljava/lang/Boolean;)V
      16: return

  static {};
    Code:
       0: new           #29                 // class org/jboss/as/remoting/RemoteOutboundConnectionWriteHandler
       3: dup
       4: invokespecial #30                 // Method "<init>":()V
       7: putstatic     #31                 // Field INSTANCE:Lorg/jboss/as/remoting/RemoteOutboundConnectionWriteHandler;
      10: return
}
