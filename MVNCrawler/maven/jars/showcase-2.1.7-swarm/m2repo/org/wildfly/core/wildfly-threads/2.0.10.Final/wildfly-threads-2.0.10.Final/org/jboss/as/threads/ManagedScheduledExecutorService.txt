Compiled from "ManagedScheduledExecutorService.java"
public class org.jboss.as.threads.ManagedScheduledExecutorService extends org.jboss.as.threads.ManagedExecutorService implements java.util.concurrent.ScheduledExecutorService {
  private final java.util.concurrent.ScheduledThreadPoolExecutor executor;

  public org.jboss.as.threads.ManagedScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/as/threads/ManagedExecutorService."<init>":(Ljava/util/concurrent/ExecutorService;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      10: return

  protected java.util.concurrent.ExecutorService protectExecutor(java.util.concurrent.ExecutorService);
    Code:
       0: aload_1
       1: checkcast     #3                  // class java/util/concurrent/ScheduledExecutorService
       4: invokestatic  #4                  // Method org/jboss/threads/JBossExecutors.protectedScheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;
       7: areturn

  void internalShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #5                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdown:()V
       7: return

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #6                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      11: areturn

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #7                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      11: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokevirtual #8                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      13: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: aload_1
       5: lload_2
       6: lload         4
       8: aload         6
      10: invokevirtual #9                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      13: areturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #10                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getActiveCount:()I
       7: ireturn

  public long getCompletedTaskCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #11                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getCompletedTaskCount:()J
       7: lreturn

  public int getLargestPoolSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #12                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getLargestPoolSize:()I
       7: ireturn

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #13                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getPoolSize:()I
       7: ireturn

  public long getTaskCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #14                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getTaskCount:()J
       7: lreturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       4: invokevirtual #15                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
       7: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      12: ireturn
}
