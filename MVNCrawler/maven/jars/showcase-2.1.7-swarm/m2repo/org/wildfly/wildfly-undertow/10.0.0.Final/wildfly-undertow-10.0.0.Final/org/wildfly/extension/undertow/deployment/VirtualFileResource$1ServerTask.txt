Compiled from "VirtualFileResource.java"
class org.wildfly.extension.undertow.deployment.VirtualFileResource$1ServerTask extends org.wildfly.extension.undertow.deployment.VirtualFileResource$1BaseFileTask implements io.undertow.io.IoCallback {
  private org.xnio.Pooled<java.nio.ByteBuffer> pooled;

  final io.undertow.io.Sender val$sender;

  final io.undertow.io.IoCallback val$callback;

  final io.undertow.server.HttpServerExchange val$exchange;

  final org.wildfly.extension.undertow.deployment.VirtualFileResource this$0;

  org.wildfly.extension.undertow.deployment.VirtualFileResource$1ServerTask();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/wildfly/extension/undertow/deployment/VirtualFileResource;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$sender:Lio/undertow/io/Sender;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$callback:Lio/undertow/io/IoCallback;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      21: aload_0
      22: aload_1
      23: aload         4
      25: aload_3
      26: aload_2
      27: invokespecial #5                  // Method org/wildfly/extension/undertow/deployment/VirtualFileResource$1BaseFileTask."<init>":(Lorg/wildfly/extension/undertow/deployment/VirtualFileResource;Lio/undertow/server/HttpServerExchange;Lio/undertow/io/IoCallback;Lio/undertow/io/Sender;)V
      30: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #6                  // Field fileChannel:Ljava/nio/channels/FileChannel;
       4: ifnonnull     34
       7: aload_0
       8: invokevirtual #7                  // Method openFile:()Z
      11: ifne          15
      14: return
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      20: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      23: invokevirtual #9                  // Method io/undertow/server/ServerConnection.getBufferPool:()Lorg/xnio/Pool;
      26: invokeinterface #10,  1           // InterfaceMethod org/xnio/Pool.allocate:()Lorg/xnio/Pooled;
      31: putfield      #11                 // Field pooled:Lorg/xnio/Pooled;
      34: aload_0
      35: getfield      #11                 // Field pooled:Lorg/xnio/Pooled;
      38: ifnull        140
      41: aload_0
      42: getfield      #11                 // Field pooled:Lorg/xnio/Pooled;
      45: invokeinterface #12,  1           // InterfaceMethod org/xnio/Pooled.getResource:()Ljava/lang/Object;
      50: checkcast     #13                 // class java/nio/ByteBuffer
      53: astore_1
      54: aload_1
      55: invokevirtual #14                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      58: pop
      59: aload_0
      60: getfield      #6                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      63: aload_1
      64: invokevirtual #15                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      67: istore_2
      68: iload_2
      69: iconst_m1
      70: if_icmpne     107
      73: aload_0
      74: getfield      #11                 // Field pooled:Lorg/xnio/Pooled;
      77: invokeinterface #16,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      82: aload_0
      83: getfield      #6                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      86: invokestatic  #17                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      89: aload_0
      90: getfield      #3                  // Field val$callback:Lio/undertow/io/IoCallback;
      93: aload_0
      94: getfield      #4                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      97: aload_0
      98: getfield      #2                  // Field val$sender:Lio/undertow/io/Sender;
     101: invokeinterface #18,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     106: return
     107: aload_1
     108: invokevirtual #19                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     111: pop
     112: aload_0
     113: getfield      #2                  // Field val$sender:Lio/undertow/io/Sender;
     116: aload_1
     117: aload_0
     118: invokeinterface #20,  3           // InterfaceMethod io/undertow/io/Sender.send:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
     123: goto          140
     126: astore_2
     127: aload_0
     128: aload_0
     129: getfield      #4                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     132: aload_0
     133: getfield      #2                  // Field val$sender:Lio/undertow/io/Sender;
     136: aload_2
     137: invokevirtual #22                 // Method onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     140: return
    Exception table:
       from    to  target type
          54   106   126   Class java/io/IOException
         107   123   126   Class java/io/IOException

  public void onComplete(io.undertow.server.HttpServerExchange, io.undertow.io.Sender);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      12: pop
      13: goto          20
      16: aload_0
      17: invokevirtual #25                 // Method run:()V
      20: return

  public void onException(io.undertow.server.HttpServerExchange, io.undertow.io.Sender, java.io.IOException);
    Code:
       0: getstatic     #26                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_3
       4: invokeinterface #27,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
       9: aload_0
      10: getfield      #11                 // Field pooled:Lorg/xnio/Pooled;
      13: ifnull        30
      16: aload_0
      17: getfield      #11                 // Field pooled:Lorg/xnio/Pooled;
      20: invokeinterface #16,  1           // InterfaceMethod org/xnio/Pooled.free:()V
      25: aload_0
      26: aconst_null
      27: putfield      #11                 // Field pooled:Lorg/xnio/Pooled;
      30: aload_0
      31: getfield      #6                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      34: invokestatic  #17                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      37: aload_1
      38: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      41: ifne          52
      44: aload_1
      45: sipush        500
      48: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.setResponseCode:(I)Lio/undertow/server/HttpServerExchange;
      51: pop
      52: aload_0
      53: getfield      #3                  // Field val$callback:Lio/undertow/io/IoCallback;
      56: aload_1
      57: aload_2
      58: aload_3
      59: invokeinterface #30,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      64: return
}
