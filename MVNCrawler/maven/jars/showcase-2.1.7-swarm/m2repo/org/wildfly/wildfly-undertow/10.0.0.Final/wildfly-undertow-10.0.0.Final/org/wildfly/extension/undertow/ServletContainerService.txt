Compiled from "ServletContainerService.java"
public class org.wildfly.extension.undertow.ServletContainerService implements org.jboss.msc.service.Service<org.wildfly.extension.undertow.ServletContainerService> {
  private final boolean allowNonStandardWrappers;

  private final io.undertow.servlet.api.ServletStackTraces stackTraces;

  private final org.wildfly.extension.undertow.SessionCookieConfig sessionCookieConfig;

  private final org.wildfly.extension.undertow.JSPConfig jspConfig;

  private volatile io.undertow.servlet.api.ServletContainer servletContainer;

  private final org.jboss.msc.value.InjectedValue<io.undertow.server.handlers.cache.DirectBufferCache> bufferCacheInjectedValue;

  private final org.jboss.msc.value.InjectedValue<io.undertow.servlet.api.SessionPersistenceManager> sessionPersistenceManagerInjectedValue;

  private final java.lang.String defaultEncoding;

  private final boolean useListenerEncoding;

  private final boolean ignoreFlush;

  private final boolean eagerFilterInit;

  private final int defaultSessionTimeout;

  private final boolean disableCachingForSecuredPages;

  private final java.lang.Boolean directoryListingEnabled;

  private final int sessionIdLength;

  private final io.undertow.servlet.api.CrawlerSessionManagerConfig crawlerSessionManagerConfig;

  private final boolean websocketsEnabled;

  private final org.jboss.msc.value.InjectedValue<org.xnio.Pool<java.nio.ByteBuffer>> websocketsBufferPool;

  private final org.jboss.msc.value.InjectedValue<org.xnio.XnioWorker> websocketsWorker;

  private final boolean dispatchWebsocketInvocationToWorker;

  private final java.util.Map<java.lang.String, java.lang.String> mimeMappings;

  private final java.util.List<java.lang.String> welcomeFiles;

  private final boolean proactiveAuth;

  private final java.util.Map<java.lang.String, io.undertow.security.api.AuthenticationMechanismFactory> authenticationMechanisms;

  private final java.lang.Integer maxSessions;

  public org.wildfly.extension.undertow.ServletContainerService(boolean, io.undertow.servlet.api.ServletStackTraces, org.wildfly.extension.undertow.SessionCookieConfig, org.wildfly.extension.undertow.JSPConfig, java.lang.String, boolean, boolean, boolean, int, boolean, boolean, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.List<java.lang.String>, java.lang.Boolean, boolean, int, java.util.Map<java.lang.String, io.undertow.security.api.AuthenticationMechanismFactory>, java.lang.Integer, io.undertow.servlet.api.CrawlerSessionManagerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jboss/msc/value/InjectedValue
       8: dup
       9: invokespecial #3                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      12: putfield      #4                  // Field bufferCacheInjectedValue:Lorg/jboss/msc/value/InjectedValue;
      15: aload_0
      16: new           #2                  // class org/jboss/msc/value/InjectedValue
      19: dup
      20: invokespecial #3                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      23: putfield      #5                  // Field sessionPersistenceManagerInjectedValue:Lorg/jboss/msc/value/InjectedValue;
      26: aload_0
      27: new           #2                  // class org/jboss/msc/value/InjectedValue
      30: dup
      31: invokespecial #3                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      34: putfield      #6                  // Field websocketsBufferPool:Lorg/jboss/msc/value/InjectedValue;
      37: aload_0
      38: new           #2                  // class org/jboss/msc/value/InjectedValue
      41: dup
      42: invokespecial #3                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      45: putfield      #7                  // Field websocketsWorker:Lorg/jboss/msc/value/InjectedValue;
      48: aload_0
      49: iload_1
      50: putfield      #8                  // Field allowNonStandardWrappers:Z
      53: aload_0
      54: aload_2
      55: putfield      #9                  // Field stackTraces:Lio/undertow/servlet/api/ServletStackTraces;
      58: aload_0
      59: aload_3
      60: putfield      #10                 // Field sessionCookieConfig:Lorg/wildfly/extension/undertow/SessionCookieConfig;
      63: aload_0
      64: aload         4
      66: putfield      #11                 // Field jspConfig:Lorg/wildfly/extension/undertow/JSPConfig;
      69: aload_0
      70: aload         5
      72: putfield      #12                 // Field defaultEncoding:Ljava/lang/String;
      75: aload_0
      76: iload         6
      78: putfield      #13                 // Field useListenerEncoding:Z
      81: aload_0
      82: iload         7
      84: putfield      #14                 // Field ignoreFlush:Z
      87: aload_0
      88: iload         8
      90: putfield      #15                 // Field eagerFilterInit:Z
      93: aload_0
      94: iload         9
      96: putfield      #16                 // Field defaultSessionTimeout:I
      99: aload_0
     100: iload         10
     102: putfield      #17                 // Field disableCachingForSecuredPages:Z
     105: aload_0
     106: iload         11
     108: putfield      #18                 // Field websocketsEnabled:Z
     111: aload_0
     112: iload         12
     114: putfield      #19                 // Field dispatchWebsocketInvocationToWorker:Z
     117: aload_0
     118: aload         15
     120: putfield      #20                 // Field directoryListingEnabled:Ljava/lang/Boolean;
     123: aload_0
     124: iload         16
     126: putfield      #21                 // Field proactiveAuth:Z
     129: aload_0
     130: aload         19
     132: putfield      #22                 // Field maxSessions:Ljava/lang/Integer;
     135: aload_0
     136: aload         20
     138: putfield      #23                 // Field crawlerSessionManagerConfig:Lio/undertow/servlet/api/CrawlerSessionManagerConfig;
     141: aload_0
     142: new           #24                 // class java/util/ArrayList
     145: dup
     146: aload         14
     148: invokespecial #25                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     151: putfield      #26                 // Field welcomeFiles:Ljava/util/List;
     154: aload_0
     155: new           #27                 // class java/util/HashMap
     158: dup
     159: aload         13
     161: invokespecial #28                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     164: putfield      #29                 // Field mimeMappings:Ljava/util/Map;
     167: aload_0
     168: iload         17
     170: putfield      #30                 // Field sessionIdLength:I
     173: aload_0
     174: aload         18
     176: putfield      #31                 // Field authenticationMechanisms:Ljava/util/Map;
     179: return

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method io/undertow/servlet/api/ServletContainer$Factory.newInstance:()Lio/undertow/servlet/api/ServletContainer;
       4: putfield      #33                 // Field servletContainer:Lio/undertow/servlet/api/ServletContainer;
       7: return

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: return

  public org.wildfly.extension.undertow.ServletContainerService getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: areturn

  public java.util.Map<java.lang.String, io.undertow.security.api.AuthenticationMechanismFactory> getAuthenticationMechanisms();
    Code:
       0: aload_0
       1: getfield      #31                 // Field authenticationMechanisms:Ljava/util/Map;
       4: areturn

  public io.undertow.servlet.api.ServletContainer getServletContainer();
    Code:
       0: aload_0
       1: getfield      #33                 // Field servletContainer:Lio/undertow/servlet/api/ServletContainer;
       4: areturn

  public boolean isAllowNonStandardWrappers();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allowNonStandardWrappers:Z
       4: ireturn

  public org.wildfly.extension.undertow.JSPConfig getJspConfig();
    Code:
       0: aload_0
       1: getfield      #11                 // Field jspConfig:Lorg/wildfly/extension/undertow/JSPConfig;
       4: areturn

  public io.undertow.servlet.api.ServletStackTraces getStackTraces();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stackTraces:Lio/undertow/servlet/api/ServletStackTraces;
       4: areturn

  public org.wildfly.extension.undertow.SessionCookieConfig getSessionCookieConfig();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sessionCookieConfig:Lorg/wildfly/extension/undertow/SessionCookieConfig;
       4: areturn

  org.jboss.msc.value.InjectedValue<io.undertow.server.handlers.cache.DirectBufferCache> getBufferCacheInjectedValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufferCacheInjectedValue:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  public io.undertow.server.handlers.cache.DirectBufferCache getBufferCache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufferCacheInjectedValue:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #34                 // Method org/jboss/msc/value/InjectedValue.getOptionalValue:()Ljava/lang/Object;
       7: checkcast     #35                 // class io/undertow/server/handlers/cache/DirectBufferCache
      10: areturn

  public boolean isDisableCachingForSecuredPages();
    Code:
       0: aload_0
       1: getfield      #17                 // Field disableCachingForSecuredPages:Z
       4: ireturn

  public boolean isDispatchWebsocketInvocationToWorker();
    Code:
       0: aload_0
       1: getfield      #19                 // Field dispatchWebsocketInvocationToWorker:Z
       4: ireturn

  public org.jboss.msc.value.InjectedValue<org.xnio.XnioWorker> getWebsocketsWorker();
    Code:
       0: aload_0
       1: getfield      #7                  // Field websocketsWorker:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  public org.jboss.msc.value.InjectedValue<org.xnio.Pool<java.nio.ByteBuffer>> getWebsocketsBufferPool();
    Code:
       0: aload_0
       1: getfield      #6                  // Field websocketsBufferPool:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  public boolean isWebsocketsEnabled();
    Code:
       0: aload_0
       1: getfield      #18                 // Field websocketsEnabled:Z
       4: ireturn

  org.jboss.msc.value.InjectedValue<io.undertow.servlet.api.SessionPersistenceManager> getSessionPersistenceManagerInjectedValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessionPersistenceManagerInjectedValue:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  public io.undertow.servlet.api.SessionPersistenceManager getSessionPersistenceManager();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessionPersistenceManagerInjectedValue:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #34                 // Method org/jboss/msc/value/InjectedValue.getOptionalValue:()Ljava/lang/Object;
       7: checkcast     #36                 // class io/undertow/servlet/api/SessionPersistenceManager
      10: areturn

  public java.lang.String getDefaultEncoding();
    Code:
       0: aload_0
       1: getfield      #12                 // Field defaultEncoding:Ljava/lang/String;
       4: areturn

  public boolean isUseListenerEncoding();
    Code:
       0: aload_0
       1: getfield      #13                 // Field useListenerEncoding:Z
       4: ireturn

  public boolean isIgnoreFlush();
    Code:
       0: aload_0
       1: getfield      #14                 // Field ignoreFlush:Z
       4: ireturn

  public boolean isEagerFilterInit();
    Code:
       0: aload_0
       1: getfield      #15                 // Field eagerFilterInit:Z
       4: ireturn

  public int getDefaultSessionTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field defaultSessionTimeout:I
       4: ireturn

  public java.util.Map<java.lang.String, java.lang.String> getMimeMappings();
    Code:
       0: aload_0
       1: getfield      #29                 // Field mimeMappings:Ljava/util/Map;
       4: invokestatic  #37                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public java.util.List<java.lang.String> getWelcomeFiles();
    Code:
       0: aload_0
       1: getfield      #26                 // Field welcomeFiles:Ljava/util/List;
       4: areturn

  public java.lang.Boolean getDirectoryListingEnabled();
    Code:
       0: aload_0
       1: getfield      #20                 // Field directoryListingEnabled:Ljava/lang/Boolean;
       4: areturn

  public boolean isProactiveAuth();
    Code:
       0: aload_0
       1: getfield      #21                 // Field proactiveAuth:Z
       4: ireturn

  public int getSessionIdLength();
    Code:
       0: aload_0
       1: getfield      #30                 // Field sessionIdLength:I
       4: ireturn

  public java.lang.Integer getMaxSessions();
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxSessions:Ljava/lang/Integer;
       4: areturn

  public io.undertow.servlet.api.CrawlerSessionManagerConfig getCrawlerSessionManagerConfig();
    Code:
       0: aload_0
       1: getfield      #23                 // Field crawlerSessionManagerConfig:Lio/undertow/servlet/api/CrawlerSessionManagerConfig;
       4: areturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getValue:()Lorg/wildfly/extension/undertow/ServletContainerService;
       4: areturn
}
