Compiled from "Server.java"
public class org.wildfly.extension.undertow.Server implements org.jboss.msc.service.Service<org.wildfly.extension.undertow.Server> {
  private final java.lang.String defaultHost;

  private final java.lang.String name;

  private final io.undertow.server.handlers.NameVirtualHostHandler virtualHostHandler;

  private final org.jboss.msc.value.InjectedValue<org.wildfly.extension.undertow.ServletContainerService> servletContainer;

  private final org.jboss.msc.value.InjectedValue<org.wildfly.extension.undertow.UndertowService> undertowService;

  private volatile io.undertow.server.HttpHandler root;

  private final java.util.List<org.wildfly.extension.undertow.ListenerService<?>> listeners;

  private final java.util.Set<org.wildfly.extension.undertow.Host> hosts;

  private final java.util.HashMap<java.lang.Integer, java.lang.Integer> securePortMappings;

  protected org.wildfly.extension.undertow.Server(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/server/handlers/NameVirtualHostHandler
       8: dup
       9: invokespecial #3                  // Method io/undertow/server/handlers/NameVirtualHostHandler."<init>":()V
      12: putfield      #4                  // Field virtualHostHandler:Lio/undertow/server/handlers/NameVirtualHostHandler;
      15: aload_0
      16: new           #5                  // class org/jboss/msc/value/InjectedValue
      19: dup
      20: invokespecial #6                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      23: putfield      #7                  // Field servletContainer:Lorg/jboss/msc/value/InjectedValue;
      26: aload_0
      27: new           #5                  // class org/jboss/msc/value/InjectedValue
      30: dup
      31: invokespecial #6                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      34: putfield      #8                  // Field undertowService:Lorg/jboss/msc/value/InjectedValue;
      37: aload_0
      38: new           #9                  // class java/util/concurrent/CopyOnWriteArrayList
      41: dup
      42: invokespecial #10                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      45: putfield      #11                 // Field listeners:Ljava/util/List;
      48: aload_0
      49: new           #12                 // class java/util/concurrent/CopyOnWriteArraySet
      52: dup
      53: invokespecial #13                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      56: putfield      #14                 // Field hosts:Ljava/util/Set;
      59: aload_0
      60: new           #15                 // class java/util/HashMap
      63: dup
      64: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      67: putfield      #17                 // Field securePortMappings:Ljava/util/HashMap;
      70: aload_0
      71: aload_1
      72: putfield      #18                 // Field name:Ljava/lang/String;
      75: aload_0
      76: aload_2
      77: putfield      #19                 // Field defaultHost:Ljava/lang/String;
      80: return

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field virtualHostHandler:Lio/undertow/server/handlers/NameVirtualHostHandler;
       5: putfield      #20                 // Field root:Lio/undertow/server/HttpHandler;
       8: aload_0
       9: new           #21                 // class io/undertow/server/handlers/error/SimpleErrorPageHandler
      12: dup
      13: aload_0
      14: getfield      #20                 // Field root:Lio/undertow/server/HttpHandler;
      17: invokespecial #22                 // Method io/undertow/server/handlers/error/SimpleErrorPageHandler."<init>":(Lio/undertow/server/HttpHandler;)V
      20: putfield      #20                 // Field root:Lio/undertow/server/HttpHandler;
      23: aload_0
      24: new           #23                 // class io/undertow/server/handlers/CanonicalPathHandler
      27: dup
      28: aload_0
      29: getfield      #20                 // Field root:Lio/undertow/server/HttpHandler;
      32: invokespecial #24                 // Method io/undertow/server/handlers/CanonicalPathHandler."<init>":(Lio/undertow/server/HttpHandler;)V
      35: putfield      #20                 // Field root:Lio/undertow/server/HttpHandler;
      38: getstatic     #25                 // Field org/wildfly/extension/undertow/logging/UndertowLogger.ROOT_LOGGER:Lorg/wildfly/extension/undertow/logging/UndertowLogger;
      41: aload_0
      42: getfield      #18                 // Field name:Ljava/lang/String;
      45: invokeinterface #26,  2           // InterfaceMethod org/wildfly/extension/undertow/logging/UndertowLogger.startedServer:(Ljava/lang/String;)V
      50: aload_0
      51: getfield      #8                  // Field undertowService:Lorg/jboss/msc/value/InjectedValue;
      54: invokevirtual #27                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
      57: checkcast     #28                 // class org/wildfly/extension/undertow/UndertowService
      60: aload_0
      61: invokevirtual #29                 // Method org/wildfly/extension/undertow/UndertowService.registerServer:(Lorg/wildfly/extension/undertow/Server;)V
      64: return

  protected void registerListener(org.wildfly.extension.undertow.ListenerService<?>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: invokevirtual #31                 // Method org/wildfly/extension/undertow/ListenerService.isSecure:()Z
      15: ifne          88
      18: aload_1
      19: invokevirtual #32                 // Method org/wildfly/extension/undertow/ListenerService.getBinding:()Lorg/jboss/msc/value/InjectedValue;
      22: invokevirtual #27                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
      25: checkcast     #33                 // class org/jboss/as/network/SocketBinding
      28: astore_2
      29: aload_1
      30: invokevirtual #34                 // Method org/wildfly/extension/undertow/ListenerService.getRedirectSocket:()Lorg/jboss/msc/value/InjectedValue;
      33: invokevirtual #35                 // Method org/jboss/msc/value/InjectedValue.getOptionalValue:()Ljava/lang/Object;
      36: checkcast     #33                 // class org/jboss/as/network/SocketBinding
      39: astore_3
      40: aload_3
      41: ifnull        69
      44: aload_0
      45: getfield      #17                 // Field securePortMappings:Ljava/util/HashMap;
      48: aload_2
      49: invokevirtual #36                 // Method org/jboss/as/network/SocketBinding.getAbsolutePort:()I
      52: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: aload_3
      56: invokevirtual #36                 // Method org/jboss/as/network/SocketBinding.getAbsolutePort:()I
      59: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: invokevirtual #38                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: goto          88
      69: aload_0
      70: getfield      #17                 // Field securePortMappings:Ljava/util/HashMap;
      73: aload_2
      74: invokevirtual #36                 // Method org/jboss/as/network/SocketBinding.getAbsolutePort:()I
      77: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: iconst_m1
      81: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      84: invokevirtual #38                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: return

  protected void unregisterListener(org.wildfly.extension.undertow.ListenerService<?>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: invokevirtual #31                 // Method org/wildfly/extension/undertow/ListenerService.isSecure:()Z
      15: ifne          44
      18: aload_1
      19: invokevirtual #32                 // Method org/wildfly/extension/undertow/ListenerService.getBinding:()Lorg/jboss/msc/value/InjectedValue;
      22: invokevirtual #27                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
      25: checkcast     #33                 // class org/jboss/as/network/SocketBinding
      28: astore_2
      29: aload_0
      30: getfield      #17                 // Field securePortMappings:Ljava/util/HashMap;
      33: aload_2
      34: invokevirtual #36                 // Method org/jboss/as/network/SocketBinding.getAbsolutePort:()I
      37: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokevirtual #40                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: return

  protected void registerHost(org.wildfly.extension.undertow.Host);
    Code:
       0: aload_0
       1: getfield      #14                 // Field hosts:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: invokevirtual #42                 // Method org/wildfly/extension/undertow/Host.getAllAliases:()Ljava/util/Set;
      15: invokeinterface #43,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          56
      30: aload_2
      31: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #46                 // class java/lang/String
      39: astore_3
      40: aload_0
      41: getfield      #4                  // Field virtualHostHandler:Lio/undertow/server/handlers/NameVirtualHostHandler;
      44: aload_3
      45: aload_1
      46: invokevirtual #47                 // Method org/wildfly/extension/undertow/Host.getRootHandler:()Lio/undertow/server/HttpHandler;
      49: invokevirtual #48                 // Method io/undertow/server/handlers/NameVirtualHostHandler.addHost:(Ljava/lang/String;Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/NameVirtualHostHandler;
      52: pop
      53: goto          21
      56: aload_1
      57: invokevirtual #49                 // Method org/wildfly/extension/undertow/Host.getName:()Ljava/lang/String;
      60: aload_0
      61: invokevirtual #50                 // Method getDefaultHost:()Ljava/lang/String;
      64: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          82
      70: aload_0
      71: getfield      #4                  // Field virtualHostHandler:Lio/undertow/server/handlers/NameVirtualHostHandler;
      74: aload_1
      75: invokevirtual #47                 // Method org/wildfly/extension/undertow/Host.getRootHandler:()Lio/undertow/server/HttpHandler;
      78: invokevirtual #52                 // Method io/undertow/server/handlers/NameVirtualHostHandler.setDefaultHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/NameVirtualHostHandler;
      81: pop
      82: return

  protected void unregisterHost(org.wildfly.extension.undertow.Host);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method org/wildfly/extension/undertow/Host.getAllAliases:()Ljava/util/Set;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          52
      19: aload_2
      20: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #46                 // class java/lang/String
      28: astore_3
      29: aload_0
      30: getfield      #4                  // Field virtualHostHandler:Lio/undertow/server/handlers/NameVirtualHostHandler;
      33: aload_3
      34: invokevirtual #53                 // Method io/undertow/server/handlers/NameVirtualHostHandler.removeHost:(Ljava/lang/String;)Lio/undertow/server/handlers/NameVirtualHostHandler;
      37: pop
      38: aload_0
      39: getfield      #14                 // Field hosts:Ljava/util/Set;
      42: aload_1
      43: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      48: pop
      49: goto          10
      52: aload_1
      53: invokevirtual #49                 // Method org/wildfly/extension/undertow/Host.getName:()Ljava/lang/String;
      56: aload_0
      57: invokevirtual #50                 // Method getDefaultHost:()Ljava/lang/String;
      60: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          77
      66: aload_0
      67: getfield      #4                  // Field virtualHostHandler:Lio/undertow/server/handlers/NameVirtualHostHandler;
      70: getstatic     #55                 // Field io/undertow/server/handlers/ResponseCodeHandler.HANDLE_404:Lio/undertow/server/handlers/ResponseCodeHandler;
      73: invokevirtual #52                 // Method io/undertow/server/handlers/NameVirtualHostHandler.setDefaultHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/NameVirtualHostHandler;
      76: pop
      77: return

  public int lookupSecurePort(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field securePortMappings:Ljava/util/HashMap;
       4: iload_1
       5: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #56                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #57                 // class java/lang/Integer
      14: invokevirtual #58                 // Method java/lang/Integer.intValue:()I
      17: ireturn

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: getfield      #8                  // Field undertowService:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #27                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #28                 // class org/wildfly/extension/undertow/UndertowService
      10: aload_0
      11: invokevirtual #59                 // Method org/wildfly/extension/undertow/UndertowService.unregisterServer:(Lorg/wildfly/extension/undertow/Server;)V
      14: return

  public org.wildfly.extension.undertow.Server getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: areturn

  org.jboss.msc.inject.Injector<org.wildfly.extension.undertow.ServletContainerService> getServletContainerInjector();
    Code:
       0: aload_0
       1: getfield      #7                  // Field servletContainer:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  public org.wildfly.extension.undertow.ServletContainerService getServletContainer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field servletContainer:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #27                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #60                 // class org/wildfly/extension/undertow/ServletContainerService
      10: areturn

  protected io.undertow.server.HttpHandler getRoot();
    Code:
       0: aload_0
       1: getfield      #20                 // Field root:Lio/undertow/server/HttpHandler;
       4: areturn

  org.jboss.msc.inject.Injector<org.wildfly.extension.undertow.UndertowService> getUndertowServiceInjector();
    Code:
       0: aload_0
       1: getfield      #8                  // Field undertowService:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  org.wildfly.extension.undertow.UndertowService getUndertowService();
    Code:
       0: aload_0
       1: getfield      #8                  // Field undertowService:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #27                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #28                 // class org/wildfly/extension/undertow/UndertowService
      10: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getDefaultHost();
    Code:
       0: aload_0
       1: getfield      #19                 // Field defaultHost:Ljava/lang/String;
       4: areturn

  public java.util.Set<org.wildfly.extension.undertow.Host> getHosts();
    Code:
       0: aload_0
       1: getfield      #14                 // Field hosts:Ljava/util/Set;
       4: invokestatic  #61                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.util.List<org.wildfly.extension.undertow.ListenerService<?>> getListeners();
    Code:
       0: aload_0
       1: getfield      #11                 // Field listeners:Ljava/util/List;
       4: areturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getValue:()Lorg/wildfly/extension/undertow/Server;
       4: areturn
}
