Compiled from "AbstractResourceInjectionServices.java"
abstract class org.jboss.as.weld.services.bootstrap.AbstractResourceInjectionServices {
  protected final org.jboss.msc.service.ServiceRegistry serviceRegistry;

  protected final org.jboss.as.ee.component.EEModuleDescription moduleDescription;

  private final org.jboss.modules.Module module;

  private static final java.util.Map<java.lang.Class<?>, java.lang.Class<?>> BOXED_TYPES;

  protected org.jboss.as.weld.services.bootstrap.AbstractResourceInjectionServices(org.jboss.msc.service.ServiceRegistry, org.jboss.as.ee.component.EEModuleDescription, org.jboss.modules.Module);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field serviceRegistry:Lorg/jboss/msc/service/ServiceRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field moduleDescription:Lorg/jboss/as/ee/component/EEModuleDescription;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field module:Lorg/jboss/modules/Module;
      19: return

  protected abstract org.jboss.as.naming.deployment.ContextNames$BindInfo getBindInfo(java.lang.String);

  protected org.jboss.as.naming.ManagedReferenceFactory getManagedReferenceFactory(org.jboss.as.naming.deployment.ContextNames$BindInfo);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serviceRegistry:Lorg/jboss/msc/service/ServiceRegistry;
       4: aload_1
       5: invokevirtual #5                  // Method org/jboss/as/naming/deployment/ContextNames$BindInfo.getBinderServiceName:()Lorg/jboss/msc/service/ServiceName;
       8: invokeinterface #6,  2            // InterfaceMethod org/jboss/msc/service/ServiceRegistry.getRequiredService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      13: astore_2
      14: aload_2
      15: invokeinterface #7,  1            // InterfaceMethod org/jboss/msc/service/ServiceController.getValue:()Ljava/lang/Object;
      20: checkcast     #8                  // class org/jboss/as/naming/ManagedReferenceFactory
      23: areturn
      24: astore_2
      25: aconst_null
      26: areturn
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/Exception

  protected org.jboss.weld.injection.spi.ResourceReferenceFactory<java.lang.Object> handleServiceLookup(java.lang.String, javax.enterprise.inject.spi.InjectionPoint);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method getBindInfo:(Ljava/lang/String;)Lorg/jboss/as/naming/deployment/ContextNames$BindInfo;
       5: astore_3
       6: aload_0
       7: aload_3
       8: invokevirtual #11                 // Method getManagedReferenceFactory:(Lorg/jboss/as/naming/deployment/ContextNames$BindInfo;)Lorg/jboss/as/naming/ManagedReferenceFactory;
      11: astore        4
      13: aload_0
      14: aload         4
      16: aload_2
      17: invokevirtual #12                 // Method validateResourceInjectionPointType:(Lorg/jboss/as/naming/ManagedReferenceFactory;Ljavax/enterprise/inject/spi/InjectionPoint;)V
      20: aload         4
      22: ifnull        35
      25: new           #13                 // class org/jboss/as/weld/services/bootstrap/ManagedReferenceFactoryToResourceReferenceFactoryAdapter
      28: dup
      29: aload         4
      31: invokespecial #14                 // Method org/jboss/as/weld/services/bootstrap/ManagedReferenceFactoryToResourceReferenceFactoryAdapter."<init>":(Lorg/jboss/as/naming/ManagedReferenceFactory;)V
      34: areturn
      35: aload_0
      36: aload_3
      37: invokevirtual #15                 // Method createLazyResourceReferenceFactory:(Lorg/jboss/as/naming/deployment/ContextNames$BindInfo;)Lorg/jboss/weld/injection/spi/ResourceReferenceFactory;
      40: areturn

  protected void validateResourceInjectionPointType(org.jboss.as.naming.ManagedReferenceFactory, javax.enterprise.inject.spi.InjectionPoint);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/jboss/as/naming/ContextListManagedReferenceFactory
       4: ifeq          11
       7: aload_2
       8: ifnonnull     12
      11: return
      12: aload_1
      13: checkcast     #16                 // class org/jboss/as/naming/ContextListManagedReferenceFactory
      16: astore_3
      17: aload_3
      18: invokeinterface #17,  1           // InterfaceMethod org/jboss/as/naming/ContextListManagedReferenceFactory.getInstanceClassName:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #19                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      30: invokestatic  #20                 // Method org/jboss/as/weld/util/Reflections.loadClass:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      33: astore        4
      35: aload         4
      37: ifnonnull     58
      40: aload_3
      41: invokeinterface #17,  1           // InterfaceMethod org/jboss/as/naming/ContextListManagedReferenceFactory.getInstanceClassName:()Ljava/lang/String;
      46: aload_0
      47: getfield      #4                  // Field module:Lorg/jboss/modules/Module;
      50: invokevirtual #21                 // Method org/jboss/modules/Module.getClassLoader:()Lorg/jboss/modules/ModuleClassLoader;
      53: invokestatic  #20                 // Method org/jboss/as/weld/util/Reflections.loadClass:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      56: astore        4
      58: aload         4
      60: ifnull        69
      63: aload         4
      65: aload_2
      66: invokestatic  #22                 // Method validateResourceInjectionPointType:(Ljava/lang/Class;Ljavax/enterprise/inject/spi/InjectionPoint;)V
      69: return

  protected static void validateResourceInjectionPointType(java.lang.Class<?>, javax.enterprise.inject.spi.InjectionPoint);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod javax/enterprise/inject/spi/InjectionPoint.getType:()Ljava/lang/reflect/Type;
       6: invokestatic  #24                 // Method org/jboss/weld/util/reflection/Reflections.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       9: astore_2
      10: new           #25                 // class org/jboss/weld/util/reflection/HierarchyDiscovery
      13: dup
      14: aload_0
      15: invokespecial #26                 // Method org/jboss/weld/util/reflection/HierarchyDiscovery."<init>":(Ljava/lang/reflect/Type;)V
      18: astore_3
      19: aload_3
      20: invokevirtual #27                 // Method org/jboss/weld/util/reflection/HierarchyDiscovery.getTypeClosure:()Ljava/util/Set;
      23: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          68
      40: aload         4
      42: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #31                 // class java/lang/reflect/Type
      50: astore        5
      52: aload         5
      54: invokestatic  #24                 // Method org/jboss/weld/util/reflection/Reflections.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
      57: aload_2
      58: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      61: ifeq          65
      64: return
      65: goto          30
      68: aload_0
      69: invokevirtual #33                 // Method java/lang/Class.isPrimitive:()Z
      72: ifeq          95
      75: getstatic     #34                 // Field BOXED_TYPES:Ljava/util/Map;
      78: aload_0
      79: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #36                 // class java/lang/Class
      87: aload_2
      88: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      91: ifeq          95
      94: return
      95: aload_2
      96: invokevirtual #33                 // Method java/lang/Class.isPrimitive:()Z
      99: ifeq          122
     102: getstatic     #34                 // Field BOXED_TYPES:Ljava/util/Map;
     105: aload_2
     106: invokeinterface #35,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #36                 // class java/lang/Class
     114: aload_0
     115: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     118: ifeq          122
     121: return
     122: getstatic     #37                 // Field org/jboss/weld/logging/BeanLogger.LOG:Lorg/jboss/weld/logging/BeanLogger;
     125: aload_1
     126: invokeinterface #38,  1           // InterfaceMethod javax/enterprise/inject/spi/InjectionPoint.getAnnotated:()Ljavax/enterprise/inject/spi/Annotated;
     131: aload_0
     132: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
     135: invokeinterface #40,  3           // InterfaceMethod org/jboss/weld/logging/BeanLogger.invalidResourceProducerType:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/jboss/weld/exceptions/DefinitionException;
     140: athrow

  protected org.jboss.weld.injection.spi.ResourceReferenceFactory<java.lang.Object> createLazyResourceReferenceFactory(org.jboss.as.naming.deployment.ContextNames$BindInfo);
    Code:
       0: new           #41                 // class org/jboss/as/weld/services/bootstrap/AbstractResourceInjectionServices$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #42                 // Method org/jboss/as/weld/services/bootstrap/AbstractResourceInjectionServices$1."<init>":(Lorg/jboss/as/weld/services/bootstrap/AbstractResourceInjectionServices;Lorg/jboss/as/naming/deployment/ContextNames$BindInfo;)V
       9: areturn

  static {};
    Code:
       0: new           #43                 // class java/util/HashMap
       3: dup
       4: invokespecial #44                 // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #45                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      12: ldc           #46                 // class java/lang/Integer
      14: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: getstatic     #48                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      24: ldc           #49                 // class java/lang/Byte
      26: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_0
      33: getstatic     #50                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      36: ldc           #51                 // class java/lang/Short
      38: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_0
      45: getstatic     #52                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      48: ldc           #53                 // class java/lang/Long
      50: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_0
      57: getstatic     #54                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      60: ldc           #55                 // class java/lang/Character
      62: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_0
      69: getstatic     #56                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      72: ldc           #57                 // class java/lang/Float
      74: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload_0
      81: getstatic     #58                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      84: ldc           #59                 // class java/lang/Double
      86: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: aload_0
      93: getstatic     #60                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      96: ldc           #61                 // class java/lang/Boolean
      98: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_0
     105: invokestatic  #62                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     108: putstatic     #34                 // Field BOXED_TYPES:Ljava/util/Map;
     111: return
}
