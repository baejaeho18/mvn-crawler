Compiled from "WeldExecutorServices.java"
public class org.jboss.as.weld.services.bootstrap.WeldExecutorServices extends org.jboss.weld.executor.AbstractExecutorServices implements org.jboss.msc.service.Service<org.jboss.weld.manager.api.ExecutorServices> {
  public static final org.jboss.msc.service.ServiceName SERVICE_NAME;

  private static final java.lang.String THREAD_NAME_PATTERN;

  private final int bound;

  private java.util.concurrent.ExecutorService executor;

  public org.jboss.as.weld.services.bootstrap.WeldExecutorServices();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/weld/executor/AbstractExecutorServices."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       8: invokevirtual #3                  // Method java/lang/Runtime.availableProcessors:()I
      11: iconst_1
      12: iadd
      13: putfield      #4                  // Field bound:I
      16: return

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: new           #5                  // class java/lang/ThreadGroup
       3: dup
       4: ldc           #6                  // String Weld ThreadGroup
       6: invokespecial #7                  // Method java/lang/ThreadGroup."<init>":(Ljava/lang/String;)V
       9: astore_2
      10: new           #8                  // class org/jboss/threads/JBossThreadFactory
      13: dup
      14: aload_2
      15: getstatic     #9                  // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      18: aconst_null
      19: ldc           #11                 // String Weld Thread Pool -- %t
      21: aconst_null
      22: aconst_null
      23: invokespecial #12                 // Method org/jboss/threads/JBossThreadFactory."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Thread$UncaughtExceptionHandler;Ljava/lang/Long;)V
      26: astore_3
      27: aload_0
      28: aload_0
      29: getfield      #4                  // Field bound:I
      32: aload_0
      33: aload_3
      34: invokedynamic #13,  0             // InvokeDynamic #0:newThread:(Lorg/jboss/as/weld/services/bootstrap/WeldExecutorServices;Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ThreadFactory;
      39: invokestatic  #14                 // Method java/util/concurrent/Executors.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      42: putfield      #15                 // Field executor:Ljava/util/concurrent/ExecutorService;
      45: return

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: getfield      #15                 // Field executor:Ljava/util/concurrent/ExecutorService;
       4: ifnull        30
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod org/jboss/msc/service/StopContext.asynchronous:()V
      13: new           #17                 // class java/lang/Thread
      16: dup
      17: aload_0
      18: aload_1
      19: invokedynamic #18,  0             // InvokeDynamic #1:run:(Lorg/jboss/as/weld/services/bootstrap/WeldExecutorServices;Lorg/jboss/msc/service/StopContext;)Ljava/lang/Runnable;
      24: invokespecial #19                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      27: invokevirtual #20                 // Method java/lang/Thread.start:()V
      30: return

  protected synchronized int getThreadPoolSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bound:I
       4: ireturn

  public synchronized org.jboss.weld.manager.api.ExecutorServices getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: areturn

  public synchronized java.util.concurrent.ExecutorService getTaskExecutor();
    Code:
       0: aload_0
       1: getfield      #15                 // Field executor:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public void cleanup();
    Code:
       0: return

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getValue:()Lorg/jboss/weld/manager/api/ExecutorServices;
       4: areturn

  private void lambda$stop$2(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/jboss/weld/executor/AbstractExecutorServices.cleanup:()V
       4: aload_0
       5: aconst_null
       6: putfield      #15                 // Field executor:Ljava/util/concurrent/ExecutorService;
       9: aload_1
      10: invokeinterface #23,  1           // InterfaceMethod org/jboss/msc/service/StopContext.complete:()V
      15: return

  private java.lang.Thread lambda$start$1(java.util.concurrent.ThreadFactory, java.lang.Runnable);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
       7: astore_3
       8: invokestatic  #25                 // Method org/wildfly/security/manager/WildFlySecurityManager.isChecking:()Z
      11: ifeq          30
      14: new           #26                 // class org/jboss/as/weld/services/bootstrap/WeldExecutorServices$1
      17: dup
      18: aload_0
      19: aload_3
      20: invokespecial #27                 // Method org/jboss/as/weld/services/bootstrap/WeldExecutorServices$1."<init>":(Lorg/jboss/as/weld/services/bootstrap/WeldExecutorServices;Ljava/lang/Thread;)V
      23: invokestatic  #28                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: pop
      27: goto          35
      30: aload_3
      31: aconst_null
      32: invokevirtual #29                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      35: aload_3
      36: areturn

  static {};
    Code:
       0: getstatic     #30                 // Field org/jboss/as/server/Services.JBOSS_AS:Lorg/jboss/msc/service/ServiceName;
       3: iconst_2
       4: anewarray     #31                 // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #32                 // String weld
      11: aastore
      12: dup
      13: iconst_1
      14: ldc           #33                 // String executor
      16: aastore
      17: invokevirtual #34                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      20: putstatic     #35                 // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      23: return
}
