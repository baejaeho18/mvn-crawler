Compiled from "WeldLogger.java"
public interface org.jboss.as.weld.logging.WeldLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.weld.logging.WeldLogger ROOT_LOGGER;

  public static final org.jboss.as.weld.logging.WeldLogger DEPLOYMENT_LOGGER;

  public abstract void failedToSetupWeldContexts(java.lang.Throwable);

  public abstract void failedToTearDownWeldContexts(java.lang.Throwable);

  public abstract void processingWeldDeployment(java.lang.String);

  public abstract void beansXmlInNonStandardLocation(java.lang.String);

  public abstract void couldNotFindBeanManagerForDeployment(java.lang.String);

  public abstract void startingServicesForCDIDeployment(java.lang.String);

  public abstract void couldNotLoadPortableExceptionClass(java.lang.String, java.lang.Throwable);

  public abstract void injectionTypeNotValue(java.lang.Class<?>, java.lang.reflect.Member);

  public abstract void startingWeldService(java.lang.String);

  public abstract void stoppingWeldService(java.lang.String);

  public abstract void beansXmlValidationWarning(java.net.URL, int, java.lang.String);

  public abstract void beansXmlValidationError(java.net.URL, int, java.lang.String);

  public abstract void cdiAnnotationsButNotBeanArchive(org.jboss.as.server.deployment.DeploymentUnit);

  public abstract void exceptionClearingThreadState(java.lang.Exception);

  public abstract void errorLoadingFile(java.lang.String);

  public abstract void couldNotReadEntries(java.io.IOException);

  public abstract void doNotUnderstandProtocol(java.net.URL);

  public abstract void duplicateBeansXml();

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException couldNotGetBeansXmlAsURL(java.lang.String, java.lang.Throwable);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException couldNotLoadInterceptorClass(java.lang.String, java.lang.Throwable);

  public abstract org.jboss.as.server.deployment.DeploymentUnitProcessingException extensionDoesNotImplementExtension(java.lang.Class<?>);

  public abstract java.lang.IllegalArgumentException viewNotFoundOnEJB(java.lang.String, java.lang.String);

  public abstract javax.ejb.NoSuchEJBException ejbHashBeenRemoved();

  public abstract java.lang.IllegalArgumentException unknownInterceptorClassForCDIInjection(java.lang.Class<?>);

  public abstract java.lang.IllegalArgumentException parameterCannotBeNull(java.lang.String);

  public abstract java.lang.IllegalArgumentException injectionPointNotAJavabean(java.lang.reflect.Method);

  public abstract java.lang.IllegalArgumentException annotationNotFound(java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.reflect.Member);

  public abstract java.lang.IllegalStateException ejbNotResolved(javax.ejb.EJB, java.lang.reflect.Member);

  public abstract java.lang.IllegalStateException moreThanOneEjbResolved(javax.ejb.EJB, java.lang.reflect.Member, java.util.Set<org.jboss.as.ee.component.ViewDescription>);

  public abstract java.lang.IllegalArgumentException couldNotDetermineUnderlyingType(java.lang.reflect.Type);

  public abstract java.lang.IllegalArgumentException couldNotFindPersistenceUnit(java.lang.String, java.lang.String, java.lang.reflect.Member);

  public abstract java.lang.IllegalStateException securityNotEnabled();

  public abstract java.lang.IllegalStateException singletonNotSet(java.lang.ClassLoader);

  public abstract java.lang.IllegalStateException alreadyRunning(java.lang.String);

  public abstract java.lang.IllegalStateException notStarted(java.lang.String);

  public abstract java.lang.IllegalArgumentException beanDeploymentNotFound(java.lang.String);

  public abstract java.lang.IllegalArgumentException couldNotFindResource(java.lang.String, java.lang.Throwable);

  public abstract java.lang.IllegalArgumentException cannotDetermineResourceName();

  public abstract java.lang.IllegalArgumentException cannotInject(javax.enterprise.inject.spi.InjectionPoint);

  public abstract java.lang.IllegalStateException cannotUseAtRuntime(java.lang.String);

  public abstract java.lang.String rejectAttributesMustBeTrue(java.util.Set<java.lang.String>);

  public abstract java.lang.IllegalArgumentException couldNotFindResource(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void beanArchiveDiscovered(org.jboss.weld.bootstrap.spi.BeanDeploymentArchive);

  public abstract org.jboss.weld.resources.spi.ClassFileInfoException nameNotFoundInIndex(java.lang.String);

  public abstract void unableToLoadAnnotation(java.lang.String);

  public abstract org.jboss.weld.resources.spi.ClassFileInfoException cannotLoadClass(java.lang.String, java.lang.Throwable);

  public abstract void loadingProxiesUsingDeploymentClassLoader(org.jboss.modules.ModuleIdentifier, java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/weld/logging/WeldLogger
       2: ldc           #2                  // String org.jboss.as.weld
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/weld/logging/WeldLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/weld/logging/WeldLogger;
      13: ldc           #1                  // class org/jboss/as/weld/logging/WeldLogger
      15: ldc           #5                  // String org.jboss.weld.deployer
      17: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #1                  // class org/jboss/as/weld/logging/WeldLogger
      23: putstatic     #6                  // Field DEPLOYMENT_LOGGER:Lorg/jboss/as/weld/logging/WeldLogger;
      26: return
}
