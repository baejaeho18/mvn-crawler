Compiled from "ChannelNodeFactory.java"
public class org.wildfly.clustering.server.group.ChannelNodeFactory implements org.wildfly.clustering.server.group.JGroupsNodeFactory,java.lang.AutoCloseable {
  private final java.util.concurrent.ConcurrentMap<org.jgroups.Address, org.wildfly.clustering.group.Node> nodes;

  private final org.jgroups.Channel channel;

  public org.wildfly.clustering.server.group.ChannelNodeFactory(org.jgroups.Channel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field channel:Lorg/jgroups/Channel;
      20: return

  public org.wildfly.clustering.group.Node createNode(org.jgroups.Address);
    Code:
       0: aload_0
       1: getfield      #4                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/wildfly/clustering/server/group/ChannelNodeFactory;)Ljava/util/function/Function;
      11: invokeinterface #7,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      16: checkcast     #8                  // class org/wildfly/clustering/group/Node
      19: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  public void invalidate(java.util.Collection<org.jgroups.Address>);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       6: ifne          25
       9: aload_0
      10: getfield      #4                  // Field nodes:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      18: aload_1
      19: invokeinterface #12,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      24: pop
      25: return

  public org.wildfly.clustering.group.Node createNode(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/jgroups/Address
       5: invokevirtual #14                 // Method createNode:(Lorg/jgroups/Address;)Lorg/wildfly/clustering/group/Node;
       8: areturn

  private org.wildfly.clustering.group.Node lambda$createNode$0(org.jgroups.Address);
    Code:
       0: aload_0
       1: getfield      #5                  // Field channel:Lorg/jgroups/Channel;
       4: new           #15                 // class org/jgroups/Event
       7: dup
       8: bipush        87
      10: aload_1
      11: invokespecial #16                 // Method org/jgroups/Event."<init>":(ILjava/lang/Object;)V
      14: invokevirtual #17                 // Method org/jgroups/Channel.down:(Lorg/jgroups/Event;)Ljava/lang/Object;
      17: checkcast     #18                 // class org/jgroups/stack/IpAddress
      20: astore_2
      21: aload_2
      22: ifnull        43
      25: new           #19                 // class java/net/InetSocketAddress
      28: dup
      29: aload_2
      30: invokevirtual #20                 // Method org/jgroups/stack/IpAddress.getIpAddress:()Ljava/net/InetAddress;
      33: aload_2
      34: invokevirtual #21                 // Method org/jgroups/stack/IpAddress.getPort:()I
      37: invokespecial #22                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      40: goto          51
      43: new           #19                 // class java/net/InetSocketAddress
      46: dup
      47: iconst_0
      48: invokespecial #23                 // Method java/net/InetSocketAddress."<init>":(I)V
      51: astore_3
      52: aload_0
      53: getfield      #5                  // Field channel:Lorg/jgroups/Channel;
      56: aload_1
      57: invokevirtual #24                 // Method org/jgroups/Channel.getName:(Lorg/jgroups/Address;)Ljava/lang/String;
      60: astore        4
      62: aload         4
      64: ifnonnull     95
      67: ldc           #25                 // String %s:%s
      69: iconst_2
      70: anewarray     #26                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_3
      76: invokevirtual #27                 // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_3
      83: invokevirtual #28                 // Method java/net/InetSocketAddress.getPort:()I
      86: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: aastore
      90: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      93: astore        4
      95: new           #31                 // class org/wildfly/clustering/server/group/AddressableNode
      98: dup
      99: aload_1
     100: aload         4
     102: aload_3
     103: invokespecial #32                 // Method org/wildfly/clustering/server/group/AddressableNode."<init>":(Lorg/jgroups/Address;Ljava/lang/String;Ljava/net/InetSocketAddress;)V
     106: areturn
}
