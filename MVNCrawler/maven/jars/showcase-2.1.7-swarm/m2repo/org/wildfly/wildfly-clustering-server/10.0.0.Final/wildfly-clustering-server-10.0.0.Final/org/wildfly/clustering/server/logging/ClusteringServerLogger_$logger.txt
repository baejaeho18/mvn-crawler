Compiled from "ClusteringServerLogger_$logger.java"
public class org.wildfly.clustering.server.logging.ClusteringServerLogger_$logger implements org.wildfly.clustering.server.logging.ClusteringServerLogger,java.io.Serializable {
  private static final long serialVersionUID;

  private static final java.lang.String FQCN;

  protected final org.jboss.logging.Logger log;

  private static final java.lang.String startSingleton;

  private static final java.lang.String stopSingleton;

  private static final java.lang.String elected;

  private static final java.lang.String noResponseFromMaster;

  private static final java.lang.String serviceStartFailed;

  private static final java.lang.String quorumNotReached;

  private static final java.lang.String quorumJustReached;

  private static final java.lang.String unexpectedResponseCount;

  private static final java.lang.String notStarted;

  private static final java.lang.String registryPurgeFailed;

  private static final java.lang.String registryListenerFailed;

  private static final java.lang.String serviceProviderRegistrationListenerFailed;

  public org.wildfly.clustering.server.logging.ClusteringServerLogger_$logger(org.jboss.logging.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       9: return

  public final void startSingleton(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #5                  // Method startSingleton$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #6                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String startSingleton$str();
    Code:
       0: ldc           #8                  // String WFLYCLSV0001: This node will now operate as the singleton provider of the %s service
       2: areturn

  public final void stopSingleton(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #9                  // Method stopSingleton$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #6                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String stopSingleton$str();
    Code:
       0: ldc           #10                 // String WFLYCLSV0002: This node will no longer operate as the singleton provider of the %s service
       2: areturn

  public final void elected(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #11                 // Method elected$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #12                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String elected$str();
    Code:
       0: ldc           #13                 // String WFLYCLSV0003: %s elected as the singleton provider of the %s service
       2: areturn

  public final void noResponseFromMaster(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #14                 // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #15                 // Method noResponseFromMaster$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #6                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String noResponseFromMaster$str();
    Code:
       0: ldc           #16                 // String WFLYCLSV0004: No response received from master node of the %s service, retrying...
       2: areturn

  public final void serviceStartFailed(org.jboss.msc.service.StartException, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #17                 // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #18                 // Method serviceStartFailed$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #6                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String serviceStartFailed$str();
    Code:
       0: ldc           #19                 // String WFLYCLSV0005: Failed to start %s service
       2: areturn

  public final void quorumNotReached(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #17                 // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #20                 // Method quorumNotReached$str:()Ljava/lang/String;
      15: aload_1
      16: iload_2
      17: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: invokevirtual #12                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: return

  protected java.lang.String quorumNotReached$str();
    Code:
       0: ldc           #22                 // String WFLYCLSV0006: Failed to reach quorum of %2$d for %1$s service. No singleton master will be elected.
       2: areturn

  public final void quorumJustReached(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #23                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #24                 // Method quorumJustReached$str:()Ljava/lang/String;
      15: aload_1
      16: iload_2
      17: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: invokevirtual #12                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: return

  protected java.lang.String quorumJustReached$str();
    Code:
       0: ldc           #25                 // String WFLYCLSV0007: Just reached required quorum of %2$d for %1$s service. If this cluster loses another member, no node will be chosen to provide this service.
       2: areturn

  protected java.lang.String unexpectedResponseCount$str();
    Code:
       0: ldc           #26                 // String WFLYCLSV0008: Expected service %s value from singleton master only, but instead received %d results.
       2: areturn

  public final java.lang.IllegalStateException unexpectedResponseCount(java.lang.String, int);
    Code:
       0: new           #27                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #28                 // Method unexpectedResponseCount$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #29                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: astore_3
      30: aload_3
      31: invokevirtual #32                 // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      34: astore        4
      36: aload_3
      37: aload         4
      39: iconst_1
      40: aload         4
      42: arraylength
      43: invokestatic  #33                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      46: checkcast     #34                 // class "[Ljava/lang/StackTraceElement;"
      49: invokevirtual #35                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      52: aload_3
      53: areturn

  protected java.lang.String notStarted$str();
    Code:
       0: ldc           #36                 // String WFLYCLSV0009: Singleton service %s is not started.
       2: areturn

  public final java.lang.IllegalStateException notStarted(java.lang.String);
    Code:
       0: new           #27                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #37                 // Method notStarted$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #29                 // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #32                 // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #33                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #34                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #35                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  public final void registryPurgeFailed(org.infinispan.commons.CacheException, java.lang.String, java.lang.String, java.util.Collection<org.wildfly.clustering.group.Node>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #23                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #38                 // Method registryPurgeFailed$str:()Ljava/lang/String;
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokevirtual #39                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  protected java.lang.String registryPurgeFailed$str();
    Code:
       0: ldc           #40                 // String WFLYCLSV0010: Failed to purge %s/%s registry of old registry entries for: %s
       2: areturn

  public final void registryListenerFailed(java.lang.Throwable, java.lang.String, java.lang.String, org.infinispan.notifications.cachelistener.event.Event$Type, java.util.Map<? extends java.lang.Object, ? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #23                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #41                 // Method registryListenerFailed$str:()Ljava/lang/String;
      15: iconst_4
      16: anewarray     #29                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_2
      22: aastore
      23: dup
      24: iconst_1
      25: aload_3
      26: aastore
      27: dup
      28: iconst_2
      29: aload         4
      31: aastore
      32: dup
      33: iconst_3
      34: aload         5
      36: aastore
      37: invokevirtual #42                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      40: return

  protected java.lang.String registryListenerFailed$str();
    Code:
       0: ldc           #43                 // String WFLYCLSV0011: Failed to notify %s/%s registry listener of %s(%s) event
       2: areturn

  public final void serviceProviderRegistrationListenerFailed(java.lang.Throwable, java.lang.String, java.lang.String, java.util.Set<org.wildfly.clustering.group.Node>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #23                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #44                 // Method serviceProviderRegistrationListenerFailed$str:()Ljava/lang/String;
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokevirtual #39                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  protected java.lang.String serviceProviderRegistrationListenerFailed$str();
    Code:
       0: ldc           #45                 // String WFLYCLSV0012: Failed to notify %s/%s service provider registration listener of new providers: %s
       2: areturn

  static {};
    Code:
       0: ldc           #7                  // class org/wildfly/clustering/server/logging/ClusteringServerLogger_$logger
       2: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #3                  // Field FQCN:Ljava/lang/String;
       8: return
}
