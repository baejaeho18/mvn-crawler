Compiled from "SessionCreationMetaDataEntry.java"
public class org.wildfly.clustering.web.infinispan.session.SessionCreationMetaDataEntry<L> {
  private final org.wildfly.clustering.web.infinispan.session.SessionCreationMetaData metaData;

  private final java.util.concurrent.atomic.AtomicReference<L> localContext;

  public org.wildfly.clustering.web.infinispan.session.SessionCreationMetaDataEntry(org.wildfly.clustering.web.infinispan.session.SessionCreationMetaData);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/concurrent/atomic/AtomicReference
       5: dup
       6: invokespecial #2                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Lorg/wildfly/clustering/web/infinispan/session/SessionCreationMetaData;Ljava/util/concurrent/atomic/AtomicReference;)V
      12: return

  public org.wildfly.clustering.web.infinispan.session.SessionCreationMetaDataEntry(org.wildfly.clustering.web.infinispan.session.SessionCreationMetaData, java.util.concurrent.atomic.AtomicReference<L>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field metaData:Lorg/wildfly/clustering/web/infinispan/session/SessionCreationMetaData;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field localContext:Ljava/util/concurrent/atomic/AtomicReference;
      14: return

  public org.wildfly.clustering.web.infinispan.session.SessionCreationMetaData getMetaData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field metaData:Lorg/wildfly/clustering/web/infinispan/session/SessionCreationMetaData;
       4: areturn

  public java.util.concurrent.atomic.AtomicReference<L> getLocalContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field localContext:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn
}
