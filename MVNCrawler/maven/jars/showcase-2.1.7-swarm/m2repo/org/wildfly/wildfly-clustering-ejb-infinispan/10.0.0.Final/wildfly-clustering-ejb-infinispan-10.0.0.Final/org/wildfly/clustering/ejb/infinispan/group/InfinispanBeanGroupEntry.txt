Compiled from "InfinispanBeanGroupEntry.java"
public class org.wildfly.clustering.ejb.infinispan.group.InfinispanBeanGroupEntry<I, T> implements org.wildfly.clustering.ejb.infinispan.BeanGroupEntry<I, T> {
  private final org.wildfly.clustering.marshalling.jboss.MarshalledValue<java.util.Map<I, T>, org.wildfly.clustering.marshalling.jboss.MarshallingContext> beans;

  private final java.util.concurrent.ConcurrentMap<I, java.util.concurrent.atomic.AtomicInteger> usage;

  public org.wildfly.clustering.ejb.infinispan.group.InfinispanBeanGroupEntry(org.wildfly.clustering.marshalling.jboss.MarshalledValue<java.util.Map<I, T>, org.wildfly.clustering.marshalling.jboss.MarshallingContext>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field usage:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field beans:Lorg/wildfly/clustering/marshalling/jboss/MarshalledValue;
      20: return

  public org.wildfly.clustering.marshalling.jboss.MarshalledValue<java.util.Map<I, T>, org.wildfly.clustering.marshalling.jboss.MarshallingContext> getBeans();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beans:Lorg/wildfly/clustering/marshalling/jboss/MarshalledValue;
       4: areturn

  public int incrementUsage(I);
    Code:
       0: aload_0
       1: getfield      #4                  // Field usage:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class java/util/concurrent/atomic/AtomicInteger
      13: astore_2
      14: aload_2
      15: ifnonnull     47
      18: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
      21: dup
      22: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field usage:Ljava/util/concurrent/ConcurrentMap;
      30: aload_1
      31: aload_2
      32: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #7                  // class java/util/concurrent/atomic/AtomicInteger
      40: astore_3
      41: aload_3
      42: ifnull        47
      45: aload_3
      46: astore_2
      47: aload_2
      48: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      51: ireturn

  public int decrementUsage(I);
    Code:
       0: aload_0
       1: getfield      #4                  // Field usage:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class java/util/concurrent/atomic/AtomicInteger
      13: astore_2
      14: aload_2
      15: ifnull        25
      18: aload_2
      19: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      22: goto          26
      25: iconst_0
      26: ireturn

  public int totalUsage();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field usage:Ljava/util/concurrent/ConcurrentMap;
       6: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      11: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_2
      27: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #7                  // class java/util/concurrent/atomic/AtomicInteger
      35: astore_3
      36: iload_1
      37: aload_3
      38: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      41: iadd
      42: istore_1
      43: goto          17
      46: iload_1
      47: ireturn
}
