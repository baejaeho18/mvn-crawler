Compiled from "BeanExpirationScheduler.java"
public class org.wildfly.clustering.ejb.infinispan.BeanExpirationScheduler<G, I, T> implements org.wildfly.clustering.ejb.infinispan.Scheduler<I> {
  final java.util.Map<I, java.util.concurrent.Future<?>> expirationFutures;

  final org.wildfly.clustering.ee.Batcher<org.wildfly.clustering.ee.infinispan.TransactionBatch> batcher;

  final org.wildfly.clustering.ejb.infinispan.BeanRemover<I, T> remover;

  final org.wildfly.clustering.ejb.infinispan.ExpirationConfiguration<T> expiration;

  public org.wildfly.clustering.ejb.infinispan.BeanExpirationScheduler(org.wildfly.clustering.ee.Batcher<org.wildfly.clustering.ee.infinispan.TransactionBatch>, org.wildfly.clustering.ejb.infinispan.BeanRemover<I, T>, org.wildfly.clustering.ejb.infinispan.ExpirationConfiguration<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field expirationFutures:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field batcher:Lorg/wildfly/clustering/ee/Batcher;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field remover:Lorg/wildfly/clustering/ejb/infinispan/BeanRemover;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field expiration:Lorg/wildfly/clustering/ejb/infinispan/ExpirationConfiguration;
      30: return

  public void schedule(I);
    Code:
       0: aload_0
       1: getfield      #7                  // Field expiration:Lorg/wildfly/clustering/ejb/infinispan/ExpirationConfiguration;
       4: invokeinterface #8,  1            // InterfaceMethod org/wildfly/clustering/ejb/infinispan/ExpirationConfiguration.getTimeout:()Lorg/wildfly/clustering/ejb/Time;
       9: astore_2
      10: aload_2
      11: invokevirtual #9                  // Method org/wildfly/clustering/ejb/Time.getValue:()J
      14: lstore_3
      15: lload_3
      16: lconst_0
      17: lcmp
      18: iflt          105
      21: aload_2
      22: invokevirtual #10                 // Method org/wildfly/clustering/ejb/Time.getUnit:()Ljava/util/concurrent/TimeUnit;
      25: astore        5
      27: getstatic     #11                 // Field org/wildfly/clustering/ejb/infinispan/logging/InfinispanEjbLogger.ROOT_LOGGER:Lorg/wildfly/clustering/ejb/infinispan/logging/InfinispanEjbLogger;
      30: ldc           #12                 // String Scheduling stateful session bean %s to expire in %d %s
      32: aload_1
      33: lload_3
      34: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: aload         5
      39: invokeinterface #14,  5           // InterfaceMethod org/wildfly/clustering/ejb/infinispan/logging/InfinispanEjbLogger.tracef:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      44: new           #15                 // class org/wildfly/clustering/ejb/infinispan/BeanExpirationScheduler$ExpirationTask
      47: dup
      48: aload_0
      49: aload_1
      50: invokespecial #16                 // Method org/wildfly/clustering/ejb/infinispan/BeanExpirationScheduler$ExpirationTask."<init>":(Lorg/wildfly/clustering/ejb/infinispan/BeanExpirationScheduler;Ljava/lang/Object;)V
      53: astore        6
      55: aload         6
      57: dup
      58: astore        7
      60: monitorenter
      61: aload_0
      62: getfield      #4                  // Field expirationFutures:Ljava/util/Map;
      65: aload_1
      66: aload_0
      67: getfield      #7                  // Field expiration:Lorg/wildfly/clustering/ejb/infinispan/ExpirationConfiguration;
      70: invokeinterface #17,  1           // InterfaceMethod org/wildfly/clustering/ejb/infinispan/ExpirationConfiguration.getExecutor:()Ljava/util/concurrent/ScheduledExecutorService;
      75: aload         6
      77: lload_3
      78: aload         5
      80: invokeinterface #18,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      85: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: aload         7
      93: monitorexit
      94: goto          105
      97: astore        8
      99: aload         7
     101: monitorexit
     102: aload         8
     104: athrow
     105: return
    Exception table:
       from    to  target type
          61    94    97   any
          97   102    97   any

  public void cancel(I);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expirationFutures:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #21                 // class java/util/concurrent/Future
      13: astore_2
      14: aload_2
      15: ifnull        26
      18: aload_2
      19: iconst_0
      20: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      25: pop
      26: return

  public void cancel(org.wildfly.clustering.infinispan.spi.distribution.Locality);
    Code:
       0: aload_0
       1: getfield      #4                  // Field expirationFutures:Ljava/util/Map;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          49
      24: aload_2
      25: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokeinterface #27,  2           // InterfaceMethod org/wildfly/clustering/infinispan/spi/distribution/Locality.isLocal:(Ljava/lang/Object;)Z
      38: ifne          46
      41: aload_0
      42: aload_3
      43: invokevirtual #28                 // Method cancel:(Ljava/lang/Object;)V
      46: goto          15
      49: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field expirationFutures:Ljava/util/Map;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_1
      25: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #21                 // class java/util/concurrent/Future
      33: astore_2
      34: aload_2
      35: iconst_0
      36: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      41: pop
      42: goto          15
      45: aload_0
      46: getfield      #4                  // Field expirationFutures:Ljava/util/Map;
      49: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      54: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      59: astore_1
      60: aload_1
      61: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          112
      69: aload_1
      70: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #21                 // class java/util/concurrent/Future
      78: astore_2
      79: aload_2
      80: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
      85: ifne          109
      88: aload_2
      89: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      94: pop
      95: goto          109
      98: astore_3
      99: invokestatic  #34                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     102: invokevirtual #35                 // Method java/lang/Thread.interrupt:()V
     105: goto          109
     108: astore_3
     109: goto          60
     112: aload_0
     113: getfield      #4                  // Field expirationFutures:Ljava/util/Map;
     116: invokeinterface #37,  1           // InterfaceMethod java/util/Map.clear:()V
     121: return
    Exception table:
       from    to  target type
          88    95    98   Class java/lang/InterruptedException
          88    95   108   Class java/util/concurrent/ExecutionException
}
