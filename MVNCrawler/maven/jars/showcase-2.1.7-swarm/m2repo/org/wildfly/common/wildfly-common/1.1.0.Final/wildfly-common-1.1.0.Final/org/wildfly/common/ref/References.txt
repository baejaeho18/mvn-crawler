Compiled from "References.java"
public final class org.wildfly.common.ref.References {
  private static final org.wildfly.common.ref.Reference<?, ?> NULL;

  private org.wildfly.common.ref.References();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T, A> org.wildfly.common.ref.Reference<T, A> create(org.wildfly.common.ref.Reference$Type, T, A, org.wildfly.common.ref.Reaper<T, A>);
    Code:
       0: ldc           #2                  // String type
       2: aload_0
       3: invokestatic  #3                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ifnonnull     15
      11: invokestatic  #4                  // Method getNullReference:()Lorg/wildfly/common/ref/Reference;
      14: areturn
      15: getstatic     #5                  // Field org/wildfly/common/ref/References$2.$SwitchMap$org$wildfly$common$ref$Reference$Type:[I
      18: aload_0
      19: invokevirtual #6                  // Method org/wildfly/common/ref/Reference$Type.ordinal:()I
      22: iaload
      23: tableswitch   { // 1 to 5
                     1: 56
                     2: 66
                     3: 77
                     4: 88
                     5: 99
               default: 103
          }
      56: new           #7                  // class org/wildfly/common/ref/StrongReference
      59: dup
      60: aload_1
      61: aload_2
      62: invokespecial #8                  // Method org/wildfly/common/ref/StrongReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      65: areturn
      66: new           #9                  // class org/wildfly/common/ref/WeakReference
      69: dup
      70: aload_1
      71: aload_2
      72: aload_3
      73: invokespecial #10                 // Method org/wildfly/common/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/wildfly/common/ref/Reaper;)V
      76: areturn
      77: new           #11                 // class org/wildfly/common/ref/PhantomReference
      80: dup
      81: aload_1
      82: aload_2
      83: aload_3
      84: invokespecial #12                 // Method org/wildfly/common/ref/PhantomReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/wildfly/common/ref/Reaper;)V
      87: areturn
      88: new           #13                 // class org/wildfly/common/ref/SoftReference
      91: dup
      92: aload_1
      93: aload_2
      94: aload_3
      95: invokespecial #14                 // Method org/wildfly/common/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/wildfly/common/ref/Reaper;)V
      98: areturn
      99: invokestatic  #4                  // Method getNullReference:()Lorg/wildfly/common/ref/Reference;
     102: areturn
     103: aload_0
     104: invokestatic  #15                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     107: athrow

  public static <T, A> org.wildfly.common.ref.Reference<T, A> create(org.wildfly.common.ref.Reference$Type, T, A, java.lang.ref.ReferenceQueue<? super T>);
    Code:
       0: ldc           #2                  // String type
       2: aload_0
       3: invokestatic  #3                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ifnonnull     15
      11: invokestatic  #4                  // Method getNullReference:()Lorg/wildfly/common/ref/Reference;
      14: areturn
      15: getstatic     #5                  // Field org/wildfly/common/ref/References$2.$SwitchMap$org$wildfly$common$ref$Reference$Type:[I
      18: aload_0
      19: invokevirtual #6                  // Method org/wildfly/common/ref/Reference$Type.ordinal:()I
      22: iaload
      23: tableswitch   { // 1 to 5
                     1: 56
                     2: 66
                     3: 77
                     4: 88
                     5: 99
               default: 103
          }
      56: new           #7                  // class org/wildfly/common/ref/StrongReference
      59: dup
      60: aload_1
      61: aload_2
      62: invokespecial #8                  // Method org/wildfly/common/ref/StrongReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      65: areturn
      66: new           #9                  // class org/wildfly/common/ref/WeakReference
      69: dup
      70: aload_1
      71: aload_2
      72: aload_3
      73: invokespecial #16                 // Method org/wildfly/common/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      76: areturn
      77: new           #11                 // class org/wildfly/common/ref/PhantomReference
      80: dup
      81: aload_1
      82: aload_2
      83: aload_3
      84: invokespecial #17                 // Method org/wildfly/common/ref/PhantomReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      87: areturn
      88: new           #13                 // class org/wildfly/common/ref/SoftReference
      91: dup
      92: aload_1
      93: aload_2
      94: aload_3
      95: invokespecial #18                 // Method org/wildfly/common/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      98: areturn
      99: invokestatic  #4                  // Method getNullReference:()Lorg/wildfly/common/ref/Reference;
     102: areturn
     103: aload_0
     104: invokestatic  #15                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(Ljava/lang/Object;)Ljava/lang/IllegalStateException;
     107: athrow

  public static <T, A> org.wildfly.common.ref.Reference<T, A> create(org.wildfly.common.ref.Reference$Type, T, A) throws java.lang.IllegalArgumentException;
    Code:
       0: ldc           #2                  // String type
       2: aload_0
       3: invokestatic  #3                  // Method org/wildfly/common/Assert.checkNotNullParam:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ifnonnull     15
      11: invokestatic  #4                  // Method getNullReference:()Lorg/wildfly/common/ref/Reference;
      14: areturn
      15: getstatic     #5                  // Field org/wildfly/common/ref/References$2.$SwitchMap$org$wildfly$common$ref$Reference$Type:[I
      18: aload_0
      19: invokevirtual #6                  // Method org/wildfly/common/ref/Reference$Type.ordinal:()I
      22: iaload
      23: tableswitch   { // 1 to 5
                     1: 56
                     2: 66
                     3: 76
                     4: 80
                     5: 90
               default: 94
          }
      56: new           #7                  // class org/wildfly/common/ref/StrongReference
      59: dup
      60: aload_1
      61: aload_2
      62: invokespecial #8                  // Method org/wildfly/common/ref/StrongReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      65: areturn
      66: new           #9                  // class org/wildfly/common/ref/WeakReference
      69: dup
      70: aload_1
      71: aload_2
      72: invokespecial #19                 // Method org/wildfly/common/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      75: areturn
      76: invokestatic  #4                  // Method getNullReference:()Lorg/wildfly/common/ref/Reference;
      79: areturn
      80: new           #13                 // class org/wildfly/common/ref/SoftReference
      83: dup
      84: aload_1
      85: aload_2
      86: invokespecial #20                 // Method org/wildfly/common/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      89: areturn
      90: invokestatic  #4                  // Method getNullReference:()Lorg/wildfly/common/ref/Reference;
      93: areturn
      94: aload_0
      95: invokestatic  #15                 // Method org/wildfly/common/Assert.impossibleSwitchCase:(Ljava/lang/Object;)Ljava/lang/IllegalStateException;
      98: athrow

  public static <T, A> org.wildfly.common.ref.Reference<T, A> getNullReference();
    Code:
       0: getstatic     #21                 // Field NULL:Lorg/wildfly/common/ref/Reference;
       3: areturn

  static {};
    Code:
       0: new           #22                 // class org/wildfly/common/ref/References$1
       3: dup
       4: invokespecial #23                 // Method org/wildfly/common/ref/References$1."<init>":()V
       7: putstatic     #21                 // Field NULL:Lorg/wildfly/common/ref/Reference;
      10: return
}
