Compiled from "ComponentDescription.java"
public class org.jboss.as.ee.component.ComponentDescription implements org.jboss.as.ee.component.ResourceInjectionTarget {
  private static final org.jboss.as.ee.component.DefaultComponentConfigurator DEFAULT_COMPONENT_CONFIGURATOR;

  private static final org.jboss.as.ee.component.DefaultInterceptorConfigurator DEFAULT_INTERCEPTOR_CONFIGURATOR;

  private static final org.jboss.as.ee.component.DefaultComponentViewConfigurator DEFAULT_COMPONENT_VIEW_CONFIGURATOR;

  private final org.jboss.msc.service.ServiceName serviceName;

  private org.jboss.msc.service.ServiceName contextServiceName;

  private final java.lang.String componentName;

  private final java.lang.String componentClassName;

  private final org.jboss.as.ee.component.EEModuleDescription moduleDescription;

  private final java.util.Set<org.jboss.as.ee.component.ViewDescription> views;

  private final java.util.Map<java.lang.String, org.jboss.as.ee.component.interceptors.InterceptorClassDescription> interceptorClassOverrides;

  private java.util.List<org.jboss.as.ee.component.InterceptorDescription> classInterceptors;

  private java.util.List<org.jboss.as.ee.component.InterceptorDescription> defaultInterceptors;

  private final java.util.Map<org.jboss.invocation.proxy.MethodIdentifier, java.util.List<org.jboss.as.ee.component.InterceptorDescription>> methodInterceptors;

  private final java.util.Set<org.jboss.invocation.proxy.MethodIdentifier> methodExcludeDefaultInterceptors;

  private final java.util.Set<org.jboss.invocation.proxy.MethodIdentifier> methodExcludeClassInterceptors;

  private java.util.Set<org.jboss.as.ee.component.InterceptorDescription> allInterceptors;

  private boolean excludeDefaultInterceptors;

  private boolean ignoreLifecycleInterceptors;

  private final java.util.Map<org.jboss.msc.service.ServiceName, org.jboss.msc.service.ServiceBuilder$DependencyType> dependencies;

  private org.jboss.as.ee.component.ComponentNamingMode namingMode;

  private org.jboss.as.ee.component.DeploymentDescriptorEnvironment deploymentDescriptorEnvironment;

  private final java.util.List<org.jboss.as.ee.component.BindingConfiguration> bindingConfigurations;

  private final java.util.Map<java.lang.String, java.util.Map<org.jboss.as.ee.component.InjectionTarget, org.jboss.as.ee.component.ResourceInjectionConfiguration>> resourceInjections;

  private final java.util.Deque<org.jboss.as.ee.component.ComponentConfigurator> configurators;

  private java.lang.String beanDeploymentArchiveId;

  public org.jboss.as.ee.component.ComponentDescription(java.lang.String, java.lang.String, org.jboss.as.ee.component.EEModuleDescription, org.jboss.msc.service.ServiceName);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field views:Ljava/util/Set;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field interceptorClassOverrides:Ljava/util/Map;
      26: aload_0
      27: new           #8                  // class java/util/ArrayList
      30: dup
      31: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #10                 // Field classInterceptors:Ljava/util/List;
      37: aload_0
      38: new           #8                  // class java/util/ArrayList
      41: dup
      42: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      45: putfield      #11                 // Field defaultInterceptors:Ljava/util/List;
      48: aload_0
      49: new           #5                  // class java/util/HashMap
      52: dup
      53: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      56: putfield      #12                 // Field methodInterceptors:Ljava/util/Map;
      59: aload_0
      60: new           #2                  // class java/util/HashSet
      63: dup
      64: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      67: putfield      #13                 // Field methodExcludeDefaultInterceptors:Ljava/util/Set;
      70: aload_0
      71: new           #2                  // class java/util/HashSet
      74: dup
      75: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      78: putfield      #14                 // Field methodExcludeClassInterceptors:Ljava/util/Set;
      81: aload_0
      82: iconst_0
      83: putfield      #15                 // Field excludeDefaultInterceptors:Z
      86: aload_0
      87: iconst_0
      88: putfield      #16                 // Field ignoreLifecycleInterceptors:Z
      91: aload_0
      92: new           #5                  // class java/util/HashMap
      95: dup
      96: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      99: putfield      #17                 // Field dependencies:Ljava/util/Map;
     102: aload_0
     103: getstatic     #18                 // Field org/jboss/as/ee/component/ComponentNamingMode.USE_MODULE:Lorg/jboss/as/ee/component/ComponentNamingMode;
     106: putfield      #19                 // Field namingMode:Lorg/jboss/as/ee/component/ComponentNamingMode;
     109: aload_0
     110: new           #8                  // class java/util/ArrayList
     113: dup
     114: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
     117: putfield      #20                 // Field bindingConfigurations:Ljava/util/List;
     120: aload_0
     121: new           #5                  // class java/util/HashMap
     124: dup
     125: invokespecial #6                  // Method java/util/HashMap."<init>":()V
     128: putfield      #21                 // Field resourceInjections:Ljava/util/Map;
     131: aload_0
     132: new           #22                 // class java/util/ArrayDeque
     135: dup
     136: invokespecial #23                 // Method java/util/ArrayDeque."<init>":()V
     139: putfield      #24                 // Field configurators:Ljava/util/Deque;
     142: aload_0
     143: aload_3
     144: putfield      #25                 // Field moduleDescription:Lorg/jboss/as/ee/component/EEModuleDescription;
     147: aload_1
     148: ifnonnull     162
     151: getstatic     #26                 // Field org/jboss/as/ee/logging/EeLogger.ROOT_LOGGER:Lorg/jboss/as/ee/logging/EeLogger;
     154: ldc           #27                 // String name
     156: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/ee/logging/EeLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     161: athrow
     162: aload_2
     163: ifnonnull     177
     166: getstatic     #26                 // Field org/jboss/as/ee/logging/EeLogger.ROOT_LOGGER:Lorg/jboss/as/ee/logging/EeLogger;
     169: ldc           #29                 // String componentClassName
     171: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/ee/logging/EeLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     176: athrow
     177: aload_3
     178: ifnonnull     192
     181: getstatic     #26                 // Field org/jboss/as/ee/logging/EeLogger.ROOT_LOGGER:Lorg/jboss/as/ee/logging/EeLogger;
     184: ldc           #30                 // String moduleDescription
     186: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/ee/logging/EeLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     191: athrow
     192: aload         4
     194: ifnonnull     208
     197: getstatic     #26                 // Field org/jboss/as/ee/logging/EeLogger.ROOT_LOGGER:Lorg/jboss/as/ee/logging/EeLogger;
     200: ldc           #31                 // String deploymentUnitServiceName
     202: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/ee/logging/EeLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     207: athrow
     208: aload_0
     209: aload         4
     211: aload_1
     212: invokestatic  #32                 // Method org/jboss/as/ee/component/BasicComponent.serviceNameOf:(Lorg/jboss/msc/service/ServiceName;Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
     215: putfield      #33                 // Field serviceName:Lorg/jboss/msc/service/ServiceName;
     218: aload_0
     219: aload_1
     220: putfield      #34                 // Field componentName:Ljava/lang/String;
     223: aload_0
     224: aload_2
     225: putfield      #35                 // Field componentClassName:Ljava/lang/String;
     228: aload_0
     229: getfield      #24                 // Field configurators:Ljava/util/Deque;
     232: getstatic     #36                 // Field DEFAULT_COMPONENT_CONFIGURATOR:Lorg/jboss/as/ee/component/DefaultComponentConfigurator;
     235: invokeinterface #37,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
     240: aload_0
     241: getfield      #24                 // Field configurators:Ljava/util/Deque;
     244: getstatic     #38                 // Field DEFAULT_INTERCEPTOR_CONFIGURATOR:Lorg/jboss/as/ee/component/DefaultInterceptorConfigurator;
     247: invokeinterface #37,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
     252: aload_0
     253: getfield      #24                 // Field configurators:Ljava/util/Deque;
     256: getstatic     #39                 // Field DEFAULT_COMPONENT_VIEW_CONFIGURATOR:Lorg/jboss/as/ee/component/DefaultComponentViewConfigurator;
     259: invokeinterface #37,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
     264: return

  public org.jboss.as.ee.component.ComponentConfiguration createConfiguration(org.jboss.as.server.deployment.reflect.ClassReflectionIndex, java.lang.ClassLoader, org.jboss.modules.ModuleLoader);
    Code:
       0: new           #40                 // class org/jboss/as/ee/component/ComponentConfiguration
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #41                 // Method org/jboss/as/ee/component/ComponentConfiguration."<init>":(Lorg/jboss/as/ee/component/ComponentDescription;Lorg/jboss/as/server/deployment/reflect/ClassReflectionIndex;Ljava/lang/ClassLoader;Lorg/jboss/modules/ModuleLoader;)V
      11: areturn

  public java.lang.String getComponentName();
    Code:
       0: aload_0
       1: getfield      #34                 // Field componentName:Ljava/lang/String;
       4: areturn

  public void setContextServiceName(org.jboss.msc.service.ServiceName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field contextServiceName:Lorg/jboss/msc/service/ServiceName;
       5: return

  public org.jboss.msc.service.ServiceName getContextServiceName();
    Code:
       0: aload_0
       1: getfield      #42                 // Field contextServiceName:Lorg/jboss/msc/service/ServiceName;
       4: ifnull        12
       7: aload_0
       8: getfield      #42                 // Field contextServiceName:Lorg/jboss/msc/service/ServiceName;
      11: areturn
      12: aload_0
      13: invokevirtual #43                 // Method getNamingMode:()Lorg/jboss/as/ee/component/ComponentNamingMode;
      16: getstatic     #44                 // Field org/jboss/as/ee/component/ComponentNamingMode.CREATE:Lorg/jboss/as/ee/component/ComponentNamingMode;
      19: if_acmpne     38
      22: aload_0
      23: invokevirtual #45                 // Method getApplicationName:()Ljava/lang/String;
      26: aload_0
      27: invokevirtual #46                 // Method getModuleName:()Ljava/lang/String;
      30: aload_0
      31: invokevirtual #47                 // Method getComponentName:()Ljava/lang/String;
      34: invokestatic  #48                 // Method org/jboss/as/naming/deployment/ContextNames.contextServiceNameOfComponent:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      37: areturn
      38: aload_0
      39: invokevirtual #43                 // Method getNamingMode:()Lorg/jboss/as/ee/component/ComponentNamingMode;
      42: getstatic     #18                 // Field org/jboss/as/ee/component/ComponentNamingMode.USE_MODULE:Lorg/jboss/as/ee/component/ComponentNamingMode;
      45: if_acmpne     60
      48: aload_0
      49: invokevirtual #45                 // Method getApplicationName:()Ljava/lang/String;
      52: aload_0
      53: invokevirtual #46                 // Method getModuleName:()Ljava/lang/String;
      56: invokestatic  #49                 // Method org/jboss/as/naming/deployment/ContextNames.contextServiceNameOfModule:(Ljava/lang/String;Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      59: areturn
      60: new           #50                 // class java/lang/IllegalStateException
      63: dup
      64: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":()V
      67: athrow

  public org.jboss.msc.service.ServiceName getServiceName();
    Code:
       0: aload_0
       1: getfield      #33                 // Field serviceName:Lorg/jboss/msc/service/ServiceName;
       4: areturn

  public org.jboss.msc.service.ServiceName getStartServiceName();
    Code:
       0: aload_0
       1: getfield      #33                 // Field serviceName:Lorg/jboss/msc/service/ServiceName;
       4: iconst_1
       5: anewarray     #52                 // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #53                 // String START
      12: aastore
      13: invokevirtual #54                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      16: areturn

  public org.jboss.msc.service.ServiceName getCreateServiceName();
    Code:
       0: aload_0
       1: getfield      #33                 // Field serviceName:Lorg/jboss/msc/service/ServiceName;
       4: iconst_1
       5: anewarray     #52                 // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #55                 // String CREATE
      12: aastore
      13: invokevirtual #54                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      16: areturn

  public java.lang.String getComponentClassName();
    Code:
       0: aload_0
       1: getfield      #35                 // Field componentClassName:Ljava/lang/String;
       4: areturn

  public java.lang.String getModuleName();
    Code:
       0: aload_0
       1: getfield      #25                 // Field moduleDescription:Lorg/jboss/as/ee/component/EEModuleDescription;
       4: invokevirtual #56                 // Method org/jboss/as/ee/component/EEModuleDescription.getModuleName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getApplicationName();
    Code:
       0: aload_0
       1: getfield      #25                 // Field moduleDescription:Lorg/jboss/as/ee/component/EEModuleDescription;
       4: invokevirtual #57                 // Method org/jboss/as/ee/component/EEModuleDescription.getApplicationName:()Ljava/lang/String;
       7: areturn

  public java.util.List<org.jboss.as.ee.component.InterceptorDescription> getClassInterceptors();
    Code:
       0: aload_0
       1: getfield      #10                 // Field classInterceptors:Ljava/util/List;
       4: areturn

  public void setClassInterceptors(java.util.List<org.jboss.as.ee.component.InterceptorDescription>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field classInterceptors:Ljava/util/List;
       5: aload_0
       6: aconst_null
       7: putfield      #58                 // Field allInterceptors:Ljava/util/Set;
      10: return

  public java.util.List<org.jboss.as.ee.component.InterceptorDescription> getDefaultInterceptors();
    Code:
       0: aload_0
       1: getfield      #11                 // Field defaultInterceptors:Ljava/util/List;
       4: areturn

  public void setDefaultInterceptors(java.util.List<org.jboss.as.ee.component.InterceptorDescription>);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #58                 // Field allInterceptors:Ljava/util/Set;
       5: aload_0
       6: aload_1
       7: putfield      #11                 // Field defaultInterceptors:Ljava/util/List;
      10: return

  public java.util.Set<org.jboss.as.ee.component.InterceptorDescription> getAllInterceptors();
    Code:
       0: aload_0
       1: getfield      #58                 // Field allInterceptors:Ljava/util/Set;
       4: ifnonnull     101
       7: aload_0
       8: new           #2                  // class java/util/HashSet
      11: dup
      12: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      15: putfield      #58                 // Field allInterceptors:Ljava/util/Set;
      18: aload_0
      19: getfield      #58                 // Field allInterceptors:Ljava/util/Set;
      22: aload_0
      23: getfield      #10                 // Field classInterceptors:Ljava/util/List;
      26: invokeinterface #59,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      31: pop
      32: aload_0
      33: getfield      #15                 // Field excludeDefaultInterceptors:Z
      36: ifne          53
      39: aload_0
      40: getfield      #58                 // Field allInterceptors:Ljava/util/Set;
      43: aload_0
      44: getfield      #11                 // Field defaultInterceptors:Ljava/util/List;
      47: invokeinterface #59,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      52: pop
      53: aload_0
      54: getfield      #12                 // Field methodInterceptors:Ljava/util/Map;
      57: invokeinterface #60,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      62: invokeinterface #61,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      67: astore_1
      68: aload_1
      69: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          101
      77: aload_1
      78: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #64                 // class java/util/List
      86: astore_2
      87: aload_0
      88: getfield      #58                 // Field allInterceptors:Ljava/util/Set;
      91: aload_2
      92: invokeinterface #59,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      97: pop
      98: goto          68
     101: aload_0
     102: getfield      #58                 // Field allInterceptors:Ljava/util/Set;
     105: areturn

  public boolean isExcludeDefaultInterceptors();
    Code:
       0: aload_0
       1: getfield      #15                 // Field excludeDefaultInterceptors:Z
       4: ireturn

  public void setExcludeDefaultInterceptors(boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #58                 // Field allInterceptors:Ljava/util/Set;
       5: aload_0
       6: iload_1
       7: putfield      #15                 // Field excludeDefaultInterceptors:Z
      10: return

  public boolean isIgnoreLifecycleInterceptors();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ignoreLifecycleInterceptors:Z
       4: ireturn

  public void setIgnoreLifecycleInterceptors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field ignoreLifecycleInterceptors:Z
       5: return

  public void excludeDefaultInterceptors(org.jboss.invocation.proxy.MethodIdentifier);
    Code:
       0: aload_0
       1: getfield      #13                 // Field methodExcludeDefaultInterceptors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean isExcludeDefaultInterceptors(org.jboss.invocation.proxy.MethodIdentifier);
    Code:
       0: aload_0
       1: getfield      #13                 // Field methodExcludeDefaultInterceptors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public void excludeClassInterceptors(org.jboss.invocation.proxy.MethodIdentifier);
    Code:
       0: aload_0
       1: getfield      #14                 // Field methodExcludeClassInterceptors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public boolean isExcludeClassInterceptors(org.jboss.invocation.proxy.MethodIdentifier);
    Code:
       0: aload_0
       1: getfield      #14                 // Field methodExcludeClassInterceptors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public void addClassInterceptor(org.jboss.as.ee.component.InterceptorDescription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field classInterceptors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aconst_null
      13: putfield      #58                 // Field allInterceptors:Ljava/util/Set;
      16: return

  public org.jboss.as.ee.component.InterceptorDescription getClassInterceptor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field classInterceptors:Ljava/util/List;
       4: invokeinterface #68,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #69                 // class org/jboss/as/ee/component/InterceptorDescription
      28: astore_3
      29: aload_3
      30: invokevirtual #70                 // Method org/jboss/as/ee/component/InterceptorDescription.getInterceptorClassName:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: aconst_null
      46: areturn

  public java.util.Map<org.jboss.invocation.proxy.MethodIdentifier, java.util.List<org.jboss.as.ee.component.InterceptorDescription>> getMethodInterceptors();
    Code:
       0: aload_0
       1: getfield      #12                 // Field methodInterceptors:Ljava/util/Map;
       4: areturn

  public void addMethodInterceptor(org.jboss.invocation.proxy.MethodIdentifier, org.jboss.as.ee.component.InterceptorDescription);
    Code:
       0: aload_0
       1: getfield      #12                 // Field methodInterceptors:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #64                 // class java/util/List
      13: astore_3
      14: aload_3
      15: ifnonnull     38
      18: aload_0
      19: getfield      #12                 // Field methodInterceptors:Ljava/util/Map;
      22: aload_1
      23: new           #8                  // class java/util/ArrayList
      26: dup
      27: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      30: dup
      31: astore_3
      32: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: invokevirtual #70                 // Method org/jboss/as/ee/component/InterceptorDescription.getInterceptorClassName:()Ljava/lang/String;
      42: astore        4
      44: aload_3
      45: aload_2
      46: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: aconst_null
      54: putfield      #58                 // Field allInterceptors:Ljava/util/Set;
      57: return

  public void setMethodInterceptors(org.jboss.invocation.proxy.MethodIdentifier, java.util.List<org.jboss.as.ee.component.InterceptorDescription>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field methodInterceptors:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #14                 // Field methodExcludeClassInterceptors:Ljava/util/Set;
      16: aload_1
      17: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: getfield      #13                 // Field methodExcludeDefaultInterceptors:Ljava/util/Set;
      27: aload_1
      28: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      33: pop
      34: return

  public void addInterceptorMethodOverride(java.lang.String, org.jboss.as.ee.component.interceptors.InterceptorClassDescription);
    Code:
       0: aload_0
       1: getfield      #7                  // Field interceptorClassOverrides:Ljava/util/Map;
       4: aload_1
       5: aload_0
       6: getfield      #7                  // Field interceptorClassOverrides:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #74                 // class org/jboss/as/ee/component/interceptors/InterceptorClassDescription
      18: aload_2
      19: invokestatic  #75                 // Method org/jboss/as/ee/component/interceptors/InterceptorClassDescription.merge:(Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;)Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;
      22: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public org.jboss.as.ee.component.ComponentNamingMode getNamingMode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field namingMode:Lorg/jboss/as/ee/component/ComponentNamingMode;
       4: areturn

  public void setNamingMode(org.jboss.as.ee.component.ComponentNamingMode);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #26                 // Field org/jboss/as/ee/logging/EeLogger.ROOT_LOGGER:Lorg/jboss/as/ee/logging/EeLogger;
       7: ldc           #76                 // String namingMode
       9: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/ee/logging/EeLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #19                 // Field namingMode:Lorg/jboss/as/ee/component/ComponentNamingMode;
      20: return

  public org.jboss.as.ee.component.EEModuleDescription getModuleDescription();
    Code:
       0: aload_0
       1: getfield      #25                 // Field moduleDescription:Lorg/jboss/as/ee/component/EEModuleDescription;
       4: areturn

  public void addDependency(org.jboss.msc.service.ServiceName, org.jboss.msc.service.ServiceBuilder$DependencyType);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #26                 // Field org/jboss/as/ee/logging/EeLogger.ROOT_LOGGER:Lorg/jboss/as/ee/logging/EeLogger;
       7: ldc           #77                 // String serviceName
       9: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/ee/logging/EeLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_2
      16: ifnonnull     30
      19: getstatic     #26                 // Field org/jboss/as/ee/logging/EeLogger.ROOT_LOGGER:Lorg/jboss/as/ee/logging/EeLogger;
      22: ldc           #78                 // String type
      24: invokeinterface #28,  2           // InterfaceMethod org/jboss/as/ee/logging/EeLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: aload_0
      31: getfield      #17                 // Field dependencies:Ljava/util/Map;
      34: astore_3
      35: aload_3
      36: aload_1
      37: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #79                 // class org/jboss/msc/service/ServiceBuilder$DependencyType
      45: astore        4
      47: aload         4
      49: getstatic     #80                 // Field org/jboss/msc/service/ServiceBuilder$DependencyType.REQUIRED:Lorg/jboss/msc/service/ServiceBuilder$DependencyType;
      52: if_acmpne     69
      55: aload_3
      56: aload_1
      57: getstatic     #80                 // Field org/jboss/msc/service/ServiceBuilder$DependencyType.REQUIRED:Lorg/jboss/msc/service/ServiceBuilder$DependencyType;
      60: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: goto          78
      69: aload_3
      70: aload_1
      71: aload_2
      72: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: return

  public java.util.Map<org.jboss.msc.service.ServiceName, org.jboss.msc.service.ServiceBuilder$DependencyType> getDependencies();
    Code:
       0: aload_0
       1: getfield      #17                 // Field dependencies:Ljava/util/Map;
       4: areturn

  public org.jboss.as.ee.component.DeploymentDescriptorEnvironment getDeploymentDescriptorEnvironment();
    Code:
       0: aload_0
       1: getfield      #81                 // Field deploymentDescriptorEnvironment:Lorg/jboss/as/ee/component/DeploymentDescriptorEnvironment;
       4: areturn

  public void setDeploymentDescriptorEnvironment(org.jboss.as.ee.component.DeploymentDescriptorEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #81                 // Field deploymentDescriptorEnvironment:Lorg/jboss/as/ee/component/DeploymentDescriptorEnvironment;
       5: return

  public java.util.List<org.jboss.as.ee.component.BindingConfiguration> getBindingConfigurations();
    Code:
       0: aload_0
       1: getfield      #20                 // Field bindingConfigurations:Ljava/util/List;
       4: areturn

  public java.util.Set<org.jboss.as.ee.component.ViewDescription> getViews();
    Code:
       0: aload_0
       1: getfield      #4                  // Field views:Ljava/util/Set;
       4: areturn

  public boolean isTimerServiceApplicable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isTimerServiceRequired();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method isTimerServiceApplicable:()Z
       4: ifeq          23
       7: aload_0
       8: invokevirtual #83                 // Method getTimerMethods:()Ljava/util/Set;
      11: invokeinterface #84,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.util.Set<org.jboss.invocation.proxy.MethodIdentifier> getTimerMethods();
    Code:
       0: invokestatic  #85                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public boolean isPassivationApplicable();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Deque<org.jboss.as.ee.component.ComponentConfigurator> getConfigurators();
    Code:
       0: aload_0
       1: getfield      #24                 // Field configurators:Ljava/util/Deque;
       4: areturn

  public boolean isIntercepted();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isOptional();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getBeanDeploymentArchiveId();
    Code:
       0: aload_0
       1: getfield      #86                 // Field beanDeploymentArchiveId:Ljava/lang/String;
       4: areturn

  public void setBeanDeploymentArchiveId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field beanDeploymentArchiveId:Ljava/lang/String;
       5: return

  public void addResourceInjection(org.jboss.as.ee.component.ResourceInjectionConfiguration);
    Code:
       0: aload_1
       1: invokevirtual #87                 // Method org/jboss/as/ee/component/ResourceInjectionConfiguration.getTarget:()Lorg/jboss/as/ee/component/InjectionTarget;
       4: invokevirtual #88                 // Method org/jboss/as/ee/component/InjectionTarget.getClassName:()Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: getfield      #21                 // Field resourceInjections:Ljava/util/Map;
      12: aload_2
      13: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #89                 // class java/util/Map
      21: astore_3
      22: aload_3
      23: ifnonnull     46
      26: aload_0
      27: getfield      #21                 // Field resourceInjections:Ljava/util/Map;
      30: aload_2
      31: new           #5                  // class java/util/HashMap
      34: dup
      35: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      38: dup
      39: astore_3
      40: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: aload_1
      48: invokevirtual #87                 // Method org/jboss/as/ee/component/ResourceInjectionConfiguration.getTarget:()Lorg/jboss/as/ee/component/InjectionTarget;
      51: aload_1
      52: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: return

  public java.util.Map<org.jboss.as.ee.component.InjectionTarget, org.jboss.as.ee.component.ResourceInjectionConfiguration> getResourceInjections(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field resourceInjections:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #89                 // class java/util/Map
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: invokestatic  #90                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      21: areturn
      22: aload_2
      23: invokestatic  #91                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      26: areturn

  public boolean isCDIInterceptorEnabled();
    Code:
       0: iconst_0
       1: ireturn

  public static org.jboss.as.ee.component.interceptors.InterceptorClassDescription mergeInterceptorConfig(java.lang.Class<?>, org.jboss.as.ee.component.EEModuleClassDescription, org.jboss.as.ee.component.ComponentDescription, boolean);
    Code:
       0: aload_1
       1: ifnull        36
       4: iload_3
       5: ifne          36
       8: aload_1
       9: invokevirtual #92                 // Method org/jboss/as/ee/component/EEModuleClassDescription.getInterceptorClassDescription:()Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;
      12: aload_2
      13: getfield      #7                  // Field interceptorClassOverrides:Ljava/util/Map;
      16: aload_0
      17: invokevirtual #93                 // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #74                 // class org/jboss/as/ee/component/interceptors/InterceptorClassDescription
      28: invokestatic  #75                 // Method org/jboss/as/ee/component/interceptors/InterceptorClassDescription.merge:(Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;)Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;
      31: astore        4
      33: goto          58
      36: aconst_null
      37: aload_2
      38: getfield      #7                  // Field interceptorClassOverrides:Ljava/util/Map;
      41: aload_0
      42: invokevirtual #93                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokeinterface #72,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #74                 // class org/jboss/as/ee/component/interceptors/InterceptorClassDescription
      53: invokestatic  #75                 // Method org/jboss/as/ee/component/interceptors/InterceptorClassDescription.merge:(Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;)Lorg/jboss/as/ee/component/interceptors/InterceptorClassDescription;
      56: astore        4
      58: aload         4
      60: areturn

  static {};
    Code:
       0: new           #94                 // class org/jboss/as/ee/component/DefaultComponentConfigurator
       3: dup
       4: invokespecial #95                 // Method org/jboss/as/ee/component/DefaultComponentConfigurator."<init>":()V
       7: putstatic     #36                 // Field DEFAULT_COMPONENT_CONFIGURATOR:Lorg/jboss/as/ee/component/DefaultComponentConfigurator;
      10: new           #96                 // class org/jboss/as/ee/component/DefaultInterceptorConfigurator
      13: dup
      14: invokespecial #97                 // Method org/jboss/as/ee/component/DefaultInterceptorConfigurator."<init>":()V
      17: putstatic     #38                 // Field DEFAULT_INTERCEPTOR_CONFIGURATOR:Lorg/jboss/as/ee/component/DefaultInterceptorConfigurator;
      20: new           #98                 // class org/jboss/as/ee/component/DefaultComponentViewConfigurator
      23: dup
      24: invokespecial #99                 // Method org/jboss/as/ee/component/DefaultComponentViewConfigurator."<init>":()V
      27: putstatic     #39                 // Field DEFAULT_COMPONENT_VIEW_CONFIGURATOR:Lorg/jboss/as/ee/component/DefaultComponentViewConfigurator;
      30: return
}
