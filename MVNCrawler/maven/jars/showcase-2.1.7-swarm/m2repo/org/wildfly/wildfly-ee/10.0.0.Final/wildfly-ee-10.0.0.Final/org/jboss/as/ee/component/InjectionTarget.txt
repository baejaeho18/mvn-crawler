Compiled from "InjectionTarget.java"
public abstract class org.jboss.as.ee.component.InjectionTarget {
  private final java.lang.String className;

  private final java.lang.String name;

  private final java.lang.String declaredValueClassName;

  protected org.jboss.as.ee.component.InjectionTarget(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field className:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field name:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      19: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getClassName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field className:Ljava/lang/String;
       4: areturn

  public java.lang.String getDeclaredValueClassName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
       4: areturn

  public abstract org.jboss.invocation.InterceptorFactory createInjectionInterceptorFactory(java.lang.Object, java.lang.Object, org.jboss.msc.value.Value<org.jboss.as.naming.ManagedReferenceFactory>, org.jboss.as.server.deployment.DeploymentUnit, boolean) throws org.jboss.as.server.deployment.DeploymentUnitProcessingException;

  public abstract boolean isStatic(org.jboss.as.server.deployment.DeploymentUnit) throws org.jboss.as.server.deployment.DeploymentUnitProcessingException;

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #6                  // class org/jboss/as/ee/component/InjectionTarget
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field className:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #2                  // Field className:Ljava/lang/String;
      40: aload_2
      41: getfield      #2                  // Field className:Ljava/lang/String;
      44: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #2                  // Field className:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      66: ifnull        86
      69: aload_0
      70: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      73: aload_2
      74: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      77: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #3                  // Field name:Ljava/lang/String;
      99: ifnull        119
     102: aload_0
     103: getfield      #3                  // Field name:Ljava/lang/String;
     106: aload_2
     107: getfield      #3                  // Field name:Ljava/lang/String;
     110: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifne          128
     116: goto          126
     119: aload_2
     120: getfield      #3                  // Field name:Ljava/lang/String;
     123: ifnull        128
     126: iconst_0
     127: ireturn
     128: iconst_1
     129: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field className:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field className:Ljava/lang/String;
      11: invokevirtual #8                  // Method java/lang/String.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #3                  // Field name:Ljava/lang/String;
      27: ifnull        40
      30: aload_0
      31: getfield      #3                  // Field name:Ljava/lang/String;
      34: invokevirtual #8                  // Method java/lang/String.hashCode:()I
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_1
      43: bipush        31
      45: iload_1
      46: imul
      47: aload_0
      48: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      51: ifnull        64
      54: aload_0
      55: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      58: invokevirtual #8                  // Method java/lang/String.hashCode:()I
      61: goto          65
      64: iconst_0
      65: iadd
      66: istore_1
      67: iload_1
      68: ireturn

  public java.lang.String toString();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: ldc           #10                 // String InjectionTarget[className=
       6: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #2                  // Field className:Ljava/lang/String;
      13: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #13                 // String ,name=
      18: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #3                  // Field name:Ljava/lang/String;
      25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #14                 // String ,declaredValueClassName=
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #4                  // Field declaredValueClassName:Ljava/lang/String;
      37: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #15                 // String ]
      42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: areturn
}
