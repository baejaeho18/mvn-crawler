Compiled from "SecurityDomainResourceDefinition.java"
class org.jboss.as.security.SecurityDomainResourceDefinition extends org.jboss.as.controller.SimpleResourceDefinition {
  public static final org.jboss.as.controller.SimpleAttributeDefinition CACHE_TYPE;

  private final boolean registerRuntimeOnly;

  private final java.util.List<org.jboss.as.controller.access.management.AccessConstraintDefinition> accessConstraints;

  org.jboss.as.security.SecurityDomainResourceDefinition(boolean);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field org/jboss/as/security/SecurityExtension.SECURITY_DOMAIN_PATH:Lorg/jboss/as/controller/PathElement;
       4: ldc           #5                  // String security-domain
       6: invokestatic  #6                  // Method org/jboss/as/security/SecurityExtension.getResourceDescriptionResolver:(Ljava/lang/String;)Lorg/jboss/as/controller/descriptions/StandardResourceDescriptionResolver;
       9: getstatic     #7                  // Field org/jboss/as/security/SecurityDomainAdd.INSTANCE:Lorg/jboss/as/security/SecurityDomainAdd;
      12: new           #8                  // class org/jboss/as/controller/ServiceRemoveStepHandler
      15: dup
      16: getstatic     #9                  // Field org/jboss/as/security/service/SecurityDomainService.SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      19: getstatic     #7                  // Field org/jboss/as/security/SecurityDomainAdd.INSTANCE:Lorg/jboss/as/security/SecurityDomainAdd;
      22: invokespecial #10                 // Method org/jboss/as/controller/ServiceRemoveStepHandler."<init>":(Lorg/jboss/msc/service/ServiceName;Lorg/jboss/as/controller/AbstractAddStepHandler;)V
      25: invokespecial #11                 // Method org/jboss/as/controller/SimpleResourceDefinition."<init>":(Lorg/jboss/as/controller/PathElement;Lorg/jboss/as/controller/descriptions/ResourceDescriptionResolver;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/OperationStepHandler;)V
      28: aload_0
      29: iload_1
      30: putfield      #12                 // Field registerRuntimeOnly:Z
      33: new           #13                 // class org/jboss/as/controller/access/constraint/ApplicationTypeConfig
      36: dup
      37: ldc           #15                 // String security
      39: ldc           #5                  // String security-domain
      41: invokespecial #16                 // Method org/jboss/as/controller/access/constraint/ApplicationTypeConfig."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      44: astore_2
      45: new           #17                 // class org/jboss/as/controller/access/management/ApplicationTypeAccessConstraintDefinition
      48: dup
      49: aload_2
      50: invokespecial #18                 // Method org/jboss/as/controller/access/management/ApplicationTypeAccessConstraintDefinition."<init>":(Lorg/jboss/as/controller/access/constraint/ApplicationTypeConfig;)V
      53: astore_3
      54: aload_0
      55: iconst_2
      56: anewarray     #19                 // class org/jboss/as/controller/access/management/AccessConstraintDefinition
      59: dup
      60: iconst_0
      61: getstatic     #20                 // Field org/jboss/as/controller/access/management/SensitiveTargetAccessConstraintDefinition.SECURITY_DOMAIN:Lorg/jboss/as/controller/access/management/SensitiveTargetAccessConstraintDefinition;
      64: aastore
      65: dup
      66: iconst_1
      67: aload_3
      68: aastore
      69: invokestatic  #21                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      72: putfield      #22                 // Field accessConstraints:Ljava/util/List;
      75: aload_0
      76: getstatic     #23                 // Field org/jboss/as/security/SecurityExtension.DEPRECATED_SINCE:Lorg/jboss/as/controller/ModelVersion;
      79: invokevirtual #24                 // Method setDeprecated:(Lorg/jboss/as/controller/ModelVersion;)V
      82: return

  public void registerAttributes(org.jboss.as.controller.registry.ManagementResourceRegistration);
    Code:
       0: aload_1
       1: getstatic     #25                 // Field CACHE_TYPE:Lorg/jboss/as/controller/SimpleAttributeDefinition;
       4: aconst_null
       5: new           #26                 // class org/jboss/as/security/SecurityDomainReloadWriteHandler
       8: dup
       9: iconst_1
      10: anewarray     #27                 // class org/jboss/as/controller/AttributeDefinition
      13: dup
      14: iconst_0
      15: getstatic     #25                 // Field CACHE_TYPE:Lorg/jboss/as/controller/SimpleAttributeDefinition;
      18: aastore
      19: invokespecial #28                 // Method org/jboss/as/security/SecurityDomainReloadWriteHandler."<init>":([Lorg/jboss/as/controller/AttributeDefinition;)V
      22: invokeinterface #29,  4           // InterfaceMethod org/jboss/as/controller/registry/ManagementResourceRegistration.registerReadWriteAttribute:(Lorg/jboss/as/controller/AttributeDefinition;Lorg/jboss/as/controller/OperationStepHandler;Lorg/jboss/as/controller/OperationStepHandler;)V
      27: return

  public void registerOperations(org.jboss.as.controller.registry.ManagementResourceRegistration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method org/jboss/as/controller/SimpleResourceDefinition.registerOperations:(Lorg/jboss/as/controller/registry/ManagementResourceRegistration;)V
       5: aload_0
       6: getfield      #12                 // Field registerRuntimeOnly:Z
       9: ifeq          36
      12: aload_1
      13: getstatic     #31                 // Field org/jboss/as/security/SecurityDomainResourceDefinition$ListCachePrincipals.DEFINITION:Lorg/jboss/as/controller/SimpleOperationDefinition;
      16: getstatic     #32                 // Field org/jboss/as/security/SecurityDomainResourceDefinition$ListCachePrincipals.INSTANCE:Lorg/jboss/as/security/SecurityDomainResourceDefinition$ListCachePrincipals;
      19: invokeinterface #33,  3           // InterfaceMethod org/jboss/as/controller/registry/ManagementResourceRegistration.registerOperationHandler:(Lorg/jboss/as/controller/OperationDefinition;Lorg/jboss/as/controller/OperationStepHandler;)V
      24: aload_1
      25: getstatic     #34                 // Field org/jboss/as/security/SecurityDomainResourceDefinition$FlushOperation.DEFINITION:Lorg/jboss/as/controller/SimpleOperationDefinition;
      28: getstatic     #35                 // Field org/jboss/as/security/SecurityDomainResourceDefinition$FlushOperation.INSTANCE:Lorg/jboss/as/security/SecurityDomainResourceDefinition$FlushOperation;
      31: invokeinterface #33,  3           // InterfaceMethod org/jboss/as/controller/registry/ManagementResourceRegistration.registerOperationHandler:(Lorg/jboss/as/controller/OperationDefinition;Lorg/jboss/as/controller/OperationStepHandler;)V
      36: return

  public java.util.List<org.jboss.as.controller.access.management.AccessConstraintDefinition> getAccessConstraints();
    Code:
       0: aload_0
       1: getfield      #22                 // Field accessConstraints:Ljava/util/List;
       4: areturn

  public static org.jboss.msc.service.ServiceName getSecurityDomainServiceName(org.jboss.as.controller.PathAddress);
    Code:
       0: aload_0
       1: ldc           #5                  // String security-domain
       3: invokestatic  #36                 // Method org/jboss/as/controller/operations/common/Util.getParentAddressByKey:(Lorg/jboss/as/controller/PathAddress;Ljava/lang/String;)Lorg/jboss/as/controller/PathAddress;
       6: astore_1
       7: aload_1
       8: ifnonnull     20
      11: getstatic     #37                 // Field org/jboss/as/security/logging/SecurityLogger.ROOT_LOGGER:Lorg/jboss/as/security/logging/SecurityLogger;
      14: invokeinterface #38,  1           // InterfaceMethod org/jboss/as/security/logging/SecurityLogger.addressDidNotContainSecurityDomain:()Ljava/lang/IllegalArgumentException;
      19: athrow
      20: getstatic     #9                  // Field org/jboss/as/security/service/SecurityDomainService.SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      23: iconst_1
      24: anewarray     #39                 // class java/lang/String
      27: dup
      28: iconst_0
      29: aload_1
      30: invokevirtual #40                 // Method org/jboss/as/controller/PathAddress.getLastElement:()Lorg/jboss/as/controller/PathElement;
      33: invokevirtual #41                 // Method org/jboss/as/controller/PathElement.getValue:()Ljava/lang/String;
      36: aastore
      37: invokevirtual #42                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      40: areturn

  private static org.jboss.msc.service.ServiceController<org.jboss.as.security.plugins.SecurityDomainContext> getSecurityDomainService(org.jboss.as.controller.OperationContext, java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #43,  2           // InterfaceMethod org/jboss/as/controller/OperationContext.getServiceRegistry:(Z)Lorg/jboss/msc/service/ServiceRegistry;
       7: getstatic     #9                  // Field org/jboss/as/security/service/SecurityDomainService.SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      10: iconst_1
      11: anewarray     #39                 // class java/lang/String
      14: dup
      15: iconst_0
      16: aload_1
      17: aastore
      18: invokevirtual #42                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      21: invokeinterface #44,  2           // InterfaceMethod org/jboss/msc/service/ServiceRegistry.getRequiredService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      26: areturn

  private static void waitForService(org.jboss.msc.service.ServiceController<?>) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: aload_0
       1: invokeinterface #45,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getState:()Lorg/jboss/msc/service/ServiceController$State;
       6: getstatic     #46                 // Field org/jboss/msc/service/ServiceController$State.UP:Lorg/jboss/msc/service/ServiceController$State;
       9: if_acmpne     13
      12: return
      13: new           #47                 // class org/jboss/msc/service/StabilityMonitor
      16: dup
      17: invokespecial #48                 // Method org/jboss/msc/service/StabilityMonitor."<init>":()V
      20: astore_1
      21: aload_1
      22: aload_0
      23: invokevirtual #49                 // Method org/jboss/msc/service/StabilityMonitor.addController:(Lorg/jboss/msc/service/ServiceController;)V
      26: aload_1
      27: ldc2_w        #50                 // long 100l
      30: getstatic     #52                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      33: invokevirtual #53                 // Method org/jboss/msc/service/StabilityMonitor.awaitStability:(JLjava/util/concurrent/TimeUnit;)Z
      36: pop
      37: aload_1
      38: aload_0
      39: invokevirtual #54                 // Method org/jboss/msc/service/StabilityMonitor.removeController:(Lorg/jboss/msc/service/ServiceController;)V
      42: goto          78
      45: astore_2
      46: invokestatic  #56                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      49: invokevirtual #57                 // Method java/lang/Thread.interrupt:()V
      52: getstatic     #37                 // Field org/jboss/as/security/logging/SecurityLogger.ROOT_LOGGER:Lorg/jboss/as/security/logging/SecurityLogger;
      55: aload_0
      56: invokeinterface #58,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getName:()Lorg/jboss/msc/service/ServiceName;
      61: invokevirtual #59                 // Method org/jboss/msc/service/ServiceName.getSimpleName:()Ljava/lang/String;
      64: invokeinterface #60,  2           // InterfaceMethod org/jboss/as/security/logging/SecurityLogger.interruptedWaitingForSecurityDomain:(Ljava/lang/String;)Lorg/jboss/as/controller/OperationFailedException;
      69: athrow
      70: astore_3
      71: aload_1
      72: aload_0
      73: invokevirtual #54                 // Method org/jboss/msc/service/StabilityMonitor.removeController:(Lorg/jboss/msc/service/ServiceController;)V
      76: aload_3
      77: athrow
      78: aload_0
      79: invokeinterface #45,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getState:()Lorg/jboss/msc/service/ServiceController$State;
      84: getstatic     #46                 // Field org/jboss/msc/service/ServiceController$State.UP:Lorg/jboss/msc/service/ServiceController$State;
      87: if_acmpeq     108
      90: getstatic     #37                 // Field org/jboss/as/security/logging/SecurityLogger.ROOT_LOGGER:Lorg/jboss/as/security/logging/SecurityLogger;
      93: aload_0
      94: invokeinterface #58,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getName:()Lorg/jboss/msc/service/ServiceName;
      99: invokevirtual #59                 // Method org/jboss/msc/service/ServiceName.getSimpleName:()Ljava/lang/String;
     102: invokeinterface #61,  2           // InterfaceMethod org/jboss/as/security/logging/SecurityLogger.requiredSecurityDomainServiceNotAvailable:(Ljava/lang/String;)Lorg/jboss/as/controller/OperationFailedException;
     107: athrow
     108: return
    Exception table:
       from    to  target type
          26    37    45   Class java/lang/InterruptedException
          26    37    70   any
          45    71    70   any

  static org.jboss.msc.service.ServiceController access$000(org.jboss.as.controller.OperationContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method getSecurityDomainService:(Lorg/jboss/as/controller/OperationContext;Ljava/lang/String;)Lorg/jboss/msc/service/ServiceController;
       5: areturn

  static void access$100(org.jboss.msc.service.ServiceController) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method waitForService:(Lorg/jboss/msc/service/ServiceController;)V
       4: return

  static {};
    Code:
       0: new           #62                 // class org/jboss/as/controller/SimpleAttributeDefinitionBuilder
       3: dup
       4: ldc           #63                 // String cache-type
       6: getstatic     #64                 // Field org/jboss/dmr/ModelType.STRING:Lorg/jboss/dmr/ModelType;
       9: iconst_1
      10: invokespecial #65                 // Method org/jboss/as/controller/SimpleAttributeDefinitionBuilder."<init>":(Ljava/lang/String;Lorg/jboss/dmr/ModelType;Z)V
      13: iconst_1
      14: invokevirtual #66                 // Method org/jboss/as/controller/SimpleAttributeDefinitionBuilder.setAllowExpression:(Z)Lorg/jboss/as/controller/AbstractAttributeDefinitionBuilder;
      17: checkcast     #62                 // class org/jboss/as/controller/SimpleAttributeDefinitionBuilder
      20: iconst_2
      21: anewarray     #39                 // class java/lang/String
      24: dup
      25: iconst_0
      26: ldc           #67                 // String default
      28: aastore
      29: dup
      30: iconst_1
      31: ldc           #68                 // String infinispan
      33: aastore
      34: invokevirtual #69                 // Method org/jboss/as/controller/SimpleAttributeDefinitionBuilder.setAllowedValues:([Ljava/lang/String;)Lorg/jboss/as/controller/AbstractAttributeDefinitionBuilder;
      37: checkcast     #62                 // class org/jboss/as/controller/SimpleAttributeDefinitionBuilder
      40: invokevirtual #70                 // Method org/jboss/as/controller/SimpleAttributeDefinitionBuilder.build:()Lorg/jboss/as/controller/SimpleAttributeDefinition;
      43: putstatic     #25                 // Field CACHE_TYPE:Lorg/jboss/as/controller/SimpleAttributeDefinition;
      46: return
}
