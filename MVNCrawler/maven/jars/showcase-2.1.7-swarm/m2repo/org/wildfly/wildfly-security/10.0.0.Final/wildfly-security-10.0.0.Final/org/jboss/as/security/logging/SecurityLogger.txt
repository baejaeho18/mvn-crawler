Compiled from "SecurityLogger.java"
public interface org.jboss.as.security.logging.SecurityLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.security.logging.SecurityLogger ROOT_LOGGER;

  public abstract void currentVersion(java.lang.String);

  public abstract void activatingSecuritySubsystem();

  public abstract void errorDeletingJACCPolicy(java.lang.Throwable);

  public abstract java.lang.IllegalStateException unableToGetModuleClassLoader(java.lang.Throwable);

  public abstract javax.naming.OperationNotSupportedException operationNotSupported(java.lang.reflect.Method);

  public abstract java.lang.IllegalArgumentException missingModuleName(java.lang.String);

  public abstract java.lang.RuntimeException runtimeException(java.lang.Throwable);

  public abstract org.jboss.modules.ModuleLoadException moduleLoadException(java.lang.Throwable);

  public abstract javax.naming.InvalidNameException nullName();

  public abstract javax.security.auth.login.LoginException remotingConnectionWithNoUserPrincipal();

  public abstract java.lang.IllegalArgumentException nullArgument(java.lang.String);

  public abstract org.jboss.msc.service.StartException unableToStartException(java.lang.String, java.lang.Throwable);

  public abstract java.lang.ClassNotFoundException cnfe(java.lang.String);

  public abstract java.lang.ClassNotFoundException cnfeThrow(java.lang.String, java.lang.Throwable);

  public abstract java.lang.SecurityException securityException(java.lang.Throwable);

  public abstract java.lang.SecurityException securityException(java.lang.String);

  public abstract org.jboss.as.server.services.security.VaultReaderException vaultReaderException(java.lang.Throwable);

  public abstract java.lang.UnsupportedOperationException unsupportedOperationExceptionUseResourceDesc();

  public abstract java.lang.UnsupportedOperationException unsupportedOperation();

  public abstract java.lang.IllegalArgumentException illegalArgument(java.lang.String);

  public abstract javax.xml.stream.XMLStreamException xmlStreamException(java.lang.String, javax.xml.stream.Location);

  public abstract javax.xml.stream.XMLStreamException xmlStreamExceptionAuth(javax.xml.stream.Location);

  public abstract javax.xml.stream.XMLStreamException xmlStreamExceptionMissingAttribute(java.lang.String, java.lang.String, javax.xml.stream.Location);

  public abstract java.lang.IllegalArgumentException loginModuleStackIllegalArgument(java.lang.String);

  public abstract java.lang.IllegalArgumentException addressDidNotContainSecurityDomain();

  public abstract java.lang.SecurityException vaultNotInitializedException();

  public abstract java.lang.SecurityException invalidUserException();

  public abstract java.lang.SecurityException securityManagementNotInjected();

  public abstract java.lang.SecurityException realmNotFound(java.lang.String);

  public abstract javax.security.auth.login.LoginException failureCallingSecurityRealm(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException noAuthenticationCacheAvailable(java.lang.String);

  public abstract java.lang.IllegalStateException noUserPrincipalFound();

  public abstract org.jboss.as.controller.OperationFailedException interruptedWaitingForSecurityDomain(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException requiredSecurityDomainServiceNotAvailable(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException requiredJSSEConfigurationAttribute();

  public abstract java.lang.Exception keyStoreDoesnotExistWithExample(java.lang.String, java.lang.String);

  public abstract java.lang.Exception keyStoreNotWritable(java.lang.String);

  public abstract java.lang.Exception keyStorePasswordNotSpecified();

  public abstract java.lang.Exception encryptionDirectoryHasToBeSpecified();

  public abstract java.lang.Exception encryptionDirectoryDoesNotExist(java.lang.String);

  public abstract java.lang.Exception cannotCreateEncryptionDirectory(java.lang.String);

  public abstract java.lang.Exception iterationCountOutOfRange(java.lang.String);

  public abstract java.lang.Exception saltWrongLength();

  public abstract java.lang.Exception securityVaultException(org.jboss.security.vault.SecurityVaultException);

  public abstract java.lang.Exception vaultAliasNotSpecified();

  public abstract java.lang.String vaultAttributeCreateDisplay(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String vaultConfigurationTitle();

  public abstract java.lang.String noConsole();

  public abstract java.lang.String enterEncryptionDirectory();

  public abstract java.lang.String enterKeyStoreURL();

  public abstract java.lang.String enterKeyStorePassword();

  public abstract java.lang.String enterSalt();

  public abstract java.lang.String enterIterationCount();

  public abstract java.lang.String enterKeyStoreAlias();

  public abstract java.lang.String initializingVault();

  public abstract java.lang.String vaultInitialized();

  public abstract java.lang.String handshakeComplete();

  public abstract java.lang.String exceptionEncountered();

  public abstract java.lang.String enterYourPassword();

  public abstract java.lang.String passwordAgain();

  public abstract java.lang.String passwordsDoNotMatch();

  public abstract java.lang.String passwordsMatch();

  public abstract java.lang.String problemOcurred();

  public abstract java.lang.String interactiveCommandString();

  public abstract java.lang.String startingInteractiveSession();

  public abstract java.lang.String removingInteractiveSession();

  public abstract java.lang.String problemParsingCommandLineParameters();

  public abstract java.lang.String cmdLineKeyStoreURL();

  public abstract java.lang.String cmdLineKeyStorePassword();

  public abstract java.lang.String cmdLineEncryptionDirectory();

  public abstract java.lang.String cmdLineSalt();

  public abstract java.lang.String cmdLineIterationCount();

  public abstract java.lang.String cmdLineVaultKeyStoreAlias();

  public abstract java.lang.String cmdLineVaultBlock();

  public abstract java.lang.String cmdLineAttributeName();

  public abstract java.lang.String cmdLineSecuredAttribute();

  public abstract java.lang.String cmdLineCheckAttribute();

  public abstract java.lang.String cmdLineHelp();

  public abstract java.lang.String cmdLineSecuredAttributeAlreadyExists();

  public abstract java.lang.String cmdLineSecuredAttributeDoesNotExist();

  public abstract java.lang.String enterYourPasswordAgain();

  public abstract java.lang.String enterKeyStorePasswordAgain();

  public abstract java.lang.IllegalArgumentException incorrectKeystoreParameters(java.lang.String);

  public abstract java.lang.String cmdLineRemoveSecuredAttribute();

  public abstract java.lang.String cmdLineAutomaticallyCreateKeystore();

  public abstract java.lang.String messageAttributeRemovedSuccessfuly(java.lang.String);

  public abstract java.lang.String messageAttributeNotRemoved(java.lang.String);

  public abstract java.lang.String interactionCommandOptions();

  public abstract java.lang.String taskStoreSecuredAttribute();

  public abstract java.lang.String interactivePromptSecureAttributeValue();

  public abstract java.lang.String interactivePromptSecureAttributeValueAgain();

  public abstract java.lang.String interactivePromptVaultBlock();

  public abstract java.lang.String interactivePromptAttributeName();

  public abstract java.lang.String taskVerifySecuredAttributeExists();

  public abstract java.lang.String interactiveMessageNoValueStored(java.lang.String);

  public abstract java.lang.String interactiveMessageValueStored(java.lang.String);

  public abstract java.lang.String taskRemoveSecuredAttribute();

  public abstract java.lang.String actionNotSpecified();

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/security/logging/SecurityLogger
       2: ldc           #2                  // String org.jboss.as.security
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/security/logging/SecurityLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/security/logging/SecurityLogger;
      13: return
}
