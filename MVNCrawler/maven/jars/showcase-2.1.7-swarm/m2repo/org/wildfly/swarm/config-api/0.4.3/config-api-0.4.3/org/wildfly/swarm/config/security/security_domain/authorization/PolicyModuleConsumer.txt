Compiled from "PolicyModuleConsumer.java"
public interface org.wildfly.swarm.config.security.security_domain.authorization.PolicyModuleConsumer<T extends org.wildfly.swarm.config.security.security_domain.authorization.PolicyModule<T>> {
  public abstract void accept(T);

  public default org.wildfly.swarm.config.security.security_domain.authorization.PolicyModuleConsumer<T> andThen(org.wildfly.swarm.config.security.security_domain.authorization.PolicyModuleConsumer<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:accept:(Lorg/wildfly/swarm/config/security/security_domain/authorization/PolicyModuleConsumer;Lorg/wildfly/swarm/config/security/security_domain/authorization/PolicyModuleConsumer;)Lorg/wildfly/swarm/config/security/security_domain/authorization/PolicyModuleConsumer;
       7: areturn

  private void lambda$andThen$398(org.wildfly.swarm.config.security.security_domain.authorization.PolicyModuleConsumer, org.wildfly.swarm.config.security.security_domain.authorization.PolicyModule);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #2,  2            // InterfaceMethod accept:(Lorg/wildfly/swarm/config/security/security_domain/authorization/PolicyModule;)V
       7: aload_1
       8: aload_2
       9: invokeinterface #2,  2            // InterfaceMethod accept:(Lorg/wildfly/swarm/config/security/security_domain/authorization/PolicyModule;)V
      14: return
}
