Compiled from "Workmanager.java"
public class org.wildfly.swarm.config.jca.Workmanager$WorkmanagerResources {
  private java.util.List<org.wildfly.swarm.config.jca.LongRunningThreads> longRunningThreads;

  private java.util.List<org.wildfly.swarm.config.jca.ShortRunningThreads> shortRunningThreads;

  public org.wildfly.swarm.config.jca.Workmanager$WorkmanagerResources();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #2                  // Field longRunningThreads:Ljava/util/List;
      15: aload_0
      16: new           #4                  // class java/util/ArrayList
      19: dup
      20: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #1                  // Field shortRunningThreads:Ljava/util/List;
      26: return

  public java.util.List<org.wildfly.swarm.config.jca.LongRunningThreads> longRunningThreads();
    Code:
       0: aload_0
       1: getfield      #2                  // Field longRunningThreads:Ljava/util/List;
       4: areturn

  public org.wildfly.swarm.config.jca.LongRunningThreads longRunningThreads(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field longRunningThreads:Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #7,  0              // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      15: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: invokeinterface #9,  1            // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      25: aconst_null
      26: invokevirtual #10                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #11                 // class org/wildfly/swarm/config/jca/LongRunningThreads
      32: areturn

  public java.util.List<org.wildfly.swarm.config.jca.ShortRunningThreads> shortRunningThreads();
    Code:
       0: aload_0
       1: getfield      #1                  // Field shortRunningThreads:Ljava/util/List;
       4: areturn

  public org.wildfly.swarm.config.jca.ShortRunningThreads shortRunningThreads(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field shortRunningThreads:Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #12,  0             // InvokeDynamic #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      15: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: invokeinterface #9,  1            // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      25: aconst_null
      26: invokevirtual #10                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #13                 // class org/wildfly/swarm/config/jca/ShortRunningThreads
      32: areturn

  private static boolean lambda$shortRunningThreads$279(java.lang.String, org.wildfly.swarm.config.jca.ShortRunningThreads);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/wildfly/swarm/config/jca/ShortRunningThreads.getKey:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static boolean lambda$longRunningThreads$278(java.lang.String, org.wildfly.swarm.config.jca.LongRunningThreads);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/wildfly/swarm/config/jca/LongRunningThreads.getKey:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  static java.util.List access$002(org.wildfly.swarm.config.jca.Workmanager$WorkmanagerResources, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field longRunningThreads:Ljava/util/List;
       6: areturn

  static java.util.List access$000(org.wildfly.swarm.config.jca.Workmanager$WorkmanagerResources);
    Code:
       0: aload_0
       1: getfield      #2                  // Field longRunningThreads:Ljava/util/List;
       4: areturn

  static java.util.List access$102(org.wildfly.swarm.config.jca.Workmanager$WorkmanagerResources, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field shortRunningThreads:Ljava/util/List;
       6: areturn

  static java.util.List access$100(org.wildfly.swarm.config.jca.Workmanager$WorkmanagerResources);
    Code:
       0: aload_0
       1: getfield      #1                  // Field shortRunningThreads:Ljava/util/List;
       4: areturn
}
