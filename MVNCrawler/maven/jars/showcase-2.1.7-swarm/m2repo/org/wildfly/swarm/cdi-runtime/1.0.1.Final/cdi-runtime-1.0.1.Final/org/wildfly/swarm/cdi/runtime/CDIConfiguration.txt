Compiled from "CDIConfiguration.java"
public class org.wildfly.swarm.cdi.runtime.CDIConfiguration extends org.wildfly.swarm.spi.runtime.MarshallingServerConfiguration<org.wildfly.swarm.cdi.CDIFraction> {
  public static final java.lang.String VERSION;

  public org.wildfly.swarm.cdi.runtime.CDIConfiguration();
    Code:
       0: aload_0
       1: ldc           #1                  // class org/wildfly/swarm/cdi/CDIFraction
       3: ldc           #2                  // String org.jboss.as.weld
       5: invokespecial #3                  // Method org/wildfly/swarm/spi/runtime/MarshallingServerConfiguration."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
       8: return

  public void prepareArchive(org.jboss.shrinkwrap.api.Archive<?>);
    Code:
       0: aload_1
       1: ldc           #4                  // class org/wildfly/swarm/spi/api/JARArchive
       3: invokeinterface #5,  2            // InterfaceMethod org/jboss/shrinkwrap/api/Archive.as:(Ljava/lang/Class;)Lorg/jboss/shrinkwrap/api/Assignable;
       8: checkcast     #4                  // class org/wildfly/swarm/spi/api/JARArchive
      11: ldc           #6                  // String org.wildfly.swarm.cdi
      13: ldc           #7                  // String ext
      15: invokeinterface #8,  3            // InterfaceMethod org/wildfly/swarm/spi/api/JARArchive.addModule:(Ljava/lang/String;Ljava/lang/String;)Lorg/wildfly/swarm/spi/api/Module;
      20: astore_2
      21: aload_2
      22: iconst_0
      23: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: invokevirtual #10                 // Method org/wildfly/swarm/spi/api/Module.withExport:(Ljava/lang/Boolean;)Lorg/wildfly/swarm/spi/api/Module;
      29: pop
      30: aload_2
      31: ldc           #11                 // String import
      33: invokevirtual #12                 // Method org/wildfly/swarm/spi/api/Module.withMetaInf:(Ljava/lang/String;)Lorg/wildfly/swarm/spi/api/Module;
      36: pop
      37: return

  public java.util.Optional<java.util.Map<javax.xml.namespace.QName, org.jboss.staxmapper.XMLElementReader<java.util.List<org.jboss.dmr.ModelNode>>>> getSubsystemParsers() throws java.lang.Exception;
    Code:
       0: new           #13                 // class org/wildfly/swarm/cdi/runtime/ParserFactory
       3: dup
       4: invokespecial #14                 // Method org/wildfly/swarm/cdi/runtime/ParserFactory."<init>":()V
       7: invokestatic  #15                 // Method org/wildfly/swarm/spi/runtime/AbstractParserFactory.mapParserNamespaces:(Lorg/wildfly/swarm/spi/runtime/AbstractParserFactory;)Ljava/util/Optional;
      10: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/wildfly/swarm/cdi/CDIFraction
       2: invokevirtual #16                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: ldc           #17                 // String cdi-fraction.properties
       7: invokevirtual #18                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      10: astore_0
      11: new           #19                 // class java/util/Properties
      14: dup
      15: invokespecial #20                 // Method java/util/Properties."<init>":()V
      18: astore_1
      19: aload_1
      20: aload_0
      21: invokevirtual #21                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      24: goto          32
      27: astore_2
      28: aload_2
      29: invokevirtual #23                 // Method java/io/IOException.printStackTrace:()V
      32: aload_1
      33: ldc           #24                 // String version
      35: ldc           #25                 // String unknown
      37: invokevirtual #26                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      40: putstatic     #27                 // Field VERSION:Ljava/lang/String;
      43: return
    Exception table:
       from    to  target type
          19    24    27   Class java/io/IOException
}
