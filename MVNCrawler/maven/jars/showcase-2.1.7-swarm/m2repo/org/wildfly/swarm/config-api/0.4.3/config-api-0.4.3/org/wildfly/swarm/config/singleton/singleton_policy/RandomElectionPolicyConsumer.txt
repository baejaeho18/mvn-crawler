Compiled from "RandomElectionPolicyConsumer.java"
public interface org.wildfly.swarm.config.singleton.singleton_policy.RandomElectionPolicyConsumer<T extends org.wildfly.swarm.config.singleton.singleton_policy.RandomElectionPolicy<T>> {
  public abstract void accept(T);

  public default org.wildfly.swarm.config.singleton.singleton_policy.RandomElectionPolicyConsumer<T> andThen(org.wildfly.swarm.config.singleton.singleton_policy.RandomElectionPolicyConsumer<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:accept:(Lorg/wildfly/swarm/config/singleton/singleton_policy/RandomElectionPolicyConsumer;Lorg/wildfly/swarm/config/singleton/singleton_policy/RandomElectionPolicyConsumer;)Lorg/wildfly/swarm/config/singleton/singleton_policy/RandomElectionPolicyConsumer;
       7: areturn

  private void lambda$andThen$441(org.wildfly.swarm.config.singleton.singleton_policy.RandomElectionPolicyConsumer, org.wildfly.swarm.config.singleton.singleton_policy.RandomElectionPolicy);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #2,  2            // InterfaceMethod accept:(Lorg/wildfly/swarm/config/singleton/singleton_policy/RandomElectionPolicy;)V
       7: aload_1
       8: aload_2
       9: invokeinterface #2,  2            // InterfaceMethod accept:(Lorg/wildfly/swarm/config/singleton/singleton_policy/RandomElectionPolicy;)V
      14: return
}
