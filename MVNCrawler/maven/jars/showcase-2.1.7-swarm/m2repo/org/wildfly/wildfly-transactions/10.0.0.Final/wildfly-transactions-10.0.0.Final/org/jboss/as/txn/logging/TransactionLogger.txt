Compiled from "TransactionLogger.java"
public interface org.jboss.as.txn.logging.TransactionLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.txn.logging.TransactionLogger ROOT_LOGGER;

  public abstract void unableToRollBack(java.lang.Throwable);

  public abstract void unableToGetTransactionStatus(java.lang.Throwable);

  public abstract void transactionStillOpen(int);

  public abstract org.jboss.msc.service.StartException createFailed(java.lang.Throwable);

  public abstract org.jboss.msc.service.StartException managerStartFailure(java.lang.Throwable, java.lang.String);

  public abstract org.jboss.msc.service.StartException objectStoreStartFailure(java.lang.Throwable);

  public abstract java.lang.IllegalStateException serviceNotStarted();

  public abstract org.jboss.msc.service.StartException startFailure(java.lang.Throwable);

  public abstract java.lang.String unknownMetric(java.lang.Object);

  public abstract java.lang.RuntimeException jmxSubsystemNotInstalled();

  public abstract java.lang.String transformJournalStoreEnableAsyncIoMustBeTrue();

  public abstract org.jboss.as.controller.OperationFailedException inconsistentStatisticsSettings(java.lang.String, java.lang.String);

  public abstract void nodeIdentifierIsSetToDefault();

  public abstract org.jboss.as.controller.OperationFailedException jndiNameRequired();

  public abstract org.jboss.as.controller.OperationFailedException jndiNameInvalidFormat();

  public abstract void rollbackOfTransactionStartedInEEConcurrentInvocation();

  public abstract void failedToRollbackTransaction(java.lang.Throwable);

  public abstract void failedToSuspendTransaction(java.lang.Throwable);

  public abstract void systemErrorWhileCheckingForTransactionLeak(java.lang.Throwable);

  public abstract java.io.IOException serializationMustBeHandledByTheFactory();

  public abstract java.lang.IllegalStateException transactionSetupProviderServiceNotStarted();

  public abstract java.lang.IllegalStateException transactionSetupProviderServiceNotInstalled();

  public abstract org.jboss.as.controller.OperationFailedException mustBeUndefinedIfTrue(java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException mustBedefinedIfDefined(java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException eitherTrueOrDefined(java.lang.String, java.lang.String);

  public abstract void transactionNotFound(javax.transaction.Transaction);

  public abstract void preJcaSyncAfterCompletionFailed(javax.transaction.Synchronization, javax.transaction.Transaction, java.lang.Exception);

  public abstract void jcaSyncAfterCompletionFailed(javax.transaction.Synchronization, javax.transaction.Transaction, java.lang.Exception);

  public abstract java.lang.IllegalStateException syncsnotallowed(int);

  public abstract java.lang.IllegalStateException indexedChildResourceRegistrationNotAvailable(org.jboss.as.controller.PathElement);

  public abstract javax.xml.stream.XMLStreamException unsupportedAttribute(java.lang.String, javax.xml.stream.Location);

  public abstract org.jboss.as.controller.OperationFailedException mustBeDefinedIfTrue(java.lang.String, java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException onlyOneCanBeTrue(java.lang.String, java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/txn/logging/TransactionLogger
       2: ldc           #2                  // String org.jboss.as.txn
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/txn/logging/TransactionLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/txn/logging/TransactionLogger;
      13: return
}
