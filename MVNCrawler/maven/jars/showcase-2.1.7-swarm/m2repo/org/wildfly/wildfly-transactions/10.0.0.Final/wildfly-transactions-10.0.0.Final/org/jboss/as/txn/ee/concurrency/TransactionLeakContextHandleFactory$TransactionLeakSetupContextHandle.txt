Compiled from "TransactionLeakContextHandleFactory.java"
class org.jboss.as.txn.ee.concurrency.TransactionLeakContextHandleFactory$TransactionLeakSetupContextHandle implements org.jboss.as.ee.concurrent.handle.SetupContextHandle {
  private final javax.transaction.TransactionManager transactionManager;

  private org.jboss.as.txn.ee.concurrency.TransactionLeakContextHandleFactory$TransactionLeakSetupContextHandle(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
       9: return

  public org.jboss.as.ee.concurrent.handle.ResetContextHandle setup() throws java.lang.IllegalStateException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
       6: ifnull        32
       9: aload_0
      10: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      13: invokeinterface #5,  1            // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      18: astore_1
      19: goto          32
      22: astore_2
      23: new           #7                  // class java/lang/IllegalStateException
      26: dup
      27: aload_2
      28: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
      32: new           #9                  // class org/jboss/as/txn/ee/concurrency/TransactionLeakContextHandleFactory$TransactionLeakResetContextHandle
      35: dup
      36: aload_0
      37: getfield      #4                  // Field transactionManager:Ljavax/transaction/TransactionManager;
      40: aload_1
      41: aconst_null
      42: invokespecial #10                 // Method org/jboss/as/txn/ee/concurrency/TransactionLeakContextHandleFactory$TransactionLeakResetContextHandle."<init>":(Ljavax/transaction/TransactionManager;Ljavax/transaction/Transaction;Lorg/jboss/as/txn/ee/concurrency/TransactionLeakContextHandleFactory$1;)V
      45: areturn
    Exception table:
       from    to  target type
           9    19    22   Class javax/transaction/SystemException

  public java.lang.String getFactoryName();
    Code:
       0: ldc           #11                 // String TRANSACTION_LEAK
       2: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: getstatic     #12                 // Field org/jboss/as/txn/logging/TransactionLogger.ROOT_LOGGER:Lorg/jboss/as/txn/logging/TransactionLogger;
       3: invokeinterface #13,  1           // InterfaceMethod org/jboss/as/txn/logging/TransactionLogger.serializationMustBeHandledByTheFactory:()Ljava/io/IOException;
       8: athrow

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: getstatic     #12                 // Field org/jboss/as/txn/logging/TransactionLogger.ROOT_LOGGER:Lorg/jboss/as/txn/logging/TransactionLogger;
       3: invokeinterface #13,  1           // InterfaceMethod org/jboss/as/txn/logging/TransactionLogger.serializationMustBeHandledByTheFactory:()Ljava/io/IOException;
       8: athrow

  org.jboss.as.txn.ee.concurrency.TransactionLeakContextHandleFactory$TransactionLeakSetupContextHandle(javax.transaction.TransactionManager, org.jboss.as.txn.ee.concurrency.TransactionLeakContextHandleFactory$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Ljavax/transaction/TransactionManager;)V
       5: return
}
