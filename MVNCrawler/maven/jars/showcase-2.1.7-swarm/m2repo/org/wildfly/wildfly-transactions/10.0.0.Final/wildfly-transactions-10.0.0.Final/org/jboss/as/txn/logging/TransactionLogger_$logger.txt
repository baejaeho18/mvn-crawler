Compiled from "TransactionLogger_$logger.java"
public class org.jboss.as.txn.logging.TransactionLogger_$logger extends org.jboss.logging.DelegatingBasicLogger implements org.jboss.as.txn.logging.TransactionLogger,org.jboss.logging.BasicLogger,java.io.Serializable {
  private static final long serialVersionUID;

  private static final java.lang.String FQCN;

  private static final java.lang.String unableToRollBack;

  private static final java.lang.String unableToGetTransactionStatus;

  private static final java.lang.String transactionStillOpen;

  private static final java.lang.String createFailed;

  private static final java.lang.String managerStartFailure;

  private static final java.lang.String objectStoreStartFailure;

  private static final java.lang.String serviceNotStarted;

  private static final java.lang.String startFailure;

  private static final java.lang.String unknownMetric;

  private static final java.lang.String jmxSubsystemNotInstalled;

  private static final java.lang.String transformJournalStoreEnableAsyncIoMustBeTrue;

  private static final java.lang.String inconsistentStatisticsSettings;

  private static final java.lang.String nodeIdentifierIsSetToDefault;

  private static final java.lang.String jndiNameRequired;

  private static final java.lang.String jndiNameInvalidFormat;

  private static final java.lang.String rollbackOfTransactionStartedInEEConcurrentInvocation;

  private static final java.lang.String failedToRollbackTransaction;

  private static final java.lang.String failedToSuspendTransaction;

  private static final java.lang.String systemErrorWhileCheckingForTransactionLeak;

  private static final java.lang.String serializationMustBeHandledByTheFactory;

  private static final java.lang.String transactionSetupProviderServiceNotStarted;

  private static final java.lang.String transactionSetupProviderServiceNotInstalled;

  private static final java.lang.String mustBeUndefinedIfTrue;

  private static final java.lang.String mustBedefinedIfDefined;

  private static final java.lang.String eitherTrueOrDefined;

  private static final java.lang.String transactionNotFound;

  private static final java.lang.String preJcaSyncAfterCompletionFailed;

  private static final java.lang.String jcaSyncAfterCompletionFailed;

  private static final java.lang.String syncsnotallowed;

  private static final java.lang.String indexedChildResourceRegistrationNotAvailable;

  private static final java.lang.String unsupportedAttribute;

  private static final java.lang.String mustBeDefinedIfTrue;

  private static final java.lang.String onlyOneCanBeTrue;

  public org.jboss.as.txn.logging.TransactionLogger_$logger(org.jboss.logging.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/DelegatingBasicLogger."<init>":(Lorg/jboss/logging/Logger;)V
       5: return

  public final void unableToRollBack(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #5                  // Method unableToRollBack$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #7                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String unableToRollBack$str();
    Code:
       0: ldc           #9                  // String WFLYTX0001: Unable to roll back active transaction
       2: areturn

  public final void unableToGetTransactionStatus(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #10                 // Method unableToGetTransactionStatus$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #7                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String unableToGetTransactionStatus$str();
    Code:
       0: ldc           #11                 // String WFLYTX0002: Unable to get transaction state
       2: areturn

  public final void transactionStillOpen(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #12                 // Method transactionStillOpen$str:()Ljava/lang/String;
      15: iload_1
      16: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokevirtual #14                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  protected java.lang.String transactionStillOpen$str();
    Code:
       0: ldc           #15                 // String WFLYTX0003: APPLICATION ERROR: transaction still active in request with status %s
       2: areturn

  protected java.lang.String createFailed$str();
    Code:
       0: ldc           #16                 // String WFLYTX0004: Create failed
       2: areturn

  public final org.jboss.msc.service.StartException createFailed(java.lang.Throwable);
    Code:
       0: new           #17                 // class org/jboss/msc/service/StartException
       3: dup
       4: aload_0
       5: invokevirtual #18                 // Method createFailed$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: aload_1
      16: invokespecial #20                 // Method org/jboss/msc/service/StartException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #21                 // Method org/jboss/msc/service/StartException.getStackTrace:()[Ljava/lang/StackTraceElement;
      24: astore_3
      25: aload_2
      26: aload_3
      27: iconst_1
      28: aload_3
      29: arraylength
      30: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      33: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      36: invokevirtual #24                 // Method org/jboss/msc/service/StartException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      39: aload_2
      40: areturn

  protected java.lang.String managerStartFailure$str();
    Code:
       0: ldc           #25                 // String WFLYTX0005: %s manager create failed
       2: areturn

  public final org.jboss.msc.service.StartException managerStartFailure(java.lang.Throwable, java.lang.String);
    Code:
       0: new           #17                 // class org/jboss/msc/service/StartException
       3: dup
       4: aload_0
       5: invokevirtual #26                 // Method managerStartFailure$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_2
      15: aastore
      16: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: aload_1
      20: invokespecial #20                 // Method org/jboss/msc/service/StartException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: astore_3
      24: aload_3
      25: invokevirtual #21                 // Method org/jboss/msc/service/StartException.getStackTrace:()[Ljava/lang/StackTraceElement;
      28: astore        4
      30: aload_3
      31: aload         4
      33: iconst_1
      34: aload         4
      36: arraylength
      37: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      40: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      43: invokevirtual #24                 // Method org/jboss/msc/service/StartException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      46: aload_3
      47: areturn

  protected java.lang.String objectStoreStartFailure$str();
    Code:
       0: ldc           #27                 // String WFLYTX0006: Failed to configure object store browser bean
       2: areturn

  public final org.jboss.msc.service.StartException objectStoreStartFailure(java.lang.Throwable);
    Code:
       0: new           #17                 // class org/jboss/msc/service/StartException
       3: dup
       4: aload_0
       5: invokevirtual #28                 // Method objectStoreStartFailure$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: aload_1
      16: invokespecial #20                 // Method org/jboss/msc/service/StartException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #21                 // Method org/jboss/msc/service/StartException.getStackTrace:()[Ljava/lang/StackTraceElement;
      24: astore_3
      25: aload_2
      26: aload_3
      27: iconst_1
      28: aload_3
      29: arraylength
      30: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      33: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      36: invokevirtual #24                 // Method org/jboss/msc/service/StartException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      39: aload_2
      40: areturn

  protected java.lang.String serviceNotStarted$str();
    Code:
       0: ldc           #29                 // String WFLYTX0007: Service not started
       2: areturn

  public final java.lang.IllegalStateException serviceNotStarted();
    Code:
       0: new           #30                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #31                 // Method serviceNotStarted$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #33                 // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #34                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String startFailure$str();
    Code:
       0: ldc           #35                 // String WFLYTX0008: Start failed
       2: areturn

  public final org.jboss.msc.service.StartException startFailure(java.lang.Throwable);
    Code:
       0: new           #17                 // class org/jboss/msc/service/StartException
       3: dup
       4: aload_0
       5: invokevirtual #36                 // Method startFailure$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: aload_1
      16: invokespecial #20                 // Method org/jboss/msc/service/StartException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #21                 // Method org/jboss/msc/service/StartException.getStackTrace:()[Ljava/lang/StackTraceElement;
      24: astore_3
      25: aload_2
      26: aload_3
      27: iconst_1
      28: aload_3
      29: arraylength
      30: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      33: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      36: invokevirtual #24                 // Method org/jboss/msc/service/StartException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      39: aload_2
      40: areturn

  protected java.lang.String unknownMetric$str();
    Code:
       0: ldc           #37                 // String WFLYTX0009: Unknown metric %s
       2: areturn

  public final java.lang.String unknownMetric(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method unknownMetric$str:()Ljava/lang/String;
       4: iconst_1
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String jmxSubsystemNotInstalled$str();
    Code:
       0: ldc           #39                 // String WFLYTX0010: MBean Server service not installed, this functionality is not available if the JMX subsystem has not been installed.
       2: areturn

  public final java.lang.RuntimeException jmxSubsystemNotInstalled();
    Code:
       0: new           #40                 // class java/lang/RuntimeException
       3: dup
       4: aload_0
       5: invokevirtual #41                 // Method jmxSubsystemNotInstalled$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #42                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #43                 // Method java/lang/RuntimeException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #44                 // Method java/lang/RuntimeException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String transformJournalStoreEnableAsyncIoMustBeTrue$str();
    Code:
       0: ldc           #45                 // String WFLYTX0011: \'journal-store-enable-async-io\' must be true.
       2: areturn

  public final java.lang.String transformJournalStoreEnableAsyncIoMustBeTrue();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method transformJournalStoreEnableAsyncIoMustBeTrue$str:()Ljava/lang/String;
       4: iconst_0
       5: anewarray     #6                  // class java/lang/Object
       8: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      11: areturn

  protected java.lang.String inconsistentStatisticsSettings$str();
    Code:
       0: ldc           #47                 // String WFLYTX0012: Attributes %s and %s are alternatives; both cannot be set with conflicting values.
       2: areturn

  public final org.jboss.as.controller.OperationFailedException inconsistentStatisticsSettings(java.lang.String, java.lang.String);
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #49                 // Method inconsistentStatisticsSettings$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  public final void nodeIdentifierIsSetToDefault();
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #54                 // Method nodeIdentifierIsSetToDefault$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #7                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String nodeIdentifierIsSetToDefault$str();
    Code:
       0: ldc           #55                 // String WFLYTX0013: Node identifier property is set to the default value. Please make sure it is unique.
       2: areturn

  protected java.lang.String jndiNameRequired$str();
    Code:
       0: ldc           #56                 // String WFLYTX0014: Jndi name is required
       2: areturn

  public final org.jboss.as.controller.OperationFailedException jndiNameRequired();
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #57                 // Method jndiNameRequired$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String jndiNameInvalidFormat$str();
    Code:
       0: ldc           #58                 // String WFLYTX0015: Jndi names have to start with java:/ or java:jboss/
       2: areturn

  public final org.jboss.as.controller.OperationFailedException jndiNameInvalidFormat();
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #59                 // Method jndiNameInvalidFormat$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  public final void rollbackOfTransactionStartedInEEConcurrentInvocation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #60                 // Method rollbackOfTransactionStartedInEEConcurrentInvocation$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #7                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String rollbackOfTransactionStartedInEEConcurrentInvocation$str();
    Code:
       0: ldc           #61                 // String WFLYTX0016: Transaction started in EE Concurrent invocation left open, starting rollback to prevent leak.
       2: areturn

  public final void failedToRollbackTransaction(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #62                 // Method failedToRollbackTransaction$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #7                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String failedToRollbackTransaction$str();
    Code:
       0: ldc           #63                 // String WFLYTX0017: Failed to rollback transaction.
       2: areturn

  public final void failedToSuspendTransaction(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #64                 // Method failedToSuspendTransaction$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #7                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String failedToSuspendTransaction$str();
    Code:
       0: ldc           #65                 // String WFLYTX0018: Failed to suspend transaction.
       2: areturn

  public final void systemErrorWhileCheckingForTransactionLeak(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #66                 // Method systemErrorWhileCheckingForTransactionLeak$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #6                  // class java/lang/Object
      19: invokevirtual #7                  // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String systemErrorWhileCheckingForTransactionLeak$str();
    Code:
       0: ldc           #67                 // String WFLYTX0019: System error while checking for transaction leak in EE Concurrent invocation.
       2: areturn

  protected java.lang.String serializationMustBeHandledByTheFactory$str();
    Code:
       0: ldc           #68                 // String WFLYTX0020: EE Concurrent ContextHandle serialization must be handled by the factory.
       2: areturn

  public final java.io.IOException serializationMustBeHandledByTheFactory();
    Code:
       0: new           #69                 // class java/io/IOException
       3: dup
       4: aload_0
       5: invokevirtual #70                 // Method serializationMustBeHandledByTheFactory$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #71                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #72                 // Method java/io/IOException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #73                 // Method java/io/IOException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String transactionSetupProviderServiceNotStarted$str();
    Code:
       0: ldc           #74                 // String WFLYTX0021: EE Concurrent\'s TransactionSetupProviderService not started.
       2: areturn

  public final java.lang.IllegalStateException transactionSetupProviderServiceNotStarted();
    Code:
       0: new           #30                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #75                 // Method transactionSetupProviderServiceNotStarted$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #33                 // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #34                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String transactionSetupProviderServiceNotInstalled$str();
    Code:
       0: ldc           #76                 // String WFLYTX0022: EE Concurrent\'s TransactionSetupProviderService not installed.
       2: areturn

  public final java.lang.IllegalStateException transactionSetupProviderServiceNotInstalled();
    Code:
       0: new           #30                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #77                 // Method transactionSetupProviderServiceNotInstalled$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #33                 // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #34                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String mustBeUndefinedIfTrue$str();
    Code:
       0: ldc           #78                 // String WFLYTX0023: %s must be undefined if %s is \'true\'.
       2: areturn

  public final org.jboss.as.controller.OperationFailedException mustBeUndefinedIfTrue(java.lang.String, java.lang.String);
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #79                 // Method mustBeUndefinedIfTrue$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String mustBedefinedIfDefined$str();
    Code:
       0: ldc           #80                 // String WFLYTX0024: %s must be defined if %s is defined.
       2: areturn

  public final org.jboss.as.controller.OperationFailedException mustBedefinedIfDefined(java.lang.String, java.lang.String);
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #81                 // Method mustBedefinedIfDefined$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String eitherTrueOrDefined$str();
    Code:
       0: ldc           #82                 // String WFLYTX0025: Either %s must be \'true\' or  %s must be defined.
       2: areturn

  public final org.jboss.as.controller.OperationFailedException eitherTrueOrDefined(java.lang.String, java.lang.String);
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #83                 // Method eitherTrueOrDefined$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  public final void transactionNotFound(javax.transaction.Transaction);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #84                 // Method transactionNotFound$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #14                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String transactionNotFound$str();
    Code:
       0: ldc           #85                 // String WFLYTX0026: The transaction %s could not be removed from the cache during cleanup.
       2: areturn

  public final void preJcaSyncAfterCompletionFailed(javax.transaction.Synchronization, javax.transaction.Transaction, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_3
      11: aload_0
      12: invokevirtual #86                 // Method preJcaSyncAfterCompletionFailed$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #87                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String preJcaSyncAfterCompletionFailed$str();
    Code:
       0: ldc           #88                 // String WFLYTX0027: The pre-jca synchronization %s associated with tx %s failed during after completion
       2: areturn

  public final void jcaSyncAfterCompletionFailed(javax.transaction.Synchronization, javax.transaction.Transaction, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field org/jboss/logging/DelegatingBasicLogger.log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #53                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_3
      11: aload_0
      12: invokevirtual #89                 // Method jcaSyncAfterCompletionFailed$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #87                 // Method org/jboss/logging/Logger.logf:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String jcaSyncAfterCompletionFailed$str();
    Code:
       0: ldc           #90                 // String WFLYTX0028: The jca synchronization %s associated with tx %s failed during after completion
       2: areturn

  protected java.lang.String syncsnotallowed$str();
    Code:
       0: ldc           #91                 // String WFLYTX0029: Syncs are not allowed to be registered when the tx is in state %s
       2: areturn

  public final java.lang.IllegalStateException syncsnotallowed(int);
    Code:
       0: new           #30                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #92                 // Method syncsnotallowed$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: iload_1
      15: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: aastore
      19: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: astore_2
      26: aload_2
      27: invokevirtual #33                 // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      30: astore_3
      31: aload_2
      32: aload_3
      33: iconst_1
      34: aload_3
      35: arraylength
      36: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      39: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      42: invokevirtual #34                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      45: aload_2
      46: areturn

  protected java.lang.String indexedChildResourceRegistrationNotAvailable$str();
    Code:
       0: ldc           #93                 // String WFLYTX0030: Indexed child resources can only be registered if the parent resource supports ordered children. The parent of \'%s\' is not indexed
       2: areturn

  public final java.lang.IllegalStateException indexedChildResourceRegistrationNotAvailable(org.jboss.as.controller.PathElement);
    Code:
       0: new           #30                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #94                 // Method indexedChildResourceRegistrationNotAvailable$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #33                 // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #34                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String unsupportedAttribute$str();
    Code:
       0: ldc           #95                 // String WFLYTX0031: The attribute \'%s\' is no longer supported
       2: areturn

  public final javax.xml.stream.XMLStreamException unsupportedAttribute(java.lang.String, javax.xml.stream.Location);
    Code:
       0: new           #96                 // class javax/xml/stream/XMLStreamException
       3: dup
       4: aload_0
       5: invokevirtual #97                 // Method unsupportedAttribute$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: aload_2
      20: invokespecial #98                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/String;Ljavax/xml/stream/Location;)V
      23: astore_3
      24: aload_3
      25: invokevirtual #99                 // Method javax/xml/stream/XMLStreamException.getStackTrace:()[Ljava/lang/StackTraceElement;
      28: astore        4
      30: aload_3
      31: aload         4
      33: iconst_1
      34: aload         4
      36: arraylength
      37: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      40: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      43: invokevirtual #100                // Method javax/xml/stream/XMLStreamException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      46: aload_3
      47: areturn

  protected java.lang.String mustBeDefinedIfTrue$str();
    Code:
       0: ldc           #101                // String WFLYTX0032: %s must be defined if %s is \'true\'.
       2: areturn

  public final org.jboss.as.controller.OperationFailedException mustBeDefinedIfTrue(java.lang.String, java.lang.String);
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #102                // Method mustBeDefinedIfTrue$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String onlyOneCanBeTrue$str();
    Code:
       0: ldc           #103                // String WFLYTX0033: Only one of %s and %s can be \'true\'.
       2: areturn

  public final org.jboss.as.controller.OperationFailedException onlyOneCanBeTrue(java.lang.String, java.lang.String);
    Code:
       0: new           #48                 // class org/jboss/as/controller/OperationFailedException
       3: dup
       4: aload_0
       5: invokevirtual #104                // Method onlyOneCanBeTrue$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #50                 // Method org/jboss/as/controller/OperationFailedException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #51                 // Method org/jboss/as/controller/OperationFailedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #52                 // Method org/jboss/as/controller/OperationFailedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  static {};
    Code:
       0: ldc           #8                  // class org/jboss/as/txn/logging/TransactionLogger_$logger
       2: invokevirtual #105                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #3                  // Field FQCN:Ljava/lang/String;
       8: return
}
