Compiled from "WildFlyDataSource.java"
public class org.jboss.as.connector.subsystems.datasources.WildFlyDataSource implements javax.sql.DataSource,java.io.Serializable {
  private static final long serialVersionUID;

  private transient javax.sql.DataSource delegate;

  private transient java.lang.String jndiName;

  public org.jboss.as.connector.subsystems.datasources.WildFlyDataSource(javax.sql.DataSource, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field jndiName:Ljava/lang/String;
      14: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       4: invokeinterface #4,  1            // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       9: areturn

  public java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod javax/sql/DataSource.getConnection:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      11: areturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: new           #6                  // class java/sql/SQLException
       3: dup
       4: ldc           #7                  // String Unwrap not supported
       6: invokespecial #8                  // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.io.PrintWriter getLogWriter() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       4: invokeinterface #9,  1            // InterfaceMethod javax/sql/DataSource.getLogWriter:()Ljava/io/PrintWriter;
       9: areturn

  public void setLogWriter(java.io.PrintWriter) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod javax/sql/DataSource.setLogWriter:(Ljava/io/PrintWriter;)V
      10: return

  public void setLoginTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       4: iload_1
       5: invokeinterface #11,  2           // InterfaceMethod javax/sql/DataSource.setLoginTimeout:(I)V
      10: return

  public int getLoginTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       4: invokeinterface #12,  1           // InterfaceMethod javax/sql/DataSource.getLoginTimeout:()I
       9: ireturn

  public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Ljavax/sql/DataSource;
       4: invokeinterface #13,  1           // InterfaceMethod javax/sql/DataSource.getParentLogger:()Ljava/util/logging/Logger;
       9: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field jndiName:Ljava/lang/String;
       9: invokevirtual #15                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      12: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #17                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       9: checkcast     #18                 // class java/lang/String
      12: putfield      #3                  // Field jndiName:Ljava/lang/String;
      15: new           #19                 // class javax/naming/InitialContext
      18: dup
      19: invokespecial #20                 // Method javax/naming/InitialContext."<init>":()V
      22: astore_2
      23: aload_2
      24: aload_0
      25: getfield      #3                  // Field jndiName:Ljava/lang/String;
      28: invokevirtual #21                 // Method javax/naming/InitialContext.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #22                 // class javax/sql/DataSource
      34: astore_3
      35: aload_0
      36: aload_3
      37: putfield      #2                  // Field delegate:Ljavax/sql/DataSource;
      40: goto          53
      43: astore_2
      44: new           #24                 // class java/io/IOException
      47: dup
      48: aload_2
      49: invokespecial #25                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      52: athrow
      53: return
    Exception table:
       from    to  target type
          15    40    43   Class java/lang/Exception
}
