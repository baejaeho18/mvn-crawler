Compiled from "RemoveOnCancelScheduledExecutorServiceBuilder.java"
public class org.wildfly.clustering.service.concurrent.RemoveOnCancelScheduledExecutorServiceBuilder implements org.wildfly.clustering.service.Builder<java.util.concurrent.ScheduledExecutorService>, org.jboss.msc.service.Service<java.util.concurrent.ScheduledExecutorService> {
  private final org.jboss.msc.service.ServiceName name;

  private final java.util.concurrent.ThreadFactory factory;

  private volatile int size;

  private volatile java.util.concurrent.ScheduledExecutorService executor;

  public org.wildfly.clustering.service.concurrent.RemoveOnCancelScheduledExecutorServiceBuilder(org.jboss.msc.service.ServiceName, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field size:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field name:Lorg/jboss/msc/service/ServiceName;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field factory:Ljava/util/concurrent/ThreadFactory;
      19: return

  public org.jboss.msc.service.ServiceName getServiceName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Lorg/jboss/msc/service/ServiceName;
       4: areturn

  public org.jboss.msc.service.ServiceBuilder<java.util.concurrent.ScheduledExecutorService> build(org.jboss.msc.service.ServiceTarget);
    Code:
       0: new           #5                  // class org/wildfly/clustering/service/AsynchronousServiceBuilder
       3: dup
       4: aload_0
       5: getfield      #3                  // Field name:Lorg/jboss/msc/service/ServiceName;
       8: aload_0
       9: invokespecial #6                  // Method org/wildfly/clustering/service/AsynchronousServiceBuilder."<init>":(Lorg/jboss/msc/service/ServiceName;Lorg/jboss/msc/service/Service;)V
      12: invokevirtual #7                  // Method org/wildfly/clustering/service/AsynchronousServiceBuilder.startSynchronously:()Lorg/wildfly/clustering/service/AsynchronousServiceBuilder;
      15: aload_1
      16: invokevirtual #8                  // Method org/wildfly/clustering/service/AsynchronousServiceBuilder.build:(Lorg/jboss/msc/service/ServiceTarget;)Lorg/jboss/msc/service/ServiceBuilder;
      19: getstatic     #9                  // Field org/jboss/msc/service/ServiceController$Mode.ON_DEMAND:Lorg/jboss/msc/service/ServiceController$Mode;
      22: invokeinterface #10,  2           // InterfaceMethod org/jboss/msc/service/ServiceBuilder.setInitialMode:(Lorg/jboss/msc/service/ServiceController$Mode;)Lorg/jboss/msc/service/ServiceBuilder;
      27: areturn

  public org.wildfly.clustering.service.concurrent.RemoveOnCancelScheduledExecutorServiceBuilder size(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field size:I
       5: aload_0
       6: areturn

  public java.util.concurrent.ScheduledExecutorService getValue();
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokestatic  #12                 // Method org/jboss/threads/JBossExecutors.protectedScheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;
       7: areturn

  public void start(org.jboss.msc.service.StartContext);
    Code:
       0: new           #13                 // class java/util/concurrent/ScheduledThreadPoolExecutor
       3: dup
       4: aload_0
       5: getfield      #2                  // Field size:I
       8: aload_0
       9: getfield      #4                  // Field factory:Ljava/util/concurrent/ThreadFactory;
      12: invokespecial #14                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      15: astore_2
      16: aload_2
      17: iconst_1
      18: invokevirtual #15                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy:(Z)V
      21: aload_2
      22: iconst_0
      23: invokevirtual #16                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy:(Z)V
      26: aload_0
      27: aload_2
      28: putfield      #11                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      31: return

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: getfield      #11                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
       9: aload_0
      10: aconst_null
      11: putfield      #11                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      14: return

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getValue:()Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn
}
