Compiled from "ProtocolDefaultsBuilder.java"
public class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsBuilder implements org.wildfly.clustering.service.Builder<org.jboss.as.clustering.jgroups.ProtocolDefaults>, org.jboss.msc.value.Value<org.jboss.as.clustering.jgroups.ProtocolDefaults>, org.jboss.as.clustering.jgroups.ProtocolDefaults {
  static final org.jboss.msc.service.ServiceName SERVICE_NAME;

  private static final java.lang.String DEFAULTS;

  private final java.lang.String resource;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> map;

  private static org.jgroups.conf.ProtocolStackConfigurator load(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #1                  // class java/lang/ClassLoader
       5: dup
       6: iconst_0
       7: ldc           #2                  // class org/jboss/as/clustering/jgroups/subsystem/JGroupsExtension
       9: invokevirtual #3                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      12: aastore
      13: invokestatic  #4                  // Method find:(Ljava/lang/String;[Ljava/lang/ClassLoader;)Ljava/net/URL;
      16: astore_1
      17: getstatic     #5                  // Field org/jboss/as/clustering/jgroups/logging/JGroupsLogger.ROOT_LOGGER:Lorg/jboss/as/clustering/jgroups/logging/JGroupsLogger;
      20: ldc           #6                  // String Loading JGroups protocol defaults from %s
      22: aload_1
      23: invokevirtual #7                  // Method java/net/URL.toString:()Ljava/lang/String;
      26: invokeinterface #8,  3            // InterfaceMethod org/jboss/as/clustering/jgroups/logging/JGroupsLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_1
      32: invokestatic  #9                  // Method org/jgroups/conf/XmlConfigurator.getInstance:(Ljava/net/URL;)Lorg/jgroups/conf/XmlConfigurator;
      35: areturn
      36: astore_2
      37: new           #11                 // class java/lang/IllegalArgumentException
      40: dup
      41: getstatic     #5                  // Field org/jboss/as/clustering/jgroups/logging/JGroupsLogger.ROOT_LOGGER:Lorg/jboss/as/clustering/jgroups/logging/JGroupsLogger;
      44: aload_1
      45: invokeinterface #12,  2           // InterfaceMethod org/jboss/as/clustering/jgroups/logging/JGroupsLogger.parserFailure:(Ljava/net/URL;)Ljava/lang/String;
      50: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
    Exception table:
       from    to  target type
          31    35    36   Class java/io/IOException

  private static java.net.URL find(java.lang.String, java.lang.ClassLoader...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     47
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: ifnull        41
      25: aload         5
      27: aload_0
      28: invokevirtual #14                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      31: astore        6
      33: aload         6
      35: ifnull        41
      38: aload         6
      40: areturn
      41: iinc          4, 1
      44: goto          8
      47: new           #11                 // class java/lang/IllegalArgumentException
      50: dup
      51: getstatic     #5                  // Field org/jboss/as/clustering/jgroups/logging/JGroupsLogger.ROOT_LOGGER:Lorg/jboss/as/clustering/jgroups/logging/JGroupsLogger;
      54: aload_0
      55: invokeinterface #15,  2           // InterfaceMethod org/jboss/as/clustering/jgroups/logging/JGroupsLogger.notFound:(Ljava/lang/String;)Ljava/lang/String;
      60: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow

  public org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsBuilder();
    Code:
       0: aload_0
       1: ldc           #17                 // String jgroups-defaults.xml
       3: invokespecial #18                 // Method "<init>":(Ljava/lang/String;)V
       6: return

  public org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsBuilder(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #20                 // class java/util/HashMap
       8: dup
       9: invokespecial #21                 // Method java/util/HashMap."<init>":()V
      12: putfield      #22                 // Field map:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #23                 // Field resource:Ljava/lang/String;
      20: return

  public org.jboss.msc.service.ServiceName getServiceName();
    Code:
       0: getstatic     #24                 // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
       3: areturn

  public org.jboss.msc.service.ServiceBuilder<org.jboss.as.clustering.jgroups.ProtocolDefaults> build(org.jboss.msc.service.ServiceTarget);
    Code:
       0: new           #25                 // class org/wildfly/clustering/service/AsynchronousServiceBuilder
       3: dup
       4: aload_0
       5: invokevirtual #26                 // Method getServiceName:()Lorg/jboss/msc/service/ServiceName;
       8: new           #27                 // class org/jboss/msc/service/ValueService
      11: dup
      12: aload_0
      13: invokespecial #28                 // Method org/jboss/msc/service/ValueService."<init>":(Lorg/jboss/msc/value/Value;)V
      16: invokespecial #29                 // Method org/wildfly/clustering/service/AsynchronousServiceBuilder."<init>":(Lorg/jboss/msc/service/ServiceName;Lorg/jboss/msc/service/Service;)V
      19: aload_1
      20: invokevirtual #30                 // Method org/wildfly/clustering/service/AsynchronousServiceBuilder.build:(Lorg/jboss/msc/service/ServiceTarget;)Lorg/jboss/msc/service/ServiceBuilder;
      23: areturn

  public org.jboss.as.clustering.jgroups.ProtocolDefaults getValue();
    Code:
       0: aload_0
       1: getfield      #23                 // Field resource:Ljava/lang/String;
       4: invokestatic  #31                 // Method load:(Ljava/lang/String;)Lorg/jgroups/conf/ProtocolStackConfigurator;
       7: astore_1
       8: aload_1
       9: invokeinterface #32,  1           // InterfaceMethod org/jgroups/conf/ProtocolStackConfigurator.getProtocolStack:()Ljava/util/List;
      14: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          63
      29: aload_2
      30: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #36                 // class org/jgroups/conf/ProtocolConfiguration
      38: astore_3
      39: aload_0
      40: getfield      #22                 // Field map:Ljava/util/Map;
      43: aload_3
      44: invokevirtual #37                 // Method org/jgroups/conf/ProtocolConfiguration.getProtocolName:()Ljava/lang/String;
      47: aload_3
      48: invokevirtual #38                 // Method org/jgroups/conf/ProtocolConfiguration.getProperties:()Ljava/util/Map;
      51: invokestatic  #39                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      54: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          20
      63: aload_0
      64: areturn

  public java.util.Map<java.lang.String, java.lang.String> getProperties(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #42                 // class java/util/Map
      13: astore_2
      14: aload_2
      15: ifnull        25
      18: aload_2
      19: invokestatic  #39                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      22: goto          28
      25: invokestatic  #43                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      28: areturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getValue:()Lorg/jboss/as/clustering/jgroups/ProtocolDefaults;
       4: areturn

  static {};
    Code:
       0: getstatic     #45                 // Field org/jboss/msc/service/ServiceName.JBOSS:Lorg/jboss/msc/service/ServiceName;
       3: iconst_2
       4: anewarray     #46                 // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #47                 // String jgroups
      11: aastore
      12: dup
      13: iconst_1
      14: ldc           #48                 // String defaults
      16: aastore
      17: invokevirtual #49                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      20: putstatic     #24                 // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      23: return
}
