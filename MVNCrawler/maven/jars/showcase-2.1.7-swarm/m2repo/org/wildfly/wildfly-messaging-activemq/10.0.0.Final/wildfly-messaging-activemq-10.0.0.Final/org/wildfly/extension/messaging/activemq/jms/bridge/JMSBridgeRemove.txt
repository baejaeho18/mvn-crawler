Compiled from "JMSBridgeRemove.java"
class org.wildfly.extension.messaging.activemq.jms.bridge.JMSBridgeRemove extends org.jboss.as.controller.AbstractRemoveStepHandler {
  static final org.wildfly.extension.messaging.activemq.jms.bridge.JMSBridgeRemove INSTANCE;

  private org.wildfly.extension.messaging.activemq.jms.bridge.JMSBridgeRemove();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jboss/as/controller/AbstractRemoveStepHandler."<init>":()V
       4: return

  protected void performRuntime(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode, org.jboss.dmr.ModelNode);
    Code:
       0: aload_2
       1: ldc           #3                  // String address
       3: invokevirtual #4                  // Method org/jboss/dmr/ModelNode.require:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       6: invokestatic  #5                  // Method org/jboss/as/controller/PathAddress.pathAddress:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/PathAddress;
       9: astore        4
      11: aload         4
      13: invokevirtual #6                  // Method org/jboss/as/controller/PathAddress.getLastElement:()Lorg/jboss/as/controller/PathElement;
      16: invokevirtual #7                  // Method org/jboss/as/controller/PathElement.getValue:()Ljava/lang/String;
      19: astore        5
      21: aload_1
      22: aload         5
      24: invokestatic  #8                  // Method org/wildfly/extension/messaging/activemq/MessagingServices.getJMSBridgeServiceName:(Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      27: invokeinterface #9,  2            // InterfaceMethod org/jboss/as/controller/OperationContext.removeService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      32: pop
      33: return

  protected void recoverServices(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode, org.jboss.dmr.ModelNode) throws org.jboss.as.controller.OperationFailedException;
    Code:
       0: aload_2
       1: ldc           #3                  // String address
       3: invokevirtual #4                  // Method org/jboss/dmr/ModelNode.require:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       6: invokestatic  #5                  // Method org/jboss/as/controller/PathAddress.pathAddress:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/PathAddress;
       9: astore        4
      11: aload         4
      13: invokevirtual #6                  // Method org/jboss/as/controller/PathAddress.getLastElement:()Lorg/jboss/as/controller/PathElement;
      16: invokevirtual #7                  // Method org/jboss/as/controller/PathElement.getValue:()Ljava/lang/String;
      19: astore        5
      21: aload_1
      22: iconst_1
      23: invokeinterface #10,  2           // InterfaceMethod org/jboss/as/controller/OperationContext.getServiceRegistry:(Z)Lorg/jboss/msc/service/ServiceRegistry;
      28: astore        6
      30: aload         5
      32: invokestatic  #8                  // Method org/wildfly/extension/messaging/activemq/MessagingServices.getJMSBridgeServiceName:(Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      35: astore        7
      37: aload         6
      39: aload         7
      41: invokeinterface #11,  2           // InterfaceMethod org/jboss/msc/service/ServiceRegistry.getService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      46: astore        8
      48: aload         8
      50: ifnull        101
      53: aload         8
      55: invokeinterface #12,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getState:()Lorg/jboss/msc/service/ServiceController$State;
      60: getstatic     #13                 // Field org/jboss/msc/service/ServiceController$State.UP:Lorg/jboss/msc/service/ServiceController$State;
      63: if_acmpne     101
      66: aload         8
      68: invokeinterface #14,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getService:()Lorg/jboss/msc/service/Service;
      73: checkcast     #15                 // class org/wildfly/extension/messaging/activemq/jms/bridge/JMSBridgeService
      76: astore        9
      78: aload         9
      80: invokevirtual #16                 // Method org/wildfly/extension/messaging/activemq/jms/bridge/JMSBridgeService.startBridge:()V
      83: goto          101
      86: astore        10
      88: getstatic     #18                 // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
      91: aload         10
      93: aload         5
      95: invokeinterface #19,  3           // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.failedToRecover:(Ljava/lang/Throwable;Ljava/lang/String;)Lorg/jboss/as/controller/OperationFailedException;
     100: athrow
     101: return
    Exception table:
       from    to  target type
          78    83    86   Class java/lang/Exception

  static {};
    Code:
       0: new           #20                 // class org/wildfly/extension/messaging/activemq/jms/bridge/JMSBridgeRemove
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: putstatic     #22                 // Field INSTANCE:Lorg/wildfly/extension/messaging/activemq/jms/bridge/JMSBridgeRemove;
      10: return
}
