Compiled from "LegacyConnectionFactoryService.java"
public class org.wildfly.extension.messaging.activemq.jms.legacy.LegacyConnectionFactoryService implements org.jboss.msc.service.Service<javax.jms.ConnectionFactory> {
  private static final java.util.Map<java.lang.String, java.lang.String> PARAM_KEY_MAPPING;

  private final org.jboss.msc.value.InjectedValue<org.apache.activemq.artemis.core.server.ActiveMQServer> injectedActiveMQServer;

  private final org.hornetq.jms.client.HornetQConnectionFactory uncompletedConnectionFactory;

  private final java.lang.String discoveryGroupName;

  private final java.util.List<java.lang.String> connectors;

  private org.hornetq.jms.client.HornetQConnectionFactory connectionFactory;

  public org.wildfly.extension.messaging.activemq.jms.legacy.LegacyConnectionFactoryService(org.hornetq.jms.client.HornetQConnectionFactory, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/jboss/msc/value/InjectedValue
       8: dup
       9: invokespecial #4                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      12: putfield      #5                  // Field injectedActiveMQServer:Lorg/jboss/msc/value/InjectedValue;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
      20: aload_0
      21: aload_2
      22: putfield      #7                  // Field discoveryGroupName:Ljava/lang/String;
      25: aload_0
      26: aload_3
      27: putfield      #8                  // Field connectors:Ljava/util/List;
      30: return

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field injectedActiveMQServer:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #9                  // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #10                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      10: astore_2
      11: aconst_null
      12: astore_3
      13: aload_0
      14: getfield      #7                  // Field discoveryGroupName:Ljava/lang/String;
      17: ifnull        92
      20: aload_2
      21: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      26: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getDiscoveryGroupConfigurations:()Ljava/util/Map;
      31: invokeinterface #13,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      36: aload_0
      37: getfield      #7                  // Field discoveryGroupName:Ljava/lang/String;
      40: invokeinterface #14,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      45: ifeq          79
      48: aload_0
      49: aload_2
      50: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      55: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getDiscoveryGroupConfigurations:()Ljava/util/Map;
      60: aload_0
      61: getfield      #7                  // Field discoveryGroupName:Ljava/lang/String;
      64: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #16                 // class org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration
      72: invokespecial #17                 // Method translateDiscoveryGroupConfiguration:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/hornetq/api/core/DiscoveryGroupConfiguration;
      75: astore_3
      76: goto          92
      79: getstatic     #18                 // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
      82: aload_0
      83: getfield      #7                  // Field discoveryGroupName:Ljava/lang/String;
      86: invokeinterface #19,  2           // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.discoveryGroupIsNotDefined:(Ljava/lang/String;)Lorg/jboss/msc/service/StartException;
      91: athrow
      92: aload_0
      93: aload_2
      94: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      99: invokeinterface #20,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectorConfigurations:()Ljava/util/Map;
     104: aload_0
     105: getfield      #8                  // Field connectors:Ljava/util/List;
     108: invokespecial #21                 // Method translateTransportGroupConfigurations:(Ljava/util/Map;Ljava/util/List;)[Lorg/hornetq/api/core/TransportConfiguration;
     111: astore        4
     113: aload_0
     114: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     117: invokevirtual #22                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getFactoryType:()I
     120: invokestatic  #23                 // Method org/hornetq/api/jms/JMSFactoryType.valueOf:(I)Lorg/hornetq/api/jms/JMSFactoryType;
     123: astore        5
     125: aload_0
     126: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     129: invokevirtual #24                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isHA:()Z
     132: ifeq          166
     135: aload_3
     136: ifnull        152
     139: aload_0
     140: aload_3
     141: aload         5
     143: invokestatic  #25                 // Method org/hornetq/api/jms/HornetQJMSClient.createConnectionFactoryWithHA:(Lorg/hornetq/api/core/DiscoveryGroupConfiguration;Lorg/hornetq/api/jms/JMSFactoryType;)Lorg/hornetq/jms/client/HornetQConnectionFactory;
     146: putfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     149: goto          194
     152: aload_0
     153: aload         5
     155: aload         4
     157: invokestatic  #27                 // Method org/hornetq/api/jms/HornetQJMSClient.createConnectionFactoryWithHA:(Lorg/hornetq/api/jms/JMSFactoryType;[Lorg/hornetq/api/core/TransportConfiguration;)Lorg/hornetq/jms/client/HornetQConnectionFactory;
     160: putfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     163: goto          194
     166: aload_3
     167: ifnull        183
     170: aload_0
     171: aload_3
     172: aload         5
     174: invokestatic  #28                 // Method org/hornetq/api/jms/HornetQJMSClient.createConnectionFactoryWithoutHA:(Lorg/hornetq/api/core/DiscoveryGroupConfiguration;Lorg/hornetq/api/jms/JMSFactoryType;)Lorg/hornetq/jms/client/HornetQConnectionFactory;
     177: putfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     180: goto          194
     183: aload_0
     184: aload         5
     186: aload         4
     188: invokestatic  #29                 // Method org/hornetq/api/jms/HornetQJMSClient.createConnectionFactoryWithoutHA:(Lorg/hornetq/api/jms/JMSFactoryType;[Lorg/hornetq/api/core/TransportConfiguration;)Lorg/hornetq/jms/client/HornetQConnectionFactory;
     191: putfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     194: aload_0
     195: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     198: aload_0
     199: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     202: invokevirtual #30                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isAutoGroup:()Z
     205: invokevirtual #31                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setAutoGroup:(Z)V
     208: aload_0
     209: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     212: aload_0
     213: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     216: invokevirtual #32                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isBlockOnAcknowledge:()Z
     219: invokevirtual #33                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setBlockOnAcknowledge:(Z)V
     222: aload_0
     223: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     226: aload_0
     227: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     230: invokevirtual #34                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isBlockOnDurableSend:()Z
     233: invokevirtual #35                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setBlockOnDurableSend:(Z)V
     236: aload_0
     237: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     240: aload_0
     241: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     244: invokevirtual #36                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isBlockOnNonDurableSend:()Z
     247: invokevirtual #37                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setBlockOnNonDurableSend:(Z)V
     250: aload_0
     251: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     254: aload_0
     255: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     258: invokevirtual #38                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isCacheLargeMessagesClient:()Z
     261: invokevirtual #39                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setCacheLargeMessagesClient:(Z)V
     264: aload_0
     265: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     268: aload_0
     269: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     272: invokevirtual #40                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getCallFailoverTimeout:()J
     275: invokevirtual #41                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setCallFailoverTimeout:(J)V
     278: aload_0
     279: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     282: aload_0
     283: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     286: invokevirtual #42                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getCallTimeout:()J
     289: invokevirtual #43                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setCallTimeout:(J)V
     292: aload_0
     293: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     296: aload_0
     297: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     300: invokevirtual #44                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getClientFailureCheckPeriod:()J
     303: invokevirtual #45                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setClientFailureCheckPeriod:(J)V
     306: aload_0
     307: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     310: aload_0
     311: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     314: invokevirtual #46                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getClientID:()Ljava/lang/String;
     317: invokevirtual #47                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setClientID:(Ljava/lang/String;)V
     320: aload_0
     321: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     324: aload_0
     325: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     328: invokevirtual #48                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isCompressLargeMessage:()Z
     331: invokevirtual #49                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setCompressLargeMessage:(Z)V
     334: aload_0
     335: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     338: aload_0
     339: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     342: invokevirtual #50                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getConfirmationWindowSize:()I
     345: invokevirtual #51                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setConfirmationWindowSize:(I)V
     348: aload_0
     349: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     352: aload_0
     353: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     356: invokevirtual #52                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getConnectionLoadBalancingPolicyClassName:()Ljava/lang/String;
     359: invokevirtual #53                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setConnectionLoadBalancingPolicyClassName:(Ljava/lang/String;)V
     362: aload_0
     363: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     366: aload_0
     367: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     370: invokevirtual #54                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getConnectionTTL:()J
     373: invokevirtual #55                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setConnectionTTL:(J)V
     376: aload_0
     377: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     380: aload_0
     381: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     384: invokevirtual #56                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getConsumerMaxRate:()I
     387: invokevirtual #57                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setConsumerMaxRate:(I)V
     390: aload_0
     391: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     394: aload_0
     395: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     398: invokevirtual #58                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getConsumerWindowSize:()I
     401: invokevirtual #59                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setConsumerWindowSize:(I)V
     404: aload_0
     405: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     408: aload_0
     409: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     412: invokevirtual #50                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getConfirmationWindowSize:()I
     415: invokevirtual #51                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setConfirmationWindowSize:(I)V
     418: aload_0
     419: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     422: aload_0
     423: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     426: invokevirtual #60                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getDupsOKBatchSize:()I
     429: invokevirtual #61                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setDupsOKBatchSize:(I)V
     432: aload_0
     433: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     436: aload_0
     437: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     440: invokevirtual #62                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isFailoverOnInitialConnection:()Z
     443: invokevirtual #63                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setFailoverOnInitialConnection:(Z)V
     446: aload_0
     447: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     450: aload_0
     451: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     454: invokevirtual #64                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getGroupID:()Ljava/lang/String;
     457: invokevirtual #65                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setGroupID:(Ljava/lang/String;)V
     460: aload_0
     461: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     464: aload_0
     465: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     468: invokevirtual #66                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getInitialConnectAttempts:()I
     471: invokevirtual #67                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setInitialConnectAttempts:(I)V
     474: aload_0
     475: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     478: aload_0
     479: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     482: invokevirtual #68                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getInitialMessagePacketSize:()I
     485: invokevirtual #69                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setInitialMessagePacketSize:(I)V
     488: aload_0
     489: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     492: aload_0
     493: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     496: invokevirtual #70                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getMaxRetryInterval:()J
     499: invokevirtual #71                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setMaxRetryInterval:(J)V
     502: aload_0
     503: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     506: aload_0
     507: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     510: invokevirtual #72                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getMinLargeMessageSize:()I
     513: invokevirtual #73                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setMinLargeMessageSize:(I)V
     516: aload_0
     517: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     520: aload_0
     521: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     524: invokevirtual #74                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isPreAcknowledge:()Z
     527: invokevirtual #75                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setPreAcknowledge:(Z)V
     530: aload_0
     531: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     534: aload_0
     535: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     538: invokevirtual #76                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getProducerMaxRate:()I
     541: invokevirtual #77                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setProducerMaxRate:(I)V
     544: aload_0
     545: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     548: aload_0
     549: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     552: invokevirtual #78                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getProducerWindowSize:()I
     555: invokevirtual #79                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setProducerWindowSize:(I)V
     558: aload_0
     559: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     562: aload_0
     563: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     566: invokevirtual #80                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getReconnectAttempts:()I
     569: invokevirtual #81                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setReconnectAttempts:(I)V
     572: aload_0
     573: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     576: aload_0
     577: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     580: invokevirtual #82                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getRetryInterval:()J
     583: invokevirtual #83                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setRetryInterval:(J)V
     586: aload_0
     587: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     590: aload_0
     591: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     594: invokevirtual #84                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getRetryIntervalMultiplier:()D
     597: invokevirtual #85                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setRetryIntervalMultiplier:(D)V
     600: aload_0
     601: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     604: aload_0
     605: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     608: invokevirtual #86                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getScheduledThreadPoolMaxSize:()I
     611: invokevirtual #87                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setScheduledThreadPoolMaxSize:(I)V
     614: aload_0
     615: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     618: aload_0
     619: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     622: invokevirtual #88                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getThreadPoolMaxSize:()I
     625: invokevirtual #89                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setThreadPoolMaxSize:(I)V
     628: aload_0
     629: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     632: aload_0
     633: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     636: invokevirtual #90                 // Method org/hornetq/jms/client/HornetQConnectionFactory.getTransactionBatchSize:()I
     639: invokevirtual #91                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setTransactionBatchSize:(I)V
     642: aload_0
     643: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     646: aload_0
     647: getfield      #6                  // Field uncompletedConnectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
     650: invokevirtual #92                 // Method org/hornetq/jms/client/HornetQConnectionFactory.isUseGlobalPools:()Z
     653: invokevirtual #93                 // Method org/hornetq/jms/client/HornetQConnectionFactory.setUseGlobalPools:(Z)V
     656: return

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
       5: return

  public javax.jms.ConnectionFactory getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionFactory:Lorg/hornetq/jms/client/HornetQConnectionFactory;
       4: areturn

  public static org.wildfly.extension.messaging.activemq.jms.legacy.LegacyConnectionFactoryService installService(java.lang.String, org.jboss.msc.service.ServiceName, org.jboss.msc.service.ServiceTarget, org.hornetq.jms.client.HornetQConnectionFactory, java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: new           #94                 // class org/wildfly/extension/messaging/activemq/jms/legacy/LegacyConnectionFactoryService
       3: dup
       4: aload_3
       5: aload         4
       7: aload         5
       9: invokespecial #95                 // Method "<init>":(Lorg/hornetq/jms/client/HornetQConnectionFactory;Ljava/lang/String;Ljava/util/List;)V
      12: astore        6
      14: aload_1
      15: invokestatic  #96                 // Method org/wildfly/extension/messaging/activemq/jms/JMSServices.getConnectionFactoryBaseServiceName:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceName;
      18: iconst_2
      19: anewarray     #97                 // class java/lang/String
      22: dup
      23: iconst_0
      24: ldc           #98                 // String legacy
      26: aastore
      27: dup
      28: iconst_1
      29: aload_0
      30: aastore
      31: invokevirtual #99                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      34: astore        7
      36: aload_2
      37: aload         7
      39: aload         6
      41: invokeinterface #100,  3          // InterfaceMethod org/jboss/msc/service/ServiceTarget.addService:(Lorg/jboss/msc/service/ServiceName;Lorg/jboss/msc/service/Service;)Lorg/jboss/msc/service/ServiceBuilder;
      46: aload_1
      47: invokestatic  #101                // Method org/wildfly/extension/messaging/activemq/ActiveMQActivationService.getServiceName:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceName;
      50: invokeinterface #102,  2          // InterfaceMethod org/jboss/msc/service/ServiceBuilder.addDependency:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceBuilder;
      55: aload_1
      56: ldc           #10                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      58: aload         6
      60: getfield      #5                  // Field injectedActiveMQServer:Lorg/jboss/msc/value/InjectedValue;
      63: invokeinterface #103,  4          // InterfaceMethod org/jboss/msc/service/ServiceBuilder.addDependency:(Lorg/jboss/msc/service/ServiceName;Ljava/lang/Class;Lorg/jboss/msc/inject/Injector;)Lorg/jboss/msc/service/ServiceBuilder;
      68: getstatic     #104                // Field org/jboss/msc/service/ServiceController$Mode.PASSIVE:Lorg/jboss/msc/service/ServiceController$Mode;
      71: invokeinterface #105,  2          // InterfaceMethod org/jboss/msc/service/ServiceBuilder.setInitialMode:(Lorg/jboss/msc/service/ServiceController$Mode;)Lorg/jboss/msc/service/ServiceBuilder;
      76: invokeinterface #106,  1          // InterfaceMethod org/jboss/msc/service/ServiceBuilder.install:()Lorg/jboss/msc/service/ServiceController;
      81: pop
      82: aload         6
      84: areturn

  private org.hornetq.api.core.DiscoveryGroupConfiguration translateDiscoveryGroupConfiguration(org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration) throws org.jboss.msc.service.StartException;
    Code:
       0: aload_1
       1: invokevirtual #107                // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getBroadcastEndpointFactory:()Lorg/apache/activemq/artemis/api/core/BroadcastEndpointFactory;
       4: astore_2
       5: aload_2
       6: instanceof    #108                // class org/apache/activemq/artemis/api/core/UDPBroadcastEndpointFactory
       9: ifeq          49
      12: aload_2
      13: checkcast     #108                // class org/apache/activemq/artemis/api/core/UDPBroadcastEndpointFactory
      16: astore        4
      18: new           #109                // class org/hornetq/api/core/UDPBroadcastGroupConfiguration
      21: dup
      22: aload         4
      24: invokevirtual #110                // Method org/apache/activemq/artemis/api/core/UDPBroadcastEndpointFactory.getGroupAddress:()Ljava/lang/String;
      27: aload         4
      29: invokevirtual #111                // Method org/apache/activemq/artemis/api/core/UDPBroadcastEndpointFactory.getGroupPort:()I
      32: aload         4
      34: invokevirtual #112                // Method org/apache/activemq/artemis/api/core/UDPBroadcastEndpointFactory.getLocalBindAddress:()Ljava/lang/String;
      37: aload         4
      39: invokevirtual #113                // Method org/apache/activemq/artemis/api/core/UDPBroadcastEndpointFactory.getLocalBindPort:()I
      42: invokespecial #114                // Method org/hornetq/api/core/UDPBroadcastGroupConfiguration."<init>":(Ljava/lang/String;ILjava/lang/String;I)V
      45: astore_3
      46: goto          99
      49: aload_2
      50: instanceof    #115                // class org/apache/activemq/artemis/api/core/ChannelBroadcastEndpointFactory
      53: ifeq          83
      56: aload_2
      57: checkcast     #115                // class org/apache/activemq/artemis/api/core/ChannelBroadcastEndpointFactory
      60: astore        4
      62: new           #116                // class org/hornetq/api/core/JGroupsBroadcastGroupConfiguration
      65: dup
      66: aload         4
      68: invokevirtual #117                // Method org/apache/activemq/artemis/api/core/ChannelBroadcastEndpointFactory.getChannel:()Lorg/jgroups/JChannel;
      71: aload         4
      73: invokevirtual #118                // Method org/apache/activemq/artemis/api/core/ChannelBroadcastEndpointFactory.getChannelName:()Ljava/lang/String;
      76: invokespecial #119                // Method org/hornetq/api/core/JGroupsBroadcastGroupConfiguration."<init>":(Lorg/jgroups/JChannel;Ljava/lang/String;)V
      79: astore_3
      80: goto          99
      83: getstatic     #18                 // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
      86: aload_2
      87: invokevirtual #120                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      93: invokeinterface #122,  2          // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.unsupportedBroadcastGroupConfigurationForLegacy:(Ljava/lang/String;)Lorg/jboss/msc/service/StartException;
      98: athrow
      99: new           #123                // class org/hornetq/api/core/DiscoveryGroupConfiguration
     102: dup
     103: aload_1
     104: invokevirtual #124                // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getName:()Ljava/lang/String;
     107: aload_1
     108: invokevirtual #125                // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getRefreshTimeout:()J
     111: aload_1
     112: invokevirtual #126                // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getDiscoveryInitialWaitTimeout:()J
     115: aload_3
     116: invokespecial #127                // Method org/hornetq/api/core/DiscoveryGroupConfiguration."<init>":(Ljava/lang/String;JJLorg/hornetq/api/core/BroadcastEndpointFactoryConfiguration;)V
     119: areturn

  private org.hornetq.api.core.TransportConfiguration[] translateTransportGroupConfigurations(java.util.Map<java.lang.String, org.apache.activemq.artemis.api.core.TransportConfiguration>, java.util.List<java.lang.String>) throws org.jboss.msc.service.StartException;
    Code:
       0: new           #128                // class java/util/ArrayList
       3: dup
       4: invokespecial #129                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #130,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          103
      26: aload         4
      28: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #97                 // class java/lang/String
      36: astore        5
      38: aload_1
      39: aload         5
      41: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #133                // class org/apache/activemq/artemis/api/core/TransportConfiguration
      49: astore        6
      51: aload_0
      52: aload         6
      54: invokevirtual #134                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getFactoryClassName:()Ljava/lang/String;
      57: invokespecial #135                // Method translateFactoryClassName:(Ljava/lang/String;)Ljava/lang/String;
      60: astore        7
      62: aload_0
      63: aload         6
      65: invokevirtual #136                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getParams:()Ljava/util/Map;
      68: invokespecial #137                // Method translateParams:(Ljava/util/Map;)Ljava/util/Map;
      71: astore        8
      73: new           #138                // class org/hornetq/api/core/TransportConfiguration
      76: dup
      77: aload         7
      79: aload         8
      81: aload         6
      83: invokevirtual #139                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getName:()Ljava/lang/String;
      86: invokespecial #140                // Method org/hornetq/api/core/TransportConfiguration."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
      89: astore        9
      91: aload_3
      92: aload         9
      94: invokeinterface #141,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          16
     103: aload_3
     104: aload_3
     105: invokeinterface #142,  1          // InterfaceMethod java/util/List.size:()I
     110: anewarray     #138                // class org/hornetq/api/core/TransportConfiguration
     113: invokeinterface #143,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     118: checkcast     #144                // class "[Lorg/hornetq/api/core/TransportConfiguration;"
     121: areturn

  private java.lang.String translateFactoryClassName(java.lang.String) throws org.jboss.msc.service.StartException;
    Code:
       0: aload_1
       1: ldc           #145                // class org/apache/activemq/artemis/core/remoting/impl/netty/NettyConnectorFactory
       3: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #146                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          18
      12: ldc           #147                // class org/hornetq/core/remoting/impl/netty/NettyConnectorFactory
      14: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      17: areturn
      18: getstatic     #18                 // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
      21: aload_1
      22: invokevirtual #120                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokeinterface #148,  2          // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.unsupportedConnectorFactoryForLegacy:(Ljava/lang/String;)Lorg/jboss/msc/service/StartException;
      33: athrow

  private java.util.Map translateParams(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #149                // class java/util/HashMap
       3: dup
       4: invokespecial #150                // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #151,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #152,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          92
      29: aload_3
      30: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #153                // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #154,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #97                 // class java/lang/String
      50: astore        5
      52: aload         4
      54: invokeinterface #155,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: astore        6
      61: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      64: aload         5
      66: aload         5
      68: invokeinterface #157,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #97                 // class java/lang/String
      76: astore        7
      78: aload_2
      79: aload         7
      81: aload         6
      83: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: goto          20
      92: aload_2
      93: areturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #159                // Method getValue:()Ljavax/jms/ConnectionFactory;
       4: areturn

  static {};
    Code:
       0: new           #149                // class java/util/HashMap
       3: dup
       4: invokespecial #150                // Method java/util/HashMap."<init>":()V
       7: putstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      10: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      13: ldc           #161                // String sslEnabled
      15: ldc           #163                // String ssl-enabled
      17: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      26: ldc           #164                // String httpEnabled
      28: ldc           #165                // String http-enabled
      30: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      39: ldc           #166                // String httpClientIdleTime
      41: ldc           #167                // String http-client-idle-time
      43: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      52: ldc           #168                // String httpClientIdleScanPeriod
      54: ldc           #169                // String http-client-idle-scan-period
      56: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      65: ldc           #170                // String httpRequiresSessionId
      67: ldc           #171                // String http-requires-session-id
      69: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      78: ldc           #172                // String httpUpgradeEnabled
      80: ldc           #173                // String http-upgrade-enabled
      82: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
      91: ldc           #174                // String httpPpgradeEndpoint
      93: ldc           #175                // String http-upgrade-endpoint
      95: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     104: ldc           #176                // String useServlet
     106: ldc           #177                // String use-servlet
     108: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     117: ldc           #178                // String servletPath
     119: ldc           #179                // String servlet-path
     121: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     130: ldc           #180                // String useNio
     132: ldc           #181                // String use-nio
     134: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     143: ldc           #182                // String useNioGlobalWorkerPool
     145: ldc           #183                // String use-nio-global-worker-pool
     147: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     156: ldc           #184                // String localAddress
     158: ldc           #185                // String local-address
     160: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     165: pop
     166: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     169: ldc           #186                // String keyStoreProvider
     171: ldc           #187                // String key-store-provider
     173: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     178: pop
     179: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     182: ldc           #188                // String keyStorePath
     184: ldc           #189                // String key-store-path
     186: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     191: pop
     192: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     195: ldc           #190                // String keyStorePassword
     197: ldc           #191                // String key-store-password
     199: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     204: pop
     205: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     208: ldc           #192                // String trustStoreProvider
     210: ldc           #193                // String trust-store-provider
     212: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     217: pop
     218: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     221: ldc           #194                // String trustStorePath
     223: ldc           #195                // String trust-store-path
     225: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     230: pop
     231: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     234: ldc           #196                // String trustStorePassword
     236: ldc           #197                // String trust-store-password
     238: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     243: pop
     244: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     247: ldc           #198                // String enabledCipherSuites
     249: ldc           #199                // String enabled-cipher-suites
     251: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     256: pop
     257: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     260: ldc           #200                // String enabledProtocols
     262: ldc           #201                // String enabled-protocols
     264: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     269: pop
     270: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     273: ldc           #202                // String tcpNoDelay
     275: ldc           #203                // String tcp-no-delay
     277: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     282: pop
     283: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     286: ldc           #204                // String tcpSendBufferSize
     288: ldc           #205                // String tcp-send-buffer-size
     290: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     295: pop
     296: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     299: ldc           #206                // String tcpReceiveBufferSize
     301: ldc           #207                // String tcp-receive-buffer-size
     303: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     308: pop
     309: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     312: ldc           #208                // String nioRemotingThreads
     314: ldc           #209                // String nio-remoting-threads
     316: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     321: pop
     322: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     325: ldc           #210                // String batchDelay
     327: ldc           #211                // String batch-delay
     329: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     334: pop
     335: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     338: ldc           #208                // String nioRemotingThreads
     340: ldc           #209                // String nio-remoting-threads
     342: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     347: pop
     348: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     351: invokestatic  #212                // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getPropMaskPassword:()Ljava/lang/String;
     354: invokestatic  #213                // Method org/hornetq/api/config/HornetQDefaultConfiguration.getPropMaskPassword:()Ljava/lang/String;
     357: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     362: pop
     363: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     366: invokestatic  #214                // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getPropPasswordCodec:()Ljava/lang/String;
     369: invokestatic  #215                // Method org/hornetq/api/config/HornetQDefaultConfiguration.getPropPasswordCodec:()Ljava/lang/String;
     372: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     377: pop
     378: getstatic     #156                // Field PARAM_KEY_MAPPING:Ljava/util/Map;
     381: ldc           #216                // String connect-timeout-millis
     383: ldc           #216                // String connect-timeout-millis
     385: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     390: pop
     391: return
}
