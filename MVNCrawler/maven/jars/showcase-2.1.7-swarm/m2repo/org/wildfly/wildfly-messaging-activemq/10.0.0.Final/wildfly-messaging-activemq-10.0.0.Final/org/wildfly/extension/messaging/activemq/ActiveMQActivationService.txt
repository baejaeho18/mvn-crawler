Compiled from "ActiveMQActivationService.java"
public class org.wildfly.extension.messaging.activemq.ActiveMQActivationService implements org.jboss.msc.service.Service<java.lang.Void> {
  public org.wildfly.extension.messaging.activemq.ActiveMQActivationService();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.jboss.msc.service.ServiceName getServiceName(org.jboss.msc.service.ServiceName);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #3                  // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #4                  // String activation
       9: aastore
      10: invokevirtual #5                  // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      13: areturn

  public static boolean isActiveMQServerActive(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode);
    Code:
       0: aload_1
       1: ldc           #6                  // String address
       3: invokevirtual #7                  // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       6: invokestatic  #8                  // Method org/jboss/as/controller/PathAddress.pathAddress:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/PathAddress;
       9: astore_2
      10: aload_0
      11: iconst_0
      12: invokeinterface #9,  2            // InterfaceMethod org/jboss/as/controller/OperationContext.getServiceRegistry:(Z)Lorg/jboss/msc/service/ServiceRegistry;
      17: aload_2
      18: invokestatic  #10                 // Method org/wildfly/extension/messaging/activemq/MessagingServices.getActiveMQServiceName:(Lorg/jboss/as/controller/PathAddress;)Lorg/jboss/msc/service/ServiceName;
      21: invokestatic  #11                 // Method isActiveMQServerActive:(Lorg/jboss/msc/service/ServiceRegistry;Lorg/jboss/msc/service/ServiceName;)Z
      24: ireturn

  public static boolean isActiveMQServerActive(org.jboss.msc.service.ServiceRegistry, org.jboss.msc.service.ServiceName);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod org/jboss/msc/service/ServiceRegistry.getService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
       7: astore_2
       8: aload_2
       9: ifnull        47
      12: ldc           #13                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      14: aload_2
      15: invokeinterface #14,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getValue:()Ljava/lang/Object;
      20: invokevirtual #15                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #13                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      26: astore_3
      27: aload_3
      28: invokeinterface #16,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.isStarted:()Z
      33: ifeq          47
      36: aload_3
      37: invokeinterface #17,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.isActive:()Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iconst_0
      48: ireturn

  public static boolean rollbackOperationIfServerNotActive(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method isActiveMQServerActive:(Lorg/jboss/as/controller/OperationContext;Lorg/jboss/dmr/ModelNode;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: invokeinterface #19,  1           // InterfaceMethod org/jboss/as/controller/OperationContext.getFailureDescription:()Lorg/jboss/dmr/ModelNode;
      16: getstatic     #20                 // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
      19: aload_1
      20: ldc           #6                  // String address
      22: invokevirtual #21                 // Method org/jboss/dmr/ModelNode.require:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      25: invokestatic  #8                  // Method org/jboss/as/controller/PathAddress.pathAddress:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/PathAddress;
      28: invokeinterface #22,  2           // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.serverInBackupMode:(Lorg/jboss/as/controller/PathAddress;)Ljava/lang/String;
      33: invokevirtual #23                 // Method org/jboss/dmr/ModelNode.set:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
      36: pop
      37: aload_0
      38: invokeinterface #24,  1           // InterfaceMethod org/jboss/as/controller/OperationContext.setRollbackOnly:()V
      43: iconst_1
      44: ireturn

  public static boolean ignoreOperationIfServerNotActive(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method isActiveMQServerActive:(Lorg/jboss/as/controller/OperationContext;Lorg/jboss/dmr/ModelNode;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: invokeinterface #25,  1           // InterfaceMethod org/jboss/as/controller/OperationContext.getResult:()Lorg/jboss/dmr/ModelNode;
      16: pop
      17: iconst_1
      18: ireturn

  static org.apache.activemq.artemis.core.server.ActiveMQServer getActiveMQServer(org.jboss.as.controller.OperationContext, org.jboss.dmr.ModelNode);
    Code:
       0: aload_1
       1: ldc           #6                  // String address
       3: invokevirtual #7                  // Method org/jboss/dmr/ModelNode.get:(Ljava/lang/String;)Lorg/jboss/dmr/ModelNode;
       6: invokestatic  #8                  // Method org/jboss/as/controller/PathAddress.pathAddress:(Lorg/jboss/dmr/ModelNode;)Lorg/jboss/as/controller/PathAddress;
       9: invokestatic  #10                 // Method org/wildfly/extension/messaging/activemq/MessagingServices.getActiveMQServiceName:(Lorg/jboss/as/controller/PathAddress;)Lorg/jboss/msc/service/ServiceName;
      12: astore_2
      13: aload_0
      14: iconst_0
      15: invokeinterface #9,  2            // InterfaceMethod org/jboss/as/controller/OperationContext.getServiceRegistry:(Z)Lorg/jboss/msc/service/ServiceRegistry;
      20: aload_2
      21: invokeinterface #12,  2           // InterfaceMethod org/jboss/msc/service/ServiceRegistry.getService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      26: astore_3
      27: aload_3
      28: ifnull        46
      31: ldc           #13                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      33: aload_3
      34: invokeinterface #14,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getValue:()Ljava/lang/Object;
      39: invokevirtual #15                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #13                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      45: areturn
      46: aconst_null
      47: areturn

  public void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: return

  public void stop(org.jboss.msc.service.StopContext);
    Code:
       0: return

  public java.lang.Void getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getValue:()Ljava/lang/Void;
       4: areturn
}
