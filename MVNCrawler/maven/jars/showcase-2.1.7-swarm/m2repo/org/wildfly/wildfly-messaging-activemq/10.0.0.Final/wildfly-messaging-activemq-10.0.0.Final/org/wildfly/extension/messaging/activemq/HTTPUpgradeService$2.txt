Compiled from "HTTPUpgradeService.java"
final class org.wildfly.extension.messaging.activemq.HTTPUpgradeService$2 implements org.xnio.ChannelListener<org.xnio.StreamConnection> {
  final java.lang.String val$protocolName;

  final java.lang.String val$acceptorName;

  final org.apache.activemq.artemis.core.server.ActiveMQServer val$activemqServer;

  org.wildfly.extension.messaging.activemq.HTTPUpgradeService$2(java.lang.String, java.lang.String, org.apache.activemq.artemis.core.server.ActiveMQServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$protocolName:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$acceptorName:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$activemqServer:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: getstatic     #5                  // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
       3: ldc           #6                  // String Switching to %s protocol for %s http-acceptor
       5: aload_0
       6: getfield      #1                  // Field val$protocolName:Ljava/lang/String;
       9: aload_0
      10: getfield      #2                  // Field val$acceptorName:Ljava/lang/String;
      13: invokeinterface #7,  4            // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: new           #8                  // class org/xnio/netty/transport/WrappingXnioSocketChannel
      21: dup
      22: aload_1
      23: invokespecial #9                  // Method org/xnio/netty/transport/WrappingXnioSocketChannel."<init>":(Lorg/xnio/StreamConnection;)V
      26: astore_2
      27: aload_0
      28: getfield      #3                  // Field val$activemqServer:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      31: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getRemotingService:()Lorg/apache/activemq/artemis/core/remoting/server/RemotingService;
      36: astore_3
      37: aload_3
      38: aload_0
      39: getfield      #2                  // Field val$acceptorName:Ljava/lang/String;
      42: invokeinterface #11,  2           // InterfaceMethod org/apache/activemq/artemis/core/remoting/server/RemotingService.getAcceptor:(Ljava/lang/String;)Lorg/apache/activemq/artemis/spi/core/remoting/Acceptor;
      47: checkcast     #12                 // class org/apache/activemq/artemis/core/remoting/impl/netty/NettyAcceptor
      50: astore        4
      52: aload         4
      54: aload_2
      55: invokevirtual #13                 // Method org/apache/activemq/artemis/core/remoting/impl/netty/NettyAcceptor.transfer:(Lio/netty/channel/Channel;)V
      58: aload_1
      59: invokevirtual #14                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      62: invokevirtual #15                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      65: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class org/xnio/StreamConnection
       5: invokevirtual #17                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return
}
