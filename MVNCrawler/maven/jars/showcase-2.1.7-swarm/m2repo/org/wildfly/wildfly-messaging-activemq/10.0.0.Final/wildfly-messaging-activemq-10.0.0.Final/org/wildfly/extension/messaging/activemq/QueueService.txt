Compiled from "QueueService.java"
class org.wildfly.extension.messaging.activemq.QueueService implements org.jboss.msc.service.Service<java.lang.Void> {
  private final org.jboss.msc.value.InjectedValue<org.apache.activemq.artemis.core.server.ActiveMQServer> activeMQServer;

  private final org.apache.activemq.artemis.core.config.CoreQueueConfiguration queueConfiguration;

  private final boolean temporary;

  public org.wildfly.extension.messaging.activemq.QueueService(org.apache.activemq.artemis.core.config.CoreQueueConfiguration, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jboss/msc/value/InjectedValue
       8: dup
       9: invokespecial #3                  // Method org/jboss/msc/value/InjectedValue."<init>":()V
      12: putfield      #4                  // Field activeMQServer:Lorg/jboss/msc/value/InjectedValue;
      15: aload_1
      16: ifnonnull     30
      19: getstatic     #5                  // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
      22: ldc           #6                  // String queueConfiguration
      24: invokeinterface #7,  2            // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.nullVar:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: aload_0
      31: aload_1
      32: putfield      #8                  // Field queueConfiguration:Lorg/apache/activemq/artemis/core/config/CoreQueueConfiguration;
      35: aload_0
      36: iload_2
      37: putfield      #9                  // Field temporary:Z
      40: return

  public synchronized void start(org.jboss.msc.service.StartContext) throws org.jboss.msc.service.StartException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeMQServer:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #10                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #11                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      10: astore_2
      11: aload_2
      12: new           #12                 // class org/apache/activemq/artemis/api/core/SimpleString
      15: dup
      16: aload_0
      17: getfield      #8                  // Field queueConfiguration:Lorg/apache/activemq/artemis/core/config/CoreQueueConfiguration;
      20: invokevirtual #13                 // Method org/apache/activemq/artemis/core/config/CoreQueueConfiguration.getAddress:()Ljava/lang/String;
      23: invokespecial #14                 // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
      26: new           #12                 // class org/apache/activemq/artemis/api/core/SimpleString
      29: dup
      30: aload_0
      31: getfield      #8                  // Field queueConfiguration:Lorg/apache/activemq/artemis/core/config/CoreQueueConfiguration;
      34: invokevirtual #15                 // Method org/apache/activemq/artemis/core/config/CoreQueueConfiguration.getName:()Ljava/lang/String;
      37: invokespecial #14                 // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #8                  // Field queueConfiguration:Lorg/apache/activemq/artemis/core/config/CoreQueueConfiguration;
      44: invokevirtual #16                 // Method org/apache/activemq/artemis/core/config/CoreQueueConfiguration.getFilterString:()Ljava/lang/String;
      47: invokestatic  #17                 // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      50: aload_0
      51: getfield      #8                  // Field queueConfiguration:Lorg/apache/activemq/artemis/core/config/CoreQueueConfiguration;
      54: invokevirtual #18                 // Method org/apache/activemq/artemis/core/config/CoreQueueConfiguration.isDurable:()Z
      57: aload_0
      58: getfield      #9                  // Field temporary:Z
      61: invokeinterface #19,  6           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.deployQueue:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;ZZ)Lorg/apache/activemq/artemis/core/server/Queue;
      66: pop
      67: goto          80
      70: astore_2
      71: new           #21                 // class org/jboss/msc/service/StartException
      74: dup
      75: aload_2
      76: invokespecial #22                 // Method org/jboss/msc/service/StartException."<init>":(Ljava/lang/Throwable;)V
      79: athrow
      80: return
    Exception table:
       from    to  target type
           0    67    70   Class java/lang/Exception

  public synchronized void stop(org.jboss.msc.service.StopContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeMQServer:Lorg/jboss/msc/value/InjectedValue;
       4: invokevirtual #10                 // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
       7: checkcast     #11                 // class org/apache/activemq/artemis/core/server/ActiveMQServer
      10: astore_2
      11: aload_2
      12: new           #12                 // class org/apache/activemq/artemis/api/core/SimpleString
      15: dup
      16: aload_0
      17: getfield      #8                  // Field queueConfiguration:Lorg/apache/activemq/artemis/core/config/CoreQueueConfiguration;
      20: invokevirtual #15                 // Method org/apache/activemq/artemis/core/config/CoreQueueConfiguration.getName:()Ljava/lang/String;
      23: invokespecial #14                 // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
      26: aconst_null
      27: iconst_0
      28: invokeinterface #23,  4           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.destroyQueue:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/security/SecurityAuth;Z)V
      33: goto          54
      36: astore_2
      37: getstatic     #5                  // Field org/wildfly/extension/messaging/activemq/logging/MessagingLogger.ROOT_LOGGER:Lorg/wildfly/extension/messaging/activemq/logging/MessagingLogger;
      40: ldc           #24                 // String queue
      42: aload_0
      43: getfield      #8                  // Field queueConfiguration:Lorg/apache/activemq/artemis/core/config/CoreQueueConfiguration;
      46: invokevirtual #15                 // Method org/apache/activemq/artemis/core/config/CoreQueueConfiguration.getName:()Ljava/lang/String;
      49: invokeinterface #25,  3           // InterfaceMethod org/wildfly/extension/messaging/activemq/logging/MessagingLogger.failedToDestroy:(Ljava/lang/String;Ljava/lang/String;)V
      54: return
    Exception table:
       from    to  target type
           0    33    36   Class java/lang/Exception

  public java.lang.Void getValue() throws java.lang.IllegalStateException;
    Code:
       0: aconst_null
       1: areturn

  org.jboss.msc.value.InjectedValue<org.apache.activemq.artemis.core.server.ActiveMQServer> getActiveMQServer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeMQServer:Lorg/jboss/msc/value/InjectedValue;
       4: areturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getValue:()Ljava/lang/Void;
       4: areturn
}
