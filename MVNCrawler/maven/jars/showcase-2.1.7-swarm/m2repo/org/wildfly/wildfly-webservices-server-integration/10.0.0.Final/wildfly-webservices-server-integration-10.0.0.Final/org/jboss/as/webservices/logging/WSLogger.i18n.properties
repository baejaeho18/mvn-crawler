#####################################################################################################
#
# This file is for reference only, changes have no effect on the generated interface implementations.
#
#####################################################################################################

# Id: 1
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Cannot load WS deployment aspects from %s
# @param 1: resourcePath - 
cannotLoadDeploymentAspectsDefinitionFile=Cannot load WS deployment aspects from %s
# Id: 2
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Activating WebServices Extension
activatingWebservicesExtension=Activating WebServices Extension
# Id: 3
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Starting %s
# @param 1: object - 
starting=Starting %s
# Id: 4
# Level: org.jboss.logging.Logger.Level.INFO
# Message: Stopping %s
# @param 1: object - 
stopping=Stopping %s
# Id: 5
# Level: org.jboss.logging.Logger.Level.FATAL
# Message: Error while creating configuration service
configServiceCreationFailed=Error while creating configuration service
# Id: 6
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Error while destroying configuration service
configServiceDestroyFailed=Error while destroying configuration service
# Id: 7
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Could not read WSDL from: %s
# @param 1: wsdlLocation - 
cannotReadWsdl=Could not read WSDL from: %s
# Id: 8
# Level: org.jboss.logging.Logger.Level.WARN
# Message: [JAXWS 2.2 spec, section 7.7] The @WebService and @WebServiceProvider annotations are mutually exclusive - %s won't be considered as a webservice endpoint, since it doesn't meet that requirement
# @param 1: className - 
mutuallyExclusiveAnnotations=[JAXWS 2.2 spec, section 7.7] The @WebService and @WebServiceProvider annotations are mutually exclusive - %s won't be considered as a webservice endpoint, since it doesn't meet that requirement
# Id: 9
# Level: org.jboss.logging.Logger.Level.WARN
# Message: WebService endpoint class cannot be final - %s won't be considered as a webservice endpoint
# @param 1: className - 
finalEndpointClassDetected=WebService endpoint class cannot be final - %s won't be considered as a webservice endpoint
# Id: 10
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Ignoring <port-component-ref> without <service-endpoint-interface> and <port-qname>: %s
# @param 1: o - 
ignoringPortComponentRef=Ignoring <port-component-ref> without <service-endpoint-interface> and <port-qname>: %s
# Id: 11
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Cannot register record processor in JMX server
cannotRegisterRecordProcessor=Cannot register record processor in JMX server
# Id: 12
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Cannot unregister record processor from JMX server
cannotUnregisterRecordProcessor=Cannot unregister record processor from JMX server
# Id: 13
# Level: org.jboss.logging.Logger.Level.INFO
# Message: MBeanServer not available, skipping registration/unregistration of %s
# @param 1: bean - 
mBeanServerNotAvailable=MBeanServer not available, skipping registration/unregistration of %s
# Id: 14
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Multiple EJB3 endpoints in the same deployment with different declared security roles; be aware this might be a security risk if you're not controlling allowed roles (@RolesAllowed) on each ws endpoint method.
multipleEndpointsWithDifferentDeclaredSecurityRoles=Multiple EJB3 endpoints in the same deployment with different declared security roles; be aware this might be a security risk if you're not controlling allowed roles (@RolesAllowed) on each ws endpoint method.
# Id: 15
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Cannot register endpoint: %s in JMX server
# @param 1: endpoint - 
cannotRegisterEndpoint=Cannot register endpoint: %s in JMX server
# Id: 16
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Cannot unregister endpoint: %s from JMX server
# @param 1: endpoint - 
cannotUnregisterEndpoint=Cannot unregister endpoint: %s from JMX server
# Id: 17
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Invalid handler chain file: %s
# @param 1: fileName - 
invalidHandlerChainFile=Invalid handler chain file: %s
# Id: 18
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Web service method %s must not be static or final. See section 5.3.2.4.2 of "Web Services for Java EE, Version 1.4".
# @param 1: staticWebMethod - 
webMethodMustNotBeStaticOrFinal=Web service method %s must not be static or final. See section 5.3.2.4.2 of "Web Services for Java EE, Version 1.4".
# Id: 19
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Web service method %s must be public. See section 5.3.2.4.2 of "Web Services for Java EE, Version 1.4".
# @param 1: staticWebMethod - 
webMethodMustBePublic=Web service method %s must be public. See section 5.3.2.4.2 of "Web Services for Java EE, Version 1.4".
# Id: 20
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Web service implementation class %s does not contain method %s
# @param 1: endpointClass - 
# @param 2: potentialWebMethod - 
webServiceMethodNotFound=Web service implementation class %s does not contain method %s
# Id: 21
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Web service implementation class %s does not contain an accessible method %s
# @param 1: endpointClass - 
# @param 2: potentialWebMethod - 
accessibleWebServiceMethodNotFound=Web service implementation class %s does not contain an accessible method %s
# Id: 22
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Web service implementation class %s may not declare a finalize() method. See section 5.3.2.4.2 of "Web Services for Java EE, Version 1.4".
# @param 1: seiClass - 
finalizeMethodNotAllowed=Web service implementation class %s may not declare a finalize() method. See section 5.3.2.4.2 of "Web Services for Java EE, Version 1.4".
# Id: 23
# Message: Null endpoint name
nullEndpointName=Null endpoint name
# Id: 24
# Message: Null endpoint class
nullEndpointClass=Null endpoint class
# Id: 25
# Message: Cannot resolve module or classloader for deployment %s
# @param 1: o - 
classLoaderResolutionFailed=Cannot resolve module or classloader for deployment %s
# Id: 26
# Message: Handler chain config file %s not found in %s
# @param 1: filePath - 
# @param 2: resourceRoot - 
missingHandlerChainConfigFile=Handler chain config file %s not found in %s
# Id: 27
# Message: Unexpected element: %s
# @param 1: elementName - 
unexpectedElement=Unexpected element: %s
# Id: 28
# Message: Unexpected end tag: %s
# @param 1: tagName - 
unexpectedEndTag=Unexpected end tag: %s
# Id: 29
# Message: Reached end of xml document unexpectedly
unexpectedEndOfDocument=Reached end of xml document unexpectedly
# Id: 30
# Message: Could not find class attribute for deployment aspect
missingDeploymentAspectClassAttribute=Could not find class attribute for deployment aspect
# Id: 31
# Message: Could not create a deployment aspect of class: %s
# @param 1: className - 
cannotInstantiateDeploymentAspect=Could not create a deployment aspect of class: %s
# Id: 32
# Message: Could not find property name attribute for deployment aspect: %s
# @param 1: deploymentAspect - 
missingPropertyNameAttribute=Could not find property name attribute for deployment aspect: %s
# Id: 33
# Message: Could not find property class attribute for deployment aspect: %s
# @param 1: deploymentAspect - 
missingPropertyClassAttribute=Could not find property class attribute for deployment aspect: %s
# Id: 34
# Message: Unsupported property class: %s
# @param 1: className - 
unsupportedPropertyClass=Unsupported property class: %s
# Id: 35
# Message: Could not create list of type: %s
# @param 1: className - 
cannotInstantiateList=Could not create list of type: %s
# Id: 36
# Message: Could not create map of type: %s
# @param 1: className - 
cannotInstantiateMap=Could not create map of type: %s
# Id: 37
# Message: No metrics available
noMetricsAvailable=No metrics available
# Id: 38
# Message: Cannot find component view: %s
# @param 1: viewName - 
cannotFindComponentView=Cannot find component view: %s
# Id: 39
# Message: Child '%s' not found for VirtualFile: %s
# @param 1: child - 
# @param 2: file - 
missingChild=Child '%s' not found for VirtualFile: %s
# Id: 40
# Message: Failed to create context
createContextPhaseFailed=Failed to create context
# Id: 41
# Message: Failed to start context
startContextPhaseFailed=Failed to start context
# Id: 42
# Message: Failed to stop context
stopContextPhaseFailed=Failed to stop context
# Id: 43
# Message: Failed to destroy context
destroyContextPhaseFailed=Failed to destroy context
# Id: 44
# Message: Cannot create servlet delegate: %s
# @param 1: className - 
cannotInstantiateServletDelegate=Cannot create servlet delegate: %s
# Id: 45
# Message: Cannot obtain deployment property: %s
# @param 1: propertyName - 
missingDeploymentProperty=Cannot obtain deployment property: %s
# Id: 46
# Message: Multiple security domains not supported. First domain: '%s' second domain: '%s'
# @param 1: firstDomain - 
# @param 2: secondDomain - 
multipleSecurityDomainsDetected=Multiple security domains not supported. First domain: '%s' second domain: '%s'
# Id: 47
# Message: Web Service endpoint %s with URL pattern %s is already registered. Web service endpoint %s is requesting the same URL pattern.
# @param 1: firstClass - 
# @param 2: urlPattern - 
# @param 3: secondClass - 
sameUrlPatternRequested=Web Service endpoint %s with URL pattern %s is already registered. Web service endpoint %s is requesting the same URL pattern.
# Id: 48
# Message: @WebServiceRef injection target is invalid.  Only setter methods are allowed: %s
# @param 1: o - 
invalidServiceRefSetterMethodName=@WebServiceRef injection target is invalid.  Only setter methods are allowed: %s
# Id: 49
# Message: @WebServiceRef attribute 'name' is required for class level annotations.
requiredServiceRefName=@WebServiceRef attribute 'name' is required for class level annotations.
# Id: 50
# Message: @WebServiceRef attribute 'type' is required for class level annotations.
requiredServiceRefType=@WebServiceRef attribute 'type' is required for class level annotations.
# Id: 51
# Message: Config %s doesn't exist
# @param 1: configName - 
missingConfig=Config %s doesn't exist
# Id: 52
# Message: Unsupported handler chain type: %s. Supported types are either %s or %s
# @param 1: unknownChainType - 
# @param 2: knownChainType1 - 
# @param 3: knownChainType2 - 
wrongHandlerChainType=Unsupported handler chain type: %s. Supported types are either %s or %s
# Id: 53
# Message: Cannot add new handler chain of type %s with id %s. This id is already used in config %s for another chain.
# @param 1: chainType - 
# @param 2: handlerChainId - 
# @param 3: configId - 
multipleHandlerChainsWithSameId=Cannot add new handler chain of type %s with id %s. This id is already used in config %s for another chain.
# Id: 54
# Message: Config %s: %s handler chain with id %s doesn't exist
# @param 1: configName - 
# @param 2: handlerChainType - 
# @param 3: handlerChainId - 
missingHandlerChain=Config %s: %s handler chain with id %s doesn't exist
# Id: 57
# Message: Unable to get URL for: %s
# @param 1: resourcePath - 
cannotGetURLForDescriptor=Unable to get URL for: %s
# Id: 58
# Message: JAX-RPC not supported
jaxRpcNotSupported=JAX-RPC not supported
# Id: 59
# Message: %s library (%s) detected in ws endpoint deployment; either provide a proper deployment replacing embedded libraries with container module dependencies or disable the webservices subsystem for the current deployment adding a proper jboss-deployment-structure.xml descriptor to it. The former approach is recommended, as the latter approach causes most of the webservices Java EE and any JBossWS specific functionality to be disabled.
# @param 1: libraryName - 
# @param 2: jar - 
invalidLibraryInDeployment=%s library (%s) detected in ws endpoint deployment; either provide a proper deployment replacing embedded libraries with container module dependencies or disable the webservices subsystem for the current deployment adding a proper jboss-deployment-structure.xml descriptor to it. The former approach is recommended, as the latter approach causes most of the webservices Java EE and any JBossWS specific functionality to be disabled.
# Id: 60
# Message: Web service endpoint class %s not found
# @param 1: endpointClassName - 
endpointClassNotFound=Web service endpoint class %s not found
# Id: 61
# Message: The endpointInterface %s declared in the @WebService annotation on web service implementation bean %s was not found.
# @param 1: endpointInterface - 
# @param 2: endpointClass - 
declaredEndpointInterfaceClassNotFound=The endpointInterface %s declared in the @WebService annotation on web service implementation bean %s was not found.
# Id: 62
# Message: Class verification of Java Web Service implementation class %s failed.
# @param 1: seiClass - 
jwsWebServiceClassVerificationFailed=Class verification of Java Web Service implementation class %s failed.
# Id: 63
# Message: Could not update WS server configuration because of pending former model update(s) requiring reload.
couldNotUpdateServerConfigBecauseOfReloadRequired=Could not update WS server configuration because of pending former model update(s) requiring reload.
# Id: 64
# Message: Could not update WS server configuration because of existing WS deployment on the server.
couldNotUpdateServerConfigBecauseOfExistingWSDeployment=Could not update WS server configuration because of existing WS deployment on the server.
# Id: 65
# Level: org.jboss.logging.Logger.Level.WARN
# Message: Annotation '@%s' found on class '%s'. Perhaps you forgot to add a '%s' module dependency to your deployment?
# @param 1: annotation - 
# @param 2: clazz - 
# @param 3: module - 
missingModuleDependency=Annotation '@%s' found on class '%s'. Perhaps you forgot to add a '%s' module dependency to your deployment?
# Id: 66
# Message: Servlet class %s declared in web.xml; either provide a proper deployment relying on JBossWS or disable the webservices subsystem for the current deployment adding a proper jboss-deployment-structure.xml descriptor to it. The former approach is recommended, as the latter approach causes most of the webservices Java EE and any JBossWS specific functionality to be disabled.
# @param 1: servletClass - 
invalidWSServlet=Servlet class %s declared in web.xml; either provide a proper deployment relying on JBossWS or disable the webservices subsystem for the current deployment adding a proper jboss-deployment-structure.xml descriptor to it. The former approach is recommended, as the latter approach causes most of the webservices Java EE and any JBossWS specific functionality to be disabled.
# Id: 67
# Level: org.jboss.logging.Logger.Level.ERROR
# Message: Could not activate the webservices subsystem.
couldNotActivateSubsystem=Could not activate the webservices subsystem.
# Id: 68
# Message: Service %s not available
# @param 1: serviceName - 
serviceNotAvailable=Service %s not available
