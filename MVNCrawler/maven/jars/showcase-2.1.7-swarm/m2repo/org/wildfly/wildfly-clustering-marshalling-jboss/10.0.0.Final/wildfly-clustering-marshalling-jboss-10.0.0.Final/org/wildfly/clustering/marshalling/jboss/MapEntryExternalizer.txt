Compiled from "MapEntryExternalizer.java"
public class org.wildfly.clustering.marshalling.jboss.MapEntryExternalizer<T extends java.util.Map$Entry<java.lang.Object, java.lang.Object>> implements org.wildfly.clustering.marshalling.Externalizer<T> {
  private final java.lang.Class<T> targetClass;

  private final java.util.function.BiFunction<java.lang.Object, java.lang.Object, T> factory;

  org.wildfly.clustering.marshalling.jboss.MapEntryExternalizer(java.lang.Class, java.util.function.BiFunction<java.lang.Object, java.lang.Object, T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field targetClass:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field factory:Ljava/util/function/BiFunction;
      14: return

  public void writeObject(java.io.ObjectOutput, T) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #4,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: invokeinterface #5,  2            // InterfaceMethod java/io/ObjectOutput.writeObject:(Ljava/lang/Object;)V
      12: aload_1
      13: aload_2
      14: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      19: invokeinterface #5,  2            // InterfaceMethod java/io/ObjectOutput.writeObject:(Ljava/lang/Object;)V
      24: return

  public T readObject(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field factory:Ljava/util/function/BiFunction;
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod java/io/ObjectInput.readObject:()Ljava/lang/Object;
      10: aload_1
      11: invokeinterface #7,  1            // InterfaceMethod java/io/ObjectInput.readObject:()Ljava/lang/Object;
      16: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #9                  // class java/util/Map$Entry
      24: areturn

  public java.lang.Class<? extends T> getTargetClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetClass:Ljava/lang/Class;
       4: areturn

  public java.lang.Object readObject(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method readObject:(Ljava/io/ObjectInput;)Ljava/util/Map$Entry;
       5: areturn

  public void writeObject(java.io.ObjectOutput, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #9                  // class java/util/Map$Entry
       6: invokevirtual #11                 // Method writeObject:(Ljava/io/ObjectOutput;Ljava/util/Map$Entry;)V
       9: return
}
