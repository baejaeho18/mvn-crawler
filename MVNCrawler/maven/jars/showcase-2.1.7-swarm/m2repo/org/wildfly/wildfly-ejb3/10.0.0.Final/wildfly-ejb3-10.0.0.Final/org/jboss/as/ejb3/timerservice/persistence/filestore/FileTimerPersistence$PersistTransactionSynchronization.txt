Compiled from "FileTimerPersistence.java"
final class org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence$PersistTransactionSynchronization implements javax.transaction.Synchronization {
  private final java.lang.String transactionKey;

  private final java.util.concurrent.locks.Lock lock;

  private final boolean newTimer;

  private volatile org.jboss.as.ejb3.timerservice.TimerImpl timer;

  final org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence this$0;

  public org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence$PersistTransactionSynchronization(org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence, java.util.concurrent.locks.Lock, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/jboss/as/ejb3/timerservice/persistence/filestore/FileTimerPersistence;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #2                  // Field lock:Ljava/util/concurrent/locks/Lock;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field transactionKey:Ljava/lang/String;
      19: aload_0
      20: iload         4
      22: putfield      #1                  // Field newTimer:Z
      25: return

  public void beforeCompletion();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field this$0:Lorg/jboss/as/ejb3/timerservice/persistence/filestore/FileTimerPersistence;
       5: invokestatic  #7                  // Method org/jboss/as/ejb3/timerservice/persistence/filestore/FileTimerPersistence.access$200:(Lorg/jboss/as/ejb3/timerservice/persistence/filestore/FileTimerPersistence;)Lorg/jboss/msc/value/InjectedValue;
       8: invokevirtual #8                  // Method org/jboss/msc/value/InjectedValue.getValue:()Ljava/lang/Object;
      11: checkcast     #9                  // class javax/transaction/TransactionSynchronizationRegistry
      14: aload_0
      15: getfield      #6                  // Field transactionKey:Ljava/lang/String;
      18: invokeinterface #10,  2           // InterfaceMethod javax/transaction/TransactionSynchronizationRegistry.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #11                 // class org/jboss/as/ejb3/timerservice/TimerImpl
      26: putfield      #3                  // Field timer:Lorg/jboss/as/ejb3/timerservice/TimerImpl;
      29: aload_0
      30: getfield      #3                  // Field timer:Lorg/jboss/as/ejb3/timerservice/TimerImpl;
      33: ifnonnull     37
      36: return
      37: return

  public void afterCompletion(int);
    Code:
       0: new           #12                 // class org/jboss/as/ejb3/timerservice/persistence/filestore/FileTimerPersistence$PersistTransactionSynchronization$1
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #13                 // Method org/jboss/as/ejb3/timerservice/persistence/filestore/FileTimerPersistence$PersistTransactionSynchronization$1."<init>":(Lorg/jboss/as/ejb3/timerservice/persistence/filestore/FileTimerPersistence$PersistTransactionSynchronization;I)V
       9: invokestatic  #14                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: pop
      13: return

  static org.jboss.as.ejb3.timerservice.TimerImpl access$300(org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence$PersistTransactionSynchronization);
    Code:
       0: aload_0
       1: getfield      #3                  // Field timer:Lorg/jboss/as/ejb3/timerservice/TimerImpl;
       4: areturn

  static java.util.concurrent.locks.Lock access$400(org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence$PersistTransactionSynchronization);
    Code:
       0: aload_0
       1: getfield      #2                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  static boolean access$600(org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence$PersistTransactionSynchronization);
    Code:
       0: aload_0
       1: getfield      #1                  // Field newTimer:Z
       4: ireturn
}
