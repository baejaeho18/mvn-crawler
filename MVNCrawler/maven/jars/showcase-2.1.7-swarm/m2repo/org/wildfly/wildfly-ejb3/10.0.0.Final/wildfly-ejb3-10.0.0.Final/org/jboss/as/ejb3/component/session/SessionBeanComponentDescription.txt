Compiled from "SessionBeanComponentDescription.java"
public abstract class org.jboss.as.ejb3.component.session.SessionBeanComponentDescription extends org.jboss.as.ejb3.component.EJBComponentDescription {
  private boolean noInterfaceViewPresent;

  private javax.ejb.ConcurrencyManagementType concurrencyManagementType;

  private final java.util.Map<java.lang.String, javax.ejb.LockType> beanLevelLockType;

  private final java.util.Map<java.lang.String, org.jboss.as.ejb3.concurrency.AccessTimeoutDetails> beanLevelAccessTimeout;

  private final java.util.Map<org.jboss.invocation.proxy.MethodIdentifier, javax.ejb.LockType> methodLockTypes;

  private final java.util.Map<org.jboss.invocation.proxy.MethodIdentifier, org.jboss.as.ejb3.concurrency.AccessTimeoutDetails> methodAccessTimeouts;

  private final java.util.Set<org.jboss.invocation.proxy.MethodIdentifier> asynchronousMethods;

  private final java.util.Set<java.lang.String> asynchronousClasses;

  private java.lang.String mappedName;

  public org.jboss.as.ejb3.component.session.SessionBeanComponentDescription(java.lang.String, java.lang.String, org.jboss.as.ejb3.deployment.EjbJarDescription, org.jboss.msc.service.ServiceName, org.jboss.metadata.ejb.spec.SessionBeanMetaData);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #2                  // Method org/jboss/as/ejb3/component/EJBComponentDescription."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/jboss/as/ejb3/deployment/EjbJarDescription;Lorg/jboss/msc/service/ServiceName;Lorg/jboss/metadata/ejb/spec/EnterpriseBeanMetaData;)V
      11: aload_0
      12: new           #3                  // class java/util/HashMap
      15: dup
      16: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      19: putfield      #5                  // Field beanLevelLockType:Ljava/util/Map;
      22: aload_0
      23: new           #3                  // class java/util/HashMap
      26: dup
      27: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      30: putfield      #6                  // Field beanLevelAccessTimeout:Ljava/util/Map;
      33: aload_0
      34: new           #3                  // class java/util/HashMap
      37: dup
      38: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      41: putfield      #7                  // Field methodLockTypes:Ljava/util/Map;
      44: aload_0
      45: new           #3                  // class java/util/HashMap
      48: dup
      49: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      52: putfield      #8                  // Field methodAccessTimeouts:Ljava/util/Map;
      55: aload_0
      56: new           #9                  // class java/util/HashSet
      59: dup
      60: invokespecial #10                 // Method java/util/HashSet."<init>":()V
      63: putfield      #11                 // Field asynchronousMethods:Ljava/util/Set;
      66: aload_0
      67: new           #9                  // class java/util/HashSet
      70: dup
      71: invokespecial #10                 // Method java/util/HashSet."<init>":()V
      74: putfield      #12                 // Field asynchronousClasses:Ljava/util/Set;
      77: return

  public abstract boolean allowsConcurrentAccess();

  public void addLocalBusinessInterfaceViews(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          43
      16: aload_2
      17: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #16                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokespecial #17                 // Method assertNoRemoteView:(Ljava/lang/String;)V
      31: aload_0
      32: aload_3
      33: getstatic     #18                 // Field org/jboss/as/ejb3/component/MethodIntf.LOCAL:Lorg/jboss/as/ejb3/component/MethodIntf;
      36: invokevirtual #19                 // Method registerView:(Ljava/lang/String;Lorg/jboss/as/ejb3/component/MethodIntf;)Lorg/jboss/as/ejb3/component/EJBViewDescription;
      39: pop
      40: goto          7
      43: return

  public void addLocalBusinessInterfaceViews(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #21                 // Method addLocalBusinessInterfaceViews:(Ljava/util/Collection;)V
       8: return

  public void addNoInterfaceView();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field noInterfaceViewPresent:Z
       5: aload_0
       6: aload_0
       7: invokevirtual #23                 // Method getEJBClassName:()Ljava/lang/String;
      10: getstatic     #18                 // Field org/jboss/as/ejb3/component/MethodIntf.LOCAL:Lorg/jboss/as/ejb3/component/MethodIntf;
      13: invokevirtual #19                 // Method registerView:(Ljava/lang/String;Lorg/jboss/as/ejb3/component/MethodIntf;)Lorg/jboss/as/ejb3/component/EJBViewDescription;
      16: astore_1
      17: aload_1
      18: invokevirtual #24                 // Method org/jboss/as/ee/component/ViewDescription.getConfigurators:()Ljava/util/Deque;
      21: new           #25                 // class org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$1
      24: dup
      25: aload_0
      26: invokespecial #26                 // Method org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$1."<init>":(Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription;)V
      29: invokeinterface #27,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      34: pop
      35: return

  public org.jboss.as.ejb3.component.EJBViewDescription addWebserviceEndpointView();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getEJBClassName:()Ljava/lang/String;
       5: getstatic     #28                 // Field org/jboss/as/ejb3/component/MethodIntf.SERVICE_ENDPOINT:Lorg/jboss/as/ejb3/component/MethodIntf;
       8: invokevirtual #19                 // Method registerView:(Ljava/lang/String;Lorg/jboss/as/ejb3/component/MethodIntf;)Lorg/jboss/as/ejb3/component/EJBViewDescription;
      11: areturn

  public org.jboss.as.ejb3.component.EJBViewDescription addWebserviceEndpointView(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #28                 // Field org/jboss/as/ejb3/component/MethodIntf.SERVICE_ENDPOINT:Lorg/jboss/as/ejb3/component/MethodIntf;
       5: invokevirtual #19                 // Method registerView:(Ljava/lang/String;Lorg/jboss/as/ejb3/component/MethodIntf;)Lorg/jboss/as/ejb3/component/EJBViewDescription;
       8: areturn

  public void addRemoteBusinessInterfaceViews(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          43
      16: aload_2
      17: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #16                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokespecial #29                 // Method assertNoLocalView:(Ljava/lang/String;)V
      31: aload_0
      32: aload_3
      33: getstatic     #30                 // Field org/jboss/as/ejb3/component/MethodIntf.REMOTE:Lorg/jboss/as/ejb3/component/MethodIntf;
      36: invokevirtual #19                 // Method registerView:(Ljava/lang/String;Lorg/jboss/as/ejb3/component/MethodIntf;)Lorg/jboss/as/ejb3/component/EJBViewDescription;
      39: pop
      40: goto          7
      43: return

  private void assertNoRemoteView(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #31                 // Method getViews:()Ljava/util/Set;
       6: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          76
      21: aload_3
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #33                 // class org/jboss/as/ee/component/ViewDescription
      30: astore        4
      32: aload         4
      34: checkcast     #34                 // class org/jboss/as/ejb3/component/EJBViewDescription
      37: astore_2
      38: aload_1
      39: aload_2
      40: invokevirtual #35                 // Method org/jboss/as/ejb3/component/EJBViewDescription.getViewClassName:()Ljava/lang/String;
      43: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          73
      49: aload_2
      50: invokevirtual #37                 // Method org/jboss/as/ejb3/component/EJBViewDescription.getMethodIntf:()Lorg/jboss/as/ejb3/component/MethodIntf;
      53: getstatic     #30                 // Field org/jboss/as/ejb3/component/MethodIntf.REMOTE:Lorg/jboss/as/ejb3/component/MethodIntf;
      56: if_acmpne     73
      59: getstatic     #38                 // Field org/jboss/as/ejb3/logging/EjbLogger.ROOT_LOGGER:Lorg/jboss/as/ejb3/logging/EjbLogger;
      62: aload_1
      63: aload_0
      64: invokevirtual #39                 // Method getEJBName:()Ljava/lang/String;
      67: invokeinterface #40,  3           // InterfaceMethod org/jboss/as/ejb3/logging/EjbLogger.failToAddClassToLocalView:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalStateException;
      72: athrow
      73: goto          12
      76: return

  private void assertNoLocalView(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #31                 // Method getViews:()Ljava/util/Set;
       6: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          76
      21: aload_3
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #33                 // class org/jboss/as/ee/component/ViewDescription
      30: astore        4
      32: aload         4
      34: checkcast     #34                 // class org/jboss/as/ejb3/component/EJBViewDescription
      37: astore_2
      38: aload_1
      39: aload_2
      40: invokevirtual #35                 // Method org/jboss/as/ejb3/component/EJBViewDescription.getViewClassName:()Ljava/lang/String;
      43: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          73
      49: aload_2
      50: invokevirtual #37                 // Method org/jboss/as/ejb3/component/EJBViewDescription.getMethodIntf:()Lorg/jboss/as/ejb3/component/MethodIntf;
      53: getstatic     #18                 // Field org/jboss/as/ejb3/component/MethodIntf.LOCAL:Lorg/jboss/as/ejb3/component/MethodIntf;
      56: if_acmpne     73
      59: getstatic     #38                 // Field org/jboss/as/ejb3/logging/EjbLogger.ROOT_LOGGER:Lorg/jboss/as/ejb3/logging/EjbLogger;
      62: aload_1
      63: aload_0
      64: invokevirtual #39                 // Method getEJBName:()Ljava/lang/String;
      67: invokeinterface #40,  3           // InterfaceMethod org/jboss/as/ejb3/logging/EjbLogger.failToAddClassToLocalView:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalStateException;
      72: athrow
      73: goto          12
      76: return

  public boolean hasNoInterfaceView();
    Code:
       0: aload_0
       1: getfield      #22                 // Field noInterfaceViewPresent:Z
       4: ireturn

  public void setBeanLevelLockType(java.lang.String, javax.ejb.LockType);
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanLevelLockType:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.util.Map<java.lang.String, javax.ejb.LockType> getBeanLevelLockType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field beanLevelLockType:Ljava/util/Map;
       4: areturn

  public void setLockType(javax.ejb.LockType, org.jboss.invocation.proxy.MethodIdentifier);
    Code:
       0: aload_0
       1: getfield      #7                  // Field methodLockTypes:Ljava/util/Map;
       4: aload_2
       5: aload_1
       6: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.util.Map<org.jboss.invocation.proxy.MethodIdentifier, javax.ejb.LockType> getMethodApplicableLockTypes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field methodLockTypes:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, org.jboss.as.ejb3.concurrency.AccessTimeoutDetails> getBeanLevelAccessTimeout();
    Code:
       0: aload_0
       1: getfield      #6                  // Field beanLevelAccessTimeout:Ljava/util/Map;
       4: areturn

  public void setBeanLevelAccessTimeout(java.lang.String, org.jboss.as.ejb3.concurrency.AccessTimeoutDetails);
    Code:
       0: aload_0
       1: getfield      #6                  // Field beanLevelAccessTimeout:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void setAccessTimeout(org.jboss.as.ejb3.concurrency.AccessTimeoutDetails, org.jboss.invocation.proxy.MethodIdentifier);
    Code:
       0: aload_0
       1: getfield      #8                  // Field methodAccessTimeouts:Ljava/util/Map;
       4: aload_2
       5: aload_1
       6: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.util.Map<org.jboss.invocation.proxy.MethodIdentifier, org.jboss.as.ejb3.concurrency.AccessTimeoutDetails> getMethodApplicableAccessTimeouts();
    Code:
       0: aload_0
       1: getfield      #8                  // Field methodAccessTimeouts:Ljava/util/Map;
       4: areturn

  public javax.ejb.ConcurrencyManagementType getConcurrencyManagementType();
    Code:
       0: aload_0
       1: getfield      #42                 // Field concurrencyManagementType:Ljavax/ejb/ConcurrencyManagementType;
       4: areturn

  public void setConcurrencyManagementType(javax.ejb.ConcurrencyManagementType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field concurrencyManagementType:Ljavax/ejb/ConcurrencyManagementType;
       5: return

  public java.lang.String getMappedName();
    Code:
       0: aload_0
       1: getfield      #43                 // Field mappedName:Ljava/lang/String;
       4: areturn

  public void setMappedName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field mappedName:Ljava/lang/String;
       5: return

  public void addAsynchronousMethod(org.jboss.invocation.proxy.MethodIdentifier);
    Code:
       0: aload_0
       1: getfield      #11                 // Field asynchronousMethods:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Set<org.jboss.invocation.proxy.MethodIdentifier> getAsynchronousMethods();
    Code:
       0: aload_0
       1: getfield      #11                 // Field asynchronousMethods:Ljava/util/Set;
       4: areturn

  public void addAsynchronousClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field asynchronousClasses:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Set<java.lang.String> getAsynchronousClasses();
    Code:
       0: aload_0
       1: getfield      #12                 // Field asynchronousClasses:Ljava/util/Set;
       4: areturn

  public abstract org.jboss.as.ejb3.component.session.SessionBeanComponentDescription$SessionBeanType getSessionBeanType();

  protected void setupViewInterceptors(org.jboss.as.ejb3.component.EJBViewDescription);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #45                 // Method org/jboss/as/ejb3/component/EJBComponentDescription.setupViewInterceptors:(Lorg/jboss/as/ejb3/component/EJBViewDescription;)V
       5: aload_1
       6: invokestatic  #46                 // Method addTxManagementInterceptorForView:(Lorg/jboss/as/ee/component/ViewDescription;)V
       9: aload_1
      10: invokevirtual #47                 // Method org/jboss/as/ejb3/component/EJBViewDescription.isEjb2xView:()Z
      13: ifeq          30
      16: aload_1
      17: invokevirtual #48                 // Method org/jboss/as/ejb3/component/EJBViewDescription.getConfigurators:()Ljava/util/Deque;
      20: aload_0
      21: invokevirtual #49                 // Method getSessionBeanObjectViewConfigurator:()Lorg/jboss/as/ee/component/ViewConfigurator;
      24: invokeinterface #27,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      29: pop
      30: return

  protected abstract org.jboss.as.ee.component.ViewConfigurator getSessionBeanObjectViewConfigurator();

  protected static void addTxManagementInterceptorForView(org.jboss.as.ee.component.ViewDescription);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method org/jboss/as/ee/component/ViewDescription.getConfigurators:()Ljava/util/Deque;
       4: new           #50                 // class org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$2
       7: dup
       8: invokespecial #51                 // Method org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$2."<init>":()V
      11: invokeinterface #27,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  protected void addCurrentInvocationContextFactory();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getConfigurators:()Ljava/util/Deque;
       4: new           #53                 // class org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$3
       7: dup
       8: aload_0
       9: invokespecial #54                 // Method org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$3."<init>":(Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription;)V
      12: invokeinterface #27,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  protected void addCurrentInvocationContextFactory(org.jboss.as.ee.component.ViewDescription);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/jboss/as/ee/component/ViewDescription.getConfigurators:()Ljava/util/Deque;
       4: new           #55                 // class org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$4
       7: dup
       8: aload_0
       9: invokespecial #56                 // Method org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$4."<init>":(Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription;)V
      12: invokeinterface #27,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  public boolean isSession();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isSingleton();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getSessionBeanType:()Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType;
       4: getstatic     #58                 // Field org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType.SINGLETON:Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isStateful();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getSessionBeanType:()Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType;
       4: getstatic     #59                 // Field org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType.STATEFUL:Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isStateless();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getSessionBeanType:()Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType;
       4: getstatic     #60                 // Field org/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType.STATELESS:Lorg/jboss/as/ejb3/component/session/SessionBeanComponentDescription$SessionBeanType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public org.jboss.metadata.ejb.spec.SessionBeanMetaData getDescriptorData();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method org/jboss/as/ejb3/component/EJBComponentDescription.getDescriptorData:()Lorg/jboss/metadata/ejb/spec/EnterpriseBeanMetaData;
       4: checkcast     #62                 // class org/jboss/metadata/ejb/spec/SessionBeanMetaData
       7: areturn

  private boolean isNotOverriden(java.lang.reflect.Method, java.lang.Class<?>, org.jboss.as.server.deployment.reflect.DeploymentReflectionIndex) throws org.jboss.as.server.deployment.DeploymentUnitProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #63                 // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #64                 // Method java/lang/reflect/Modifier.isPrivate:(I)Z
       7: ifne          26
      10: aload_3
      11: aload_2
      12: aload_1
      13: invokestatic  #65                 // Method org/jboss/as/server/deployment/reflect/ClassReflectionIndexUtil.findRequiredMethod:(Lorg/jboss/as/server/deployment/reflect/DeploymentReflectionIndex;Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      16: invokevirtual #66                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      19: aload_1
      20: invokevirtual #66                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public org.jboss.metadata.ejb.spec.EnterpriseBeanMetaData getDescriptorData();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getDescriptorData:()Lorg/jboss/metadata/ejb/spec/SessionBeanMetaData;
       4: areturn

  static boolean access$000(org.jboss.as.ejb3.component.session.SessionBeanComponentDescription, java.lang.reflect.Method, java.lang.Class, org.jboss.as.server.deployment.reflect.DeploymentReflectionIndex) throws org.jboss.as.server.deployment.DeploymentUnitProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method isNotOverriden:(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/jboss/as/server/deployment/reflect/DeploymentReflectionIndex;)Z
       7: ireturn
}
