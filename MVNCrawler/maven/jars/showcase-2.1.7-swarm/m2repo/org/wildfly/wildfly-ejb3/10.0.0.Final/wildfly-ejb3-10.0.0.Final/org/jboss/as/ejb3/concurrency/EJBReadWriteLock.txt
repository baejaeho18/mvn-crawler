Compiled from "EJBReadWriteLock.java"
public class org.jboss.as.ejb3.concurrency.EJBReadWriteLock implements java.util.concurrent.locks.ReadWriteLock,java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.ThreadLocal<java.lang.Integer> readLockCount;

  private final java.util.concurrent.locks.ReentrantReadWriteLock delegate;

  private final java.util.concurrent.locks.Lock readLock;

  private final java.util.concurrent.locks.Lock writeLock;

  static final boolean $assertionsDisabled;

  public org.jboss.as.ejb3.concurrency.EJBReadWriteLock();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/lang/ThreadLocal
       8: dup
       9: invokespecial #7                  // Method java/lang/ThreadLocal."<init>":()V
      12: putfield      #8                  // Field readLockCount:Ljava/lang/ThreadLocal;
      15: aload_0
      16: new           #9                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      19: dup
      20: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      23: putfield      #4                  // Field delegate:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: aload_0
      27: new           #11                 // class org/jboss/as/ejb3/concurrency/EJBReadWriteLock$ReadLock
      30: dup
      31: aload_0
      32: invokespecial #12                 // Method org/jboss/as/ejb3/concurrency/EJBReadWriteLock$ReadLock."<init>":(Lorg/jboss/as/ejb3/concurrency/EJBReadWriteLock;)V
      35: putfield      #13                 // Field readLock:Ljava/util/concurrent/locks/Lock;
      38: aload_0
      39: new           #14                 // class org/jboss/as/ejb3/concurrency/EJBReadWriteLock$WriteLock
      42: dup
      43: aload_0
      44: invokespecial #15                 // Method org/jboss/as/ejb3/concurrency/EJBReadWriteLock$WriteLock."<init>":(Lorg/jboss/as/ejb3/concurrency/EJBReadWriteLock;)V
      47: putfield      #16                 // Field writeLock:Ljava/util/concurrent/locks/Lock;
      50: return

  private void checkLoopback();
    Code:
       0: aload_0
       1: getfield      #8                  // Field readLockCount:Ljava/lang/ThreadLocal;
       4: invokevirtual #17                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #18                 // class java/lang/Integer
      10: astore_1
      11: aload_1
      12: ifnull        47
      15: getstatic     #19                 // Field $assertionsDisabled:Z
      18: ifne          38
      21: aload_1
      22: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      25: ifgt          38
      28: new           #21                 // class java/lang/AssertionError
      31: dup
      32: ldc           #22                 // String readLockCount is set, but to 0
      34: invokespecial #23                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      37: athrow
      38: getstatic     #24                 // Field org/jboss/as/ejb3/logging/EjbLogger.ROOT_LOGGER:Lorg/jboss/as/ejb3/logging/EjbLogger;
      41: invokeinterface #25,  1           // InterfaceMethod org/jboss/as/ejb3/logging/EjbLogger.failToUpgradeToWriteLock:()Ljavax/ejb/IllegalLoopbackException;
      46: athrow
      47: return

  private void decReadLockCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field readLockCount:Ljava/lang/ThreadLocal;
       4: invokevirtual #17                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #18                 // class java/lang/Integer
      10: astore_1
      11: getstatic     #19                 // Field $assertionsDisabled:Z
      14: ifne          31
      17: aload_1
      18: ifnonnull     31
      21: new           #21                 // class java/lang/AssertionError
      24: dup
      25: ldc           #26                 // String can\'t decrease, readLockCount is not set
      27: invokespecial #23                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      30: athrow
      31: aload_1
      32: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      35: iconst_1
      36: isub
      37: istore_2
      38: iload_2
      39: ifne          52
      42: aload_0
      43: getfield      #8                  // Field readLockCount:Ljava/lang/ThreadLocal;
      46: invokevirtual #27                 // Method java/lang/ThreadLocal.remove:()V
      49: goto          67
      52: aload_0
      53: getfield      #8                  // Field readLockCount:Ljava/lang/ThreadLocal;
      56: new           #18                 // class java/lang/Integer
      59: dup
      60: iload_2
      61: invokespecial #28                 // Method java/lang/Integer."<init>":(I)V
      64: invokevirtual #29                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      67: return

  private void incReadLockCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field readLockCount:Ljava/lang/ThreadLocal;
       4: invokevirtual #17                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #18                 // class java/lang/Integer
      10: astore_1
      11: aload_1
      12: ifnonnull     20
      15: iconst_1
      16: istore_2
      17: goto          27
      20: aload_1
      21: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      24: iconst_1
      25: iadd
      26: istore_2
      27: aload_0
      28: getfield      #8                  // Field readLockCount:Ljava/lang/ThreadLocal;
      31: new           #18                 // class java/lang/Integer
      34: dup
      35: iload_2
      36: invokespecial #28                 // Method java/lang/Integer."<init>":(I)V
      39: invokevirtual #29                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      42: return

  public java.util.concurrent.locks.Lock readLock();
    Code:
       0: aload_0
       1: getfield      #13                 // Field readLock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  public java.util.concurrent.locks.Lock writeLock();
    Code:
       0: aload_0
       1: getfield      #16                 // Field writeLock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  static java.util.concurrent.locks.ReentrantReadWriteLock access$000(org.jboss.as.ejb3.concurrency.EJBReadWriteLock);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: areturn

  static void access$100(org.jboss.as.ejb3.concurrency.EJBReadWriteLock);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method incReadLockCount:()V
       4: return

  static void access$200(org.jboss.as.ejb3.concurrency.EJBReadWriteLock);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method decReadLockCount:()V
       4: return

  static void access$300(org.jboss.as.ejb3.concurrency.EJBReadWriteLock);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method checkLoopback:()V
       4: return

  static {};
    Code:
       0: ldc           #30                 // class org/jboss/as/ejb3/concurrency/EJBReadWriteLock
       2: invokevirtual #31                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: return
}
