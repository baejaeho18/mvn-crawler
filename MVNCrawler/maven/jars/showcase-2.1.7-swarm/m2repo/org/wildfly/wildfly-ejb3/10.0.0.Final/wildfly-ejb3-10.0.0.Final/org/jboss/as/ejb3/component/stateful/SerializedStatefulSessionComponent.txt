Compiled from "SerializedStatefulSessionComponent.java"
public class org.jboss.as.ejb3.component.stateful.SerializedStatefulSessionComponent implements java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.String serviceName;

  private final org.jboss.ejb.client.SessionID sessionID;

  private final java.util.Map<java.lang.Object, java.lang.Object> serializableInterceptors;

  private final org.jboss.as.naming.ManagedReference instance;

  public org.jboss.as.ejb3.component.stateful.SerializedStatefulSessionComponent(org.jboss.as.naming.ManagedReference, org.jboss.ejb.client.SessionID, java.lang.String, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field instance:Lorg/jboss/as/naming/ManagedReference;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sessionID:Lorg/jboss/ejb/client/SessionID;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field serviceName:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field serializableInterceptors:Ljava/util/Map;
      25: return

  private java.lang.Object readResolve() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceName:Ljava/lang/String;
       4: invokestatic  #6                  // Method org/jboss/msc/service/ServiceName.parse:(Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
       7: astore_1
       8: invokestatic  #7                  // Method currentServiceContainer:()Lorg/jboss/msc/service/ServiceContainer;
      11: aload_1
      12: invokeinterface #8,  2            // InterfaceMethod org/jboss/msc/service/ServiceContainer.getRequiredService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      17: astore_2
      18: aload_2
      19: invokeinterface #9,  1            // InterfaceMethod org/jboss/msc/service/ServiceController.getValue:()Ljava/lang/Object;
      24: checkcast     #10                 // class org/jboss/as/ejb3/component/stateful/StatefulSessionComponent
      27: astore_3
      28: new           #11                 // class java/util/HashMap
      31: dup
      32: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      35: astore        4
      37: aload_0
      38: getfield      #5                  // Field serializableInterceptors:Ljava/util/Map;
      41: invokeinterface #13,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      46: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      51: astore        5
      53: aload         5
      55: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          100
      63: aload         5
      65: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #17                 // class java/util/Map$Entry
      73: astore        6
      75: aload         4
      77: aload         6
      79: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      84: aload         6
      86: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      91: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: goto          53
     100: aload         4
     102: ldc           #21                 // class org/jboss/ejb/client/SessionID
     104: aload_0
     105: getfield      #3                  // Field sessionID:Lorg/jboss/ejb/client/SessionID;
     108: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload         4
     116: getstatic     #22                 // Field org/jboss/as/ee/component/BasicComponentInstance.INSTANCE_KEY:Ljava/lang/Object;
     119: aload_0
     120: getfield      #2                  // Field instance:Lorg/jboss/as/naming/ManagedReference;
     123: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_3
     130: aload_0
     131: getfield      #2                  // Field instance:Lorg/jboss/as/naming/ManagedReference;
     134: iconst_0
     135: aload         4
     137: invokevirtual #23                 // Method org/jboss/as/ejb3/component/stateful/StatefulSessionComponent.constructComponentInstance:(Lorg/jboss/as/naming/ManagedReference;ZLjava/util/Map;)Lorg/jboss/as/ejb3/component/stateful/StatefulSessionComponentInstance;
     140: areturn

  private static org.jboss.msc.service.ServiceContainer currentServiceContainer();
    Code:
       0: invokestatic  #24                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnonnull     10
       6: invokestatic  #25                 // Method org/jboss/as/server/CurrentServiceContainer.getServiceContainer:()Lorg/jboss/msc/service/ServiceContainer;
       9: areturn
      10: getstatic     #26                 // Field org/jboss/as/server/CurrentServiceContainer.GET_ACTION:Ljava/security/PrivilegedAction;
      13: invokestatic  #27                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      16: checkcast     #28                 // class org/jboss/msc/service/ServiceContainer
      19: areturn
}
