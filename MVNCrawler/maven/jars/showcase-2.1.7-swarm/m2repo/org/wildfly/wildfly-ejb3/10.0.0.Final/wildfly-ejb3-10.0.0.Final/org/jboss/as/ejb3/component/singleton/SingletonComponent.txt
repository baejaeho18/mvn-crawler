Compiled from "SingletonComponent.java"
public class org.jboss.as.ejb3.component.singleton.SingletonComponent extends org.jboss.as.ejb3.component.session.SessionBeanComponent implements org.jboss.as.ejb3.concurrency.LockableComponent {
  private volatile org.jboss.as.ejb3.component.singleton.SingletonComponentInstance singletonComponentInstance;

  private final boolean initOnStartup;

  private final java.util.Map<java.lang.String, javax.ejb.LockType> beanLevelLockType;

  private final java.util.Map<org.jboss.as.ejb3.component.EJBBusinessMethod, javax.ejb.LockType> methodLockTypes;

  private final java.util.Map<org.jboss.as.ejb3.component.EJBBusinessMethod, org.jboss.as.ejb3.concurrency.AccessTimeoutDetails> methodAccessTimeouts;

  private final java.util.List<org.jboss.msc.service.ServiceName> dependsOn;

  private final org.jboss.as.ejb3.component.DefaultAccessTimeoutService defaultAccessTimeoutProvider;

  private org.jboss.invocation.Interceptor interceptor;

  private final java.lang.Object creationLock;

  static final boolean $assertionsDisabled;

  public org.jboss.as.ejb3.component.singleton.SingletonComponent(org.jboss.as.ejb3.component.singleton.SingletonComponentCreateService, java.util.List<org.jboss.msc.service.ServiceName>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/as/ejb3/component/session/SessionBeanComponent."<init>":(Lorg/jboss/as/ejb3/component/session/SessionBeanComponentCreateService;)V
       5: aload_0
       6: new           #2                  // class java/lang/Object
       9: dup
      10: invokespecial #3                  // Method java/lang/Object."<init>":()V
      13: putfield      #4                  // Field creationLock:Ljava/lang/Object;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field dependsOn:Ljava/util/List;
      21: aload_0
      22: aload_1
      23: invokevirtual #6                  // Method org/jboss/as/ejb3/component/singleton/SingletonComponentCreateService.isInitOnStartup:()Z
      26: putfield      #7                  // Field initOnStartup:Z
      29: aload_0
      30: aload_1
      31: invokevirtual #8                  // Method org/jboss/as/ejb3/component/singleton/SingletonComponentCreateService.getBeanLockType:()Ljava/util/Map;
      34: putfield      #9                  // Field beanLevelLockType:Ljava/util/Map;
      37: aload_0
      38: aload_1
      39: invokevirtual #10                 // Method org/jboss/as/ejb3/component/singleton/SingletonComponentCreateService.getMethodApplicableLockTypes:()Ljava/util/Map;
      42: putfield      #11                 // Field methodLockTypes:Ljava/util/Map;
      45: aload_0
      46: aload_1
      47: invokevirtual #12                 // Method org/jboss/as/ejb3/component/singleton/SingletonComponentCreateService.getMethodApplicableAccessTimeouts:()Ljava/util/Map;
      50: putfield      #13                 // Field methodAccessTimeouts:Ljava/util/Map;
      53: aload_0
      54: aload_1
      55: invokevirtual #14                 // Method org/jboss/as/ejb3/component/singleton/SingletonComponentCreateService.getDefaultAccessTimeoutService:()Lorg/jboss/as/ejb3/component/DefaultAccessTimeoutService;
      58: putfield      #15                 // Field defaultAccessTimeoutProvider:Lorg/jboss/as/ejb3/component/DefaultAccessTimeoutService;
      61: return

  protected org.jboss.as.ee.component.BasicComponentInstance instantiateComponentInstance(org.jboss.invocation.Interceptor, java.util.Map<java.lang.reflect.Method, org.jboss.invocation.Interceptor>, java.util.Map<java.lang.Object, java.lang.Object>);
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #4                  // Field creationLock:Ljava/lang/Object;
      10: invokestatic  #17                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifne          24
      16: new           #18                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #5                  // Field dependsOn:Ljava/util/List;
      28: ifnull        108
      31: aload_0
      32: getfield      #5                  // Field dependsOn:Ljava/util/List;
      35: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        4
      42: aload         4
      44: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          108
      52: aload         4
      54: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #23                 // class org/jboss/msc/service/ServiceName
      62: astore        5
      64: invokestatic  #24                 // Method currentServiceContainer:()Lorg/jboss/msc/service/ServiceContainer;
      67: aload         5
      69: invokeinterface #25,  2           // InterfaceMethod org/jboss/msc/service/ServiceContainer.getRequiredService:(Lorg/jboss/msc/service/ServiceName;)Lorg/jboss/msc/service/ServiceController;
      74: astore        6
      76: aload         6
      78: invokeinterface #26,  1           // InterfaceMethod org/jboss/msc/service/ServiceController.getValue:()Ljava/lang/Object;
      83: checkcast     #27                 // class org/jboss/as/ee/component/Component
      86: astore        7
      88: aload         7
      90: instanceof    #28                 // class org/jboss/as/ejb3/component/singleton/SingletonComponent
      93: ifeq          105
      96: aload         7
      98: checkcast     #28                 // class org/jboss/as/ejb3/component/singleton/SingletonComponent
     101: invokevirtual #29                 // Method getComponentInstance:()Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
     104: pop
     105: goto          42
     108: new           #30                 // class org/jboss/as/ejb3/component/singleton/SingletonComponentInstance
     111: dup
     112: aload_0
     113: aload_1
     114: aload_2
     115: invokespecial #31                 // Method org/jboss/as/ejb3/component/singleton/SingletonComponentInstance."<init>":(Lorg/jboss/as/ee/component/BasicComponent;Lorg/jboss/invocation/Interceptor;Ljava/util/Map;)V
     118: areturn

  public org.jboss.as.ejb3.component.singleton.SingletonComponentInstance getComponentInstance();
    Code:
       0: aload_0
       1: getfield      #32                 // Field singletonComponentInstance:Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
       4: ifnonnull     72
       7: aload_0
       8: getfield      #4                  // Field creationLock:Ljava/lang/Object;
      11: invokestatic  #17                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      14: ifeq          37
      17: getstatic     #33                 // Field org/jboss/as/ejb3/logging/EjbLogger.ROOT_LOGGER:Lorg/jboss/as/ejb3/logging/EjbLogger;
      20: aload_0
      21: invokevirtual #34                 // Method getComponentName:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #35                 // Method getComponentClass:()Ljava/lang/Class;
      28: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokeinterface #37,  3           // InterfaceMethod org/jboss/as/ejb3/logging/EjbLogger.reentrantSingletonCreation:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalStateException;
      36: athrow
      37: aload_0
      38: getfield      #4                  // Field creationLock:Ljava/lang/Object;
      41: dup
      42: astore_1
      43: monitorenter
      44: aload_0
      45: getfield      #32                 // Field singletonComponentInstance:Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
      48: ifnonnull     62
      51: aload_0
      52: aload_0
      53: invokevirtual #38                 // Method createInstance:()Lorg/jboss/as/ee/component/ComponentInstance;
      56: checkcast     #30                 // class org/jboss/as/ejb3/component/singleton/SingletonComponentInstance
      59: putfield      #32                 // Field singletonComponentInstance:Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
      62: aload_1
      63: monitorexit
      64: goto          72
      67: astore_2
      68: aload_1
      69: monitorexit
      70: aload_2
      71: athrow
      72: aload_0
      73: getfield      #32                 // Field singletonComponentInstance:Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
      76: areturn
    Exception table:
       from    to  target type
          44    64    67   any
          67    70    67   any

  public void start();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/jboss/as/ejb3/component/session/SessionBeanComponent.start:()V
       4: aload_0
       5: getfield      #7                  // Field initOnStartup:Z
       8: ifeq          30
      11: getstatic     #33                 // Field org/jboss/as/ejb3/logging/EjbLogger.ROOT_LOGGER:Lorg/jboss/as/ejb3/logging/EjbLogger;
      14: ldc           #40                 // String %s bean is a @Startup (a.k.a init-on-startup) bean, creating/getting the singleton instance
      16: aload_0
      17: invokevirtual #34                 // Method getComponentName:()Ljava/lang/String;
      20: invokeinterface #41,  3           // InterfaceMethod org/jboss/as/ejb3/logging/EjbLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: invokevirtual #29                 // Method getComponentInstance:()Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
      29: pop
      30: return

  public void done();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method destroySingletonInstance:()V
       4: aload_0
       5: invokespecial #43                 // Method org/jboss/as/ejb3/component/session/SessionBeanComponent.done:()V
       8: return

  public javax.ejb.LockType getLockType(java.lang.reflect.Method);
    Code:
       0: new           #44                 // class org/jboss/as/ejb3/component/EJBBusinessMethod
       3: dup
       4: aload_1
       5: invokespecial #45                 // Method org/jboss/as/ejb3/component/EJBBusinessMethod."<init>":(Ljava/lang/reflect/Method;)V
       8: astore_2
       9: aload_0
      10: getfield      #11                 // Field methodLockTypes:Ljava/util/Map;
      13: aload_2
      14: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #47                 // class javax/ejb/LockType
      22: astore_3
      23: aload_3
      24: ifnull        29
      27: aload_3
      28: areturn
      29: aload_0
      30: getfield      #9                  // Field beanLevelLockType:Ljava/util/Map;
      33: aload_1
      34: invokevirtual #48                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      37: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      40: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #47                 // class javax/ejb/LockType
      48: astore        4
      50: aload         4
      52: ifnull        58
      55: aload         4
      57: areturn
      58: getstatic     #49                 // Field javax/ejb/LockType.WRITE:Ljavax/ejb/LockType;
      61: areturn

  public org.jboss.as.ejb3.concurrency.AccessTimeoutDetails getAccessTimeout(java.lang.reflect.Method);
    Code:
       0: new           #44                 // class org/jboss/as/ejb3/component/EJBBusinessMethod
       3: dup
       4: aload_1
       5: invokespecial #45                 // Method org/jboss/as/ejb3/component/EJBBusinessMethod."<init>":(Ljava/lang/reflect/Method;)V
       8: astore_2
       9: aload_0
      10: getfield      #13                 // Field methodAccessTimeouts:Ljava/util/Map;
      13: aload_2
      14: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #50                 // class org/jboss/as/ejb3/concurrency/AccessTimeoutDetails
      22: astore_3
      23: aload_3
      24: ifnull        29
      27: aload_3
      28: areturn
      29: aload_0
      30: getfield      #51                 // Field beanLevelAccessTimeout:Ljava/util/Map;
      33: aload_1
      34: invokevirtual #48                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      37: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
      40: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #50                 // class org/jboss/as/ejb3/concurrency/AccessTimeoutDetails
      48: astore        4
      50: aload         4
      52: ifnull        58
      55: aload         4
      57: areturn
      58: aload_0
      59: invokevirtual #52                 // Method getDefaultAccessTimeout:()Lorg/jboss/as/ejb3/concurrency/AccessTimeoutDetails;
      62: areturn

  public org.jboss.as.ejb3.concurrency.AccessTimeoutDetails getDefaultAccessTimeout();
    Code:
       0: aload_0
       1: getfield      #15                 // Field defaultAccessTimeoutProvider:Lorg/jboss/as/ejb3/component/DefaultAccessTimeoutService;
       4: invokevirtual #53                 // Method org/jboss/as/ejb3/component/DefaultAccessTimeoutService.getDefaultAccessTimeout:()Lorg/jboss/as/ejb3/concurrency/AccessTimeoutDetails;
       7: areturn

  public void setConcurrencyManagementInterceptor(org.jboss.invocation.Interceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field interceptor:Lorg/jboss/invocation/Interceptor;
       5: return

  public org.jboss.invocation.Interceptor getConcurrencyManagementInterceptor();
    Code:
       0: aload_0
       1: getfield      #54                 // Field interceptor:Lorg/jboss/invocation/Interceptor;
       4: areturn

  private void destroySingletonInstance();
    Code:
       0: aload_0
       1: getfield      #4                  // Field creationLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #32                 // Field singletonComponentInstance:Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
      11: ifnull        26
      14: aload_0
      15: getfield      #32                 // Field singletonComponentInstance:Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
      18: invokevirtual #55                 // Method org/jboss/as/ejb3/component/singleton/SingletonComponentInstance.destroy:()V
      21: aload_0
      22: aconst_null
      23: putfield      #32                 // Field singletonComponentInstance:Lorg/jboss/as/ejb3/component/singleton/SingletonComponentInstance;
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: return
    Exception table:
       from    to  target type
           7    28    31   any
          31    34    31   any

  public org.jboss.as.ejb3.component.allowedmethods.AllowedMethodsInformation getAllowedMethodsInformation();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method isBeanManagedTransaction:()Z
       4: ifeq          13
       7: getstatic     #57                 // Field org/jboss/as/ejb3/component/singleton/SingletonAllowedMethodsInformation.INSTANCE_BMT:Lorg/jboss/as/ejb3/component/singleton/SingletonAllowedMethodsInformation;
      10: goto          16
      13: getstatic     #58                 // Field org/jboss/as/ejb3/component/singleton/SingletonAllowedMethodsInformation.INSTANCE_CMT:Lorg/jboss/as/ejb3/component/singleton/SingletonAllowedMethodsInformation;
      16: areturn

  private static org.jboss.msc.service.ServiceContainer currentServiceContainer();
    Code:
       0: invokestatic  #59                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnonnull     10
       6: invokestatic  #60                 // Method org/jboss/as/server/CurrentServiceContainer.getServiceContainer:()Lorg/jboss/msc/service/ServiceContainer;
       9: areturn
      10: getstatic     #61                 // Field org/jboss/as/server/CurrentServiceContainer.GET_ACTION:Ljava/security/PrivilegedAction;
      13: invokestatic  #62                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      16: checkcast     #63                 // class org/jboss/msc/service/ServiceContainer
      19: areturn

  static {};
    Code:
       0: ldc           #28                 // class org/jboss/as/ejb3/component/singleton/SingletonComponent
       2: invokevirtual #64                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #16                 // Field $assertionsDisabled:Z
      16: return
}
