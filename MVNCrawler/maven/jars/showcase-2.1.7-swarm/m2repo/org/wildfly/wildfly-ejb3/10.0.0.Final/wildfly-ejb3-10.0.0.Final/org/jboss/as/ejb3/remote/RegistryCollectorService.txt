Compiled from "RegistryCollectorService.java"
public class org.jboss.as.ejb3.remote.RegistryCollectorService<K, V> extends org.jboss.msc.service.AbstractService<org.jboss.as.ejb3.remote.RegistryCollector<K, V>> implements org.jboss.as.ejb3.remote.RegistryCollector<K, V> {
  public static final org.jboss.msc.service.ServiceName SERVICE_NAME;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.wildfly.clustering.registry.Registry<K, V>> registries;

  private final java.util.Set<org.jboss.as.ejb3.remote.RegistryCollector$Listener<K, V>> listeners;

  public org.jboss.as.ejb3.remote.RegistryCollectorService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/msc/service/AbstractService."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field registries:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/CopyOnWriteArraySet
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      23: putfield      #7                  // Field listeners:Ljava/util/Set;
      26: return

  public org.jboss.as.ejb3.remote.RegistryCollector<K, V> getValue();
    Code:
       0: aload_0
       1: areturn

  public void add(org.wildfly.clustering.registry.Registry<K, V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field registries:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #8,  1            // InterfaceMethod org/wildfly/clustering/registry/Registry.getGroup:()Lorg/wildfly/clustering/group/Group;
      10: invokeinterface #9,  1            // InterfaceMethod org/wildfly/clustering/group/Group.getName:()Ljava/lang/String;
      15: aload_1
      16: invokeinterface #10,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: ifnonnull     63
      24: aload_0
      25: getfield      #7                  // Field listeners:Ljava/util/Set;
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          63
      43: aload_2
      44: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #14                 // class org/jboss/as/ejb3/remote/RegistryCollector$Listener
      52: astore_3
      53: aload_3
      54: aload_1
      55: invokeinterface #15,  2           // InterfaceMethod org/jboss/as/ejb3/remote/RegistryCollector$Listener.registryAdded:(Lorg/wildfly/clustering/registry/Registry;)V
      60: goto          34
      63: return

  public void remove(org.wildfly.clustering.registry.Registry<K, V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field registries:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #8,  1            // InterfaceMethod org/wildfly/clustering/registry/Registry.getGroup:()Lorg/wildfly/clustering/group/Group;
      10: invokeinterface #9,  1            // InterfaceMethod org/wildfly/clustering/group/Group.getName:()Ljava/lang/String;
      15: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      20: ifnull        62
      23: aload_0
      24: getfield      #7                  // Field listeners:Ljava/util/Set;
      27: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          62
      42: aload_2
      43: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #14                 // class org/jboss/as/ejb3/remote/RegistryCollector$Listener
      51: astore_3
      52: aload_3
      53: aload_1
      54: invokeinterface #17,  2           // InterfaceMethod org/jboss/as/ejb3/remote/RegistryCollector$Listener.registryRemoved:(Lorg/wildfly/clustering/registry/Registry;)V
      59: goto          33
      62: return

  public void addListener(org.jboss.as.ejb3.remote.RegistryCollector$Listener<K, V>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeListener(org.jboss.as.ejb3.remote.RegistryCollector$Listener<K, V>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Collection<org.wildfly.clustering.registry.Registry<K, V>> getRegistries();
    Code:
       0: aload_0
       1: getfield      #4                  // Field registries:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokestatic  #21                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      12: areturn

  public java.lang.Object getValue() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getValue:()Lorg/jboss/as/ejb3/remote/RegistryCollector;
       4: areturn

  static {};
    Code:
       0: getstatic     #23                 // Field org/jboss/msc/service/ServiceName.JBOSS:Lorg/jboss/msc/service/ServiceName;
       3: iconst_5
       4: anewarray     #24                 // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #25                 // String ejb
      11: aastore
      12: dup
      13: iconst_1
      14: ldc           #26                 // String remoting
      16: aastore
      17: dup
      18: iconst_2
      19: ldc           #27                 // String connector
      21: aastore
      22: dup
      23: iconst_3
      24: ldc           #28                 // String client-mappings
      26: aastore
      27: dup
      28: iconst_4
      29: ldc           #29                 // String registries
      31: aastore
      32: invokevirtual #30                 // Method org/jboss/msc/service/ServiceName.append:([Ljava/lang/String;)Lorg/jboss/msc/service/ServiceName;
      35: putstatic     #31                 // Field SERVICE_NAME:Lorg/jboss/msc/service/ServiceName;
      38: return
}
