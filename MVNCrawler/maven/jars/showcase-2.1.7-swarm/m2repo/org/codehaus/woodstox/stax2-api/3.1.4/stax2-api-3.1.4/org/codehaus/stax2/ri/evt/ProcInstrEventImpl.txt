Compiled from "ProcInstrEventImpl.java"
public class org.codehaus.stax2.ri.evt.ProcInstrEventImpl extends org.codehaus.stax2.ri.evt.BaseEventImpl implements javax.xml.stream.events.ProcessingInstruction {
  final java.lang.String mTarget;

  final java.lang.String mData;

  public org.codehaus.stax2.ri.evt.ProcInstrEventImpl(javax.xml.stream.Location, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/codehaus/stax2/ri/evt/BaseEventImpl."<init>":(Ljavax/xml/stream/Location;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field mTarget:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field mData:Ljava/lang/String;
      15: return

  public java.lang.String getData();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mData:Ljava/lang/String;
       4: areturn

  public java.lang.String getTarget();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mTarget:Ljava/lang/String;
       4: areturn

  public int getEventType();
    Code:
       0: iconst_3
       1: ireturn

  public boolean isProcessingInstruction();
    Code:
       0: iconst_1
       1: ireturn

  public void writeAsEncodedUnicode(java.io.Writer) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: ldc           #4                  // String <?
       3: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
       6: aload_1
       7: aload_0
       8: getfield      #2                  // Field mTarget:Ljava/lang/String;
      11: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      14: aload_0
      15: getfield      #3                  // Field mData:Ljava/lang/String;
      18: ifnull        39
      21: aload_0
      22: getfield      #3                  // Field mData:Ljava/lang/String;
      25: invokevirtual #6                  // Method java/lang/String.length:()I
      28: ifle          39
      31: aload_1
      32: aload_0
      33: getfield      #3                  // Field mData:Ljava/lang/String;
      36: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      39: aload_1
      40: ldc           #7                  // String ?>
      42: invokevirtual #5                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      45: goto          54
      48: astore_2
      49: aload_0
      50: aload_2
      51: invokevirtual #9                  // Method throwFromIOE:(Ljava/io/IOException;)V
      54: return
    Exception table:
       from    to  target type
           0    45    48   Class java/io/IOException

  public void writeUsing(org.codehaus.stax2.XMLStreamWriter2) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field mData:Ljava/lang/String;
       4: ifnull        34
       7: aload_0
       8: getfield      #3                  // Field mData:Ljava/lang/String;
      11: invokevirtual #6                  // Method java/lang/String.length:()I
      14: ifle          34
      17: aload_1
      18: aload_0
      19: getfield      #2                  // Field mTarget:Ljava/lang/String;
      22: aload_0
      23: getfield      #3                  // Field mData:Ljava/lang/String;
      26: invokeinterface #10,  3           // InterfaceMethod org/codehaus/stax2/XMLStreamWriter2.writeProcessingInstruction:(Ljava/lang/String;Ljava/lang/String;)V
      31: goto          44
      34: aload_1
      35: aload_0
      36: getfield      #2                  // Field mTarget:Ljava/lang/String;
      39: invokeinterface #11,  2           // InterfaceMethod org/codehaus/stax2/XMLStreamWriter2.writeProcessingInstruction:(Ljava/lang/String;)V
      44: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #12                 // class javax/xml/stream/events/ProcessingInstruction
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #12                 // class javax/xml/stream/events/ProcessingInstruction
      26: astore_2
      27: aload_0
      28: getfield      #2                  // Field mTarget:Ljava/lang/String;
      31: aload_2
      32: invokeinterface #13,  1           // InterfaceMethod javax/xml/stream/events/ProcessingInstruction.getTarget:()Ljava/lang/String;
      37: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          63
      43: aload_0
      44: getfield      #3                  // Field mData:Ljava/lang/String;
      47: aload_2
      48: invokeinterface #15,  1           // InterfaceMethod javax/xml/stream/events/ProcessingInstruction.getData:()Ljava/lang/String;
      53: invokestatic  #16                 // Method stringsWithNullsEqual:(Ljava/lang/String;Ljava/lang/String;)Z
      56: ifeq          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mTarget:Ljava/lang/String;
       4: invokevirtual #17                 // Method java/lang/String.hashCode:()I
       7: istore_1
       8: aload_0
       9: getfield      #3                  // Field mData:Ljava/lang/String;
      12: ifnull        25
      15: iload_1
      16: aload_0
      17: getfield      #3                  // Field mData:Ljava/lang/String;
      20: invokevirtual #17                 // Method java/lang/String.hashCode:()I
      23: ixor
      24: istore_1
      25: iload_1
      26: ireturn
}
