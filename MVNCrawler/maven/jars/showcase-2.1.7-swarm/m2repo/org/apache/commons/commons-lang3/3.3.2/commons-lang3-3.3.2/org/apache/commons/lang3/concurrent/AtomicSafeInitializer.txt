Compiled from "AtomicSafeInitializer.java"
public abstract class org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T> implements org.apache.commons.lang3.concurrent.ConcurrentInitializer<T> {
  private final java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>> factory;

  private final java.util.concurrent.atomic.AtomicReference<T> reference;

  public org.apache.commons.lang3.concurrent.AtomicSafeInitializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field factory:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #5                  // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
      26: return

  public final T get() throws org.apache.commons.lang3.concurrent.ConcurrentException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: dup
       8: astore_1
       9: ifnonnull     38
      12: aload_0
      13: getfield      #4                  // Field factory:Ljava/util/concurrent/atomic/AtomicReference;
      16: aconst_null
      17: aload_0
      18: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ifeq          0
      24: aload_0
      25: getfield      #5                  // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
      28: aload_0
      29: invokevirtual #8                  // Method initialize:()Ljava/lang/Object;
      32: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      35: goto          0
      38: aload_1
      39: areturn

  protected abstract T initialize() throws org.apache.commons.lang3.concurrent.ConcurrentException;
}
