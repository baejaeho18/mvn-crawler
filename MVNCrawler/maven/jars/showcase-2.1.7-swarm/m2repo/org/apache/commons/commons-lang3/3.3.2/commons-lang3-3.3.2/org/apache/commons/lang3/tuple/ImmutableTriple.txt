Compiled from "ImmutableTriple.java"
public final class org.apache.commons.lang3.tuple.ImmutableTriple<L, M, R> extends org.apache.commons.lang3.tuple.Triple<L, M, R> {
  private static final long serialVersionUID;

  public final L left;

  public final M middle;

  public final R right;

  public static <L, M, R> org.apache.commons.lang3.tuple.ImmutableTriple<L, M, R> of(L, M, R);
    Code:
       0: new           #1                  // class org/apache/commons/lang3/tuple/ImmutableTriple
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #2                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      10: areturn

  public org.apache.commons.lang3.tuple.ImmutableTriple(L, M, R);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/commons/lang3/tuple/Triple."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field left:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field middle:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field right:Ljava/lang/Object;
      19: return

  public L getLeft();
    Code:
       0: aload_0
       1: getfield      #4                  // Field left:Ljava/lang/Object;
       4: areturn

  public M getMiddle();
    Code:
       0: aload_0
       1: getfield      #5                  // Field middle:Ljava/lang/Object;
       4: areturn

  public R getRight();
    Code:
       0: aload_0
       1: getfield      #6                  // Field right:Ljava/lang/Object;
       4: areturn
}
