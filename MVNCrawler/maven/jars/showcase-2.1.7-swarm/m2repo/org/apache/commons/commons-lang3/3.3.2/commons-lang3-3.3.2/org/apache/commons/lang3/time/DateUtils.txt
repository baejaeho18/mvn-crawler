Compiled from "DateUtils.java"
public class org.apache.commons.lang3.time.DateUtils {
  public static final long MILLIS_PER_SECOND;

  public static final long MILLIS_PER_MINUTE;

  public static final long MILLIS_PER_HOUR;

  public static final long MILLIS_PER_DAY;

  public static final int SEMI_MONTH;

  private static final int[][] fields;

  public static final int RANGE_WEEK_SUNDAY;

  public static final int RANGE_WEEK_MONDAY;

  public static final int RANGE_WEEK_RELATIVE;

  public static final int RANGE_WEEK_CENTER;

  public static final int RANGE_MONTH_SUNDAY;

  public static final int RANGE_MONTH_MONDAY;

  private static final int MODIFY_TRUNCATE;

  private static final int MODIFY_ROUND;

  private static final int MODIFY_CEILING;

  public org.apache.commons.lang3.time.DateUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isSameDay(java.util.Date, java.util.Date);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String The date must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      21: astore_2
      22: aload_2
      23: aload_0
      24: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      27: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      30: astore_3
      31: aload_3
      32: aload_1
      33: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      36: aload_2
      37: aload_3
      38: invokestatic  #7                  // Method isSameDay:(Ljava/util/Calendar;Ljava/util/Calendar;)Z
      41: ireturn

  public static boolean isSameDay(java.util.Calendar, java.util.Calendar);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String The date must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iconst_0
      20: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      23: aload_1
      24: iconst_0
      25: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      28: if_icmpne     63
      31: aload_0
      32: iconst_1
      33: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      36: aload_1
      37: iconst_1
      38: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      41: if_icmpne     63
      44: aload_0
      45: bipush        6
      47: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      50: aload_1
      51: bipush        6
      53: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      56: if_icmpne     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn

  public static boolean isSameInstant(java.util.Date, java.util.Date);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String The date must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: invokevirtual #9                  // Method java/util/Date.getTime:()J
      22: aload_1
      23: invokevirtual #9                  // Method java/util/Date.getTime:()J
      26: lcmp
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public static boolean isSameInstant(java.util.Calendar, java.util.Calendar);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String The date must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      22: invokevirtual #9                  // Method java/util/Date.getTime:()J
      25: aload_1
      26: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      29: invokevirtual #9                  // Method java/util/Date.getTime:()J
      32: lcmp
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public static boolean isSameLocalTime(java.util.Calendar, java.util.Calendar);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String The date must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: bipush        14
      21: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      24: aload_1
      25: bipush        14
      27: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      30: if_icmpne     134
      33: aload_0
      34: bipush        13
      36: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      39: aload_1
      40: bipush        13
      42: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      45: if_icmpne     134
      48: aload_0
      49: bipush        12
      51: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      54: aload_1
      55: bipush        12
      57: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      60: if_icmpne     134
      63: aload_0
      64: bipush        11
      66: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      69: aload_1
      70: bipush        11
      72: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      75: if_icmpne     134
      78: aload_0
      79: bipush        6
      81: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      84: aload_1
      85: bipush        6
      87: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      90: if_icmpne     134
      93: aload_0
      94: iconst_1
      95: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      98: aload_1
      99: iconst_1
     100: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     103: if_icmpne     134
     106: aload_0
     107: iconst_0
     108: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     111: aload_1
     112: iconst_0
     113: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     116: if_icmpne     134
     119: aload_0
     120: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     123: aload_1
     124: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     127: if_acmpne     134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: ireturn

  public static java.util.Date parseDate(java.lang.String, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #12                 // Method parseDate:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;
       6: areturn

  public static java.util.Date parseDate(java.lang.String, java.util.Locale, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #13                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;
       7: areturn

  public static java.util.Date parseDateStrictly(java.lang.String, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #14                 // Method parseDateStrictly:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;)Ljava/util/Date;
       6: areturn

  public static java.util.Date parseDateStrictly(java.lang.String, java.util.Locale, java.lang.String...) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_2
       3: iconst_0
       4: invokestatic  #13                 // Method parseDateWithLeniency:(Ljava/lang/String;Ljava/util/Locale;[Ljava/lang/String;Z)Ljava/util/Date;
       7: areturn

  private static java.util.Date parseDateWithLeniency(java.lang.String, java.util.Locale, java.lang.String[], boolean) throws java.text.ParseException;
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_2
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #15                 // String Date and Patterns must not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: ifnonnull     34
      22: new           #16                 // class java/text/SimpleDateFormat
      25: dup
      26: invokespecial #17                 // Method java/text/SimpleDateFormat."<init>":()V
      29: astore        4
      31: goto          46
      34: new           #16                 // class java/text/SimpleDateFormat
      37: dup
      38: ldc           #18                 // String
      40: aload_1
      41: invokespecial #19                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      44: astore        4
      46: aload         4
      48: iload_3
      49: invokevirtual #20                 // Method java/text/SimpleDateFormat.setLenient:(Z)V
      52: new           #21                 // class java/text/ParsePosition
      55: dup
      56: iconst_0
      57: invokespecial #22                 // Method java/text/ParsePosition."<init>":(I)V
      60: astore        5
      62: aload_2
      63: astore        6
      65: aload         6
      67: arraylength
      68: istore        7
      70: iconst_0
      71: istore        8
      73: iload         8
      75: iload         7
      77: if_icmpge     190
      80: aload         6
      82: iload         8
      84: aaload
      85: astore        9
      87: aload         9
      89: astore        10
      91: aload         9
      93: ldc           #23                 // String ZZ
      95: invokevirtual #24                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      98: ifeq          116
     101: aload         10
     103: iconst_0
     104: aload         10
     106: invokevirtual #25                 // Method java/lang/String.length:()I
     109: iconst_1
     110: isub
     111: invokevirtual #26                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     114: astore        10
     116: aload         4
     118: aload         10
     120: invokevirtual #27                 // Method java/text/SimpleDateFormat.applyPattern:(Ljava/lang/String;)V
     123: aload         5
     125: iconst_0
     126: invokevirtual #28                 // Method java/text/ParsePosition.setIndex:(I)V
     129: aload_0
     130: astore        11
     132: aload         9
     134: ldc           #23                 // String ZZ
     136: invokevirtual #24                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     139: ifeq          152
     142: aload_0
     143: ldc           #29                 // String ([-+][0-9][0-9]):([0-9][0-9])$
     145: ldc           #30                 // String $1$2
     147: invokevirtual #31                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     150: astore        11
     152: aload         4
     154: aload         11
     156: aload         5
     158: invokevirtual #32                 // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
     161: astore        12
     163: aload         12
     165: ifnull        184
     168: aload         5
     170: invokevirtual #33                 // Method java/text/ParsePosition.getIndex:()I
     173: aload         11
     175: invokevirtual #25                 // Method java/lang/String.length:()I
     178: if_icmpne     184
     181: aload         12
     183: areturn
     184: iinc          8, 1
     187: goto          73
     190: new           #34                 // class java/text/ParseException
     193: dup
     194: new           #35                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #37                 // String Unable to parse the date:
     203: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_0
     207: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: iconst_m1
     214: invokespecial #40                 // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
     217: athrow

  public static java.util.Date addYears(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addMonths(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addWeeks(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addDays(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_5
       2: iload_1
       3: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date addHours(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        11
       3: iload_1
       4: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date addMinutes(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        12
       3: iload_1
       4: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date addSeconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        13
       3: iload_1
       4: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date addMilliseconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        14
       3: iload_1
       4: invokestatic  #41                 // Method add:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  private static java.util.Date add(java.util.Date, int, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      17: astore_3
      18: aload_3
      19: aload_0
      20: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      23: aload_3
      24: iload_1
      25: iload_2
      26: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
      29: aload_3
      30: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      33: areturn

  public static java.util.Date setYears(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokestatic  #43                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date setMonths(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: invokestatic  #43                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date setDays(java.util.Date, int);
    Code:
       0: aload_0
       1: iconst_5
       2: iload_1
       3: invokestatic  #43                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       6: areturn

  public static java.util.Date setHours(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        11
       3: iload_1
       4: invokestatic  #43                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date setMinutes(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        12
       3: iload_1
       4: invokestatic  #43                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date setSeconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        13
       3: iload_1
       4: invokestatic  #43                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  public static java.util.Date setMilliseconds(java.util.Date, int);
    Code:
       0: aload_0
       1: bipush        14
       3: iload_1
       4: invokestatic  #43                 // Method set:(Ljava/util/Date;II)Ljava/util/Date;
       7: areturn

  private static java.util.Date set(java.util.Date, int, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      17: astore_3
      18: aload_3
      19: iconst_0
      20: invokevirtual #44                 // Method java/util/Calendar.setLenient:(Z)V
      23: aload_3
      24: aload_0
      25: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      28: aload_3
      29: iload_1
      30: iload_2
      31: invokevirtual #45                 // Method java/util/Calendar.set:(II)V
      34: aload_3
      35: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      38: areturn

  public static java.util.Calendar toCalendar(java.util.Date);
    Code:
       0: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
       9: aload_1
      10: areturn

  public static java.util.Date round(java.util.Date, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      17: astore_2
      18: aload_2
      19: aload_0
      20: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      23: aload_2
      24: iload_1
      25: iconst_1
      26: invokestatic  #46                 // Method modify:(Ljava/util/Calendar;II)V
      29: aload_2
      30: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      33: areturn

  public static java.util.Calendar round(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #47                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      18: checkcast     #48                 // class java/util/Calendar
      21: astore_2
      22: aload_2
      23: iload_1
      24: iconst_1
      25: invokestatic  #46                 // Method modify:(Ljava/util/Calendar;II)V
      28: aload_2
      29: areturn

  public static java.util.Date round(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: instanceof    #49                 // class java/util/Date
      18: ifeq          30
      21: aload_0
      22: checkcast     #49                 // class java/util/Date
      25: iload_1
      26: invokestatic  #50                 // Method round:(Ljava/util/Date;I)Ljava/util/Date;
      29: areturn
      30: aload_0
      31: instanceof    #48                 // class java/util/Calendar
      34: ifeq          49
      37: aload_0
      38: checkcast     #48                 // class java/util/Calendar
      41: iload_1
      42: invokestatic  #51                 // Method round:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      45: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      48: areturn
      49: new           #52                 // class java/lang/ClassCastException
      52: dup
      53: new           #35                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #53                 // String Could not round
      62: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #55                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      75: athrow

  public static java.util.Date truncate(java.util.Date, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      17: astore_2
      18: aload_2
      19: aload_0
      20: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      23: aload_2
      24: iload_1
      25: iconst_0
      26: invokestatic  #46                 // Method modify:(Ljava/util/Calendar;II)V
      29: aload_2
      30: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      33: areturn

  public static java.util.Calendar truncate(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #47                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      18: checkcast     #48                 // class java/util/Calendar
      21: astore_2
      22: aload_2
      23: iload_1
      24: iconst_0
      25: invokestatic  #46                 // Method modify:(Ljava/util/Calendar;II)V
      28: aload_2
      29: areturn

  public static java.util.Date truncate(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: instanceof    #49                 // class java/util/Date
      18: ifeq          30
      21: aload_0
      22: checkcast     #49                 // class java/util/Date
      25: iload_1
      26: invokestatic  #56                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;
      29: areturn
      30: aload_0
      31: instanceof    #48                 // class java/util/Calendar
      34: ifeq          49
      37: aload_0
      38: checkcast     #48                 // class java/util/Calendar
      41: iload_1
      42: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      45: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      48: areturn
      49: new           #52                 // class java/lang/ClassCastException
      52: dup
      53: new           #35                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #58                 // String Could not truncate
      62: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #55                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      75: athrow

  public static java.util.Date ceiling(java.util.Date, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      17: astore_2
      18: aload_2
      19: aload_0
      20: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      23: aload_2
      24: iload_1
      25: iconst_2
      26: invokestatic  #46                 // Method modify:(Ljava/util/Calendar;II)V
      29: aload_2
      30: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      33: areturn

  public static java.util.Calendar ceiling(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #47                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      18: checkcast     #48                 // class java/util/Calendar
      21: astore_2
      22: aload_2
      23: iload_1
      24: iconst_2
      25: invokestatic  #46                 // Method modify:(Ljava/util/Calendar;II)V
      28: aload_2
      29: areturn

  public static java.util.Date ceiling(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: instanceof    #49                 // class java/util/Date
      18: ifeq          30
      21: aload_0
      22: checkcast     #49                 // class java/util/Date
      25: iload_1
      26: invokestatic  #59                 // Method ceiling:(Ljava/util/Date;I)Ljava/util/Date;
      29: areturn
      30: aload_0
      31: instanceof    #48                 // class java/util/Calendar
      34: ifeq          49
      37: aload_0
      38: checkcast     #48                 // class java/util/Calendar
      41: iload_1
      42: invokestatic  #60                 // Method ceiling:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      45: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      48: areturn
      49: new           #52                 // class java/lang/ClassCastException
      52: dup
      53: new           #35                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #61                 // String Could not find ceiling of for type:
      62: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      69: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #55                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      78: athrow

  private static void modify(java.util.Calendar, int, int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
       5: ldc           #62                 // int 280000000
       7: if_icmple     20
      10: new           #63                 // class java/lang/ArithmeticException
      13: dup
      14: ldc           #64                 // String Calendar value too large for accurate calculations
      16: invokespecial #65                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: iload_1
      21: bipush        14
      23: if_icmpne     27
      26: return
      27: aload_0
      28: invokevirtual #10                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      31: astore_3
      32: aload_3
      33: invokevirtual #9                  // Method java/util/Date.getTime:()J
      36: lstore        4
      38: iconst_0
      39: istore        6
      41: aload_0
      42: bipush        14
      44: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      47: istore        7
      49: iconst_0
      50: iload_2
      51: if_icmpeq     62
      54: iload         7
      56: sipush        500
      59: if_icmpge     70
      62: lload         4
      64: iload         7
      66: i2l
      67: lsub
      68: lstore        4
      70: iload_1
      71: bipush        13
      73: if_icmpne     79
      76: iconst_1
      77: istore        6
      79: aload_0
      80: bipush        13
      82: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      85: istore        8
      87: iload         6
      89: ifne          116
      92: iconst_0
      93: iload_2
      94: if_icmpeq     104
      97: iload         8
      99: bipush        30
     101: if_icmpge     116
     104: lload         4
     106: iload         8
     108: i2l
     109: ldc2_w        #66                 // long 1000l
     112: lmul
     113: lsub
     114: lstore        4
     116: iload_1
     117: bipush        12
     119: if_icmpne     125
     122: iconst_1
     123: istore        6
     125: aload_0
     126: bipush        12
     128: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     131: istore        9
     133: iload         6
     135: ifne          162
     138: iconst_0
     139: iload_2
     140: if_icmpeq     150
     143: iload         9
     145: bipush        30
     147: if_icmpge     162
     150: lload         4
     152: iload         9
     154: i2l
     155: ldc2_w        #68                 // long 60000l
     158: lmul
     159: lsub
     160: lstore        4
     162: aload_3
     163: invokevirtual #9                  // Method java/util/Date.getTime:()J
     166: lload         4
     168: lcmp
     169: ifeq          183
     172: aload_3
     173: lload         4
     175: invokevirtual #70                 // Method java/util/Date.setTime:(J)V
     178: aload_0
     179: aload_3
     180: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
     183: iconst_0
     184: istore        10
     186: getstatic     #71                 // Field fields:[[I
     189: astore        11
     191: aload         11
     193: arraylength
     194: istore        12
     196: iconst_0
     197: istore        13
     199: iload         13
     201: iload         12
     203: if_icmpge     577
     206: aload         11
     208: iload         13
     210: aaload
     211: astore        14
     213: aload         14
     215: astore        15
     217: aload         15
     219: arraylength
     220: istore        16
     222: iconst_0
     223: istore        17
     225: iload         17
     227: iload         16
     229: if_icmpge     361
     232: aload         15
     234: iload         17
     236: iaload
     237: istore        18
     239: iload         18
     241: iload_1
     242: if_icmpne     355
     245: iload_2
     246: iconst_2
     247: if_icmpeq     260
     250: iload_2
     251: iconst_1
     252: if_icmpne     354
     255: iload         10
     257: ifeq          354
     260: iload_1
     261: sipush        1001
     264: if_icmpne     302
     267: aload_0
     268: iconst_5
     269: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     272: iconst_1
     273: if_icmpne     286
     276: aload_0
     277: iconst_5
     278: bipush        15
     280: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     283: goto          354
     286: aload_0
     287: iconst_5
     288: bipush        -15
     290: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     293: aload_0
     294: iconst_2
     295: iconst_1
     296: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     299: goto          354
     302: iload_1
     303: bipush        9
     305: if_icmpne     345
     308: aload_0
     309: bipush        11
     311: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     314: ifne          328
     317: aload_0
     318: bipush        11
     320: bipush        12
     322: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     325: goto          354
     328: aload_0
     329: bipush        11
     331: bipush        -12
     333: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     336: aload_0
     337: iconst_5
     338: iconst_1
     339: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     342: goto          354
     345: aload_0
     346: aload         14
     348: iconst_0
     349: iaload
     350: iconst_1
     351: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     354: return
     355: iinc          17, 1
     358: goto          225
     361: iconst_0
     362: istore        15
     364: iconst_0
     365: istore        16
     367: iload_1
     368: lookupswitch  { // 2
                     9: 443
                  1001: 396
               default: 490
          }
     396: aload         14
     398: iconst_0
     399: iaload
     400: iconst_5
     401: if_icmpne     490
     404: aload_0
     405: iconst_5
     406: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     409: iconst_1
     410: isub
     411: istore        15
     413: iload         15
     415: bipush        15
     417: if_icmplt     423
     420: iinc          15, -15
     423: iload         15
     425: bipush        7
     427: if_icmple     434
     430: iconst_1
     431: goto          435
     434: iconst_0
     435: istore        10
     437: iconst_1
     438: istore        16
     440: goto          490
     443: aload         14
     445: iconst_0
     446: iaload
     447: bipush        11
     449: if_icmpne     490
     452: aload_0
     453: bipush        11
     455: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     458: istore        15
     460: iload         15
     462: bipush        12
     464: if_icmplt     470
     467: iinc          15, -12
     470: iload         15
     472: bipush        6
     474: if_icmplt     481
     477: iconst_1
     478: goto          482
     481: iconst_0
     482: istore        10
     484: iconst_1
     485: istore        16
     487: goto          490
     490: iload         16
     492: ifne          547
     495: aload_0
     496: aload         14
     498: iconst_0
     499: iaload
     500: invokevirtual #72                 // Method java/util/Calendar.getActualMinimum:(I)I
     503: istore        17
     505: aload_0
     506: aload         14
     508: iconst_0
     509: iaload
     510: invokevirtual #73                 // Method java/util/Calendar.getActualMaximum:(I)I
     513: istore        18
     515: aload_0
     516: aload         14
     518: iconst_0
     519: iaload
     520: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     523: iload         17
     525: isub
     526: istore        15
     528: iload         15
     530: iload         18
     532: iload         17
     534: isub
     535: iconst_2
     536: idiv
     537: if_icmple     544
     540: iconst_1
     541: goto          545
     544: iconst_0
     545: istore        10
     547: iload         15
     549: ifeq          571
     552: aload_0
     553: aload         14
     555: iconst_0
     556: iaload
     557: aload_0
     558: aload         14
     560: iconst_0
     561: iaload
     562: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     565: iload         15
     567: isub
     568: invokevirtual #45                 // Method java/util/Calendar.set:(II)V
     571: iinc          13, 1
     574: goto          199
     577: new           #2                  // class java/lang/IllegalArgumentException
     580: dup
     581: new           #35                 // class java/lang/StringBuilder
     584: dup
     585: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     588: ldc           #74                 // String The field
     590: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     593: iload_1
     594: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     597: ldc           #76                 // String  is not supported
     599: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     602: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     605: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     608: athrow

  public static java.util.Iterator<java.util.Calendar> iterator(java.util.Date, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      17: astore_2
      18: aload_2
      19: aload_0
      20: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      23: aload_2
      24: iload_1
      25: invokestatic  #77                 // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;
      28: areturn

  public static java.util.Iterator<java.util.Calendar> iterator(java.util.Calendar, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aconst_null
      15: astore_2
      16: aconst_null
      17: astore_3
      18: iconst_1
      19: istore        4
      21: bipush        7
      23: istore        5
      25: iload_1
      26: tableswitch   { // 1 to 6
                     1: 105
                     2: 105
                     3: 105
                     4: 105
                     5: 64
                     6: 64
               default: 203
          }
      64: aload_0
      65: iconst_2
      66: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      69: astore_2
      70: aload_2
      71: invokevirtual #47                 // Method java/util/Calendar.clone:()Ljava/lang/Object;
      74: checkcast     #48                 // class java/util/Calendar
      77: astore_3
      78: aload_3
      79: iconst_2
      80: iconst_1
      81: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
      84: aload_3
      85: iconst_5
      86: iconst_m1
      87: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
      90: iload_1
      91: bipush        6
      93: if_icmpne     235
      96: iconst_2
      97: istore        4
      99: iconst_1
     100: istore        5
     102: goto          235
     105: aload_0
     106: iconst_5
     107: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
     110: astore_2
     111: aload_0
     112: iconst_5
     113: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
     116: astore_3
     117: iload_1
     118: tableswitch   { // 1 to 4
                     1: 148
                     2: 151
                     3: 160
                     4: 177
               default: 200
          }
     148: goto          235
     151: iconst_2
     152: istore        4
     154: iconst_1
     155: istore        5
     157: goto          235
     160: aload_0
     161: bipush        7
     163: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     166: istore        4
     168: iload         4
     170: iconst_1
     171: isub
     172: istore        5
     174: goto          235
     177: aload_0
     178: bipush        7
     180: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     183: iconst_3
     184: isub
     185: istore        4
     187: aload_0
     188: bipush        7
     190: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     193: iconst_3
     194: iadd
     195: istore        5
     197: goto          235
     200: goto          235
     203: new           #2                  // class java/lang/IllegalArgumentException
     206: dup
     207: new           #35                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #78                 // String The range style
     216: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: iload_1
     220: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     223: ldc           #79                 // String  is not valid.
     225: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     231: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     234: athrow
     235: iload         4
     237: iconst_1
     238: if_icmpge     244
     241: iinc          4, 7
     244: iload         4
     246: bipush        7
     248: if_icmple     254
     251: iinc          4, -7
     254: iload         5
     256: iconst_1
     257: if_icmpge     263
     260: iinc          5, 7
     263: iload         5
     265: bipush        7
     267: if_icmple     273
     270: iinc          5, -7
     273: aload_2
     274: bipush        7
     276: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     279: iload         4
     281: if_icmpeq     293
     284: aload_2
     285: iconst_5
     286: iconst_m1
     287: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     290: goto          273
     293: aload_3
     294: bipush        7
     296: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     299: iload         5
     301: if_icmpeq     313
     304: aload_3
     305: iconst_5
     306: iconst_1
     307: invokevirtual #42                 // Method java/util/Calendar.add:(II)V
     310: goto          293
     313: new           #80                 // class org/apache/commons/lang3/time/DateUtils$DateIterator
     316: dup
     317: aload_2
     318: aload_3
     319: invokespecial #81                 // Method org/apache/commons/lang3/time/DateUtils$DateIterator."<init>":(Ljava/util/Calendar;Ljava/util/Calendar;)V
     322: areturn

  public static java.util.Iterator<?> iterator(java.lang.Object, int);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: instanceof    #49                 // class java/util/Date
      18: ifeq          30
      21: aload_0
      22: checkcast     #49                 // class java/util/Date
      25: iload_1
      26: invokestatic  #82                 // Method iterator:(Ljava/util/Date;I)Ljava/util/Iterator;
      29: areturn
      30: aload_0
      31: instanceof    #48                 // class java/util/Calendar
      34: ifeq          46
      37: aload_0
      38: checkcast     #48                 // class java/util/Calendar
      41: iload_1
      42: invokestatic  #77                 // Method iterator:(Ljava/util/Calendar;I)Ljava/util/Iterator;
      45: areturn
      46: new           #52                 // class java/lang/ClassCastException
      49: dup
      50: new           #35                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #83                 // String Could not iterate based on
      59: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #55                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      72: athrow

  public static long getFragmentInMilliseconds(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #84                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInSeconds(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #86                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInMinutes(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #87                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInHours(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #88                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInDays(java.util.Date, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #85                 // Method getFragment:(Ljava/util/Date;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInMilliseconds(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #84                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInSeconds(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #86                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInMinutes(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #87                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInHours(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #88                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static long getFragmentInDays(java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
       5: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
       8: lreturn

  private static long getFragment(java.util.Date, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: invokestatic  #5                  // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      17: astore_3
      18: aload_3
      19: aload_0
      20: invokevirtual #6                  // Method java/util/Calendar.setTime:(Ljava/util/Date;)V
      23: aload_3
      24: iload_1
      25: aload_2
      26: invokestatic  #90                 // Method getFragment:(Ljava/util/Calendar;ILjava/util/concurrent/TimeUnit;)J
      29: lreturn

  private static long getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String The date must not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: lconst_0
      15: lstore_3
      16: aload_2
      17: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      20: if_acmpne     27
      23: iconst_0
      24: goto          28
      27: iconst_1
      28: istore        5
      30: iload_1
      31: lookupswitch  { // 2
                     1: 56
                     2: 79
               default: 101
          }
      56: lload_3
      57: aload_2
      58: aload_0
      59: bipush        6
      61: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      64: iload         5
      66: isub
      67: i2l
      68: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      71: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      74: ladd
      75: lstore_3
      76: goto          101
      79: lload_3
      80: aload_2
      81: aload_0
      82: iconst_5
      83: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
      86: iload         5
      88: isub
      89: i2l
      90: getstatic     #89                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      93: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      96: ladd
      97: lstore_3
      98: goto          101
     101: iload_1
     102: tableswitch   { // 1 to 14
                     1: 172
                     2: 172
                     3: 246
                     4: 246
                     5: 172
                     6: 172
                     7: 246
                     8: 246
                     9: 246
                    10: 246
                    11: 189
                    12: 206
                    13: 223
                    14: 243
               default: 246
          }
     172: lload_3
     173: aload_2
     174: aload_0
     175: bipush        11
     177: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     180: i2l
     181: getstatic     #88                 // Field java/util/concurrent/TimeUnit.HOURS:Ljava/util/concurrent/TimeUnit;
     184: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     187: ladd
     188: lstore_3
     189: lload_3
     190: aload_2
     191: aload_0
     192: bipush        12
     194: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     197: i2l
     198: getstatic     #87                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
     201: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     204: ladd
     205: lstore_3
     206: lload_3
     207: aload_2
     208: aload_0
     209: bipush        13
     211: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     214: i2l
     215: getstatic     #86                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     218: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     221: ladd
     222: lstore_3
     223: lload_3
     224: aload_2
     225: aload_0
     226: bipush        14
     228: invokevirtual #8                  // Method java/util/Calendar.get:(I)I
     231: i2l
     232: getstatic     #84                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     235: invokevirtual #91                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
     238: ladd
     239: lstore_3
     240: goto          278
     243: goto          278
     246: new           #2                  // class java/lang/IllegalArgumentException
     249: dup
     250: new           #35                 // class java/lang/StringBuilder
     253: dup
     254: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     257: ldc           #92                 // String The fragment
     259: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: iload_1
     263: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     266: ldc           #76                 // String  is not supported
     268: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     274: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     277: athrow
     278: lload_3
     279: lreturn

  public static boolean truncatedEquals(java.util.Calendar, java.util.Calendar, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #93                 // Method truncatedCompareTo:(Ljava/util/Calendar;Ljava/util/Calendar;I)I
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean truncatedEquals(java.util.Date, java.util.Date, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #94                 // Method truncatedCompareTo:(Ljava/util/Date;Ljava/util/Date;I)I
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static int truncatedCompareTo(java.util.Calendar, java.util.Calendar, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
       5: astore_3
       6: aload_1
       7: iload_2
       8: invokestatic  #57                 // Method truncate:(Ljava/util/Calendar;I)Ljava/util/Calendar;
      11: astore        4
      13: aload_3
      14: aload         4
      16: invokevirtual #95                 // Method java/util/Calendar.compareTo:(Ljava/util/Calendar;)I
      19: ireturn

  public static int truncatedCompareTo(java.util.Date, java.util.Date, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokestatic  #56                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;
       5: astore_3
       6: aload_1
       7: iload_2
       8: invokestatic  #56                 // Method truncate:(Ljava/util/Date;I)Ljava/util/Date;
      11: astore        4
      13: aload_3
      14: aload         4
      16: invokevirtual #96                 // Method java/util/Date.compareTo:(Ljava/util/Date;)I
      19: ireturn

  static {};
    Code:
       0: bipush        8
       2: anewarray     #97                 // class "[I"
       5: dup
       6: iconst_0
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: bipush        14
      14: iastore
      15: aastore
      16: dup
      17: iconst_1
      18: iconst_1
      19: newarray       int
      21: dup
      22: iconst_0
      23: bipush        13
      25: iastore
      26: aastore
      27: dup
      28: iconst_2
      29: iconst_1
      30: newarray       int
      32: dup
      33: iconst_0
      34: bipush        12
      36: iastore
      37: aastore
      38: dup
      39: iconst_3
      40: iconst_2
      41: newarray       int
      43: dup
      44: iconst_0
      45: bipush        11
      47: iastore
      48: dup
      49: iconst_1
      50: bipush        10
      52: iastore
      53: aastore
      54: dup
      55: iconst_4
      56: iconst_3
      57: newarray       int
      59: dup
      60: iconst_0
      61: iconst_5
      62: iastore
      63: dup
      64: iconst_1
      65: iconst_5
      66: iastore
      67: dup
      68: iconst_2
      69: bipush        9
      71: iastore
      72: aastore
      73: dup
      74: iconst_5
      75: iconst_2
      76: newarray       int
      78: dup
      79: iconst_0
      80: iconst_2
      81: iastore
      82: dup
      83: iconst_1
      84: sipush        1001
      87: iastore
      88: aastore
      89: dup
      90: bipush        6
      92: iconst_1
      93: newarray       int
      95: dup
      96: iconst_0
      97: iconst_1
      98: iastore
      99: aastore
     100: dup
     101: bipush        7
     103: iconst_1
     104: newarray       int
     106: dup
     107: iconst_0
     108: iconst_0
     109: iastore
     110: aastore
     111: putstatic     #71                 // Field fields:[[I
     114: return
}
