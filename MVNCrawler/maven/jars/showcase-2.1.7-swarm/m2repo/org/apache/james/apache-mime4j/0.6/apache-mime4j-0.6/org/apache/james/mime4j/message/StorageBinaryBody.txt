Compiled from "StorageBinaryBody.java"
class org.apache.james.mime4j.message.StorageBinaryBody extends org.apache.james.mime4j.message.BinaryBody {
  private org.apache.james.mime4j.storage.MultiReferenceStorage storage;

  public org.apache.james.mime4j.message.StorageBinaryBody(org.apache.james.mime4j.storage.MultiReferenceStorage);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/james/mime4j/message/BinaryBody."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
       9: return

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
       4: invokevirtual #3                  // Method org/apache/james/mime4j/storage/MultiReferenceStorage.getInputStream:()Ljava/io/InputStream;
       7: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
      16: invokevirtual #3                  // Method org/apache/james/mime4j/storage/MultiReferenceStorage.getInputStream:()Ljava/io/InputStream;
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokestatic  #6                  // Method org/apache/james/mime4j/codec/CodecUtil.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      25: aload_2
      26: invokevirtual #7                  // Method java/io/InputStream.close:()V
      29: return

  public org.apache.james.mime4j.message.StorageBinaryBody copy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
       4: invokevirtual #8                  // Method org/apache/james/mime4j/storage/MultiReferenceStorage.addReference:()V
       7: new           #9                  // class org/apache/james/mime4j/message/StorageBinaryBody
      10: dup
      11: aload_0
      12: getfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
      15: invokespecial #10                 // Method "<init>":(Lorg/apache/james/mime4j/storage/MultiReferenceStorage;)V
      18: areturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
       4: ifnull        19
       7: aload_0
       8: getfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
      11: invokevirtual #11                 // Method org/apache/james/mime4j/storage/MultiReferenceStorage.delete:()V
      14: aload_0
      15: aconst_null
      16: putfield      #2                  // Field storage:Lorg/apache/james/mime4j/storage/MultiReferenceStorage;
      19: return

  public org.apache.james.mime4j.message.SingleBody copy();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method copy:()Lorg/apache/james/mime4j/message/StorageBinaryBody;
       4: areturn
}
