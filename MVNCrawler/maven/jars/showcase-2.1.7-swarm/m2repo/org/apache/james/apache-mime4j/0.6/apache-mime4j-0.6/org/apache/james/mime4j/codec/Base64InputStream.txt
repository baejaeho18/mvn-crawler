Compiled from "Base64InputStream.java"
public class org.apache.james.mime4j.codec.Base64InputStream extends java.io.InputStream {
  private static org.apache.commons.logging.Log log;

  private static final int ENCODED_BUFFER_SIZE;

  private static final int[] BASE64_DECODE;

  private static final byte BASE64_PAD;

  private static final int EOF;

  private final byte[] singleByte;

  private boolean strict;

  private final java.io.InputStream in;

  private boolean closed;

  private final byte[] encoded;

  private int position;

  private int size;

  private final org.apache.james.mime4j.codec.ByteQueue q;

  private boolean eof;

  static final boolean $assertionsDisabled;

  public org.apache.james.mime4j.codec.Base64InputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/io/InputStream;Z)V
       6: return

  public org.apache.james.mime4j.codec.Base64InputStream(java.io.InputStream, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #3                  // Field singleByte:[B
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field closed:Z
      16: aload_0
      17: sipush        1536
      20: newarray       byte
      22: putfield      #5                  // Field encoded:[B
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field position:I
      30: aload_0
      31: iconst_0
      32: putfield      #7                  // Field size:I
      35: aload_0
      36: new           #8                  // class org/apache/james/mime4j/codec/ByteQueue
      39: dup
      40: invokespecial #9                  // Method org/apache/james/mime4j/codec/ByteQueue."<init>":()V
      43: putfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
      46: aload_1
      47: ifnonnull     58
      50: new           #11                 // class java/lang/IllegalArgumentException
      53: dup
      54: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":()V
      57: athrow
      58: aload_0
      59: aload_1
      60: putfield      #13                 // Field in:Ljava/io/InputStream;
      63: aload_0
      64: iload_2
      65: putfield      #14                 // Field strict:Z
      68: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Z
       4: ifeq          17
       7: new           #15                 // class java/io/IOException
      10: dup
      11: ldc           #16                 // String Base64InputStream has been closed
      13: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_0
      19: getfield      #3                  // Field singleByte:[B
      22: iconst_0
      23: iconst_1
      24: invokespecial #18                 // Method read0:([BII)I
      27: istore_1
      28: iload_1
      29: iconst_m1
      30: if_icmpne     35
      33: iconst_m1
      34: ireturn
      35: iload_1
      36: iconst_1
      37: if_icmpne     51
      40: aload_0
      41: getfield      #3                  // Field singleByte:[B
      44: iconst_0
      45: baload
      46: sipush        255
      49: iand
      50: ireturn
      51: goto          17

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Z
       4: ifeq          17
       7: new           #15                 // class java/io/IOException
      10: dup
      11: ldc           #16                 // String Base64InputStream has been closed
      13: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ifnonnull     29
      21: new           #19                 // class java/lang/NullPointerException
      24: dup
      25: invokespecial #20                 // Method java/lang/NullPointerException."<init>":()V
      28: athrow
      29: aload_1
      30: arraylength
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: aload_1
      38: iconst_0
      39: aload_1
      40: arraylength
      41: invokespecial #18                 // Method read0:([BII)I
      44: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Z
       4: ifeq          17
       7: new           #15                 // class java/io/IOException
      10: dup
      11: ldc           #16                 // String Base64InputStream has been closed
      13: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ifnonnull     29
      21: new           #19                 // class java/lang/NullPointerException
      24: dup
      25: invokespecial #20                 // Method java/lang/NullPointerException."<init>":()V
      28: athrow
      29: iload_2
      30: iflt          45
      33: iload_3
      34: iflt          45
      37: iload_2
      38: iload_3
      39: iadd
      40: aload_1
      41: arraylength
      42: if_icmple     53
      45: new           #21                 // class java/lang/IndexOutOfBoundsException
      48: dup
      49: invokespecial #22                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      52: athrow
      53: iload_3
      54: ifne          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: aload_1
      61: iload_2
      62: iload_2
      63: iload_3
      64: iadd
      65: invokespecial #18                 // Method read0:([BII)I
      68: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #4                  // Field closed:Z
      13: return

  private int read0(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore        4
       3: aload_0
       4: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
       7: invokevirtual #23                 // Method org/apache/james/mime4j/codec/ByteQueue.count:()I
      10: istore        5
      12: iload         5
      14: iinc          5, -1
      17: ifle          43
      20: iload         4
      22: iload_3
      23: if_icmpge     43
      26: aload_1
      27: iload         4
      29: iinc          4, 1
      32: aload_0
      33: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
      36: invokevirtual #24                 // Method org/apache/james/mime4j/codec/ByteQueue.dequeue:()B
      39: bastore
      40: goto          12
      43: aload_0
      44: getfield      #25                 // Field eof:Z
      47: ifeq          65
      50: iload         4
      52: iload_2
      53: if_icmpne     60
      56: iconst_m1
      57: goto          64
      60: iload         4
      62: iload_2
      63: isub
      64: ireturn
      65: iconst_0
      66: istore        6
      68: iconst_0
      69: istore        7
      71: iload         4
      73: iload_3
      74: if_icmpge     475
      77: aload_0
      78: getfield      #6                  // Field position:I
      81: aload_0
      82: getfield      #7                  // Field size:I
      85: if_icmpne     185
      88: aload_0
      89: getfield      #13                 // Field in:Ljava/io/InputStream;
      92: aload_0
      93: getfield      #5                  // Field encoded:[B
      96: iconst_0
      97: aload_0
      98: getfield      #5                  // Field encoded:[B
     101: arraylength
     102: invokevirtual #26                 // Method java/io/InputStream.read:([BII)I
     105: istore        8
     107: iload         8
     109: iconst_m1
     110: if_icmpne     144
     113: aload_0
     114: iconst_1
     115: putfield      #25                 // Field eof:Z
     118: iload         7
     120: ifeq          129
     123: aload_0
     124: iload         7
     126: invokespecial #27                 // Method handleUnexpectedEof:(I)V
     129: iload         4
     131: iload_2
     132: if_icmpne     139
     135: iconst_m1
     136: goto          143
     139: iload         4
     141: iload_2
     142: isub
     143: ireturn
     144: iload         8
     146: ifle          163
     149: aload_0
     150: iconst_0
     151: putfield      #6                  // Field position:I
     154: aload_0
     155: iload         8
     157: putfield      #7                  // Field size:I
     160: goto          182
     163: getstatic     #28                 // Field $assertionsDisabled:Z
     166: ifne          182
     169: iload         8
     171: ifeq          182
     174: new           #29                 // class java/lang/AssertionError
     177: dup
     178: invokespecial #30                 // Method java/lang/AssertionError."<init>":()V
     181: athrow
     182: goto          77
     185: aload_0
     186: getfield      #6                  // Field position:I
     189: aload_0
     190: getfield      #7                  // Field size:I
     193: if_icmpge     71
     196: iload         4
     198: iload_3
     199: if_icmpge     71
     202: aload_0
     203: getfield      #5                  // Field encoded:[B
     206: aload_0
     207: dup
     208: getfield      #6                  // Field position:I
     211: dup_x1
     212: iconst_1
     213: iadd
     214: putfield      #6                  // Field position:I
     217: baload
     218: sipush        255
     221: iand
     222: istore        8
     224: iload         8
     226: bipush        61
     228: if_icmpne     250
     231: aload_0
     232: iload         6
     234: iload         7
     236: aload_1
     237: iload         4
     239: iload_3
     240: invokespecial #31                 // Method decodePad:(II[BII)I
     243: istore        4
     245: iload         4
     247: iload_2
     248: isub
     249: ireturn
     250: getstatic     #32                 // Field BASE64_DECODE:[I
     253: iload         8
     255: iaload
     256: istore        9
     258: iload         9
     260: ifge          266
     263: goto          185
     266: iload         6
     268: bipush        6
     270: ishl
     271: iload         9
     273: ior
     274: istore        6
     276: iinc          7, 1
     279: iload         7
     281: iconst_4
     282: if_icmpne     472
     285: iconst_0
     286: istore        7
     288: iload         6
     290: bipush        16
     292: iushr
     293: i2b
     294: istore        10
     296: iload         6
     298: bipush        8
     300: iushr
     301: i2b
     302: istore        11
     304: iload         6
     306: i2b
     307: istore        12
     309: iload         4
     311: iload_3
     312: iconst_2
     313: isub
     314: if_icmpge     347
     317: aload_1
     318: iload         4
     320: iinc          4, 1
     323: iload         10
     325: bastore
     326: aload_1
     327: iload         4
     329: iinc          4, 1
     332: iload         11
     334: bastore
     335: aload_1
     336: iload         4
     338: iinc          4, 1
     341: iload         12
     343: bastore
     344: goto          472
     347: iload         4
     349: iload_3
     350: iconst_1
     351: isub
     352: if_icmpge     385
     355: aload_1
     356: iload         4
     358: iinc          4, 1
     361: iload         10
     363: bastore
     364: aload_1
     365: iload         4
     367: iinc          4, 1
     370: iload         11
     372: bastore
     373: aload_0
     374: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     377: iload         12
     379: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     382: goto          448
     385: iload         4
     387: iload_3
     388: if_icmpge     421
     391: aload_1
     392: iload         4
     394: iinc          4, 1
     397: iload         10
     399: bastore
     400: aload_0
     401: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     404: iload         11
     406: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     409: aload_0
     410: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     413: iload         12
     415: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     418: goto          448
     421: aload_0
     422: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     425: iload         10
     427: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     430: aload_0
     431: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     434: iload         11
     436: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     439: aload_0
     440: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     443: iload         12
     445: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     448: getstatic     #28                 // Field $assertionsDisabled:Z
     451: ifne          468
     454: iload         4
     456: iload_3
     457: if_icmpeq     468
     460: new           #29                 // class java/lang/AssertionError
     463: dup
     464: invokespecial #30                 // Method java/lang/AssertionError."<init>":()V
     467: athrow
     468: iload_3
     469: iload_2
     470: isub
     471: ireturn
     472: goto          185
     475: getstatic     #28                 // Field $assertionsDisabled:Z
     478: ifne          494
     481: iload         7
     483: ifeq          494
     486: new           #29                 // class java/lang/AssertionError
     489: dup
     490: invokespecial #30                 // Method java/lang/AssertionError."<init>":()V
     493: athrow
     494: getstatic     #28                 // Field $assertionsDisabled:Z
     497: ifne          514
     500: iload         4
     502: iload_3
     503: if_icmpeq     514
     506: new           #29                 // class java/lang/AssertionError
     509: dup
     510: invokespecial #30                 // Method java/lang/AssertionError."<init>":()V
     513: athrow
     514: iload_3
     515: iload_2
     516: isub
     517: ireturn

  private int decodePad(int, int, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #25                 // Field eof:Z
       5: iload_2
       6: iconst_2
       7: if_icmpne     47
      10: iload_1
      11: iconst_4
      12: iushr
      13: i2b
      14: istore        6
      16: iload         4
      18: iload         5
      20: if_icmpge     35
      23: aload_3
      24: iload         4
      26: iinc          4, 1
      29: iload         6
      31: bastore
      32: goto          44
      35: aload_0
      36: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
      39: iload         6
      41: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
      44: goto          153
      47: iload_2
      48: iconst_3
      49: if_icmpne     148
      52: iload_1
      53: bipush        10
      55: iushr
      56: i2b
      57: istore        6
      59: iload_1
      60: iconst_2
      61: iushr
      62: sipush        255
      65: iand
      66: i2b
      67: istore        7
      69: iload         4
      71: iload         5
      73: iconst_1
      74: isub
      75: if_icmpge     99
      78: aload_3
      79: iload         4
      81: iinc          4, 1
      84: iload         6
      86: bastore
      87: aload_3
      88: iload         4
      90: iinc          4, 1
      93: iload         7
      95: bastore
      96: goto          145
      99: iload         4
     101: iload         5
     103: if_icmpge     127
     106: aload_3
     107: iload         4
     109: iinc          4, 1
     112: iload         6
     114: bastore
     115: aload_0
     116: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     119: iload         7
     121: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     124: goto          145
     127: aload_0
     128: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     131: iload         6
     133: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     136: aload_0
     137: getfield      #10                 // Field q:Lorg/apache/james/mime4j/codec/ByteQueue;
     140: iload         7
     142: invokevirtual #33                 // Method org/apache/james/mime4j/codec/ByteQueue.enqueue:(B)V
     145: goto          153
     148: aload_0
     149: iload_2
     150: invokespecial #34                 // Method handleUnexpecedPad:(I)V
     153: iload         4
     155: ireturn

  private void handleUnexpectedEof(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field strict:Z
       4: ifeq          17
       7: new           #15                 // class java/io/IOException
      10: dup
      11: ldc           #35                 // String unexpected end of file
      13: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #36                 // Field log:Lorg/apache/commons/logging/Log;
      20: new           #37                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #39                 // String unexpected end of file; dropping
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #42                 // String  sextet(s)
      38: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      49: return

  private void handleUnexpecedPad(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field strict:Z
       4: ifeq          17
       7: new           #15                 // class java/io/IOException
      10: dup
      11: ldc           #45                 // String unexpected padding character
      13: invokespecial #17                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #36                 // Field log:Lorg/apache/commons/logging/Log;
      20: new           #37                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #46                 // String unexpected padding character; dropping
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #42                 // String  sextet(s)
      38: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      49: return

  static {};
    Code:
       0: ldc_w         #47                 // class org/apache/james/mime4j/codec/Base64InputStream
       3: invokevirtual #48                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #28                 // Field $assertionsDisabled:Z
      17: ldc_w         #47                 // class org/apache/james/mime4j/codec/Base64InputStream
      20: invokestatic  #49                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      23: putstatic     #36                 // Field log:Lorg/apache/commons/logging/Log;
      26: sipush        256
      29: newarray       int
      31: putstatic     #32                 // Field BASE64_DECODE:[I
      34: iconst_0
      35: istore_0
      36: iload_0
      37: sipush        256
      40: if_icmpge     55
      43: getstatic     #32                 // Field BASE64_DECODE:[I
      46: iload_0
      47: iconst_m1
      48: iastore
      49: iinc          0, 1
      52: goto          36
      55: iconst_0
      56: istore_0
      57: iload_0
      58: getstatic     #50                 // Field org/apache/james/mime4j/codec/Base64OutputStream.BASE64_TABLE:[B
      61: arraylength
      62: if_icmpge     85
      65: getstatic     #32                 // Field BASE64_DECODE:[I
      68: getstatic     #50                 // Field org/apache/james/mime4j/codec/Base64OutputStream.BASE64_TABLE:[B
      71: iload_0
      72: baload
      73: sipush        255
      76: iand
      77: iload_0
      78: iastore
      79: iinc          0, 1
      82: goto          57
      85: return
}
