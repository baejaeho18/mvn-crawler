Compiled from "BufferedLineReaderInputStream.java"
public class org.apache.james.mime4j.io.BufferedLineReaderInputStream extends org.apache.james.mime4j.io.LineReaderInputStream {
  private boolean truncated;

  private byte[] buffer;

  private int bufpos;

  private int buflen;

  private final int maxLineLen;

  public org.apache.james.mime4j.io.BufferedLineReaderInputStream(java.io.InputStream, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/james/mime4j/io/LineReaderInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_1
       6: ifnonnull     19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String Input stream may not be null
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_2
      20: ifgt          33
      23: new           #2                  // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #5                  // String Buffer size may not be negative or zero
      29: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: iload_2
      35: newarray       byte
      37: putfield      #6                  // Field buffer:[B
      40: aload_0
      41: iconst_0
      42: putfield      #7                  // Field bufpos:I
      45: aload_0
      46: iconst_0
      47: putfield      #8                  // Field buflen:I
      50: aload_0
      51: iload_3
      52: putfield      #9                  // Field maxLineLen:I
      55: aload_0
      56: iconst_0
      57: putfield      #10                 // Field truncated:Z
      60: return

  public org.apache.james.mime4j.io.BufferedLineReaderInputStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_m1
       4: invokespecial #11                 // Method "<init>":(Ljava/io/InputStream;II)V
       7: return

  private void expand(int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: getfield      #8                  // Field buflen:I
       8: aload_0
       9: getfield      #7                  // Field bufpos:I
      12: isub
      13: istore_3
      14: iload_3
      15: ifle          35
      18: aload_0
      19: getfield      #6                  // Field buffer:[B
      22: aload_0
      23: getfield      #7                  // Field bufpos:I
      26: aload_2
      27: aload_0
      28: getfield      #7                  // Field bufpos:I
      31: iload_3
      32: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: aload_0
      36: aload_2
      37: putfield      #6                  // Field buffer:[B
      40: return

  public void ensureCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field buffer:[B
       5: arraylength
       6: if_icmple     14
       9: aload_0
      10: iload_1
      11: invokespecial #13                 // Method expand:(I)V
      14: return

  public int fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bufpos:I
       4: ifle          48
       7: aload_0
       8: getfield      #8                  // Field buflen:I
      11: aload_0
      12: getfield      #7                  // Field bufpos:I
      15: isub
      16: istore_1
      17: iload_1
      18: ifle          38
      21: aload_0
      22: getfield      #6                  // Field buffer:[B
      25: aload_0
      26: getfield      #7                  // Field bufpos:I
      29: aload_0
      30: getfield      #6                  // Field buffer:[B
      33: iconst_0
      34: iload_1
      35: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_0
      39: iconst_0
      40: putfield      #7                  // Field bufpos:I
      43: aload_0
      44: iload_1
      45: putfield      #8                  // Field buflen:I
      48: aload_0
      49: getfield      #8                  // Field buflen:I
      52: istore_2
      53: aload_0
      54: getfield      #6                  // Field buffer:[B
      57: arraylength
      58: iload_2
      59: isub
      60: istore_3
      61: aload_0
      62: getfield      #14                 // Field in:Ljava/io/InputStream;
      65: aload_0
      66: getfield      #6                  // Field buffer:[B
      69: iload_2
      70: iload_3
      71: invokevirtual #15                 // Method java/io/InputStream.read:([BII)I
      74: istore_1
      75: iload_1
      76: iconst_m1
      77: if_icmpne     82
      80: iconst_m1
      81: ireturn
      82: aload_0
      83: iload_2
      84: iload_1
      85: iadd
      86: putfield      #8                  // Field buflen:I
      89: iload_1
      90: ireturn

  public boolean hasBufferedData();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bufpos:I
       4: aload_0
       5: getfield      #8                  // Field buflen:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void truncate();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method clear:()V
       4: aload_0
       5: iconst_1
       6: putfield      #10                 // Field truncated:Z
       9: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field truncated:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: iconst_0
      10: istore_1
      11: aload_0
      12: invokevirtual #17                 // Method hasBufferedData:()Z
      15: ifne          30
      18: aload_0
      19: invokevirtual #18                 // Method fillBuffer:()I
      22: istore_1
      23: iload_1
      24: iconst_m1
      25: if_icmpne     11
      28: iconst_m1
      29: ireturn
      30: aload_0
      31: getfield      #6                  // Field buffer:[B
      34: aload_0
      35: dup
      36: getfield      #7                  // Field bufpos:I
      39: dup_x1
      40: iconst_1
      41: iadd
      42: putfield      #7                  // Field bufpos:I
      45: baload
      46: sipush        255
      49: iand
      50: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field truncated:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: iconst_0
      16: istore        4
      18: aload_0
      19: invokevirtual #17                 // Method hasBufferedData:()Z
      22: ifne          39
      25: aload_0
      26: invokevirtual #18                 // Method fillBuffer:()I
      29: istore        4
      31: iload         4
      33: iconst_m1
      34: if_icmpne     18
      37: iconst_m1
      38: ireturn
      39: aload_0
      40: getfield      #8                  // Field buflen:I
      43: aload_0
      44: getfield      #7                  // Field bufpos:I
      47: isub
      48: istore        5
      50: iload         5
      52: iload_3
      53: if_icmple     59
      56: iload_3
      57: istore        5
      59: aload_0
      60: getfield      #6                  // Field buffer:[B
      63: aload_0
      64: getfield      #7                  // Field bufpos:I
      67: aload_1
      68: iload_2
      69: iload         5
      71: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_0
      75: dup
      76: getfield      #7                  // Field bufpos:I
      79: iload         5
      81: iadd
      82: putfield      #7                  // Field bufpos:I
      85: iload         5
      87: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field truncated:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: aload_1
      17: iconst_0
      18: aload_1
      19: arraylength
      20: invokevirtual #19                 // Method read:([BII)I
      23: ireturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int readLine(org.apache.james.mime4j.util.ByteArrayBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #20                 // String Buffer may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #10                 // Field truncated:Z
      18: ifeq          23
      21: iconst_m1
      22: ireturn
      23: iconst_0
      24: istore_2
      25: iconst_0
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iload_3
      31: ifne          154
      34: aload_0
      35: invokevirtual #17                 // Method hasBufferedData:()Z
      38: ifne          56
      41: aload_0
      42: invokevirtual #18                 // Method fillBuffer:()I
      45: istore        4
      47: iload         4
      49: iconst_m1
      50: if_icmpne     56
      53: goto          154
      56: aload_0
      57: bipush        10
      59: invokevirtual #21                 // Method indexOf:(B)I
      62: istore        5
      64: iload         5
      66: iconst_m1
      67: if_icmpeq     86
      70: iconst_1
      71: istore_3
      72: iload         5
      74: iconst_1
      75: iadd
      76: aload_0
      77: invokevirtual #22                 // Method pos:()I
      80: isub
      81: istore        6
      83: goto          92
      86: aload_0
      87: invokevirtual #23                 // Method length:()I
      90: istore        6
      92: iload         6
      94: ifle          123
      97: aload_1
      98: aload_0
      99: invokevirtual #24                 // Method buf:()[B
     102: aload_0
     103: invokevirtual #22                 // Method pos:()I
     106: iload         6
     108: invokevirtual #25                 // Method org/apache/james/mime4j/util/ByteArrayBuffer.append:([BII)V
     111: aload_0
     112: iload         6
     114: invokevirtual #26                 // Method skip:(I)I
     117: pop
     118: iload_2
     119: iload         6
     121: iadd
     122: istore_2
     123: aload_0
     124: getfield      #9                  // Field maxLineLen:I
     127: ifle          151
     130: aload_1
     131: invokevirtual #27                 // Method org/apache/james/mime4j/util/ByteArrayBuffer.length:()I
     134: aload_0
     135: getfield      #9                  // Field maxLineLen:I
     138: if_icmplt     151
     141: new           #28                 // class org/apache/james/mime4j/io/MaxLineLimitException
     144: dup
     145: ldc           #29                 // String Maximum line length limit exceeded
     147: invokespecial #30                 // Method org/apache/james/mime4j/io/MaxLineLimitException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: goto          30
     154: iload_2
     155: ifne          166
     158: iload         4
     160: iconst_m1
     161: if_icmpne     166
     164: iconst_m1
     165: ireturn
     166: iload_2
     167: ireturn

  public int indexOf(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #31                 // String Pattern may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: aload_0
      16: getfield      #7                  // Field bufpos:I
      19: if_icmplt     36
      22: iload_3
      23: iflt          36
      26: iload_2
      27: iload_3
      28: iadd
      29: aload_0
      30: getfield      #8                  // Field buflen:I
      33: if_icmple     44
      36: new           #32                 // class java/lang/IndexOutOfBoundsException
      39: dup
      40: invokespecial #33                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      43: athrow
      44: iload_3
      45: aload_1
      46: arraylength
      47: if_icmpge     52
      50: iconst_m1
      51: ireturn
      52: sipush        256
      55: newarray       int
      57: astore        4
      59: iconst_0
      60: istore        5
      62: iload         5
      64: aload         4
      66: arraylength
      67: if_icmpge     85
      70: aload         4
      72: iload         5
      74: aload_1
      75: arraylength
      76: iconst_1
      77: iadd
      78: iastore
      79: iinc          5, 1
      82: goto          62
      85: iconst_0
      86: istore        5
      88: iload         5
      90: aload_1
      91: arraylength
      92: if_icmpge     121
      95: aload_1
      96: iload         5
      98: baload
      99: sipush        255
     102: iand
     103: istore        6
     105: aload         4
     107: iload         6
     109: aload_1
     110: arraylength
     111: iload         5
     113: isub
     114: iastore
     115: iinc          5, 1
     118: goto          88
     121: iconst_0
     122: istore        5
     124: iload         5
     126: iload_3
     127: aload_1
     128: arraylength
     129: isub
     130: if_icmpgt     235
     133: iload_2
     134: iload         5
     136: iadd
     137: istore        6
     139: iconst_1
     140: istore        7
     142: iconst_0
     143: istore        8
     145: iload         8
     147: aload_1
     148: arraylength
     149: if_icmpge     181
     152: aload_0
     153: getfield      #6                  // Field buffer:[B
     156: iload         6
     158: iload         8
     160: iadd
     161: baload
     162: aload_1
     163: iload         8
     165: baload
     166: if_icmpeq     175
     169: iconst_0
     170: istore        7
     172: goto          181
     175: iinc          8, 1
     178: goto          145
     181: iload         7
     183: ifeq          189
     186: iload         6
     188: ireturn
     189: iload         6
     191: aload_1
     192: arraylength
     193: iadd
     194: istore        8
     196: iload         8
     198: aload_0
     199: getfield      #6                  // Field buffer:[B
     202: arraylength
     203: if_icmplt     209
     206: goto          235
     209: aload_0
     210: getfield      #6                  // Field buffer:[B
     213: iload         8
     215: baload
     216: sipush        255
     219: iand
     220: istore        9
     222: iload         5
     224: aload         4
     226: iload         9
     228: iaload
     229: iadd
     230: istore        5
     232: goto          124
     235: iconst_m1
     236: ireturn

  public int indexOf(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #7                  // Field bufpos:I
       6: aload_0
       7: getfield      #8                  // Field buflen:I
      10: aload_0
      11: getfield      #7                  // Field bufpos:I
      14: isub
      15: invokevirtual #34                 // Method indexOf:([BII)I
      18: ireturn

  public int indexOf(byte, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #7                  // Field bufpos:I
       5: if_icmplt     22
       8: iload_3
       9: iflt          22
      12: iload_2
      13: iload_3
      14: iadd
      15: aload_0
      16: getfield      #8                  // Field buflen:I
      19: if_icmple     30
      22: new           #32                 // class java/lang/IndexOutOfBoundsException
      25: dup
      26: invokespecial #33                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      29: athrow
      30: iload_2
      31: istore        4
      33: iload         4
      35: iload_2
      36: iload_3
      37: iadd
      38: if_icmpge     61
      41: aload_0
      42: getfield      #6                  // Field buffer:[B
      45: iload         4
      47: baload
      48: iload_1
      49: if_icmpne     55
      52: iload         4
      54: ireturn
      55: iinc          4, 1
      58: goto          33
      61: iconst_m1
      62: ireturn

  public int indexOf(byte);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #7                  // Field bufpos:I
       6: aload_0
       7: getfield      #8                  // Field buflen:I
      10: aload_0
      11: getfield      #7                  // Field bufpos:I
      14: isub
      15: invokevirtual #35                 // Method indexOf:(BII)I
      18: ireturn

  public byte charAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field bufpos:I
       5: if_icmplt     16
       8: iload_1
       9: aload_0
      10: getfield      #8                  // Field buflen:I
      13: if_icmple     24
      16: new           #32                 // class java/lang/IndexOutOfBoundsException
      19: dup
      20: invokespecial #33                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      23: athrow
      24: aload_0
      25: getfield      #6                  // Field buffer:[B
      28: iload_1
      29: baload
      30: ireturn

  public byte[] buf();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:[B
       4: areturn

  public int pos();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bufpos:I
       4: ireturn

  public int limit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buflen:I
       4: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buflen:I
       4: aload_0
       5: getfield      #7                  // Field bufpos:I
       8: isub
       9: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:[B
       4: arraylength
       5: ireturn

  public int skip(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #8                  // Field buflen:I
       5: aload_0
       6: getfield      #7                  // Field bufpos:I
       9: isub
      10: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      13: istore_2
      14: aload_0
      15: dup
      16: getfield      #7                  // Field bufpos:I
      19: iload_2
      20: iadd
      21: putfield      #7                  // Field bufpos:I
      24: iload_2
      25: ireturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #7                  // Field bufpos:I
       5: aload_0
       6: iconst_0
       7: putfield      #8                  // Field buflen:I
      10: return

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #39                 // String [pos:
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #7                  // Field bufpos:I
      20: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #42                 // String ]
      27: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #43                 // String [limit:
      34: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #8                  // Field buflen:I
      43: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #42                 // String ]
      50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: ldc           #44                 // String [
      57: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: getfield      #7                  // Field bufpos:I
      65: istore_2
      66: iload_2
      67: aload_0
      68: getfield      #8                  // Field buflen:I
      71: if_icmpge     92
      74: aload_1
      75: aload_0
      76: getfield      #6                  // Field buffer:[B
      79: iload_2
      80: baload
      81: i2c
      82: invokevirtual #45                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      85: pop
      86: iinc          2, 1
      89: goto          66
      92: aload_1
      93: ldc           #42                 // String ]
      95: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: aload_1
     100: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: areturn
}
