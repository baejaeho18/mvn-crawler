Compiled from "LimitedInputStream.java"
public class org.apache.james.mime4j.io.LimitedInputStream extends org.apache.james.mime4j.io.PositionInputStream {
  private final long limit;

  public org.apache.james.mime4j.io.LimitedInputStream(java.io.InputStream, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/james/mime4j/io/PositionInputStream."<init>":(Ljava/io/InputStream;)V
       5: lload_2
       6: lconst_0
       7: lcmp
       8: ifge          21
      11: new           #2                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #3                  // String Limit may not be negative
      17: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: lload_2
      23: putfield      #5                  // Field limit:J
      26: return

  private void enforceLimit() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field position:J
       4: aload_0
       5: getfield      #5                  // Field limit:J
       8: lcmp
       9: iflt          22
      12: new           #7                  // class java/io/IOException
      15: dup
      16: ldc           #8                  // String Input stream limit exceeded
      18: invokespecial #9                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method enforceLimit:()V
       4: aload_0
       5: invokespecial #11                 // Method org/apache/james/mime4j/io/PositionInputStream.read:()I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method enforceLimit:()V
       4: iload_3
       5: aload_0
       6: invokespecial #12                 // Method getBytesLeft:()I
       9: invokestatic  #13                 // Method java/lang/Math.min:(II)I
      12: istore_3
      13: aload_0
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokespecial #14                 // Method org/apache/james/mime4j/io/PositionInputStream.read:([BII)I
      20: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method enforceLimit:()V
       4: lload_1
       5: aload_0
       6: invokespecial #12                 // Method getBytesLeft:()I
       9: i2l
      10: invokestatic  #15                 // Method java/lang/Math.min:(JJ)J
      13: lstore_1
      14: aload_0
      15: lload_1
      16: invokespecial #16                 // Method org/apache/james/mime4j/io/PositionInputStream.skip:(J)J
      19: lreturn

  private int getBytesLeft();
    Code:
       0: ldc2_w        #17                 // long 2147483647l
       3: aload_0
       4: getfield      #5                  // Field limit:J
       7: aload_0
       8: getfield      #6                  // Field position:J
      11: lsub
      12: invokestatic  #15                 // Method java/lang/Math.min:(JJ)J
      15: l2i
      16: ireturn
}
