Compiled from "CXFHttpAsyncRequestProducer.java"
public class org.apache.cxf.transport.http.asyncclient.CXFHttpAsyncRequestProducer implements org.apache.http.nio.protocol.HttpAsyncRequestProducer {
  private final org.apache.cxf.transport.http.asyncclient.CXFHttpRequest request;

  private final org.apache.cxf.transport.http.asyncclient.SharedOutputBuffer buf;

  private volatile org.apache.cxf.io.CachedOutputStream content;

  private volatile java.nio.ByteBuffer buffer;

  private volatile java.io.InputStream fis;

  private volatile java.nio.channels.ReadableByteChannel chan;

  public org.apache.cxf.transport.http.asyncclient.CXFHttpAsyncRequestProducer(org.apache.cxf.transport.http.asyncclient.CXFHttpRequest, org.apache.cxf.transport.http.asyncclient.SharedOutputBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field buf:Lorg/apache/cxf/transport/http/asyncclient/SharedOutputBuffer;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field request:Lorg/apache/cxf/transport/http/asyncclient/CXFHttpRequest;
      14: return

  public org.apache.http.HttpHost getTarget();
    Code:
       0: aload_0
       1: getfield      #3                  // Field request:Lorg/apache/cxf/transport/http/asyncclient/CXFHttpRequest;
       4: invokevirtual #4                  // Method org/apache/cxf/transport/http/asyncclient/CXFHttpRequest.getURI:()Ljava/net/URI;
       7: astore_1
       8: aload_1
       9: ifnonnull     22
      12: new           #5                  // class java/lang/IllegalStateException
      15: dup
      16: ldc           #6                  // String Request URI is null
      18: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: invokevirtual #8                  // Method java/net/URI.isAbsolute:()Z
      26: ifne          39
      29: new           #5                  // class java/lang/IllegalStateException
      32: dup
      33: ldc           #9                  // String Request URI is not absolute
      35: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: new           #10                 // class org/apache/http/HttpHost
      42: dup
      43: aload_1
      44: invokevirtual #11                 // Method java/net/URI.getHost:()Ljava/lang/String;
      47: aload_1
      48: invokevirtual #12                 // Method java/net/URI.getPort:()I
      51: aload_1
      52: invokevirtual #13                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      55: invokespecial #14                 // Method org/apache/http/HttpHost."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      58: areturn

  public org.apache.http.HttpRequest generateRequest() throws java.io.IOException, org.apache.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field request:Lorg/apache/cxf/transport/http/asyncclient/CXFHttpRequest;
       4: areturn

  public void produceContent(org.apache.http.nio.ContentEncoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field content:Lorg/apache/cxf/io/CachedOutputStream;
       4: ifnull        180
       7: aload_0
       8: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      11: ifnonnull     96
      14: aload_0
      15: getfield      #15                 // Field content:Lorg/apache/cxf/io/CachedOutputStream;
      18: invokevirtual #17                 // Method org/apache/cxf/io/CachedOutputStream.getTempFile:()Ljava/io/File;
      21: ifnonnull     41
      24: aload_0
      25: aload_0
      26: getfield      #15                 // Field content:Lorg/apache/cxf/io/CachedOutputStream;
      29: invokevirtual #18                 // Method org/apache/cxf/io/CachedOutputStream.getBytes:()[B
      32: invokestatic  #19                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      35: putfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      38: goto          96
      41: aload_0
      42: aload_0
      43: getfield      #15                 // Field content:Lorg/apache/cxf/io/CachedOutputStream;
      46: invokevirtual #20                 // Method org/apache/cxf/io/CachedOutputStream.getInputStream:()Ljava/io/InputStream;
      49: putfield      #21                 // Field fis:Ljava/io/InputStream;
      52: aload_0
      53: aload_0
      54: getfield      #21                 // Field fis:Ljava/io/InputStream;
      57: instanceof    #22                 // class java/io/FileInputStream
      60: ifeq          76
      63: aload_0
      64: getfield      #21                 // Field fis:Ljava/io/InputStream;
      67: checkcast     #22                 // class java/io/FileInputStream
      70: invokevirtual #23                 // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      73: goto          83
      76: aload_0
      77: getfield      #21                 // Field fis:Ljava/io/InputStream;
      80: invokestatic  #24                 // Method java/nio/channels/Channels.newChannel:(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;
      83: putfield      #25                 // Field chan:Ljava/nio/channels/ReadableByteChannel;
      86: aload_0
      87: sipush        8192
      90: invokestatic  #26                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      93: putfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      96: iconst_m1
      97: istore_3
      98: aload_0
      99: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
     102: invokevirtual #27                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     105: pop
     106: aload_0
     107: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
     110: invokevirtual #28                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     113: ifeq          145
     116: aload_0
     117: getfield      #25                 // Field chan:Ljava/nio/channels/ReadableByteChannel;
     120: ifnull        145
     123: aload_0
     124: getfield      #25                 // Field chan:Ljava/nio/channels/ReadableByteChannel;
     127: aload_0
     128: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
     131: invokeinterface #29,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
     136: istore_3
     137: aload_0
     138: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
     141: invokevirtual #30                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     144: pop
     145: aload_1
     146: aload_0
     147: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
     150: invokeinterface #31,  2           // InterfaceMethod org/apache/http/nio/ContentEncoder.write:(Ljava/nio/ByteBuffer;)I
     155: pop
     156: aload_0
     157: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
     160: invokevirtual #28                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     163: ifne          177
     166: iload_3
     167: iconst_m1
     168: if_icmpne     177
     171: aload_1
     172: invokeinterface #32,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.complete:()V
     177: goto          190
     180: aload_0
     181: getfield      #2                  // Field buf:Lorg/apache/cxf/transport/http/asyncclient/SharedOutputBuffer;
     184: aload_1
     185: aload_2
     186: invokevirtual #33                 // Method org/apache/cxf/transport/http/asyncclient/SharedOutputBuffer.produceContent:(Lorg/apache/http/nio/ContentEncoder;Lorg/apache/http/nio/IOControl;)I
     189: pop
     190: return

  public void requestCompleted(org.apache.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fis:Ljava/io/InputStream;
       4: ifnull        28
       7: aload_0
       8: getfield      #21                 // Field fis:Ljava/io/InputStream;
      11: invokevirtual #34                 // Method java/io/InputStream.close:()V
      14: goto          18
      17: astore_2
      18: aload_0
      19: aconst_null
      20: putfield      #25                 // Field chan:Ljava/nio/channels/ReadableByteChannel;
      23: aload_0
      24: aconst_null
      25: putfield      #21                 // Field fis:Ljava/io/InputStream;
      28: aload_0
      29: aconst_null
      30: putfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      33: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:Lorg/apache/cxf/transport/http/asyncclient/SharedOutputBuffer;
       4: invokevirtual #36                 // Method org/apache/cxf/transport/http/asyncclient/SharedOutputBuffer.shutdown:()V
       7: return

  public boolean isRepeatable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field request:Lorg/apache/cxf/transport/http/asyncclient/CXFHttpRequest;
       4: invokevirtual #37                 // Method org/apache/cxf/transport/http/asyncclient/CXFHttpRequest.getOutputStream:()Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit$AsyncWrappedOutputStream;
       7: invokevirtual #38                 // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit$AsyncWrappedOutputStream.retransmitable:()Z
      10: ireturn

  public void resetRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field request:Lorg/apache/cxf/transport/http/asyncclient/CXFHttpRequest;
       4: invokevirtual #37                 // Method org/apache/cxf/transport/http/asyncclient/CXFHttpRequest.getOutputStream:()Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit$AsyncWrappedOutputStream;
       7: invokevirtual #38                 // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit$AsyncWrappedOutputStream.retransmitable:()Z
      10: ifeq          27
      13: aload_0
      14: aload_0
      15: getfield      #3                  // Field request:Lorg/apache/cxf/transport/http/asyncclient/CXFHttpRequest;
      18: invokevirtual #37                 // Method org/apache/cxf/transport/http/asyncclient/CXFHttpRequest.getOutputStream:()Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit$AsyncWrappedOutputStream;
      21: invokevirtual #39                 // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit$AsyncWrappedOutputStream.getCachedStream:()Lorg/apache/cxf/io/CachedOutputStream;
      24: putfield      #15                 // Field content:Lorg/apache/cxf/io/CachedOutputStream;
      27: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field buf:Lorg/apache/cxf/transport/http/asyncclient/SharedOutputBuffer;
       4: invokevirtual #40                 // Method org/apache/cxf/transport/http/asyncclient/SharedOutputBuffer.close:()V
       7: aload_0
       8: getfield      #21                 // Field fis:Ljava/io/InputStream;
      11: ifnull        35
      14: aload_0
      15: getfield      #21                 // Field fis:Ljava/io/InputStream;
      18: invokevirtual #34                 // Method java/io/InputStream.close:()V
      21: goto          25
      24: astore_1
      25: aload_0
      26: aconst_null
      27: putfield      #25                 // Field chan:Ljava/nio/channels/ReadableByteChannel;
      30: aload_0
      31: aconst_null
      32: putfield      #21                 // Field fis:Ljava/io/InputStream;
      35: aload_0
      36: aconst_null
      37: putfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      40: return
    Exception table:
       from    to  target type
          14    21    24   Class java/io/IOException
}
