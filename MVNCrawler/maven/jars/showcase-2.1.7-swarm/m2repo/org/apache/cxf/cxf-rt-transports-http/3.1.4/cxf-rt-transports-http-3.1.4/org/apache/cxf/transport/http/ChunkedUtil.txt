Compiled from "ChunkedUtil.java"
final class org.apache.cxf.transport.http.ChunkedUtil {
  private org.apache.cxf.transport.http.ChunkedUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.io.InputStream getPartialResponse(java.net.HttpURLConnection, int) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: iload_1
       3: sipush        202
       6: if_icmpeq     16
       9: iload_1
      10: sipush        200
      13: if_icmpne     50
      16: aload_0
      17: invokevirtual #2                  // Method java/net/HttpURLConnection.getContentLength:()I
      20: ifle          31
      23: aload_0
      24: invokevirtual #3                  // Method java/net/HttpURLConnection.getInputStream:()Ljava/io/InputStream;
      27: astore_2
      28: goto          50
      31: aload_0
      32: invokestatic  #4                  // Method hasChunkedResponse:(Ljava/net/HttpURLConnection;)Z
      35: ifne          45
      38: aload_0
      39: invokestatic  #5                  // Method hasEofTerminatedResponse:(Ljava/net/HttpURLConnection;)Z
      42: ifeq          50
      45: aload_0
      46: invokestatic  #6                  // Method getNonEmptyContent:(Ljava/net/HttpURLConnection;)Ljava/io/InputStream;
      49: astore_2
      50: aload_2
      51: areturn

  private static boolean hasChunkedResponse(java.net.HttpURLConnection);
    Code:
       0: ldc           #7                  // String chunked
       2: aload_0
       3: ldc           #8                  // String Transfer-Encoding
       5: invokevirtual #9                  // Method java/net/HttpURLConnection.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;
       8: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ireturn

  private static boolean hasEofTerminatedResponse(java.net.HttpURLConnection);
    Code:
       0: ldc           #11                 // String close
       2: aload_0
       3: ldc           #12                 // String Connection
       5: invokevirtual #9                  // Method java/net/HttpURLConnection.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;
       8: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ireturn

  private static java.io.InputStream getNonEmptyContent(java.net.HttpURLConnection);
    Code:
       0: aconst_null
       1: astore_1
       2: new           #13                 // class java/io/PushbackInputStream
       5: dup
       6: aload_0
       7: invokevirtual #3                  // Method java/net/HttpURLConnection.getInputStream:()Ljava/io/InputStream;
      10: invokespecial #14                 // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;)V
      13: astore_2
      14: aload_2
      15: invokevirtual #15                 // Method java/io/PushbackInputStream.read:()I
      18: istore_3
      19: iload_3
      20: iconst_m1
      21: if_icmpeq     32
      24: aload_2
      25: iload_3
      26: i2b
      27: invokevirtual #16                 // Method java/io/PushbackInputStream.unread:(I)V
      30: aload_2
      31: astore_1
      32: goto          36
      35: astore_2
      36: aload_1
      37: areturn
    Exception table:
       from    to  target type
           2    32    35   Class java/io/IOException
}
