Compiled from "InterceptorChain.java"
public interface org.apache.cxf.interceptor.InterceptorChain extends java.lang.Iterable<org.apache.cxf.interceptor.Interceptor<? extends org.apache.cxf.message.Message>> {
  public static final java.lang.String STARTING_AFTER_INTERCEPTOR_ID;

  public static final java.lang.String STARTING_AT_INTERCEPTOR_ID;

  public abstract void add(org.apache.cxf.interceptor.Interceptor<? extends org.apache.cxf.message.Message>);

  public abstract void add(java.util.Collection<org.apache.cxf.interceptor.Interceptor<? extends org.apache.cxf.message.Message>>);

  public abstract void remove(org.apache.cxf.interceptor.Interceptor<? extends org.apache.cxf.message.Message>);

  public abstract boolean doIntercept(org.apache.cxf.message.Message);

  public abstract boolean doInterceptStartingAfter(org.apache.cxf.message.Message, java.lang.String);

  public abstract boolean doInterceptStartingAt(org.apache.cxf.message.Message, java.lang.String);

  public abstract void pause();

  public abstract void suspend();

  public abstract void resume();

  public abstract void unpause();

  public abstract void reset();

  public abstract org.apache.cxf.interceptor.InterceptorChain$State getState();

  public abstract java.util.ListIterator<org.apache.cxf.interceptor.Interceptor<? extends org.apache.cxf.message.Message>> getIterator();

  public abstract org.apache.cxf.transport.MessageObserver getFaultObserver();

  public abstract void setFaultObserver(org.apache.cxf.transport.MessageObserver);

  public abstract void abort();
}
