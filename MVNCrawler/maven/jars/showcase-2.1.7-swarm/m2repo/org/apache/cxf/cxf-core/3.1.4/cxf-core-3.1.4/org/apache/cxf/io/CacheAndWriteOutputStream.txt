Compiled from "CacheAndWriteOutputStream.java"
public class org.apache.cxf.io.CacheAndWriteOutputStream extends org.apache.cxf.io.CachedOutputStream {
  java.io.OutputStream flowThroughStream;

  long count;

  long limit;

  public org.apache.cxf.io.CacheAndWriteOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/cxf/io/CachedOutputStream."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long 9223372036854775807l
       8: putfield      #4                  // Field limit:J
      11: aload_1
      12: ifnonnull     25
      15: new           #5                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #6                  // String Stream may not be null
      21: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: aload_1
      27: putfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
      30: return

  public void setCacheLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field limit:J
       5: return

  public void closeFlowthroughStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
       4: invokevirtual #9                  // Method java/io/OutputStream.flush:()V
       7: aload_0
       8: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
      11: invokevirtual #10                 // Method java/io/OutputStream.close:()V
      14: return

  protected void postClose() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
       4: invokevirtual #9                  // Method java/io/OutputStream.flush:()V
       7: aload_0
       8: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
      11: invokevirtual #10                 // Method java/io/OutputStream.close:()V
      14: return

  public java.io.OutputStream getFlowThroughStream();
    Code:
       0: aload_0
       1: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
       4: areturn

  protected void onWrite() throws java.io.IOException;
    Code:
       0: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
       4: iload_1
       5: invokevirtual #11                 // Method java/io/OutputStream.write:(I)V
       8: aload_0
       9: getfield      #12                 // Field count:J
      12: aload_0
      13: getfield      #4                  // Field limit:J
      16: lcmp
      17: ifgt          25
      20: aload_0
      21: iload_1
      22: invokespecial #13                 // Method org/apache/cxf/io/CachedOutputStream.write:(I)V
      25: aload_0
      26: dup
      27: getfield      #12                 // Field count:J
      30: lconst_1
      31: ladd
      32: putfield      #12                 // Field count:J
      35: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #14                 // Method java/io/OutputStream.write:([BII)V
      10: aload_0
      11: getfield      #12                 // Field count:J
      14: aload_0
      15: getfield      #4                  // Field limit:J
      18: lcmp
      19: ifgt          29
      22: aload_0
      23: aload_1
      24: iload_2
      25: iload_3
      26: invokespecial #15                 // Method org/apache/cxf/io/CachedOutputStream.write:([BII)V
      29: aload_0
      30: dup
      31: getfield      #12                 // Field count:J
      34: iload_3
      35: i2l
      36: ladd
      37: putfield      #12                 // Field count:J
      40: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field flowThroughStream:Ljava/io/OutputStream;
       4: aload_1
       5: invokevirtual #16                 // Method java/io/OutputStream.write:([B)V
       8: aload_0
       9: getfield      #12                 // Field count:J
      12: aload_0
      13: getfield      #4                  // Field limit:J
      16: lcmp
      17: ifgt          25
      20: aload_0
      21: aload_1
      22: invokespecial #17                 // Method org/apache/cxf/io/CachedOutputStream.write:([B)V
      25: aload_0
      26: dup
      27: getfield      #12                 // Field count:J
      30: aload_1
      31: arraylength
      32: i2l
      33: ladd
      34: putfield      #12                 // Field count:J
      37: return
}
