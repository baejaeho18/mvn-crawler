Compiled from "TokenInputStream.java"
public class org.apache.cxf.tools.common.toolspec.parser.TokenInputStream {
  private static final java.util.logging.Logger LOG;

  private final java.lang.String[] tokens;

  private int pos;

  public org.apache.cxf.tools.common.toolspec.parser.TokenInputStream(java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field tokens:[Ljava/lang/String;
       9: return

  public java.lang.String read();
    Code:
       0: getstatic     #3                  // Field LOG:Ljava/util/logging/Logger;
       3: getstatic     #4                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #5                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          45
      12: getstatic     #3                  // Field LOG:Ljava/util/logging/Logger;
      15: new           #6                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #8                  // String Reading token
      24: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #2                  // Field tokens:[Ljava/lang/String;
      31: aload_0
      32: getfield      #10                 // Field pos:I
      35: aaload
      36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #12                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      45: aload_0
      46: getfield      #2                  // Field tokens:[Ljava/lang/String;
      49: aload_0
      50: dup
      51: getfield      #10                 // Field pos:I
      54: dup_x1
      55: iconst_1
      56: iadd
      57: putfield      #10                 // Field pos:I
      60: aaload
      61: areturn

  public java.lang.String readNext();
    Code:
       0: aload_0
       1: aload_0
       2: dup
       3: getfield      #10                 // Field pos:I
       6: dup_x1
       7: iconst_1
       8: iadd
       9: putfield      #10                 // Field pos:I
      12: invokevirtual #13                 // Method read:(I)Ljava/lang/String;
      15: areturn

  public java.lang.String read(int);
    Code:
       0: iload_1
       1: ifge          9
       4: aload_0
       5: iconst_0
       6: putfield      #10                 // Field pos:I
       9: iload_1
      10: aload_0
      11: getfield      #2                  // Field tokens:[Ljava/lang/String;
      14: arraylength
      15: if_icmple     29
      18: aload_0
      19: aload_0
      20: getfield      #2                  // Field tokens:[Ljava/lang/String;
      23: arraylength
      24: iconst_1
      25: isub
      26: putfield      #10                 // Field pos:I
      29: aload_0
      30: getfield      #2                  // Field tokens:[Ljava/lang/String;
      33: aload_0
      34: getfield      #10                 // Field pos:I
      37: aaload
      38: areturn

  public java.lang.String readPre();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pos:I
       4: ifeq          17
       7: aload_0
       8: dup
       9: getfield      #10                 // Field pos:I
      12: iconst_1
      13: isub
      14: putfield      #10                 // Field pos:I
      17: aload_0
      18: getfield      #2                  // Field tokens:[Ljava/lang/String;
      21: aload_0
      22: getfield      #10                 // Field pos:I
      25: aaload
      26: areturn

  public java.lang.String peek();
    Code:
       0: getstatic     #3                  // Field LOG:Ljava/util/logging/Logger;
       3: getstatic     #4                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #5                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          45
      12: getstatic     #3                  // Field LOG:Ljava/util/logging/Logger;
      15: new           #6                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #14                 // String Peeking token
      24: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #2                  // Field tokens:[Ljava/lang/String;
      31: aload_0
      32: getfield      #10                 // Field pos:I
      35: aaload
      36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #12                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      45: aload_0
      46: getfield      #2                  // Field tokens:[Ljava/lang/String;
      49: aload_0
      50: getfield      #10                 // Field pos:I
      53: aaload
      54: areturn

  public java.lang.String peekPre();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pos:I
       4: ifne          17
       7: aload_0
       8: getfield      #2                  // Field tokens:[Ljava/lang/String;
      11: aload_0
      12: getfield      #10                 // Field pos:I
      15: aaload
      16: areturn
      17: aload_0
      18: getfield      #2                  // Field tokens:[Ljava/lang/String;
      21: aload_0
      22: getfield      #10                 // Field pos:I
      25: iconst_1
      26: isub
      27: aaload
      28: areturn

  public java.lang.String peek(int);
    Code:
       0: iload_1
       1: ifge          11
       4: aload_0
       5: getfield      #2                  // Field tokens:[Ljava/lang/String;
       8: iconst_0
       9: aaload
      10: areturn
      11: iload_1
      12: aload_0
      13: getfield      #2                  // Field tokens:[Ljava/lang/String;
      16: arraylength
      17: if_icmple     33
      20: aload_0
      21: getfield      #2                  // Field tokens:[Ljava/lang/String;
      24: aload_0
      25: getfield      #2                  // Field tokens:[Ljava/lang/String;
      28: arraylength
      29: iconst_1
      30: isub
      31: aaload
      32: areturn
      33: aload_0
      34: getfield      #2                  // Field tokens:[Ljava/lang/String;
      37: iload_1
      38: aaload
      39: areturn

  public int getPosition();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pos:I
       4: ireturn

  public void setPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field pos:I
       5: return

  public int available();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tokens:[Ljava/lang/String;
       4: arraylength
       5: aload_0
       6: getfield      #10                 // Field pos:I
       9: isub
      10: ireturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method available:()I
       4: iconst_1
       5: if_icmple     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isOutOfBound();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pos:I
       4: aload_0
       5: getfield      #2                  // Field tokens:[Ljava/lang/String;
       8: arraylength
       9: if_icmplt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String toString();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: ldc           #16                 // String [
       6: invokespecial #17                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_0
      11: getfield      #10                 // Field pos:I
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #2                  // Field tokens:[Ljava/lang/String;
      20: arraylength
      21: if_icmpge     59
      24: aload_1
      25: aload_0
      26: getfield      #2                  // Field tokens:[Ljava/lang/String;
      29: iload_2
      30: aaload
      31: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: iload_2
      36: aload_0
      37: getfield      #2                  // Field tokens:[Ljava/lang/String;
      40: arraylength
      41: iconst_1
      42: isub
      43: if_icmpge     53
      46: aload_1
      47: ldc           #18                 // String
      49: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: iinc          2, 1
      56: goto          15
      59: aload_1
      60: ldc           #19                 // String  ]
      62: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  static {};
    Code:
       0: ldc_w         #20                 // class org/apache/cxf/tools/common/toolspec/parser/TokenInputStream
       3: invokestatic  #21                 // Method org/apache/cxf/common/logging/LogUtils.getL7dLogger:(Ljava/lang/Class;)Ljava/util/logging/Logger;
       6: putstatic     #3                  // Field LOG:Ljava/util/logging/Logger;
       9: return
}
