Compiled from "SharedOutputBuffer.java"
public class org.apache.cxf.transport.http.asyncclient.SharedOutputBuffer extends org.apache.http.nio.util.ExpandableBuffer {
  private final java.util.concurrent.locks.ReentrantLock lock;

  private final java.util.concurrent.locks.Condition condition;

  private volatile org.apache.http.nio.IOControl ioctrl;

  private volatile boolean shutdown;

  private volatile boolean endOfStream;

  private volatile java.nio.ByteBuffer largeWrapper;

  public org.apache.cxf.transport.http.asyncclient.SharedOutputBuffer(int, org.apache.http.nio.util.ByteBufferAllocator);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/http/nio/util/ExpandableBuffer."<init>":(ILorg/apache/http/nio/util/ByteBufferAllocator;)V
       6: aload_0
       7: new           #2                  // class java/util/concurrent/locks/ReentrantLock
      10: dup
      11: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      14: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      17: aload_0
      18: aload_0
      19: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      22: invokevirtual #5                  // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      25: putfield      #6                  // Field condition:Ljava/util/concurrent/locks/Condition;
      28: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #7                  // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      12: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      15: aload_0
      16: invokevirtual #9                  // Method clear:()V
      19: aload_0
      20: iconst_0
      21: putfield      #10                 // Field endOfStream:Z
      24: aload_0
      25: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      28: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      31: goto          44
      34: astore_1
      35: aload_0
      36: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      39: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      42: aload_1
      43: athrow
      44: return
    Exception table:
       from    to  target type
          15    24    34   any
          34    35    34   any

  public boolean hasData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #12                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
      11: istore_1
      12: aload_0
      13: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int available();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #13                 // Method org/apache/http/nio/util/ExpandableBuffer.available:()I
      11: istore_1
      12: aload_0
      13: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #14                 // Method org/apache/http/nio/util/ExpandableBuffer.capacity:()I
      11: istore_1
      12: aload_0
      13: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int length();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #15                 // Method org/apache/http/nio/util/ExpandableBuffer.length:()I
      11: istore_1
      12: aload_0
      13: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int produceContent(org.apache.http.nio.ContentEncoder, org.apache.http.nio.IOControl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field shutdown:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      13: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      16: aload_0
      17: aload_2
      18: putfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
      21: aload_0
      22: invokevirtual #17                 // Method setOutputMode:()V
      25: iconst_0
      26: istore_3
      27: aload_0
      28: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      31: ifnonnull     41
      34: aload_0
      35: invokespecial #12                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
      38: ifeq          97
      41: aload_0
      42: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      45: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      48: ifne          72
      51: aload_0
      52: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      55: ifnull        72
      58: aload_1
      59: aload_0
      60: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      63: invokeinterface #21,  2           // InterfaceMethod org/apache/http/nio/ContentEncoder.write:(Ljava/nio/ByteBuffer;)I
      68: istore_3
      69: goto          83
      72: aload_1
      73: aload_0
      74: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      77: invokeinterface #21,  2           // InterfaceMethod org/apache/http/nio/ContentEncoder.write:(Ljava/nio/ByteBuffer;)I
      82: istore_3
      83: aload_1
      84: invokeinterface #22,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.isCompleted:()Z
      89: ifeq          97
      92: aload_0
      93: iconst_1
      94: putfield      #10                 // Field endOfStream:Z
      97: aload_0
      98: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
     101: ifnull        114
     104: aload_0
     105: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
     108: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     111: ifne          166
     114: aload_0
     115: invokespecial #12                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
     118: ifne          166
     121: aload_0
     122: getfield      #10                 // Field endOfStream:Z
     125: ifeq          143
     128: aload_1
     129: invokeinterface #22,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.isCompleted:()Z
     134: ifne          143
     137: aload_1
     138: invokeinterface #23,  1           // InterfaceMethod org/apache/http/nio/ContentEncoder.complete:()V
     143: aload_0
     144: getfield      #10                 // Field endOfStream:Z
     147: ifne          166
     150: aload_0
     151: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
     154: ifnull        166
     157: aload_0
     158: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
     161: invokeinterface #24,  1           // InterfaceMethod org/apache/http/nio/IOControl.suspendOutput:()V
     166: aload_0
     167: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
     170: ifnull        183
     173: aload_0
     174: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
     177: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     180: ifne          192
     183: aload_0
     184: getfield      #6                  // Field condition:Ljava/util/concurrent/locks/Condition;
     187: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
     192: iload_3
     193: istore        4
     195: aload_0
     196: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     199: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     202: iload         4
     204: ireturn
     205: astore        5
     207: aload_0
     208: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     211: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     214: aload         5
     216: athrow
    Exception table:
       from    to  target type
          16   195   205   any
         205   207   205   any

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method shutdown:()V
       4: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #7                  // Field shutdown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #7                  // Field shutdown:Z
      13: aload_0
      14: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      17: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      20: aload_0
      21: getfield      #6                  // Field condition:Ljava/util/concurrent/locks/Condition;
      24: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      29: aload_0
      30: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      33: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      36: goto          49
      39: astore_1
      40: aload_0
      41: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      44: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      47: aload_1
      48: athrow
      49: return
    Exception table:
       from    to  target type
          20    29    39   any
          39    40    39   any

  public int copy(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: iconst_0
       8: istore_2
       9: aload_0
      10: getfield      #7                  // Field shutdown:Z
      13: ifne          23
      16: aload_0
      17: getfield      #10                 // Field endOfStream:Z
      20: ifeq          33
      23: new           #27                 // class java/lang/IllegalStateException
      26: dup
      27: ldc           #28                 // String Buffer already closed for writing
      29: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: invokevirtual #30                 // Method setInputMode:()V
      37: iconst_0
      38: istore_3
      39: iconst_0
      40: istore        4
      42: iload_3
      43: iconst_m1
      44: if_icmpeq     193
      47: aload_0
      48: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      54: ifne          65
      57: aload_0
      58: invokespecial #31                 // Method flushContent:()V
      61: aload_0
      62: invokevirtual #30                 // Method setInputMode:()V
      65: aload_1
      66: invokevirtual #32                 // Method java/io/InputStream.available:()I
      69: istore_3
      70: iload_3
      71: ifne          131
      74: iload         4
      76: ifne          131
      79: aload_0
      80: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      83: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      86: ifeq          105
      89: aload_0
      90: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
      93: ifnull        105
      96: aload_0
      97: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
     100: invokeinterface #34,  1           // InterfaceMethod org/apache/http/nio/IOControl.requestOutput:()V
     105: aload_0
     106: getfield      #6                  // Field condition:Ljava/util/concurrent/locks/Condition;
     109: lconst_1
     110: invokeinterface #35,  3           // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
     115: pop2
     116: goto          121
     119: astore        5
     121: aload_0
     122: invokevirtual #30                 // Method setInputMode:()V
     125: iconst_1
     126: istore        4
     128: goto          42
     131: aload_0
     132: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
     135: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
     138: istore        5
     140: aload_1
     141: aload_0
     142: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
     145: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
     148: aload_0
     149: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
     152: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
     155: aload_0
     156: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
     159: invokevirtual #38                 // Method java/nio/ByteBuffer.remaining:()I
     162: invokevirtual #39                 // Method java/io/InputStream.read:([BII)I
     165: istore_3
     166: iconst_0
     167: istore        4
     169: iload_3
     170: iconst_m1
     171: if_icmpeq     190
     174: iload_2
     175: iload_3
     176: iadd
     177: istore_2
     178: aload_0
     179: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
     182: iload         5
     184: iload_3
     185: iadd
     186: invokevirtual #40                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     189: pop
     190: goto          42
     193: aload_0
     194: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     197: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     200: goto          215
     203: astore        6
     205: aload_0
     206: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     209: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     212: aload         6
     214: athrow
     215: iload_2
     216: ireturn
    Exception table:
       from    to  target type
         105   116   119   Class java/lang/InterruptedException
           9   193   203   any
         203   205   203   any

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       9: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      12: aload_0
      13: getfield      #7                  // Field shutdown:Z
      16: ifne          26
      19: aload_0
      20: getfield      #10                 // Field endOfStream:Z
      23: ifeq          36
      26: new           #27                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #28                 // String Buffer already closed for writing
      32: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: invokevirtual #30                 // Method setInputMode:()V
      40: iload_3
      41: istore        4
      43: iload         4
      45: ifle          170
      48: aload_0
      49: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      52: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      55: ifne          66
      58: aload_0
      59: invokespecial #31                 // Method flushContent:()V
      62: aload_0
      63: invokevirtual #30                 // Method setInputMode:()V
      66: aload_0
      67: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      70: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      73: ifne          129
      76: aload_0
      77: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      80: invokevirtual #38                 // Method java/nio/ByteBuffer.remaining:()I
      83: iconst_2
      84: imul
      85: iload         4
      87: if_icmpge     129
      90: aload_0
      91: aload_1
      92: iload_2
      93: iload         4
      95: invokestatic  #41                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      98: putfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
     101: aload_0
     102: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
     105: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     108: ifeq          118
     111: aload_0
     112: invokespecial #31                 // Method flushContent:()V
     115: goto          101
     118: aload_0
     119: aconst_null
     120: putfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
     123: iconst_0
     124: istore        4
     126: goto          43
     129: iload         4
     131: aload_0
     132: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
     135: invokevirtual #38                 // Method java/nio/ByteBuffer.remaining:()I
     138: invokestatic  #42                 // Method java/lang/Math.min:(II)I
     141: istore        5
     143: aload_0
     144: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
     147: aload_1
     148: iload_2
     149: iload         5
     151: invokevirtual #43                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     154: pop
     155: iload         4
     157: iload         5
     159: isub
     160: istore        4
     162: iload_2
     163: iload         5
     165: iadd
     166: istore_2
     167: goto          43
     170: aload_0
     171: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     174: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     177: goto          192
     180: astore        6
     182: aload_0
     183: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     186: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     189: aload         6
     191: athrow
     192: return
    Exception table:
       from    to  target type
          12   170   180   any
         180   182   180   any

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      10: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      13: aload_0
      14: getfield      #7                  // Field shutdown:Z
      17: ifne          27
      20: aload_0
      21: getfield      #10                 // Field endOfStream:Z
      24: ifeq          37
      27: new           #27                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #28                 // String Buffer already closed for writing
      33: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: invokevirtual #30                 // Method setInputMode:()V
      41: aload_0
      42: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      45: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      48: ifne          59
      51: aload_0
      52: invokespecial #31                 // Method flushContent:()V
      55: aload_0
      56: invokevirtual #30                 // Method setInputMode:()V
      59: aload_1
      60: invokevirtual #44                 // Method java/nio/ByteBuffer.limit:()I
      63: aload_1
      64: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      67: isub
      68: istore_2
      69: aload_0
      70: aload_1
      71: putfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      74: aload_0
      75: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      78: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      81: ifeq          91
      84: aload_0
      85: invokespecial #31                 // Method flushContent:()V
      88: goto          74
      91: aload_0
      92: aconst_null
      93: putfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      96: iload_2
      97: istore_3
      98: aload_0
      99: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     102: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     105: iload_3
     106: ireturn
     107: astore        4
     109: aload_0
     110: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     113: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     116: aload         4
     118: athrow
    Exception table:
       from    to  target type
          13    98   107   any
         107   109   107   any

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: iconst_0
       8: aload_1
       9: arraylength
      10: invokevirtual #45                 // Method write:([BII)V
      13: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #7                  // Field shutdown:Z
      11: ifne          21
      14: aload_0
      15: getfield      #10                 // Field endOfStream:Z
      18: ifeq          31
      21: new           #27                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #28                 // String Buffer already closed for writing
      27: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: invokevirtual #30                 // Method setInputMode:()V
      35: aload_0
      36: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      39: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      42: ifne          53
      45: aload_0
      46: invokespecial #31                 // Method flushContent:()V
      49: aload_0
      50: invokevirtual #30                 // Method setInputMode:()V
      53: aload_0
      54: getfield      #19                 // Field buffer:Ljava/nio/ByteBuffer;
      57: iload_1
      58: i2b
      59: invokevirtual #46                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      62: pop
      63: aload_0
      64: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      67: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      70: goto          83
      73: astore_2
      74: aload_0
      75: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      78: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      81: aload_2
      82: athrow
      83: return
    Exception table:
       from    to  target type
           7    63    73   any
          73    74    73   any

  public void flush() throws java.io.IOException;
    Code:
       0: return

  private void flushContent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      11: ifnull        24
      14: aload_0
      15: getfield      #18                 // Field largeWrapper:Ljava/nio/ByteBuffer;
      18: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      21: ifne          31
      24: aload_0
      25: invokespecial #12                 // Method org/apache/http/nio/util/ExpandableBuffer.hasData:()Z
      28: ifeq          76
      31: aload_0
      32: getfield      #7                  // Field shutdown:Z
      35: ifeq          48
      38: new           #47                 // class java/io/InterruptedIOException
      41: dup
      42: ldc           #48                 // String Output operation aborted
      44: invokespecial #49                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
      52: ifnull        64
      55: aload_0
      56: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
      59: invokeinterface #34,  1           // InterfaceMethod org/apache/http/nio/IOControl.requestOutput:()V
      64: aload_0
      65: getfield      #6                  // Field condition:Ljava/util/concurrent/locks/Condition;
      68: invokeinterface #50,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      73: goto          7
      76: goto          90
      79: astore_1
      80: new           #51                 // class java/io/IOException
      83: dup
      84: ldc           #52                 // String Interrupted while flushing the content buffer
      86: invokespecial #53                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_0
      91: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      94: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      97: goto          110
     100: astore_2
     101: aload_0
     102: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     105: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     108: aload_2
     109: athrow
     110: return
    Exception table:
       from    to  target type
           7    76    79   Class java/lang/InterruptedException
           7    90   100   any
         100   101   100   any

  public void writeCompleted() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #10                 // Field endOfStream:Z
      11: ifeq          22
      14: aload_0
      15: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      18: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      21: return
      22: aload_0
      23: iconst_1
      24: putfield      #10                 // Field endOfStream:Z
      27: aload_0
      28: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
      31: ifnull        43
      34: aload_0
      35: getfield      #16                 // Field ioctrl:Lorg/apache/http/nio/IOControl;
      38: invokeinterface #34,  1           // InterfaceMethod org/apache/http/nio/IOControl.requestOutput:()V
      43: aload_0
      44: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      47: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      50: goto          63
      53: astore_1
      54: aload_0
      55: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      58: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      61: aload_1
      62: athrow
      63: return
    Exception table:
       from    to  target type
           7    14    53   any
          22    43    53   any
          53    54    53   any
}
