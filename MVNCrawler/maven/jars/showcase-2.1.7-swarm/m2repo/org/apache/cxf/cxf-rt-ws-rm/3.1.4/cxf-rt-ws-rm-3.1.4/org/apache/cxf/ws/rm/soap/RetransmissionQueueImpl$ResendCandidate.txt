Compiled from "RetransmissionQueueImpl.java"
public class org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate implements java.lang.Runnable,org.apache.cxf.ws.rm.RetryStatus {
  private org.apache.cxf.message.Message message;

  private long number;

  private java.util.Date next;

  private java.util.TimerTask nextTask;

  private int retries;

  private int maxRetries;

  private long nextInterval;

  private long backoff;

  private boolean pending;

  private boolean suspended;

  private boolean includeAckRequested;

  final org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl this$0;

  protected org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl, org.apache.cxf.message.Message);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field retries:I
      19: aload_1
      20: invokestatic  #6                  // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$000:(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;)Lorg/apache/cxf/ws/rm/RMManager;
      23: aload_0
      24: getfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
      27: invokevirtual #7                  // Method org/apache/cxf/ws/rm/RMManager.getEffectiveConfiguration:(Lorg/apache/cxf/message/Message;)Lorg/apache/cxf/ws/rm/RMConfiguration;
      30: astore_3
      31: aload_3
      32: invokevirtual #8                  // Method org/apache/cxf/ws/rm/RMConfiguration.getBaseRetransmissionInterval:()Ljava/lang/Long;
      35: invokevirtual #9                  // Method java/lang/Long.longValue:()J
      38: lstore        4
      40: aload_0
      41: aload_3
      42: invokevirtual #10                 // Method org/apache/cxf/ws/rm/RMConfiguration.isExponentialBackoff:()Z
      45: ifeq          54
      48: ldc2_w        #11                 // long 2l
      51: goto          55
      54: lconst_1
      55: putfield      #13                 // Field backoff:J
      58: aload_0
      59: new           #14                 // class java/util/Date
      62: dup
      63: invokestatic  #15                 // Method java/lang/System.currentTimeMillis:()J
      66: lload         4
      68: ladd
      69: invokespecial #16                 // Method java/util/Date."<init>":(J)V
      72: putfield      #17                 // Field next:Ljava/util/Date;
      75: aload_0
      76: lload         4
      78: aload_0
      79: getfield      #13                 // Field backoff:J
      82: lmul
      83: putfield      #18                 // Field nextInterval:J
      86: aconst_null
      87: aload_1
      88: invokestatic  #6                  // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$000:(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;)Lorg/apache/cxf/ws/rm/RMManager;
      91: invokevirtual #19                 // Method org/apache/cxf/ws/rm/RMManager.getSourcePolicy:()Lorg/apache/cxf/ws/rm/manager/SourcePolicyType;
      94: if_acmpeq     110
      97: aload_1
      98: invokestatic  #6                  // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$000:(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;)Lorg/apache/cxf/ws/rm/RMManager;
     101: invokevirtual #19                 // Method org/apache/cxf/ws/rm/RMManager.getSourcePolicy:()Lorg/apache/cxf/ws/rm/manager/SourcePolicyType;
     104: invokevirtual #20                 // Method org/apache/cxf/ws/rm/manager/SourcePolicyType.getRetryPolicy:()Lorg/apache/cxf/ws/rm/manager/RetryPolicyType;
     107: goto          111
     110: aconst_null
     111: astore        6
     113: aload_0
     114: aconst_null
     115: aload         6
     117: if_acmpeq     128
     120: aload         6
     122: invokevirtual #21                 // Method org/apache/cxf/ws/rm/manager/RetryPolicyType.getMaxRetries:()I
     125: goto          129
     128: iconst_m1
     129: putfield      #22                 // Field maxRetries:I
     132: aload_0
     133: getfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
     136: iconst_0
     137: iconst_1
     138: invokestatic  #23                 // Method org/apache/cxf/ws/rm/RMContextUtils.retrieveMAPs:(Lorg/apache/cxf/message/Message;ZZ)Lorg/apache/cxf/ws/addressing/AddressingProperties;
     141: astore        7
     143: aconst_null
     144: astore        8
     146: aconst_null
     147: aload         7
     149: if_acmpeq     159
     152: aload         7
     154: invokevirtual #24                 // Method org/apache/cxf/ws/addressing/AddressingProperties.getTo:()Lorg/apache/cxf/ws/addressing/AttributedURIType;
     157: astore        8
     159: aload         8
     161: ifnull        193
     164: invokestatic  #25                 // Method org/apache/cxf/ws/rm/RMUtils.getAddressingConstants:()Lorg/apache/cxf/ws/addressing/AddressingConstants;
     167: invokevirtual #26                 // Method org/apache/cxf/ws/addressing/AddressingConstants.getAnonymousURI:()Ljava/lang/String;
     170: aload         8
     172: invokevirtual #27                 // Method org/apache/cxf/ws/addressing/AttributedURIType.getValue:()Ljava/lang/String;
     175: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     178: ifeq          193
     181: invokestatic  #29                 // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$100:()Ljava/util/logging/Logger;
     184: getstatic     #30                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     187: ldc           #31                 // String Cannot resend to anonymous target.  Not scheduling a resend.
     189: invokevirtual #32                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
     192: return
     193: aload_0
     194: getfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
     197: iconst_1
     198: invokestatic  #33                 // Method org/apache/cxf/ws/rm/RMContextUtils.retrieveRMProperties:(Lorg/apache/cxf/message/Message;Z)Lorg/apache/cxf/ws/rm/RMProperties;
     201: astore        9
     203: aconst_null
     204: aload         9
     206: if_acmpeq     224
     209: aload_0
     210: aload         9
     212: invokevirtual #34                 // Method org/apache/cxf/ws/rm/RMProperties.getSequence:()Lorg/apache/cxf/ws/rm/v200702/SequenceType;
     215: invokevirtual #35                 // Method org/apache/cxf/ws/rm/v200702/SequenceType.getMessageNumber:()Ljava/lang/Long;
     218: invokevirtual #9                  // Method java/lang/Long.longValue:()J
     221: putfield      #36                 // Field number:J
     224: aconst_null
     225: aload_1
     226: invokestatic  #6                  // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$000:(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;)Lorg/apache/cxf/ws/rm/RMManager;
     229: invokevirtual #37                 // Method org/apache/cxf/ws/rm/RMManager.getTimer:()Ljava/util/Timer;
     232: if_acmpeq     246
     235: aload_0
     236: getfield      #22                 // Field maxRetries:I
     239: ifeq          246
     242: aload_0
     243: invokevirtual #38                 // Method schedule:()V
     246: return

  protected void initiate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field includeAckRequested:Z
       5: aload_0
       6: iconst_1
       7: putfield      #39                 // Field pending:Z
      10: aload_0
      11: getfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
      14: invokeinterface #40,  1           // InterfaceMethod org/apache/cxf/message/Message.getExchange:()Lorg/apache/cxf/message/Exchange;
      19: invokeinterface #41,  1           // InterfaceMethod org/apache/cxf/message/Exchange.getEndpoint:()Lorg/apache/cxf/endpoint/Endpoint;
      24: astore_2
      25: aload_2
      26: invokeinterface #42,  1           // InterfaceMethod org/apache/cxf/endpoint/Endpoint.getExecutor:()Ljava/util/concurrent/Executor;
      31: astore_3
      32: aconst_null
      33: aload_3
      34: if_acmpne     81
      37: aload_2
      38: invokeinterface #43,  1           // InterfaceMethod org/apache/cxf/endpoint/Endpoint.getService:()Lorg/apache/cxf/service/Service;
      43: invokeinterface #44,  1           // InterfaceMethod org/apache/cxf/service/Service.getExecutor:()Ljava/util/concurrent/Executor;
      48: astore_3
      49: aload_3
      50: ifnonnull     60
      53: invokestatic  #45                 // Method org/apache/cxf/workqueue/SynchronousExecutor.getInstance:()Lorg/apache/cxf/workqueue/SynchronousExecutor;
      56: astore_3
      57: goto          99
      60: invokestatic  #29                 // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$100:()Ljava/util/logging/Logger;
      63: getstatic     #46                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      66: ldc           #47                 // String Using service executor {0}
      68: aload_3
      69: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      75: invokevirtual #50                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      78: goto          99
      81: invokestatic  #29                 // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$100:()Ljava/util/logging/Logger;
      84: getstatic     #46                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      87: ldc           #51                 // String Using endpoint executor {0}
      89: aload_3
      90: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      93: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      96: invokevirtual #50                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      99: aload_3
     100: aload_0
     101: invokeinterface #52,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     106: goto          124
     109: astore        4
     111: invokestatic  #29                 // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$100:()Ljava/util/logging/Logger;
     114: getstatic     #54                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
     117: ldc           #55                 // String RESEND_INITIATION_FAILED_MSG
     119: aload         4
     121: invokevirtual #56                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     124: return
    Exception table:
       from    to  target type
          99   106   109   Class java/util/concurrent/RejectedExecutionException

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method isPending:()Z
       4: ifeq          32
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;
      11: invokestatic  #58                 // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$200:(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;)Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl$Resender;
      14: aload_0
      15: getfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
      18: aload_0
      19: getfield      #1                  // Field includeAckRequested:Z
      22: invokeinterface #59,  3           // InterfaceMethod org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl$Resender.resend:(Lorg/apache/cxf/message/Message;Z)V
      27: aload_0
      28: iconst_0
      29: putfield      #1                  // Field includeAckRequested:Z
      32: aload_0
      33: invokevirtual #60                 // Method attempted:()V
      36: goto          46
      39: astore_1
      40: aload_0
      41: invokevirtual #60                 // Method attempted:()V
      44: aload_1
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    32    39   any
          39    40    39   any

  public long getNumber();
    Code:
       0: aload_0
       1: getfield      #36                 // Field number:J
       4: lreturn

  public int getRetries();
    Code:
       0: aload_0
       1: getfield      #5                  // Field retries:I
       4: ireturn

  public int getMaxRetries();
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxRetries:I
       4: ireturn

  public java.util.Date getNext();
    Code:
       0: aload_0
       1: getfield      #17                 // Field next:Ljava/util/Date;
       4: areturn

  public java.util.Date getPrevious();
    Code:
       0: aload_0
       1: getfield      #5                  // Field retries:I
       4: ifle          32
       7: new           #14                 // class java/util/Date
      10: dup
      11: aload_0
      12: getfield      #17                 // Field next:Ljava/util/Date;
      15: invokevirtual #61                 // Method java/util/Date.getTime:()J
      18: aload_0
      19: getfield      #18                 // Field nextInterval:J
      22: aload_0
      23: getfield      #13                 // Field backoff:J
      26: ldiv
      27: lsub
      28: invokespecial #16                 // Method java/util/Date."<init>":(J)V
      31: areturn
      32: aconst_null
      33: areturn

  public long getNextInterval();
    Code:
       0: aload_0
       1: getfield      #18                 // Field nextInterval:J
       4: lreturn

  public long getBackoff();
    Code:
       0: aload_0
       1: getfield      #13                 // Field backoff:J
       4: lreturn

  public boolean isSuspended();
    Code:
       0: aload_0
       1: getfield      #62                 // Field suspended:Z
       4: ireturn

  public synchronized boolean isPending();
    Code:
       0: aload_0
       1: getfield      #39                 // Field pending:Z
       4: ireturn

  protected synchronized void resolved();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #39                 // Field pending:Z
       5: aload_0
       6: aconst_null
       7: putfield      #17                 // Field next:Ljava/util/Date;
      10: aconst_null
      11: aload_0
      12: getfield      #63                 // Field nextTask:Ljava/util/TimerTask;
      15: if_acmpeq     30
      18: aload_0
      19: getfield      #63                 // Field nextTask:Ljava/util/TimerTask;
      22: invokevirtual #64                 // Method java/util/TimerTask.cancel:()Z
      25: pop
      26: aload_0
      27: invokespecial #65                 // Method releaseSavedMessage:()V
      30: return

  protected synchronized void cancel();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #63                 // Field nextTask:Ljava/util/TimerTask;
       5: if_acmpeq     20
       8: aload_0
       9: getfield      #63                 // Field nextTask:Ljava/util/TimerTask;
      12: invokevirtual #64                 // Method java/util/TimerTask.cancel:()Z
      15: pop
      16: aload_0
      17: invokespecial #65                 // Method releaseSavedMessage:()V
      20: return

  protected synchronized void suspend();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #62                 // Field suspended:Z
       5: aload_0
       6: iconst_0
       7: putfield      #39                 // Field pending:Z
      10: aconst_null
      11: aload_0
      12: getfield      #63                 // Field nextTask:Ljava/util/TimerTask;
      15: if_acmpeq     26
      18: aload_0
      19: getfield      #63                 // Field nextTask:Ljava/util/TimerTask;
      22: invokevirtual #64                 // Method java/util/TimerTask.cancel:()Z
      25: pop
      26: return

  protected synchronized void resume();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #62                 // Field suspended:Z
       5: aload_0
       6: new           #14                 // class java/util/Date
       9: dup
      10: invokestatic  #15                 // Method java/lang/System.currentTimeMillis:()J
      13: invokespecial #16                 // Method java/util/Date."<init>":(J)V
      16: putfield      #17                 // Field next:Ljava/util/Date;
      19: aload_0
      20: invokevirtual #60                 // Method attempted:()V
      23: return

  private void releaseSavedMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
       4: ldc           #66                 // String org.apache.cxf.ws.rm.content
       6: invokeinterface #67,  2           // InterfaceMethod org/apache/cxf/message/Message.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #68                 // class org/apache/cxf/ws/rm/RewindableInputStream
      14: astore_1
      15: aload_1
      16: ifnull        23
      19: aload_1
      20: invokevirtual #69                 // Method org/apache/cxf/ws/rm/RewindableInputStream.release:()V
      23: return

  protected org.apache.cxf.message.Message getMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field message:Lorg/apache/cxf/message/Message;
       4: areturn

  protected synchronized void attempted();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #39                 // Field pending:Z
       5: aload_0
       6: dup
       7: getfield      #5                  // Field retries:I
      10: iconst_1
      11: iadd
      12: putfield      #5                  // Field retries:I
      15: aconst_null
      16: aload_0
      17: getfield      #17                 // Field next:Ljava/util/Date;
      20: if_acmpeq     74
      23: aload_0
      24: getfield      #22                 // Field maxRetries:I
      27: aload_0
      28: getfield      #5                  // Field retries:I
      31: if_icmpeq     74
      34: aload_0
      35: new           #14                 // class java/util/Date
      38: dup
      39: aload_0
      40: getfield      #17                 // Field next:Ljava/util/Date;
      43: invokevirtual #61                 // Method java/util/Date.getTime:()J
      46: aload_0
      47: getfield      #18                 // Field nextInterval:J
      50: ladd
      51: invokespecial #16                 // Method java/util/Date."<init>":(J)V
      54: putfield      #17                 // Field next:Ljava/util/Date;
      57: aload_0
      58: dup
      59: getfield      #18                 // Field nextInterval:J
      62: aload_0
      63: getfield      #13                 // Field backoff:J
      66: lmul
      67: putfield      #18                 // Field nextInterval:J
      70: aload_0
      71: invokevirtual #38                 // Method schedule:()V
      74: return

  protected final synchronized void schedule();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;
       5: invokestatic  #6                  // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$000:(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;)Lorg/apache/cxf/ws/rm/RMManager;
       8: invokevirtual #37                 // Method org/apache/cxf/ws/rm/RMManager.getTimer:()Ljava/util/Timer;
      11: if_acmpne     15
      14: return
      15: aload_0
      16: new           #70                 // class org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl$ResendCandidate$1ResendTask
      19: dup
      20: aload_0
      21: aload_0
      22: invokespecial #71                 // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl$ResendCandidate$1ResendTask."<init>":(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl$ResendCandidate;Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl$ResendCandidate;)V
      25: putfield      #63                 // Field nextTask:Ljava/util/TimerTask;
      28: aload_0
      29: getfield      #2                  // Field this$0:Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;
      32: invokestatic  #6                  // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$000:(Lorg/apache/cxf/ws/rm/soap/RetransmissionQueueImpl;)Lorg/apache/cxf/ws/rm/RMManager;
      35: invokevirtual #37                 // Method org/apache/cxf/ws/rm/RMManager.getTimer:()Ljava/util/Timer;
      38: aload_0
      39: getfield      #63                 // Field nextTask:Ljava/util/TimerTask;
      42: aload_0
      43: getfield      #17                 // Field next:Ljava/util/Date;
      46: invokevirtual #72                 // Method java/util/Timer.schedule:(Ljava/util/TimerTask;Ljava/util/Date;)V
      49: goto          65
      52: astore_1
      53: invokestatic  #29                 // Method org/apache/cxf/ws/rm/soap/RetransmissionQueueImpl.access$100:()Ljava/util/logging/Logger;
      56: getstatic     #74                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      59: ldc           #75                 // String SCHEDULE_RESEND_FAILED_MSG
      61: aload_1
      62: invokevirtual #56                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      65: return
    Exception table:
       from    to  target type
          28    49    52   Class java/lang/IllegalStateException

  static boolean access$300(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate);
    Code:
       0: aload_0
       1: getfield      #1                  // Field includeAckRequested:Z
       4: ireturn
}
