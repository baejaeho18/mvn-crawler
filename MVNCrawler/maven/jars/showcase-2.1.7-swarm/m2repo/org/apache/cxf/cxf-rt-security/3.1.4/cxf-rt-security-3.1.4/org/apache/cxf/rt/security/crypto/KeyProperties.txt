Compiled from "KeyProperties.java"
public class org.apache.cxf.rt.security.crypto.KeyProperties {
  private java.lang.String keyAlgo;

  private int keySize;

  private int blockSize;

  private byte[] additionalData;

  private java.security.SecureRandom secureRandom;

  private java.security.spec.AlgorithmParameterSpec algoSpec;

  private boolean compressionSupported;

  public org.apache.cxf.rt.security.crypto.KeyProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field blockSize:I
       9: return

  public org.apache.cxf.rt.security.crypto.KeyProperties(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokespecial #3                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  public org.apache.cxf.rt.security.crypto.KeyProperties(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field blockSize:I
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field keyAlgo:Ljava/lang/String;
      14: aload_0
      15: iload_2
      16: putfield      #5                  // Field keySize:I
      19: return

  public java.lang.String getKeyAlgo();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyAlgo:Ljava/lang/String;
       4: areturn

  public void setKeyAlgo(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field keyAlgo:Ljava/lang/String;
       5: return

  public int getKeySize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field keySize:I
       4: ireturn

  public void setKeySize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field keySize:I
       5: return

  public java.security.SecureRandom getSecureRandom();
    Code:
       0: aload_0
       1: getfield      #6                  // Field secureRandom:Ljava/security/SecureRandom;
       4: areturn

  public void setSecureRandom(java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field secureRandom:Ljava/security/SecureRandom;
       5: return

  public java.security.spec.AlgorithmParameterSpec getAlgoSpec();
    Code:
       0: aload_0
       1: getfield      #7                  // Field algoSpec:Ljava/security/spec/AlgorithmParameterSpec;
       4: areturn

  public void setAlgoSpec(java.security.spec.AlgorithmParameterSpec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field algoSpec:Ljava/security/spec/AlgorithmParameterSpec;
       5: return

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field blockSize:I
       4: ireturn

  public void setBlockSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field blockSize:I
       5: return

  public boolean isCompressionSupported();
    Code:
       0: aload_0
       1: getfield      #8                  // Field compressionSupported:Z
       4: ireturn

  public void setCompressionSupported(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field compressionSupported:Z
       5: return

  public byte[] getAdditionalData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field additionalData:[B
       4: areturn

  public void setAdditionalData(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field additionalData:[B
       5: return
}
