Compiled from "PolicyUtils.java"
public final class org.apache.cxf.ws.policy.PolicyUtils {
  private static final java.lang.String INDENT;

  private org.apache.cxf.ws.policy.PolicyUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isEmptyPolicy(org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method isEmptyPolicyOperator:(Lorg/apache/neethi/PolicyOperator;)Z
       4: ireturn

  public static boolean isEmptyPolicyOperator(org.apache.neethi.PolicyOperator);
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod org/apache/neethi/PolicyOperator.isEmpty:()Z
       6: ifeq          11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: invokeinterface #4,  1            // InterfaceMethod org/apache/neethi/PolicyOperator.getPolicyComponents:()Ljava/util/List;
      17: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          64
      32: aload_1
      33: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #8                  // class org/apache/neethi/PolicyComponent
      41: astore_2
      42: aload_2
      43: instanceof    #9                  // class org/apache/neethi/PolicyOperator
      46: ifeq          59
      49: aload_2
      50: checkcast     #9                  // class org/apache/neethi/PolicyOperator
      53: invokestatic  #2                  // Method isEmptyPolicyOperator:(Lorg/apache/neethi/PolicyOperator;)Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: goto          23
      64: iconst_1
      65: ireturn

  public static boolean contains(java.util.Collection<org.apache.neethi.Assertion>, org.apache.neethi.Assertion);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #11                 // class org/apache/neethi/Assertion
      25: astore_3
      26: aload_3
      27: aload_1
      28: invokeinterface #12,  2           // InterfaceMethod org/apache/neethi/Assertion.equal:(Lorg/apache/neethi/PolicyComponent;)Z
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: goto          7
      41: iconst_0
      42: ireturn

  public static boolean contains(java.util.Collection<org.apache.neethi.Assertion>, java.util.Collection<org.apache.neethi.Assertion>);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     14
       5: aload_1
       6: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_1
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          55
      32: aload_2
      33: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #11                 // class org/apache/neethi/Assertion
      41: astore_3
      42: aload_0
      43: aload_3
      44: invokestatic  #14                 // Method contains:(Ljava/util/Collection;Lorg/apache/neethi/Assertion;)Z
      47: ifne          52
      50: iconst_0
      51: ireturn
      52: goto          23
      55: iconst_1
      56: ireturn

  public static void logPolicy(java.util.logging.Logger, java.util.logging.Level, java.lang.String, org.apache.neethi.PolicyComponent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       5: ifne          9
       8: return
       9: aconst_null
      10: aload_3
      11: if_acmpne     21
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokevirtual #16                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      20: return
      21: new           #17                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      28: astore        4
      30: aload         4
      32: aload_2
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload         4
      39: invokestatic  #20                 // Method nl:(Ljava/lang/StringBuilder;)V
      42: aload_3
      43: aload         4
      45: iconst_0
      46: invokestatic  #21                 // Method printPolicyComponent:(Lorg/apache/neethi/PolicyComponent;Ljava/lang/StringBuilder;I)V
      49: aload_0
      50: aload_1
      51: aload         4
      53: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokevirtual #16                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      59: return

  public static void printPolicyComponent(org.apache.neethi.PolicyComponent);
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: iconst_0
      11: invokestatic  #21                 // Method printPolicyComponent:(Lorg/apache/neethi/PolicyComponent;Ljava/lang/StringBuilder;I)V
      14: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;
      17: aload_1
      18: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokevirtual #24                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      24: return

  public static void printPolicyComponent(org.apache.neethi.PolicyComponent, java.lang.StringBuilder, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokestatic  #25                 // Method indent:(Ljava/lang/StringBuilder;I)V
       5: aload_1
       6: ldc           #26                 // String type:
       8: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: pop
      12: aload_1
      13: aload_0
      14: invokeinterface #27,  1           // InterfaceMethod org/apache/neethi/PolicyComponent.getType:()S
      19: invokestatic  #28                 // Method typeToString:(S)Ljava/lang/String;
      22: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: iconst_5
      27: aload_0
      28: invokeinterface #27,  1           // InterfaceMethod org/apache/neethi/PolicyComponent.getType:()S
      33: if_icmpne     132
      36: aload_1
      37: ldc           #29                 // String
      39: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: aload_1
      44: aload_0
      45: checkcast     #11                 // class org/apache/neethi/Assertion
      48: invokeinterface #30,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      53: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_0
      58: checkcast     #11                 // class org/apache/neethi/Assertion
      61: invokeinterface #32,  1           // InterfaceMethod org/apache/neethi/Assertion.isOptional:()Z
      66: ifeq          76
      69: aload_1
      70: ldc           #33                 // String  (optional)
      72: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: aload_1
      77: ldc           #34                 // String  (
      79: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_1
      84: aload_0
      85: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: pop
      89: aload_1
      90: ldc           #35                 // String )
      92: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: pop
      96: aload_1
      97: invokestatic  #20                 // Method nl:(Ljava/lang/StringBuilder;)V
     100: aload_0
     101: instanceof    #36                 // class org/apache/neethi/PolicyContainingAssertion
     104: ifeq          198
     107: aload_0
     108: checkcast     #36                 // class org/apache/neethi/PolicyContainingAssertion
     111: invokeinterface #37,  1           // InterfaceMethod org/apache/neethi/PolicyContainingAssertion.getPolicy:()Lorg/apache/neethi/Policy;
     116: astore_3
     117: iinc          2, 1
     120: aload_3
     121: aload_1
     122: iload_2
     123: invokestatic  #21                 // Method printPolicyComponent:(Lorg/apache/neethi/PolicyComponent;Ljava/lang/StringBuilder;I)V
     126: iinc          2, -1
     129: goto          198
     132: iinc          2, 1
     135: aload_0
     136: checkcast     #9                  // class org/apache/neethi/PolicyOperator
     139: invokeinterface #4,  1            // InterfaceMethod org/apache/neethi/PolicyOperator.getPolicyComponents:()Ljava/util/List;
     144: ldc_w         #8                  // class org/apache/neethi/PolicyComponent
     147: invokestatic  #38                 // Method org/apache/cxf/helpers/CastUtils.cast:(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
     150: astore_3
     151: aload_1
     152: invokestatic  #20                 // Method nl:(Ljava/lang/StringBuilder;)V
     155: aload_3
     156: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     161: astore        4
     163: aload         4
     165: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     170: ifeq          195
     173: aload         4
     175: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     180: checkcast     #8                  // class org/apache/neethi/PolicyComponent
     183: astore        5
     185: aload         5
     187: aload_1
     188: iload_2
     189: invokestatic  #21                 // Method printPolicyComponent:(Lorg/apache/neethi/PolicyComponent;Ljava/lang/StringBuilder;I)V
     192: goto          163
     195: iinc          2, -1
     198: return

  private static void indent(java.lang.StringBuilder, int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     20
       7: aload_0
       8: ldc           #39                 // String
      10: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: pop
      14: iinc          2, 1
      17: goto          2
      20: return

  private static void nl(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: ldc           #40                 // String line.separator
       3: invokestatic  #41                 // Method org/apache/cxf/common/util/SystemPropertyAction.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       9: pop
      10: return

  private static java.lang.String typeToString(short);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 5
                     1: 45
                     2: 42
                     3: 39
                     4: 48
                     5: 36
               default: 51
          }
      36: ldc           #42                 // String Assertion
      38: areturn
      39: ldc           #43                 // String All
      41: areturn
      42: ldc           #44                 // String ExactlyOne
      44: areturn
      45: ldc           #45                 // String Policy
      47: areturn
      48: ldc           #46                 // String PolicyReference
      50: areturn
      51: ldc           #47                 // String
      53: areturn

  public static org.apache.cxf.ws.policy.Assertor createAsserter(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #48                 // class org/apache/cxf/ws/policy/Assertor
       4: ifeq          12
       7: aload_0
       8: checkcast     #48                 // class org/apache/cxf/ws/policy/Assertor
      11: areturn
      12: aload_0
      13: instanceof    #49                 // class org/apache/cxf/transport/Assertor
      16: ifeq          31
      19: new           #50                 // class org/apache/cxf/ws/policy/PolicyUtils$WrappedAssertor
      22: dup
      23: aload_0
      24: checkcast     #49                 // class org/apache/cxf/transport/Assertor
      27: invokespecial #51                 // Method org/apache/cxf/ws/policy/PolicyUtils$WrappedAssertor."<init>":(Lorg/apache/cxf/transport/Assertor;)V
      30: areturn
      31: aconst_null
      32: areturn
}
