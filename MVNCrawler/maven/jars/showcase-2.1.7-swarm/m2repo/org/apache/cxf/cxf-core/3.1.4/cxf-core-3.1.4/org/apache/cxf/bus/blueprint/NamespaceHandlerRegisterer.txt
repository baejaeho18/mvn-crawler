Compiled from "NamespaceHandlerRegisterer.java"
public final class org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer {
  private static final java.util.logging.Logger LOG;

  private org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void register(org.osgi.framework.BundleContext, org.apache.cxf.bus.blueprint.BlueprintNameSpaceHandlerFactory, java.lang.String...);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/apache/cxf/bus/blueprint/BlueprintNameSpaceHandlerFactory.createNamespaceHandler:()Ljava/lang/Object;
       6: astore_3
       7: aload_2
       8: astore        4
      10: aload         4
      12: arraylength
      13: istore        5
      15: iconst_0
      16: istore        6
      18: iload         6
      20: iload         5
      22: if_icmpge     99
      25: aload         4
      27: iload         6
      29: aaload
      30: astore        7
      32: new           #3                  // class java/util/Hashtable
      35: dup
      36: invokespecial #4                  // Method java/util/Hashtable."<init>":()V
      39: astore        8
      41: aload         8
      43: ldc           #5                  // String osgi.service.blueprint.namespace
      45: aload         7
      47: invokevirtual #6                  // Method java/util/Dictionary.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_0
      52: ldc_w         #7                  // class org/apache/aries/blueprint/NamespaceHandler
      55: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      58: aload_3
      59: aload         8
      61: invokeinterface #9,  4            // InterfaceMethod org/osgi/framework/BundleContext.registerService:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Dictionary;)Lorg/osgi/framework/ServiceRegistration;
      66: pop
      67: getstatic     #10                 // Field LOG:Ljava/util/logging/Logger;
      70: new           #11                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #13                 // String Registered blueprint namespace handler for
      79: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         7
      84: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokevirtual #16                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
      93: iinc          6, 1
      96: goto          18
      99: goto          115
     102: astore_3
     103: getstatic     #10                 // Field LOG:Ljava/util/logging/Logger;
     106: getstatic     #18                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     109: ldc           #19                 // String Aries Blueprint packages not available. So namespaces will not be registered
     111: aload_3
     112: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     115: return
    Exception table:
       from    to  target type
           0    99   102   Class java/lang/Throwable

  static {};
    Code:
       0: ldc_w         #21                 // class org/apache/cxf/bus/blueprint/NamespaceHandlerRegisterer
       3: invokestatic  #22                 // Method org/apache/cxf/common/logging/LogUtils.getL7dLogger:(Ljava/lang/Class;)Ljava/util/logging/Logger;
       6: putstatic     #10                 // Field LOG:Ljava/util/logging/Logger;
       9: return
}
