Compiled from "AbstractUsernameTokenAuthenticatingInterceptor.java"
public class org.apache.cxf.ws.security.wss4j.AbstractUsernameTokenAuthenticatingInterceptor$CustomValidator extends org.apache.wss4j.dom.validate.UsernameTokenValidator {
  final org.apache.cxf.ws.security.wss4j.AbstractUsernameTokenAuthenticatingInterceptor this$0;

  protected org.apache.cxf.ws.security.wss4j.AbstractUsernameTokenAuthenticatingInterceptor$CustomValidator(org.apache.cxf.ws.security.wss4j.AbstractUsernameTokenAuthenticatingInterceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/wss4j/dom/validate/UsernameTokenValidator."<init>":()V
       9: return

  protected void verifyCustomPassword(org.apache.wss4j.dom.message.token.UsernameToken, org.apache.wss4j.dom.handler.RequestData) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor;
       4: aload_1
       5: invokevirtual #3                  // Method org/apache/wss4j/dom/message/token/UsernameToken.getName:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #4                  // Method org/apache/wss4j/dom/message/token/UsernameToken.getPassword:()Ljava/lang/String;
      12: iconst_0
      13: aconst_null
      14: aconst_null
      15: invokevirtual #5                  // Method org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.setSubject:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;)V
      18: return

  protected void verifyPlaintextPassword(org.apache.wss4j.dom.message.token.UsernameToken, org.apache.wss4j.dom.handler.RequestData) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor;
       4: aload_1
       5: invokevirtual #3                  // Method org/apache/wss4j/dom/message/token/UsernameToken.getName:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #4                  // Method org/apache/wss4j/dom/message/token/UsernameToken.getPassword:()Ljava/lang/String;
      12: iconst_0
      13: aconst_null
      14: aconst_null
      15: invokevirtual #5                  // Method org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.setSubject:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;)V
      18: return

  protected void verifyDigestPassword(org.apache.wss4j.dom.message.token.UsernameToken, org.apache.wss4j.dom.handler.RequestData) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor;
       4: invokestatic  #6                  // Method org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.access$000:(Lorg/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor;)Z
       7: ifne          21
      10: new           #7                  // class org/apache/wss4j/common/ext/WSSecurityException
      13: dup
      14: getstatic     #8                  // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILED_AUTHENTICATION:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
      17: invokespecial #9                  // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;)V
      20: athrow
      21: aload_1
      22: invokevirtual #3                  // Method org/apache/wss4j/dom/message/token/UsernameToken.getName:()Ljava/lang/String;
      25: astore_3
      26: aload_1
      27: invokevirtual #4                  // Method org/apache/wss4j/dom/message/token/UsernameToken.getPassword:()Ljava/lang/String;
      30: astore        4
      32: aload_1
      33: invokevirtual #10                 // Method org/apache/wss4j/dom/message/token/UsernameToken.isHashed:()Z
      36: istore        5
      38: aload_1
      39: invokevirtual #11                 // Method org/apache/wss4j/dom/message/token/UsernameToken.getNonce:()Ljava/lang/String;
      42: astore        6
      44: aload_1
      45: invokevirtual #12                 // Method org/apache/wss4j/dom/message/token/UsernameToken.getCreated:()Ljava/lang/String;
      48: astore        7
      50: aload_0
      51: getfield      #1                  // Field this$0:Lorg/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor;
      54: aload_3
      55: aload         4
      57: iload         5
      59: aload         6
      61: aload         7
      63: invokevirtual #5                  // Method org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.setSubject:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;)V
      66: return

  protected void verifyUnknownPassword(org.apache.wss4j.dom.message.token.UsernameToken, org.apache.wss4j.dom.handler.RequestData) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor;
       4: aload_1
       5: invokevirtual #3                  // Method org/apache/wss4j/dom/message/token/UsernameToken.getName:()Ljava/lang/String;
       8: aconst_null
       9: iconst_0
      10: aconst_null
      11: aconst_null
      12: invokevirtual #5                  // Method org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.setSubject:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;)V
      15: return
}
