Compiled from "SoapBindingFactory.java"
class org.apache.cxf.binding.soap.SoapBindingFactory$1 extends org.apache.cxf.binding.soap.interceptor.AbstractSoapInterceptor {
  final org.apache.cxf.binding.soap.SoapBindingFactory this$0;

  org.apache.cxf.binding.soap.SoapBindingFactory$1(org.apache.cxf.binding.soap.SoapBindingFactory, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/cxf/binding/soap/SoapBindingFactory;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method org/apache/cxf/binding/soap/interceptor/AbstractSoapInterceptor."<init>":(Ljava/lang/String;)V
      10: return

  public void handleMessage(org.apache.cxf.binding.soap.SoapMessage) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_1
       1: iconst_0
       2: iconst_1
       3: invokestatic  #3                  // Method org/apache/cxf/ws/addressing/ContextUtils.retrieveMAPs:(Lorg/apache/cxf/message/Message;ZZ)Lorg/apache/cxf/ws/addressing/AddressingProperties;
       6: astore_2
       7: aload_2
       8: ifnonnull     12
      11: return
      12: aload_2
      13: invokevirtual #4                  // Method org/apache/cxf/ws/addressing/AddressingProperties.getNamespaceURI:()Ljava/lang/String;
      16: astore_3
      17: aload_1
      18: invokevirtual #5                  // Method org/apache/cxf/binding/soap/SoapMessage.getEnvelopeNs:()Ljava/util/Map;
      21: astore        4
      23: aload         4
      25: ifnonnull     40
      28: new           #6                  // class java/util/HashMap
      31: dup
      32: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      35: astore        4
      37: goto          51
      40: new           #6                  // class java/util/HashMap
      43: dup
      44: aload         4
      46: invokespecial #8                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      49: astore        4
      51: aload_1
      52: ldc           #9                  // String soap.env.ns.map
      54: aload         4
      56: invokevirtual #10                 // Method org/apache/cxf/binding/soap/SoapMessage.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload         4
      62: aload_3
      63: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      68: ifne          94
      71: aload         4
      73: ldc           #12                 // String wsa
      75: invokeinterface #13,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      80: ifne          94
      83: aload         4
      85: ldc           #12                 // String wsa
      87: aload_3
      88: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: aload_1
      95: ldc           #15                 // String disable.outputstream.optimization
      97: getstatic     #16                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     100: invokevirtual #10                 // Method org/apache/cxf/binding/soap/SoapMessage.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: return

  public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class org/apache/cxf/binding/soap/SoapMessage
       5: invokevirtual #18                 // Method handleMessage:(Lorg/apache/cxf/binding/soap/SoapMessage;)V
       8: return
}
