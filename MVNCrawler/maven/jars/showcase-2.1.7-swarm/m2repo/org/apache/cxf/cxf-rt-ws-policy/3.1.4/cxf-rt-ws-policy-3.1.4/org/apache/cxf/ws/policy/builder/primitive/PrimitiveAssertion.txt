Compiled from "PrimitiveAssertion.java"
public class org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion extends org.apache.neethi.builders.PrimitiveAssertion {
  public org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":()V
       4: return

  public org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #2                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":(Ljavax/xml/namespace/QName;Z)V
       6: return

  public org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion(javax.xml.namespace.QName, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":(Ljavax/xml/namespace/QName;Z)V
       6: return

  public org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion(javax.xml.namespace.QName, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #3                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":(Ljavax/xml/namespace/QName;ZZ)V
       7: return

  public org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion(javax.xml.namespace.QName, boolean, boolean, java.util.Map<javax.xml.namespace.QName, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":(Ljavax/xml/namespace/QName;ZZLjava/util/Map;)V
       9: return

  public org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion(org.w3c.dom.Element);
    Code:
       0: aload_0
       1: new           #5                  // class javax/xml/namespace/QName
       4: dup
       5: aload_1
       6: invokeinterface #6,  1            // InterfaceMethod org/w3c/dom/Element.getNamespaceURI:()Ljava/lang/String;
      11: aload_1
      12: invokeinterface #7,  1            // InterfaceMethod org/w3c/dom/Element.getLocalName:()Ljava/lang/String;
      17: invokespecial #8                  // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      20: aload_1
      21: invokestatic  #9                  // Method org/apache/neethi/builders/xml/XMLPrimitiveAssertionBuilder.isOptional:(Lorg/w3c/dom/Element;)Z
      24: aload_1
      25: invokestatic  #10                 // Method org/apache/neethi/builders/xml/XMLPrimitiveAssertionBuilder.isIgnorable:(Lorg/w3c/dom/Element;)Z
      28: invokespecial #3                  // Method org/apache/neethi/builders/PrimitiveAssertion."<init>":(Ljavax/xml/namespace/QName;ZZ)V
      31: return

  protected org.apache.neethi.Assertion clone(boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #11                 // Field optional:Z
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #12                 // class org/apache/cxf/ws/policy/builder/primitive/PrimitiveAssertion
      13: dup
      14: aload_0
      15: getfield      #13                 // Field name:Ljavax/xml/namespace/QName;
      18: iload_1
      19: aload_0
      20: getfield      #14                 // Field ignorable:Z
      23: invokespecial #15                 // Method "<init>":(Ljavax/xml/namespace/QName;ZZ)V
      26: areturn
}
