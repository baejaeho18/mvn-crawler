Compiled from "AsyncHTTPConduitFactory.java"
public class org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory implements org.apache.cxf.transport.http.HTTPConduitFactory {
  public static final java.lang.String TCP_NODELAY;

  public static final java.lang.String SO_KEEPALIVE;

  public static final java.lang.String SO_LINGER;

  public static final java.lang.String SO_TIMEOUT;

  public static final java.lang.String MAX_CONNECTIONS;

  public static final java.lang.String MAX_PER_HOST_CONNECTIONS;

  public static final java.lang.String CONNECTION_TTL;

  public static final java.lang.String THREAD_COUNT;

  public static final java.lang.String INTEREST_OP_QUEUED;

  public static final java.lang.String SELECT_INTERVAL;

  public static final java.lang.String USE_POLICY;

  volatile org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager connectionManager;

  volatile org.apache.http.impl.nio.client.CloseableHttpAsyncClient client;

  boolean isShutdown;

  org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$UseAsyncPolicy policy;

  int maxConnections;

  int maxPerRoute;

  int connectionTTL;

  int ioThreadCount;

  long selectInterval;

  boolean interestOpQueued;

  int soLinger;

  int soTimeout;

  boolean soKeepalive;

  boolean tcpNoDelay;

  org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        5000
       8: putfield      #2                  // Field maxConnections:I
      11: aload_0
      12: sipush        1000
      15: putfield      #3                  // Field maxPerRoute:I
      18: aload_0
      19: ldc           #4                  // int 60000
      21: putfield      #5                  // Field connectionTTL:I
      24: aload_0
      25: getstatic     #6                  // Field org/apache/http/impl/nio/reactor/IOReactorConfig.DEFAULT:Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      28: invokevirtual #7                  // Method org/apache/http/impl/nio/reactor/IOReactorConfig.getIoThreadCount:()I
      31: putfield      #8                  // Field ioThreadCount:I
      34: aload_0
      35: getstatic     #6                  // Field org/apache/http/impl/nio/reactor/IOReactorConfig.DEFAULT:Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      38: invokevirtual #9                  // Method org/apache/http/impl/nio/reactor/IOReactorConfig.getSelectInterval:()J
      41: putfield      #10                 // Field selectInterval:J
      44: aload_0
      45: getstatic     #6                  // Field org/apache/http/impl/nio/reactor/IOReactorConfig.DEFAULT:Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      48: invokevirtual #11                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig.isInterestOpQueued:()Z
      51: putfield      #12                 // Field interestOpQueued:Z
      54: aload_0
      55: getstatic     #6                  // Field org/apache/http/impl/nio/reactor/IOReactorConfig.DEFAULT:Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      58: invokevirtual #13                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig.getSoLinger:()I
      61: putfield      #14                 // Field soLinger:I
      64: aload_0
      65: getstatic     #6                  // Field org/apache/http/impl/nio/reactor/IOReactorConfig.DEFAULT:Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      68: invokevirtual #15                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig.getSoTimeout:()I
      71: putfield      #16                 // Field soTimeout:I
      74: aload_0
      75: getstatic     #6                  // Field org/apache/http/impl/nio/reactor/IOReactorConfig.DEFAULT:Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      78: invokevirtual #17                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig.isSoKeepalive:()Z
      81: putfield      #18                 // Field soKeepalive:Z
      84: aload_0
      85: iconst_1
      86: putfield      #19                 // Field tcpNoDelay:Z
      89: return

  public org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #21                 // Method setProperties:(Ljava/util/Map;)Z
       9: pop
      10: return

  public org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory(org.apache.cxf.Bus);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #22                 // Method addListener:(Lorg/apache/cxf/Bus;)V
       9: aload_0
      10: aload_1
      11: invokeinterface #23,  1           // InterfaceMethod org/apache/cxf/Bus.getProperties:()Ljava/util/Map;
      16: invokespecial #21                 // Method setProperties:(Ljava/util/Map;)Z
      19: pop
      20: return

  public org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduitFactory$UseAsyncPolicy getUseAsyncPolicy();
    Code:
       0: aload_0
       1: getfield      #24                 // Field policy:Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$UseAsyncPolicy;
       4: areturn

  public void update(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method setProperties:(Ljava/util/Map;)Z
       5: ifeq          19
       8: aload_0
       9: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
      12: ifnull        19
      15: aload_0
      16: invokespecial #26                 // Method restartReactor:()V
      19: return

  private void restartReactor();
    Code:
       0: aload_0
       1: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
       4: astore_1
       5: aload_0
       6: invokespecial #27                 // Method resetVars:()V
       9: aload_1
      10: invokestatic  #28                 // Method shutdown:(Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;)V
      13: return

  private synchronized void resetVars();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
       5: aload_0
       6: aconst_null
       7: putfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
      10: return

  private boolean setProperties(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: ldc           #30                 // String org.apache.cxf.transport.http.async.usePolicy
       9: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     25
      19: ldc           #30                 // String org.apache.cxf.transport.http.async.usePolicy
      21: invokestatic  #32                 // Method org/apache/cxf/common/util/SystemPropertyAction.getPropertyOrNull:(Ljava/lang/String;)Ljava/lang/String;
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokestatic  #33                 // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$UseAsyncPolicy.getPolicy:(Ljava/lang/Object;)Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$UseAsyncPolicy;
      30: putfield      #24                 // Field policy:Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$UseAsyncPolicy;
      33: aload_0
      34: aload_0
      35: aload_1
      36: ldc           #34                 // String org.apache.cxf.transport.http.async.MAX_CONNECTIONS
      38: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: aload_0
      44: getfield      #2                  // Field maxConnections:I
      47: invokespecial #35                 // Method getInt:(Ljava/lang/Object;I)I
      50: putfield      #2                  // Field maxConnections:I
      53: aload_0
      54: aload_0
      55: aload_1
      56: ldc           #36                 // String org.apache.cxf.transport.http.async.CONNECTION_TTL
      58: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: aload_0
      64: getfield      #5                  // Field connectionTTL:I
      67: invokespecial #35                 // Method getInt:(Ljava/lang/Object;I)I
      70: putfield      #5                  // Field connectionTTL:I
      73: aload_0
      74: aload_0
      75: aload_1
      76: ldc           #37                 // String org.apache.cxf.transport.http.async.MAX_PER_HOST_CONNECTIONS
      78: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      83: aload_0
      84: getfield      #3                  // Field maxPerRoute:I
      87: invokespecial #35                 // Method getInt:(Ljava/lang/Object;I)I
      90: putfield      #3                  // Field maxPerRoute:I
      93: aload_0
      94: getfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
      97: ifnull        122
     100: aload_0
     101: getfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
     104: aload_0
     105: getfield      #2                  // Field maxConnections:I
     108: invokevirtual #38                 // Method org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager.setMaxTotal:(I)V
     111: aload_0
     112: getfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
     115: aload_0
     116: getfield      #3                  // Field maxPerRoute:I
     119: invokevirtual #39                 // Method org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager.setDefaultMaxPerRoute:(I)V
     122: iconst_0
     123: istore_3
     124: aload_0
     125: getfield      #8                  // Field ioThreadCount:I
     128: istore        4
     130: aload_0
     131: aload_0
     132: aload_1
     133: ldc           #40                 // String org.apache.cxf.transport.http.async.ioThreadCount
     135: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     140: invokestatic  #41                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
     143: invokevirtual #42                 // Method java/lang/Runtime.availableProcessors:()I
     146: invokespecial #35                 // Method getInt:(Ljava/lang/Object;I)I
     149: putfield      #8                  // Field ioThreadCount:I
     152: iload_3
     153: iload         4
     155: aload_0
     156: getfield      #8                  // Field ioThreadCount:I
     159: if_icmpeq     166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: ior
     168: istore_3
     169: aload_0
     170: getfield      #10                 // Field selectInterval:J
     173: lstore        5
     175: aload_0
     176: aload_0
     177: aload_1
     178: ldc           #43                 // String org.apache.cxf.transport.http.async.selectInterval
     180: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     185: sipush        1000
     188: invokespecial #35                 // Method getInt:(Ljava/lang/Object;I)I
     191: i2l
     192: putfield      #10                 // Field selectInterval:J
     195: iload_3
     196: lload         5
     198: aload_0
     199: getfield      #10                 // Field selectInterval:J
     202: lcmp
     203: ifeq          210
     206: iconst_1
     207: goto          211
     210: iconst_0
     211: ior
     212: istore_3
     213: aload_0
     214: getfield      #14                 // Field soLinger:I
     217: istore        4
     219: aload_0
     220: aload_0
     221: aload_1
     222: ldc           #44                 // String org.apache.cxf.transport.http.async.SO_LINGER
     224: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     229: iconst_m1
     230: invokespecial #35                 // Method getInt:(Ljava/lang/Object;I)I
     233: putfield      #14                 // Field soLinger:I
     236: iload_3
     237: iload         4
     239: aload_0
     240: getfield      #14                 // Field soLinger:I
     243: if_icmpeq     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: ior
     252: istore_3
     253: aload_0
     254: getfield      #16                 // Field soTimeout:I
     257: istore        4
     259: aload_0
     260: aload_0
     261: aload_1
     262: ldc           #45                 // String org.apache.cxf.transport.http.async.SO_TIMEOUT
     264: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     269: iconst_0
     270: invokespecial #35                 // Method getInt:(Ljava/lang/Object;I)I
     273: putfield      #16                 // Field soTimeout:I
     276: iload_3
     277: iload         4
     279: aload_0
     280: getfield      #16                 // Field soTimeout:I
     283: if_icmpeq     290
     286: iconst_1
     287: goto          291
     290: iconst_0
     291: ior
     292: istore_3
     293: aload_0
     294: getfield      #12                 // Field interestOpQueued:Z
     297: istore        7
     299: aload_0
     300: aload_0
     301: aload_1
     302: ldc           #46                 // String org.apache.cxf.transport.http.async.interestOpQueued
     304: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     309: iconst_0
     310: invokespecial #47                 // Method getBoolean:(Ljava/lang/Object;Z)Z
     313: putfield      #12                 // Field interestOpQueued:Z
     316: iload_3
     317: iload         7
     319: aload_0
     320: getfield      #12                 // Field interestOpQueued:Z
     323: if_icmpeq     330
     326: iconst_1
     327: goto          331
     330: iconst_0
     331: ior
     332: istore_3
     333: aload_0
     334: getfield      #19                 // Field tcpNoDelay:Z
     337: istore        7
     339: aload_0
     340: aload_0
     341: aload_1
     342: ldc           #48                 // String org.apache.cxf.transport.http.async.TCP_NODELAY
     344: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     349: iconst_1
     350: invokespecial #47                 // Method getBoolean:(Ljava/lang/Object;Z)Z
     353: putfield      #19                 // Field tcpNoDelay:Z
     356: iload_3
     357: iload         7
     359: aload_0
     360: getfield      #19                 // Field tcpNoDelay:Z
     363: if_icmpeq     370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: ior
     372: istore_3
     373: aload_0
     374: getfield      #18                 // Field soKeepalive:Z
     377: istore        7
     379: aload_0
     380: aload_0
     381: aload_1
     382: ldc           #49                 // String org.apache.cxf.transport.http.async.SO_KEEPALIVE
     384: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     389: iconst_0
     390: invokespecial #47                 // Method getBoolean:(Ljava/lang/Object;Z)Z
     393: putfield      #18                 // Field soKeepalive:Z
     396: iload_3
     397: iload         7
     399: aload_0
     400: getfield      #18                 // Field soKeepalive:Z
     403: if_icmpeq     410
     406: iconst_1
     407: goto          411
     410: iconst_0
     411: ior
     412: istore_3
     413: iload_3
     414: ireturn

  private int getInt(java.lang.Object, int);
    Code:
       0: iload_2
       1: istore_3
       2: aload_1
       3: instanceof    #50                 // class java/lang/String
       6: ifeq          20
       9: aload_1
      10: checkcast     #50                 // class java/lang/String
      13: invokestatic  #51                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: istore_3
      17: goto          35
      20: aload_1
      21: instanceof    #52                 // class java/lang/Number
      24: ifeq          35
      27: aload_1
      28: checkcast     #52                 // class java/lang/Number
      31: invokevirtual #53                 // Method java/lang/Number.intValue:()I
      34: istore_3
      35: iload_3
      36: iconst_m1
      37: if_icmpne     42
      40: iload_2
      41: istore_3
      42: iload_3
      43: ireturn

  private boolean getBoolean(java.lang.Object, boolean);
    Code:
       0: aload_1
       1: instanceof    #50                 // class java/lang/String
       4: ifeq          15
       7: aload_1
       8: checkcast     #50                 // class java/lang/String
      11: invokestatic  #54                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      14: ireturn
      15: aload_1
      16: instanceof    #55                 // class java/lang/Boolean
      19: ifeq          30
      22: aload_1
      23: checkcast     #55                 // class java/lang/Boolean
      26: invokevirtual #56                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn
      30: iload_2
      31: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #57                 // Field isShutdown:Z
       4: ireturn

  public org.apache.cxf.transport.http.HTTPConduit createConduit(org.apache.cxf.transport.http.HTTPTransportFactory, org.apache.cxf.Bus, org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.ws.addressing.EndpointReferenceType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokevirtual #58                 // Method createConduit:(Lorg/apache/cxf/Bus;Lorg/apache/cxf/service/model/EndpointInfo;Lorg/apache/cxf/ws/addressing/EndpointReferenceType;)Lorg/apache/cxf/transport/http/HTTPConduit;
       8: areturn

  public org.apache.cxf.transport.http.HTTPConduit createConduit(org.apache.cxf.Bus, org.apache.cxf.service.model.EndpointInfo, org.apache.cxf.ws.addressing.EndpointReferenceType) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field isShutdown:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: new           #59                 // class org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit
      12: dup
      13: aload_1
      14: aload_2
      15: aload_3
      16: aload_0
      17: invokespecial #60                 // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit."<init>":(Lorg/apache/cxf/Bus;Lorg/apache/cxf/service/model/EndpointInfo;Lorg/apache/cxf/ws/addressing/EndpointReferenceType;Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory;)V
      20: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
       4: ifnull        24
       7: aload_0
       8: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
      11: invokestatic  #28                 // Method shutdown:(Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;)V
      14: aload_0
      15: aconst_null
      16: putfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
      19: aload_0
      20: aconst_null
      21: putfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
      24: aload_0
      25: iconst_1
      26: putfield      #57                 // Field isShutdown:Z
      29: return

  private static void shutdown(org.apache.http.impl.nio.client.CloseableHttpAsyncClient);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method org/apache/http/impl/nio/client/CloseableHttpAsyncClient.close:()V
       4: goto          12
       7: astore_1
       8: aload_1
       9: invokevirtual #63                 // Method java/io/IOException.printStackTrace:()V
      12: return
    Exception table:
       from    to  target type
           0     4     7   Class java/io/IOException

  private void addListener(org.apache.cxf.Bus);
    Code:
       0: aload_1
       1: ldc_w         #64                 // class org/apache/cxf/buslifecycle/BusLifeCycleManager
       4: invokeinterface #65,  2           // InterfaceMethod org/apache/cxf/Bus.getExtension:(Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #64                 // class org/apache/cxf/buslifecycle/BusLifeCycleManager
      12: astore_2
      13: aload_2
      14: ifnull        31
      17: aload_2
      18: new           #66                 // class org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$1
      21: dup
      22: aload_0
      23: invokespecial #67                 // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$1."<init>":(Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory;)V
      26: invokeinterface #68,  2           // InterfaceMethod org/apache/cxf/buslifecycle/BusLifeCycleManager.registerLifeCycleListener:(Lorg/apache/cxf/buslifecycle/BusLifeCycleListener;)V
      31: return

  public synchronized void setupNIOClient(org.apache.cxf.transports.http.configuration.HTTPClientPolicy) throws org.apache.http.nio.reactor.IOReactorException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
       4: ifnull        8
       7: return
       8: invokestatic  #69                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig.custom:()Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      11: aload_0
      12: getfield      #8                  // Field ioThreadCount:I
      15: invokevirtual #70                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setIoThreadCount:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      18: aload_0
      19: getfield      #10                 // Field selectInterval:J
      22: invokevirtual #71                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSelectInterval:(J)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      25: aload_0
      26: getfield      #12                 // Field interestOpQueued:Z
      29: invokevirtual #72                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setInterestOpQueued:(Z)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      32: aload_0
      33: getfield      #14                 // Field soLinger:I
      36: invokevirtual #73                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSoLinger:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      39: aload_0
      40: getfield      #16                 // Field soTimeout:I
      43: invokevirtual #74                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSoTimeout:(I)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      46: aload_0
      47: getfield      #18                 // Field soKeepalive:Z
      50: invokevirtual #75                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setSoKeepAlive:(Z)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      53: aload_0
      54: getfield      #19                 // Field tcpNoDelay:Z
      57: invokevirtual #76                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.setTcpNoDelay:(Z)Lorg/apache/http/impl/nio/reactor/IOReactorConfig$Builder;
      60: invokevirtual #77                 // Method org/apache/http/impl/nio/reactor/IOReactorConfig$Builder.build:()Lorg/apache/http/impl/nio/reactor/IOReactorConfig;
      63: astore_2
      64: invokestatic  #78                 // Method org/apache/http/config/RegistryBuilder.create:()Lorg/apache/http/config/RegistryBuilder;
      67: ldc           #79                 // String http
      69: getstatic     #80                 // Field org/apache/http/nio/conn/NoopIOSessionStrategy.INSTANCE:Lorg/apache/http/nio/conn/NoopIOSessionStrategy;
      72: invokevirtual #81                 // Method org/apache/http/config/RegistryBuilder.register:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/config/RegistryBuilder;
      75: ldc           #82                 // String https
      77: invokestatic  #83                 // Method org/apache/http/nio/conn/ssl/SSLIOSessionStrategy.getSystemDefaultStrategy:()Lorg/apache/http/nio/conn/ssl/SSLIOSessionStrategy;
      80: invokevirtual #81                 // Method org/apache/http/config/RegistryBuilder.register:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/http/config/RegistryBuilder;
      83: invokevirtual #84                 // Method org/apache/http/config/RegistryBuilder.build:()Lorg/apache/http/config/Registry;
      86: astore_3
      87: new           #85                 // class org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$2
      90: dup
      91: aload_0
      92: invokespecial #86                 // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$2."<init>":(Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory;)V
      95: astore        4
      97: new           #87                 // class org/apache/http/impl/nio/reactor/DefaultConnectingIOReactor
     100: dup
     101: aload_2
     102: invokespecial #88                 // Method org/apache/http/impl/nio/reactor/DefaultConnectingIOReactor."<init>":(Lorg/apache/http/impl/nio/reactor/IOReactorConfig;)V
     105: astore        5
     107: aload_0
     108: new           #89                 // class org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager
     111: dup
     112: aload         5
     114: aload         4
     116: aload_3
     117: getstatic     #90                 // Field org/apache/http/impl/conn/DefaultSchemePortResolver.INSTANCE:Lorg/apache/http/impl/conn/DefaultSchemePortResolver;
     120: getstatic     #91                 // Field org/apache/http/impl/conn/SystemDefaultDnsResolver.INSTANCE:Lorg/apache/http/impl/conn/SystemDefaultDnsResolver;
     123: aload_0
     124: getfield      #5                  // Field connectionTTL:I
     127: i2l
     128: getstatic     #92                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     131: invokespecial #93                 // Method org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager."<init>":(Lorg/apache/http/nio/reactor/ConnectingIOReactor;Lorg/apache/http/nio/conn/NHttpConnectionFactory;Lorg/apache/http/config/Registry;Lorg/apache/http/conn/SchemePortResolver;Lorg/apache/http/conn/DnsResolver;JLjava/util/concurrent/TimeUnit;)V
     134: putfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
     137: aload_0
     138: getfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
     141: aload_0
     142: getfield      #3                  // Field maxPerRoute:I
     145: invokevirtual #39                 // Method org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager.setDefaultMaxPerRoute:(I)V
     148: aload_0
     149: getfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
     152: aload_0
     153: getfield      #2                  // Field maxConnections:I
     156: invokevirtual #38                 // Method org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager.setMaxTotal:(I)V
     159: invokestatic  #94                 // Method org/apache/http/config/ConnectionConfig.custom:()Lorg/apache/http/config/ConnectionConfig$Builder;
     162: aload_1
     163: invokevirtual #95                 // Method org/apache/cxf/transports/http/configuration/HTTPClientPolicy.getChunkLength:()I
     166: ifle          176
     169: aload_1
     170: invokevirtual #95                 // Method org/apache/cxf/transports/http/configuration/HTTPClientPolicy.getChunkLength:()I
     173: goto          179
     176: sipush        16332
     179: invokevirtual #96                 // Method org/apache/http/config/ConnectionConfig$Builder.setBufferSize:(I)Lorg/apache/http/config/ConnectionConfig$Builder;
     182: invokevirtual #97                 // Method org/apache/http/config/ConnectionConfig$Builder.build:()Lorg/apache/http/config/ConnectionConfig;
     185: astore        6
     187: aload_0
     188: getfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
     191: aload         6
     193: invokevirtual #98                 // Method org/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager.setDefaultConnectionConfig:(Lorg/apache/http/config/ConnectionConfig;)V
     196: new           #99                 // class org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$3
     199: dup
     200: aload_0
     201: invokespecial #100                // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$3."<init>":(Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory;)V
     204: astore        7
     206: invokestatic  #101                // Method org/apache/http/impl/nio/client/HttpAsyncClients.custom:()Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
     209: aload_0
     210: getfield      #29                 // Field connectionManager:Lorg/apache/http/impl/nio/conn/PoolingNHttpClientConnectionManager;
     213: invokevirtual #102                // Method org/apache/http/impl/nio/client/HttpAsyncClientBuilder.setConnectionManager:(Lorg/apache/http/nio/conn/NHttpClientConnectionManager;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
     216: aload         7
     218: invokevirtual #103                // Method org/apache/http/impl/nio/client/HttpAsyncClientBuilder.setRedirectStrategy:(Lorg/apache/http/client/RedirectStrategy;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
     221: new           #104                // class org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$4
     224: dup
     225: aload_0
     226: invokespecial #105                // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory$4."<init>":(Lorg/apache/cxf/transport/http/asyncclient/AsyncHTTPConduitFactory;)V
     229: invokevirtual #106                // Method org/apache/http/impl/nio/client/HttpAsyncClientBuilder.setDefaultCookieStore:(Lorg/apache/http/client/CookieStore;)Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;
     232: astore        8
     234: aload_0
     235: aload         8
     237: invokevirtual #107                // Method adaptClientBuilder:(Lorg/apache/http/impl/nio/client/HttpAsyncClientBuilder;)V
     240: aload_0
     241: aload         8
     243: invokevirtual #108                // Method org/apache/http/impl/nio/client/HttpAsyncClientBuilder.build:()Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
     246: putfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
     249: aload_0
     250: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
     253: invokevirtual #109                // Method org/apache/http/impl/nio/client/CloseableHttpAsyncClient.start:()V
     256: return

  protected void adaptClientBuilder(org.apache.http.impl.nio.client.HttpAsyncClientBuilder);
    Code:
       0: return

  public org.apache.http.impl.nio.client.CloseableHttpAsyncClient createClient(org.apache.cxf.transport.http.asyncclient.AsyncHTTPConduit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: invokevirtual #110                // Method org/apache/cxf/transport/http/asyncclient/AsyncHTTPConduit.getClient:()Lorg/apache/cxf/transports/http/configuration/HTTPClientPolicy;
      12: invokevirtual #111                // Method setupNIOClient:(Lorg/apache/cxf/transports/http/configuration/HTTPClientPolicy;)V
      15: aload_0
      16: getfield      #25                 // Field client:Lorg/apache/http/impl/nio/client/CloseableHttpAsyncClient;
      19: areturn
}
