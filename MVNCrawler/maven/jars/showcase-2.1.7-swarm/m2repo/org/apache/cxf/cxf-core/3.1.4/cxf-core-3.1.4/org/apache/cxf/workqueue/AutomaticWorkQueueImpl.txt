Compiled from "AutomaticWorkQueueImpl.java"
public class org.apache.cxf.workqueue.AutomaticWorkQueueImpl implements org.apache.cxf.workqueue.AutomaticWorkQueue {
  public static final java.lang.String PROPERTY_NAME;

  static final int DEFAULT_MAX_QUEUE_SIZE;

  private static final java.util.logging.Logger LOG;

  java.lang.String name;

  int maxQueueSize;

  int initialThreads;

  int lowWaterMark;

  int highWaterMark;

  long dequeueTimeout;

  volatile int approxThreadCount;

  java.util.concurrent.ThreadPoolExecutor executor;

  java.lang.reflect.Method addWorkerMethod;

  java.lang.Object[] addWorkerArgs;

  org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory threadFactory;

  java.util.concurrent.locks.ReentrantLock mainLock;

  final java.util.concurrent.locks.ReentrantLock addThreadLock;

  java.util.concurrent.DelayQueue<org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper> delayQueue;

  org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog watchDog;

  boolean shared;

  int sharedCount;

  private java.util.List<java.beans.PropertyChangeListener> changeListenerList;

  public org.apache.cxf.workqueue.AutomaticWorkQueueImpl();
    Code:
       0: aload_0
       1: sipush        256
       4: invokespecial #2                  // Method "<init>":(I)V
       7: return

  public org.apache.cxf.workqueue.AutomaticWorkQueueImpl(java.lang.String);
    Code:
       0: aload_0
       1: sipush        256
       4: aload_1
       5: invokespecial #3                  // Method "<init>":(ILjava/lang/String;)V
       8: return

  public org.apache.cxf.workqueue.AutomaticWorkQueueImpl(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #4                  // String default
       4: invokespecial #3                  // Method "<init>":(ILjava/lang/String;)V
       7: return

  public org.apache.cxf.workqueue.AutomaticWorkQueueImpl(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: bipush        25
       5: iconst_5
       6: ldc2_w        #5                  // long 120000l
       9: aload_2
      10: invokespecial #7                  // Method "<init>":(IIIIJLjava/lang/String;)V
      13: return

  public org.apache.cxf.workqueue.AutomaticWorkQueueImpl(int, int, int, int, long);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: lload         5
       8: ldc           #4                  // String default
      10: invokespecial #7                  // Method "<init>":(IIIIJLjava/lang/String;)V
      13: return

  public org.apache.cxf.workqueue.AutomaticWorkQueueImpl(int, int, int, int, long, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String default
       7: putfield      #9                  // Field name:Ljava/lang/String;
      10: aload_0
      11: new           #10                 // class java/util/concurrent/locks/ReentrantLock
      14: dup
      15: invokespecial #11                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      18: putfield      #12                 // Field addThreadLock:Ljava/util/concurrent/locks/ReentrantLock;
      21: aload_0
      22: iload_1
      23: iconst_m1
      24: if_icmpne     33
      27: sipush        256
      30: goto          34
      33: iload_1
      34: putfield      #13                 // Field maxQueueSize:I
      37: aload_0
      38: iload_2
      39: putfield      #14                 // Field initialThreads:I
      42: aload_0
      43: iconst_m1
      44: iload_3
      45: if_icmpne     53
      48: ldc           #15                 // int 2147483647
      50: goto          54
      53: iload_3
      54: putfield      #16                 // Field highWaterMark:I
      57: aload_0
      58: iconst_m1
      59: iload         4
      61: if_icmpne     69
      64: ldc           #15                 // int 2147483647
      66: goto          71
      69: iload         4
      71: putfield      #17                 // Field lowWaterMark:I
      74: aload_0
      75: lload         5
      77: putfield      #18                 // Field dequeueTimeout:J
      80: aload_0
      81: aload         7
      83: putfield      #9                  // Field name:Ljava/lang/String;
      86: aload_0
      87: new           #19                 // class java/util/ArrayList
      90: dup
      91: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      94: putfield      #21                 // Field changeListenerList:Ljava/util/List;
      97: return

  public void addChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #21                 // Field changeListenerList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #21                 // Field changeListenerList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void notifyChangeListeners(java.beans.PropertyChangeEvent);
    Code:
       0: aload_0
       1: getfield      #21                 // Field changeListenerList:Ljava/util/List;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #27                 // class java/beans/PropertyChangeListener
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #28,  2           // InterfaceMethod java/beans/PropertyChangeListener.propertyChange:(Ljava/beans/PropertyChangeEvent;)V
      36: goto          10
      39: return

  public void setShared(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field shared:Z
       5: return

  public boolean isShared();
    Code:
       0: aload_0
       1: getfield      #29                 // Field shared:Z
       4: ireturn

  public void addSharedUser();
    Code:
       0: aload_0
       1: dup
       2: getfield      #30                 // Field sharedCount:I
       5: iconst_1
       6: iadd
       7: putfield      #30                 // Field sharedCount:I
      10: return

  public void removeSharedUser();
    Code:
       0: aload_0
       1: dup
       2: getfield      #30                 // Field sharedCount:I
       5: iconst_1
       6: isub
       7: putfield      #30                 // Field sharedCount:I
      10: return

  public int getShareCount();
    Code:
       0: aload_0
       1: getfield      #30                 // Field sharedCount:I
       4: ireturn

  protected synchronized java.util.concurrent.ThreadPoolExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     470
       7: aload_0
       8: aload_0
       9: aload_0
      10: getfield      #9                  // Field name:Ljava/lang/String;
      13: invokespecial #32                 // Method createThreadFactory:(Ljava/lang/String;)Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory;
      16: putfield      #33                 // Field threadFactory:Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory;
      19: aload_0
      20: new           #34                 // class org/apache/cxf/workqueue/AutomaticWorkQueueImpl$1
      23: dup
      24: aload_0
      25: aload_0
      26: getfield      #17                 // Field lowWaterMark:I
      29: aload_0
      30: getfield      #16                 // Field highWaterMark:I
      33: getstatic     #35                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      36: aload_0
      37: getfield      #18                 // Field dequeueTimeout:J
      40: invokevirtual #36                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      43: getstatic     #35                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      46: new           #37                 // class java/util/concurrent/LinkedBlockingQueue
      49: dup
      50: aload_0
      51: getfield      #13                 // Field maxQueueSize:I
      54: invokespecial #38                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      57: aload_0
      58: getfield      #33                 // Field threadFactory:Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory;
      61: invokespecial #39                 // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$1."<init>":(Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl;IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      64: putfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      67: getstatic     #1                  // Field LOG:Ljava/util/logging/Logger;
      70: getstatic     #40                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      73: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      76: ifeq          232
      79: new           #42                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      86: astore_1
      87: aload_1
      88: ldc           #44                 // String Constructing automatic work queue with:\n
      90: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: pop
      94: aload_1
      95: new           #42                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #46                 // String max queue size:
     104: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: getfield      #13                 // Field maxQueueSize:I
     111: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     114: ldc           #48                 // String \n
     116: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: pop
     126: aload_1
     127: new           #42                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     134: ldc           #50                 // String initialThreads:
     136: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload_0
     140: getfield      #14                 // Field initialThreads:I
     143: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     146: ldc           #48                 // String \n
     148: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: pop
     158: aload_1
     159: new           #42                 // class java/lang/StringBuilder
     162: dup
     163: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     166: ldc           #51                 // String lowWaterMark:
     168: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload_0
     172: getfield      #17                 // Field lowWaterMark:I
     175: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     178: ldc           #48                 // String \n
     180: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: pop
     190: aload_1
     191: new           #42                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #52                 // String highWaterMark:
     200: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_0
     204: getfield      #16                 // Field highWaterMark:I
     207: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     210: ldc           #48                 // String \n
     212: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: pop
     222: getstatic     #1                  // Field LOG:Ljava/util/logging/Logger;
     225: aload_1
     226: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     229: invokevirtual #53                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
     232: aload_0
     233: getfield      #14                 // Field initialThreads:I
     236: aload_0
     237: getfield      #16                 // Field highWaterMark:I
     240: if_icmple     251
     243: aload_0
     244: aload_0
     245: getfield      #16                 // Field highWaterMark:I
     248: putfield      #14                 // Field initialThreads:I
     251: aload_0
     252: getfield      #14                 // Field initialThreads:I
     255: ldc           #15                 // int 2147483647
     257: if_icmpge     337
     260: aload_0
     261: getfield      #14                 // Field initialThreads:I
     264: ifle          337
     267: aload_0
     268: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     271: aload_0
     272: getfield      #14                 // Field initialThreads:I
     275: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
     278: aload_0
     279: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     282: invokevirtual #55                 // Method java/util/concurrent/ThreadPoolExecutor.prestartAllCoreThreads:()I
     285: istore_1
     286: iload_1
     287: aload_0
     288: getfield      #14                 // Field initialThreads:I
     291: if_icmpge     326
     294: getstatic     #1                  // Field LOG:Ljava/util/logging/Logger;
     297: getstatic     #56                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     300: ldc           #57                 // String THREAD_START_FAILURE_MSG
     302: iconst_2
     303: anewarray     #58                 // class java/lang/Object
     306: dup
     307: iconst_0
     308: iload_1
     309: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     312: aastore
     313: dup
     314: iconst_1
     315: aload_0
     316: getfield      #14                 // Field initialThreads:I
     319: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     322: aastore
     323: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
     326: aload_0
     327: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     330: aload_0
     331: getfield      #17                 // Field lowWaterMark:I
     334: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
     337: aconst_null
     338: astore_1
     339: ldc_w         #61                 // class java/util/concurrent/ThreadPoolExecutor
     342: ldc           #62                 // String mainLock
     344: invokevirtual #63                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     347: astore_2
     348: aload_2
     349: invokestatic  #64                 // Method org/apache/cxf/common/util/ReflectionUtil.setAccessible:(Ljava/lang/reflect/AccessibleObject;)Ljava/lang/reflect/AccessibleObject;
     352: pop
     353: aload_2
     354: aload_0
     355: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     358: invokevirtual #65                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     361: checkcast     #10                 // class java/util/concurrent/locks/ReentrantLock
     364: astore_1
     365: goto          377
     368: astore_2
     369: new           #10                 // class java/util/concurrent/locks/ReentrantLock
     372: dup
     373: invokespecial #11                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
     376: astore_1
     377: aload_0
     378: aload_1
     379: putfield      #67                 // Field mainLock:Ljava/util/concurrent/locks/ReentrantLock;
     382: aload_0
     383: ldc_w         #61                 // class java/util/concurrent/ThreadPoolExecutor
     386: ldc           #68                 // String addIfUnderMaximumPoolSize
     388: iconst_1
     389: anewarray     #69                 // class java/lang/Class
     392: dup
     393: iconst_0
     394: ldc_w         #70                 // class java/lang/Runnable
     397: aastore
     398: invokevirtual #71                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     401: putfield      #72                 // Field addWorkerMethod:Ljava/lang/reflect/Method;
     404: aload_0
     405: iconst_1
     406: anewarray     #58                 // class java/lang/Object
     409: dup
     410: iconst_0
     411: aconst_null
     412: aastore
     413: putfield      #73                 // Field addWorkerArgs:[Ljava/lang/Object;
     416: goto          470
     419: astore_2
     420: aload_0
     421: ldc_w         #61                 // class java/util/concurrent/ThreadPoolExecutor
     424: ldc           #74                 // String addWorker
     426: iconst_2
     427: anewarray     #69                 // class java/lang/Class
     430: dup
     431: iconst_0
     432: ldc_w         #70                 // class java/lang/Runnable
     435: aastore
     436: dup
     437: iconst_1
     438: getstatic     #75                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     441: aastore
     442: invokevirtual #71                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     445: putfield      #72                 // Field addWorkerMethod:Ljava/lang/reflect/Method;
     448: aload_0
     449: iconst_2
     450: anewarray     #58                 // class java/lang/Object
     453: dup
     454: iconst_0
     455: aconst_null
     456: aastore
     457: dup
     458: iconst_1
     459: getstatic     #76                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     462: aastore
     463: putfield      #73                 // Field addWorkerArgs:[Ljava/lang/Object;
     466: goto          470
     469: astore_3
     470: aload_0
     471: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     474: areturn
    Exception table:
       from    to  target type
         339   365   368   Class java/lang/Throwable
         382   416   419   Class java/lang/Throwable
         420   466   469   Class java/lang/Throwable

  private org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory createThreadFactory(java.lang.String);
    Code:
       0: new           #77                 // class org/apache/cxf/workqueue/AutomaticWorkQueueImpl$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #78                 // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$2."<init>":(Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl;Ljava/lang/String;)V
       9: invokestatic  #79                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      12: checkcast     #80                 // class java/lang/ThreadGroup
      15: astore_2
      16: goto          47
      19: astore_3
      20: new           #80                 // class java/lang/ThreadGroup
      23: dup
      24: new           #42                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      31: aload_1
      32: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #82                 // String -workqueue
      37: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #83                 // Method java/lang/ThreadGroup."<init>":(Ljava/lang/String;)V
      46: astore_2
      47: new           #84                 // class org/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory
      50: dup
      51: aload_0
      52: aload_2
      53: aload_1
      54: invokespecial #85                 // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory."<init>":(Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl;Ljava/lang/ThreadGroup;Ljava/lang/String;)V
      57: areturn
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/SecurityException

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field name:Ljava/lang/String;
       5: aload_0
       6: getfield      #33                 // Field threadFactory:Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory;
       9: ifnull        20
      12: aload_0
      13: getfield      #33                 // Field threadFactory:Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory;
      16: aload_1
      17: invokevirtual #86                 // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$AWQThreadFactory.setName:(Ljava/lang/String;)V
      20: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #42                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokespecial #87                 // Method java/lang/Object.toString:()Ljava/lang/String;
      13: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #88                 // String  [queue size:
      20: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: invokevirtual #89                 // Method getSize:()J
      29: invokevirtual #90                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: ldc           #91                 // String , max size:
      36: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #13                 // Field maxQueueSize:I
      45: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: pop
      49: aload_1
      50: ldc           #92                 // String , threads:
      52: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: aload_0
      58: invokevirtual #93                 // Method getPoolSize:()I
      61: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: pop
      65: aload_1
      66: ldc           #94                 // String , active threads:
      68: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: aload_1
      73: aload_0
      74: invokevirtual #95                 // Method getActiveCount:()I
      77: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: pop
      81: aload_1
      82: ldc           #96                 // String , low water mark:
      84: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_1
      89: aload_0
      90: invokevirtual #97                 // Method getLowWaterMark:()I
      93: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: pop
      97: aload_1
      98: ldc           #98                 // String , high water mark:
     100: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_1
     105: aload_0
     106: invokevirtual #99                 // Method getHighWaterMark:()I
     109: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     112: pop
     113: aload_1
     114: ldc           #100                // String ]
     116: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: pop
     120: aload_1
     121: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: invokestatic  #101                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #102                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_2
       7: new           #103                // class org/apache/cxf/workqueue/AutomaticWorkQueueImpl$3
      10: dup
      11: aload_0
      12: aload_2
      13: aload_1
      14: invokespecial #104                // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$3."<init>":(Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl;Ljava/lang/ClassLoader;Ljava/lang/Runnable;)V
      17: astore_3
      18: aload_0
      19: invokevirtual #105                // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      22: astore        4
      24: aload         4
      26: aload_3
      27: invokevirtual #106                // Method java/util/concurrent/ThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      30: aload_0
      31: getfield      #72                 // Field addWorkerMethod:Ljava/lang/reflect/Method;
      34: ifnull        192
      37: aload         4
      39: invokevirtual #107                // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      42: invokeinterface #108,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      47: ifne          192
      50: aload_0
      51: getfield      #109                // Field approxThreadCount:I
      54: aload_0
      55: getfield      #16                 // Field highWaterMark:I
      58: if_icmpge     192
      61: aload_0
      62: getfield      #12                 // Field addThreadLock:Ljava/util/concurrent/locks/ReentrantLock;
      65: invokevirtual #110                // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
      68: ifeq          192
      71: aload_0
      72: getfield      #67                 // Field mainLock:Ljava/util/concurrent/locks/ReentrantLock;
      75: invokevirtual #111                // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      78: aload_0
      79: invokevirtual #93                 // Method getPoolSize:()I
      82: istore        5
      84: aload_0
      85: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      88: invokevirtual #107                // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      91: invokeinterface #112,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      96: istore        6
      98: aload_0
      99: invokevirtual #95                 // Method getActiveCount:()I
     102: istore        7
     104: iload         6
     106: iload         7
     108: iadd
     109: iload         5
     111: if_icmple     136
     114: aload_0
     115: getfield      #72                 // Field addWorkerMethod:Ljava/lang/reflect/Method;
     118: invokestatic  #64                 // Method org/apache/cxf/common/util/ReflectionUtil.setAccessible:(Ljava/lang/reflect/AccessibleObject;)Ljava/lang/reflect/AccessibleObject;
     121: checkcast     #113                // class java/lang/reflect/Method
     124: aload_0
     125: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
     128: aload_0
     129: getfield      #73                 // Field addWorkerArgs:[Ljava/lang/Object;
     132: invokevirtual #114                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: aload_0
     137: getfield      #67                 // Field mainLock:Ljava/util/concurrent/locks/ReentrantLock;
     140: invokevirtual #115                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     143: goto          170
     146: astore        5
     148: aload_0
     149: getfield      #67                 // Field mainLock:Ljava/util/concurrent/locks/ReentrantLock;
     152: invokevirtual #115                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     155: goto          170
     158: astore        8
     160: aload_0
     161: getfield      #67                 // Field mainLock:Ljava/util/concurrent/locks/ReentrantLock;
     164: invokevirtual #115                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     167: aload         8
     169: athrow
     170: aload_0
     171: getfield      #12                 // Field addThreadLock:Ljava/util/concurrent/locks/ReentrantLock;
     174: invokevirtual #115                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     177: goto          192
     180: astore        9
     182: aload_0
     183: getfield      #12                 // Field addThreadLock:Ljava/util/concurrent/locks/ReentrantLock;
     186: invokevirtual #115                // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     189: aload         9
     191: athrow
     192: return
    Exception table:
       from    to  target type
          78   136   146   Class java/lang/Exception
          78   136   158   any
         146   148   158   any
         158   160   158   any
          71   170   180   any
         180   182   180   any

  public void execute(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #117                // Method execute:(Ljava/lang/Runnable;)V
       5: goto          41
       8: astore        4
      10: aload_0
      11: invokevirtual #105                // Method getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
      14: invokevirtual #107                // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      17: aload_1
      18: lload_2
      19: getstatic     #35                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      22: invokeinterface #119,  5          // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
      27: ifne          33
      30: aload         4
      32: athrow
      33: goto          41
      36: astore        5
      38: aload         4
      40: athrow
      41: return
    Exception table:
       from    to  target type
           0     5     8   Class java/util/concurrent/RejectedExecutionException
          10    33    36   Class java/lang/InterruptedException

  public synchronized void schedule(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #121                // Field delayQueue:Ljava/util/concurrent/DelayQueue;
       4: ifnonnull     49
       7: aload_0
       8: new           #122                // class java/util/concurrent/DelayQueue
      11: dup
      12: invokespecial #123                // Method java/util/concurrent/DelayQueue."<init>":()V
      15: putfield      #121                // Field delayQueue:Ljava/util/concurrent/DelayQueue;
      18: aload_0
      19: new           #124                // class org/apache/cxf/workqueue/AutomaticWorkQueueImpl$WatchDog
      22: dup
      23: aload_0
      24: aload_0
      25: getfield      #121                // Field delayQueue:Ljava/util/concurrent/DelayQueue;
      28: invokespecial #125                // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$WatchDog."<init>":(Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl;Ljava/util/concurrent/DelayQueue;)V
      31: putfield      #126                // Field watchDog:Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$WatchDog;
      34: aload_0
      35: getfield      #126                // Field watchDog:Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$WatchDog;
      38: iconst_1
      39: invokevirtual #127                // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$WatchDog.setDaemon:(Z)V
      42: aload_0
      43: getfield      #126                // Field watchDog:Lorg/apache/cxf/workqueue/AutomaticWorkQueueImpl$WatchDog;
      46: invokevirtual #128                // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$WatchDog.start:()V
      49: aload_0
      50: getfield      #121                // Field delayQueue:Ljava/util/concurrent/DelayQueue;
      53: new           #129                // class org/apache/cxf/workqueue/AutomaticWorkQueueImpl$DelayedTaskWrapper
      56: dup
      57: aload_1
      58: lload_2
      59: invokespecial #130                // Method org/apache/cxf/workqueue/AutomaticWorkQueueImpl$DelayedTaskWrapper."<init>":(Ljava/lang/Runnable;J)V
      62: invokevirtual #131                // Method java/util/concurrent/DelayQueue.put:(Ljava/util/concurrent/Delayed;)V
      65: return

  public void shutdown(boolean);
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnull        30
       7: iload_1
       8: ifne          23
      11: aload_0
      12: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      15: invokevirtual #107                // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      18: invokeinterface #132,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.clear:()V
      23: aload_0
      24: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      27: invokevirtual #133                // Method java/util/concurrent/ThreadPoolExecutor.shutdown:()V
      30: return

  public long getMaxSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxQueueSize:I
       4: i2l
       5: lreturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     11
       7: lconst_0
       8: goto          24
      11: aload_0
      12: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      15: invokevirtual #107                // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      18: invokeinterface #112,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      23: i2l
      24: lreturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     11
       7: iconst_1
       8: goto          31
      11: aload_0
      12: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      15: invokevirtual #107                // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      18: invokeinterface #112,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean isFull();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     11
       7: iconst_0
       8: goto          31
      11: aload_0
      12: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      15: invokevirtual #107                // Method java/util/concurrent/ThreadPoolExecutor.getQueue:()Ljava/util/concurrent/BlockingQueue;
      18: invokeinterface #134,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.remainingCapacity:()I
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public int getHighWaterMark();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #16                 // Field highWaterMark:I
      11: goto          21
      14: aload_0
      15: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      18: invokevirtual #135                // Method java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize:()I
      21: istore_1
      22: iload_1
      23: ldc           #15                 // int 2147483647
      25: if_icmpne     32
      28: iconst_m1
      29: goto          33
      32: iload_1
      33: ireturn

  public int getLowWaterMark();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #17                 // Field lowWaterMark:I
      11: goto          21
      14: aload_0
      15: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      18: invokevirtual #136                // Method java/util/concurrent/ThreadPoolExecutor.getCorePoolSize:()I
      21: istore_1
      22: iload_1
      23: ldc           #15                 // int 2147483647
      25: if_icmpne     32
      28: iconst_m1
      29: goto          33
      32: iload_1
      33: ireturn

  public int getInitialSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field initialThreads:I
       4: ireturn

  public void setHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: ifge          10
       5: ldc           #15                 // int 2147483647
       7: goto          11
      10: iload_1
      11: putfield      #16                 // Field highWaterMark:I
      14: aload_0
      15: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      18: ifnull        60
      21: aload_0
      22: new           #137                // class java/beans/PropertyChangeEvent
      25: dup
      26: aload_0
      27: ldc           #138                // String highWaterMark
      29: aload_0
      30: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      33: invokevirtual #135                // Method java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize:()I
      36: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: iload_1
      40: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: invokespecial #139                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      46: invokevirtual #140                // Method notifyChangeListeners:(Ljava/beans/PropertyChangeEvent;)V
      49: aload_0
      50: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      53: aload_0
      54: getfield      #16                 // Field highWaterMark:I
      57: invokevirtual #141                // Method java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize:(I)V
      60: return

  public void setLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: ifge          9
       5: iconst_0
       6: goto          10
       9: iload_1
      10: putfield      #17                 // Field lowWaterMark:I
      13: aload_0
      14: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      17: ifnull        59
      20: aload_0
      21: new           #137                // class java/beans/PropertyChangeEvent
      24: dup
      25: aload_0
      26: ldc           #142                // String lowWaterMark
      28: aload_0
      29: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      32: invokevirtual #136                // Method java/util/concurrent/ThreadPoolExecutor.getCorePoolSize:()I
      35: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: iload_1
      39: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: invokespecial #139                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      45: invokevirtual #140                // Method notifyChangeListeners:(Ljava/beans/PropertyChangeEvent;)V
      48: aload_0
      49: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      52: aload_0
      53: getfield      #17                 // Field lowWaterMark:I
      56: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
      59: return

  public void setInitialSize(int);
    Code:
       0: aload_0
       1: new           #137                // class java/beans/PropertyChangeEvent
       4: dup
       5: aload_0
       6: ldc           #143                // String initialSize
       8: aload_0
       9: getfield      #14                 // Field initialThreads:I
      12: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: iload_1
      16: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokespecial #139                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokevirtual #140                // Method notifyChangeListeners:(Ljava/beans/PropertyChangeEvent;)V
      25: aload_0
      26: iload_1
      27: putfield      #14                 // Field initialThreads:I
      30: return

  public void setQueueSize(int);
    Code:
       0: aload_0
       1: new           #137                // class java/beans/PropertyChangeEvent
       4: dup
       5: aload_0
       6: ldc           #144                // String queueSize
       8: aload_0
       9: getfield      #13                 // Field maxQueueSize:I
      12: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: iload_1
      16: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokespecial #139                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokevirtual #140                // Method notifyChangeListeners:(Ljava/beans/PropertyChangeEvent;)V
      25: aload_0
      26: iload_1
      27: putfield      #13                 // Field maxQueueSize:I
      30: return

  public void setDequeueTimeout(long);
    Code:
       0: aload_0
       1: new           #137                // class java/beans/PropertyChangeEvent
       4: dup
       5: aload_0
       6: ldc           #145                // String dequeueTimeout
       8: aload_0
       9: getfield      #18                 // Field dequeueTimeout:J
      12: invokestatic  #146                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: lload_1
      16: invokestatic  #146                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokespecial #139                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: invokevirtual #140                // Method notifyChangeListeners:(Ljava/beans/PropertyChangeEvent;)V
      25: aload_0
      26: lload_1
      27: putfield      #18                 // Field dequeueTimeout:J
      30: return

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      13: invokevirtual #147                // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
      16: ireturn

  public int getLargestPoolSize();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      13: invokevirtual #148                // Method java/util/concurrent/ThreadPoolExecutor.getLargestPoolSize:()I
      16: ireturn

  public int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      13: invokevirtual #149                // Method java/util/concurrent/ThreadPoolExecutor.getPoolSize:()I
      16: ireturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #31                 // Field executor:Ljava/util/concurrent/ThreadPoolExecutor;
      13: invokevirtual #150                // Method java/util/concurrent/ThreadPoolExecutor.getActiveCount:()I
      16: ireturn

  public void update(java.util.Dictionary<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #138                // String highWaterMark
       3: invokevirtual #151                // Method java/util/Dictionary.get:(Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #152                // class java/lang/String
       9: astore_2
      10: aload_2
      11: ifnull        22
      14: aload_0
      15: aload_2
      16: invokestatic  #153                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      19: putfield      #16                 // Field highWaterMark:I
      22: aload_1
      23: ldc           #142                // String lowWaterMark
      25: invokevirtual #151                // Method java/util/Dictionary.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #152                // class java/lang/String
      31: astore_2
      32: aload_2
      33: ifnull        44
      36: aload_0
      37: aload_2
      38: invokestatic  #153                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      41: putfield      #17                 // Field lowWaterMark:I
      44: aload_1
      45: ldc           #143                // String initialSize
      47: invokevirtual #151                // Method java/util/Dictionary.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #152                // class java/lang/String
      53: astore_2
      54: aload_2
      55: ifnull        66
      58: aload_0
      59: aload_2
      60: invokestatic  #153                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      63: putfield      #14                 // Field initialThreads:I
      66: aload_1
      67: ldc           #145                // String dequeueTimeout
      69: invokevirtual #151                // Method java/util/Dictionary.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #152                // class java/lang/String
      75: astore_2
      76: aload_2
      77: ifnull        88
      80: aload_0
      81: aload_2
      82: invokestatic  #154                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      85: putfield      #18                 // Field dequeueTimeout:J
      88: aload_1
      89: ldc           #144                // String queueSize
      91: invokevirtual #151                // Method java/util/Dictionary.get:(Ljava/lang/Object;)Ljava/lang/Object;
      94: checkcast     #152                // class java/lang/String
      97: astore_2
      98: aload_2
      99: ifnull        110
     102: aload_0
     103: aload_2
     104: invokestatic  #153                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     107: putfield      #13                 // Field maxQueueSize:I
     110: return

  public java.util.Dictionary<java.lang.String, java.lang.String> getProperties();
    Code:
       0: new           #155                // class java/util/Hashtable
       3: dup
       4: invokespecial #156                // Method java/util/Hashtable."<init>":()V
       7: astore_1
       8: invokestatic  #157                // Method java/text/NumberFormat.getIntegerInstance:()Ljava/text/NumberFormat;
      11: astore_2
      12: aload_1
      13: ldc           #158                // String name
      15: aload_2
      16: aload_0
      17: invokevirtual #159                // Method getName:()Ljava/lang/String;
      20: invokevirtual #160                // Method java/text/NumberFormat.format:(Ljava/lang/Object;)Ljava/lang/String;
      23: invokevirtual #161                // Method java/util/Dictionary.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_1
      28: ldc           #138                // String highWaterMark
      30: aload_2
      31: aload_0
      32: invokevirtual #99                 // Method getHighWaterMark:()I
      35: i2l
      36: invokevirtual #162                // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
      39: invokevirtual #161                // Method java/util/Dictionary.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_1
      44: ldc           #142                // String lowWaterMark
      46: aload_2
      47: aload_0
      48: invokevirtual #97                 // Method getLowWaterMark:()I
      51: i2l
      52: invokevirtual #162                // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
      55: invokevirtual #161                // Method java/util/Dictionary.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload_1
      60: ldc           #143                // String initialSize
      62: aload_2
      63: aload_0
      64: invokevirtual #97                 // Method getLowWaterMark:()I
      67: i2l
      68: invokevirtual #162                // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
      71: invokevirtual #161                // Method java/util/Dictionary.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload_1
      76: ldc           #145                // String dequeueTimeout
      78: aload_2
      79: aload_0
      80: invokevirtual #97                 // Method getLowWaterMark:()I
      83: i2l
      84: invokevirtual #162                // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
      87: invokevirtual #161                // Method java/util/Dictionary.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: aload_1
      92: ldc           #144                // String queueSize
      94: aload_2
      95: aload_0
      96: invokevirtual #97                 // Method getLowWaterMark:()I
      99: i2l
     100: invokevirtual #162                // Method java/text/NumberFormat.format:(J)Ljava/lang/String;
     103: invokevirtual #161                // Method java/util/Dictionary.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: aload_1
     108: areturn

  static java.util.logging.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Ljava/util/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #163                // class org/apache/cxf/workqueue/AutomaticWorkQueueImpl
       3: invokestatic  #164                // Method org/apache/cxf/common/logging/LogUtils.getL7dLogger:(Ljava/lang/Class;)Ljava/util/logging/Logger;
       6: putstatic     #1                  // Field LOG:Ljava/util/logging/Logger;
       9: return
}
