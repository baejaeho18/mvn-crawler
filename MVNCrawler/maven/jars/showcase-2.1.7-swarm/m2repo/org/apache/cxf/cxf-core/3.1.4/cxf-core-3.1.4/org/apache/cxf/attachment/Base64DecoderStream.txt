Compiled from "Base64DecoderStream.java"
public class org.apache.cxf.attachment.Base64DecoderStream extends java.io.FilterInputStream {
  static final java.lang.String MAIL_BASE64_IGNOREERRORS;

  static final int BUFFERED_UNITS;

  protected boolean ignoreErrors;

  protected char[] encodedChars;

  protected byte[] decodedChars;

  protected int decodedCount;

  protected int decodedIndex;

  public org.apache.cxf.attachment.Base64DecoderStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: sipush        8000
       9: newarray       char
      11: putfield      #2                  // Field encodedChars:[C
      14: return

  private boolean dataAvailable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field decodedCount:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private boolean decodeStreamData() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field decodedIndex:I
       5: aload_0
       6: invokespecial #5                  // Method fillEncodedBuffer:()I
       9: istore_1
      10: iload_1
      11: ifle          51
      14: aload_0
      15: aload_0
      16: getfield      #2                  // Field encodedChars:[C
      19: iconst_0
      20: iload_1
      21: invokestatic  #6                  // Method org/apache/cxf/common/util/Base64Utility.decodeChunk:([CII)[B
      24: putfield      #7                  // Field decodedChars:[B
      27: goto          40
      30: astore_2
      31: new           #9                  // class java/io/IOException
      34: dup
      35: aload_2
      36: invokespecial #10                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      39: athrow
      40: aload_0
      41: aload_0
      42: getfield      #7                  // Field decodedChars:[B
      45: arraylength
      46: putfield      #3                  // Field decodedCount:I
      49: iconst_1
      50: ireturn
      51: iconst_0
      52: ireturn
    Exception table:
       from    to  target type
          14    27    30   Class org/apache/cxf/common/util/Base64Exception

  private int getByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method dataAvailable:()Z
       4: ifne          16
       7: aload_0
       8: invokespecial #12                 // Method decodeStreamData:()Z
      11: ifne          16
      14: iconst_m1
      15: ireturn
      16: aload_0
      17: dup
      18: getfield      #3                  // Field decodedCount:I
      21: iconst_1
      22: isub
      23: putfield      #3                  // Field decodedCount:I
      26: aload_0
      27: getfield      #7                  // Field decodedChars:[B
      30: aload_0
      31: dup
      32: getfield      #4                  // Field decodedIndex:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #4                  // Field decodedIndex:I
      41: baload
      42: sipush        255
      45: iand
      46: ireturn

  private int getBytes(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload_3
       4: ifle          100
       7: aload_0
       8: invokespecial #11                 // Method dataAvailable:()Z
      11: ifne          33
      14: aload_0
      15: invokespecial #12                 // Method decodeStreamData:()Z
      18: ifne          33
      21: iload         4
      23: ifle          31
      26: iload         4
      28: goto          32
      31: iconst_m1
      32: ireturn
      33: aload_0
      34: getfield      #3                  // Field decodedCount:I
      37: iload_3
      38: invokestatic  #13                 // Method java/lang/Math.min:(II)I
      41: istore        5
      43: aload_0
      44: getfield      #7                  // Field decodedChars:[B
      47: aload_0
      48: getfield      #4                  // Field decodedIndex:I
      51: aload_1
      52: iload_2
      53: iload         5
      55: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      58: aload_0
      59: dup
      60: getfield      #4                  // Field decodedIndex:I
      63: iload         5
      65: iadd
      66: putfield      #4                  // Field decodedIndex:I
      69: aload_0
      70: dup
      71: getfield      #3                  // Field decodedCount:I
      74: iload         5
      76: isub
      77: putfield      #3                  // Field decodedCount:I
      80: iload_2
      81: iload         5
      83: iadd
      84: istore_2
      85: iload_3
      86: iload         5
      88: isub
      89: istore_3
      90: iload         4
      92: iload         5
      94: iadd
      95: istore        4
      97: goto          3
     100: iload         4
     102: ireturn

  private int fillEncodedBuffer() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #15                 // Field in:Ljava/io/InputStream;
       6: invokevirtual #16                 // Method java/io/InputStream.read:()I
       9: istore_2
      10: iload_2
      11: iconst_m1
      12: if_icmpne     33
      15: iload_1
      16: iconst_4
      17: irem
      18: ifeq          31
      21: new           #9                  // class java/io/IOException
      24: dup
      25: ldc           #17                 // String Base64 encoding error, data truncated
      27: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_1
      32: ireturn
      33: iload_2
      34: invokestatic  #19                 // Method org/apache/cxf/common/util/Base64Utility.isValidBase64:(I)Z
      37: ifeq          62
      40: aload_0
      41: getfield      #2                  // Field encodedChars:[C
      44: iload_1
      45: iinc          1, 1
      48: iload_2
      49: i2c
      50: castore
      51: iload_1
      52: aload_0
      53: getfield      #2                  // Field encodedChars:[C
      56: arraylength
      57: if_icmplt     62
      60: iload_1
      61: ireturn
      62: goto          2

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method getByte:()I
       4: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #21                 // Method getBytes:([BII)I
       7: ireturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field in:Ljava/io/InputStream;
       4: invokevirtual #22                 // Method java/io/InputStream.available:()I
       7: iconst_4
       8: idiv
       9: iconst_3
      10: imul
      11: aload_0
      12: getfield      #3                  // Field decodedCount:I
      15: iadd
      16: ireturn
}
