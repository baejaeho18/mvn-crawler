Compiled from "UsernameTokenPolicyValidator.java"
public class org.apache.cxf.ws.security.wss4j.policyvalidators.UsernameTokenPolicyValidator extends org.apache.cxf.ws.security.wss4j.policyvalidators.AbstractSecurityPolicyValidator {
  public org.apache.cxf.ws.security.wss4j.policyvalidators.UsernameTokenPolicyValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/cxf/ws/security/wss4j/policyvalidators/AbstractSecurityPolicyValidator."<init>":()V
       4: return

  public boolean canValidatePolicy(org.apache.cxf.ws.policy.AssertionInfo);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/apache/cxf/ws/policy/AssertionInfo.getAssertion:()Lorg/apache/neethi/Assertion;
       4: ifnull        47
       7: getstatic     #3                  // Field org/apache/wss4j/policy/SP12Constants.USERNAME_TOKEN:Ljavax/xml/namespace/QName;
      10: aload_1
      11: invokevirtual #2                  // Method org/apache/cxf/ws/policy/AssertionInfo.getAssertion:()Lorg/apache/neethi/Assertion;
      14: invokeinterface #4,  1            // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      19: invokevirtual #5                  // Method javax/xml/namespace/QName.equals:(Ljava/lang/Object;)Z
      22: ifne          43
      25: getstatic     #6                  // Field org/apache/wss4j/policy/SP11Constants.USERNAME_TOKEN:Ljavax/xml/namespace/QName;
      28: aload_1
      29: invokevirtual #2                  // Method org/apache/cxf/ws/policy/AssertionInfo.getAssertion:()Lorg/apache/neethi/Assertion;
      32: invokeinterface #4,  1            // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      37: invokevirtual #5                  // Method javax/xml/namespace/QName.equals:(Ljava/lang/Object;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public void validatePolicies(org.apache.cxf.ws.security.wss4j.policyvalidators.PolicyValidatorParameters, java.util.Collection<org.apache.cxf.ws.policy.AssertionInfo>);
    Code:
       0: aload_2
       1: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          112
      16: aload_3
      17: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #10                 // class org/apache/cxf/ws/policy/AssertionInfo
      25: astore        4
      27: aload         4
      29: invokevirtual #2                  // Method org/apache/cxf/ws/policy/AssertionInfo.getAssertion:()Lorg/apache/neethi/Assertion;
      32: checkcast     #11                 // class org/apache/wss4j/policy/model/UsernameToken
      35: astore        5
      37: aload         4
      39: iconst_1
      40: invokevirtual #12                 // Method org/apache/cxf/ws/policy/AssertionInfo.setAsserted:(Z)V
      43: aload_0
      44: aload         5
      46: aload_1
      47: invokevirtual #13                 // Method org/apache/cxf/ws/security/wss4j/policyvalidators/PolicyValidatorParameters.getAssertionInfoMap:()Lorg/apache/cxf/ws/policy/AssertionInfoMap;
      50: invokespecial #14                 // Method assertToken:(Lorg/apache/wss4j/policy/model/UsernameToken;Lorg/apache/cxf/ws/policy/AssertionInfoMap;)V
      53: aload_0
      54: aload         5
      56: aload_1
      57: invokevirtual #15                 // Method org/apache/cxf/ws/security/wss4j/policyvalidators/PolicyValidatorParameters.getMessage:()Lorg/apache/cxf/message/Message;
      60: invokevirtual #16                 // Method isTokenRequired:(Lorg/apache/wss4j/policy/model/AbstractToken;Lorg/apache/cxf/message/Message;)Z
      63: ifne          69
      66: goto          7
      69: aload_1
      70: invokevirtual #17                 // Method org/apache/cxf/ws/security/wss4j/policyvalidators/PolicyValidatorParameters.getUsernameTokenResults:()Ljava/util/List;
      73: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      78: ifeq          91
      81: aload         4
      83: ldc           #19                 // String The received token does not match the token inclusion requirement
      85: invokevirtual #20                 // Method org/apache/cxf/ws/policy/AssertionInfo.setNotAsserted:(Ljava/lang/String;)V
      88: goto          7
      91: aload_0
      92: aload         5
      94: aload         4
      96: aload_1
      97: invokevirtual #17                 // Method org/apache/cxf/ws/security/wss4j/policyvalidators/PolicyValidatorParameters.getUsernameTokenResults:()Ljava/util/List;
     100: invokevirtual #21                 // Method checkTokens:(Lorg/apache/wss4j/policy/model/UsernameToken;Lorg/apache/cxf/ws/policy/AssertionInfo;Ljava/util/List;)Z
     103: ifne          109
     106: goto          7
     109: goto          7
     112: return

  private void assertToken(org.apache.wss4j.policy.model.UsernameToken, org.apache.cxf.ws.policy.AssertionInfoMap);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/wss4j/policy/model/UsernameToken.getName:()Ljavax/xml/namespace/QName;
       4: invokevirtual #23                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
       7: astore_3
       8: aload_1
       9: invokevirtual #24                 // Method org/apache/wss4j/policy/model/UsernameToken.isCreated:()Z
      12: ifeq          23
      15: aload_2
      16: getstatic     #25                 // Field org/apache/wss4j/policy/SP13Constants.CREATED:Ljavax/xml/namespace/QName;
      19: invokestatic  #26                 // Method org/apache/cxf/ws/security/policy/PolicyUtils.assertPolicy:(Lorg/apache/cxf/ws/policy/AssertionInfoMap;Ljavax/xml/namespace/QName;)Z
      22: pop
      23: aload_1
      24: invokevirtual #27                 // Method org/apache/wss4j/policy/model/UsernameToken.isNonce:()Z
      27: ifeq          38
      30: aload_2
      31: getstatic     #28                 // Field org/apache/wss4j/policy/SP13Constants.NONCE:Ljavax/xml/namespace/QName;
      34: invokestatic  #26                 // Method org/apache/cxf/ws/security/policy/PolicyUtils.assertPolicy:(Lorg/apache/cxf/ws/policy/AssertionInfoMap;Ljavax/xml/namespace/QName;)Z
      37: pop
      38: aload_1
      39: invokevirtual #29                 // Method org/apache/wss4j/policy/model/UsernameToken.getPasswordType:()Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      42: astore        4
      44: aload         4
      46: ifnull        67
      49: aload_2
      50: new           #30                 // class javax/xml/namespace/QName
      53: dup
      54: aload_3
      55: aload         4
      57: invokevirtual #31                 // Method org/apache/wss4j/policy/model/UsernameToken$PasswordType.name:()Ljava/lang/String;
      60: invokespecial #32                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      63: invokestatic  #26                 // Method org/apache/cxf/ws/security/policy/PolicyUtils.assertPolicy:(Lorg/apache/cxf/ws/policy/AssertionInfoMap;Ljavax/xml/namespace/QName;)Z
      66: pop
      67: aload_1
      68: invokevirtual #33                 // Method org/apache/wss4j/policy/model/UsernameToken.getUsernameTokenType:()Lorg/apache/wss4j/policy/model/UsernameToken$UsernameTokenType;
      71: astore        5
      73: aload         5
      75: ifnull        96
      78: aload_2
      79: new           #30                 // class javax/xml/namespace/QName
      82: dup
      83: aload_3
      84: aload         5
      86: invokevirtual #34                 // Method org/apache/wss4j/policy/model/UsernameToken$UsernameTokenType.name:()Ljava/lang/String;
      89: invokespecial #32                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      92: invokestatic  #26                 // Method org/apache/cxf/ws/security/policy/PolicyUtils.assertPolicy:(Lorg/apache/cxf/ws/policy/AssertionInfoMap;Ljavax/xml/namespace/QName;)Z
      95: pop
      96: return

  public boolean checkTokens(org.apache.wss4j.policy.model.UsernameToken, org.apache.cxf.ws.policy.AssertionInfo, java.util.List<org.apache.wss4j.dom.engine.WSSecurityEngineResult>);
    Code:
       0: aload_3
       1: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore        4
       8: aload         4
      10: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          211
      18: aload         4
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/apache/wss4j/dom/engine/WSSecurityEngineResult
      28: astore        5
      30: aload         5
      32: ldc           #37                 // String username-token
      34: invokevirtual #38                 // Method org/apache/wss4j/dom/engine/WSSecurityEngineResult.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #39                 // class org/apache/wss4j/dom/message/token/UsernameToken
      40: astore        6
      42: aload_1
      43: invokevirtual #29                 // Method org/apache/wss4j/policy/model/UsernameToken.getPasswordType:()Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      46: astore        7
      48: aload         7
      50: getstatic     #40                 // Field org/apache/wss4j/policy/model/UsernameToken$PasswordType.HashPassword:Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      53: if_acmpne     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: istore        8
      63: aload         7
      65: getstatic     #41                 // Field org/apache/wss4j/policy/model/UsernameToken$PasswordType.NoPassword:Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      68: if_acmpne     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: istore        9
      78: iload         8
      80: aload         6
      82: invokevirtual #42                 // Method org/apache/wss4j/dom/message/token/UsernameToken.isHashed:()Z
      85: if_icmpeq     96
      88: aload_2
      89: ldc           #43                 // String Password hashing policy not enforced
      91: invokevirtual #20                 // Method org/apache/cxf/ws/policy/AssertionInfo.setNotAsserted:(Ljava/lang/String;)V
      94: iconst_0
      95: ireturn
      96: iload         9
      98: ifeq          117
     101: aload         6
     103: invokevirtual #44                 // Method org/apache/wss4j/dom/message/token/UsernameToken.getPassword:()Ljava/lang/String;
     106: ifnull        117
     109: aload_2
     110: ldc           #45                 // String Username Token NoPassword policy not enforced
     112: invokevirtual #20                 // Method org/apache/cxf/ws/policy/AssertionInfo.setNotAsserted:(Ljava/lang/String;)V
     115: iconst_0
     116: ireturn
     117: iload         9
     119: ifne          146
     122: aload         6
     124: invokevirtual #44                 // Method org/apache/wss4j/dom/message/token/UsernameToken.getPassword:()Ljava/lang/String;
     127: ifnonnull     146
     130: aload_0
     131: aload_1
     132: invokespecial #46                 // Method isNonEndorsingSupportingToken:(Lorg/apache/wss4j/policy/model/UsernameToken;)Z
     135: ifeq          146
     138: aload_2
     139: ldc           #47                 // String Username Token No Password supplied
     141: invokevirtual #20                 // Method org/apache/cxf/ws/policy/AssertionInfo.setNotAsserted:(Ljava/lang/String;)V
     144: iconst_0
     145: ireturn
     146: aload_1
     147: invokevirtual #24                 // Method org/apache/wss4j/policy/model/UsernameToken.isCreated:()Z
     150: ifeq          177
     153: aload         6
     155: invokevirtual #48                 // Method org/apache/wss4j/dom/message/token/UsernameToken.getCreated:()Ljava/lang/String;
     158: ifnull        169
     161: aload         6
     163: invokevirtual #42                 // Method org/apache/wss4j/dom/message/token/UsernameToken.isHashed:()Z
     166: ifeq          177
     169: aload_2
     170: ldc           #49                 // String Username Token Created policy not enforced
     172: invokevirtual #20                 // Method org/apache/cxf/ws/policy/AssertionInfo.setNotAsserted:(Ljava/lang/String;)V
     175: iconst_0
     176: ireturn
     177: aload_1
     178: invokevirtual #27                 // Method org/apache/wss4j/policy/model/UsernameToken.isNonce:()Z
     181: ifeq          208
     184: aload         6
     186: invokevirtual #50                 // Method org/apache/wss4j/dom/message/token/UsernameToken.getNonce:()Ljava/lang/String;
     189: ifnull        200
     192: aload         6
     194: invokevirtual #42                 // Method org/apache/wss4j/dom/message/token/UsernameToken.isHashed:()Z
     197: ifeq          208
     200: aload_2
     201: ldc           #51                 // String Username Token Nonce policy not enforced
     203: invokevirtual #20                 // Method org/apache/cxf/ws/policy/AssertionInfo.setNotAsserted:(Ljava/lang/String;)V
     206: iconst_0
     207: ireturn
     208: goto          8
     211: iconst_1
     212: ireturn

  private boolean isNonEndorsingSupportingToken(org.apache.wss4j.policy.model.UsernameToken);
    Code:
       0: aload_1
       1: invokevirtual #52                 // Method org/apache/wss4j/policy/model/UsernameToken.getParentAssertion:()Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;
       4: astore_2
       5: aload_2
       6: instanceof    #53                 // class org/apache/wss4j/policy/model/SupportingTokens
       9: ifeq          68
      12: aload_2
      13: checkcast     #53                 // class org/apache/wss4j/policy/model/SupportingTokens
      16: astore_3
      17: aload_3
      18: invokevirtual #54                 // Method org/apache/wss4j/policy/model/SupportingTokens.getName:()Ljavax/xml/namespace/QName;
      21: invokevirtual #55                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      24: astore        4
      26: aload         4
      28: ldc           #56                 // String SupportingTokens
      30: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          66
      36: aload         4
      38: ldc           #58                 // String SignedSupportingTokens
      40: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifne          66
      46: aload         4
      48: ldc           #59                 // String EncryptedSupportingTokens
      50: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifne          66
      56: aload         4
      58: ldc           #60                 // String SignedEncryptedSupportingTokens
      60: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          68
      66: iconst_1
      67: ireturn
      68: iconst_0
      69: ireturn
}
