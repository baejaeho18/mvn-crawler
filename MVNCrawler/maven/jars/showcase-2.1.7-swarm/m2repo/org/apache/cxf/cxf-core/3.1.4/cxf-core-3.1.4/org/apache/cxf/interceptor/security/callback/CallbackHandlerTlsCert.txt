Compiled from "CallbackHandlerTlsCert.java"
public class org.apache.cxf.interceptor.security.callback.CallbackHandlerTlsCert implements org.apache.cxf.interceptor.security.callback.CallbackHandlerProvider {
  private org.apache.cxf.interceptor.security.callback.CertificateToNameMapper certMapper;

  private org.apache.cxf.interceptor.security.callback.NameToPasswordMapper nameToPasswordMapper;

  private java.lang.String fixedPassword;

  public org.apache.cxf.interceptor.security.callback.CallbackHandlerTlsCert();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/apache/cxf/interceptor/security/callback/CallbackHandlerTlsCert$1
       8: dup
       9: aload_0
      10: invokespecial #4                  // Method org/apache/cxf/interceptor/security/callback/CallbackHandlerTlsCert$1."<init>":(Lorg/apache/cxf/interceptor/security/callback/CallbackHandlerTlsCert;)V
      13: putfield      #5                  // Field certMapper:Lorg/apache/cxf/interceptor/security/callback/CertificateToNameMapper;
      16: aload_0
      17: new           #6                  // class org/apache/cxf/interceptor/security/callback/CallbackHandlerTlsCert$2
      20: dup
      21: aload_0
      22: invokespecial #7                  // Method org/apache/cxf/interceptor/security/callback/CallbackHandlerTlsCert$2."<init>":(Lorg/apache/cxf/interceptor/security/callback/CallbackHandlerTlsCert;)V
      25: putfield      #8                  // Field nameToPasswordMapper:Lorg/apache/cxf/interceptor/security/callback/NameToPasswordMapper;
      28: return

  public javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message);
    Code:
       0: aload_1
       1: ldc_w         #9                  // class org/apache/cxf/security/transport/TLSSessionInfo
       4: invokeinterface #10,  2           // InterfaceMethod org/apache/cxf/message/Message.get:(Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #9                  // class org/apache/cxf/security/transport/TLSSessionInfo
      12: astore_2
      13: aload_2
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_0
      20: aload_1
      21: invokespecial #11                 // Method getCertificate:(Lorg/apache/cxf/message/Message;)Ljava/security/cert/Certificate;
      24: astore_3
      25: aload_0
      26: getfield      #5                  // Field certMapper:Lorg/apache/cxf/interceptor/security/callback/CertificateToNameMapper;
      29: aload_3
      30: invokeinterface #12,  2           // InterfaceMethod org/apache/cxf/interceptor/security/callback/CertificateToNameMapper.getUserName:(Ljava/security/cert/Certificate;)Ljava/lang/String;
      35: astore        4
      37: aload_0
      38: getfield      #8                  // Field nameToPasswordMapper:Lorg/apache/cxf/interceptor/security/callback/NameToPasswordMapper;
      41: aload         4
      43: invokeinterface #13,  2           // InterfaceMethod org/apache/cxf/interceptor/security/callback/NameToPasswordMapper.getPassword:(Ljava/lang/String;)Ljava/lang/String;
      48: astore        5
      50: new           #14                 // class org/apache/cxf/interceptor/security/NamePasswordCallbackHandler
      53: dup
      54: aload         4
      56: aload         5
      58: invokespecial #15                 // Method org/apache/cxf/interceptor/security/NamePasswordCallbackHandler."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      61: areturn

  private java.security.cert.Certificate getCertificate(org.apache.cxf.message.Message);
    Code:
       0: aload_1
       1: ldc_w         #9                  // class org/apache/cxf/security/transport/TLSSessionInfo
       4: invokeinterface #10,  2           // InterfaceMethod org/apache/cxf/message/Message.get:(Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #9                  // class org/apache/cxf/security/transport/TLSSessionInfo
      12: astore_2
      13: aload_2
      14: ifnonnull     27
      17: new           #16                 // class java/lang/SecurityException
      20: dup
      21: ldc           #17                 // String Not TLS connection
      23: invokespecial #18                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_2
      28: invokevirtual #19                 // Method org/apache/cxf/security/transport/TLSSessionInfo.getPeerCertificates:()[Ljava/security/cert/Certificate;
      31: astore_3
      32: aload_3
      33: ifnull        41
      36: aload_3
      37: arraylength
      38: ifne          51
      41: new           #16                 // class java/lang/SecurityException
      44: dup
      45: ldc           #20                 // String No certificate found
      47: invokespecial #18                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_3
      52: iconst_0
      53: aaload
      54: areturn

  public void setCertMapper(org.apache.cxf.interceptor.security.callback.CertificateToNameMapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field certMapper:Lorg/apache/cxf/interceptor/security/callback/CertificateToNameMapper;
       5: return

  public void setFixedPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field fixedPassword:Ljava/lang/String;
       5: return

  public void setNameToPasswordMapper(org.apache.cxf.interceptor.security.callback.NameToPasswordMapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field nameToPasswordMapper:Lorg/apache/cxf/interceptor/security/callback/NameToPasswordMapper;
       5: return

  static java.lang.String access$000(org.apache.cxf.interceptor.security.callback.CallbackHandlerTlsCert);
    Code:
       0: aload_0
       1: getfield      #1                  // Field fixedPassword:Ljava/lang/String;
       4: areturn
}
