Compiled from "AegisType.java"
public abstract class org.apache.cxf.aegis.type.AegisType {
  protected java.lang.reflect.Type typeClass;

  private javax.xml.namespace.QName schemaType;

  private org.apache.cxf.aegis.type.TypeMapping typeMapping;

  private boolean abstrct;

  private boolean nillable;

  private boolean writeOuter;

  private boolean flatArray;

  public org.apache.cxf.aegis.type.AegisType();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field abstrct:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field nillable:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field writeOuter:Z
      19: return

  public abstract java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader, org.apache.cxf.aegis.Context) throws org.apache.cxf.aegis.DatabindingException;

  public abstract void writeObject(java.lang.Object, org.apache.cxf.aegis.xml.MessageWriter, org.apache.cxf.aegis.Context) throws org.apache.cxf.aegis.DatabindingException;

  public void writeSchema(org.apache.ws.commons.schema.XmlSchema);
    Code:
       0: return

  public void addToSchemaElement(org.apache.ws.commons.schema.XmlSchemaElement);
    Code:
       0: return

  public org.apache.cxf.aegis.type.TypeMapping getTypeMapping();
    Code:
       0: aload_0
       1: getfield      #5                  // Field typeMapping:Lorg/apache/cxf/aegis/type/TypeMapping;
       4: areturn

  public void setTypeMapping(org.apache.cxf.aegis.type.TypeMapping);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field typeMapping:Lorg/apache/cxf/aegis/type/TypeMapping;
       5: return

  public java.lang.Class<?> getTypeClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field typeClass:Ljava/lang/reflect/Type;
       4: invokestatic  #7                  // Method org/apache/cxf/aegis/type/TypeUtil.getTypeRelatedClass:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       7: areturn

  public java.lang.reflect.Type getType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field typeClass:Ljava/lang/reflect/Type;
       4: areturn

  public void setTypeClass(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field typeClass:Ljava/lang/reflect/Type;
       5: aload_1
       6: instanceof    #8                  // class java/lang/Class
       9: ifeq          29
      12: aload_1
      13: checkcast     #8                  // class java/lang/Class
      16: astore_2
      17: aload_2
      18: invokevirtual #9                  // Method java/lang/Class.isPrimitive:()Z
      21: ifeq          29
      24: aload_0
      25: iconst_0
      26: invokevirtual #10                 // Method setNillable:(Z)V
      29: return

  public boolean isComplex();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAbstract();
    Code:
       0: aload_0
       1: getfield      #2                  // Field abstrct:Z
       4: ireturn

  public void setAbstract(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field abstrct:Z
       5: return

  public boolean isNillable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nillable:Z
       4: ireturn

  public void setNillable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field nillable:Z
       5: return

  public java.util.Set<org.apache.cxf.aegis.type.AegisType> getDependencies();
    Code:
       0: aconst_null
       1: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #11                 // class org/apache/cxf/aegis/type/AegisType
      11: ifeq          49
      14: aload_1
      15: checkcast     #11                 // class org/apache/cxf/aegis/type/AegisType
      18: astore_2
      19: aload_2
      20: invokevirtual #12                 // Method getSchemaType:()Ljavax/xml/namespace/QName;
      23: aload_0
      24: invokevirtual #12                 // Method getSchemaType:()Ljavax/xml/namespace/QName;
      27: invokevirtual #13                 // Method javax/xml/namespace/QName.equals:(Ljava/lang/Object;)Z
      30: ifeq          49
      33: aload_2
      34: invokevirtual #14                 // Method getTypeClass:()Ljava/lang/Class;
      37: aload_0
      38: invokevirtual #14                 // Method getTypeClass:()Ljava/lang/Class;
      41: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          49
      47: iconst_1
      48: ireturn
      49: iconst_0
      50: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #14                 // Method getTypeClass:()Ljava/lang/Class;
       6: ifnull        19
       9: iload_1
      10: aload_0
      11: invokevirtual #14                 // Method getTypeClass:()Ljava/lang/Class;
      14: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      17: ixor
      18: istore_1
      19: aload_0
      20: invokevirtual #12                 // Method getSchemaType:()Ljavax/xml/namespace/QName;
      23: ifnull        36
      26: iload_1
      27: aload_0
      28: invokevirtual #12                 // Method getSchemaType:()Ljavax/xml/namespace/QName;
      31: invokevirtual #17                 // Method javax/xml/namespace/QName.hashCode:()I
      34: ixor
      35: istore_1
      36: iload_1
      37: ireturn

  public javax.xml.namespace.QName getSchemaType();
    Code:
       0: aload_0
       1: getfield      #18                 // Field schemaType:Ljavax/xml/namespace/QName;
       4: areturn

  public void setSchemaType(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field schemaType:Ljavax/xml/namespace/QName;
       5: return

  public boolean isWriteOuter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field writeOuter:Z
       4: ireturn

  public void setWriteOuter(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field writeOuter:Z
       5: return

  public boolean usesXmime();
    Code:
       0: iconst_0
       1: ireturn

  public boolean usesUtilityTypes();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasMinOccurs();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasMaxOccurs();
    Code:
       0: iconst_0
       1: ireturn

  public long getMinOccurs();
    Code:
       0: lconst_0
       1: lreturn

  public long getMaxOccurs();
    Code:
       0: lconst_0
       1: lreturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: astore_1
      15: aload_1
      16: ldc           #23                 // String [class=
      18: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: invokevirtual #14                 // Method getTypeClass:()Ljava/lang/Class;
      26: astore_2
      27: aload_2
      28: ifnull        43
      31: aload_1
      32: aload_2
      33: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: goto          50
      43: aload_1
      44: ldc           #25                 // String <generic or null>
      46: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: aload_1
      51: ldc           #26                 // String ,\nQName=
      53: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_0
      58: invokevirtual #12                 // Method getSchemaType:()Ljavax/xml/namespace/QName;
      61: astore_3
      62: aload_1
      63: aload_3
      64: ifnonnull     72
      67: ldc           #27                 // String <null>
      69: goto          76
      72: aload_3
      73: invokevirtual #28                 // Method javax/xml/namespace/QName.toString:()Ljava/lang/String;
      76: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_1
      81: ldc           #29                 // String ]
      83: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: pop
      87: aload_1
      88: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: areturn

  public boolean isFlatArray();
    Code:
       0: aload_0
       1: getfield      #31                 // Field flatArray:Z
       4: ireturn

  public void setFlatArray(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field flatArray:Z
       5: return
}
