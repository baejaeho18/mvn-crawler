Compiled from "ClassCollector.java"
public class org.apache.cxf.tools.util.ClassCollector {
  private java.util.Map<java.lang.String, java.lang.String> seiClassNames;

  private java.util.Map<java.lang.String, java.lang.String> typesClassNames;

  private java.util.Map<java.lang.String, java.lang.String> exceptionClassNames;

  private java.util.Map<java.lang.String, java.lang.String> serviceClassNames;

  private java.util.Map<java.lang.String, java.lang.String> implClassNames;

  private final java.util.Map<java.lang.String, java.lang.String> clientClassNames;

  private final java.util.Map<java.lang.String, java.lang.String> serverClassNames;

  private final java.util.Map<java.lang.String, java.lang.String> reservedClassNames;

  private final java.util.Set<java.lang.String> typesPackages;

  public org.apache.cxf.tools.util.ClassCollector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: getstatic     #3                  // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      12: invokespecial #4                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      15: putfield      #5                  // Field seiClassNames:Ljava/util/Map;
      18: aload_0
      19: new           #6                  // class java/util/HashMap
      22: dup
      23: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      26: putfield      #8                  // Field typesClassNames:Ljava/util/Map;
      29: aload_0
      30: new           #6                  // class java/util/HashMap
      33: dup
      34: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      37: putfield      #9                  // Field exceptionClassNames:Ljava/util/Map;
      40: aload_0
      41: new           #6                  // class java/util/HashMap
      44: dup
      45: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      48: putfield      #10                 // Field serviceClassNames:Ljava/util/Map;
      51: aload_0
      52: new           #6                  // class java/util/HashMap
      55: dup
      56: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      59: putfield      #11                 // Field implClassNames:Ljava/util/Map;
      62: aload_0
      63: new           #6                  // class java/util/HashMap
      66: dup
      67: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      70: putfield      #12                 // Field clientClassNames:Ljava/util/Map;
      73: aload_0
      74: new           #6                  // class java/util/HashMap
      77: dup
      78: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      81: putfield      #13                 // Field serverClassNames:Ljava/util/Map;
      84: aload_0
      85: new           #6                  // class java/util/HashMap
      88: dup
      89: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      92: putfield      #14                 // Field reservedClassNames:Ljava/util/Map;
      95: aload_0
      96: new           #15                 // class java/util/HashSet
      99: dup
     100: invokespecial #16                 // Method java/util/HashSet."<init>":()V
     103: putfield      #17                 // Field typesPackages:Ljava/util/Set;
     106: return

  public void reserveClass(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: bipush        46
       5: invokevirtual #18                 // Method java/lang/String.lastIndexOf:(I)I
       8: istore_3
       9: ldc           #19                 // String
      11: astore        4
      13: iload_3
      14: iconst_m1
      15: if_icmpeq     34
      18: aload_2
      19: iconst_0
      20: iload_3
      21: invokevirtual #20                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      24: astore        4
      26: aload_2
      27: iload_3
      28: iconst_1
      29: iadd
      30: invokevirtual #21                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      33: astore_2
      34: aload_0
      35: getfield      #14                 // Field reservedClassNames:Ljava/util/Map;
      38: aload_0
      39: aload         4
      41: aload_2
      42: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      45: aload_1
      46: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload_0
      53: aload         4
      55: aload_2
      56: aload_1
      57: invokevirtual #24                 // Method addSeiClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      60: aload_0
      61: aload         4
      63: aload_2
      64: aload_1
      65: invokevirtual #25                 // Method addTypesClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      68: aload_0
      69: aload         4
      71: aload_2
      72: aload_1
      73: invokevirtual #26                 // Method addServerClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      76: aload_0
      77: aload         4
      79: aload_2
      80: aload_1
      81: invokevirtual #27                 // Method addImplClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      84: aload_0
      85: aload         4
      87: aload_2
      88: aload_1
      89: invokevirtual #28                 // Method addClientClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      92: aload_0
      93: aload         4
      95: aload_2
      96: aload_1
      97: invokevirtual #29                 // Method addServiceClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     100: aload_0
     101: aload         4
     103: aload_2
     104: aload_1
     105: invokevirtual #30                 // Method addExceptionClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     108: return

  public boolean isReserved(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field reservedClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containSeiClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field seiClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containTypesClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field typesClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containExceptionClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field exceptionClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containServiceClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field serviceClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containClientClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field clientClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containServerClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field serverClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containImplClass(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field implClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public void addSeiClassName(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field seiClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload_3
      11: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void addTypesClassName(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field typesClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload_3
      11: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void addServerClassName(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field serverClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload_3
      11: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void addImplClassName(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field implClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload_3
      11: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void addClientClassName(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field clientClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload_3
      11: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void addServiceClassName(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field serviceClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload_3
      11: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void addExceptionClassName(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field exceptionClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: aload_3
      11: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public java.lang.String getTypesFullClassName(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field typesClassNames:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #33                 // class java/lang/String
      18: areturn

  public boolean containsTypeIgnoreCase(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #22                 // Method key:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_0
       8: getfield      #8                  // Field typesClassNames:Ljava/util/Map;
      11: aload_3
      12: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #8                  // Field typesClassNames:Ljava/util/Map;
      26: invokeinterface #34,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      31: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          74
      48: aload         4
      50: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #33                 // class java/lang/String
      58: astore        5
      60: aload_3
      61: aload         5
      63: invokevirtual #38                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      66: ifeq          71
      69: iconst_1
      70: ireturn
      71: goto          38
      74: iconst_0
      75: ireturn

  private java.lang.String key(java.lang.String, java.lang.String);
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #42                 // String #
      13: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  public java.util.Set<java.lang.String> getTypesPackages();
    Code:
       0: aload_0
       1: getfield      #17                 // Field typesPackages:Ljava/util/Set;
       4: areturn

  public java.util.Collection<java.lang.String> getGeneratedFileInfo();
    Code:
       0: new           #44                 // class java/util/TreeSet
       3: dup
       4: invokespecial #45                 // Method java/util/TreeSet."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #5                  // Field seiClassNames:Ljava/util/Map;
      13: invokeinterface #46,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      18: invokeinterface #47,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field typesClassNames:Ljava/util/Map;
      29: invokeinterface #46,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      34: invokeinterface #47,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #9                  // Field exceptionClassNames:Ljava/util/Map;
      45: invokeinterface #46,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      50: invokeinterface #47,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      55: pop
      56: aload_1
      57: aload_0
      58: getfield      #10                 // Field serviceClassNames:Ljava/util/Map;
      61: invokeinterface #46,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      66: invokeinterface #47,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      71: pop
      72: aload_1
      73: aload_0
      74: getfield      #11                 // Field implClassNames:Ljava/util/Map;
      77: invokeinterface #46,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      82: invokeinterface #47,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      87: pop
      88: aload_1
      89: aload_0
      90: getfield      #12                 // Field clientClassNames:Ljava/util/Map;
      93: invokeinterface #46,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      98: invokeinterface #47,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     103: pop
     104: aload_1
     105: areturn

  public java.util.Map<java.lang.String, java.lang.String> getSeiClassNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field seiClassNames:Ljava/util/Map;
       4: areturn

  public void setSeiClassNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field seiClassNames:Ljava/util/Map;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getTypesClassNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field typesClassNames:Ljava/util/Map;
       4: areturn

  public void setTypesClassNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field typesClassNames:Ljava/util/Map;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getExceptionClassNames();
    Code:
       0: aload_0
       1: getfield      #9                  // Field exceptionClassNames:Ljava/util/Map;
       4: areturn

  public void setExceptionClassNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field exceptionClassNames:Ljava/util/Map;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getServiceClassNames();
    Code:
       0: aload_0
       1: getfield      #10                 // Field serviceClassNames:Ljava/util/Map;
       4: areturn

  public void setServiceClassNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field serviceClassNames:Ljava/util/Map;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getImplClassNames();
    Code:
       0: aload_0
       1: getfield      #11                 // Field implClassNames:Ljava/util/Map;
       4: areturn

  public void setImplClassNames(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field implClassNames:Ljava/util/Map;
       5: return
}
