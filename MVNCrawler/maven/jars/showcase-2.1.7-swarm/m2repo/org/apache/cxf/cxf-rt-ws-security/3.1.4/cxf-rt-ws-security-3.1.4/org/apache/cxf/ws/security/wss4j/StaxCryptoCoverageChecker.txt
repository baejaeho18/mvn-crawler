Compiled from "StaxCryptoCoverageChecker.java"
public class org.apache.cxf.ws.security.wss4j.StaxCryptoCoverageChecker extends org.apache.cxf.phase.AbstractPhaseInterceptor<org.apache.cxf.binding.soap.SoapMessage> {
  public static final java.lang.String SOAP_NS;

  public static final java.lang.String SOAP12_NS;

  public static final java.lang.String WSU_NS;

  public static final java.lang.String WSSE_NS;

  public static final java.lang.String WSA_NS;

  private boolean signBody;

  private boolean signTimestamp;

  private boolean encryptBody;

  private boolean signAddressingHeaders;

  private boolean signUsernameToken;

  private boolean encryptUsernameToken;

  public org.apache.cxf.ws.security.wss4j.StaxCryptoCoverageChecker();
    Code:
       0: aload_0
       1: ldc           #1                  // String pre-protocol
       3: invokespecial #2                  // Method org/apache/cxf/phase/AbstractPhaseInterceptor."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: iconst_1
       8: invokevirtual #3                  // Method setSignBody:(Z)V
      11: aload_0
      12: iconst_1
      13: invokevirtual #4                  // Method setSignTimestamp:(Z)V
      16: aload_0
      17: iconst_1
      18: invokevirtual #5                  // Method setSignAddressingHeaders:(Z)V
      21: aload_0
      22: iconst_1
      23: invokevirtual #6                  // Method setEncryptUsernameToken:(Z)V
      26: return

  public void handleMessage(org.apache.cxf.binding.soap.SoapMessage) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_1
       1: new           #7                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       8: ldc_w         #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      11: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #12                 // String .in
      19: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokevirtual #14                 // Method org/apache/cxf/binding/soap/SoapMessage.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #15                 // class java/util/List
      31: astore_2
      32: new           #16                 // class java/util/ArrayList
      35: dup
      36: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      39: astore_3
      40: aload_2
      41: ifnull        118
      44: aload_3
      45: aload_0
      46: getstatic     #18                 // Field org/apache/wss4j/stax/securityEvent/WSSecurityEventConstants.SignedPart:Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
      49: aload_2
      50: invokespecial #19                 // Method getEventFromResults:(Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;Ljava/util/List;)Ljava/util/List;
      53: invokeinterface #20,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      58: pop
      59: aload_3
      60: aload_0
      61: getstatic     #21                 // Field org/apache/wss4j/stax/securityEvent/WSSecurityEventConstants.SignedElement:Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
      64: aload_2
      65: invokespecial #19                 // Method getEventFromResults:(Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;Ljava/util/List;)Ljava/util/List;
      68: invokeinterface #20,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      73: pop
      74: aload_0
      75: getfield      #22                 // Field encryptBody:Z
      78: ifne          88
      81: aload_0
      82: getfield      #23                 // Field encryptUsernameToken:Z
      85: ifeq          118
      88: aload_3
      89: aload_0
      90: getstatic     #24                 // Field org/apache/wss4j/stax/securityEvent/WSSecurityEventConstants.EncryptedPart:Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
      93: aload_2
      94: invokespecial #19                 // Method getEventFromResults:(Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;Ljava/util/List;)Ljava/util/List;
      97: invokeinterface #20,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     102: pop
     103: aload_3
     104: aload_0
     105: getstatic     #25                 // Field org/apache/wss4j/stax/securityEvent/WSSecurityEventConstants.EncryptedElement:Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
     108: aload_2
     109: invokespecial #19                 // Method getEventFromResults:(Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;Ljava/util/List;)Ljava/util/List;
     112: invokeinterface #20,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     117: pop
     118: aload_0
     119: aload_3
     120: invokespecial #26                 // Method checkSignedBody:(Ljava/util/List;)V
     123: aload_0
     124: aload_3
     125: invokespecial #27                 // Method checkEncryptedBody:(Ljava/util/List;)V
     128: aload_0
     129: getfield      #28                 // Field signTimestamp:Z
     132: ifeq          160
     135: aload_0
     136: getstatic     #29                 // Field org/apache/wss4j/stax/securityEvent/WSSecurityEventConstants.Timestamp:Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
     139: aload_2
     140: invokespecial #19                 // Method getEventFromResults:(Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;Ljava/util/List;)Ljava/util/List;
     143: astore        4
     145: aload         4
     147: invokeinterface #30,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     152: ifne          160
     155: aload_0
     156: aload_3
     157: invokespecial #31                 // Method checkSignedTimestamp:(Ljava/util/List;)V
     160: aload_0
     161: getfield      #32                 // Field signAddressingHeaders:Z
     164: ifeq          185
     167: aload_1
     168: ldc           #33                 // String javax.xml.ws.addressing.context.inbound
     170: invokevirtual #14                 // Method org/apache/cxf/binding/soap/SoapMessage.get:(Ljava/lang/Object;)Ljava/lang/Object;
     173: checkcast     #34                 // class org/apache/cxf/ws/addressing/AddressingProperties
     176: astore        4
     178: aload_0
     179: aload_3
     180: aload         4
     182: invokespecial #35                 // Method checkSignedAddressing:(Ljava/util/List;Lorg/apache/cxf/ws/addressing/AddressingProperties;)V
     185: aload_0
     186: getfield      #36                 // Field signUsernameToken:Z
     189: ifne          199
     192: aload_0
     193: getfield      #23                 // Field encryptUsernameToken:Z
     196: ifeq          243
     199: aload_0
     200: getstatic     #37                 // Field org/apache/wss4j/stax/securityEvent/WSSecurityEventConstants.UsernameToken:Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
     203: aload_2
     204: invokespecial #19                 // Method getEventFromResults:(Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;Ljava/util/List;)Ljava/util/List;
     207: astore        4
     209: aload         4
     211: invokeinterface #30,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     216: ifne          243
     219: aload_0
     220: getfield      #36                 // Field signUsernameToken:Z
     223: ifeq          231
     226: aload_0
     227: aload_3
     228: invokespecial #38                 // Method checkSignedUsernameToken:(Ljava/util/List;)V
     231: aload_0
     232: getfield      #23                 // Field encryptUsernameToken:Z
     235: ifeq          243
     238: aload_0
     239: aload_3
     240: invokespecial #39                 // Method checkEncryptedUsernameToken:(Ljava/util/List;)V
     243: goto          259
     246: astore        4
     248: aload_0
     249: aload_1
     250: invokevirtual #41                 // Method org/apache/cxf/binding/soap/SoapMessage.getVersion:()Lorg/apache/cxf/binding/soap/SoapVersion;
     253: aload         4
     255: invokespecial #42                 // Method createSoapFault:(Lorg/apache/cxf/binding/soap/SoapVersion;Lorg/apache/wss4j/common/ext/WSSecurityException;)Lorg/apache/cxf/binding/soap/SoapFault;
     258: athrow
     259: return
    Exception table:
       from    to  target type
         118   243   246   Class org/apache/wss4j/common/ext/WSSecurityException

  private java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent> getEventFromResults(org.apache.xml.security.stax.securityEvent.SecurityEventConstants$Event, java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent>);
    Code:
       0: new           #16                 // class java/util/ArrayList
       3: dup
       4: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          59
      26: aload         4
      28: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      36: astore        5
      38: aload_1
      39: aload         5
      41: invokevirtual #46                 // Method org/apache/xml/security/stax/securityEvent/SecurityEvent.getSecurityEventType:()Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
      44: if_acmpne     56
      47: aload_3
      48: aload         5
      50: invokeinterface #47,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: goto          16
      59: aload_3
      60: areturn

  private void checkSignedBody(java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent>) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field signBody:Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          79
      26: aload_3
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      35: astore        4
      37: aload         4
      39: checkcast     #49                 // class org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent
      42: astore        5
      44: aload         5
      46: invokevirtual #50                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.isSigned:()Z
      49: ifne          55
      52: goto          17
      55: aload         5
      57: invokevirtual #51                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.getElementPath:()Ljava/util/List;
      60: astore        6
      62: aload_0
      63: aload         6
      65: invokespecial #52                 // Method isBody:(Ljava/util/List;)Z
      68: ifeq          76
      71: iconst_1
      72: istore_2
      73: goto          79
      76: goto          17
      79: iload_2
      80: ifne          103
      83: new           #40                 // class org/apache/wss4j/common/ext/WSSecurityException
      86: dup
      87: getstatic     #53                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
      90: new           #54                 // class java/lang/Exception
      93: dup
      94: ldc           #55                 // String The SOAP Body is not signed
      96: invokespecial #56                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      99: invokespecial #57                 // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;)V
     102: athrow
     103: return

  private void checkEncryptedBody(java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent>) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field encryptBody:Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          79
      26: aload_3
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      35: astore        4
      37: aload         4
      39: checkcast     #49                 // class org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent
      42: astore        5
      44: aload         5
      46: invokevirtual #58                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.isEncrypted:()Z
      49: ifne          55
      52: goto          17
      55: aload         5
      57: invokevirtual #51                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.getElementPath:()Ljava/util/List;
      60: astore        6
      62: aload_0
      63: aload         6
      65: invokespecial #52                 // Method isBody:(Ljava/util/List;)Z
      68: ifeq          76
      71: iconst_1
      72: istore_2
      73: goto          79
      76: goto          17
      79: iload_2
      80: ifne          103
      83: new           #40                 // class org/apache/wss4j/common/ext/WSSecurityException
      86: dup
      87: getstatic     #53                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
      90: new           #54                 // class java/lang/Exception
      93: dup
      94: ldc           #59                 // String The SOAP Body is not encrypted
      96: invokespecial #56                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      99: invokespecial #57                 // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;)V
     102: athrow
     103: return

  private void checkSignedTimestamp(java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent>) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field signTimestamp:Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          79
      26: aload_3
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      35: astore        4
      37: aload         4
      39: checkcast     #49                 // class org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent
      42: astore        5
      44: aload         5
      46: invokevirtual #50                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.isSigned:()Z
      49: ifne          55
      52: goto          17
      55: aload         5
      57: invokevirtual #51                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.getElementPath:()Ljava/util/List;
      60: astore        6
      62: aload_0
      63: aload         6
      65: invokespecial #60                 // Method isTimestamp:(Ljava/util/List;)Z
      68: ifeq          76
      71: iconst_1
      72: istore_2
      73: goto          79
      76: goto          17
      79: iload_2
      80: ifne          103
      83: new           #40                 // class org/apache/wss4j/common/ext/WSSecurityException
      86: dup
      87: getstatic     #53                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
      90: new           #54                 // class java/lang/Exception
      93: dup
      94: ldc           #61                 // String The Timestamp is not signed
      96: invokespecial #56                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      99: invokespecial #57                 // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;)V
     102: athrow
     103: return

  private void checkSignedAddressing(java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent>, org.apache.cxf.ws.addressing.AddressingProperties) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field signAddressingHeaders:Z
       4: ifeq          25
       7: aload_2
       8: ifnull        25
      11: aload_2
      12: invokevirtual #62                 // Method org/apache/cxf/ws/addressing/AddressingProperties.getReplyTo:()Lorg/apache/cxf/ws/addressing/EndpointReferenceType;
      15: ifnonnull     26
      18: aload_2
      19: invokevirtual #63                 // Method org/apache/cxf/ws/addressing/AddressingProperties.getFaultTo:()Lorg/apache/cxf/ws/addressing/EndpointReferenceType;
      22: ifnonnull     26
      25: return
      26: iconst_0
      27: istore_3
      28: iconst_0
      29: istore        4
      31: aload_1
      32: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore        5
      39: aload         5
      41: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          124
      49: aload         5
      51: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      59: astore        6
      61: aload         6
      63: checkcast     #49                 // class org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent
      66: astore        7
      68: aload         7
      70: invokevirtual #50                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.isSigned:()Z
      73: ifne          79
      76: goto          39
      79: aload         7
      81: invokevirtual #51                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.getElementPath:()Ljava/util/List;
      84: astore        8
      86: aload_0
      87: aload         8
      89: invokespecial #64                 // Method isReplyTo:(Ljava/util/List;)Z
      92: ifeq          97
      95: iconst_1
      96: istore_3
      97: aload_0
      98: aload         8
     100: invokespecial #65                 // Method isFaultTo:(Ljava/util/List;)Z
     103: ifeq          109
     106: iconst_1
     107: istore        4
     109: iload_3
     110: ifeq          121
     113: iload         4
     115: ifeq          121
     118: goto          124
     121: goto          39
     124: iload_3
     125: ifne          155
     128: aload_2
     129: invokevirtual #62                 // Method org/apache/cxf/ws/addressing/AddressingProperties.getReplyTo:()Lorg/apache/cxf/ws/addressing/EndpointReferenceType;
     132: ifnull        155
     135: new           #40                 // class org/apache/wss4j/common/ext/WSSecurityException
     138: dup
     139: getstatic     #53                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
     142: new           #54                 // class java/lang/Exception
     145: dup
     146: ldc           #66                 // String The Addressing headers are not signed
     148: invokespecial #56                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     151: invokespecial #57                 // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;)V
     154: athrow
     155: iload         4
     157: ifne          187
     160: aload_2
     161: invokevirtual #63                 // Method org/apache/cxf/ws/addressing/AddressingProperties.getFaultTo:()Lorg/apache/cxf/ws/addressing/EndpointReferenceType;
     164: ifnull        187
     167: new           #40                 // class org/apache/wss4j/common/ext/WSSecurityException
     170: dup
     171: getstatic     #53                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
     174: new           #54                 // class java/lang/Exception
     177: dup
     178: ldc           #66                 // String The Addressing headers are not signed
     180: invokespecial #56                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     183: invokespecial #57                 // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;)V
     186: athrow
     187: return

  private void checkSignedUsernameToken(java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent>) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field signUsernameToken:Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          79
      26: aload_3
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      35: astore        4
      37: aload         4
      39: checkcast     #49                 // class org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent
      42: astore        5
      44: aload         5
      46: invokevirtual #50                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.isSigned:()Z
      49: ifne          55
      52: goto          17
      55: aload         5
      57: invokevirtual #51                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.getElementPath:()Ljava/util/List;
      60: astore        6
      62: aload_0
      63: aload         6
      65: invokespecial #67                 // Method isUsernameToken:(Ljava/util/List;)Z
      68: ifeq          76
      71: iconst_1
      72: istore_2
      73: goto          79
      76: goto          17
      79: iload_2
      80: ifne          103
      83: new           #40                 // class org/apache/wss4j/common/ext/WSSecurityException
      86: dup
      87: getstatic     #53                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
      90: new           #54                 // class java/lang/Exception
      93: dup
      94: ldc           #68                 // String The UsernameToken is not signed
      96: invokespecial #56                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      99: invokespecial #57                 // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;)V
     102: athrow
     103: return

  private void checkEncryptedUsernameToken(java.util.List<org.apache.xml.security.stax.securityEvent.SecurityEvent>) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field encryptUsernameToken:Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          79
      26: aload_3
      27: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #9                  // class org/apache/xml/security/stax/securityEvent/SecurityEvent
      35: astore        4
      37: aload         4
      39: checkcast     #49                 // class org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent
      42: astore        5
      44: aload         5
      46: invokevirtual #58                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.isEncrypted:()Z
      49: ifne          55
      52: goto          17
      55: aload         5
      57: invokevirtual #51                 // Method org/apache/xml/security/stax/securityEvent/AbstractSecuredElementSecurityEvent.getElementPath:()Ljava/util/List;
      60: astore        6
      62: aload_0
      63: aload         6
      65: invokespecial #67                 // Method isUsernameToken:(Ljava/util/List;)Z
      68: ifeq          76
      71: iconst_1
      72: istore_2
      73: goto          79
      76: goto          17
      79: iload_2
      80: ifne          103
      83: new           #40                 // class org/apache/wss4j/common/ext/WSSecurityException
      86: dup
      87: getstatic     #53                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
      90: new           #54                 // class java/lang/Exception
      93: dup
      94: ldc           #69                 // String The UsernameToken is not encrypted
      96: invokespecial #56                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      99: invokespecial #57                 // Method org/apache/wss4j/common/ext/WSSecurityException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;)V
     102: athrow
     103: return

  private boolean isEnvelope(javax.xml.namespace.QName);
    Code:
       0: ldc           #70                 // String Envelope
       2: aload_1
       3: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
       6: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          40
      12: ldc           #73                 // String http://schemas.xmlsoap.org/soap/envelope/
      14: aload_1
      15: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      18: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifne          36
      24: ldc           #75                 // String http://www.w3.org/2003/05/soap-envelope
      26: aload_1
      27: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      30: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private boolean isSoapHeader(javax.xml.namespace.QName);
    Code:
       0: ldc           #76                 // String Header
       2: aload_1
       3: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
       6: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          40
      12: ldc           #73                 // String http://schemas.xmlsoap.org/soap/envelope/
      14: aload_1
      15: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      18: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifne          36
      24: ldc           #75                 // String http://www.w3.org/2003/05/soap-envelope
      26: aload_1
      27: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      30: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private boolean isSecurityHeader(javax.xml.namespace.QName);
    Code:
       0: ldc           #77                 // String Security
       2: aload_1
       3: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
       6: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          28
      12: ldc           #78                 // String http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
      14: aload_1
      15: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      18: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private boolean isTimestamp(java.util.List<javax.xml.namespace.QName>);
    Code:
       0: aload_1
       1: ifnull        111
       4: aload_1
       5: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      10: iconst_4
      11: if_icmpne     111
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #81                 // class javax/xml/namespace/QName
      25: invokespecial #82                 // Method isEnvelope:(Ljavax/xml/namespace/QName;)Z
      28: ifeq          111
      31: aload_0
      32: aload_1
      33: iconst_1
      34: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #81                 // class javax/xml/namespace/QName
      42: invokespecial #83                 // Method isSoapHeader:(Ljavax/xml/namespace/QName;)Z
      45: ifeq          111
      48: aload_0
      49: aload_1
      50: iconst_2
      51: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      56: checkcast     #81                 // class javax/xml/namespace/QName
      59: invokespecial #84                 // Method isSecurityHeader:(Ljavax/xml/namespace/QName;)Z
      62: ifeq          111
      65: ldc           #85                 // String Timestamp
      67: aload_1
      68: iconst_3
      69: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: checkcast     #81                 // class javax/xml/namespace/QName
      77: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      80: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      83: ifeq          111
      86: ldc           #86                 // String http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
      88: aload_1
      89: iconst_3
      90: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      95: checkcast     #81                 // class javax/xml/namespace/QName
      98: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     101: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     104: ifeq          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: ireturn

  private boolean isReplyTo(java.util.List<javax.xml.namespace.QName>);
    Code:
       0: aload_1
       1: ifnull        94
       4: aload_1
       5: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      10: iconst_3
      11: if_icmpne     94
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #81                 // class javax/xml/namespace/QName
      25: invokespecial #82                 // Method isEnvelope:(Ljavax/xml/namespace/QName;)Z
      28: ifeq          94
      31: aload_0
      32: aload_1
      33: iconst_1
      34: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #81                 // class javax/xml/namespace/QName
      42: invokespecial #83                 // Method isSoapHeader:(Ljavax/xml/namespace/QName;)Z
      45: ifeq          94
      48: ldc           #87                 // String ReplyTo
      50: aload_1
      51: iconst_2
      52: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      57: checkcast     #81                 // class javax/xml/namespace/QName
      60: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      63: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          94
      69: ldc           #88                 // String http://www.w3.org/2005/08/addressing
      71: aload_1
      72: iconst_2
      73: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      78: checkcast     #81                 // class javax/xml/namespace/QName
      81: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      84: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ireturn

  private boolean isFaultTo(java.util.List<javax.xml.namespace.QName>);
    Code:
       0: aload_1
       1: ifnull        94
       4: aload_1
       5: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      10: iconst_3
      11: if_icmpne     94
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #81                 // class javax/xml/namespace/QName
      25: invokespecial #82                 // Method isEnvelope:(Ljavax/xml/namespace/QName;)Z
      28: ifeq          94
      31: aload_0
      32: aload_1
      33: iconst_1
      34: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #81                 // class javax/xml/namespace/QName
      42: invokespecial #83                 // Method isSoapHeader:(Ljavax/xml/namespace/QName;)Z
      45: ifeq          94
      48: ldc           #89                 // String FaultTo
      50: aload_1
      51: iconst_2
      52: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      57: checkcast     #81                 // class javax/xml/namespace/QName
      60: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      63: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          94
      69: ldc           #88                 // String http://www.w3.org/2005/08/addressing
      71: aload_1
      72: iconst_2
      73: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      78: checkcast     #81                 // class javax/xml/namespace/QName
      81: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      84: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ireturn

  private boolean isBody(java.util.List<javax.xml.namespace.QName>);
    Code:
       0: aload_1
       1: ifnull        98
       4: aload_1
       5: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      10: iconst_2
      11: if_icmpne     98
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #81                 // class javax/xml/namespace/QName
      25: invokespecial #82                 // Method isEnvelope:(Ljavax/xml/namespace/QName;)Z
      28: ifeq          98
      31: ldc           #90                 // String Body
      33: aload_1
      34: iconst_1
      35: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      40: checkcast     #81                 // class javax/xml/namespace/QName
      43: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      46: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          98
      52: ldc           #73                 // String http://schemas.xmlsoap.org/soap/envelope/
      54: aload_1
      55: iconst_1
      56: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      61: checkcast     #81                 // class javax/xml/namespace/QName
      64: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      67: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifne          94
      73: ldc           #75                 // String http://www.w3.org/2003/05/soap-envelope
      75: aload_1
      76: iconst_1
      77: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      82: checkcast     #81                 // class javax/xml/namespace/QName
      85: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      88: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifeq          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: ireturn

  private boolean isUsernameToken(java.util.List<javax.xml.namespace.QName>);
    Code:
       0: aload_1
       1: ifnull        111
       4: aload_1
       5: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      10: iconst_4
      11: if_icmpne     111
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #81                 // class javax/xml/namespace/QName
      25: invokespecial #82                 // Method isEnvelope:(Ljavax/xml/namespace/QName;)Z
      28: ifeq          111
      31: aload_0
      32: aload_1
      33: iconst_1
      34: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #81                 // class javax/xml/namespace/QName
      42: invokespecial #83                 // Method isSoapHeader:(Ljavax/xml/namespace/QName;)Z
      45: ifeq          111
      48: aload_0
      49: aload_1
      50: iconst_2
      51: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      56: checkcast     #81                 // class javax/xml/namespace/QName
      59: invokespecial #84                 // Method isSecurityHeader:(Ljavax/xml/namespace/QName;)Z
      62: ifeq          111
      65: ldc           #91                 // String UsernameToken
      67: aload_1
      68: iconst_3
      69: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: checkcast     #81                 // class javax/xml/namespace/QName
      77: invokevirtual #71                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      80: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      83: ifeq          111
      86: ldc           #78                 // String http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
      88: aload_1
      89: iconst_3
      90: invokeinterface #80,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      95: checkcast     #81                 // class javax/xml/namespace/QName
      98: invokevirtual #74                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     101: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     104: ifeq          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: ireturn

  public boolean isSignBody();
    Code:
       0: aload_0
       1: getfield      #48                 // Field signBody:Z
       4: ireturn

  public final void setSignBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field signBody:Z
       5: return

  public boolean isSignTimestamp();
    Code:
       0: aload_0
       1: getfield      #28                 // Field signTimestamp:Z
       4: ireturn

  public final void setSignTimestamp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field signTimestamp:Z
       5: return

  public boolean isEncryptBody();
    Code:
       0: aload_0
       1: getfield      #22                 // Field encryptBody:Z
       4: ireturn

  public final void setEncryptBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field encryptBody:Z
       5: return

  public boolean isSignAddressingHeaders();
    Code:
       0: aload_0
       1: getfield      #32                 // Field signAddressingHeaders:Z
       4: ireturn

  public final void setSignAddressingHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field signAddressingHeaders:Z
       5: return

  private org.apache.cxf.binding.soap.SoapFault createSoapFault(org.apache.cxf.binding.soap.SoapVersion, org.apache.wss4j.common.ext.WSSecurityException);
    Code:
       0: aload_2
       1: invokevirtual #92                 // Method org/apache/wss4j/common/ext/WSSecurityException.getFaultCode:()Ljavax/xml/namespace/QName;
       4: astore        4
       6: aload_1
       7: invokeinterface #93,  1           // InterfaceMethod org/apache/cxf/binding/soap/SoapVersion.getVersion:()D
      12: ldc2_w        #94                 // double 1.1d
      15: dcmpl
      16: ifne          42
      19: aload         4
      21: ifnull        42
      24: new           #96                 // class org/apache/cxf/binding/soap/SoapFault
      27: dup
      28: aload_2
      29: invokevirtual #97                 // Method org/apache/wss4j/common/ext/WSSecurityException.getMessage:()Ljava/lang/String;
      32: aload_2
      33: aload         4
      35: invokespecial #98                 // Method org/apache/cxf/binding/soap/SoapFault."<init>":(Ljava/lang/String;Ljava/lang/Throwable;Ljavax/xml/namespace/QName;)V
      38: astore_3
      39: goto          85
      42: new           #96                 // class org/apache/cxf/binding/soap/SoapFault
      45: dup
      46: aload_2
      47: invokevirtual #97                 // Method org/apache/wss4j/common/ext/WSSecurityException.getMessage:()Ljava/lang/String;
      50: aload_2
      51: aload_1
      52: invokeinterface #99,  1           // InterfaceMethod org/apache/cxf/binding/soap/SoapVersion.getSender:()Ljavax/xml/namespace/QName;
      57: invokespecial #98                 // Method org/apache/cxf/binding/soap/SoapFault."<init>":(Ljava/lang/String;Ljava/lang/Throwable;Ljavax/xml/namespace/QName;)V
      60: astore_3
      61: aload_1
      62: invokeinterface #93,  1           // InterfaceMethod org/apache/cxf/binding/soap/SoapVersion.getVersion:()D
      67: ldc2_w        #94                 // double 1.1d
      70: dcmpl
      71: ifeq          85
      74: aload         4
      76: ifnull        85
      79: aload_3
      80: aload         4
      82: invokevirtual #100                // Method org/apache/cxf/binding/soap/SoapFault.setSubCode:(Ljavax/xml/namespace/QName;)V
      85: aload_3
      86: areturn

  public boolean isSignUsernameToken();
    Code:
       0: aload_0
       1: getfield      #36                 // Field signUsernameToken:Z
       4: ireturn

  public void setSignUsernameToken(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field signUsernameToken:Z
       5: return

  public boolean isEncryptUsernameToken();
    Code:
       0: aload_0
       1: getfield      #23                 // Field encryptUsernameToken:Z
       4: ireturn

  public void setEncryptUsernameToken(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field encryptUsernameToken:Z
       5: return

  public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #101                // class org/apache/cxf/binding/soap/SoapMessage
       5: invokevirtual #102                // Method handleMessage:(Lorg/apache/cxf/binding/soap/SoapMessage;)V
       8: return
}
