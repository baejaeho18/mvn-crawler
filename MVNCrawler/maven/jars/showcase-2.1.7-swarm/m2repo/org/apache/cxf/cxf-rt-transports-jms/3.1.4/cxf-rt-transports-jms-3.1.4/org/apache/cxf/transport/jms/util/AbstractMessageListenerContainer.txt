Compiled from "AbstractMessageListenerContainer.java"
public abstract class org.apache.cxf.transport.jms.util.AbstractMessageListenerContainer implements org.apache.cxf.transport.jms.util.JMSListenerContainer {
  protected static final java.util.logging.Logger LOG;

  protected javax.jms.Connection connection;

  protected javax.jms.Destination destination;

  protected javax.jms.MessageListener listenerHandler;

  protected boolean transacted;

  protected int acknowledgeMode;

  protected java.lang.String messageSelector;

  protected boolean running;

  protected java.util.concurrent.Executor executor;

  protected java.lang.String durableSubscriptionName;

  protected boolean pubSubNoLocal;

  protected javax.transaction.TransactionManager transactionManager;

  public org.apache.cxf.transport.jms.util.AbstractMessageListenerContainer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field acknowledgeMode:I
       9: return

  public javax.jms.Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connection:Ljavax/jms/Connection;
       4: areturn

  public void setTransacted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field transacted:Z
       5: aload_0
       6: getfield      #4                  // Field transacted:Z
       9: ifeq          17
      12: aload_0
      13: iconst_0
      14: putfield      #2                  // Field acknowledgeMode:I
      17: return

  public void setAcknowledgeMode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field acknowledgeMode:I
       5: return

  public void setMessageSelector(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field messageSelector:Ljava/lang/String;
       5: return

  protected java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/Executor;
       4: ifnonnull     16
       7: aload_0
       8: bipush        10
      10: invokestatic  #7                  // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;
      13: putfield      #6                  // Field executor:Ljava/util/concurrent/Executor;
      16: aload_0
      17: getfield      #6                  // Field executor:Ljava/util/concurrent/Executor;
      20: areturn

  public void setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field executor:Ljava/util/concurrent/Executor;
       5: return

  public void setDurableSubscriptionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field durableSubscriptionName:Ljava/lang/String;
       5: return

  public void setPubSubNoLocal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field pubSubNoLocal:Z
       5: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #10                 // Field running:Z
       4: ireturn

  public void setTransactionManager(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field transactionManager:Ljavax/transaction/TransactionManager;
       5: return

  static {};
    Code:
       0: ldc_w         #12                 // class org/apache/cxf/transport/jms/util/MessageListenerContainer
       3: invokestatic  #13                 // Method org/apache/cxf/common/logging/LogUtils.getL7dLogger:(Ljava/lang/Class;)Ljava/util/logging/Logger;
       6: putstatic     #14                 // Field LOG:Ljava/util/logging/Logger;
       9: return
}
