Compiled from "ToolContext.java"
public class org.apache.cxf.tools.common.ToolContext {
  protected org.apache.cxf.tools.common.model.JavaModel javaModel;

  private java.util.Map<java.lang.String, java.lang.Object> paramMap;

  private java.lang.String packageName;

  private boolean packageNameChanged;

  private org.apache.cxf.tools.common.ToolErrorListener errors;

  private java.util.Map<java.lang.String, java.lang.String> namespacePackageMap;

  private java.util.Map<java.lang.String, java.lang.String> excludeNamespacePackageMap;

  private java.util.List<org.xml.sax.InputSource> jaxbBindingFiles;

  private java.util.List<java.lang.String> excludePkgList;

  private java.util.List<java.lang.String> excludeFileList;

  public org.apache.cxf.tools.common.ToolContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
      26: aload_0
      27: new           #6                  // class java/util/ArrayList
      30: dup
      31: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #8                  // Field jaxbBindingFiles:Ljava/util/List;
      37: aload_0
      38: new           #6                  // class java/util/ArrayList
      41: dup
      42: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      45: putfield      #9                  // Field excludePkgList:Ljava/util/List;
      48: aload_0
      49: new           #6                  // class java/util/ArrayList
      52: dup
      53: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      56: putfield      #10                 // Field excludeFileList:Ljava/util/List;
      59: return

  public void loadDefaultNS2Pck(java.io.InputStream);
    Code:
       0: new           #11                 // class org/apache/cxf/tools/util/PropertyUtil
       3: dup
       4: invokespecial #12                 // Method org/apache/cxf/tools/util/PropertyUtil."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #13                 // Method org/apache/cxf/tools/util/PropertyUtil.load:(Ljava/io/InputStream;)V
      13: aload_0
      14: getfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
      17: aload_2
      18: invokevirtual #14                 // Method org/apache/cxf/tools/util/PropertyUtil.getMaps:()Ljava/util/Map;
      21: invokeinterface #15,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      26: goto          34
      29: astore_2
      30: aload_2
      31: invokevirtual #17                 // Method java/io/IOException.printStackTrace:()V
      34: return
    Exception table:
       from    to  target type
           0    26    29   Class java/io/IOException

  public void loadDefaultExcludes(java.io.InputStream);
    Code:
       0: new           #11                 // class org/apache/cxf/tools/util/PropertyUtil
       3: dup
       4: invokespecial #12                 // Method org/apache/cxf/tools/util/PropertyUtil."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #13                 // Method org/apache/cxf/tools/util/PropertyUtil.load:(Ljava/io/InputStream;)V
      13: aload_0
      14: getfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
      17: aload_2
      18: invokevirtual #14                 // Method org/apache/cxf/tools/util/PropertyUtil.getMaps:()Ljava/util/Map;
      21: invokeinterface #15,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      26: aload_0
      27: getfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
      30: aload_2
      31: invokevirtual #14                 // Method org/apache/cxf/tools/util/PropertyUtil.getMaps:()Ljava/util/Map;
      34: invokeinterface #15,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      39: goto          47
      42: astore_2
      43: aload_2
      44: invokevirtual #17                 // Method java/io/IOException.printStackTrace:()V
      47: return
    Exception table:
       from    to  target type
           0    39    42   Class java/io/IOException

  public org.apache.cxf.tools.common.model.JavaModel getJavaModel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field javaModel:Lorg/apache/cxf/tools/common/model/JavaModel;
       4: areturn

  public void setJavaModel(org.apache.cxf.tools.common.model.JavaModel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field javaModel:Lorg/apache/cxf/tools/common/model/JavaModel;
       5: return

  public void addParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          69
      21: aload_2
      22: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #23                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #25                 // class java/lang/String
      41: invokevirtual #26                 // Method optionSet:(Ljava/lang/String;)Z
      44: ifne          66
      47: aload_0
      48: aload_3
      49: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: checkcast     #25                 // class java/lang/String
      57: aload_3
      58: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: invokevirtual #28                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      66: goto          12
      69: return

  public void setParameters(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field paramMap:Ljava/util/Map;
       5: return

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #29                 // Field paramMap:Ljava/util/Map;
       4: ifnonnull     11
       7: iconst_0
       8: goto          21
      11: aload_0
      12: getfield      #29                 // Field paramMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      21: ireturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #29                 // Field paramMap:Ljava/util/Map;
       4: ifnonnull     11
       7: aconst_null
       8: goto          21
      11: aload_0
      12: getfield      #29                 // Field paramMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn

  public java.lang.String[] getArray(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: instanceof    #25                 // class java/lang/String
      10: ifeq          25
      13: iconst_1
      14: anewarray     #25                 // class java/lang/String
      17: dup
      18: iconst_0
      19: aload_2
      20: checkcast     #25                 // class java/lang/String
      23: aastore
      24: areturn
      25: aload_2
      26: checkcast     #33                 // class "[Ljava/lang/String;"
      29: checkcast     #33                 // class "[Ljava/lang/String;"
      32: areturn

  public java.lang.Object get(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method optionSet:(Ljava/lang/String;)Z
       5: ifne          10
       8: aload_2
       9: areturn
      10: aload_0
      11: aload_1
      12: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
      15: areturn

  public <T> T get(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       6: invokevirtual #34                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public <T> T get(java.lang.String, java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: aload_3
       4: invokevirtual #35                 // Method get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: invokevirtual #34                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public <T> T get(java.lang.Class<T>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       9: invokevirtual #34                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public <T> void put(java.lang.Class<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: aload_2
       6: invokevirtual #28                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  public boolean getBooleanValue(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #35                 // Method get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #25                 // class java/lang/String
       9: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      12: invokevirtual #38                 // Method java/lang/Boolean.booleanValue:()Z
      15: ireturn

  public void put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #29                 // Field paramMap:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #2                  // class java/util/HashMap
      11: dup
      12: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      15: putfield      #29                 // Field paramMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #29                 // Field paramMap:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #39,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public void remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #29                 // Field paramMap:Ljava/util/Map;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #29                 // Field paramMap:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #40,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return

  public boolean optionSet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: ifnonnull     12
       8: iconst_0
       9: goto          13
      12: iconst_1
      13: ireturn

  public boolean isVerbose();
    Code:
       0: aload_0
       1: ldc           #41                 // String verbose
       3: ldc_w         #25                 // class java/lang/String
       6: invokevirtual #42                 // Method get:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #25                 // class java/lang/String
      12: astore_1
      13: aload_1
      14: ifnonnull     19
      17: iconst_0
      18: ireturn
      19: ldc           #41                 // String verbose
      21: aload_1
      22: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifne          35
      28: aload_1
      29: invokestatic  #44                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public boolean fullValidateWSDL();
    Code:
       0: aload_0
       1: ldc           #45                 // String validate
       3: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: instanceof    #25                 // class java/lang/String
      11: ifeq          46
      14: aload_1
      15: checkcast     #25                 // class java/lang/String
      18: invokevirtual #46                 // Method java/lang/String.length:()I
      21: ifle          46
      24: aload_1
      25: checkcast     #25                 // class java/lang/String
      28: iconst_0
      29: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
      32: bipush        61
      34: if_icmpne     46
      37: aload_1
      38: checkcast     #25                 // class java/lang/String
      41: iconst_1
      42: invokevirtual #48                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: astore_1
      46: aload_1
      47: ifnull        81
      50: ldc           #49                 // String none
      52: aload_1
      53: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifne          81
      59: ldc           #50                 // String false
      61: aload_1
      62: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifne          81
      68: ldc           #51                 // String basic
      70: aload_1
      71: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn

  public boolean basicValidateWSDL();
    Code:
       0: aload_0
       1: ldc           #45                 // String validate
       3: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: instanceof    #25                 // class java/lang/String
      11: ifeq          46
      14: aload_1
      15: checkcast     #25                 // class java/lang/String
      18: invokevirtual #46                 // Method java/lang/String.length:()I
      21: ifle          46
      24: aload_1
      25: checkcast     #25                 // class java/lang/String
      28: iconst_0
      29: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
      32: bipush        61
      34: if_icmpne     46
      37: aload_1
      38: checkcast     #25                 // class java/lang/String
      41: iconst_1
      42: invokevirtual #48                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: astore_1
      46: ldc           #49                 // String none
      48: aload_1
      49: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifne          68
      55: ldc           #50                 // String false
      57: aload_1
      58: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifne          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public void addNamespacePackageMap(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #39,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private java.lang.String mapNamespaceToPackageName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class java/lang/String
      13: areturn

  public boolean hasNamespace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public void addExcludeNamespacePackageMap(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #39,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #9                  // Field excludePkgList:Ljava/util/List;
      16: aload_2
      17: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: return

  public boolean hasExcludeNamespace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.String getExcludePackageName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class java/lang/String
      13: areturn

  public void setPackageName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field packageName:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #54                 // Field packageNameChanged:Z
      10: return

  public java.lang.String getPackageName();
    Code:
       0: aload_0
       1: getfield      #53                 // Field packageName:Ljava/lang/String;
       4: areturn

  public java.lang.String mapPackageName(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #55                 // String
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #56                 // Method hasNamespace:(Ljava/lang/String;)Z
      12: ifeq          21
      15: aload_0
      16: aload_1
      17: invokespecial #57                 // Method mapNamespaceToPackageName:(Ljava/lang/String;)Ljava/lang/String;
      20: areturn
      21: aload_0
      22: invokevirtual #58                 // Method getPackageName:()Ljava/lang/String;
      25: ifnull        33
      28: aload_0
      29: invokevirtual #58                 // Method getPackageName:()Ljava/lang/String;
      32: areturn
      33: aload_1
      34: aconst_null
      35: invokestatic  #59                 // Method org/apache/cxf/common/util/URIParserUtil.parsePackageName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      38: areturn

  public java.lang.String getCustomizedNS(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method mapPackageName:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #61                 // Method org/apache/cxf/common/util/URIParserUtil.getNamespace:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public void setJaxbBindingFiles(java.util.List<org.xml.sax.InputSource>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field jaxbBindingFiles:Ljava/util/List;
       5: return

  public java.util.List<org.xml.sax.InputSource> getJaxbBindingFile();
    Code:
       0: aload_0
       1: getfield      #8                  // Field jaxbBindingFiles:Ljava/util/List;
       4: areturn

  public boolean isExcludeNamespaceEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
       4: invokeinterface #62,  1           // InterfaceMethod java/util/Map.size:()I
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.List<java.lang.String> getExcludePkgList();
    Code:
       0: aload_0
       1: getfield      #9                  // Field excludePkgList:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getExcludeFileList();
    Code:
       0: aload_0
       1: getfield      #10                 // Field excludeFileList:Ljava/util/List;
       4: areturn

  public javax.xml.namespace.QName getQName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #63                 // Method getQName:(Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/namespace/QName;
       6: areturn

  public javax.xml.namespace.QName getQName(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method optionSet:(Ljava/lang/String;)Z
       5: ifeq          76
       8: aload_0
       9: aload_1
      10: invokevirtual #32                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #25                 // class java/lang/String
      16: astore_3
      17: aload_3
      18: ldc           #64                 // String =
      20: invokevirtual #65                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      23: istore        4
      25: aload_3
      26: astore        5
      28: iload         4
      30: iconst_m1
      31: if_icmpeq     65
      34: aload_3
      35: iconst_0
      36: iload         4
      38: invokevirtual #66                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      41: astore        6
      43: aload_3
      44: iload         4
      46: iconst_1
      47: iadd
      48: invokevirtual #48                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      51: astore        5
      53: new           #67                 // class javax/xml/namespace/QName
      56: dup
      57: aload         6
      59: aload         5
      61: invokespecial #68                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      64: areturn
      65: new           #67                 // class javax/xml/namespace/QName
      68: dup
      69: aload_2
      70: aload         5
      72: invokespecial #68                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      75: areturn
      76: aconst_null
      77: areturn

  public org.apache.cxf.tools.common.ToolErrorListener getErrorListener();
    Code:
       0: aload_0
       1: getfield      #69                 // Field errors:Lorg/apache/cxf/tools/common/ToolErrorListener;
       4: ifnonnull     18
       7: aload_0
       8: new           #70                 // class org/apache/cxf/tools/common/ToolErrorListener
      11: dup
      12: invokespecial #71                 // Method org/apache/cxf/tools/common/ToolErrorListener."<init>":()V
      15: putfield      #69                 // Field errors:Lorg/apache/cxf/tools/common/ToolErrorListener;
      18: aload_0
      19: getfield      #69                 // Field errors:Lorg/apache/cxf/tools/common/ToolErrorListener;
      22: areturn

  public void setErrorListener(org.apache.cxf.tools.common.ToolErrorListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field errors:Lorg/apache/cxf/tools/common/ToolErrorListener;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getNamespacePackageMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
       4: areturn

  public boolean isPackageNameChanged();
    Code:
       0: aload_0
       1: getfield      #54                 // Field packageNameChanged:Z
       4: ireturn

  public org.apache.cxf.tools.common.ToolContext makeCopy();
    Code:
       0: new           #72                 // class org/apache/cxf/tools/common/ToolContext
       3: dup
       4: invokespecial #73                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #18                 // Field javaModel:Lorg/apache/cxf/tools/common/model/JavaModel;
      13: putfield      #18                 // Field javaModel:Lorg/apache/cxf/tools/common/model/JavaModel;
      16: aload_1
      17: new           #2                  // class java/util/HashMap
      20: dup
      21: aload_0
      22: getfield      #29                 // Field paramMap:Ljava/util/Map;
      25: invokespecial #74                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      28: putfield      #29                 // Field paramMap:Ljava/util/Map;
      31: aload_1
      32: aload_0
      33: getfield      #53                 // Field packageName:Ljava/lang/String;
      36: putfield      #53                 // Field packageName:Ljava/lang/String;
      39: aload_1
      40: aload_0
      41: getfield      #54                 // Field packageNameChanged:Z
      44: putfield      #54                 // Field packageNameChanged:Z
      47: aload_1
      48: new           #2                  // class java/util/HashMap
      51: dup
      52: aload_0
      53: getfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
      56: invokespecial #74                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      59: putfield      #4                  // Field namespacePackageMap:Ljava/util/Map;
      62: aload_1
      63: new           #2                  // class java/util/HashMap
      66: dup
      67: aload_0
      68: getfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
      71: invokespecial #74                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      74: putfield      #5                  // Field excludeNamespacePackageMap:Ljava/util/Map;
      77: aload_1
      78: new           #6                  // class java/util/ArrayList
      81: dup
      82: aload_0
      83: getfield      #8                  // Field jaxbBindingFiles:Ljava/util/List;
      86: invokespecial #75                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      89: putfield      #8                  // Field jaxbBindingFiles:Ljava/util/List;
      92: aload_1
      93: new           #6                  // class java/util/ArrayList
      96: dup
      97: aload_0
      98: getfield      #9                  // Field excludePkgList:Ljava/util/List;
     101: invokespecial #75                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     104: putfield      #9                  // Field excludePkgList:Ljava/util/List;
     107: aload_1
     108: new           #6                  // class java/util/ArrayList
     111: dup
     112: aload_0
     113: getfield      #10                 // Field excludeFileList:Ljava/util/List;
     116: invokespecial #75                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     119: putfield      #10                 // Field excludeFileList:Ljava/util/List;
     122: aload_1
     123: aload_0
     124: getfield      #69                 // Field errors:Lorg/apache/cxf/tools/common/ToolErrorListener;
     127: putfield      #69                 // Field errors:Lorg/apache/cxf/tools/common/ToolErrorListener;
     130: aload_1
     131: areturn
}
