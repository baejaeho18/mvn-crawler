Compiled from "AbstractHTTPServlet.java"
class org.apache.cxf.transport.servlet.AbstractHTTPServlet$HttpServletRequestXForwardedFilter extends javax.servlet.http.HttpServletRequestWrapper {
  private java.lang.String originalProto;

  private java.lang.String originalClientIp;

  org.apache.cxf.transport.servlet.AbstractHTTPServlet$HttpServletRequestXForwardedFilter(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javax/servlet/http/HttpServletRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field originalProto:Ljava/lang/String;
      10: aload_3
      11: ifnull        29
      14: aload_0
      15: aload_3
      16: ldc           #3                  // String ,
      18: invokevirtual #4                  // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      21: iconst_0
      22: aaload
      23: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      26: putfield      #6                  // Field originalClientIp:Ljava/lang/String;
      29: return

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #2                  // Field originalProto:Ljava/lang/String;
       4: ifnull        17
       7: ldc           #7                  // String https
       9: aload_0
      10: getfield      #2                  // Field originalProto:Ljava/lang/String;
      13: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ireturn
      17: aload_0
      18: invokespecial #9                  // Method javax/servlet/http/HttpServletRequestWrapper.isSecure:()Z
      21: ireturn

  public java.lang.StringBuffer getRequestURL();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method javax/servlet/http/HttpServletRequestWrapper.getRequestURL:()Ljava/lang/StringBuffer;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field originalProto:Ljava/lang/String;
       9: ifnull        56
      12: aload_0
      13: invokevirtual #11                 // Method isSecure:()Z
      16: ifeq          56
      19: aload_1
      20: invokevirtual #12                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      23: astore_2
      24: aload_2
      25: ldc           #13                 // String http:
      27: invokevirtual #14                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      30: ifeq          56
      33: new           #15                 // class java/lang/StringBuffer
      36: dup
      37: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      40: astore_1
      41: aload_1
      42: ldc           #7                  // String https
      44: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      47: aload_2
      48: iconst_4
      49: invokevirtual #18                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      52: invokevirtual #17                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      55: pop
      56: aload_1
      57: areturn

  public java.lang.String getRemoteAddr();
    Code:
       0: aload_0
       1: getfield      #6                  // Field originalClientIp:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #6                  // Field originalClientIp:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: invokespecial #19                 // Method javax/servlet/http/HttpServletRequestWrapper.getRemoteAddr:()Ljava/lang/String;
      16: areturn
}
