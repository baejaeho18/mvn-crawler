Compiled from "XMLStreamDataReader.java"
class org.apache.cxf.databinding.source.XMLStreamDataReader$1 implements javax.activation.DataSource {
  final java.io.InputStream val$ins;

  final javax.xml.namespace.QName val$name;

  final org.apache.cxf.databinding.source.XMLStreamDataReader this$0;

  org.apache.cxf.databinding.source.XMLStreamDataReader$1(org.apache.cxf.databinding.source.XMLStreamDataReader, java.io.InputStream, javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/cxf/databinding/source/XMLStreamDataReader;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$ins:Ljava/io/InputStream;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$name:Ljavax/xml/namespace/QName;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public java.lang.String getContentType();
    Code:
       0: ldc           #5                  // String text/xml
       2: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$ins:Ljava/io/InputStream;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$name:Ljavax/xml/namespace/QName;
       4: invokevirtual #6                  // Method javax/xml/namespace/QName.toString:()Ljava/lang/String;
       7: areturn

  public java.io.OutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn
}
