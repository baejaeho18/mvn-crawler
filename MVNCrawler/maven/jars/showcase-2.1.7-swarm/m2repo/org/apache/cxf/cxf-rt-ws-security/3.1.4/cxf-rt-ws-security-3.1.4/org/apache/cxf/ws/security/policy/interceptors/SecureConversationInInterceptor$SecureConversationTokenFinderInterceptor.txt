Compiled from "SecureConversationInInterceptor.java"
final class org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor<org.apache.cxf.binding.soap.SoapMessage> {
  static final org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor INSTANCE;

  private org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor();
    Code:
       0: aload_0
       1: ldc           #1                  // String pre-protocol
       3: invokespecial #2                  // Method org/apache/cxf/phase/AbstractPhaseInterceptor."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: ldc_w         #3                  // class org/apache/cxf/ws/security/wss4j/WSS4JInInterceptor
      10: invokevirtual #4                  // Method java/lang/Class.getName:()Ljava/lang/String;
      13: invokevirtual #5                  // Method addAfter:(Ljava/lang/String;)V
      16: return

  public void handleMessage(org.apache.cxf.binding.soap.SoapMessage) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method org/apache/cxf/ws/security/policy/interceptors/NegotiationUtils.parseSCTResult:(Lorg/apache/cxf/binding/soap/SoapMessage;)Z
       4: istore_2
       5: aload_1
       6: ldc_w         #7                  // class org/apache/cxf/ws/policy/AssertionInfoMap
       9: invokevirtual #8                  // Method org/apache/cxf/binding/soap/SoapMessage.get:(Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #7                  // class org/apache/cxf/ws/policy/AssertionInfoMap
      15: astore_3
      16: aload_3
      17: ifnull        130
      20: aload_3
      21: ldc           #9                  // String SecureConversationToken
      23: invokestatic  #10                 // Method org/apache/cxf/ws/security/policy/PolicyUtils.getAllAssertionsByLocalname:(Lorg/apache/cxf/ws/policy/AssertionInfoMap;Ljava/lang/String;)Ljava/util/Collection;
      26: astore        4
      28: aload         4
      30: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      35: ifeq          39
      38: return
      39: aload         4
      41: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      46: astore        5
      48: aload         5
      50: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          130
      58: aload         5
      60: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #15                 // class org/apache/cxf/ws/policy/AssertionInfo
      68: astore        6
      70: aload         6
      72: invokevirtual #16                 // Method org/apache/cxf/ws/policy/AssertionInfo.getAssertion:()Lorg/apache/neethi/Assertion;
      75: checkcast     #17                 // class org/apache/wss4j/policy/model/SecureConversationToken
      78: astore        7
      80: aload         7
      82: invokevirtual #18                 // Method org/apache/wss4j/policy/model/SecureConversationToken.getIncludeTokenType:()Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;
      85: astore        8
      87: iload_2
      88: ifne          111
      91: aload         7
      93: invokevirtual #19                 // Method org/apache/wss4j/policy/model/SecureConversationToken.isOptional:()Z
      96: ifne          111
      99: iload_2
     100: ifne          120
     103: aload         8
     105: getstatic     #20                 // Field org/apache/wss4j/policy/SPConstants$IncludeTokenType.INCLUDE_TOKEN_NEVER:Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;
     108: if_acmpne     120
     111: aload         6
     113: iconst_1
     114: invokevirtual #21                 // Method org/apache/cxf/ws/policy/AssertionInfo.setAsserted:(Z)V
     117: goto          127
     120: aload         6
     122: ldc           #22                 // String No SecureConversation token found in message.
     124: invokevirtual #23                 // Method org/apache/cxf/ws/policy/AssertionInfo.setNotAsserted:(Ljava/lang/String;)V
     127: goto          48
     130: return

  public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class org/apache/cxf/binding/soap/SoapMessage
       5: invokevirtual #25                 // Method handleMessage:(Lorg/apache/cxf/binding/soap/SoapMessage;)V
       8: return

  static {};
    Code:
       0: new           #26                 // class org/apache/cxf/ws/security/policy/interceptors/SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor
       3: dup
       4: invokespecial #27                 // Method "<init>":()V
       7: putstatic     #28                 // Field INSTANCE:Lorg/apache/cxf/ws/security/policy/interceptors/SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor;
      10: return
}
