Compiled from "BeanTypeInfo.java"
public class org.apache.cxf.aegis.type.basic.BeanTypeInfo {
  private java.util.Map<javax.xml.namespace.QName, javax.xml.namespace.QName> mappedName2typeName;

  private java.util.Map<javax.xml.namespace.QName, java.lang.String> mappedName2pdName;

  private java.util.Map<javax.xml.namespace.QName, org.apache.cxf.aegis.type.AegisType> mappedName2type;

  private java.lang.Class<?> beanClass;

  private java.util.List<javax.xml.namespace.QName> attributes;

  private java.util.List<javax.xml.namespace.QName> elements;

  private java.beans.PropertyDescriptor[] descriptors;

  private org.apache.cxf.aegis.type.TypeMapping typeMapping;

  private volatile boolean initialized;

  private java.lang.String defaultNamespace;

  private int minOccurs;

  private boolean nillable;

  private boolean isExtension;

  private boolean qualifyAttributes;

  private boolean qualifyElements;

  private boolean extensibleElements;

  private boolean extensibleAttributes;

  public org.apache.cxf.aegis.type.basic.BeanTypeInfo(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field mappedName2typeName:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field mappedName2pdName:Ljava/util/Map;
      26: aload_0
      27: new           #2                  // class java/util/HashMap
      30: dup
      31: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      34: putfield      #6                  // Field mappedName2type:Ljava/util/Map;
      37: aload_0
      38: new           #7                  // class java/util/ArrayList
      41: dup
      42: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      45: putfield      #9                  // Field attributes:Ljava/util/List;
      48: aload_0
      49: new           #7                  // class java/util/ArrayList
      52: dup
      53: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      56: putfield      #10                 // Field elements:Ljava/util/List;
      59: aload_0
      60: iconst_1
      61: putfield      #11                 // Field nillable:Z
      64: aload_0
      65: iconst_1
      66: putfield      #12                 // Field qualifyElements:Z
      69: aload_0
      70: iconst_1
      71: putfield      #13                 // Field extensibleElements:Z
      74: aload_0
      75: iconst_1
      76: putfield      #14                 // Field extensibleAttributes:Z
      79: aload_0
      80: aload_1
      81: putfield      #15                 // Field beanClass:Ljava/lang/Class;
      84: aload_0
      85: aload_2
      86: putfield      #16                 // Field defaultNamespace:Ljava/lang/String;
      89: aload_0
      90: invokespecial #17                 // Method initializeProperties:()V
      93: return

  public org.apache.cxf.aegis.type.basic.BeanTypeInfo(java.lang.Class<?>, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field mappedName2typeName:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field mappedName2pdName:Ljava/util/Map;
      26: aload_0
      27: new           #2                  // class java/util/HashMap
      30: dup
      31: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      34: putfield      #6                  // Field mappedName2type:Ljava/util/Map;
      37: aload_0
      38: new           #7                  // class java/util/ArrayList
      41: dup
      42: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      45: putfield      #9                  // Field attributes:Ljava/util/List;
      48: aload_0
      49: new           #7                  // class java/util/ArrayList
      52: dup
      53: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      56: putfield      #10                 // Field elements:Ljava/util/List;
      59: aload_0
      60: iconst_1
      61: putfield      #11                 // Field nillable:Z
      64: aload_0
      65: iconst_1
      66: putfield      #12                 // Field qualifyElements:Z
      69: aload_0
      70: iconst_1
      71: putfield      #13                 // Field extensibleElements:Z
      74: aload_0
      75: iconst_1
      76: putfield      #14                 // Field extensibleAttributes:Z
      79: aload_0
      80: aload_1
      81: putfield      #15                 // Field beanClass:Ljava/lang/Class;
      84: aload_0
      85: aload_2
      86: putfield      #16                 // Field defaultNamespace:Ljava/lang/String;
      89: aload_0
      90: invokespecial #17                 // Method initializeProperties:()V
      93: aload_0
      94: iload_3
      95: ifne          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: putfield      #18                 // Field initialized:Z
     106: return

  public java.lang.String getDefaultNamespace();
    Code:
       0: aload_0
       1: getfield      #16                 // Field defaultNamespace:Ljava/lang/String;
       4: areturn

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field initialized:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #19                 // Method initializeSync:()V
      11: goto          38
      14: astore_1
      15: aload_1
      16: instanceof    #21                 // class org/apache/cxf/aegis/DatabindingException
      19: ifeq          27
      22: aload_1
      23: checkcast     #21                 // class org/apache/cxf/aegis/DatabindingException
      26: athrow
      27: new           #21                 // class org/apache/cxf/aegis/DatabindingException
      30: dup
      31: ldc           #22                 // String Couldn\'t create TypeInfo.
      33: aload_1
      34: invokespecial #23                 // Method org/apache/cxf/aegis/DatabindingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: athrow
      38: return
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/Exception

  private synchronized void initializeSync();
    Code:
       0: aload_0
       1: getfield      #18                 // Field initialized:Z
       4: ifne          52
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
      14: arraylength
      15: if_icmpge     47
      18: aload_0
      19: aload_0
      20: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
      23: iload_1
      24: aaload
      25: invokevirtual #25                 // Method isMapped:(Ljava/beans/PropertyDescriptor;)Z
      28: ifeq          41
      31: aload_0
      32: aload_0
      33: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
      36: iload_1
      37: aaload
      38: invokevirtual #26                 // Method mapProperty:(Ljava/beans/PropertyDescriptor;)V
      41: iinc          1, 1
      44: goto          9
      47: aload_0
      48: iconst_1
      49: putfield      #18                 // Field initialized:Z
      52: return

  public boolean isMapped(java.beans.PropertyDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected void mapProperty(java.beans.PropertyDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_1
       7: invokevirtual #29                 // Method isAttribute:(Ljava/beans/PropertyDescriptor;)Z
      10: ifeq          30
      13: aload_0
      14: aload_2
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #30                 // Field qualifyAttributes:Z
      21: invokevirtual #31                 // Method createMappedName:(Ljava/beans/PropertyDescriptor;Z)Ljavax/xml/namespace/QName;
      24: invokevirtual #32                 // Method mapAttribute:(Ljava/lang/String;Ljavax/xml/namespace/QName;)V
      27: goto          52
      30: aload_0
      31: aload_1
      32: invokevirtual #33                 // Method isElement:(Ljava/beans/PropertyDescriptor;)Z
      35: ifeq          52
      38: aload_0
      39: aload_2
      40: aload_0
      41: aload_1
      42: aload_0
      43: getfield      #12                 // Field qualifyElements:Z
      46: invokevirtual #31                 // Method createMappedName:(Ljava/beans/PropertyDescriptor;Z)Ljavax/xml/namespace/QName;
      49: invokevirtual #34                 // Method mapElement:(Ljava/lang/String;Ljavax/xml/namespace/QName;)V
      52: return

  protected java.beans.PropertyDescriptor[] getPropertyDescriptors();
    Code:
       0: aload_0
       1: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
       4: areturn

  protected java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
       7: arraylength
       8: if_icmpge     40
      11: aload_0
      12: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
      15: iload_2
      16: aaload
      17: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          34
      27: aload_0
      28: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
      31: iload_2
      32: aaload
      33: areturn
      34: iinc          2, 1
      37: goto          2
      40: aconst_null
      41: areturn

  public org.apache.cxf.aegis.type.AegisType getType(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #6                  // Field mappedName2type:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #37                 // class org/apache/cxf/aegis/type/AegisType
      13: astore_2
      14: aload_2
      15: ifnonnull     49
      18: aload_0
      19: aload_1
      20: invokespecial #38                 // Method getMappedTypeName:(Ljavax/xml/namespace/QName;)Ljavax/xml/namespace/QName;
      23: astore_3
      24: aload_3
      25: ifnull        49
      28: aload_0
      29: invokevirtual #39                 // Method getTypeMapping:()Lorg/apache/cxf/aegis/type/TypeMapping;
      32: aload_3
      33: invokeinterface #40,  2           // InterfaceMethod org/apache/cxf/aegis/type/TypeMapping.getType:(Ljavax/xml/namespace/QName;)Lorg/apache/cxf/aegis/type/AegisType;
      38: astore_2
      39: aload_2
      40: ifnull        49
      43: aload_0
      44: aload_1
      45: aload_2
      46: invokevirtual #41                 // Method mapType:(Ljavax/xml/namespace/QName;Lorg/apache/cxf/aegis/type/AegisType;)V
      49: aload_2
      50: ifnonnull     191
      53: aload_0
      54: aload_1
      55: invokevirtual #42                 // Method getPropertyDescriptorFromMappedName:(Ljavax/xml/namespace/QName;)Ljava/beans/PropertyDescriptor;
      58: astore_3
      59: goto          90
      62: astore        4
      64: aload         4
      66: instanceof    #21                 // class org/apache/cxf/aegis/DatabindingException
      69: ifeq          78
      72: aload         4
      74: checkcast     #21                 // class org/apache/cxf/aegis/DatabindingException
      77: athrow
      78: new           #21                 // class org/apache/cxf/aegis/DatabindingException
      81: dup
      82: ldc           #43                 // String Couldn\'t get properties.
      84: aload         4
      86: invokespecial #23                 // Method org/apache/cxf/aegis/DatabindingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: athrow
      90: aload_3
      91: ifnonnull     96
      94: aconst_null
      95: areturn
      96: aload_0
      97: invokevirtual #39                 // Method getTypeMapping:()Lorg/apache/cxf/aegis/type/TypeMapping;
     100: astore        4
     102: aload         4
     104: invokeinterface #44,  1           // InterfaceMethod org/apache/cxf/aegis/type/TypeMapping.getTypeCreator:()Lorg/apache/cxf/aegis/type/TypeCreator;
     109: astore        5
     111: aload         5
     113: aload_3
     114: invokeinterface #45,  2           // InterfaceMethod org/apache/cxf/aegis/type/TypeCreator.createType:(Ljava/beans/PropertyDescriptor;)Lorg/apache/cxf/aegis/type/AegisType;
     119: astore_2
     120: goto          167
     123: astore        4
     125: aload         4
     127: new           #46                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     134: ldc           #48                 // String Couldn\'t create type for property
     136: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload_3
     140: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     143: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: ldc           #50                 // String  on
     148: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_0
     152: invokevirtual #51                 // Method getTypeClass:()Ljava/lang/Class;
     155: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     158: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     161: invokevirtual #54                 // Method org/apache/cxf/aegis/DatabindingException.prepend:(Ljava/lang/String;)V
     164: aload         4
     166: athrow
     167: aload_0
     168: aload_3
     169: invokevirtual #55                 // Method registerType:(Ljava/beans/PropertyDescriptor;)Z
     172: ifeq          185
     175: aload_0
     176: invokevirtual #39                 // Method getTypeMapping:()Lorg/apache/cxf/aegis/type/TypeMapping;
     179: aload_2
     180: invokeinterface #56,  2           // InterfaceMethod org/apache/cxf/aegis/type/TypeMapping.register:(Lorg/apache/cxf/aegis/type/AegisType;)V
     185: aload_0
     186: aload_1
     187: aload_2
     188: invokevirtual #41                 // Method mapType:(Ljavax/xml/namespace/QName;Lorg/apache/cxf/aegis/type/AegisType;)V
     191: aload_2
     192: ifnonnull     222
     195: new           #21                 // class org/apache/cxf/aegis/DatabindingException
     198: dup
     199: new           #46                 // class java/lang/StringBuilder
     202: dup
     203: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     206: ldc           #57                 // String Couldn\'t find type for property
     208: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: aload_1
     212: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     215: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: invokespecial #58                 // Method org/apache/cxf/aegis/DatabindingException."<init>":(Ljava/lang/String;)V
     221: athrow
     222: aload_2
     223: areturn
    Exception table:
       from    to  target type
          53    59    62   Class java/lang/Exception
          96   120   123   Class org/apache/cxf/aegis/DatabindingException

  protected boolean registerType(java.beans.PropertyDescriptor);
    Code:
       0: iconst_1
       1: ireturn

  public void mapType(javax.xml.namespace.QName, org.apache.cxf.aegis.type.AegisType);
    Code:
       0: aload_0
       1: getfield      #6                  // Field mappedName2type:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappedName2typeName:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #60                 // class javax/xml/namespace/QName
      13: areturn

  public org.apache.cxf.aegis.type.TypeMapping getTypeMapping();
    Code:
       0: aload_0
       1: getfield      #61                 // Field typeMapping:Lorg/apache/cxf/aegis/type/TypeMapping;
       4: areturn

  public void setTypeMapping(org.apache.cxf.aegis.type.TypeMapping);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field typeMapping:Lorg/apache/cxf/aegis/type/TypeMapping;
       5: return

  protected javax.xml.namespace.QName createMappedName(java.beans.PropertyDescriptor, boolean);
    Code:
       0: iload_2
       1: ifeq          20
       4: new           #60                 // class javax/xml/namespace/QName
       7: dup
       8: aload_0
       9: invokevirtual #62                 // Method getDefaultNamespace:()Ljava/lang/String;
      12: aload_1
      13: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      16: invokespecial #63                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: areturn
      20: new           #60                 // class javax/xml/namespace/QName
      23: dup
      24: aconst_null
      25: aload_1
      26: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      29: invokespecial #63                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      32: areturn

  public void mapAttribute(java.lang.String, javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mappedName2pdName:Ljava/util/Map;
       4: aload_2
       5: aload_1
       6: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #9                  // Field attributes:Ljava/util/List;
      16: aload_2
      17: invokeinterface #64,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: return

  public void mapElement(java.lang.String, javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mappedName2pdName:Ljava/util/Map;
       4: aload_2
       5: aload_1
       6: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #10                 // Field elements:Ljava/util/List;
      16: aload_2
      17: invokeinterface #64,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: return

  public void mapTypeName(javax.xml.namespace.QName, javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappedName2typeName:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private void initializeProperties();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #15                 // Field beanClass:Ljava/lang/Class;
       6: invokevirtual #65                 // Method java/lang/Class.isInterface:()Z
       9: ifne          22
      12: aload_0
      13: getfield      #15                 // Field beanClass:Ljava/lang/Class;
      16: invokevirtual #66                 // Method java/lang/Class.isPrimitive:()Z
      19: ifeq          37
      22: aload_0
      23: aload_0
      24: aload_0
      25: getfield      #15                 // Field beanClass:Ljava/lang/Class;
      28: invokespecial #67                 // Method getInterfacePropertyDescriptors:(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
      31: putfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
      34: goto          178
      37: aload_0
      38: getfield      #15                 // Field beanClass:Ljava/lang/Class;
      41: invokevirtual #68                 // Method java/lang/Class.isEnum:()Z
      44: ifeq          50
      47: goto          178
      50: aload_0
      51: getfield      #15                 // Field beanClass:Ljava/lang/Class;
      54: ldc_w         #69                 // class java/lang/Object
      57: if_acmpeq     178
      60: aload_0
      61: getfield      #15                 // Field beanClass:Ljava/lang/Class;
      64: ldc_w         #70                 // class java/lang/Throwable
      67: if_acmpne     73
      70: goto          178
      73: ldc_w         #71                 // class java/lang/RuntimeException
      76: aload_0
      77: getfield      #15                 // Field beanClass:Ljava/lang/Class;
      80: invokevirtual #72                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      83: ifeq          100
      86: aload_0
      87: getfield      #15                 // Field beanClass:Ljava/lang/Class;
      90: ldc_w         #71                 // class java/lang/RuntimeException
      93: invokestatic  #73                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/beans/BeanInfo;
      96: astore_1
      97: goto          178
     100: ldc_w         #20                 // class java/lang/Exception
     103: aload_0
     104: getfield      #15                 // Field beanClass:Ljava/lang/Class;
     107: invokevirtual #72                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     110: ifeq          140
     113: ldc_w         #20                 // class java/lang/Exception
     116: aload_0
     117: getfield      #15                 // Field beanClass:Ljava/lang/Class;
     120: invokevirtual #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     123: ifne          140
     126: aload_0
     127: getfield      #15                 // Field beanClass:Ljava/lang/Class;
     130: ldc_w         #20                 // class java/lang/Exception
     133: invokestatic  #73                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/beans/BeanInfo;
     136: astore_1
     137: goto          178
     140: ldc_w         #70                 // class java/lang/Throwable
     143: aload_0
     144: getfield      #15                 // Field beanClass:Ljava/lang/Class;
     147: invokevirtual #72                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     150: ifeq          167
     153: aload_0
     154: getfield      #15                 // Field beanClass:Ljava/lang/Class;
     157: ldc_w         #70                 // class java/lang/Throwable
     160: invokestatic  #73                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/beans/BeanInfo;
     163: astore_1
     164: goto          178
     167: aload_0
     168: getfield      #15                 // Field beanClass:Ljava/lang/Class;
     171: ldc_w         #69                 // class java/lang/Object
     174: invokestatic  #73                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/beans/BeanInfo;
     177: astore_1
     178: goto          193
     181: astore_2
     182: new           #21                 // class org/apache/cxf/aegis/DatabindingException
     185: dup
     186: ldc           #76                 // String Couldn\'t introspect interface.
     188: aload_2
     189: invokespecial #23                 // Method org/apache/cxf/aegis/DatabindingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     192: athrow
     193: aload_1
     194: ifnull        225
     197: aload_1
     198: invokeinterface #77,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
     203: astore_2
     204: aload_2
     205: ifnull        225
     208: aload_0
     209: aload_0
     210: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     213: aload_1
     214: aload_0
     215: getfield      #15                 // Field beanClass:Ljava/lang/Class;
     218: aload_2
     219: invokestatic  #79                 // Method org/apache/cxf/common/util/ReflectionUtil.getPropertyDescriptorsAvoidSunBug:(Ljava/lang/Class;Ljava/beans/BeanInfo;Ljava/lang/Class;[Ljava/beans/PropertyDescriptor;)[Ljava/beans/PropertyDescriptor;
     222: putfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
     225: aload_0
     226: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
     229: ifnonnull     240
     232: aload_0
     233: iconst_0
     234: anewarray     #80                 // class java/beans/PropertyDescriptor
     237: putfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
     240: aload_0
     241: getfield      #24                 // Field descriptors:[Ljava/beans/PropertyDescriptor;
     244: new           #81                 // class org/apache/cxf/aegis/type/basic/BeanTypeInfo$1
     247: dup
     248: aload_0
     249: invokespecial #82                 // Method org/apache/cxf/aegis/type/basic/BeanTypeInfo$1."<init>":(Lorg/apache/cxf/aegis/type/basic/BeanTypeInfo;)V
     252: invokestatic  #83                 // Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
     255: return
    Exception table:
       from    to  target type
           2   178   181   Class java/beans/IntrospectionException

  private java.beans.PropertyDescriptor[] getInterfacePropertyDescriptors(java.lang.Class<?>);
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: new           #84                 // class java/util/HashSet
      14: dup
      15: invokespecial #85                 // Method java/util/HashSet."<init>":()V
      18: invokespecial #86                 // Method getInterfacePropertyDescriptors:(Ljava/lang/Class;Ljava/util/List;Ljava/util/Set;)V
      21: aload_2
      22: aload_2
      23: invokeinterface #87,  1           // InterfaceMethod java/util/List.size:()I
      28: anewarray     #80                 // class java/beans/PropertyDescriptor
      31: invokeinterface #88,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      36: checkcast     #89                 // class "[Ljava/beans/PropertyDescriptor;"
      39: areturn

  private void getInterfacePropertyDescriptors(java.lang.Class<?>, java.util.List<java.beans.PropertyDescriptor>, java.util.Set<java.lang.Class<?>>);
    Code:
       0: aload_3
       1: aload_1
       2: invokeinterface #90,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       7: ifeq          11
      10: return
      11: aload_3
      12: aload_1
      13: invokeinterface #91,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: invokevirtual #92                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      23: astore        4
      25: aload_1
      26: invokestatic  #93                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
      29: astore        5
      31: iconst_0
      32: istore        6
      34: iload         6
      36: aload         5
      38: invokeinterface #77,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
      43: arraylength
      44: if_icmpge     87
      47: aload         5
      49: invokeinterface #77,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
      54: iload         6
      56: aaload
      57: astore        7
      59: aload_0
      60: aload_2
      61: aload         7
      63: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      66: invokespecial #94                 // Method containsPropertyName:(Ljava/util/List;Ljava/lang/String;)Z
      69: ifne          81
      72: aload_2
      73: aload         7
      75: invokeinterface #64,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      80: pop
      81: iinc          6, 1
      84: goto          34
      87: iconst_0
      88: istore        6
      90: iload         6
      92: aload         4
      94: arraylength
      95: if_icmpge     115
      98: aload_0
      99: aload         4
     101: iload         6
     103: aaload
     104: aload_2
     105: aload_3
     106: invokespecial #86                 // Method getInterfacePropertyDescriptors:(Ljava/lang/Class;Ljava/util/List;Ljava/util/Set;)V
     109: iinc          6, 1
     112: goto          90
     115: goto          120
     118: astore        4
     120: return
    Exception table:
       from    to  target type
          19   115   118   Class java/beans/IntrospectionException

  private boolean containsPropertyName(java.util.List<java.beans.PropertyDescriptor>, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #95,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          44
      16: aload_3
      17: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #80                 // class java/beans/PropertyDescriptor
      25: astore        4
      27: aload         4
      29: invokevirtual #28                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      32: aload_2
      33: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          7
      44: iconst_0
      45: ireturn

  public java.beans.PropertyDescriptor getPropertyDescriptorFromMappedName(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #98                 // Method getPropertyNameFromMappedName:(Ljavax/xml/namespace/QName;)Ljava/lang/String;
       6: invokevirtual #99                 // Method getPropertyDescriptor:(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;
       9: areturn

  protected boolean isAttribute(java.beans.PropertyDescriptor);
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isElement(java.beans.PropertyDescriptor);
    Code:
       0: iconst_1
       1: ireturn

  protected boolean isSerializable(java.beans.PropertyDescriptor);
    Code:
       0: iconst_1
       1: ireturn

  protected java.lang.Class<?> getTypeClass();
    Code:
       0: aload_0
       1: getfield      #15                 // Field beanClass:Ljava/lang/Class;
       4: areturn

  public boolean isNillable(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #100                // Method getType:(Ljavax/xml/namespace/QName;)Lorg/apache/cxf/aegis/type/AegisType;
       5: astore_2
       6: aload_2
       7: invokevirtual #101                // Method org/apache/cxf/aegis/type/AegisType.isNillable:()Z
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: getfield      #11                 // Field nillable:Z
      19: ireturn

  public int getMinOccurs(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #102                // Field minOccurs:I
       4: ireturn

  public int getMaxOccurs(javax.xml.namespace.QName);
    Code:
       0: iconst_1
       1: ireturn

  public long getMinOccurs();
    Code:
       0: aload_0
       1: getfield      #102                // Field minOccurs:I
       4: i2l
       5: lreturn

  public void setDefaultMinOccurs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #102                // Field minOccurs:I
       5: return

  public void setDefaultNillable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field nillable:Z
       5: return

  private java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mappedName2pdName:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #103                // class java/lang/String
      13: areturn

  public java.util.List<javax.xml.namespace.QName> getAttributes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field attributes:Ljava/util/List;
       4: areturn

  public java.util.List<javax.xml.namespace.QName> getElements();
    Code:
       0: aload_0
       1: getfield      #10                 // Field elements:Ljava/util/List;
       4: areturn

  public boolean isExtensibleElements();
    Code:
       0: aload_0
       1: getfield      #13                 // Field extensibleElements:Z
       4: ireturn

  public void setExtensibleElements(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field extensibleElements:Z
       5: return

  public boolean isExtensibleAttributes();
    Code:
       0: aload_0
       1: getfield      #14                 // Field extensibleAttributes:Z
       4: ireturn

  public void setExtensibleAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field extensibleAttributes:Z
       5: return

  public void setExtension(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #104                // Field isExtension:Z
       5: return

  public boolean isExtension();
    Code:
       0: aload_0
       1: getfield      #104                // Field isExtension:Z
       4: ireturn

  public boolean isQualifyAttributes();
    Code:
       0: aload_0
       1: getfield      #30                 // Field qualifyAttributes:Z
       4: ireturn

  public void setQualifyAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field qualifyAttributes:Z
       5: return

  public boolean isQualifyElements();
    Code:
       0: aload_0
       1: getfield      #12                 // Field qualifyElements:Z
       4: ireturn

  public void setQualifyElements(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field qualifyElements:Z
       5: return
}
