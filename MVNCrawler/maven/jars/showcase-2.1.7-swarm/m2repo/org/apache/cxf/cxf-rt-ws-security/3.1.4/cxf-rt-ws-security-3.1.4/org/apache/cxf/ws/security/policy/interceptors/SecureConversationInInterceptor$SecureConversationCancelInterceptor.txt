Compiled from "SecureConversationInInterceptor.java"
class org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor<org.apache.cxf.binding.soap.SoapMessage> {
  static final org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor INSTANCE;

  org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor();
    Code:
       0: aload_0
       1: ldc           #1                  // String post-logical
       3: invokespecial #2                  // Method org/apache/cxf/phase/AbstractPhaseInterceptor."<init>":(Ljava/lang/String;)V
       6: return

  public void handleMessage(org.apache.cxf.binding.soap.SoapMessage) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_1
       1: ldc_w         #3                  // class org/apache/cxf/ws/policy/AssertionInfoMap
       4: invokevirtual #4                  // Method org/apache/cxf/binding/soap/SoapMessage.get:(Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #3                  // class org/apache/cxf/ws/policy/AssertionInfoMap
      10: astore_2
      11: aload_2
      12: ifnonnull     16
      15: return
      16: aload_2
      17: ldc           #5                  // String SecureConversationToken
      19: invokestatic  #6                  // Method org/apache/cxf/ws/security/policy/PolicyUtils.getFirstAssertionByLocalname:(Lorg/apache/cxf/ws/policy/AssertionInfoMap;Ljava/lang/String;)Lorg/apache/cxf/ws/policy/AssertionInfo;
      22: astore_3
      23: aload_3
      24: ifnonnull     28
      27: return
      28: aload_3
      29: invokevirtual #7                  // Method org/apache/cxf/ws/policy/AssertionInfo.getAssertion:()Lorg/apache/neethi/Assertion;
      32: checkcast     #8                  // class org/apache/wss4j/policy/model/SecureConversationToken
      35: astore        4
      37: aload_0
      38: aload_1
      39: aload_2
      40: aload         4
      42: invokespecial #9                  // Method doCancel:(Lorg/apache/cxf/binding/soap/SoapMessage;Lorg/apache/cxf/ws/policy/AssertionInfoMap;Lorg/apache/wss4j/policy/model/SecureConversationToken;)V
      45: return

  private void doCancel(org.apache.cxf.binding.soap.SoapMessage, org.apache.cxf.ws.policy.AssertionInfoMap, org.apache.wss4j.policy.model.SecureConversationToken);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/apache/cxf/binding/soap/SoapMessage.getExchange:()Lorg/apache/cxf/message/Exchange;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/cxf/message/Exchange.getOutMessage:()Lorg/apache/cxf/message/Message;
       9: astore        4
      11: aload         4
      13: ldc           #12                 // String ws-security.token
      15: invokeinterface #13,  2           // InterfaceMethod org/apache/cxf/message/Message.getContextualProperty:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #14                 // class org/apache/cxf/ws/security/tokenstore/SecurityToken
      23: astore        5
      25: aload         5
      27: ifnonnull     63
      30: aload         4
      32: ldc           #15                 // String ws-security.token.id
      34: invokeinterface #13,  2           // InterfaceMethod org/apache/cxf/message/Message.getContextualProperty:(Ljava/lang/String;)Ljava/lang/Object;
      39: checkcast     #16                 // class java/lang/String
      42: astore        6
      44: aload         6
      46: ifnull        63
      49: aload         4
      51: invokestatic  #17                 // Method org/apache/cxf/ws/security/tokenstore/TokenStoreUtils.getTokenStore:(Lorg/apache/cxf/message/Message;)Lorg/apache/cxf/ws/security/tokenstore/TokenStore;
      54: aload         6
      56: invokeinterface #18,  2           // InterfaceMethod org/apache/cxf/ws/security/tokenstore/TokenStore.getToken:(Ljava/lang/String;)Lorg/apache/cxf/ws/security/tokenstore/SecurityToken;
      61: astore        5
      63: aload         4
      65: ldc           #19                 // String sct
      67: invokestatic  #20                 // Method org/apache/cxf/ws/security/trust/STSUtils.getClient:(Lorg/apache/cxf/message/Message;Ljava/lang/String;)Lorg/apache/cxf/ws/security/trust/STSClient;
      70: astore        6
      72: aload_1
      73: ldc           #21                 // String javax.xml.ws.addressing.context.inbound
      75: invokevirtual #22                 // Method org/apache/cxf/binding/soap/SoapMessage.get:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #23                 // class org/apache/cxf/ws/addressing/AddressingProperties
      81: astore        7
      83: aload         7
      85: ifnonnull     102
      88: aload         4
      90: ldc           #24                 // String javax.xml.ws.addressing.context
      92: invokeinterface #25,  2           // InterfaceMethod org/apache/cxf/message/Message.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #23                 // class org/apache/cxf/ws/addressing/AddressingProperties
     100: astore        7
     102: aload         6
     104: dup
     105: astore        8
     107: monitorenter
     108: aload         6
     110: aload_1
     111: aload_2
     112: aload_3
     113: iconst_1
     114: invokestatic  #26                 // Method org/apache/cxf/ws/security/policy/interceptors/SecureConversationTokenInterceptorProvider.setupClient:(Lorg/apache/cxf/ws/security/trust/STSClient;Lorg/apache/cxf/binding/soap/SoapMessage;Lorg/apache/cxf/ws/policy/AssertionInfoMap;Lorg/apache/wss4j/policy/model/SecureConversationToken;Z)Ljava/lang/String;
     117: pop
     118: aload         7
     120: ifnull        133
     123: aload         6
     125: aload         7
     127: invokevirtual #27                 // Method org/apache/cxf/ws/addressing/AddressingProperties.getNamespaceURI:()Ljava/lang/String;
     130: invokevirtual #28                 // Method org/apache/cxf/ws/security/trust/STSClient.setAddressingNamespace:(Ljava/lang/String;)V
     133: aload         6
     135: aload         5
     137: invokevirtual #29                 // Method org/apache/cxf/ws/security/trust/STSClient.cancelSecurityToken:(Lorg/apache/cxf/ws/security/tokenstore/SecurityToken;)Z
     140: pop
     141: aload         4
     143: invokestatic  #17                 // Method org/apache/cxf/ws/security/tokenstore/TokenStoreUtils.getTokenStore:(Lorg/apache/cxf/message/Message;)Lorg/apache/cxf/ws/security/tokenstore/TokenStore;
     146: astore        9
     148: aload         9
     150: ifnull        165
     153: aload         9
     155: aload         5
     157: invokevirtual #30                 // Method org/apache/cxf/ws/security/tokenstore/SecurityToken.getId:()Ljava/lang/String;
     160: invokeinterface #31,  2           // InterfaceMethod org/apache/cxf/ws/security/tokenstore/TokenStore.remove:(Ljava/lang/String;)V
     165: aload         4
     167: ldc           #12                 // String ws-security.token
     169: aconst_null
     170: invokeinterface #32,  3           // InterfaceMethod org/apache/cxf/message/Message.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     175: pop
     176: aload         6
     178: aconst_null
     179: checkcast     #33                 // class org/apache/wss4j/policy/model/Trust10
     182: invokevirtual #34                 // Method org/apache/cxf/ws/security/trust/STSClient.setTrust:(Lorg/apache/wss4j/policy/model/Trust10;)V
     185: aload         6
     187: aconst_null
     188: checkcast     #35                 // class org/apache/wss4j/policy/model/Trust13
     191: invokevirtual #34                 // Method org/apache/cxf/ws/security/trust/STSClient.setTrust:(Lorg/apache/wss4j/policy/model/Trust10;)V
     194: aload         6
     196: aconst_null
     197: invokevirtual #36                 // Method org/apache/cxf/ws/security/trust/STSClient.setTemplate:(Lorg/w3c/dom/Element;)V
     200: aload         6
     202: aconst_null
     203: invokevirtual #37                 // Method org/apache/cxf/ws/security/trust/STSClient.setLocation:(Ljava/lang/String;)V
     206: aload         6
     208: aconst_null
     209: invokevirtual #28                 // Method org/apache/cxf/ws/security/trust/STSClient.setAddressingNamespace:(Ljava/lang/String;)V
     212: goto          273
     215: astore        9
     217: aload         9
     219: athrow
     220: astore        9
     222: new           #40                 // class org/apache/cxf/interceptor/Fault
     225: dup
     226: aload         9
     228: invokespecial #41                 // Method org/apache/cxf/interceptor/Fault."<init>":(Ljava/lang/Throwable;)V
     231: athrow
     232: astore        10
     234: aload         6
     236: aconst_null
     237: checkcast     #33                 // class org/apache/wss4j/policy/model/Trust10
     240: invokevirtual #34                 // Method org/apache/cxf/ws/security/trust/STSClient.setTrust:(Lorg/apache/wss4j/policy/model/Trust10;)V
     243: aload         6
     245: aconst_null
     246: checkcast     #35                 // class org/apache/wss4j/policy/model/Trust13
     249: invokevirtual #34                 // Method org/apache/cxf/ws/security/trust/STSClient.setTrust:(Lorg/apache/wss4j/policy/model/Trust10;)V
     252: aload         6
     254: aconst_null
     255: invokevirtual #36                 // Method org/apache/cxf/ws/security/trust/STSClient.setTemplate:(Lorg/w3c/dom/Element;)V
     258: aload         6
     260: aconst_null
     261: invokevirtual #37                 // Method org/apache/cxf/ws/security/trust/STSClient.setLocation:(Ljava/lang/String;)V
     264: aload         6
     266: aconst_null
     267: invokevirtual #28                 // Method org/apache/cxf/ws/security/trust/STSClient.setAddressingNamespace:(Ljava/lang/String;)V
     270: aload         10
     272: athrow
     273: aload         8
     275: monitorexit
     276: goto          287
     279: astore        11
     281: aload         8
     283: monitorexit
     284: aload         11
     286: athrow
     287: return
    Exception table:
       from    to  target type
         108   176   215   Class java/lang/RuntimeException
         108   176   220   Class java/lang/Exception
         108   176   232   any
         215   234   232   any
         108   276   279   any
         279   284   279   any

  public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #42                 // class org/apache/cxf/binding/soap/SoapMessage
       5: invokevirtual #43                 // Method handleMessage:(Lorg/apache/cxf/binding/soap/SoapMessage;)V
       8: return

  static {};
    Code:
       0: new           #44                 // class org/apache/cxf/ws/security/policy/interceptors/SecureConversationInInterceptor$SecureConversationCancelInterceptor
       3: dup
       4: invokespecial #45                 // Method "<init>":()V
       7: putstatic     #46                 // Field INSTANCE:Lorg/apache/cxf/ws/security/policy/interceptors/SecureConversationInInterceptor$SecureConversationCancelInterceptor;
      10: return
}
