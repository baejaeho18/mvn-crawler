Compiled from "AbstractDelegatingLogger.java"
public abstract class org.apache.cxf.common.logging.AbstractDelegatingLogger extends java.util.logging.Logger {
  protected org.apache.cxf.common.logging.AbstractDelegatingLogger(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method java/util/logging/Logger."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: return

  public void log(java.util.logging.LogRecord);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method java/util/logging/LogRecord.getLevel:()Ljava/util/logging/Level;
       5: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       8: ifeq          16
      11: aload_0
      12: aload_1
      13: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      16: return

  public void log(java.util.logging.Level, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          23
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload_2
      14: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      17: astore_3
      18: aload_0
      19: aload_3
      20: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      23: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          42
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload_2
      14: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      17: astore        4
      19: iconst_1
      20: anewarray     #7                  // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_3
      26: aastore
      27: astore        5
      29: aload         4
      31: aload         5
      33: invokevirtual #8                  // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      36: aload_0
      37: aload         4
      39: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      42: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          31
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload_2
      14: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      17: astore        4
      19: aload         4
      21: aload_3
      22: invokevirtual #8                  // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      25: aload_0
      26: aload         4
      28: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      31: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          31
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload_2
      14: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      17: astore        4
      19: aload         4
      21: aload_3
      22: invokevirtual #9                  // Method java/util/logging/LogRecord.setThrown:(Ljava/lang/Throwable;)V
      25: aload_0
      26: aload         4
      28: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      31: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          38
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         4
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        5
      20: aload         5
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         5
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: aload_0
      33: aload         5
      35: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      38: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          56
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         4
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        6
      20: aload         6
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         6
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: iconst_1
      33: anewarray     #7                  // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload         5
      40: aastore
      41: astore        7
      43: aload         6
      45: aload         7
      47: invokevirtual #8                  // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      50: aload_0
      51: aload         6
      53: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      56: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          45
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         4
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        6
      20: aload         6
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         6
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: aload         6
      34: aload         5
      36: invokevirtual #8                  // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      39: aload_0
      40: aload         6
      42: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      45: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          45
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         4
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        6
      20: aload         6
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         6
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: aload         6
      34: aload         5
      36: invokevirtual #9                  // Method java/util/logging/LogRecord.setThrown:(Ljava/lang/Throwable;)V
      39: aload_0
      40: aload         6
      42: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      45: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          40
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         5
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        6
      20: aload         6
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         6
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: aload_0
      33: aload         6
      35: aload         4
      37: invokevirtual #12                 // Method doLog:(Ljava/util/logging/LogRecord;Ljava/lang/String;)V
      40: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          58
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         5
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        7
      20: aload         7
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         7
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: iconst_1
      33: anewarray     #7                  // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload         6
      40: aastore
      41: astore        8
      43: aload         7
      45: aload         8
      47: invokevirtual #8                  // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      50: aload_0
      51: aload         7
      53: aload         4
      55: invokevirtual #12                 // Method doLog:(Ljava/util/logging/LogRecord;Ljava/lang/String;)V
      58: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          47
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         5
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        7
      20: aload         7
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         7
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: aload         7
      34: aload         6
      36: invokevirtual #8                  // Method java/util/logging/LogRecord.setParameters:([Ljava/lang/Object;)V
      39: aload_0
      40: aload         7
      42: aload         4
      44: invokevirtual #12                 // Method doLog:(Ljava/util/logging/LogRecord;Ljava/lang/String;)V
      47: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       5: ifeq          47
       8: new           #5                  // class java/util/logging/LogRecord
      11: dup
      12: aload_1
      13: aload         5
      15: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: astore        7
      20: aload         7
      22: aload_2
      23: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      26: aload         7
      28: aload_3
      29: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      32: aload         7
      34: aload         6
      36: invokevirtual #9                  // Method java/util/logging/LogRecord.setThrown:(Ljava/lang/Throwable;)V
      39: aload_0
      40: aload         7
      42: aload         4
      44: invokevirtual #12                 // Method doLog:(Ljava/util/logging/LogRecord;Ljava/lang/String;)V
      47: return

  public void entering(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          21
      10: aload_0
      11: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      14: aload_1
      15: aload_2
      16: ldc           #14                 // String ENTRY
      18: invokevirtual #15                 // Method logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      21: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          33
      10: iconst_1
      11: anewarray     #7                  // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_3
      17: aastore
      18: astore        4
      20: aload_0
      21: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      24: aload_1
      25: aload_2
      26: ldc           #16                 // String ENTRY {0}
      28: aload         4
      30: invokevirtual #17                 // Method logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      33: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          99
      10: ldc           #14                 // String ENTRY
      12: astore        4
      14: aload_3
      15: ifnonnull     30
      18: aload_0
      19: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      22: aload_1
      23: aload_2
      24: aload         4
      26: invokevirtual #15                 // Method logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      29: return
      30: new           #18                 // class java/lang/StringBuilder
      33: dup
      34: aload         4
      36: invokespecial #19                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      39: astore        5
      41: iconst_0
      42: istore        6
      44: iload         6
      46: aload_3
      47: arraylength
      48: if_icmpge     84
      51: aload         5
      53: ldc           #20                 // String  {
      55: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: pop
      59: aload         5
      61: iload         6
      63: invokestatic  #22                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      66: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: aload         5
      72: ldc           #23                 // String }
      74: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: iinc          6, 1
      81: goto          44
      84: aload_0
      85: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      88: aload_1
      89: aload_2
      90: aload         5
      92: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: aload_3
      96: invokevirtual #17                 // Method logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      99: return

  public void exiting(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          21
      10: aload_0
      11: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      14: aload_1
      15: aload_2
      16: ldc           #25                 // String RETURN
      18: invokevirtual #15                 // Method logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      21: return

  public void exiting(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          33
      10: iconst_1
      11: anewarray     #7                  // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_3
      17: aastore
      18: astore        4
      20: aload_0
      21: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      24: aload_1
      25: aload_2
      26: ldc           #26                 // String RETURN {0}
      28: aload         4
      30: invokevirtual #17                 // Method logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      33: return

  public void throwing(java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          48
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      17: ldc           #27                 // String THROW
      19: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      22: astore        4
      24: aload         4
      26: aload_1
      27: invokevirtual #10                 // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
      30: aload         4
      32: aload_2
      33: invokevirtual #11                 // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
      36: aload         4
      38: aload_3
      39: invokevirtual #9                  // Method java/util/logging/LogRecord.setThrown:(Ljava/lang/Throwable;)V
      42: aload_0
      43: aload         4
      45: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      48: return

  public void severe(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          27
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #28                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      17: aload_1
      18: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      27: return

  public void warning(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #29                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          27
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #29                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      17: aload_1
      18: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      27: return

  public void info(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #30                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          27
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #30                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      17: aload_1
      18: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      27: return

  public void config(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #31                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          27
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #31                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      17: aload_1
      18: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      27: return

  public void fine(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #32                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          27
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #32                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      17: aload_1
      18: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      27: return

  public void finer(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          27
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #13                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      17: aload_1
      18: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      27: return

  public void finest(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #33                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       4: invokevirtual #3                  // Method isLoggable:(Ljava/util/logging/Level;)Z
       7: ifeq          27
      10: new           #5                  // class java/util/logging/LogRecord
      13: dup
      14: getstatic     #33                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      17: aload_1
      18: invokespecial #6                  // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokevirtual #4                  // Method doLog:(Ljava/util/logging/LogRecord;)V
      27: return

  public void setLevel(java.util.logging.Level) throws java.lang.SecurityException;
    Code:
       0: new           #34                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public abstract java.util.logging.Level getLevel();

  public boolean isLoggable(java.util.logging.Level);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getLevel:()Ljava/util/logging/Level;
       4: astore_2
       5: aload_1
       6: invokevirtual #37                 // Method java/util/logging/Level.intValue:()I
       9: aload_2
      10: invokevirtual #37                 // Method java/util/logging/Level.intValue:()I
      13: if_icmplt     27
      16: aload_2
      17: getstatic     #38                 // Field java/util/logging/Level.OFF:Ljava/util/logging/Level;
      20: if_acmpeq     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected boolean supportsHandlers();
    Code:
       0: iconst_0
       1: ireturn

  public synchronized void addHandler(java.util.logging.Handler) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method supportsHandlers:()Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #40                 // Method java/util/logging/Logger.addHandler:(Ljava/util/logging/Handler;)V
      12: return
      13: new           #34                 // class java/lang/UnsupportedOperationException
      16: dup
      17: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
      20: athrow

  public synchronized void removeHandler(java.util.logging.Handler) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method supportsHandlers:()Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #41                 // Method java/util/logging/Logger.removeHandler:(Ljava/util/logging/Handler;)V
      12: return
      13: new           #34                 // class java/lang/UnsupportedOperationException
      16: dup
      17: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
      20: athrow

  public synchronized java.util.logging.Handler[] getHandlers();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method supportsHandlers:()Z
       4: ifeq          12
       7: aload_0
       8: invokespecial #42                 // Method java/util/logging/Logger.getHandlers:()[Ljava/util/logging/Handler;
      11: areturn
      12: new           #34                 // class java/lang/UnsupportedOperationException
      15: dup
      16: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
      19: athrow

  public synchronized void setUseParentHandlers(boolean);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method supportsHandlers:()Z
       4: ifeq          13
       7: aload_0
       8: iload_1
       9: invokespecial #43                 // Method java/util/logging/Logger.setUseParentHandlers:(Z)V
      12: return
      13: new           #34                 // class java/lang/UnsupportedOperationException
      16: dup
      17: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
      20: athrow

  public synchronized boolean getUseParentHandlers();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method supportsHandlers:()Z
       4: ifeq          12
       7: aload_0
       8: invokespecial #44                 // Method java/util/logging/Logger.getUseParentHandlers:()Z
      11: ireturn
      12: new           #34                 // class java/lang/UnsupportedOperationException
      15: dup
      16: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
      19: athrow

  public java.util.logging.Logger getParent();
    Code:
       0: aconst_null
       1: areturn

  public void setParent(java.util.logging.Logger);
    Code:
       0: new           #34                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected void doLog(java.util.logging.LogRecord);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #45                 // Method getName:()Ljava/lang/String;
       5: invokevirtual #46                 // Method java/util/logging/LogRecord.setLoggerName:(Ljava/lang/String;)V
       8: aload_0
       9: invokevirtual #47                 // Method getResourceBundleName:()Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnull        30
      17: aload_1
      18: aload_2
      19: invokevirtual #48                 // Method java/util/logging/LogRecord.setResourceBundleName:(Ljava/lang/String;)V
      22: aload_1
      23: aload_0
      24: invokevirtual #49                 // Method getResourceBundle:()Ljava/util/ResourceBundle;
      27: invokevirtual #50                 // Method java/util/logging/LogRecord.setResourceBundle:(Ljava/util/ResourceBundle;)V
      30: aload_0
      31: aload_1
      32: invokevirtual #51                 // Method internalLog:(Ljava/util/logging/LogRecord;)V
      35: return

  protected void doLog(java.util.logging.LogRecord, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #45                 // Method getName:()Ljava/lang/String;
       5: invokevirtual #46                 // Method java/util/logging/LogRecord.setLoggerName:(Ljava/lang/String;)V
       8: aload_2
       9: ifnull        25
      12: aload_1
      13: aload_2
      14: invokevirtual #48                 // Method java/util/logging/LogRecord.setResourceBundleName:(Ljava/lang/String;)V
      17: aload_1
      18: aload_2
      19: invokestatic  #52                 // Method loadResourceBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;
      22: invokevirtual #50                 // Method java/util/logging/LogRecord.setResourceBundle:(Ljava/util/ResourceBundle;)V
      25: aload_0
      26: aload_1
      27: invokevirtual #51                 // Method internalLog:(Ljava/util/logging/LogRecord;)V
      30: return

  protected void internalLog(java.util.logging.LogRecord);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getFilter:()Ljava/util/logging/Filter;
       4: astore_2
       5: aload_2
       6: ifnull        20
       9: aload_2
      10: aload_1
      11: invokeinterface #54,  2           // InterfaceMethod java/util/logging/Filter.isLoggable:(Ljava/util/logging/LogRecord;)Z
      16: ifne          20
      19: return
      20: aload_0
      21: aload_1
      22: invokevirtual #55                 // Method formatMessage:(Ljava/util/logging/LogRecord;)Ljava/lang/String;
      25: astore_3
      26: aload_0
      27: aload_3
      28: aload_1
      29: invokevirtual #56                 // Method internalLogFormatted:(Ljava/lang/String;Ljava/util/logging/LogRecord;)V
      32: return

  protected abstract void internalLogFormatted(java.lang.String, java.util.logging.LogRecord);

  protected java.lang.String formatMessage(java.util.logging.LogRecord);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method java/util/logging/LogRecord.getMessage:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #58                 // Method java/util/logging/LogRecord.getResourceBundle:()Ljava/util/ResourceBundle;
       9: astore_3
      10: aload_3
      11: ifnull        33
      14: aload_3
      15: aload_1
      16: invokevirtual #57                 // Method java/util/logging/LogRecord.getMessage:()Ljava/lang/String;
      19: invokevirtual #59                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      22: astore_2
      23: goto          33
      26: astore        4
      28: aload_1
      29: invokevirtual #57                 // Method java/util/logging/LogRecord.getMessage:()Ljava/lang/String;
      32: astore_2
      33: aload_1
      34: invokevirtual #61                 // Method java/util/logging/LogRecord.getParameters:()[Ljava/lang/Object;
      37: astore        4
      39: aload         4
      41: ifnull        50
      44: aload         4
      46: arraylength
      47: ifne          52
      50: aload_2
      51: areturn
      52: aload_2
      53: ldc           #62                 // String {0
      55: invokevirtual #63                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      58: ifge          88
      61: aload_2
      62: ldc           #64                 // String {1
      64: invokevirtual #63                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      67: ifge          88
      70: aload_2
      71: ldc           #65                 // String {2
      73: invokevirtual #63                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      76: ifge          88
      79: aload_2
      80: ldc           #66                 // String {3
      82: invokevirtual #63                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      85: iflt          95
      88: aload_2
      89: aload         4
      91: invokestatic  #67                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      94: areturn
      95: aload_2
      96: areturn
      97: astore        4
      99: aload_2
     100: areturn
    Exception table:
       from    to  target type
          14    23    26   Class java/util/MissingResourceException
          33    51    97   Class java/lang/Exception
          52    94    97   Class java/lang/Exception
          95    96    97   Class java/lang/Exception

  static java.util.ResourceBundle loadResourceBundle(java.lang.String);
    Code:
       0: invokestatic  #69                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #70                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_1
       7: aconst_null
       8: aload_1
       9: if_acmpeq     22
      12: aload_0
      13: invokestatic  #71                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      16: aload_1
      17: invokestatic  #72                 // Method java/util/ResourceBundle.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;
      20: areturn
      21: astore_2
      22: invokestatic  #73                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      25: astore_1
      26: aconst_null
      27: aload_1
      28: if_acmpeq     41
      31: aload_0
      32: invokestatic  #71                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      35: aload_1
      36: invokestatic  #72                 // Method java/util/ResourceBundle.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;
      39: areturn
      40: astore_2
      41: aconst_null
      42: areturn
    Exception table:
       from    to  target type
          12    20    21   Class java/util/MissingResourceException
          31    39    40   Class java/util/MissingResourceException
}
