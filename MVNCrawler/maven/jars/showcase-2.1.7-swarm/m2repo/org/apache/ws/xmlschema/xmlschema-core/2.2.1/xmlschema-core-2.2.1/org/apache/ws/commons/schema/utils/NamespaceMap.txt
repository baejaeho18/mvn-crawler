Compiled from "NamespaceMap.java"
public class org.apache.ws.commons.schema.utils.NamespaceMap extends java.util.HashMap<java.lang.String, java.lang.Object> implements org.apache.ws.commons.schema.utils.NamespacePrefixList {
  private static final long serialVersionUID;

  public org.apache.ws.commons.schema.utils.NamespaceMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/HashMap."<init>":()V
       4: return

  public org.apache.ws.commons.schema.utils.NamespaceMap(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       5: return

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #3                  // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: return

  public java.lang.String[] getDeclaredPrefixes();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method keySet:()Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: aload_1
       7: invokeinterface #5,  1            // InterfaceMethod java/util/Set.size:()I
      12: anewarray     #6                  // class java/lang/String
      15: invokeinterface #7,  2            // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      20: checkcast     #8                  // class "[Ljava/lang/String;"
      23: checkcast     #8                  // class "[Ljava/lang/String;"
      26: areturn

  public java.lang.String getNamespaceURI(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String The prefix must not be null.
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: ldc           #12                 // String xml
      16: aload_1
      17: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          26
      23: ldc           #14                 // String http://www.w3.org/XML/1998/namespace
      25: areturn
      26: ldc           #15                 // String xmlns
      28: aload_1
      29: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          38
      35: ldc           #16                 // String http://www.w3.org/2000/xmlns/
      37: areturn
      38: aload_0
      39: aload_1
      40: invokevirtual #17                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: astore_2
      44: aload_2
      45: ifnonnull     53
      48: ldc           #18                 // String
      50: goto          57
      53: aload_2
      54: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
      57: areturn

  public java.lang.String getPrefix(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method entrySet:()Ljava/util/Set;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          58
      19: aload_2
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #24                 // class java/util/Map$Entry
      28: astore_3
      29: aload_3
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      35: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          55
      45: aload_3
      46: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #6                  // class java/lang/String
      54: areturn
      55: goto          10
      58: aconst_null
      59: areturn

  public java.util.Iterator<java.lang.String> getPrefixes(java.lang.String);
    Code:
       0: new           #27                 // class java/util/ArrayList
       3: dup
       4: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #20                 // Method entrySet:()Ljava/util/Set;
      12: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          72
      27: aload_3
      28: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #24                 // class java/util/Map$Entry
      36: astore        4
      38: aload         4
      40: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
      48: aload_1
      49: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          69
      55: aload_2
      56: aload         4
      58: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: goto          18
      72: aload_2
      73: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      78: areturn
}
