Compiled from "CollectionFactory.java"
public final class org.apache.ws.commons.schema.utils.CollectionFactory {
  private static final java.lang.String PROTECT_READ_ONLY_COLLECTIONS_PROP;

  private static final boolean DEFAULT_PROTECT_READ_ONLY_COLLECTIONS;

  private static final java.lang.ThreadLocal<java.lang.Boolean> PROTECT_READ_ONLY_COLLECTIONS;

  private org.apache.ws.commons.schema.utils.CollectionFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.util.List<T> getList(java.lang.Class<T>);
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
       7: invokestatic  #4                  // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
      10: areturn

  public static <T> java.util.Set<T> getSet(java.lang.Class<T>);
    Code:
       0: new           #5                  // class java/util/HashSet
       3: dup
       4: invokespecial #6                  // Method java/util/HashSet."<init>":()V
       7: invokestatic  #7                  // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      10: areturn

  private static boolean isProtected();
    Code:
       0: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
       3: invokevirtual #9                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #10                 // class java/lang/Boolean
       9: astore_0
      10: aload_0
      11: ifnonnull     18
      14: getstatic     #11                 // Field DEFAULT_PROTECT_READ_ONLY_COLLECTIONS:Z
      17: ireturn
      18: aload_0
      19: invokevirtual #12                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn

  public static void setProtected(boolean);
    Code:
       0: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
       3: iload_0
       4: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #14                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      10: return

  public static void clearProtection();
    Code:
       0: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
       3: invokevirtual #15                 // Method java/lang/ThreadLocal.remove:()V
       6: return

  public static <T> java.util.List<T> getProtectedList(java.util.List<T>);
    Code:
       0: invokestatic  #16                 // Method isProtected:()Z
       3: ifeq          11
       6: aload_0
       7: invokestatic  #17                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      10: areturn
      11: aload_0
      12: areturn

  public static <K, V> java.util.Map<K, V> getProtectedMap(java.util.Map<K, V>);
    Code:
       0: invokestatic  #16                 // Method isProtected:()Z
       3: ifeq          11
       6: aload_0
       7: invokestatic  #18                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      10: areturn
      11: aload_0
      12: areturn

  public static void withSchemaModifiable(java.lang.Runnable);
    Code:
       0: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
       3: invokevirtual #9                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #10                 // class java/lang/Boolean
       9: astore_1
      10: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
      13: getstatic     #19                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: invokevirtual #14                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      19: aload_0
      20: invokeinterface #20,  1           // InterfaceMethod java/lang/Runnable.run:()V
      25: aload_1
      26: ifnonnull     38
      29: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
      32: invokevirtual #15                 // Method java/lang/ThreadLocal.remove:()V
      35: goto          71
      38: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
      41: aload_1
      42: invokevirtual #14                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      45: goto          71
      48: astore_2
      49: aload_1
      50: ifnonnull     62
      53: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
      56: invokevirtual #15                 // Method java/lang/ThreadLocal.remove:()V
      59: goto          69
      62: getstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
      65: aload_1
      66: invokevirtual #14                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      69: aload_2
      70: athrow
      71: return
    Exception table:
       from    to  target type
          10    25    48   any
          48    49    48   any

  static {};
    Code:
       0: new           #21                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #22                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #8                  // Field PROTECT_READ_ONLY_COLLECTIONS:Ljava/lang/ThreadLocal;
      10: new           #23                 // class org/apache/ws/commons/schema/utils/CollectionFactory$1
      13: dup
      14: invokespecial #24                 // Method org/apache/ws/commons/schema/utils/CollectionFactory$1."<init>":()V
      17: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      20: checkcast     #10                 // class java/lang/Boolean
      23: invokevirtual #12                 // Method java/lang/Boolean.booleanValue:()Z
      26: putstatic     #11                 // Field DEFAULT_PROTECT_READ_ONLY_COLLECTIONS:Z
      29: return
}
