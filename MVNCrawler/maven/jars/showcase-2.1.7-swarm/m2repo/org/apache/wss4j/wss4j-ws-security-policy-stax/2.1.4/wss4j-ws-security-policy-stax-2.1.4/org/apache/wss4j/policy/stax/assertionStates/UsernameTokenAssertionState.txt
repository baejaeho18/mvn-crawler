Compiled from "UsernameTokenAssertionState.java"
public class org.apache.wss4j.policy.stax.assertionStates.UsernameTokenAssertionState extends org.apache.wss4j.policy.stax.assertionStates.TokenAssertionState {
  public org.apache.wss4j.policy.stax.assertionStates.UsernameTokenAssertionState(org.apache.wss4j.policy.model.AbstractSecurityAssertion, boolean, org.apache.wss4j.policy.stax.PolicyAsserter, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #1                  // Method org/apache/wss4j/policy/stax/assertionStates/TokenAssertionState."<init>":(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;ZLorg/apache/wss4j/policy/stax/PolicyAsserter;Z)V
       9: iload_2
      10: ifeq          140
      13: aload_0
      14: invokevirtual #2                  // Method getAssertion:()Lorg/apache/neethi/Assertion;
      17: checkcast     #3                  // class org/apache/wss4j/policy/model/UsernameToken
      20: astore        5
      22: aload         5
      24: invokevirtual #4                  // Method org/apache/wss4j/policy/model/UsernameToken.getName:()Ljavax/xml/namespace/QName;
      27: invokevirtual #5                  // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      30: astore        6
      32: aload         5
      34: invokevirtual #6                  // Method org/apache/wss4j/policy/model/UsernameToken.getPasswordType:()Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      37: ifnull        66
      40: aload_0
      41: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
      44: new           #8                  // class javax/xml/namespace/QName
      47: dup
      48: aload         6
      50: aload         5
      52: invokevirtual #6                  // Method org/apache/wss4j/policy/model/UsernameToken.getPasswordType:()Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      55: invokevirtual #9                  // Method org/apache/wss4j/policy/model/UsernameToken$PasswordType.name:()Ljava/lang/String;
      58: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      61: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
      66: aload         5
      68: invokevirtual #12                 // Method org/apache/wss4j/policy/model/UsernameToken.isCreated:()Z
      71: ifeq          86
      74: aload_0
      75: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
      78: getstatic     #13                 // Field org/apache/wss4j/policy/SP13Constants.CREATED:Ljavax/xml/namespace/QName;
      81: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
      86: aload         5
      88: invokevirtual #14                 // Method org/apache/wss4j/policy/model/UsernameToken.isNonce:()Z
      91: ifeq          106
      94: aload_0
      95: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
      98: getstatic     #15                 // Field org/apache/wss4j/policy/SP13Constants.NONCE:Ljavax/xml/namespace/QName;
     101: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     106: aload         5
     108: invokevirtual #16                 // Method org/apache/wss4j/policy/model/UsernameToken.getUsernameTokenType:()Lorg/apache/wss4j/policy/model/UsernameToken$UsernameTokenType;
     111: ifnull        140
     114: aload_0
     115: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     118: new           #8                  // class javax/xml/namespace/QName
     121: dup
     122: aload         6
     124: aload         5
     126: invokevirtual #16                 // Method org/apache/wss4j/policy/model/UsernameToken.getUsernameTokenType:()Lorg/apache/wss4j/policy/model/UsernameToken$UsernameTokenType;
     129: invokevirtual #17                 // Method org/apache/wss4j/policy/model/UsernameToken$UsernameTokenType.name:()Ljava/lang/String;
     132: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     135: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     140: return

  public org.apache.xml.security.stax.securityEvent.SecurityEventConstants$Event[] getSecurityEventType();
    Code:
       0: iconst_1
       1: anewarray     #18                 // class org/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event
       4: dup
       5: iconst_0
       6: getstatic     #19                 // Field org/apache/wss4j/stax/securityEvent/WSSecurityEventConstants.UsernameToken:Lorg/apache/xml/security/stax/securityEvent/SecurityEventConstants$Event;
       9: aastore
      10: areturn

  public boolean assertToken(org.apache.xml.security.stax.securityEvent.TokenSecurityEvent<? extends org.apache.xml.security.stax.securityToken.SecurityToken>, org.apache.wss4j.policy.model.AbstractToken) throws org.apache.wss4j.common.WSSPolicyException, org.apache.xml.security.exceptions.XMLSecurityException;
    Code:
       0: aload_1
       1: instanceof    #20                 // class org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent
       4: ifne          40
       7: new           #21                 // class org/apache/wss4j/common/WSSPolicyException
      10: dup
      11: new           #22                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #24                 // String Expected a UsernameSecurityTokenEvent but got
      20: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #29                 // Method org/apache/wss4j/common/WSSPolicyException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_1
      41: invokevirtual #30                 // Method org/apache/xml/security/stax/securityEvent/TokenSecurityEvent.getSecurityToken:()Lorg/apache/xml/security/stax/securityToken/SecurityToken;
      44: checkcast     #31                 // class org/apache/wss4j/stax/securityToken/UsernameSecurityToken
      47: astore_3
      48: aload_1
      49: checkcast     #20                 // class org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent
      52: astore        4
      54: aload_2
      55: checkcast     #3                  // class org/apache/wss4j/policy/model/UsernameToken
      58: astore        5
      60: aload_0
      61: invokevirtual #2                  // Method getAssertion:()Lorg/apache/neethi/Assertion;
      64: invokeinterface #32,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      69: invokevirtual #5                  // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      72: astore        6
      74: aload         5
      76: invokevirtual #6                  // Method org/apache/wss4j/policy/model/UsernameToken.getPasswordType:()Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      79: ifnull        252
      82: getstatic     #33                 // Field org/apache/wss4j/policy/stax/assertionStates/UsernameTokenAssertionState$1.$SwitchMap$org$apache$wss4j$policy$model$UsernameToken$PasswordType:[I
      85: aload         5
      87: invokevirtual #6                  // Method org/apache/wss4j/policy/model/UsernameToken.getPasswordType:()Lorg/apache/wss4j/policy/model/UsernameToken$PasswordType;
      90: invokevirtual #34                 // Method org/apache/wss4j/policy/model/UsernameToken$PasswordType.ordinal:()I
      93: iaload
      94: lookupswitch  { // 2
                     1: 120
                     2: 186
               default: 249
          }
     120: aload         4
     122: invokevirtual #35                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenPasswordType:()Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     125: getstatic     #36                 // Field org/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType.PASSWORD_NONE:Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     128: if_acmpeq     163
     131: aload_0
     132: ldc           #37                 // String UsernameToken contains a password but the policy prohibits it
     134: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     137: aload_0
     138: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     141: new           #8                  // class javax/xml/namespace/QName
     144: dup
     145: aload         6
     147: ldc           #39                 // String NoPassword
     149: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     152: aload_0
     153: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     156: invokeinterface #41,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Ljavax/xml/namespace/QName;Ljava/lang/String;)V
     161: iconst_0
     162: ireturn
     163: aload_0
     164: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     167: new           #8                  // class javax/xml/namespace/QName
     170: dup
     171: aload         6
     173: ldc           #39                 // String NoPassword
     175: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     178: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     183: goto          249
     186: aload         4
     188: invokevirtual #35                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenPasswordType:()Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     191: getstatic     #42                 // Field org/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType.PASSWORD_DIGEST:Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     194: if_acmpeq     229
     197: aload_0
     198: ldc           #43                 // String UsernameToken does not contain a hashed password
     200: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     203: aload_0
     204: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     207: new           #8                  // class javax/xml/namespace/QName
     210: dup
     211: aload         6
     213: ldc           #44                 // String HashPassword
     215: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     218: aload_0
     219: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     222: invokeinterface #41,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Ljavax/xml/namespace/QName;Ljava/lang/String;)V
     227: iconst_0
     228: ireturn
     229: aload_0
     230: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     233: new           #8                  // class javax/xml/namespace/QName
     236: dup
     237: aload         6
     239: ldc           #44                 // String HashPassword
     241: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     244: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     249: goto          324
     252: aload         4
     254: invokevirtual #35                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenPasswordType:()Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     257: getstatic     #36                 // Field org/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType.PASSWORD_NONE:Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     260: if_acmpne     288
     263: aload_0
     264: ldc           #45                 // String UsernameToken must contain a password
     266: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     269: aload_0
     270: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     273: aload_0
     274: invokevirtual #2                  // Method getAssertion:()Lorg/apache/neethi/Assertion;
     277: aload_0
     278: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     281: invokeinterface #46,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Lorg/apache/neethi/Assertion;Ljava/lang/String;)V
     286: iconst_0
     287: ireturn
     288: aload         4
     290: invokevirtual #35                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenPasswordType:()Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     293: getstatic     #42                 // Field org/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType.PASSWORD_DIGEST:Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     296: if_acmpne     324
     299: aload_0
     300: ldc           #47                 // String UsernameToken password must not be hashed
     302: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     305: aload_0
     306: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     309: aload_0
     310: invokevirtual #2                  // Method getAssertion:()Lorg/apache/neethi/Assertion;
     313: aload_0
     314: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     317: invokeinterface #46,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Lorg/apache/neethi/Assertion;Ljava/lang/String;)V
     322: iconst_0
     323: ireturn
     324: aload         5
     326: invokevirtual #12                 // Method org/apache/wss4j/policy/model/UsernameToken.isCreated:()Z
     329: ifeq          388
     332: aload_3
     333: invokeinterface #48,  1           // InterfaceMethod org/apache/wss4j/stax/securityToken/UsernameSecurityToken.getCreatedTime:()Ljava/lang/String;
     338: ifnull        352
     341: aload         4
     343: invokevirtual #35                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenPasswordType:()Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     346: getstatic     #49                 // Field org/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType.PASSWORD_TEXT:Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     349: if_acmpeq     376
     352: aload_0
     353: ldc           #50                 // String UsernameToken does not contain a created timestamp or password is not plain text
     355: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     358: aload_0
     359: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     362: getstatic     #13                 // Field org/apache/wss4j/policy/SP13Constants.CREATED:Ljavax/xml/namespace/QName;
     365: aload_0
     366: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     369: invokeinterface #41,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Ljavax/xml/namespace/QName;Ljava/lang/String;)V
     374: iconst_0
     375: ireturn
     376: aload_0
     377: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     380: getstatic     #13                 // Field org/apache/wss4j/policy/SP13Constants.CREATED:Ljavax/xml/namespace/QName;
     383: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     388: aload         5
     390: invokevirtual #14                 // Method org/apache/wss4j/policy/model/UsernameToken.isNonce:()Z
     393: ifeq          452
     396: aload_3
     397: invokeinterface #51,  1           // InterfaceMethod org/apache/wss4j/stax/securityToken/UsernameSecurityToken.getNonce:()[B
     402: ifnull        416
     405: aload         4
     407: invokevirtual #35                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenPasswordType:()Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     410: getstatic     #49                 // Field org/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType.PASSWORD_TEXT:Lorg/apache/wss4j/stax/ext/WSSConstants$UsernameTokenPasswordType;
     413: if_acmpeq     440
     416: aload_0
     417: ldc           #52                 // String UsernameToken does not contain a nonce or password is not plain text
     419: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     422: aload_0
     423: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     426: getstatic     #15                 // Field org/apache/wss4j/policy/SP13Constants.NONCE:Ljavax/xml/namespace/QName;
     429: aload_0
     430: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     433: invokeinterface #41,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Ljavax/xml/namespace/QName;Ljava/lang/String;)V
     438: iconst_0
     439: ireturn
     440: aload_0
     441: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     444: getstatic     #15                 // Field org/apache/wss4j/policy/SP13Constants.NONCE:Ljavax/xml/namespace/QName;
     447: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     452: aload         5
     454: invokevirtual #16                 // Method org/apache/wss4j/policy/model/UsernameToken.getUsernameTokenType:()Lorg/apache/wss4j/policy/model/UsernameToken$UsernameTokenType;
     457: ifnull        649
     460: getstatic     #53                 // Field org/apache/wss4j/policy/stax/assertionStates/UsernameTokenAssertionState$1.$SwitchMap$org$apache$wss4j$policy$model$UsernameToken$UsernameTokenType:[I
     463: aload         5
     465: invokevirtual #16                 // Method org/apache/wss4j/policy/model/UsernameToken.getUsernameTokenType:()Lorg/apache/wss4j/policy/model/UsernameToken$UsernameTokenType;
     468: invokevirtual #54                 // Method org/apache/wss4j/policy/model/UsernameToken$UsernameTokenType.ordinal:()I
     471: iaload
     472: lookupswitch  { // 2
                     1: 500
                     2: 576
               default: 649
          }
     500: aload         4
     502: invokevirtual #55                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenProfile:()Ljava/lang/String;
     505: ifnull        553
     508: aload         4
     510: invokevirtual #55                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenProfile:()Ljava/lang/String;
     513: ldc           #56                 // String http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0
     515: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     518: ifeq          553
     521: aload_0
     522: ldc           #58                 // String Policy enforces UsernameToken profile 1.0 but we got 1.1
     524: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     527: aload_0
     528: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     531: new           #8                  // class javax/xml/namespace/QName
     534: dup
     535: aload         6
     537: ldc           #59                 // String WssUsernameToken10
     539: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     542: aload_0
     543: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     546: invokeinterface #41,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Ljavax/xml/namespace/QName;Ljava/lang/String;)V
     551: iconst_0
     552: ireturn
     553: aload_0
     554: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     557: new           #8                  // class javax/xml/namespace/QName
     560: dup
     561: aload         6
     563: ldc           #59                 // String WssUsernameToken10
     565: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     568: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     573: goto          649
     576: aload         4
     578: invokevirtual #55                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenProfile:()Ljava/lang/String;
     581: ifnull        629
     584: aload         4
     586: invokevirtual #55                 // Method org/apache/wss4j/stax/securityEvent/UsernameTokenSecurityEvent.getUsernameTokenProfile:()Ljava/lang/String;
     589: ldc           #56                 // String http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0
     591: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     594: ifne          629
     597: aload_0
     598: ldc           #60                 // String Policy enforces UsernameToken profile 1.1 but we got 1.0
     600: invokevirtual #38                 // Method setErrorMessage:(Ljava/lang/String;)V
     603: aload_0
     604: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     607: new           #8                  // class javax/xml/namespace/QName
     610: dup
     611: aload         6
     613: ldc           #61                 // String WssUsernameToken11
     615: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     618: aload_0
     619: invokevirtual #40                 // Method getErrorMessage:()Ljava/lang/String;
     622: invokeinterface #41,  3           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.unassertPolicy:(Ljavax/xml/namespace/QName;Ljava/lang/String;)V
     627: iconst_0
     628: ireturn
     629: aload_0
     630: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     633: new           #8                  // class javax/xml/namespace/QName
     636: dup
     637: aload         6
     639: ldc           #61                 // String WssUsernameToken11
     641: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     644: invokeinterface #11,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Ljavax/xml/namespace/QName;)V
     649: aload_0
     650: invokevirtual #7                  // Method getPolicyAsserter:()Lorg/apache/wss4j/policy/stax/PolicyAsserter;
     653: aload_0
     654: invokevirtual #2                  // Method getAssertion:()Lorg/apache/neethi/Assertion;
     657: invokeinterface #62,  2           // InterfaceMethod org/apache/wss4j/policy/stax/PolicyAsserter.assertPolicy:(Lorg/apache/neethi/Assertion;)V
     662: iconst_1
     663: ireturn
}
