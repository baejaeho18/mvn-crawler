Compiled from "HttpsTokenBuilder.java"
public class org.apache.wss4j.policy.builders.HttpsTokenBuilder implements org.apache.neethi.builders.AssertionBuilder<org.w3c.dom.Element> {
  public org.apache.wss4j.policy.builders.HttpsTokenBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.neethi.Assertion build(org.w3c.dom.Element, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/w3c/dom/Element.getNamespaceURI:()Ljava/lang/String;
       6: invokestatic  #3                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPVersion:(Ljava/lang/String;)Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       9: astore_3
      10: aload_1
      11: aload_3
      12: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      15: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants.getIncludeToken:()Ljavax/xml/namespace/QName;
      18: invokestatic  #6                  // Method org/apache/wss4j/policy/SPUtils.getAttribute:(Lorg/w3c/dom/Element;Ljavax/xml/namespace/QName;)Ljava/lang/String;
      21: astore        4
      23: aload_1
      24: aload_3
      25: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      28: invokevirtual #7                  // Method org/apache/wss4j/policy/SPConstants.getIssuer:()Ljavax/xml/namespace/QName;
      31: invokestatic  #8                  // Method org/apache/wss4j/policy/SPUtils.getFirstChildElement:(Lorg/w3c/dom/Node;Ljavax/xml/namespace/QName;)Lorg/w3c/dom/Element;
      34: astore        5
      36: aload_3
      37: getstatic     #9                  // Field org/apache/wss4j/policy/SPConstants$SPVersion.SP11:Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      40: if_acmpne     58
      43: aload         5
      45: ifnull        58
      48: new           #10                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #11                 // String Invalid Policy
      54: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_1
      59: aload_3
      60: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      63: invokevirtual #13                 // Method org/apache/wss4j/policy/SPConstants.getIssuerName:()Ljavax/xml/namespace/QName;
      66: invokestatic  #14                 // Method org/apache/wss4j/policy/SPUtils.getFirstChildElementText:(Lorg/w3c/dom/Node;Ljavax/xml/namespace/QName;)Ljava/lang/String;
      69: astore        6
      71: aload_3
      72: getstatic     #9                  // Field org/apache/wss4j/policy/SPConstants$SPVersion.SP11:Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      75: if_acmpne     93
      78: aload         6
      80: ifnull        93
      83: new           #10                 // class java/lang/IllegalArgumentException
      86: dup
      87: ldc           #11                 // String Invalid Policy
      89: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_1
      94: aload_3
      95: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      98: invokevirtual #15                 // Method org/apache/wss4j/policy/SPConstants.getClaims:()Ljavax/xml/namespace/QName;
     101: invokestatic  #8                  // Method org/apache/wss4j/policy/SPUtils.getFirstChildElement:(Lorg/w3c/dom/Node;Ljavax/xml/namespace/QName;)Lorg/w3c/dom/Element;
     104: astore        7
     106: aload_1
     107: invokestatic  #16                 // Method org/apache/wss4j/policy/SPUtils.getFirstPolicyChildElement:(Lorg/w3c/dom/Element;)Lorg/w3c/dom/Element;
     110: astore        8
     112: aload         8
     114: ifnonnull     129
     117: new           #17                 // class org/apache/neethi/Policy
     120: dup
     121: invokespecial #18                 // Method org/apache/neethi/Policy."<init>":()V
     124: astore        9
     126: goto          142
     129: aload_2
     130: invokeinterface #19,  1           // InterfaceMethod org/apache/neethi/AssertionBuilderFactory.getPolicyEngine:()Lorg/apache/neethi/PolicyBuilder;
     135: aload         8
     137: invokevirtual #20                 // Method org/apache/neethi/PolicyBuilder.getPolicy:(Lorg/w3c/dom/Element;)Lorg/apache/neethi/Policy;
     140: astore        9
     142: iconst_0
     143: istore        10
     145: aload_3
     146: getstatic     #9                  // Field org/apache/wss4j/policy/SPConstants$SPVersion.SP11:Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     149: if_acmpne     181
     152: aload_1
     153: new           #21                 // class javax/xml/namespace/QName
     156: dup
     157: aconst_null
     158: ldc           #22                 // String RequireClientCertificate
     160: invokespecial #23                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     163: invokestatic  #6                  // Method org/apache/wss4j/policy/SPUtils.getAttribute:(Lorg/w3c/dom/Element;Ljavax/xml/namespace/QName;)Ljava/lang/String;
     166: astore        11
     168: ldc           #24                 // String true
     170: aload         11
     172: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     175: ifeq          181
     178: iconst_1
     179: istore        10
     181: new           #26                 // class org/apache/wss4j/policy/model/HttpsToken
     184: dup
     185: aload_3
     186: aload_3
     187: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     190: aload         4
     192: invokevirtual #27                 // Method org/apache/wss4j/policy/SPConstants.getInclusionFromAttributeValue:(Ljava/lang/String;)Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;
     195: aload         5
     197: aload         6
     199: aload         7
     201: aload         9
     203: iload         10
     205: invokespecial #28                 // Method org/apache/wss4j/policy/model/HttpsToken."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;Lorg/w3c/dom/Element;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/apache/neethi/Policy;Z)V
     208: astore        11
     210: aload         11
     212: aload_1
     213: invokestatic  #29                 // Method org/apache/wss4j/policy/SPUtils.isOptional:(Lorg/w3c/dom/Element;)Z
     216: invokevirtual #30                 // Method org/apache/wss4j/policy/model/HttpsToken.setOptional:(Z)V
     219: aload         11
     221: aload_1
     222: invokestatic  #31                 // Method org/apache/wss4j/policy/SPUtils.isIgnorable:(Lorg/w3c/dom/Element;)Z
     225: invokevirtual #32                 // Method org/apache/wss4j/policy/model/HttpsToken.setIgnorable:(Z)V
     228: aload         11
     230: areturn

  public javax.xml.namespace.QName[] getKnownElements();
    Code:
       0: iconst_2
       1: anewarray     #21                 // class javax/xml/namespace/QName
       4: dup
       5: iconst_0
       6: getstatic     #33                 // Field org/apache/wss4j/policy/SP13Constants.HTTPS_TOKEN:Ljavax/xml/namespace/QName;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #34                 // Field org/apache/wss4j/policy/SP11Constants.HTTPS_TOKEN:Ljavax/xml/namespace/QName;
      15: aastore
      16: areturn

  public org.apache.neethi.Assertion build(java.lang.Object, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class org/w3c/dom/Element
       5: aload_2
       6: invokevirtual #36                 // Method build:(Lorg/w3c/dom/Element;Lorg/apache/neethi/AssertionBuilderFactory;)Lorg/apache/neethi/Assertion;
       9: areturn
}
