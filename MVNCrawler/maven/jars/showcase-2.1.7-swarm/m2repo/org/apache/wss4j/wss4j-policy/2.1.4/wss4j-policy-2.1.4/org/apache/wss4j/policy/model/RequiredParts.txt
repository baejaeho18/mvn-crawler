Compiled from "RequiredParts.java"
public class org.apache.wss4j.policy.model.RequiredParts extends org.apache.wss4j.policy.model.AbstractSecurityAssertion {
  private final java.util.List<org.apache.wss4j.policy.model.Header> headers;

  public org.apache.wss4j.policy.model.RequiredParts(org.apache.wss4j.policy.SPConstants$SPVersion, java.util.List<org.apache.wss4j.policy.model.Header>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field headers:Ljava/util/List;
      16: aload_0
      17: getfield      #4                  // Field headers:Ljava/util/List;
      20: aload_2
      21: invokeinterface #5,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      26: pop
      27: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #7                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #8                  // Method org/apache/wss4j/policy/SPConstants.getRequiredParts:()Ljavax/xml/namespace/QName;
      10: areturn

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #9                  // Method getName:()Ljavax/xml/namespace/QName;
       5: invokevirtual #10                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #9                  // Method getName:()Ljavax/xml/namespace/QName;
      12: invokevirtual #11                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      15: aload_0
      16: invokevirtual #9                  // Method getName:()Ljavax/xml/namespace/QName;
      19: invokevirtual #12                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      22: invokeinterface #13,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeStartElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: aload_1
      28: aload_0
      29: invokevirtual #9                  // Method getName:()Ljavax/xml/namespace/QName;
      32: invokevirtual #10                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      35: aload_0
      36: invokevirtual #9                  // Method getName:()Ljavax/xml/namespace/QName;
      39: invokevirtual #12                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      42: invokeinterface #14,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeNamespace:(Ljava/lang/String;Ljava/lang/String;)V
      47: aload_0
      48: invokevirtual #15                 // Method isNormalized:()Z
      51: ifne          86
      54: aload_0
      55: invokevirtual #16                 // Method isOptional:()Z
      58: ifeq          86
      61: aload_1
      62: ldc           #17                 // String wsp
      64: aload_1
      65: invokeinterface #18,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
      70: ldc           #17                 // String wsp
      72: invokeinterface #19,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
      77: ldc           #20                 // String Optional
      79: ldc           #21                 // String true
      81: invokeinterface #22,  5           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      86: aload_0
      87: invokevirtual #23                 // Method isIgnorable:()Z
      90: ifeq          118
      93: aload_1
      94: ldc           #17                 // String wsp
      96: aload_1
      97: invokeinterface #18,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
     102: ldc           #17                 // String wsp
     104: invokeinterface #19,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
     109: ldc           #24                 // String Ignorable
     111: ldc           #21                 // String true
     113: invokeinterface #22,  5           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     118: iconst_0
     119: istore_2
     120: iload_2
     121: aload_0
     122: invokevirtual #25                 // Method getHeaders:()Ljava/util/List;
     125: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
     130: if_icmpge     217
     133: aload_0
     134: invokevirtual #25                 // Method getHeaders:()Ljava/util/List;
     137: iload_2
     138: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     143: checkcast     #28                 // class org/apache/wss4j/policy/model/Header
     146: astore_3
     147: aload_0
     148: invokevirtual #6                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     151: invokevirtual #7                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     154: invokevirtual #29                 // Method org/apache/wss4j/policy/SPConstants.getHeader:()Ljavax/xml/namespace/QName;
     157: astore        4
     159: aload_1
     160: aload         4
     162: invokevirtual #10                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     165: aload         4
     167: invokevirtual #11                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     170: aload         4
     172: invokevirtual #12                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     175: invokeinterface #30,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEmptyElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     180: aload_3
     181: invokevirtual #31                 // Method org/apache/wss4j/policy/model/Header.getName:()Ljava/lang/String;
     184: ifnull        199
     187: aload_1
     188: ldc           #32                 // String Name
     190: aload_3
     191: invokevirtual #31                 // Method org/apache/wss4j/policy/model/Header.getName:()Ljava/lang/String;
     194: invokeinterface #33,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     199: aload_1
     200: ldc           #34                 // String Namespace
     202: aload_3
     203: invokevirtual #35                 // Method org/apache/wss4j/policy/model/Header.getNamespace:()Ljava/lang/String;
     206: invokeinterface #33,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     211: iinc          2, 1
     214: goto          120
     217: aload_1
     218: invokeinterface #36,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEndElement:()V
     223: return

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #37                 // class org/apache/wss4j/policy/model/RequiredParts
       3: dup
       4: aload_0
       5: invokevirtual #6                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_0
       9: invokevirtual #25                 // Method getHeaders:()Ljava/util/List;
      12: invokespecial #38                 // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Ljava/util/List;)V
      15: areturn

  public java.util.List<org.apache.wss4j.policy.model.Header> getHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headers:Ljava/util/List;
       4: areturn

  protected void addHeader(org.apache.wss4j.policy.model.Header);
    Code:
       0: aload_0
       1: getfield      #4                  // Field headers:Ljava/util/List;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return
}
