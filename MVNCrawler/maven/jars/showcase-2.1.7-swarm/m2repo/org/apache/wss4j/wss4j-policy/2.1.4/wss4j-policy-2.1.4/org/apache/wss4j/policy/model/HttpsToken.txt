Compiled from "HttpsToken.java"
public class org.apache.wss4j.policy.model.HttpsToken extends org.apache.wss4j.policy.model.AbstractToken {
  private org.apache.wss4j.policy.model.HttpsToken$AuthenticationType authenticationType;

  public org.apache.wss4j.policy.model.HttpsToken(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.wss4j.policy.SPConstants$IncludeTokenType, org.w3c.dom.Element, java.lang.String, org.w3c.dom.Element, org.apache.neethi.Policy, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractToken."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;Lorg/w3c/dom/Element;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/apache/neethi/Policy;)V
      13: aload_0
      14: aload         6
      16: aload_0
      17: invokevirtual #2                  // Method parseNestedPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/HttpsToken;)V
      20: iload         7
      22: ifeq          32
      25: aload_0
      26: getstatic     #3                  // Field org/apache/wss4j/policy/model/HttpsToken$AuthenticationType.RequireClientCertificate:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      29: invokevirtual #4                  // Method setAuthenticationType:(Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;)V
      32: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #6                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #7                  // Method org/apache/wss4j/policy/SPConstants.getHttpsToken:()Ljavax/xml/namespace/QName;
      10: areturn

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: getfield      #8                  // Field authenticationType:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
       4: getstatic     #3                  // Field org/apache/wss4j/policy/model/HttpsToken$AuthenticationType.RequireClientCertificate:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_2
      16: new           #9                  // class org/apache/wss4j/policy/model/HttpsToken
      19: dup
      20: aload_0
      21: invokevirtual #5                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      24: aload_0
      25: invokevirtual #10                 // Method getIncludeTokenType:()Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;
      28: aload_0
      29: invokevirtual #11                 // Method getIssuer:()Lorg/w3c/dom/Element;
      32: aload_0
      33: invokevirtual #12                 // Method getIssuerName:()Ljava/lang/String;
      36: aload_0
      37: invokevirtual #13                 // Method getClaims:()Lorg/w3c/dom/Element;
      40: aload_1
      41: iload_2
      42: invokespecial #14                 // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;Lorg/w3c/dom/Element;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/apache/neethi/Policy;Z)V
      45: areturn

  protected void parseNestedPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.HttpsToken);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          110
      14: aload_3
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #18                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     110
      40: aload         4
      42: iload         5
      44: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #21                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #22,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: aload         7
      68: invokestatic  #24                 // Method org/apache/wss4j/policy/model/HttpsToken$AuthenticationType.lookUp:(Ljava/lang/String;)Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      71: astore        8
      73: aload         8
      75: ifnull        104
      78: aload_2
      79: invokevirtual #25                 // Method getAuthenticationType:()Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      82: ifnull        95
      85: new           #26                 // class java/lang/IllegalArgumentException
      88: dup
      89: ldc           #27                 // String Invalid Policy
      91: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_2
      96: aload         8
      98: invokevirtual #4                  // Method setAuthenticationType:(Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;)V
     101: goto          104
     104: iinc          5, 1
     107: goto          28
     110: return

  public org.apache.wss4j.policy.model.HttpsToken$AuthenticationType getAuthenticationType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field authenticationType:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
       4: areturn

  protected void setAuthenticationType(org.apache.wss4j.policy.model.HttpsToken$AuthenticationType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field authenticationType:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
       5: return
}
