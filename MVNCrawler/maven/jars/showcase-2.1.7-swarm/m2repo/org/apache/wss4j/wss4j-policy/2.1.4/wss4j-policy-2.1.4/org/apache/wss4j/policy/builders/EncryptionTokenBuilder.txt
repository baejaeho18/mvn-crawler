Compiled from "EncryptionTokenBuilder.java"
public class org.apache.wss4j.policy.builders.EncryptionTokenBuilder implements org.apache.neethi.builders.AssertionBuilder<org.w3c.dom.Element> {
  public org.apache.wss4j.policy.builders.EncryptionTokenBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.neethi.Assertion build(org.w3c.dom.Element, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/w3c/dom/Element.getNamespaceURI:()Ljava/lang/String;
       6: invokestatic  #3                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPVersion:(Ljava/lang/String;)Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       9: astore_3
      10: aload_1
      11: invokestatic  #4                  // Method org/apache/wss4j/policy/SPUtils.getFirstPolicyChildElement:(Lorg/w3c/dom/Element;)Lorg/w3c/dom/Element;
      14: astore        4
      16: aload         4
      18: ifnull        35
      21: aload_2
      22: invokeinterface #5,  1            // InterfaceMethod org/apache/neethi/AssertionBuilderFactory.getPolicyEngine:()Lorg/apache/neethi/PolicyBuilder;
      27: aload         4
      29: invokevirtual #6                  // Method org/apache/neethi/PolicyBuilder.getPolicy:(Lorg/w3c/dom/Element;)Lorg/apache/neethi/Policy;
      32: goto          42
      35: new           #7                  // class org/apache/neethi/Policy
      38: dup
      39: invokespecial #8                  // Method org/apache/neethi/Policy."<init>":()V
      42: astore        5
      44: new           #9                  // class org/apache/wss4j/policy/model/EncryptionToken
      47: dup
      48: aload_3
      49: aload         5
      51: invokespecial #10                 // Method org/apache/wss4j/policy/model/EncryptionToken."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
      54: astore        6
      56: aload         6
      58: aload_1
      59: invokestatic  #11                 // Method org/apache/wss4j/policy/SPUtils.isOptional:(Lorg/w3c/dom/Element;)Z
      62: invokevirtual #12                 // Method org/apache/wss4j/policy/model/EncryptionToken.setOptional:(Z)V
      65: aload         6
      67: aload_1
      68: invokestatic  #13                 // Method org/apache/wss4j/policy/SPUtils.isIgnorable:(Lorg/w3c/dom/Element;)Z
      71: invokevirtual #14                 // Method org/apache/wss4j/policy/model/EncryptionToken.setIgnorable:(Z)V
      74: aload         6
      76: areturn

  public javax.xml.namespace.QName[] getKnownElements();
    Code:
       0: iconst_2
       1: anewarray     #15                 // class javax/xml/namespace/QName
       4: dup
       5: iconst_0
       6: getstatic     #16                 // Field org/apache/wss4j/policy/SP13Constants.ENCRYPTION_TOKEN:Ljavax/xml/namespace/QName;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #17                 // Field org/apache/wss4j/policy/SP11Constants.ENCRYPTION_TOKEN:Ljavax/xml/namespace/QName;
      15: aastore
      16: areturn

  public org.apache.neethi.Assertion build(java.lang.Object, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class org/w3c/dom/Element
       5: aload_2
       6: invokevirtual #19                 // Method build:(Lorg/w3c/dom/Element;Lorg/apache/neethi/AssertionBuilderFactory;)Lorg/apache/neethi/Assertion;
       9: areturn
}
