Compiled from "SpnegoContextTokenBuilder.java"
public class org.apache.wss4j.policy.builders.SpnegoContextTokenBuilder implements org.apache.neethi.builders.AssertionBuilder<org.w3c.dom.Element> {
  public org.apache.wss4j.policy.builders.SpnegoContextTokenBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.neethi.Assertion build(org.w3c.dom.Element, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/w3c/dom/Element.getNamespaceURI:()Ljava/lang/String;
       6: invokestatic  #3                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPVersion:(Ljava/lang/String;)Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       9: astore_3
      10: aload_1
      11: aload_3
      12: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      15: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants.getIncludeToken:()Ljavax/xml/namespace/QName;
      18: invokestatic  #6                  // Method org/apache/wss4j/policy/SPUtils.getAttribute:(Lorg/w3c/dom/Element;Ljavax/xml/namespace/QName;)Ljava/lang/String;
      21: astore        4
      23: aload_1
      24: aload_3
      25: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      28: invokevirtual #7                  // Method org/apache/wss4j/policy/SPConstants.getIssuer:()Ljavax/xml/namespace/QName;
      31: invokestatic  #8                  // Method org/apache/wss4j/policy/SPUtils.getFirstChildElement:(Lorg/w3c/dom/Node;Ljavax/xml/namespace/QName;)Lorg/w3c/dom/Element;
      34: astore        5
      36: aload_1
      37: aload_3
      38: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      41: invokevirtual #9                  // Method org/apache/wss4j/policy/SPConstants.getIssuerName:()Ljavax/xml/namespace/QName;
      44: invokestatic  #10                 // Method org/apache/wss4j/policy/SPUtils.getFirstChildElementText:(Lorg/w3c/dom/Node;Ljavax/xml/namespace/QName;)Ljava/lang/String;
      47: astore        6
      49: aload_3
      50: getstatic     #11                 // Field org/apache/wss4j/policy/SPConstants$SPVersion.SP11:Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      53: if_acmpne     71
      56: aload         6
      58: ifnull        71
      61: new           #12                 // class java/lang/IllegalArgumentException
      64: dup
      65: ldc           #13                 // String Invalid Policy
      67: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_1
      72: aload_3
      73: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      76: invokevirtual #15                 // Method org/apache/wss4j/policy/SPConstants.getClaims:()Ljavax/xml/namespace/QName;
      79: invokestatic  #8                  // Method org/apache/wss4j/policy/SPUtils.getFirstChildElement:(Lorg/w3c/dom/Node;Ljavax/xml/namespace/QName;)Lorg/w3c/dom/Element;
      82: astore        7
      84: aload_1
      85: invokestatic  #16                 // Method org/apache/wss4j/policy/SPUtils.getFirstPolicyChildElement:(Lorg/w3c/dom/Element;)Lorg/w3c/dom/Element;
      88: astore        8
      90: aload         8
      92: ifnonnull     105
      95: new           #12                 // class java/lang/IllegalArgumentException
      98: dup
      99: ldc           #17                 // String sp:SpnegoContextToken must have an inner wsp:Policy element
     101: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_2
     106: invokeinterface #18,  1           // InterfaceMethod org/apache/neethi/AssertionBuilderFactory.getPolicyEngine:()Lorg/apache/neethi/PolicyBuilder;
     111: aload         8
     113: invokevirtual #19                 // Method org/apache/neethi/PolicyBuilder.getPolicy:(Lorg/w3c/dom/Element;)Lorg/apache/neethi/Policy;
     116: astore        9
     118: new           #20                 // class org/apache/wss4j/policy/model/SpnegoContextToken
     121: dup
     122: aload_3
     123: aload_3
     124: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     127: aload         4
     129: invokevirtual #21                 // Method org/apache/wss4j/policy/SPConstants.getInclusionFromAttributeValue:(Ljava/lang/String;)Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;
     132: aload         5
     134: aload         6
     136: aload         7
     138: aload         9
     140: invokespecial #22                 // Method org/apache/wss4j/policy/model/SpnegoContextToken."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;Lorg/w3c/dom/Element;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/apache/neethi/Policy;)V
     143: astore        10
     145: aload         10
     147: aload_1
     148: invokestatic  #23                 // Method org/apache/wss4j/policy/SPUtils.isOptional:(Lorg/w3c/dom/Element;)Z
     151: invokevirtual #24                 // Method org/apache/wss4j/policy/model/SpnegoContextToken.setOptional:(Z)V
     154: aload         10
     156: aload_1
     157: invokestatic  #25                 // Method org/apache/wss4j/policy/SPUtils.isIgnorable:(Lorg/w3c/dom/Element;)Z
     160: invokevirtual #26                 // Method org/apache/wss4j/policy/model/SpnegoContextToken.setIgnorable:(Z)V
     163: aload         10
     165: areturn

  public javax.xml.namespace.QName[] getKnownElements();
    Code:
       0: iconst_2
       1: anewarray     #27                 // class javax/xml/namespace/QName
       4: dup
       5: iconst_0
       6: getstatic     #28                 // Field org/apache/wss4j/policy/SP13Constants.SPNEGO_CONTEXT_TOKEN:Ljavax/xml/namespace/QName;
       9: aastore
      10: dup
      11: iconst_1
      12: getstatic     #29                 // Field org/apache/wss4j/policy/SP11Constants.SPNEGO_CONTEXT_TOKEN:Ljavax/xml/namespace/QName;
      15: aastore
      16: areturn

  public org.apache.neethi.Assertion build(java.lang.Object, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/w3c/dom/Element
       5: aload_2
       6: invokevirtual #31                 // Method build:(Lorg/w3c/dom/Element;Lorg/apache/neethi/AssertionBuilderFactory;)Lorg/apache/neethi/Assertion;
       9: areturn
}
