Compiled from "SupportingTokens.java"
public class org.apache.wss4j.policy.model.SupportingTokens extends org.apache.wss4j.policy.model.AbstractSecurityAssertion implements org.apache.neethi.PolicyContainingAssertion {
  private javax.xml.namespace.QName supportingTokenType;

  private final java.util.List<org.apache.wss4j.policy.model.AbstractToken> tokens;

  private org.apache.wss4j.policy.model.AlgorithmSuite algorithmSuite;

  private org.apache.wss4j.policy.model.SignedParts signedParts;

  private org.apache.wss4j.policy.model.SignedElements signedElements;

  private org.apache.wss4j.policy.model.EncryptedParts encryptedParts;

  private org.apache.wss4j.policy.model.EncryptedElements encryptedElements;

  private org.apache.neethi.Policy nestedPolicy;

  public org.apache.wss4j.policy.model.SupportingTokens(org.apache.wss4j.policy.SPConstants$SPVersion, javax.xml.namespace.QName, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field tokens:Ljava/util/List;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field supportingTokenType:Ljavax/xml/namespace/QName;
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field nestedPolicy:Lorg/apache/neethi/Policy;
      26: aload_0
      27: aload_3
      28: aload_0
      29: invokevirtual #7                  // Method parseNestedPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/SupportingTokens;)V
      32: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field supportingTokenType:Ljavax/xml/namespace/QName;
       4: areturn

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #8                  // Method getPolicy:()Lorg/apache/neethi/Policy;
       6: invokespecial #9                  // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion.serialize:(Ljavax/xml/stream/XMLStreamWriter;Lorg/apache/neethi/Policy;)V
       9: return

  public org.apache.neethi.PolicyComponent normalize();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #8                  // Method getPolicy:()Lorg/apache/neethi/Policy;
       5: invokespecial #10                 // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion.normalize:(Lorg/apache/neethi/Policy;)Lorg/apache/neethi/PolicyComponent;
       8: areturn

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #11                 // class org/apache/wss4j/policy/model/SupportingTokens
       3: dup
       4: aload_0
       5: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_0
       9: invokevirtual #13                 // Method getName:()Ljavax/xml/namespace/QName;
      12: aload_1
      13: invokespecial #14                 // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Ljavax/xml/namespace/QName;Lorg/apache/neethi/Policy;)V
      16: areturn

  public org.apache.neethi.Policy getPolicy();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nestedPolicy:Lorg/apache/neethi/Policy;
       4: areturn

  protected void parseNestedPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.SupportingTokens);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          469
      14: aload_3
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #18                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     469
      40: aload         4
      42: iload         5
      44: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #21                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #22,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: aload         6
      68: invokeinterface #22,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      73: invokevirtual #24                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      76: astore        8
      78: aload         6
      80: instanceof    #25                 // class org/apache/wss4j/policy/model/AbstractToken
      83: ifeq          108
      86: aload         6
      88: checkcast     #25                 // class org/apache/wss4j/policy/model/AbstractToken
      91: astore        9
      93: aload_2
      94: aload         9
      96: invokevirtual #26                 // Method addToken:(Lorg/apache/wss4j/policy/model/AbstractToken;)V
      99: aload         9
     101: aload_2
     102: invokevirtual #27                 // Method org/apache/wss4j/policy/model/AbstractToken.setParentAssertion:(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;)V
     105: goto          463
     108: aload_0
     109: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     112: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     115: invokevirtual #29                 // Method org/apache/wss4j/policy/SPConstants.getAlgorithmSuite:()Ljavax/xml/namespace/QName;
     118: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     121: aload         7
     123: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     126: ifeq          179
     129: aload_0
     130: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     133: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     136: invokevirtual #29                 // Method org/apache/wss4j/policy/SPConstants.getAlgorithmSuite:()Ljavax/xml/namespace/QName;
     139: invokevirtual #24                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     142: aload         8
     144: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     147: ifeq          179
     150: aload_2
     151: invokevirtual #31                 // Method getAlgorithmSuite:()Lorg/apache/wss4j/policy/model/AlgorithmSuite;
     154: ifnull        167
     157: new           #32                 // class java/lang/IllegalArgumentException
     160: dup
     161: ldc           #33                 // String Invalid Policy
     163: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     166: athrow
     167: aload_2
     168: aload         6
     170: checkcast     #35                 // class org/apache/wss4j/policy/model/AlgorithmSuite
     173: invokevirtual #36                 // Method setAlgorithmSuite:(Lorg/apache/wss4j/policy/model/AlgorithmSuite;)V
     176: goto          463
     179: aload_0
     180: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     183: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     186: invokevirtual #37                 // Method org/apache/wss4j/policy/SPConstants.getSignedParts:()Ljavax/xml/namespace/QName;
     189: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     192: aload         7
     194: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     197: ifeq          250
     200: aload_0
     201: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     204: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     207: invokevirtual #37                 // Method org/apache/wss4j/policy/SPConstants.getSignedParts:()Ljavax/xml/namespace/QName;
     210: invokevirtual #24                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     213: aload         8
     215: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     218: ifeq          250
     221: aload_2
     222: invokevirtual #38                 // Method getSignedParts:()Lorg/apache/wss4j/policy/model/SignedParts;
     225: ifnull        238
     228: new           #32                 // class java/lang/IllegalArgumentException
     231: dup
     232: ldc           #33                 // String Invalid Policy
     234: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     237: athrow
     238: aload_2
     239: aload         6
     241: checkcast     #39                 // class org/apache/wss4j/policy/model/SignedParts
     244: invokevirtual #40                 // Method setSignedParts:(Lorg/apache/wss4j/policy/model/SignedParts;)V
     247: goto          463
     250: aload_0
     251: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     254: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     257: invokevirtual #41                 // Method org/apache/wss4j/policy/SPConstants.getSignedElements:()Ljavax/xml/namespace/QName;
     260: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     263: aload         7
     265: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     268: ifeq          321
     271: aload_0
     272: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     275: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     278: invokevirtual #41                 // Method org/apache/wss4j/policy/SPConstants.getSignedElements:()Ljavax/xml/namespace/QName;
     281: invokevirtual #24                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     284: aload         8
     286: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     289: ifeq          321
     292: aload_2
     293: invokevirtual #42                 // Method getSignedElements:()Lorg/apache/wss4j/policy/model/SignedElements;
     296: ifnull        309
     299: new           #32                 // class java/lang/IllegalArgumentException
     302: dup
     303: ldc           #33                 // String Invalid Policy
     305: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     308: athrow
     309: aload_2
     310: aload         6
     312: checkcast     #43                 // class org/apache/wss4j/policy/model/SignedElements
     315: invokevirtual #44                 // Method setSignedElements:(Lorg/apache/wss4j/policy/model/SignedElements;)V
     318: goto          463
     321: aload_0
     322: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     325: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     328: invokevirtual #45                 // Method org/apache/wss4j/policy/SPConstants.getEncryptedParts:()Ljavax/xml/namespace/QName;
     331: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     334: aload         7
     336: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     339: ifeq          392
     342: aload_0
     343: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     346: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     349: invokevirtual #45                 // Method org/apache/wss4j/policy/SPConstants.getEncryptedParts:()Ljavax/xml/namespace/QName;
     352: invokevirtual #24                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     355: aload         8
     357: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     360: ifeq          392
     363: aload_2
     364: invokevirtual #46                 // Method getEncryptedParts:()Lorg/apache/wss4j/policy/model/EncryptedParts;
     367: ifnull        380
     370: new           #32                 // class java/lang/IllegalArgumentException
     373: dup
     374: ldc           #33                 // String Invalid Policy
     376: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     379: athrow
     380: aload_2
     381: aload         6
     383: checkcast     #47                 // class org/apache/wss4j/policy/model/EncryptedParts
     386: invokevirtual #48                 // Method setEncryptedParts:(Lorg/apache/wss4j/policy/model/EncryptedParts;)V
     389: goto          463
     392: aload_0
     393: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     396: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     399: invokevirtual #49                 // Method org/apache/wss4j/policy/SPConstants.getEncryptedElements:()Ljavax/xml/namespace/QName;
     402: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     405: aload         7
     407: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     410: ifeq          463
     413: aload_0
     414: invokevirtual #12                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     417: invokevirtual #28                 // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     420: invokevirtual #49                 // Method org/apache/wss4j/policy/SPConstants.getEncryptedElements:()Ljavax/xml/namespace/QName;
     423: invokevirtual #24                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     426: aload         8
     428: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     431: ifeq          463
     434: aload_2
     435: invokevirtual #50                 // Method getEncryptedElements:()Lorg/apache/wss4j/policy/model/EncryptedElements;
     438: ifnull        451
     441: new           #32                 // class java/lang/IllegalArgumentException
     444: dup
     445: ldc           #33                 // String Invalid Policy
     447: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     450: athrow
     451: aload_2
     452: aload         6
     454: checkcast     #51                 // class org/apache/wss4j/policy/model/EncryptedElements
     457: invokevirtual #52                 // Method setEncryptedElements:(Lorg/apache/wss4j/policy/model/EncryptedElements;)V
     460: goto          463
     463: iinc          5, 1
     466: goto          28
     469: return

  public java.util.List<org.apache.wss4j.policy.model.AbstractToken> getTokens();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tokens:Ljava/util/List;
       4: areturn

  public void addToken(org.apache.wss4j.policy.model.AbstractToken);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tokens:Ljava/util/List;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.apache.wss4j.policy.model.AlgorithmSuite getAlgorithmSuite();
    Code:
       0: aload_0
       1: getfield      #54                 // Field algorithmSuite:Lorg/apache/wss4j/policy/model/AlgorithmSuite;
       4: areturn

  protected void setAlgorithmSuite(org.apache.wss4j.policy.model.AlgorithmSuite);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field algorithmSuite:Lorg/apache/wss4j/policy/model/AlgorithmSuite;
       5: return

  public org.apache.wss4j.policy.model.SignedParts getSignedParts();
    Code:
       0: aload_0
       1: getfield      #55                 // Field signedParts:Lorg/apache/wss4j/policy/model/SignedParts;
       4: areturn

  protected void setSignedParts(org.apache.wss4j.policy.model.SignedParts);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field signedParts:Lorg/apache/wss4j/policy/model/SignedParts;
       5: return

  public org.apache.wss4j.policy.model.SignedElements getSignedElements();
    Code:
       0: aload_0
       1: getfield      #56                 // Field signedElements:Lorg/apache/wss4j/policy/model/SignedElements;
       4: areturn

  protected void setSignedElements(org.apache.wss4j.policy.model.SignedElements);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field signedElements:Lorg/apache/wss4j/policy/model/SignedElements;
       5: return

  public org.apache.wss4j.policy.model.EncryptedParts getEncryptedParts();
    Code:
       0: aload_0
       1: getfield      #57                 // Field encryptedParts:Lorg/apache/wss4j/policy/model/EncryptedParts;
       4: areturn

  protected void setEncryptedParts(org.apache.wss4j.policy.model.EncryptedParts);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field encryptedParts:Lorg/apache/wss4j/policy/model/EncryptedParts;
       5: return

  public org.apache.wss4j.policy.model.EncryptedElements getEncryptedElements();
    Code:
       0: aload_0
       1: getfield      #58                 // Field encryptedElements:Lorg/apache/wss4j/policy/model/EncryptedElements;
       4: areturn

  protected void setEncryptedElements(org.apache.wss4j.policy.model.EncryptedElements);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field encryptedElements:Lorg/apache/wss4j/policy/model/EncryptedElements;
       5: return

  public boolean isEncryptedToken();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getName:()Ljavax/xml/namespace/QName;
       4: astore_1
       5: aload_1
       6: ifnull        23
       9: aload_1
      10: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      13: ldc           #59                 // String Encrypted
      15: invokevirtual #60                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: iconst_0
      24: ireturn

  public boolean isEndorsing();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getName:()Ljavax/xml/namespace/QName;
       4: astore_1
       5: aload_1
       6: ifnull        23
       9: aload_1
      10: invokevirtual #23                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      13: ldc           #61                 // String Endorsing
      15: invokevirtual #60                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: iconst_0
      24: ireturn
}
