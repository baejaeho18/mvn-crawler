Compiled from "AsymmetricBinding.java"
public class org.apache.wss4j.policy.model.AsymmetricBinding extends org.apache.wss4j.policy.model.AbstractSymmetricAsymmetricBinding {
  private org.apache.wss4j.policy.model.InitiatorToken initiatorToken;

  private org.apache.wss4j.policy.model.InitiatorSignatureToken initiatorSignatureToken;

  private org.apache.wss4j.policy.model.InitiatorEncryptionToken initiatorEncryptionToken;

  private org.apache.wss4j.policy.model.RecipientToken recipientToken;

  private org.apache.wss4j.policy.model.RecipientSignatureToken recipientSignatureToken;

  private org.apache.wss4j.policy.model.RecipientEncryptionToken recipientEncryptionToken;

  public org.apache.wss4j.policy.model.AsymmetricBinding(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractSymmetricAsymmetricBinding."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
       6: aload_0
       7: aload_2
       8: aload_0
       9: invokevirtual #2                  // Method parseNestedPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/AsymmetricBinding;)V
      12: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants.getAsymmetricBinding:()Ljavax/xml/namespace/QName;
      10: areturn

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #6                  // class org/apache/wss4j/policy/model/AsymmetricBinding
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_1
       9: invokespecial #7                  // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
      12: areturn

  protected void parseNestedPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.AsymmetricBinding);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          626
      14: aload_3
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #11                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     626
      40: aload         4
      42: iload         5
      44: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #14                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #15,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: aload         6
      68: invokeinterface #15,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      73: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      76: astore        8
      78: aload_0
      79: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      82: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      85: invokevirtual #18                 // Method org/apache/wss4j/policy/SPConstants.getInitiatorToken:()Ljavax/xml/namespace/QName;
      88: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      91: aload         7
      93: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          173
      99: aload_0
     100: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     103: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     106: invokevirtual #18                 // Method org/apache/wss4j/policy/SPConstants.getInitiatorToken:()Ljavax/xml/namespace/QName;
     109: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     112: aload         8
     114: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     117: ifeq          173
     120: aload_2
     121: invokevirtual #20                 // Method getInitiatorToken:()Lorg/apache/wss4j/policy/model/InitiatorToken;
     124: ifnonnull     141
     127: aload_2
     128: invokevirtual #21                 // Method getInitiatorSignatureToken:()Lorg/apache/wss4j/policy/model/InitiatorSignatureToken;
     131: ifnonnull     141
     134: aload_2
     135: invokevirtual #22                 // Method getInitiatorEncryptionToken:()Lorg/apache/wss4j/policy/model/InitiatorEncryptionToken;
     138: ifnull        151
     141: new           #23                 // class java/lang/IllegalArgumentException
     144: dup
     145: ldc           #24                 // String Invalid Policy
     147: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: aload         6
     153: checkcast     #26                 // class org/apache/wss4j/policy/model/InitiatorToken
     156: astore        9
     158: aload_2
     159: aload         9
     161: invokevirtual #27                 // Method setInitiatorToken:(Lorg/apache/wss4j/policy/model/InitiatorToken;)V
     164: aload         9
     166: aload_2
     167: invokevirtual #28                 // Method org/apache/wss4j/policy/model/InitiatorToken.setParentAssertion:(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;)V
     170: goto          620
     173: aload_0
     174: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     177: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     180: invokevirtual #29                 // Method org/apache/wss4j/policy/SPConstants.getInitiatorSignatureToken:()Ljavax/xml/namespace/QName;
     183: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     186: aload         7
     188: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     191: ifeq          261
     194: aload_0
     195: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     198: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     201: invokevirtual #29                 // Method org/apache/wss4j/policy/SPConstants.getInitiatorSignatureToken:()Ljavax/xml/namespace/QName;
     204: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     207: aload         8
     209: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     212: ifeq          261
     215: aload_2
     216: invokevirtual #20                 // Method getInitiatorToken:()Lorg/apache/wss4j/policy/model/InitiatorToken;
     219: ifnonnull     229
     222: aload_2
     223: invokevirtual #21                 // Method getInitiatorSignatureToken:()Lorg/apache/wss4j/policy/model/InitiatorSignatureToken;
     226: ifnull        239
     229: new           #23                 // class java/lang/IllegalArgumentException
     232: dup
     233: ldc           #24                 // String Invalid Policy
     235: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     238: athrow
     239: aload         6
     241: checkcast     #30                 // class org/apache/wss4j/policy/model/InitiatorSignatureToken
     244: astore        9
     246: aload_2
     247: aload         9
     249: invokevirtual #31                 // Method setInitiatorSignatureToken:(Lorg/apache/wss4j/policy/model/InitiatorSignatureToken;)V
     252: aload         9
     254: aload_2
     255: invokevirtual #32                 // Method org/apache/wss4j/policy/model/InitiatorSignatureToken.setParentAssertion:(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;)V
     258: goto          620
     261: aload_0
     262: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     265: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     268: invokevirtual #33                 // Method org/apache/wss4j/policy/SPConstants.getInitiatorEncryptionToken:()Ljavax/xml/namespace/QName;
     271: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     274: aload         7
     276: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     279: ifeq          349
     282: aload_0
     283: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     286: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     289: invokevirtual #33                 // Method org/apache/wss4j/policy/SPConstants.getInitiatorEncryptionToken:()Ljavax/xml/namespace/QName;
     292: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     295: aload         8
     297: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     300: ifeq          349
     303: aload_2
     304: invokevirtual #20                 // Method getInitiatorToken:()Lorg/apache/wss4j/policy/model/InitiatorToken;
     307: ifnonnull     317
     310: aload_2
     311: invokevirtual #22                 // Method getInitiatorEncryptionToken:()Lorg/apache/wss4j/policy/model/InitiatorEncryptionToken;
     314: ifnull        327
     317: new           #23                 // class java/lang/IllegalArgumentException
     320: dup
     321: ldc           #24                 // String Invalid Policy
     323: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     326: athrow
     327: aload         6
     329: checkcast     #34                 // class org/apache/wss4j/policy/model/InitiatorEncryptionToken
     332: astore        9
     334: aload_2
     335: aload         9
     337: invokevirtual #35                 // Method setInitiatorEncryptionToken:(Lorg/apache/wss4j/policy/model/InitiatorEncryptionToken;)V
     340: aload         9
     342: aload_2
     343: invokevirtual #36                 // Method org/apache/wss4j/policy/model/InitiatorEncryptionToken.setParentAssertion:(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;)V
     346: goto          620
     349: aload_0
     350: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     353: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     356: invokevirtual #37                 // Method org/apache/wss4j/policy/SPConstants.getRecipientToken:()Ljavax/xml/namespace/QName;
     359: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     362: aload         7
     364: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     367: ifeq          444
     370: aload_0
     371: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     374: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     377: invokevirtual #37                 // Method org/apache/wss4j/policy/SPConstants.getRecipientToken:()Ljavax/xml/namespace/QName;
     380: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     383: aload         8
     385: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     388: ifeq          444
     391: aload_2
     392: invokevirtual #38                 // Method getRecipientToken:()Lorg/apache/wss4j/policy/model/RecipientToken;
     395: ifnonnull     412
     398: aload_2
     399: invokevirtual #39                 // Method getRecipientSignatureToken:()Lorg/apache/wss4j/policy/model/RecipientSignatureToken;
     402: ifnonnull     412
     405: aload_2
     406: invokevirtual #40                 // Method getRecipientEncryptionToken:()Lorg/apache/wss4j/policy/model/RecipientEncryptionToken;
     409: ifnull        422
     412: new           #23                 // class java/lang/IllegalArgumentException
     415: dup
     416: ldc           #24                 // String Invalid Policy
     418: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     421: athrow
     422: aload         6
     424: checkcast     #41                 // class org/apache/wss4j/policy/model/RecipientToken
     427: astore        9
     429: aload_2
     430: aload         9
     432: invokevirtual #42                 // Method setRecipientToken:(Lorg/apache/wss4j/policy/model/RecipientToken;)V
     435: aload         9
     437: aload_2
     438: invokevirtual #43                 // Method org/apache/wss4j/policy/model/RecipientToken.setParentAssertion:(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;)V
     441: goto          620
     444: aload_0
     445: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     448: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     451: invokevirtual #44                 // Method org/apache/wss4j/policy/SPConstants.getRecipientSignatureToken:()Ljavax/xml/namespace/QName;
     454: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     457: aload         7
     459: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     462: ifeq          532
     465: aload_0
     466: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     469: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     472: invokevirtual #44                 // Method org/apache/wss4j/policy/SPConstants.getRecipientSignatureToken:()Ljavax/xml/namespace/QName;
     475: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     478: aload         8
     480: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     483: ifeq          532
     486: aload_2
     487: invokevirtual #38                 // Method getRecipientToken:()Lorg/apache/wss4j/policy/model/RecipientToken;
     490: ifnonnull     500
     493: aload_2
     494: invokevirtual #39                 // Method getRecipientSignatureToken:()Lorg/apache/wss4j/policy/model/RecipientSignatureToken;
     497: ifnull        510
     500: new           #23                 // class java/lang/IllegalArgumentException
     503: dup
     504: ldc           #24                 // String Invalid Policy
     506: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     509: athrow
     510: aload         6
     512: checkcast     #45                 // class org/apache/wss4j/policy/model/RecipientSignatureToken
     515: astore        9
     517: aload_2
     518: aload         9
     520: invokevirtual #46                 // Method setRecipientSignatureToken:(Lorg/apache/wss4j/policy/model/RecipientSignatureToken;)V
     523: aload         9
     525: aload_2
     526: invokevirtual #47                 // Method org/apache/wss4j/policy/model/RecipientSignatureToken.setParentAssertion:(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;)V
     529: goto          620
     532: aload_0
     533: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     536: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     539: invokevirtual #48                 // Method org/apache/wss4j/policy/SPConstants.getRecipientEncryptionToken:()Ljavax/xml/namespace/QName;
     542: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     545: aload         7
     547: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     550: ifeq          620
     553: aload_0
     554: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     557: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     560: invokevirtual #48                 // Method org/apache/wss4j/policy/SPConstants.getRecipientEncryptionToken:()Ljavax/xml/namespace/QName;
     563: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     566: aload         8
     568: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     571: ifeq          620
     574: aload_2
     575: invokevirtual #38                 // Method getRecipientToken:()Lorg/apache/wss4j/policy/model/RecipientToken;
     578: ifnonnull     588
     581: aload_2
     582: invokevirtual #40                 // Method getRecipientEncryptionToken:()Lorg/apache/wss4j/policy/model/RecipientEncryptionToken;
     585: ifnull        598
     588: new           #23                 // class java/lang/IllegalArgumentException
     591: dup
     592: ldc           #24                 // String Invalid Policy
     594: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     597: athrow
     598: aload         6
     600: checkcast     #49                 // class org/apache/wss4j/policy/model/RecipientEncryptionToken
     603: astore        9
     605: aload_2
     606: aload         9
     608: invokevirtual #50                 // Method setRecipientEncryptionToken:(Lorg/apache/wss4j/policy/model/RecipientEncryptionToken;)V
     611: aload         9
     613: aload_2
     614: invokevirtual #51                 // Method org/apache/wss4j/policy/model/RecipientEncryptionToken.setParentAssertion:(Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;)V
     617: goto          620
     620: iinc          5, 1
     623: goto          28
     626: return

  public org.apache.wss4j.policy.model.InitiatorToken getInitiatorToken();
    Code:
       0: aload_0
       1: getfield      #52                 // Field initiatorToken:Lorg/apache/wss4j/policy/model/InitiatorToken;
       4: areturn

  protected void setInitiatorToken(org.apache.wss4j.policy.model.InitiatorToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field initiatorToken:Lorg/apache/wss4j/policy/model/InitiatorToken;
       5: return

  public org.apache.wss4j.policy.model.InitiatorSignatureToken getInitiatorSignatureToken();
    Code:
       0: aload_0
       1: getfield      #53                 // Field initiatorSignatureToken:Lorg/apache/wss4j/policy/model/InitiatorSignatureToken;
       4: areturn

  protected void setInitiatorSignatureToken(org.apache.wss4j.policy.model.InitiatorSignatureToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field initiatorSignatureToken:Lorg/apache/wss4j/policy/model/InitiatorSignatureToken;
       5: return

  public org.apache.wss4j.policy.model.InitiatorEncryptionToken getInitiatorEncryptionToken();
    Code:
       0: aload_0
       1: getfield      #54                 // Field initiatorEncryptionToken:Lorg/apache/wss4j/policy/model/InitiatorEncryptionToken;
       4: areturn

  protected void setInitiatorEncryptionToken(org.apache.wss4j.policy.model.InitiatorEncryptionToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field initiatorEncryptionToken:Lorg/apache/wss4j/policy/model/InitiatorEncryptionToken;
       5: return

  public org.apache.wss4j.policy.model.RecipientToken getRecipientToken();
    Code:
       0: aload_0
       1: getfield      #55                 // Field recipientToken:Lorg/apache/wss4j/policy/model/RecipientToken;
       4: areturn

  protected void setRecipientToken(org.apache.wss4j.policy.model.RecipientToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field recipientToken:Lorg/apache/wss4j/policy/model/RecipientToken;
       5: return

  public org.apache.wss4j.policy.model.RecipientSignatureToken getRecipientSignatureToken();
    Code:
       0: aload_0
       1: getfield      #56                 // Field recipientSignatureToken:Lorg/apache/wss4j/policy/model/RecipientSignatureToken;
       4: areturn

  protected void setRecipientSignatureToken(org.apache.wss4j.policy.model.RecipientSignatureToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field recipientSignatureToken:Lorg/apache/wss4j/policy/model/RecipientSignatureToken;
       5: return

  public org.apache.wss4j.policy.model.RecipientEncryptionToken getRecipientEncryptionToken();
    Code:
       0: aload_0
       1: getfield      #57                 // Field recipientEncryptionToken:Lorg/apache/wss4j/policy/model/RecipientEncryptionToken;
       4: areturn

  protected void setRecipientEncryptionToken(org.apache.wss4j.policy.model.RecipientEncryptionToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field recipientEncryptionToken:Lorg/apache/wss4j/policy/model/RecipientEncryptionToken;
       5: return
}
