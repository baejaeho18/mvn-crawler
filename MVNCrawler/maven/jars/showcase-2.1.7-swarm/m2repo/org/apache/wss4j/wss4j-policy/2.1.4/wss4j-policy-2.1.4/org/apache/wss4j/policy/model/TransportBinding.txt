Compiled from "TransportBinding.java"
public class org.apache.wss4j.policy.model.TransportBinding extends org.apache.wss4j.policy.model.AbstractBinding {
  private org.apache.wss4j.policy.model.TransportToken transportToken;

  public org.apache.wss4j.policy.model.TransportBinding(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractBinding."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
       6: aload_0
       7: aload_2
       8: aload_0
       9: invokevirtual #2                  // Method parseNestedPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/TransportBinding;)V
      12: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants.getTransportBinding:()Ljavax/xml/namespace/QName;
      10: areturn

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #6                  // class org/apache/wss4j/policy/model/TransportBinding
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_1
       9: invokespecial #7                  // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
      12: areturn

  protected void parseNestedPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.TransportBinding);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          155
      14: aload_3
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #11                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     155
      40: aload         4
      42: iload         5
      44: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #14                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #15,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: aload         6
      68: invokeinterface #15,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      73: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      76: astore        8
      78: aload_0
      79: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      82: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      85: invokevirtual #18                 // Method org/apache/wss4j/policy/SPConstants.getTransportToken:()Ljavax/xml/namespace/QName;
      88: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      91: aload         7
      93: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          149
      99: aload_0
     100: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     103: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     106: invokevirtual #18                 // Method org/apache/wss4j/policy/SPConstants.getTransportToken:()Ljavax/xml/namespace/QName;
     109: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     112: aload         8
     114: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     117: ifeq          149
     120: aload_2
     121: invokevirtual #20                 // Method getTransportToken:()Lorg/apache/wss4j/policy/model/TransportToken;
     124: ifnull        137
     127: new           #21                 // class java/lang/IllegalArgumentException
     130: dup
     131: ldc           #22                 // String Invalid Policy
     133: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     136: athrow
     137: aload_2
     138: aload         6
     140: checkcast     #24                 // class org/apache/wss4j/policy/model/TransportToken
     143: invokevirtual #25                 // Method setTransportToken:(Lorg/apache/wss4j/policy/model/TransportToken;)V
     146: goto          149
     149: iinc          5, 1
     152: goto          28
     155: return

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #26                 // Method getPolicy:()Lorg/apache/neethi/Policy;
       6: invokespecial #27                 // Method org/apache/wss4j/policy/model/AbstractBinding.serialize:(Ljavax/xml/stream/XMLStreamWriter;Lorg/apache/neethi/Policy;)V
       9: return

  public org.apache.wss4j.policy.model.TransportToken getTransportToken();
    Code:
       0: aload_0
       1: getfield      #28                 // Field transportToken:Lorg/apache/wss4j/policy/model/TransportToken;
       4: areturn

  protected void setTransportToken(org.apache.wss4j.policy.model.TransportToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field transportToken:Lorg/apache/wss4j/policy/model/TransportToken;
       5: return
}
