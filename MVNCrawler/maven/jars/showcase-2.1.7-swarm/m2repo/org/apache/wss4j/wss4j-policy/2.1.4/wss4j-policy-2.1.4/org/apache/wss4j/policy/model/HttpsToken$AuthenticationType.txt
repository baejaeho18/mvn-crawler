Compiled from "HttpsToken.java"
public final class org.apache.wss4j.policy.model.HttpsToken$AuthenticationType extends java.lang.Enum<org.apache.wss4j.policy.model.HttpsToken$AuthenticationType> {
  public static final org.apache.wss4j.policy.model.HttpsToken$AuthenticationType HttpBasicAuthentication;

  public static final org.apache.wss4j.policy.model.HttpsToken$AuthenticationType HttpDigestAuthentication;

  public static final org.apache.wss4j.policy.model.HttpsToken$AuthenticationType RequireClientCertificate;

  private static final java.util.Map<java.lang.String, org.apache.wss4j.policy.model.HttpsToken$AuthenticationType> lookup;

  private static final org.apache.wss4j.policy.model.HttpsToken$AuthenticationType[] $VALUES;

  public static org.apache.wss4j.policy.model.HttpsToken$AuthenticationType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
       3: invokevirtual #2                  // Method "[Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;"
       9: areturn

  public static org.apache.wss4j.policy.model.HttpsToken$AuthenticationType valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
      10: areturn

  private org.apache.wss4j.policy.model.HttpsToken$AuthenticationType();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static org.apache.wss4j.policy.model.HttpsToken$AuthenticationType lookUp(java.lang.String);
    Code:
       0: getstatic     #7                  // Field lookup:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
      12: areturn

  static {};
    Code:
       0: new           #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
       3: dup
       4: ldc           #9                  // String HttpBasicAuthentication
       6: iconst_0
       7: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #11                 // Field HttpBasicAuthentication:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      13: new           #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
      16: dup
      17: ldc           #12                 // String HttpDigestAuthentication
      19: iconst_1
      20: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #13                 // Field HttpDigestAuthentication:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      26: new           #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
      29: dup
      30: ldc           #14                 // String RequireClientCertificate
      32: iconst_2
      33: invokespecial #10                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #15                 // Field RequireClientCertificate:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      39: iconst_3
      40: anewarray     #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
      43: dup
      44: iconst_0
      45: getstatic     #11                 // Field HttpBasicAuthentication:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      48: aastore
      49: dup
      50: iconst_1
      51: getstatic     #13                 // Field HttpDigestAuthentication:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      54: aastore
      55: dup
      56: iconst_2
      57: getstatic     #15                 // Field RequireClientCertificate:Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      60: aastore
      61: putstatic     #1                  // Field $VALUES:[Lorg/apache/wss4j/policy/model/HttpsToken$AuthenticationType;
      64: new           #16                 // class java/util/HashMap
      67: dup
      68: invokespecial #17                 // Method java/util/HashMap."<init>":()V
      71: putstatic     #7                  // Field lookup:Ljava/util/Map;
      74: ldc_w         #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
      77: invokestatic  #18                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      80: invokevirtual #19                 // Method java/util/EnumSet.iterator:()Ljava/util/Iterator;
      83: astore_0
      84: aload_0
      85: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          120
      93: aload_0
      94: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #4                  // class org/apache/wss4j/policy/model/HttpsToken$AuthenticationType
     102: astore_1
     103: getstatic     #7                  // Field lookup:Ljava/util/Map;
     106: aload_1
     107: invokevirtual #22                 // Method name:()Ljava/lang/String;
     110: aload_1
     111: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: goto          84
     120: return
}
