Compiled from "KeyValueToken.java"
public class org.apache.wss4j.policy.model.KeyValueToken extends org.apache.wss4j.policy.model.AbstractToken {
  private boolean rsaKeyValue;

  public org.apache.wss4j.policy.model.KeyValueToken(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.wss4j.policy.SPConstants$IncludeTokenType, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: aconst_null
       6: aload_3
       7: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractToken."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;Lorg/w3c/dom/Element;Ljava/lang/String;Lorg/w3c/dom/Element;Lorg/apache/neethi/Policy;)V
      10: aload_0
      11: aload_2
      12: invokevirtual #2                  // Method setIncludeTokenType:(Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;)V
      15: aload_0
      16: aload_3
      17: aload_0
      18: invokevirtual #3                  // Method parseNestedPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/KeyValueToken;)V
      21: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #6                  // Method org/apache/wss4j/policy/SPConstants.getKeyValueToken:()Ljavax/xml/namespace/QName;
      10: areturn

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #7                  // class org/apache/wss4j/policy/model/KeyValueToken
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_0
       9: invokevirtual #8                  // Method getIncludeTokenType:()Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;
      12: aload_1
      13: invokespecial #9                  // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/wss4j/policy/SPConstants$IncludeTokenType;Lorg/apache/neethi/Policy;)V
      16: areturn

  protected void parseNestedPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.KeyValueToken);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          151
      14: aload_3
      15: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #13                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     151
      40: aload         4
      42: iload         5
      44: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #16                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #17,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #18                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: aload         6
      68: invokeinterface #17,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      73: invokevirtual #19                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      76: astore        8
      78: aload_0
      79: invokevirtual #4                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      82: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      85: invokevirtual #20                 // Method org/apache/wss4j/policy/SPConstants.getRsaKeyValue:()Ljavax/xml/namespace/QName;
      88: invokevirtual #18                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      91: aload         7
      93: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          145
      99: aload_0
     100: invokevirtual #4                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     103: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     106: invokevirtual #20                 // Method org/apache/wss4j/policy/SPConstants.getRsaKeyValue:()Ljavax/xml/namespace/QName;
     109: invokevirtual #19                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     112: aload         8
     114: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     117: ifeq          145
     120: aload_2
     121: invokevirtual #22                 // Method isRsaKeyValue:()Z
     124: ifeq          137
     127: new           #23                 // class java/lang/IllegalArgumentException
     130: dup
     131: ldc           #24                 // String Invalid Policy
     133: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     136: athrow
     137: aload_2
     138: iconst_1
     139: invokevirtual #26                 // Method setRsaKeyValue:(Z)V
     142: goto          145
     145: iinc          5, 1
     148: goto          28
     151: return

  public boolean isRsaKeyValue();
    Code:
       0: aload_0
       1: getfield      #27                 // Field rsaKeyValue:Z
       4: ireturn

  protected void setRsaKeyValue(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field rsaKeyValue:Z
       5: return
}
