Compiled from "SupportingTokensBuilder.java"
public class org.apache.wss4j.policy.builders.SupportingTokensBuilder implements org.apache.neethi.builders.AssertionBuilder<org.w3c.dom.Element> {
  public org.apache.wss4j.policy.builders.SupportingTokensBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.neethi.Assertion build(org.w3c.dom.Element, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/w3c/dom/Element.getNamespaceURI:()Ljava/lang/String;
       6: invokestatic  #3                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPVersion:(Ljava/lang/String;)Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       9: astore_3
      10: aload_1
      11: invokestatic  #4                  // Method org/apache/wss4j/policy/SPUtils.getElementQName:(Lorg/w3c/dom/Element;)Ljavax/xml/namespace/QName;
      14: astore        4
      16: aload_1
      17: invokestatic  #5                  // Method org/apache/wss4j/policy/SPUtils.getFirstPolicyChildElement:(Lorg/w3c/dom/Element;)Lorg/w3c/dom/Element;
      20: astore        5
      22: aload         5
      24: ifnull        41
      27: aload_2
      28: invokeinterface #6,  1            // InterfaceMethod org/apache/neethi/AssertionBuilderFactory.getPolicyEngine:()Lorg/apache/neethi/PolicyBuilder;
      33: aload         5
      35: invokevirtual #7                  // Method org/apache/neethi/PolicyBuilder.getPolicy:(Lorg/w3c/dom/Element;)Lorg/apache/neethi/Policy;
      38: goto          48
      41: new           #8                  // class org/apache/neethi/Policy
      44: dup
      45: invokespecial #9                  // Method org/apache/neethi/Policy."<init>":()V
      48: astore        6
      50: new           #10                 // class org/apache/wss4j/policy/model/SupportingTokens
      53: dup
      54: aload_3
      55: aload         4
      57: aload         6
      59: invokespecial #11                 // Method org/apache/wss4j/policy/model/SupportingTokens."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Ljavax/xml/namespace/QName;Lorg/apache/neethi/Policy;)V
      62: astore        7
      64: aload         7
      66: aload_1
      67: invokestatic  #12                 // Method org/apache/wss4j/policy/SPUtils.isOptional:(Lorg/w3c/dom/Element;)Z
      70: invokevirtual #13                 // Method org/apache/wss4j/policy/model/SupportingTokens.setOptional:(Z)V
      73: aload         7
      75: aload_1
      76: invokestatic  #14                 // Method org/apache/wss4j/policy/SPUtils.isIgnorable:(Lorg/w3c/dom/Element;)Z
      79: invokevirtual #15                 // Method org/apache/wss4j/policy/model/SupportingTokens.setIgnorable:(Z)V
      82: aload         7
      84: areturn

  public javax.xml.namespace.QName[] getKnownElements();
    Code:
       0: bipush        12
       2: anewarray     #16                 // class javax/xml/namespace/QName
       5: dup
       6: iconst_0
       7: getstatic     #17                 // Field org/apache/wss4j/policy/SP13Constants.SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #18                 // Field org/apache/wss4j/policy/SP13Constants.SIGNED_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      16: aastore
      17: dup
      18: iconst_2
      19: getstatic     #19                 // Field org/apache/wss4j/policy/SP13Constants.ENDORSING_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      22: aastore
      23: dup
      24: iconst_3
      25: getstatic     #20                 // Field org/apache/wss4j/policy/SP13Constants.SIGNED_ENDORSING_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      28: aastore
      29: dup
      30: iconst_4
      31: getstatic     #21                 // Field org/apache/wss4j/policy/SP13Constants.ENCRYPTED_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      34: aastore
      35: dup
      36: iconst_5
      37: getstatic     #22                 // Field org/apache/wss4j/policy/SP13Constants.SIGNED_ENCRYPTED_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      40: aastore
      41: dup
      42: bipush        6
      44: getstatic     #23                 // Field org/apache/wss4j/policy/SP13Constants.ENDORSING_ENCRYPTED_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      47: aastore
      48: dup
      49: bipush        7
      51: getstatic     #24                 // Field org/apache/wss4j/policy/SP13Constants.SIGNED_ENDORSING_ENCRYPTED_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      54: aastore
      55: dup
      56: bipush        8
      58: getstatic     #25                 // Field org/apache/wss4j/policy/SP11Constants.SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      61: aastore
      62: dup
      63: bipush        9
      65: getstatic     #26                 // Field org/apache/wss4j/policy/SP11Constants.SIGNED_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      68: aastore
      69: dup
      70: bipush        10
      72: getstatic     #27                 // Field org/apache/wss4j/policy/SP11Constants.ENDORSING_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      75: aastore
      76: dup
      77: bipush        11
      79: getstatic     #28                 // Field org/apache/wss4j/policy/SP11Constants.SIGNED_ENDORSING_SUPPORTING_TOKENS:Ljavax/xml/namespace/QName;
      82: aastore
      83: areturn

  public org.apache.neethi.Assertion build(java.lang.Object, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class org/w3c/dom/Element
       5: aload_2
       6: invokevirtual #30                 // Method build:(Lorg/w3c/dom/Element;Lorg/apache/neethi/AssertionBuilderFactory;)Lorg/apache/neethi/Assertion;
       9: areturn
}
