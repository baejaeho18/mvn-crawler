Compiled from "AbstractBinding.java"
public abstract class org.apache.wss4j.policy.model.AbstractBinding extends org.apache.wss4j.policy.model.AbstractSecurityAssertion implements org.apache.neethi.PolicyContainingAssertion {
  private org.apache.neethi.Policy nestedPolicy;

  private org.apache.wss4j.policy.model.AlgorithmSuite algorithmSuite;

  private org.apache.wss4j.policy.model.Layout layout;

  private boolean includeTimestamp;

  protected org.apache.wss4j.policy.model.AbstractBinding(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field nestedPolicy:Lorg/apache/neethi/Policy;
      10: aload_0
      11: aload_2
      12: aload_0
      13: invokevirtual #3                  // Method parseNestedBindingPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/AbstractBinding;)V
      16: aload_0
      17: getfield      #4                  // Field layout:Lorg/apache/wss4j/policy/model/Layout;
      20: ifnonnull     42
      23: aload_0
      24: new           #5                  // class org/apache/wss4j/policy/model/Layout
      27: dup
      28: aload_1
      29: new           #6                  // class org/apache/neethi/Policy
      32: dup
      33: invokespecial #7                  // Method org/apache/neethi/Policy."<init>":()V
      36: invokespecial #8                  // Method org/apache/wss4j/policy/model/Layout."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
      39: putfield      #4                  // Field layout:Lorg/apache/wss4j/policy/model/Layout;
      42: return

  public org.apache.neethi.Policy getPolicy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nestedPolicy:Lorg/apache/neethi/Policy;
       4: areturn

  public org.apache.neethi.PolicyComponent normalize();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #9                  // Method getPolicy:()Lorg/apache/neethi/Policy;
       5: invokespecial #10                 // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion.normalize:(Lorg/apache/neethi/Policy;)Lorg/apache/neethi/PolicyComponent;
       8: areturn

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #9                  // Method getPolicy:()Lorg/apache/neethi/Policy;
       6: invokespecial #11                 // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion.serialize:(Ljavax/xml/stream/XMLStreamWriter;Lorg/apache/neethi/Policy;)V
       9: return

  protected void parseNestedBindingPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.AbstractBinding);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          199
      14: aload_3
      15: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #15                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     199
      40: aload         4
      42: iload         5
      44: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #18                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #19,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #20                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: ldc           #21                 // String AlgorithmSuite
      68: aload         7
      70: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifeq          105
      76: aload_2
      77: invokevirtual #23                 // Method getAlgorithmSuite:()Lorg/apache/wss4j/policy/model/AlgorithmSuite;
      80: ifnull        93
      83: new           #24                 // class java/lang/IllegalArgumentException
      86: dup
      87: ldc           #25                 // String Invalid Policy
      89: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_2
      94: aload         6
      96: checkcast     #27                 // class org/apache/wss4j/policy/model/AlgorithmSuite
      99: invokevirtual #28                 // Method setAlgorithmSuite:(Lorg/apache/wss4j/policy/model/AlgorithmSuite;)V
     102: goto          193
     105: ldc           #29                 // String Layout
     107: aload         7
     109: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     112: ifeq          175
     115: aload_2
     116: invokevirtual #30                 // Method getLayout:()Lorg/apache/wss4j/policy/model/Layout;
     119: ifnull        132
     122: new           #24                 // class java/lang/IllegalArgumentException
     125: dup
     126: ldc           #25                 // String Invalid Policy
     128: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: aload         6
     134: checkcast     #5                  // class org/apache/wss4j/policy/model/Layout
     137: astore        8
     139: aload_2
     140: aload         8
     142: invokevirtual #31                 // Method setLayout:(Lorg/apache/wss4j/policy/model/Layout;)V
     145: aload         8
     147: invokevirtual #32                 // Method org/apache/wss4j/policy/model/Layout.getLayoutType:()Lorg/apache/wss4j/policy/model/Layout$LayoutType;
     150: getstatic     #33                 // Field org/apache/wss4j/policy/model/Layout$LayoutType.LaxTsFirst:Lorg/apache/wss4j/policy/model/Layout$LayoutType;
     153: if_acmpeq     167
     156: aload         8
     158: invokevirtual #32                 // Method org/apache/wss4j/policy/model/Layout.getLayoutType:()Lorg/apache/wss4j/policy/model/Layout$LayoutType;
     161: getstatic     #34                 // Field org/apache/wss4j/policy/model/Layout$LayoutType.LaxTsLast:Lorg/apache/wss4j/policy/model/Layout$LayoutType;
     164: if_acmpne     193
     167: aload_2
     168: iconst_1
     169: invokevirtual #35                 // Method setIncludeTimestamp:(Z)V
     172: goto          193
     175: ldc           #36                 // String IncludeTimestamp
     177: aload         7
     179: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     182: ifeq          193
     185: aload_2
     186: iconst_1
     187: invokevirtual #35                 // Method setIncludeTimestamp:(Z)V
     190: goto          193
     193: iinc          5, 1
     196: goto          28
     199: aload_2
     200: invokevirtual #23                 // Method getAlgorithmSuite:()Lorg/apache/wss4j/policy/model/AlgorithmSuite;
     203: ifnonnull     254
     206: aload_2
     207: invokevirtual #37                 // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     210: getstatic     #38                 // Field org/apache/wss4j/policy/SPConstants$SPVersion.SP11:Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     213: if_acmpeq     254
     216: new           #24                 // class java/lang/IllegalArgumentException
     219: dup
     220: new           #39                 // class java/lang/StringBuilder
     223: dup
     224: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     227: ldc           #41                 // String sp:
     229: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload_0
     233: invokevirtual #43                 // Method getName:()Ljavax/xml/namespace/QName;
     236: invokevirtual #20                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     239: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: ldc           #44                 // String  must have an inner sp:AlgorithmSuite element
     244: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     250: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     253: athrow
     254: return

  public org.apache.wss4j.policy.model.AlgorithmSuite getAlgorithmSuite();
    Code:
       0: aload_0
       1: getfield      #46                 // Field algorithmSuite:Lorg/apache/wss4j/policy/model/AlgorithmSuite;
       4: areturn

  protected void setAlgorithmSuite(org.apache.wss4j.policy.model.AlgorithmSuite);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field algorithmSuite:Lorg/apache/wss4j/policy/model/AlgorithmSuite;
       5: return

  public org.apache.wss4j.policy.model.Layout getLayout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field layout:Lorg/apache/wss4j/policy/model/Layout;
       4: areturn

  protected void setLayout(org.apache.wss4j.policy.model.Layout);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field layout:Lorg/apache/wss4j/policy/model/Layout;
       5: return

  public boolean isIncludeTimestamp();
    Code:
       0: aload_0
       1: getfield      #47                 // Field includeTimestamp:Z
       4: ireturn

  protected void setIncludeTimestamp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field includeTimestamp:Z
       5: return
}
