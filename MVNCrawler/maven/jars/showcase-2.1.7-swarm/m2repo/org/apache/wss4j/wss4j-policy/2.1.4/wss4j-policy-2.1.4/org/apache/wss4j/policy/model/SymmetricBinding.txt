Compiled from "SymmetricBinding.java"
public class org.apache.wss4j.policy.model.SymmetricBinding extends org.apache.wss4j.policy.model.AbstractSymmetricAsymmetricBinding {
  private org.apache.wss4j.policy.model.EncryptionToken encryptionToken;

  private org.apache.wss4j.policy.model.SignatureToken signatureToken;

  private org.apache.wss4j.policy.model.ProtectionToken protectionToken;

  public org.apache.wss4j.policy.model.SymmetricBinding(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractSymmetricAsymmetricBinding."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
       6: aload_0
       7: aload_2
       8: aload_0
       9: invokevirtual #2                  // Method parseNestedPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/SymmetricBinding;)V
      12: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #5                  // Method org/apache/wss4j/policy/SPConstants.getSymmetricBinding:()Ljavax/xml/namespace/QName;
      10: areturn

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #6                  // class org/apache/wss4j/policy/model/SymmetricBinding
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_1
       9: invokespecial #7                  // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
      12: areturn

  protected void parseNestedPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.SymmetricBinding);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          325
      14: aload_3
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #11                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     325
      40: aload         4
      42: iload         5
      44: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #14                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #15,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: aload         6
      68: invokeinterface #15,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      73: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      76: astore        8
      78: aload_0
      79: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
      82: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
      85: invokevirtual #18                 // Method org/apache/wss4j/policy/SPConstants.getEncryptionToken:()Ljavax/xml/namespace/QName;
      88: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      91: aload         7
      93: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          156
      99: aload_0
     100: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     103: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     106: invokevirtual #18                 // Method org/apache/wss4j/policy/SPConstants.getEncryptionToken:()Ljavax/xml/namespace/QName;
     109: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     112: aload         8
     114: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     117: ifeq          156
     120: aload_2
     121: invokevirtual #20                 // Method getEncryptionToken:()Lorg/apache/wss4j/policy/model/EncryptionToken;
     124: ifnonnull     134
     127: aload_2
     128: invokevirtual #21                 // Method getProtectionToken:()Lorg/apache/wss4j/policy/model/ProtectionToken;
     131: ifnull        144
     134: new           #22                 // class java/lang/IllegalArgumentException
     137: dup
     138: ldc           #23                 // String Invalid Policy
     140: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: aload_2
     145: aload         6
     147: checkcast     #25                 // class org/apache/wss4j/policy/model/EncryptionToken
     150: invokevirtual #26                 // Method setEncryptionToken:(Lorg/apache/wss4j/policy/model/EncryptionToken;)V
     153: goto          319
     156: aload_0
     157: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     160: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     163: invokevirtual #27                 // Method org/apache/wss4j/policy/SPConstants.getSignatureToken:()Ljavax/xml/namespace/QName;
     166: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     169: aload         7
     171: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     174: ifeq          234
     177: aload_0
     178: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     181: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     184: invokevirtual #27                 // Method org/apache/wss4j/policy/SPConstants.getSignatureToken:()Ljavax/xml/namespace/QName;
     187: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     190: aload         8
     192: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     195: ifeq          234
     198: aload_2
     199: invokevirtual #28                 // Method getSignatureToken:()Lorg/apache/wss4j/policy/model/SignatureToken;
     202: ifnonnull     212
     205: aload_2
     206: invokevirtual #21                 // Method getProtectionToken:()Lorg/apache/wss4j/policy/model/ProtectionToken;
     209: ifnull        222
     212: new           #22                 // class java/lang/IllegalArgumentException
     215: dup
     216: ldc           #23                 // String Invalid Policy
     218: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     221: athrow
     222: aload_2
     223: aload         6
     225: checkcast     #29                 // class org/apache/wss4j/policy/model/SignatureToken
     228: invokevirtual #30                 // Method setSignatureToken:(Lorg/apache/wss4j/policy/model/SignatureToken;)V
     231: goto          319
     234: aload_0
     235: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     238: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     241: invokevirtual #31                 // Method org/apache/wss4j/policy/SPConstants.getProtectionToken:()Ljavax/xml/namespace/QName;
     244: invokevirtual #16                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     247: aload         7
     249: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     252: ifeq          319
     255: aload_0
     256: invokevirtual #3                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     259: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     262: invokevirtual #31                 // Method org/apache/wss4j/policy/SPConstants.getProtectionToken:()Ljavax/xml/namespace/QName;
     265: invokevirtual #17                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     268: aload         8
     270: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     273: ifeq          319
     276: aload_2
     277: invokevirtual #21                 // Method getProtectionToken:()Lorg/apache/wss4j/policy/model/ProtectionToken;
     280: ifnonnull     297
     283: aload_2
     284: invokevirtual #20                 // Method getEncryptionToken:()Lorg/apache/wss4j/policy/model/EncryptionToken;
     287: ifnonnull     297
     290: aload_2
     291: invokevirtual #28                 // Method getSignatureToken:()Lorg/apache/wss4j/policy/model/SignatureToken;
     294: ifnull        307
     297: new           #22                 // class java/lang/IllegalArgumentException
     300: dup
     301: ldc           #23                 // String Invalid Policy
     303: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     306: athrow
     307: aload_2
     308: aload         6
     310: checkcast     #32                 // class org/apache/wss4j/policy/model/ProtectionToken
     313: invokevirtual #33                 // Method setProtectionToken:(Lorg/apache/wss4j/policy/model/ProtectionToken;)V
     316: goto          319
     319: iinc          5, 1
     322: goto          28
     325: return

  public org.apache.wss4j.policy.model.EncryptionToken getEncryptionToken();
    Code:
       0: aload_0
       1: getfield      #34                 // Field encryptionToken:Lorg/apache/wss4j/policy/model/EncryptionToken;
       4: areturn

  protected void setEncryptionToken(org.apache.wss4j.policy.model.EncryptionToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field encryptionToken:Lorg/apache/wss4j/policy/model/EncryptionToken;
       5: return

  public org.apache.wss4j.policy.model.SignatureToken getSignatureToken();
    Code:
       0: aload_0
       1: getfield      #35                 // Field signatureToken:Lorg/apache/wss4j/policy/model/SignatureToken;
       4: areturn

  protected void setSignatureToken(org.apache.wss4j.policy.model.SignatureToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field signatureToken:Lorg/apache/wss4j/policy/model/SignatureToken;
       5: return

  public org.apache.wss4j.policy.model.ProtectionToken getProtectionToken();
    Code:
       0: aload_0
       1: getfield      #36                 // Field protectionToken:Lorg/apache/wss4j/policy/model/ProtectionToken;
       4: areturn

  protected void setProtectionToken(org.apache.wss4j.policy.model.ProtectionToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field protectionToken:Lorg/apache/wss4j/policy/model/ProtectionToken;
       5: return
}
