Compiled from "Layout.java"
public class org.apache.wss4j.policy.model.Layout extends org.apache.wss4j.policy.model.AbstractSecurityAssertion implements org.apache.neethi.PolicyContainingAssertion {
  private org.apache.neethi.Policy nestedPolicy;

  private org.apache.wss4j.policy.model.Layout$LayoutType layoutType;

  public org.apache.wss4j.policy.model.Layout(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;)V
       5: aload_0
       6: getstatic     #2                  // Field org/apache/wss4j/policy/model/Layout$LayoutType.Lax:Lorg/apache/wss4j/policy/model/Layout$LayoutType;
       9: putfield      #3                  // Field layoutType:Lorg/apache/wss4j/policy/model/Layout$LayoutType;
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field nestedPolicy:Lorg/apache/neethi/Policy;
      17: aload_0
      18: aload_2
      19: aload_0
      20: invokevirtual #5                  // Method parseNestedPolicy:(Lorg/apache/neethi/Policy;Lorg/apache/wss4j/policy/model/Layout;)V
      23: return

  public org.apache.neethi.Policy getPolicy();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nestedPolicy:Lorg/apache/neethi/Policy;
       4: areturn

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #7                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #8                  // Method org/apache/wss4j/policy/SPConstants.getLayout:()Ljavax/xml/namespace/QName;
      10: areturn

  public org.apache.neethi.PolicyComponent normalize();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #9                  // Method getPolicy:()Lorg/apache/neethi/Policy;
       5: invokespecial #10                 // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion.normalize:(Lorg/apache/neethi/Policy;)Lorg/apache/neethi/PolicyComponent;
       8: areturn

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #9                  // Method getPolicy:()Lorg/apache/neethi/Policy;
       6: invokespecial #11                 // Method org/apache/wss4j/policy/model/AbstractSecurityAssertion.serialize:(Ljavax/xml/stream/XMLStreamWriter;Lorg/apache/neethi/Policy;)V
       9: return

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #12                 // class org/apache/wss4j/policy/model/Layout
       3: dup
       4: aload_0
       5: invokevirtual #6                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_1
       9: invokespecial #13                 // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
      12: areturn

  protected void parseNestedPolicy(org.apache.neethi.Policy, org.apache.wss4j.policy.model.Layout);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
       4: astore_3
       5: aload_3
       6: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          93
      14: aload_3
      15: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #17                 // class java/util/List
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: aload         4
      32: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      37: if_icmpge     93
      40: aload         4
      42: iload         5
      44: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #20                 // class org/apache/neethi/Assertion
      52: astore        6
      54: aload         6
      56: invokeinterface #21,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      61: invokevirtual #22                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      64: astore        7
      66: aload         7
      68: invokestatic  #23                 // Method org/apache/wss4j/policy/model/Layout$LayoutType.lookUp:(Ljava/lang/String;)Lorg/apache/wss4j/policy/model/Layout$LayoutType;
      71: astore        8
      73: aload         8
      75: ifnull        87
      78: aload_2
      79: aload         8
      81: invokevirtual #24                 // Method setLayoutType:(Lorg/apache/wss4j/policy/model/Layout$LayoutType;)V
      84: goto          87
      87: iinc          5, 1
      90: goto          28
      93: return

  public org.apache.wss4j.policy.model.Layout$LayoutType getLayoutType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field layoutType:Lorg/apache/wss4j/policy/model/Layout$LayoutType;
       4: areturn

  protected void setLayoutType(org.apache.wss4j.policy.model.Layout$LayoutType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field layoutType:Lorg/apache/wss4j/policy/model/Layout$LayoutType;
       5: return
}
