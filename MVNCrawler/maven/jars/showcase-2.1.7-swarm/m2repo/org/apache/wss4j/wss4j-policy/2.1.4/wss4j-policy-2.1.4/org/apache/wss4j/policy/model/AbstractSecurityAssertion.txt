Compiled from "AbstractSecurityAssertion.java"
public abstract class org.apache.wss4j.policy.model.AbstractSecurityAssertion implements org.apache.neethi.Assertion {
  private boolean isOptional;

  private boolean isIgnorable;

  private volatile org.apache.neethi.PolicyComponent normalized;

  private org.apache.wss4j.policy.SPConstants$SPVersion version;

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion(org.apache.wss4j.policy.SPConstants$SPVersion);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field version:Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       9: return

  public boolean isOptional();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isOptional:Z
       4: ireturn

  public void setOptional(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field isOptional:Z
       5: return

  public boolean isIgnorable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isIgnorable:Z
       4: ireturn

  public void setIgnorable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field isIgnorable:Z
       5: return

  public short getType();
    Code:
       0: iconst_5
       1: ireturn

  public boolean equal(org.apache.neethi.PolicyComponent);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public org.apache.neethi.PolicyComponent normalize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
       4: ifnonnull     88
       7: new           #6                  // class org/apache/neethi/Policy
      10: dup
      11: invokespecial #7                  // Method org/apache/neethi/Policy."<init>":()V
      14: astore_1
      15: new           #8                  // class org/apache/neethi/ExactlyOne
      18: dup
      19: invokespecial #9                  // Method org/apache/neethi/ExactlyOne."<init>":()V
      22: astore_2
      23: aload_1
      24: aload_2
      25: invokevirtual #10                 // Method org/apache/neethi/Policy.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      28: aload_0
      29: invokevirtual #11                 // Method isOptional:()Z
      32: ifeq          46
      35: aload_2
      36: new           #12                 // class org/apache/neethi/All
      39: dup
      40: invokespecial #13                 // Method org/apache/neethi/All."<init>":()V
      43: invokevirtual #14                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      46: aload_0
      47: aconst_null
      48: invokevirtual #15                 // Method clone:(Lorg/apache/neethi/Policy;)Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;
      51: astore_3
      52: aload_3
      53: aload_3
      54: putfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
      57: aload_3
      58: iconst_0
      59: invokevirtual #16                 // Method setOptional:(Z)V
      62: new           #12                 // class org/apache/neethi/All
      65: dup
      66: invokespecial #13                 // Method org/apache/neethi/All."<init>":()V
      69: astore        4
      71: aload         4
      73: aload_3
      74: invokevirtual #17                 // Method org/apache/neethi/All.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      77: aload_2
      78: aload         4
      80: invokevirtual #14                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      83: aload_0
      84: aload_1
      85: putfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
      88: aload_0
      89: getfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
      92: areturn

  public boolean isNormalized();
    Code:
       0: aload_0
       1: getfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public org.apache.neethi.PolicyComponent normalize(org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: getfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
       4: ifnonnull     191
       7: aload_1
       8: iconst_1
       9: invokevirtual #18                 // Method org/apache/neethi/Policy.normalize:(Z)Lorg/apache/neethi/Policy;
      12: astore_2
      13: new           #6                  // class org/apache/neethi/Policy
      16: dup
      17: invokespecial #7                  // Method org/apache/neethi/Policy."<init>":()V
      20: astore_3
      21: new           #8                  // class org/apache/neethi/ExactlyOne
      24: dup
      25: invokespecial #9                  // Method org/apache/neethi/ExactlyOne."<init>":()V
      28: astore        4
      30: aload_3
      31: aload         4
      33: invokevirtual #10                 // Method org/apache/neethi/Policy.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      36: aload_0
      37: invokevirtual #11                 // Method isOptional:()Z
      40: ifeq          55
      43: aload         4
      45: new           #12                 // class org/apache/neethi/All
      48: dup
      49: invokespecial #13                 // Method org/apache/neethi/All."<init>":()V
      52: invokevirtual #14                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
      55: aload_2
      56: invokevirtual #19                 // Method org/apache/neethi/Policy.getAlternatives:()Ljava/util/Iterator;
      59: astore        5
      61: aload         5
      63: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          186
      71: aload         5
      73: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #22                 // class java/util/List
      81: astore        6
      83: new           #6                  // class org/apache/neethi/Policy
      86: dup
      87: aload_1
      88: invokevirtual #23                 // Method org/apache/neethi/Policy.getPolicyRegistry:()Lorg/apache/neethi/PolicyRegistry;
      91: aload_1
      92: invokevirtual #24                 // Method org/apache/neethi/Policy.getNamespace:()Ljava/lang/String;
      95: invokespecial #25                 // Method org/apache/neethi/Policy."<init>":(Lorg/apache/neethi/PolicyRegistry;Ljava/lang/String;)V
      98: astore        7
     100: new           #8                  // class org/apache/neethi/ExactlyOne
     103: dup
     104: invokespecial #9                  // Method org/apache/neethi/ExactlyOne."<init>":()V
     107: astore        8
     109: aload         7
     111: aload         8
     113: invokevirtual #10                 // Method org/apache/neethi/Policy.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     116: new           #12                 // class org/apache/neethi/All
     119: dup
     120: invokespecial #13                 // Method org/apache/neethi/All."<init>":()V
     123: astore        9
     125: aload         8
     127: aload         9
     129: invokevirtual #14                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     132: aload         9
     134: aload         6
     136: invokevirtual #26                 // Method org/apache/neethi/All.addPolicyComponents:(Ljava/util/List;)V
     139: aload_0
     140: aload         7
     142: invokevirtual #15                 // Method clone:(Lorg/apache/neethi/Policy;)Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;
     145: astore        10
     147: aload         10
     149: aload         10
     151: putfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
     154: aload         10
     156: iconst_0
     157: invokevirtual #16                 // Method setOptional:(Z)V
     160: new           #12                 // class org/apache/neethi/All
     163: dup
     164: invokespecial #13                 // Method org/apache/neethi/All."<init>":()V
     167: astore        11
     169: aload         11
     171: aload         10
     173: invokevirtual #17                 // Method org/apache/neethi/All.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     176: aload         4
     178: aload         11
     180: invokevirtual #14                 // Method org/apache/neethi/ExactlyOne.addPolicyComponent:(Lorg/apache/neethi/PolicyComponent;)V
     183: goto          61
     186: aload_0
     187: aload_3
     188: putfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
     191: aload_0
     192: getfield      #5                  // Field normalized:Lorg/apache/neethi/PolicyComponent;
     195: areturn

  public org.apache.wss4j.policy.SPConstants$SPVersion getVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: areturn

  public void serialize(javax.xml.stream.XMLStreamWriter, org.apache.neethi.Policy) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #27                 // Method getName:()Ljavax/xml/namespace/QName;
       5: invokevirtual #28                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #27                 // Method getName:()Ljavax/xml/namespace/QName;
      12: invokevirtual #29                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      15: aload_0
      16: invokevirtual #27                 // Method getName:()Ljavax/xml/namespace/QName;
      19: invokevirtual #30                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      22: invokeinterface #31,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeStartElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: aload_1
      28: aload_0
      29: invokevirtual #27                 // Method getName:()Ljavax/xml/namespace/QName;
      32: invokevirtual #28                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      35: aload_0
      36: invokevirtual #27                 // Method getName:()Ljavax/xml/namespace/QName;
      39: invokevirtual #30                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      42: invokeinterface #32,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeNamespace:(Ljava/lang/String;Ljava/lang/String;)V
      47: aload_0
      48: invokevirtual #11                 // Method isOptional:()Z
      51: ifeq          79
      54: aload_1
      55: ldc           #33                 // String wsp
      57: aload_1
      58: invokeinterface #34,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
      63: ldc           #33                 // String wsp
      65: invokeinterface #35,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
      70: ldc           #36                 // String Optional
      72: ldc           #37                 // String true
      74: invokeinterface #38,  5           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      79: aload_0
      80: invokevirtual #39                 // Method isIgnorable:()Z
      83: ifeq          111
      86: aload_1
      87: ldc           #33                 // String wsp
      89: aload_1
      90: invokeinterface #34,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
      95: ldc           #33                 // String wsp
      97: invokeinterface #35,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
     102: ldc           #40                 // String Ignorable
     104: ldc           #37                 // String true
     106: invokeinterface #38,  5           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     111: aload_2
     112: aload_1
     113: invokevirtual #41                 // Method org/apache/neethi/Policy.serialize:(Ljavax/xml/stream/XMLStreamWriter;)V
     116: aload_1
     117: invokeinterface #42,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEndElement:()V
     122: return

  protected abstract org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);

  public org.apache.wss4j.policy.model.AbstractSecurityAssertion clone(org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method cloneAssertion:(Lorg/apache/neethi/Policy;)Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;
       5: astore_2
       6: aload_2
       7: aload_0
       8: invokevirtual #39                 // Method isIgnorable:()Z
      11: invokevirtual #44                 // Method setIgnorable:(Z)V
      14: aload_2
      15: aload_0
      16: invokevirtual #11                 // Method isOptional:()Z
      19: invokevirtual #16                 // Method setOptional:(Z)V
      22: aload_2
      23: areturn

  public boolean isAsserted(java.util.Map<javax.xml.namespace.QName, java.util.List<org.apache.wss4j.policy.AssertionState>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #27                 // Method getName:()Ljavax/xml/namespace/QName;
       5: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class java/util/List
      13: astore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_2
      18: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      23: if_icmpge     63
      26: aload_2
      27: iload_3
      28: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      33: checkcast     #48                 // class org/apache/wss4j/policy/AssertionState
      36: astore        4
      38: aload         4
      40: invokevirtual #49                 // Method org/apache/wss4j/policy/AssertionState.getAssertion:()Lorg/apache/neethi/Assertion;
      43: aload_0
      44: if_acmpne     57
      47: aload         4
      49: invokevirtual #50                 // Method org/apache/wss4j/policy/AssertionState.isAsserted:()Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: iinc          3, 1
      60: goto          16
      63: iconst_1
      64: ireturn
}
