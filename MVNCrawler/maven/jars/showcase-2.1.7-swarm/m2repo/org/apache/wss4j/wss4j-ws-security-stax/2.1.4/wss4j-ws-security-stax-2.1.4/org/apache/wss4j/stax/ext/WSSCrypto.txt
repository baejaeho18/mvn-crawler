Compiled from "WSSCrypto.java"
class org.apache.wss4j.stax.ext.WSSCrypto {
  protected static final transient org.slf4j.Logger log;

  private java.lang.Class<? extends org.apache.wss4j.common.crypto.Merlin> cryptoClass;

  private java.util.Properties cryptoProperties;

  private org.apache.wss4j.common.crypto.Crypto cachedCrypto;

  private java.security.KeyStore cachedKeyStore;

  private java.security.KeyStore keyStore;

  private java.security.cert.CertStore crlCertStore;

  private org.apache.wss4j.common.crypto.PasswordEncryptor passwordEncryptor;

  org.apache.wss4j.stax.ext.WSSCrypto();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc_w         #2                  // class org/apache/wss4j/common/crypto/Merlin
       8: putfield      #3                  // Field cryptoClass:Ljava/lang/Class;
      11: return

  public org.apache.wss4j.common.crypto.Crypto getCrypto() throws org.apache.wss4j.stax.ext.WSSConfigurationException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyStore:Ljava/security/KeyStore;
       4: aload_0
       5: getfield      #5                  // Field cachedKeyStore:Ljava/security/KeyStore;
       8: if_acmpne     23
      11: aload_0
      12: getfield      #6                  // Field cachedCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
      15: ifnull        23
      18: aload_0
      19: getfield      #6                  // Field cachedCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
      22: areturn
      23: aconst_null
      24: astore_1
      25: aload_0
      26: getfield      #7                  // Field cryptoProperties:Ljava/util/Properties;
      29: ifnull        123
      32: aload_0
      33: getfield      #3                  // Field cryptoClass:Ljava/lang/Class;
      36: iconst_3
      37: anewarray     #8                  // class java/lang/Class
      40: dup
      41: iconst_0
      42: ldc_w         #9                  // class java/util/Properties
      45: aastore
      46: dup
      47: iconst_1
      48: ldc_w         #10                 // class java/lang/ClassLoader
      51: aastore
      52: dup
      53: iconst_2
      54: ldc_w         #11                 // class org/apache/wss4j/common/crypto/PasswordEncryptor
      57: aastore
      58: invokevirtual #12                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      61: astore_2
      62: aload_2
      63: iconst_3
      64: anewarray     #13                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: aload_0
      70: getfield      #7                  // Field cryptoProperties:Ljava/util/Properties;
      73: aastore
      74: dup
      75: iconst_1
      76: ldc_w         #14                 // class org/apache/wss4j/common/crypto/CryptoFactory
      79: invokestatic  #15                 // Method org/apache/wss4j/common/util/Loader.getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      82: aastore
      83: dup
      84: iconst_2
      85: aload_0
      86: getfield      #16                 // Field passwordEncryptor:Lorg/apache/wss4j/common/crypto/PasswordEncryptor;
      89: aastore
      90: invokevirtual #17                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      93: checkcast     #2                  // class org/apache/wss4j/common/crypto/Merlin
      96: astore_1
      97: aload_0
      98: aload_1
      99: invokevirtual #18                 // Method org/apache/wss4j/common/crypto/Merlin.getKeyStore:()Ljava/security/KeyStore;
     102: putfield      #4                  // Field keyStore:Ljava/security/KeyStore;
     105: goto          194
     108: astore_2
     109: new           #20                 // class org/apache/wss4j/stax/ext/WSSConfigurationException
     112: dup
     113: getstatic     #21                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
     116: aload_2
     117: ldc           #22                 // String signatureCryptoFailure
     119: invokespecial #23                 // Method org/apache/wss4j/stax/ext/WSSConfigurationException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;Ljava/lang/String;)V
     122: athrow
     123: aload_0
     124: getfield      #3                  // Field cryptoClass:Ljava/lang/Class;
     127: invokevirtual #24                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     130: checkcast     #2                  // class org/apache/wss4j/common/crypto/Merlin
     133: astore_1
     134: aload_1
     135: ldc           #25                 // String DefaultX509Alias
     137: invokestatic  #26                 // Method org/apache/xml/security/stax/config/ConfigurationProperties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     140: invokevirtual #27                 // Method org/apache/wss4j/common/crypto/Merlin.setDefaultX509Identifier:(Ljava/lang/String;)V
     143: aload_1
     144: ldc           #28                 // String CertProvider
     146: invokestatic  #26                 // Method org/apache/xml/security/stax/config/ConfigurationProperties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     149: invokevirtual #29                 // Method org/apache/wss4j/common/crypto/Merlin.setCryptoProvider:(Ljava/lang/String;)V
     152: aload_1
     153: aload_0
     154: invokevirtual #30                 // Method getKeyStore:()Ljava/security/KeyStore;
     157: invokevirtual #31                 // Method org/apache/wss4j/common/crypto/Merlin.setKeyStore:(Ljava/security/KeyStore;)V
     160: aload_1
     161: aload_0
     162: invokevirtual #32                 // Method getCrlCertStore:()Ljava/security/cert/CertStore;
     165: invokevirtual #33                 // Method org/apache/wss4j/common/crypto/Merlin.setCRLCertStore:(Ljava/security/cert/CertStore;)V
     168: aload_1
     169: aload_0
     170: getfield      #16                 // Field passwordEncryptor:Lorg/apache/wss4j/common/crypto/PasswordEncryptor;
     173: invokevirtual #34                 // Method org/apache/wss4j/common/crypto/Merlin.setPasswordEncryptor:(Lorg/apache/wss4j/common/crypto/PasswordEncryptor;)V
     176: goto          194
     179: astore_2
     180: new           #20                 // class org/apache/wss4j/stax/ext/WSSConfigurationException
     183: dup
     184: getstatic     #21                 // Field org/apache/wss4j/common/ext/WSSecurityException$ErrorCode.FAILURE:Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;
     187: aload_2
     188: ldc           #22                 // String signatureCryptoFailure
     190: invokespecial #23                 // Method org/apache/wss4j/stax/ext/WSSConfigurationException."<init>":(Lorg/apache/wss4j/common/ext/WSSecurityException$ErrorCode;Ljava/lang/Exception;Ljava/lang/String;)V
     193: athrow
     194: aload_0
     195: aload_1
     196: putfield      #6                  // Field cachedCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
     199: aload_0
     200: aload_1
     201: invokevirtual #18                 // Method org/apache/wss4j/common/crypto/Merlin.getKeyStore:()Ljava/security/KeyStore;
     204: putfield      #5                  // Field cachedKeyStore:Ljava/security/KeyStore;
     207: aload_1
     208: areturn
    Exception table:
       from    to  target type
          32   105   108   Class java/lang/Exception
         123   176   179   Class java/lang/Exception

  public void setCrypto(org.apache.wss4j.common.crypto.Crypto);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field cachedCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
       5: aload_1
       6: instanceof    #2                  // class org/apache/wss4j/common/crypto/Merlin
       9: ifeq          31
      12: aload_0
      13: aload_1
      14: checkcast     #2                  // class org/apache/wss4j/common/crypto/Merlin
      17: invokevirtual #18                 // Method org/apache/wss4j/common/crypto/Merlin.getKeyStore:()Ljava/security/KeyStore;
      20: putfield      #4                  // Field keyStore:Ljava/security/KeyStore;
      23: aload_0
      24: aload_0
      25: getfield      #4                  // Field keyStore:Ljava/security/KeyStore;
      28: putfield      #5                  // Field cachedKeyStore:Ljava/security/KeyStore;
      31: return

  public java.lang.Class<? extends org.apache.wss4j.common.crypto.Merlin> getCryptoClass();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cryptoClass:Ljava/lang/Class;
       4: areturn

  public void setCryptoClass(java.lang.Class<? extends org.apache.wss4j.common.crypto.Merlin>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field cryptoClass:Ljava/lang/Class;
       5: return

  public java.util.Properties getCryptoProperties();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cryptoProperties:Ljava/util/Properties;
       4: areturn

  public void setCryptoProperties(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field cryptoProperties:Ljava/util/Properties;
       5: return

  public java.security.KeyStore getKeyStore();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyStore:Ljava/security/KeyStore;
       4: areturn

  public void setKeyStore(java.security.KeyStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field keyStore:Ljava/security/KeyStore;
       5: return

  public java.security.cert.CertStore getCrlCertStore();
    Code:
       0: aload_0
       1: getfield      #35                 // Field crlCertStore:Ljava/security/cert/CertStore;
       4: areturn

  public void setCrlCertStore(java.security.cert.CertStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field crlCertStore:Ljava/security/cert/CertStore;
       5: return

  public org.apache.wss4j.common.crypto.PasswordEncryptor getPasswordEncryptor();
    Code:
       0: aload_0
       1: getfield      #16                 // Field passwordEncryptor:Lorg/apache/wss4j/common/crypto/PasswordEncryptor;
       4: areturn

  public void setPasswordEncryptor(org.apache.wss4j.common.crypto.PasswordEncryptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field passwordEncryptor:Lorg/apache/wss4j/common/crypto/PasswordEncryptor;
       5: return

  static {};
    Code:
       0: ldc_w         #36                 // class org/apache/wss4j/stax/ext/WSSCrypto
       3: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #38                 // Field log:Lorg/slf4j/Logger;
       9: return
}
