Compiled from "SignedParts.java"
public class org.apache.wss4j.policy.model.SignedParts extends org.apache.wss4j.policy.model.RequiredParts {
  private boolean body;

  private org.apache.wss4j.policy.model.Attachments attachments;

  private boolean signAllHeaders;

  public org.apache.wss4j.policy.model.SignedParts(org.apache.wss4j.policy.SPConstants$SPVersion, boolean, org.apache.wss4j.policy.model.Attachments, java.util.List<org.apache.wss4j.policy.model.Header>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokespecial #1                  // Method org/apache/wss4j/policy/model/RequiredParts."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Ljava/util/List;)V
       7: aload_0
       8: iload_2
       9: putfield      #2                  // Field body:Z
      12: aload_0
      13: aload_3
      14: putfield      #3                  // Field attachments:Lorg/apache/wss4j/policy/model/Attachments;
      17: aload_0
      18: iload         5
      20: putfield      #4                  // Field signAllHeaders:Z
      23: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #6                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #7                  // Method org/apache/wss4j/policy/SPConstants.getSignedParts:()Ljavax/xml/namespace/QName;
      10: areturn

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #8                  // Method getName:()Ljavax/xml/namespace/QName;
       5: invokevirtual #9                  // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #8                  // Method getName:()Ljavax/xml/namespace/QName;
      12: invokevirtual #10                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      15: aload_0
      16: invokevirtual #8                  // Method getName:()Ljavax/xml/namespace/QName;
      19: invokevirtual #11                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      22: invokeinterface #12,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeStartElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: aload_1
      28: aload_0
      29: invokevirtual #8                  // Method getName:()Ljavax/xml/namespace/QName;
      32: invokevirtual #9                  // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      35: aload_0
      36: invokevirtual #8                  // Method getName:()Ljavax/xml/namespace/QName;
      39: invokevirtual #11                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      42: invokeinterface #13,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeNamespace:(Ljava/lang/String;Ljava/lang/String;)V
      47: aload_0
      48: invokevirtual #14                 // Method isNormalized:()Z
      51: ifne          86
      54: aload_0
      55: invokevirtual #15                 // Method isOptional:()Z
      58: ifeq          86
      61: aload_1
      62: ldc           #16                 // String wsp
      64: aload_1
      65: invokeinterface #17,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
      70: ldc           #16                 // String wsp
      72: invokeinterface #18,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
      77: ldc           #19                 // String Optional
      79: ldc           #20                 // String true
      81: invokeinterface #21,  5           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      86: aload_0
      87: invokevirtual #22                 // Method isIgnorable:()Z
      90: ifeq          118
      93: aload_1
      94: ldc           #16                 // String wsp
      96: aload_1
      97: invokeinterface #17,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
     102: ldc           #16                 // String wsp
     104: invokeinterface #18,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
     109: ldc           #23                 // String Ignorable
     111: ldc           #20                 // String true
     113: invokeinterface #21,  5           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     118: aload_0
     119: invokevirtual #24                 // Method isBody:()Z
     122: ifeq          154
     125: aload_0
     126: invokevirtual #5                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     129: invokevirtual #6                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     132: invokevirtual #25                 // Method org/apache/wss4j/policy/SPConstants.getBody:()Ljavax/xml/namespace/QName;
     135: astore_2
     136: aload_1
     137: aload_2
     138: invokevirtual #9                  // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     141: aload_2
     142: invokevirtual #10                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     145: aload_2
     146: invokevirtual #11                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     149: invokeinterface #26,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEmptyElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     154: iconst_0
     155: istore_2
     156: iload_2
     157: aload_0
     158: invokevirtual #27                 // Method getHeaders:()Ljava/util/List;
     161: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
     166: if_icmpge     253
     169: aload_0
     170: invokevirtual #27                 // Method getHeaders:()Ljava/util/List;
     173: iload_2
     174: invokeinterface #29,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     179: checkcast     #30                 // class org/apache/wss4j/policy/model/Header
     182: astore_3
     183: aload_0
     184: invokevirtual #5                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
     187: invokevirtual #6                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
     190: invokevirtual #31                 // Method org/apache/wss4j/policy/SPConstants.getHeader:()Ljavax/xml/namespace/QName;
     193: astore        4
     195: aload_1
     196: aload         4
     198: invokevirtual #9                  // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
     201: aload         4
     203: invokevirtual #10                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
     206: aload         4
     208: invokevirtual #11                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
     211: invokeinterface #26,  4           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEmptyElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     216: aload_3
     217: invokevirtual #32                 // Method org/apache/wss4j/policy/model/Header.getName:()Ljava/lang/String;
     220: ifnull        235
     223: aload_1
     224: ldc           #33                 // String Name
     226: aload_3
     227: invokevirtual #32                 // Method org/apache/wss4j/policy/model/Header.getName:()Ljava/lang/String;
     230: invokeinterface #34,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     235: aload_1
     236: ldc           #35                 // String Namespace
     238: aload_3
     239: invokevirtual #36                 // Method org/apache/wss4j/policy/model/Header.getNamespace:()Ljava/lang/String;
     242: invokeinterface #34,  3           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     247: iinc          2, 1
     250: goto          156
     253: aload_0
     254: invokevirtual #37                 // Method getAttachments:()Lorg/apache/wss4j/policy/model/Attachments;
     257: ifnull        268
     260: aload_0
     261: invokevirtual #37                 // Method getAttachments:()Lorg/apache/wss4j/policy/model/Attachments;
     264: aload_1
     265: invokevirtual #38                 // Method org/apache/wss4j/policy/model/Attachments.serialize:(Ljavax/xml/stream/XMLStreamWriter;)V
     268: aload_1
     269: invokeinterface #39,  1           // InterfaceMethod javax/xml/stream/XMLStreamWriter.writeEndElement:()V
     274: return

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #40                 // class org/apache/wss4j/policy/model/SignedParts
       3: dup
       4: aload_0
       5: invokevirtual #5                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_0
       9: invokevirtual #24                 // Method isBody:()Z
      12: aload_0
      13: invokevirtual #37                 // Method getAttachments:()Lorg/apache/wss4j/policy/model/Attachments;
      16: ifnonnull     23
      19: aconst_null
      20: goto          34
      23: aload_0
      24: invokevirtual #37                 // Method getAttachments:()Lorg/apache/wss4j/policy/model/Attachments;
      27: aload_1
      28: invokevirtual #41                 // Method org/apache/wss4j/policy/model/Attachments.clone:(Lorg/apache/neethi/Policy;)Lorg/apache/wss4j/policy/model/AbstractSecurityAssertion;
      31: checkcast     #42                 // class org/apache/wss4j/policy/model/Attachments
      34: aload_0
      35: invokevirtual #27                 // Method getHeaders:()Ljava/util/List;
      38: aload_0
      39: invokevirtual #43                 // Method isSignAllHeaders:()Z
      42: invokespecial #44                 // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;ZLorg/apache/wss4j/policy/model/Attachments;Ljava/util/List;Z)V
      45: areturn

  public boolean isBody();
    Code:
       0: aload_0
       1: getfield      #2                  // Field body:Z
       4: ireturn

  protected void setBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field body:Z
       5: return

  public org.apache.wss4j.policy.model.Attachments getAttachments();
    Code:
       0: aload_0
       1: getfield      #3                  // Field attachments:Lorg/apache/wss4j/policy/model/Attachments;
       4: areturn

  protected void setAttachments(org.apache.wss4j.policy.model.Attachments);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field attachments:Lorg/apache/wss4j/policy/model/Attachments;
       5: return

  public boolean isSignAllHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field signAllHeaders:Z
       4: ireturn

  protected void setSignAllHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field signAllHeaders:Z
       5: return
}
