Compiled from "AssertionState.java"
public class org.apache.wss4j.policy.AssertionState {
  private org.apache.wss4j.policy.AssertionState$State state;

  private boolean asserted;

  private boolean logged;

  private org.apache.neethi.Assertion assertion;

  private java.lang.StringBuilder errorMessage;

  public org.apache.wss4j.policy.AssertionState(org.apache.neethi.Assertion, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/wss4j/policy/AssertionState$State.INIT:Lorg/apache/wss4j/policy/AssertionState$State;
       8: putfield      #3                  // Field state:Lorg/apache/wss4j/policy/AssertionState$State;
      11: aload_0
      12: new           #4                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      19: putfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field assertion:Lorg/apache/neethi/Assertion;
      27: aload_0
      28: iload_2
      29: putfield      #8                  // Field asserted:Z
      32: return

  public org.apache.neethi.Assertion getAssertion();
    Code:
       0: aload_0
       1: getfield      #7                  // Field assertion:Lorg/apache/neethi/Assertion;
       4: areturn

  public boolean isHardFailure();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lorg/apache/wss4j/policy/AssertionState$State;
       4: getstatic     #9                  // Field org/apache/wss4j/policy/AssertionState$State.HARD_FAILURE:Lorg/apache/wss4j/policy/AssertionState$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public synchronized void setAsserted(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lorg/apache/wss4j/policy/AssertionState$State;
       4: getstatic     #9                  // Field org/apache/wss4j/policy/AssertionState$State.HARD_FAILURE:Lorg/apache/wss4j/policy/AssertionState$State;
       7: if_acmpne     11
      10: return
      11: iload_1
      12: ifne          22
      15: aload_0
      16: getstatic     #9                  // Field org/apache/wss4j/policy/AssertionState$State.HARD_FAILURE:Lorg/apache/wss4j/policy/AssertionState$State;
      19: putfield      #3                  // Field state:Lorg/apache/wss4j/policy/AssertionState$State;
      22: aload_0
      23: iload_1
      24: putfield      #8                  // Field asserted:Z
      27: return

  public boolean isAsserted();
    Code:
       0: aload_0
       1: getfield      #8                  // Field asserted:Z
       4: ireturn

  public void setErrorMessage(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
       4: invokevirtual #10                 // Method java/lang/StringBuilder.length:()I
       7: ifle          20
      10: aload_0
      11: getfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
      14: ldc           #11                 // String \n
      16: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: getfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: return

  public java.lang.String getErrorMessage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
       4: invokevirtual #10                 // Method java/lang/StringBuilder.length:()I
       7: ifne          43
      10: new           #4                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #13                 // String Assertion
      19: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #7                  // Field assertion:Lorg/apache/neethi/Assertion;
      26: invokeinterface #14,  1           // InterfaceMethod org/apache/neethi/Assertion.getName:()Ljavax/xml/namespace/QName;
      31: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #16                 // String  not satisfied
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn
      43: aload_0
      44: getfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
      47: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn

  protected void clearErrorMessage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
       4: iconst_0
       5: aload_0
       6: getfield      #6                  // Field errorMessage:Ljava/lang/StringBuilder;
       9: invokevirtual #10                 // Method java/lang/StringBuilder.length:()I
      12: invokevirtual #18                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      15: pop
      16: return

  public boolean isLogged();
    Code:
       0: aload_0
       1: getfield      #19                 // Field logged:Z
       4: ireturn

  public void setLogged(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field logged:Z
       5: return
}
