Compiled from "RequestData.java"
public class org.apache.wss4j.dom.handler.RequestData {
  private java.lang.Object msgContext;

  private org.apache.wss4j.dom.SOAPConstants soapConstants;

  private java.lang.String actor;

  private java.lang.String username;

  private java.lang.String pwType;

  private org.apache.wss4j.common.crypto.Crypto sigVerCrypto;

  private org.apache.wss4j.common.crypto.Crypto decCrypto;

  private org.apache.wss4j.common.SignatureActionToken signatureToken;

  private org.apache.wss4j.common.EncryptionActionToken encryptionToken;

  private org.apache.wss4j.dom.engine.WSSConfig wssConfig;

  private java.util.List<byte[]> signatureValues;

  private org.apache.wss4j.dom.message.WSSecHeader secHeader;

  private int derivedKeyIterations;

  private boolean useDerivedKeyForMAC;

  private javax.security.auth.callback.CallbackHandler callback;

  private javax.security.auth.callback.CallbackHandler attachmentCallbackHandler;

  private boolean enableRevocation;

  private boolean requireSignedEncryptedDataElements;

  private org.apache.wss4j.common.cache.ReplayCache timestampReplayCache;

  private org.apache.wss4j.common.cache.ReplayCache nonceReplayCache;

  private org.apache.wss4j.common.cache.ReplayCache samlOneTimeUseReplayCache;

  private java.util.Collection<java.util.regex.Pattern> subjectDNPatterns;

  private final java.util.List<org.apache.wss4j.common.bsp.BSPRule> ignoredBSPRules;

  private boolean appendSignatureAfterTimestamp;

  private int originalSignatureActionPosition;

  private org.apache.wss4j.common.crypto.AlgorithmSuite algorithmSuite;

  private org.apache.wss4j.common.crypto.AlgorithmSuite samlAlgorithmSuite;

  private boolean disableBSPEnforcement;

  private boolean allowRSA15KeyTransportAlgorithm;

  private boolean addUsernameTokenNonce;

  private boolean addUsernameTokenCreated;

  private java.security.cert.Certificate[] tlsCerts;

  private boolean enableTimestampReplayCache;

  private boolean enableNonceReplayCache;

  private boolean enableSamlOneTimeUseReplayCache;

  private org.apache.wss4j.common.crypto.PasswordEncryptor passwordEncryptor;

  private java.lang.String derivedKeyTokenReference;

  private boolean use200512Namespace;

  private final java.util.List<java.lang.String> audienceRestrictions;

  private boolean requireTimestampExpires;

  private boolean storeBytesInAttachment;

  private boolean addInclusivePrefixes;

  private boolean precisionInMilliSeconds;

  private boolean enableSignatureConfirmation;

  private boolean timeStampStrict;

  private java.lang.String requiredPasswordType;

  private boolean allowUsernameTokenNoPassword;

  private int timeStampTTL;

  private int timeStampFutureTTL;

  private int utTTL;

  private int utFutureTTL;

  private boolean handleCustomPasswordTypes;

  private boolean allowNamespaceQualifiedPasswordTypes;

  private boolean encodePasswords;

  private boolean validateSamlSubjectConfirmation;

  private boolean expandXopIncludeForSignature;

  public org.apache.wss4j.dom.handler.RequestData();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest
       7: putfield      #3                  // Field pwType:Ljava/lang/String;
      10: aload_0
      11: new           #4                  // class java/util/ArrayList
      14: dup
      15: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      18: putfield      #6                  // Field signatureValues:Ljava/util/List;
      21: aload_0
      22: sipush        1000
      25: putfield      #7                  // Field derivedKeyIterations:I
      28: aload_0
      29: iconst_1
      30: putfield      #8                  // Field useDerivedKeyForMAC:Z
      33: aload_0
      34: new           #4                  // class java/util/ArrayList
      37: dup
      38: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      41: putfield      #9                  // Field subjectDNPatterns:Ljava/util/Collection;
      44: aload_0
      45: new           #10                 // class java/util/LinkedList
      48: dup
      49: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      52: putfield      #12                 // Field ignoredBSPRules:Ljava/util/List;
      55: aload_0
      56: iconst_1
      57: putfield      #13                 // Field enableTimestampReplayCache:Z
      60: aload_0
      61: iconst_1
      62: putfield      #14                 // Field enableNonceReplayCache:Z
      65: aload_0
      66: iconst_1
      67: putfield      #15                 // Field enableSamlOneTimeUseReplayCache:Z
      70: aload_0
      71: iconst_1
      72: putfield      #16                 // Field use200512Namespace:Z
      75: aload_0
      76: new           #4                  // class java/util/ArrayList
      79: dup
      80: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      83: putfield      #17                 // Field audienceRestrictions:Ljava/util/List;
      86: aload_0
      87: iconst_1
      88: putfield      #18                 // Field addInclusivePrefixes:Z
      91: aload_0
      92: iconst_1
      93: putfield      #19                 // Field precisionInMilliSeconds:Z
      96: aload_0
      97: iconst_1
      98: putfield      #20                 // Field timeStampStrict:Z
     101: aload_0
     102: sipush        300
     105: putfield      #21                 // Field timeStampTTL:I
     108: aload_0
     109: bipush        60
     111: putfield      #22                 // Field timeStampFutureTTL:I
     114: aload_0
     115: sipush        300
     118: putfield      #23                 // Field utTTL:I
     121: aload_0
     122: bipush        60
     124: putfield      #24                 // Field utFutureTTL:I
     127: aload_0
     128: iconst_1
     129: putfield      #25                 // Field validateSamlSubjectConfirmation:Z
     132: aload_0
     133: iconst_1
     134: putfield      #26                 // Field expandXopIncludeForSignature:Z
     137: return

  public boolean isEnableTimestampReplayCache();
    Code:
       0: aload_0
       1: getfield      #13                 // Field enableTimestampReplayCache:Z
       4: ireturn

  public void setEnableTimestampReplayCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field enableTimestampReplayCache:Z
       5: return

  public boolean isEnableNonceReplayCache();
    Code:
       0: aload_0
       1: getfield      #14                 // Field enableNonceReplayCache:Z
       4: ireturn

  public void setEnableNonceReplayCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field enableNonceReplayCache:Z
       5: return

  public java.lang.Object getMsgContext();
    Code:
       0: aload_0
       1: getfield      #27                 // Field msgContext:Ljava/lang/Object;
       4: areturn

  public void setMsgContext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field msgContext:Ljava/lang/Object;
       5: return

  public org.apache.wss4j.dom.SOAPConstants getSoapConstants();
    Code:
       0: aload_0
       1: getfield      #28                 // Field soapConstants:Lorg/apache/wss4j/dom/SOAPConstants;
       4: areturn

  public void setSoapConstants(org.apache.wss4j.dom.SOAPConstants);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field soapConstants:Lorg/apache/wss4j/dom/SOAPConstants;
       5: return

  public java.lang.String getActor();
    Code:
       0: aload_0
       1: getfield      #29                 // Field actor:Ljava/lang/String;
       4: areturn

  public void setActor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field actor:Ljava/lang/String;
       5: return

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #30                 // Field username:Ljava/lang/String;
       4: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field username:Ljava/lang/String;
       5: return

  public java.lang.String getPwType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pwType:Ljava/lang/String;
       4: areturn

  public void setPwType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field pwType:Ljava/lang/String;
       5: return

  public org.apache.wss4j.common.crypto.Crypto getSigVerCrypto();
    Code:
       0: aload_0
       1: getfield      #31                 // Field sigVerCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
       4: areturn

  public void setSigVerCrypto(org.apache.wss4j.common.crypto.Crypto);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field sigVerCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
       5: return

  public org.apache.wss4j.common.crypto.Crypto getDecCrypto();
    Code:
       0: aload_0
       1: getfield      #32                 // Field decCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
       4: areturn

  public void setDecCrypto(org.apache.wss4j.common.crypto.Crypto);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field decCrypto:Lorg/apache/wss4j/common/crypto/Crypto;
       5: return

  public org.apache.wss4j.dom.engine.WSSConfig getWssConfig();
    Code:
       0: aload_0
       1: getfield      #33                 // Field wssConfig:Lorg/apache/wss4j/dom/engine/WSSConfig;
       4: areturn

  public void setWssConfig(org.apache.wss4j.dom.engine.WSSConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field wssConfig:Lorg/apache/wss4j/dom/engine/WSSConfig;
       5: return

  public java.util.List<byte[]> getSignatureValues();
    Code:
       0: aload_0
       1: getfield      #6                  // Field signatureValues:Ljava/util/List;
       4: areturn

  public org.apache.wss4j.dom.message.WSSecHeader getSecHeader();
    Code:
       0: aload_0
       1: getfield      #34                 // Field secHeader:Lorg/apache/wss4j/dom/message/WSSecHeader;
       4: areturn

  public void setSecHeader(org.apache.wss4j.dom.message.WSSecHeader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field secHeader:Lorg/apache/wss4j/dom/message/WSSecHeader;
       5: return

  public void setDerivedKeyIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field derivedKeyIterations:I
       5: return

  public int getDerivedKeyIterations();
    Code:
       0: aload_0
       1: getfield      #7                  // Field derivedKeyIterations:I
       4: ireturn

  public void setUseDerivedKeyForMAC(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field useDerivedKeyForMAC:Z
       5: return

  public boolean isUseDerivedKeyForMAC();
    Code:
       0: aload_0
       1: getfield      #8                  // Field useDerivedKeyForMAC:Z
       4: ireturn

  public void setEnableRevocation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field enableRevocation:Z
       5: return

  public boolean isRevocationEnabled();
    Code:
       0: aload_0
       1: getfield      #35                 // Field enableRevocation:Z
       4: ireturn

  public boolean isRequireSignedEncryptedDataElements();
    Code:
       0: aload_0
       1: getfield      #36                 // Field requireSignedEncryptedDataElements:Z
       4: ireturn

  public void setRequireSignedEncryptedDataElements(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field requireSignedEncryptedDataElements:Z
       5: return

  public void setCallbackHandler(javax.security.auth.callback.CallbackHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field callback:Ljavax/security/auth/callback/CallbackHandler;
       5: return

  public javax.security.auth.callback.CallbackHandler getCallbackHandler();
    Code:
       0: aload_0
       1: getfield      #37                 // Field callback:Ljavax/security/auth/callback/CallbackHandler;
       4: areturn

  public javax.security.auth.callback.CallbackHandler getAttachmentCallbackHandler();
    Code:
       0: aload_0
       1: getfield      #38                 // Field attachmentCallbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       4: areturn

  public void setAttachmentCallbackHandler(javax.security.auth.callback.CallbackHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field attachmentCallbackHandler:Ljavax/security/auth/callback/CallbackHandler;
       5: return

  public org.apache.wss4j.dom.validate.Validator getValidator(javax.xml.namespace.QName) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field wssConfig:Lorg/apache/wss4j/dom/engine/WSSConfig;
       4: ifnull        16
       7: aload_0
       8: getfield      #33                 // Field wssConfig:Lorg/apache/wss4j/dom/engine/WSSConfig;
      11: aload_1
      12: invokevirtual #39                 // Method org/apache/wss4j/dom/engine/WSSConfig.getValidator:(Ljavax/xml/namespace/QName;)Lorg/apache/wss4j/dom/validate/Validator;
      15: areturn
      16: aconst_null
      17: areturn

  public void setTimestampReplayCache(org.apache.wss4j.common.cache.ReplayCache);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field timestampReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
       5: return

  public org.apache.wss4j.common.cache.ReplayCache getTimestampReplayCache() throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field enableTimestampReplayCache:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #40                 // Field timestampReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      11: ifnonnull     24
      14: aload_0
      15: aload_0
      16: ldc           #41                 // String wss4j.timestamp.cache-
      18: invokespecial #42                 // Method createCache:(Ljava/lang/String;)Lorg/apache/wss4j/common/cache/ReplayCache;
      21: putfield      #40                 // Field timestampReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      24: aload_0
      25: getfield      #40                 // Field timestampReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      28: areturn

  private synchronized org.apache.wss4j.common.cache.ReplayCache createCache(java.lang.String) throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: invokestatic  #43                 // Method org/apache/wss4j/common/cache/ReplayCacheFactory.newInstance:()Lorg/apache/wss4j/common/cache/ReplayCacheFactory;
       3: astore_2
       4: new           #44                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: bipush        10
      17: invokestatic  #47                 // Method org/apache/wss4j/dom/util/WSSecurityUtil.generateNonce:(I)[B
      20: invokestatic  #48                 // Method org/apache/xml/security/utils/Base64.encode:([B)Ljava/lang/String;
      23: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: astore_3
      30: aload_2
      31: aload_3
      32: aconst_null
      33: invokevirtual #50                 // Method org/apache/wss4j/common/cache/ReplayCacheFactory.newReplayCache:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/wss4j/common/cache/ReplayCache;
      36: areturn

  public void setNonceReplayCache(org.apache.wss4j.common.cache.ReplayCache);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field nonceReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
       5: return

  public org.apache.wss4j.common.cache.ReplayCache getNonceReplayCache() throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field enableNonceReplayCache:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #51                 // Field nonceReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      11: ifnonnull     24
      14: aload_0
      15: aload_0
      16: ldc           #52                 // String wss4j.nonce.cache-
      18: invokespecial #42                 // Method createCache:(Ljava/lang/String;)Lorg/apache/wss4j/common/cache/ReplayCache;
      21: putfield      #51                 // Field nonceReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      24: aload_0
      25: getfield      #51                 // Field nonceReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      28: areturn

  public void setSamlOneTimeUseReplayCache(org.apache.wss4j.common.cache.ReplayCache);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field samlOneTimeUseReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
       5: return

  public org.apache.wss4j.common.cache.ReplayCache getSamlOneTimeUseReplayCache() throws org.apache.wss4j.common.ext.WSSecurityException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field enableSamlOneTimeUseReplayCache:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #53                 // Field samlOneTimeUseReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      11: ifnonnull     24
      14: aload_0
      15: aload_0
      16: ldc           #54                 // String wss4j.saml.one.time.use.cache-
      18: invokespecial #42                 // Method createCache:(Ljava/lang/String;)Lorg/apache/wss4j/common/cache/ReplayCache;
      21: putfield      #53                 // Field samlOneTimeUseReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      24: aload_0
      25: getfield      #53                 // Field samlOneTimeUseReplayCache:Lorg/apache/wss4j/common/cache/ReplayCache;
      28: areturn

  public void setSubjectCertConstraints(java.util.Collection<java.util.regex.Pattern>);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #9                  // Field subjectDNPatterns:Ljava/util/Collection;
       8: aload_1
       9: invokeinterface #55,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      14: pop
      15: return

  public java.util.Collection<java.util.regex.Pattern> getSubjectCertConstraints();
    Code:
       0: aload_0
       1: getfield      #9                  // Field subjectDNPatterns:Ljava/util/Collection;
       4: areturn

  public void setAudienceRestrictions(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #17                 // Field audienceRestrictions:Ljava/util/List;
       8: aload_1
       9: invokeinterface #56,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      14: pop
      15: return

  public java.util.List<java.lang.String> getAudienceRestrictions();
    Code:
       0: aload_0
       1: getfield      #17                 // Field audienceRestrictions:Ljava/util/List;
       4: areturn

  public void setIgnoredBSPRules(java.util.List<org.apache.wss4j.common.bsp.BSPRule>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field ignoredBSPRules:Ljava/util/List;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #12                 // Field ignoredBSPRules:Ljava/util/List;
      13: aload_1
      14: invokeinterface #56,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public java.util.List<org.apache.wss4j.common.bsp.BSPRule> getIgnoredBSPRules();
    Code:
       0: aload_0
       1: getfield      #12                 // Field ignoredBSPRules:Ljava/util/List;
       4: invokestatic  #58                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public org.apache.wss4j.common.bsp.BSPEnforcer getBSPEnforcer();
    Code:
       0: aload_0
       1: getfield      #59                 // Field disableBSPEnforcement:Z
       4: ifeq          16
       7: new           #60                 // class org/apache/wss4j/common/bsp/BSPEnforcer
      10: dup
      11: iconst_1
      12: invokespecial #61                 // Method org/apache/wss4j/common/bsp/BSPEnforcer."<init>":(Z)V
      15: areturn
      16: new           #60                 // class org/apache/wss4j/common/bsp/BSPEnforcer
      19: dup
      20: aload_0
      21: getfield      #12                 // Field ignoredBSPRules:Ljava/util/List;
      24: invokespecial #62                 // Method org/apache/wss4j/common/bsp/BSPEnforcer."<init>":(Ljava/util/List;)V
      27: areturn

  public boolean isAppendSignatureAfterTimestamp();
    Code:
       0: aload_0
       1: getfield      #63                 // Field appendSignatureAfterTimestamp:Z
       4: ireturn

  public void setAppendSignatureAfterTimestamp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field appendSignatureAfterTimestamp:Z
       5: return

  public org.apache.wss4j.common.crypto.AlgorithmSuite getAlgorithmSuite();
    Code:
       0: aload_0
       1: getfield      #64                 // Field algorithmSuite:Lorg/apache/wss4j/common/crypto/AlgorithmSuite;
       4: areturn

  public void setAlgorithmSuite(org.apache.wss4j.common.crypto.AlgorithmSuite);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field algorithmSuite:Lorg/apache/wss4j/common/crypto/AlgorithmSuite;
       5: return

  public org.apache.wss4j.common.crypto.AlgorithmSuite getSamlAlgorithmSuite();
    Code:
       0: aload_0
       1: getfield      #65                 // Field samlAlgorithmSuite:Lorg/apache/wss4j/common/crypto/AlgorithmSuite;
       4: areturn

  public void setSamlAlgorithmSuite(org.apache.wss4j.common.crypto.AlgorithmSuite);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field samlAlgorithmSuite:Lorg/apache/wss4j/common/crypto/AlgorithmSuite;
       5: return

  public int getOriginalSignatureActionPosition();
    Code:
       0: aload_0
       1: getfield      #66                 // Field originalSignatureActionPosition:I
       4: ireturn

  public void setOriginalSignatureActionPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field originalSignatureActionPosition:I
       5: return

  public boolean isDisableBSPEnforcement();
    Code:
       0: aload_0
       1: getfield      #59                 // Field disableBSPEnforcement:Z
       4: ireturn

  public void setDisableBSPEnforcement(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #59                 // Field disableBSPEnforcement:Z
       5: return

  public boolean isAllowRSA15KeyTransportAlgorithm();
    Code:
       0: aload_0
       1: getfield      #67                 // Field allowRSA15KeyTransportAlgorithm:Z
       4: ireturn

  public void setAllowRSA15KeyTransportAlgorithm(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field allowRSA15KeyTransportAlgorithm:Z
       5: return

  public boolean isAddUsernameTokenNonce();
    Code:
       0: aload_0
       1: getfield      #68                 // Field addUsernameTokenNonce:Z
       4: ireturn

  public void setAddUsernameTokenNonce(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #68                 // Field addUsernameTokenNonce:Z
       5: return

  public boolean isAddUsernameTokenCreated();
    Code:
       0: aload_0
       1: getfield      #69                 // Field addUsernameTokenCreated:Z
       4: ireturn

  public void setAddUsernameTokenCreated(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field addUsernameTokenCreated:Z
       5: return

  public java.security.cert.Certificate[] getTlsCerts();
    Code:
       0: aload_0
       1: getfield      #70                 // Field tlsCerts:[Ljava/security/cert/Certificate;
       4: areturn

  public void setTlsCerts(java.security.cert.Certificate[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field tlsCerts:[Ljava/security/cert/Certificate;
       5: return

  public org.apache.wss4j.common.crypto.PasswordEncryptor getPasswordEncryptor();
    Code:
       0: aload_0
       1: getfield      #71                 // Field passwordEncryptor:Lorg/apache/wss4j/common/crypto/PasswordEncryptor;
       4: areturn

  public void setPasswordEncryptor(org.apache.wss4j.common.crypto.PasswordEncryptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field passwordEncryptor:Lorg/apache/wss4j/common/crypto/PasswordEncryptor;
       5: return

  public boolean isEnableSamlOneTimeUseReplayCache();
    Code:
       0: aload_0
       1: getfield      #15                 // Field enableSamlOneTimeUseReplayCache:Z
       4: ireturn

  public void setEnableSamlOneTimeUseReplayCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field enableSamlOneTimeUseReplayCache:Z
       5: return

  public org.apache.wss4j.common.SignatureActionToken getSignatureToken();
    Code:
       0: aload_0
       1: getfield      #72                 // Field signatureToken:Lorg/apache/wss4j/common/SignatureActionToken;
       4: areturn

  public void setSignatureToken(org.apache.wss4j.common.SignatureActionToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field signatureToken:Lorg/apache/wss4j/common/SignatureActionToken;
       5: return

  public org.apache.wss4j.common.EncryptionActionToken getEncryptionToken();
    Code:
       0: aload_0
       1: getfield      #73                 // Field encryptionToken:Lorg/apache/wss4j/common/EncryptionActionToken;
       4: areturn

  public void setEncryptionToken(org.apache.wss4j.common.EncryptionActionToken);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field encryptionToken:Lorg/apache/wss4j/common/EncryptionActionToken;
       5: return

  public java.lang.String getDerivedKeyTokenReference();
    Code:
       0: aload_0
       1: getfield      #74                 // Field derivedKeyTokenReference:Ljava/lang/String;
       4: areturn

  public void setDerivedKeyTokenReference(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #74                 // Field derivedKeyTokenReference:Ljava/lang/String;
       5: return

  public boolean isUse200512Namespace();
    Code:
       0: aload_0
       1: getfield      #16                 // Field use200512Namespace:Z
       4: ireturn

  public void setUse200512Namespace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field use200512Namespace:Z
       5: return

  public boolean isRequireTimestampExpires();
    Code:
       0: aload_0
       1: getfield      #75                 // Field requireTimestampExpires:Z
       4: ireturn

  public void setRequireTimestampExpires(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #75                 // Field requireTimestampExpires:Z
       5: return

  public boolean isValidateSamlSubjectConfirmation();
    Code:
       0: aload_0
       1: getfield      #25                 // Field validateSamlSubjectConfirmation:Z
       4: ireturn

  public void setValidateSamlSubjectConfirmation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field validateSamlSubjectConfirmation:Z
       5: return

  public boolean isAllowNamespaceQualifiedPasswordTypes();
    Code:
       0: aload_0
       1: getfield      #76                 // Field allowNamespaceQualifiedPasswordTypes:Z
       4: ireturn

  public void setAllowNamespaceQualifiedPasswordTypes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #76                 // Field allowNamespaceQualifiedPasswordTypes:Z
       5: return

  public int getUtFutureTTL();
    Code:
       0: aload_0
       1: getfield      #24                 // Field utFutureTTL:I
       4: ireturn

  public void setUtFutureTTL(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #24                 // Field utFutureTTL:I
       5: return

  public boolean isHandleCustomPasswordTypes();
    Code:
       0: aload_0
       1: getfield      #77                 // Field handleCustomPasswordTypes:Z
       4: ireturn

  public void setHandleCustomPasswordTypes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field handleCustomPasswordTypes:Z
       5: return

  public int getUtTTL();
    Code:
       0: aload_0
       1: getfield      #23                 // Field utTTL:I
       4: ireturn

  public void setUtTTL(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field utTTL:I
       5: return

  public int getTimeStampTTL();
    Code:
       0: aload_0
       1: getfield      #21                 // Field timeStampTTL:I
       4: ireturn

  public void setTimeStampTTL(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field timeStampTTL:I
       5: return

  public int getTimeStampFutureTTL();
    Code:
       0: aload_0
       1: getfield      #22                 // Field timeStampFutureTTL:I
       4: ireturn

  public void setTimeStampFutureTTL(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field timeStampFutureTTL:I
       5: return

  public boolean isAllowUsernameTokenNoPassword();
    Code:
       0: aload_0
       1: getfield      #78                 // Field allowUsernameTokenNoPassword:Z
       4: ireturn

  public void setAllowUsernameTokenNoPassword(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #78                 // Field allowUsernameTokenNoPassword:Z
       5: return

  public boolean isTimeStampStrict();
    Code:
       0: aload_0
       1: getfield      #20                 // Field timeStampStrict:Z
       4: ireturn

  public void setTimeStampStrict(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field timeStampStrict:Z
       5: return

  public boolean isAddInclusivePrefixes();
    Code:
       0: aload_0
       1: getfield      #18                 // Field addInclusivePrefixes:Z
       4: ireturn

  public void setAddInclusivePrefixes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field addInclusivePrefixes:Z
       5: return

  public boolean isPrecisionInMilliSeconds();
    Code:
       0: aload_0
       1: getfield      #19                 // Field precisionInMilliSeconds:Z
       4: ireturn

  public void setPrecisionInMilliSeconds(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field precisionInMilliSeconds:Z
       5: return

  public boolean isEnableSignatureConfirmation();
    Code:
       0: aload_0
       1: getfield      #79                 // Field enableSignatureConfirmation:Z
       4: ireturn

  public void setEnableSignatureConfirmation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #79                 // Field enableSignatureConfirmation:Z
       5: return

  public java.lang.String getRequiredPasswordType();
    Code:
       0: aload_0
       1: getfield      #80                 // Field requiredPasswordType:Ljava/lang/String;
       4: areturn

  public void setRequiredPasswordType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field requiredPasswordType:Ljava/lang/String;
       5: return

  public boolean isEncodePasswords();
    Code:
       0: aload_0
       1: getfield      #81                 // Field encodePasswords:Z
       4: ireturn

  public void setEncodePasswords(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field encodePasswords:Z
       5: return

  public boolean isStoreBytesInAttachment();
    Code:
       0: aload_0
       1: getfield      #82                 // Field storeBytesInAttachment:Z
       4: ireturn

  public void setStoreBytesInAttachment(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #82                 // Field storeBytesInAttachment:Z
       5: return

  public boolean isExpandXopIncludeForSignature();
    Code:
       0: aload_0
       1: getfield      #26                 // Field expandXopIncludeForSignature:Z
       4: ireturn

  public void setExpandXopIncludeForSignature(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field expandXopIncludeForSignature:Z
       5: return
}
