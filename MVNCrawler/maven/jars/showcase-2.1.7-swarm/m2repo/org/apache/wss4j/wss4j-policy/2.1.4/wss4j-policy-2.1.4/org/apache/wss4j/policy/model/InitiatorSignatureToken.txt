Compiled from "InitiatorSignatureToken.java"
public class org.apache.wss4j.policy.model.InitiatorSignatureToken extends org.apache.wss4j.policy.model.AbstractTokenWrapper {
  public org.apache.wss4j.policy.model.InitiatorSignatureToken(org.apache.wss4j.policy.SPConstants$SPVersion, org.apache.neethi.Policy);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/wss4j/policy/model/AbstractTokenWrapper."<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
       6: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       4: invokevirtual #3                  // Method org/apache/wss4j/policy/SPConstants$SPVersion.getSPConstants:()Lorg/apache/wss4j/policy/SPConstants;
       7: invokevirtual #4                  // Method org/apache/wss4j/policy/SPConstants.getInitiatorSignatureToken:()Ljavax/xml/namespace/QName;
      10: areturn

  protected org.apache.wss4j.policy.model.AbstractSecurityAssertion cloneAssertion(org.apache.neethi.Policy);
    Code:
       0: new           #5                  // class org/apache/wss4j/policy/model/InitiatorSignatureToken
       3: dup
       4: aload_0
       5: invokevirtual #2                  // Method getVersion:()Lorg/apache/wss4j/policy/SPConstants$SPVersion;
       8: aload_1
       9: invokespecial #6                  // Method "<init>":(Lorg/apache/wss4j/policy/SPConstants$SPVersion;Lorg/apache/neethi/Policy;)V
      12: areturn
}
