Compiled from "TransactionImpl.java"
public class org.apache.activemq.artemis.core.transaction.impl.TransactionImpl implements org.apache.activemq.artemis.core.transaction.Transaction {
  private static final boolean isTrace;

  private java.util.List<org.apache.activemq.artemis.core.transaction.TransactionOperation> operations;

  private static final int INITIAL_NUM_PROPERTIES;

  private java.lang.Object[] properties;

  protected final org.apache.activemq.artemis.core.persistence.StorageManager storageManager;

  private final javax.transaction.xa.Xid xid;

  private final long id;

  private volatile org.apache.activemq.artemis.core.transaction.Transaction$State state;

  private org.apache.activemq.artemis.api.core.ActiveMQException exception;

  private final java.lang.Object timeoutLock;

  private final long createTime;

  private volatile boolean containsPersistent;

  private int timeoutSeconds;

  public org.apache.activemq.artemis.core.transaction.impl.TransactionImpl(org.apache.activemq.artemis.core.persistence.StorageManager, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        10
       7: anewarray     #6                  // class java/lang/Object
      10: putfield      #7                  // Field properties:[Ljava/lang/Object;
      13: aload_0
      14: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      17: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      20: aload_0
      21: new           #6                  // class java/lang/Object
      24: dup
      25: invokespecial #4                  // Method java/lang/Object."<init>":()V
      28: putfield      #10                 // Field timeoutLock:Ljava/lang/Object;
      31: aload_0
      32: iconst_m1
      33: putfield      #11                 // Field timeoutSeconds:I
      36: aload_0
      37: aload_1
      38: putfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      41: aload_0
      42: aconst_null
      43: putfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      46: aload_0
      47: aload_1
      48: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.generateID:()J
      53: putfield      #15                 // Field id:J
      56: aload_0
      57: invokestatic  #16                 // Method java/lang/System.currentTimeMillis:()J
      60: putfield      #17                 // Field createTime:J
      63: aload_0
      64: iload_2
      65: putfield      #11                 // Field timeoutSeconds:I
      68: return

  public org.apache.activemq.artemis.core.transaction.impl.TransactionImpl(org.apache.activemq.artemis.core.persistence.StorageManager);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        10
       7: anewarray     #6                  // class java/lang/Object
      10: putfield      #7                  // Field properties:[Ljava/lang/Object;
      13: aload_0
      14: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      17: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      20: aload_0
      21: new           #6                  // class java/lang/Object
      24: dup
      25: invokespecial #4                  // Method java/lang/Object."<init>":()V
      28: putfield      #10                 // Field timeoutLock:Ljava/lang/Object;
      31: aload_0
      32: iconst_m1
      33: putfield      #11                 // Field timeoutSeconds:I
      36: aload_0
      37: aload_1
      38: putfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      41: aload_0
      42: aconst_null
      43: putfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      46: aload_0
      47: aload_1
      48: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.generateID:()J
      53: putfield      #15                 // Field id:J
      56: aload_0
      57: invokestatic  #16                 // Method java/lang/System.currentTimeMillis:()J
      60: putfield      #17                 // Field createTime:J
      63: return

  public org.apache.activemq.artemis.core.transaction.impl.TransactionImpl(javax.transaction.xa.Xid, org.apache.activemq.artemis.core.persistence.StorageManager, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        10
       7: anewarray     #6                  // class java/lang/Object
      10: putfield      #7                  // Field properties:[Ljava/lang/Object;
      13: aload_0
      14: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      17: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      20: aload_0
      21: new           #6                  // class java/lang/Object
      24: dup
      25: invokespecial #4                  // Method java/lang/Object."<init>":()V
      28: putfield      #10                 // Field timeoutLock:Ljava/lang/Object;
      31: aload_0
      32: iconst_m1
      33: putfield      #11                 // Field timeoutSeconds:I
      36: aload_0
      37: aload_2
      38: putfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      41: aload_0
      42: aload_1
      43: putfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      46: aload_0
      47: aload_2
      48: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.generateID:()J
      53: putfield      #15                 // Field id:J
      56: aload_0
      57: invokestatic  #16                 // Method java/lang/System.currentTimeMillis:()J
      60: putfield      #17                 // Field createTime:J
      63: aload_0
      64: iload_3
      65: putfield      #11                 // Field timeoutSeconds:I
      68: return

  public org.apache.activemq.artemis.core.transaction.impl.TransactionImpl(long, javax.transaction.xa.Xid, org.apache.activemq.artemis.core.persistence.StorageManager);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        10
       7: anewarray     #6                  // class java/lang/Object
      10: putfield      #7                  // Field properties:[Ljava/lang/Object;
      13: aload_0
      14: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      17: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      20: aload_0
      21: new           #6                  // class java/lang/Object
      24: dup
      25: invokespecial #4                  // Method java/lang/Object."<init>":()V
      28: putfield      #10                 // Field timeoutLock:Ljava/lang/Object;
      31: aload_0
      32: iconst_m1
      33: putfield      #11                 // Field timeoutSeconds:I
      36: aload_0
      37: aload         4
      39: putfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      42: aload_0
      43: aload_3
      44: putfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      47: aload_0
      48: lload_1
      49: putfield      #15                 // Field id:J
      52: aload_0
      53: invokestatic  #16                 // Method java/lang/System.currentTimeMillis:()J
      56: putfield      #17                 // Field createTime:J
      59: return

  public boolean isEffective();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
       4: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
       7: if_acmpeq     30
      10: aload_0
      11: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      14: getstatic     #19                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.COMMITTED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      17: if_acmpeq     30
      20: aload_0
      21: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      24: getstatic     #20                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLEDBACK:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      27: if_acmpne     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public void setContainsPersistent();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #21                 // Field containsPersistent:Z
       5: return

  public boolean isContainsPersistent();
    Code:
       0: aload_0
       1: getfield      #21                 // Field containsPersistent:Z
       4: ireturn

  public void setTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field timeoutSeconds:I
       5: return

  public org.apache.activemq.artemis.core.server.impl.RefsOperation createRefsOperation(org.apache.activemq.artemis.core.server.Queue);
    Code:
       0: new           #22                 // class org/apache/activemq/artemis/core/server/impl/RefsOperation
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
       9: invokespecial #23                 // Method org/apache/activemq/artemis/core/server/impl/RefsOperation."<init>":(Lorg/apache/activemq/artemis/core/server/Queue;Lorg/apache/activemq/artemis/core/persistence/StorageManager;)V
      12: areturn

  public long getID();
    Code:
       0: aload_0
       1: getfield      #15                 // Field id:J
       4: lreturn

  public long getCreateTime();
    Code:
       0: aload_0
       1: getfield      #17                 // Field createTime:J
       4: lreturn

  public boolean hasTimedOut(long, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field timeoutLock:Ljava/lang/Object;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #11                 // Field timeoutSeconds:I
      12: iconst_m1
      13: if_icmpne     52
      16: aload_0
      17: invokevirtual #24                 // Method getState:()Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      20: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      23: if_acmpeq     46
      26: lload_1
      27: aload_0
      28: getfield      #17                 // Field createTime:J
      31: iload_3
      32: sipush        1000
      35: imul
      36: i2l
      37: ladd
      38: lcmp
      39: ifle          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore        5
      49: goto          88
      52: aload_0
      53: invokevirtual #24                 // Method getState:()Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      56: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      59: if_acmpeq     85
      62: lload_1
      63: aload_0
      64: getfield      #17                 // Field createTime:J
      67: aload_0
      68: getfield      #11                 // Field timeoutSeconds:I
      71: sipush        1000
      74: imul
      75: i2l
      76: ladd
      77: lcmp
      78: ifle          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: istore        5
      88: iload         5
      90: ifeq          106
      93: aload_0
      94: new           #25                 // class org/apache/activemq/artemis/api/core/ActiveMQException
      97: dup
      98: ldc           #26                 // String TX Timeout
     100: invokespecial #27                 // Method org/apache/activemq/artemis/api/core/ActiveMQException."<init>":(Ljava/lang/String;)V
     103: invokevirtual #28                 // Method markAsRollbackOnly:(Lorg/apache/activemq/artemis/api/core/ActiveMQException;)V
     106: iload         5
     108: aload         4
     110: monitorexit
     111: ireturn
     112: astore        6
     114: aload         4
     116: monitorexit
     117: aload         6
     119: athrow
    Exception table:
       from    to  target type
           8   111   112   any
         112   117   112   any

  public void prepare() throws java.lang.Exception;
    Code:
       0: getstatic     #29                 // Field isTrace:Z
       3: ifeq          33
       6: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       9: new           #31                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #33                 // String TransactionImpl::prepare::
      18: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      37: invokeinterface #38,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.readLock:()V
      42: aload_0
      43: getfield      #10                 // Field timeoutLock:Ljava/lang/Object;
      46: dup
      47: astore_1
      48: monitorenter
      49: aload_0
      50: invokevirtual #39                 // Method isEffective:()Z
      53: ifeq          100
      56: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      59: new           #31                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #33                 // String TransactionImpl::prepare::
      68: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: ldc           #40                 // String  is being ignored
      77: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokeinterface #41,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      88: aload_1
      89: monitorexit
      90: aload_0
      91: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      94: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.readUnLock:()V
      99: return
     100: aload_0
     101: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     104: getstatic     #43                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLBACK_ONLY:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     107: if_acmpne     171
     110: getstatic     #29                 // Field isTrace:Z
     113: ifeq          143
     116: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     119: new           #31                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #44                 // String TransactionImpl::prepare::rollbackonly, rollingback
     128: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     135: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
     143: aload_0
     144: invokespecial #45                 // Method internalRollback:()V
     147: aload_0
     148: getfield      #46                 // Field exception:Lorg/apache/activemq/artemis/api/core/ActiveMQException;
     151: ifnull        159
     154: aload_0
     155: getfield      #46                 // Field exception:Lorg/apache/activemq/artemis/api/core/ActiveMQException;
     158: athrow
     159: aload_1
     160: monitorexit
     161: aload_0
     162: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     165: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.readUnLock:()V
     170: return
     171: aload_0
     172: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     175: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     178: if_acmpeq     211
     181: new           #47                 // class java/lang/IllegalStateException
     184: dup
     185: new           #31                 // class java/lang/StringBuilder
     188: dup
     189: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     192: ldc           #48                 // String Transaction is in invalid state
     194: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload_0
     198: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     201: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     204: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     210: athrow
     211: aload_0
     212: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
     215: ifnonnull     228
     218: new           #47                 // class java/lang/IllegalStateException
     221: dup
     222: ldc           #50                 // String Cannot prepare non XA transaction
     224: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     227: athrow
     228: aload_0
     229: invokespecial #51                 // Method beforePrepare:()V
     232: aload_0
     233: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     236: aload_0
     237: getfield      #15                 // Field id:J
     240: aload_0
     241: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
     244: invokeinterface #52,  4           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.prepare:(JLjavax/transaction/xa/Xid;)V
     249: aload_0
     250: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     253: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     256: aload_0
     257: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     260: new           #53                 // class org/apache/activemq/artemis/core/transaction/impl/TransactionImpl$1
     263: dup
     264: aload_0
     265: invokespecial #54                 // Method org/apache/activemq/artemis/core/transaction/impl/TransactionImpl$1."<init>":(Lorg/apache/activemq/artemis/core/transaction/impl/TransactionImpl;)V
     268: invokeinterface #55,  2           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.afterCompleteOperations:(Lorg/apache/activemq/artemis/core/io/IOCallback;)V
     273: aload_1
     274: monitorexit
     275: goto          283
     278: astore_2
     279: aload_1
     280: monitorexit
     281: aload_2
     282: athrow
     283: aload_0
     284: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     287: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.readUnLock:()V
     292: goto          307
     295: astore_3
     296: aload_0
     297: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     300: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.readUnLock:()V
     305: aload_3
     306: athrow
     307: return
    Exception table:
       from    to  target type
          49    90   278   any
         100   161   278   any
         171   275   278   any
         278   281   278   any
          42    90   295   any
         100   161   295   any
         171   283   295   any

  public void commit() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #56                 // Method commit:(Z)V
       5: return

  public void commit(boolean) throws java.lang.Exception;
    Code:
       0: getstatic     #29                 // Field isTrace:Z
       3: ifeq          33
       6: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       9: new           #31                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #57                 // String TransactionImpl::commit::
      18: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #10                 // Field timeoutLock:Ljava/lang/Object;
      37: dup
      38: astore_2
      39: monitorenter
      40: aload_0
      41: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      44: getstatic     #19                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.COMMITTED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      47: if_acmpne     85
      50: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      53: new           #31                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #57                 // String TransactionImpl::commit::
      62: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #40                 // String  is being ignored
      71: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokeinterface #41,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      82: aload_2
      83: monitorexit
      84: return
      85: aload_0
      86: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      89: getstatic     #43                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLBACK_ONLY:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      92: if_acmpne     114
      95: aload_0
      96: invokespecial #45                 // Method internalRollback:()V
      99: aload_0
     100: getfield      #46                 // Field exception:Lorg/apache/activemq/artemis/api/core/ActiveMQException;
     103: ifnull        111
     106: aload_0
     107: getfield      #46                 // Field exception:Lorg/apache/activemq/artemis/api/core/ActiveMQException;
     110: athrow
     111: aload_2
     112: monitorexit
     113: return
     114: aload_0
     115: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
     118: ifnull        179
     121: iload_1
     122: ifeq          135
     125: aload_0
     126: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     129: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     132: if_acmpne     149
     135: iload_1
     136: ifne          219
     139: aload_0
     140: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     143: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     146: if_acmpeq     219
     149: new           #58                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
     152: dup
     153: new           #31                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #48                 // String Transaction is in invalid state
     162: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_0
     166: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     169: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     172: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokespecial #59                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: aload_0
     180: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     183: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     186: if_acmpeq     219
     189: new           #58                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
     192: dup
     193: new           #31                 // class java/lang/StringBuilder
     196: dup
     197: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     200: ldc           #48                 // String Transaction is in invalid state
     202: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: aload_0
     206: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     209: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokespecial #59                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
     218: athrow
     219: aload_0
     220: invokespecial #60                 // Method beforeCommit:()V
     223: aload_0
     224: invokevirtual #61                 // Method doCommit:()V
     227: aload_0
     228: getfield      #62                 // Field operations:Ljava/util/List;
     231: astore_3
     232: aload_0
     233: aconst_null
     234: putfield      #62                 // Field operations:Ljava/util/List;
     237: aload_0
     238: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     241: new           #63                 // class org/apache/activemq/artemis/core/transaction/impl/TransactionImpl$2
     244: dup
     245: aload_0
     246: aload_3
     247: invokespecial #64                 // Method org/apache/activemq/artemis/core/transaction/impl/TransactionImpl$2."<init>":(Lorg/apache/activemq/artemis/core/transaction/impl/TransactionImpl;Ljava/util/List;)V
     250: invokeinterface #55,  2           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.afterCompleteOperations:(Lorg/apache/activemq/artemis/core/io/IOCallback;)V
     255: aload_2
     256: monitorexit
     257: goto          267
     260: astore        4
     262: aload_2
     263: monitorexit
     264: aload         4
     266: athrow
     267: return
    Exception table:
       from    to  target type
          40    84   260   any
          85   113   260   any
         114   257   260   any
         260   264   260   any

  protected void doCommit() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field containsPersistent:Z
       4: ifne          24
       7: aload_0
       8: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      11: ifnull        37
      14: aload_0
      15: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      18: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      21: if_acmpne     37
      24: aload_0
      25: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      28: aload_0
      29: getfield      #15                 // Field id:J
      32: invokeinterface #65,  3           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.commit:(J)V
      37: aload_0
      38: getstatic     #19                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.COMMITTED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      41: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      44: return

  public void rollback() throws java.lang.Exception;
    Code:
       0: getstatic     #29                 // Field isTrace:Z
       3: ifeq          33
       6: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       9: new           #31                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #66                 // String TransactionImpl::rollback::
      18: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #10                 // Field timeoutLock:Ljava/lang/Object;
      37: dup
      38: astore_1
      39: monitorenter
      40: aload_0
      41: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      44: getstatic     #20                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLEDBACK:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      47: if_acmpne     85
      50: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      53: new           #31                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #66                 // String TransactionImpl::rollback::
      62: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #40                 // String  is being ignored
      71: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokeinterface #41,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
      82: aload_1
      83: monitorexit
      84: return
      85: aload_0
      86: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      89: ifnull        152
      92: aload_0
      93: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      96: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      99: if_acmpeq     202
     102: aload_0
     103: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     106: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     109: if_acmpeq     202
     112: aload_0
     113: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     116: getstatic     #43                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLBACK_ONLY:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     119: if_acmpeq     202
     122: new           #58                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
     125: dup
     126: new           #31                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #48                 // String Transaction is in invalid state
     135: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     142: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #59                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: aload_0
     153: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     156: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     159: if_acmpeq     202
     162: aload_0
     163: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     166: getstatic     #43                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLBACK_ONLY:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     169: if_acmpeq     202
     172: new           #58                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
     175: dup
     176: new           #31                 // class java/lang/StringBuilder
     179: dup
     180: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     183: ldc           #48                 // String Transaction is in invalid state
     185: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: aload_0
     189: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     192: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     195: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: invokespecial #59                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
     201: athrow
     202: aload_0
     203: invokespecial #45                 // Method internalRollback:()V
     206: aload_1
     207: monitorexit
     208: goto          216
     211: astore_2
     212: aload_1
     213: monitorexit
     214: aload_2
     215: athrow
     216: return
    Exception table:
       from    to  target type
          40    84   211   any
          85   208   211   any
         211   214   211   any

  private void internalRollback() throws java.lang.Exception;
    Code:
       0: getstatic     #29                 // Field isTrace:Z
       3: ifeq          33
       6: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       9: new           #31                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #67                 // String TransactionImpl::internalRollback
      18: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: invokespecial #68                 // Method beforeRollback:()V
      37: aload_0
      38: invokespecial #69                 // Method doRollback:()V
      41: aload_0
      42: getstatic     #20                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLEDBACK:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      45: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      48: goto          61
      51: astore_1
      52: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      55: aload_1
      56: invokeinterface #70,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.warn:(Ljava/lang/Object;)V
      61: aload_0
      62: getfield      #62                 // Field operations:Ljava/util/List;
      65: astore_1
      66: aload_0
      67: aconst_null
      68: putfield      #62                 // Field operations:Ljava/util/List;
      71: aload_0
      72: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      75: new           #71                 // class org/apache/activemq/artemis/core/transaction/impl/TransactionImpl$3
      78: dup
      79: aload_0
      80: aload_1
      81: invokespecial #72                 // Method org/apache/activemq/artemis/core/transaction/impl/TransactionImpl$3."<init>":(Lorg/apache/activemq/artemis/core/transaction/impl/TransactionImpl;Ljava/util/List;)V
      84: invokeinterface #55,  2           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.afterCompleteOperations:(Lorg/apache/activemq/artemis/core/io/IOCallback;)V
      89: return
    Exception table:
       from    to  target type
          37    48    51   Class java/lang/IllegalStateException

  public void suspend();
    Code:
       0: aload_0
       1: getfield      #10                 // Field timeoutLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      11: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      14: if_acmpeq     27
      17: new           #47                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #73                 // String Can only suspend active transaction
      23: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getstatic     #74                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.SUSPENDED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      31: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      34: aload_1
      35: monitorexit
      36: goto          44
      39: astore_2
      40: aload_1
      41: monitorexit
      42: aload_2
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    36    39   any
          39    42    39   any

  public void resume();
    Code:
       0: aload_0
       1: getfield      #10                 // Field timeoutLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      11: getstatic     #74                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.SUSPENDED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      14: if_acmpeq     27
      17: new           #47                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #75                 // String Can only resume a suspended transaction
      23: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getstatic     #8                  // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ACTIVE:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      31: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      34: aload_1
      35: monitorexit
      36: goto          44
      39: astore_2
      40: aload_1
      41: monitorexit
      42: aload_2
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    36    39   any
          39    42    39   any

  public org.apache.activemq.artemis.core.transaction.Transaction$State getState();
    Code:
       0: aload_0
       1: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
       4: areturn

  public void setState(org.apache.activemq.artemis.core.transaction.Transaction$State);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
       5: return

  public javax.transaction.xa.Xid getXid();
    Code:
       0: aload_0
       1: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
       4: areturn

  public void markAsRollbackOnly(org.apache.activemq.artemis.api.core.ActiveMQException);
    Code:
       0: aload_0
       1: getfield      #10                 // Field timeoutLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: getstatic     #29                 // Field isTrace:Z
      10: ifeq          64
      13: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      16: new           #31                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #76                 // String TransactionImpl::
      25: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #77                 // String  marking rollbackOnly for
      34: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #78                 // Method org/apache/activemq/artemis/api/core/ActiveMQException.toString:()Ljava/lang/String;
      41: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #79                 // String , msg=
      46: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #80                 // Method org/apache/activemq/artemis/api/core/ActiveMQException.getMessage:()Ljava/lang/String;
      53: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      64: aload_0
      65: invokevirtual #39                 // Method isEffective:()Z
      68: ifeq          121
      71: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      74: new           #31                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #81                 // String Trying to mark transaction
      83: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #15                 // Field id:J
      90: invokevirtual #82                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      93: ldc           #83                 // String  xid=
      95: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
     102: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: ldc           #84                 // String  as rollbackOnly but it was already effective (prepared, committed or rolledback!)
     107: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokeinterface #41,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     118: aload_2
     119: monitorexit
     120: return
     121: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     124: invokeinterface #85,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isDebugEnabled:()Z
     129: ifeq          167
     132: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     135: new           #31                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #86                 // String Marking Transaction
     144: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_0
     148: getfield      #15                 // Field id:J
     151: invokevirtual #82                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     154: ldc           #87                 // String  as rollback only
     156: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: invokeinterface #41,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.debug:(Ljava/lang/Object;)V
     167: aload_0
     168: getstatic     #43                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.ROLLBACK_ONLY:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     171: putfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
     174: aload_0
     175: aload_1
     176: putfield      #46                 // Field exception:Lorg/apache/activemq/artemis/api/core/ActiveMQException;
     179: aload_2
     180: monitorexit
     181: goto          189
     184: astore_3
     185: aload_2
     186: monitorexit
     187: aload_3
     188: athrow
     189: return
    Exception table:
       from    to  target type
           7   120   184   any
         121   181   184   any
         184   187   184   any

  public synchronized void addOperation(org.apache.activemq.artemis.core.transaction.TransactionOperation);
    Code:
       0: aload_0
       1: invokespecial #88                 // Method checkCreateOperations:()V
       4: aload_0
       5: getfield      #62                 // Field operations:Ljava/util/List;
       8: aload_1
       9: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  private int getOperationsCount();
    Code:
       0: aload_0
       1: invokespecial #88                 // Method checkCreateOperations:()V
       4: aload_0
       5: getfield      #62                 // Field operations:Ljava/util/List;
       8: invokeinterface #90,  1           // InterfaceMethod java/util/List.size:()I
      13: ireturn

  public synchronized java.util.List<org.apache.activemq.artemis.core.transaction.TransactionOperation> getAllOperations();
    Code:
       0: aload_0
       1: getfield      #62                 // Field operations:Ljava/util/List;
       4: ifnull        19
       7: new           #91                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: getfield      #62                 // Field operations:Ljava/util/List;
      15: invokespecial #92                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: areturn
      19: new           #91                 // class java/util/ArrayList
      22: dup
      23: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      26: areturn

  public void putProperty(int, java.lang.Object);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field properties:[Ljava/lang/Object;
       5: arraylength
       6: if_icmplt     34
       9: iload_1
      10: anewarray     #6                  // class java/lang/Object
      13: astore_3
      14: aload_0
      15: getfield      #7                  // Field properties:[Ljava/lang/Object;
      18: iconst_0
      19: aload_3
      20: iconst_0
      21: aload_0
      22: getfield      #7                  // Field properties:[Ljava/lang/Object;
      25: arraylength
      26: invokestatic  #94                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: aload_0
      30: aload_3
      31: putfield      #7                  // Field properties:[Ljava/lang/Object;
      34: aload_0
      35: getfield      #7                  // Field properties:[Ljava/lang/Object;
      38: iload_1
      39: aload_2
      40: aastore
      41: return

  public java.lang.Object getProperty(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field properties:[Ljava/lang/Object;
       4: iload_1
       5: aaload
       6: areturn

  private void doRollback() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field containsPersistent:Z
       4: ifne          24
       7: aload_0
       8: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      11: ifnull        37
      14: aload_0
      15: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      18: getstatic     #18                 // Field org/apache/activemq/artemis/core/transaction/Transaction$State.PREPARED:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      21: if_acmpne     37
      24: aload_0
      25: getfield      #12                 // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      28: aload_0
      29: getfield      #15                 // Field id:J
      32: invokeinterface #95,  3           // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.rollback:(J)V
      37: return

  private void checkCreateOperations();
    Code:
       0: aload_0
       1: getfield      #62                 // Field operations:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #91                 // class java/util/ArrayList
      11: dup
      12: invokespecial #93                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #62                 // Field operations:Ljava/util/List;
      18: return

  private synchronized void afterCommit(java.util.List<org.apache.activemq.artemis.core.transaction.TransactionOperation>);
    Code:
       0: aload_1
       1: ifnull        46
       4: aload_1
       5: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          40
      20: aload_2
      21: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #99                 // class org/apache/activemq/artemis/core/transaction/TransactionOperation
      29: astore_3
      30: aload_3
      31: aload_0
      32: invokeinterface #100,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/TransactionOperation.afterCommit:(Lorg/apache/activemq/artemis/core/transaction/Transaction;)V
      37: goto          11
      40: aload_1
      41: invokeinterface #101,  1          // InterfaceMethod java/util/List.clear:()V
      46: return

  private synchronized void afterRollback(java.util.List<org.apache.activemq.artemis.core.transaction.TransactionOperation>);
    Code:
       0: aload_1
       1: ifnull        46
       4: aload_1
       5: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          40
      20: aload_2
      21: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #99                 // class org/apache/activemq/artemis/core/transaction/TransactionOperation
      29: astore_3
      30: aload_3
      31: aload_0
      32: invokeinterface #102,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/TransactionOperation.afterRollback:(Lorg/apache/activemq/artemis/core/transaction/Transaction;)V
      37: goto          11
      40: aload_1
      41: invokeinterface #101,  1          // InterfaceMethod java/util/List.clear:()V
      46: return

  private synchronized void beforeCommit() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #62                 // Field operations:Ljava/util/List;
       4: ifnull        46
       7: aload_0
       8: getfield      #62                 // Field operations:Ljava/util/List;
      11: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_1
      27: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #99                 // class org/apache/activemq/artemis/core/transaction/TransactionOperation
      35: astore_2
      36: aload_2
      37: aload_0
      38: invokeinterface #103,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/TransactionOperation.beforeCommit:(Lorg/apache/activemq/artemis/core/transaction/Transaction;)V
      43: goto          17
      46: return

  private synchronized void beforePrepare() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #62                 // Field operations:Ljava/util/List;
       4: ifnull        46
       7: aload_0
       8: getfield      #62                 // Field operations:Ljava/util/List;
      11: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_1
      27: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #99                 // class org/apache/activemq/artemis/core/transaction/TransactionOperation
      35: astore_2
      36: aload_2
      37: aload_0
      38: invokeinterface #104,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/TransactionOperation.beforePrepare:(Lorg/apache/activemq/artemis/core/transaction/Transaction;)V
      43: goto          17
      46: return

  private synchronized void beforeRollback() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #62                 // Field operations:Ljava/util/List;
       4: ifnull        46
       7: aload_0
       8: getfield      #62                 // Field operations:Ljava/util/List;
      11: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_1
      27: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #99                 // class org/apache/activemq/artemis/core/transaction/TransactionOperation
      35: astore_2
      36: aload_2
      37: aload_0
      38: invokeinterface #105,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/TransactionOperation.beforeRollback:(Lorg/apache/activemq/artemis/core/transaction/Transaction;)V
      43: goto          17
      46: return

  private synchronized void afterPrepare();
    Code:
       0: aload_0
       1: getfield      #62                 // Field operations:Ljava/util/List;
       4: ifnull        46
       7: aload_0
       8: getfield      #62                 // Field operations:Ljava/util/List;
      11: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_1
      27: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #99                 // class org/apache/activemq/artemis/core/transaction/TransactionOperation
      35: astore_2
      36: aload_2
      37: aload_0
      38: invokeinterface #106,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/TransactionOperation.afterPrepare:(Lorg/apache/activemq/artemis/core/transaction/Transaction;)V
      43: goto          17
      46: return

  public java.lang.String toString();
    Code:
       0: new           #107                // class java/util/Date
       3: dup
       4: aload_0
       5: getfield      #17                 // Field createTime:J
       8: invokespecial #108                // Method java/util/Date."<init>":(J)V
      11: astore_1
      12: new           #31                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #109                // String TransactionImpl [xid=
      21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #110                // String , id=
      33: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #15                 // Field id:J
      40: invokevirtual #82                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #111                // String , xid=
      45: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #13                 // Field xid:Ljavax/transaction/xa/Xid;
      52: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #112                // String , state=
      57: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #9                  // Field state:Lorg/apache/activemq/artemis/core/transaction/Transaction$State;
      64: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #113                // String , createTime=
      69: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #17                 // Field createTime:J
      76: invokevirtual #82                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      79: ldc           #114                // String (
      81: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_1
      85: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: ldc           #115                // String )
      90: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #116                // String , timeoutSeconds=
      95: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #11                 // Field timeoutSeconds:I
     102: invokevirtual #117                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: ldc           #118                // String , nr operations =
     107: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokespecial #119                // Method getOperationsCount:()I
     114: invokevirtual #117                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: ldc           #120                // String ]@
     119: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: invokevirtual #121                // Method java/lang/Object.hashCode:()I
     126: invokestatic  #122                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     129: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: areturn

  static void access$000(org.apache.activemq.artemis.core.transaction.impl.TransactionImpl);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method afterPrepare:()V
       4: return

  static void access$100(org.apache.activemq.artemis.core.transaction.impl.TransactionImpl, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method afterCommit:(Ljava/util/List;)V
       5: return

  static void access$200(org.apache.activemq.artemis.core.transaction.impl.TransactionImpl, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method afterRollback:(Ljava/util/List;)V
       5: return

  static {};
    Code:
       0: getstatic     #30                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: invokeinterface #123,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isTraceEnabled:()Z
       8: putstatic     #29                 // Field isTrace:Z
      11: return
}
