Compiled from "ClusterControl.java"
public class org.apache.activemq.artemis.core.server.cluster.ClusterControl implements java.lang.AutoCloseable {
  private org.apache.activemq.artemis.core.protocol.core.Channel clusterChannel;

  private final org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal sessionFactory;

  private final org.apache.activemq.artemis.core.server.ActiveMQServer server;

  private final java.lang.String clusterUser;

  private final java.lang.String clusterPassword;

  public org.apache.activemq.artemis.core.server.cluster.ClusterControl(org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal, org.apache.activemq.artemis.core.server.ActiveMQServer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      14: aload_0
      15: aload_2
      16: invokeinterface #4,  1            // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      21: invokeinterface #5,  1            // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterUser:()Ljava/lang/String;
      26: putfield      #6                  // Field clusterUser:Ljava/lang/String;
      29: aload_0
      30: aload_2
      31: invokeinterface #4,  1            // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      36: invokeinterface #7,  1            // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterPassword:()Ljava/lang/String;
      41: putfield      #8                  // Field clusterPassword:Ljava/lang/String;
      44: return

  public void authorize() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getConnection:()Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;
       9: checkcast     #10                 // class org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection
      12: astore_1
      13: aload_0
      14: aload_1
      15: getstatic     #11                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.CLUSTER:Lorg/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID;
      18: getfield      #12                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.id:J
      21: iconst_m1
      22: invokeinterface #13,  4           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.getChannel:(JI)Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      27: putfield      #14                 // Field clusterChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      30: aload_0
      31: getfield      #14                 // Field clusterChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      34: new           #15                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ClusterConnectMessage
      37: dup
      38: aload_0
      39: getfield      #6                  // Field clusterUser:Ljava/lang/String;
      42: aload_0
      43: getfield      #8                  // Field clusterPassword:Ljava/lang/String;
      46: invokespecial #16                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ClusterConnectMessage."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      49: bipush        126
      51: invokeinterface #18,  3           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.sendBlocking:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;B)Lorg/apache/activemq/artemis/core/protocol/core/Packet;
      56: checkcast     #19                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ClusterConnectReplyMessage
      59: astore_2
      60: aload_2
      61: invokevirtual #20                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ClusterConnectReplyMessage.isAuthorized:()Z
      64: ifne          80
      67: getstatic     #21                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      70: aload_0
      71: getfield      #6                  // Field clusterUser:Ljava/lang/String;
      74: invokeinterface #22,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.unableToValidateClusterUser:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/ActiveMQClusterSecurityException;
      79: athrow
      80: return

  public void announceReplicatingBackupToLive(boolean, java.lang.String) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
       9: aload_2
      10: invokestatic  #23                 // Method org/apache/activemq/artemis/core/config/ConfigurationUtils.getReplicationClusterConfiguration:(Lorg/apache/activemq/artemis/core/config/Configuration;Ljava/lang/String;)Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;
      13: astore_3
      14: aload_3
      15: ifnonnull     36
      18: getstatic     #24                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      21: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.announceBackupNoClusterConnections:()V
      26: new           #26                 // class org/apache/activemq/artemis/api/core/ActiveMQException
      29: dup
      30: ldc           #27                 // String lacking cluster connection
      32: invokespecial #28                 // Method org/apache/activemq/artemis/api/core/ActiveMQException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #3                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      40: invokeinterface #4,  1            // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      45: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectorConfigurations:()Ljava/util/Map;
      50: aload_3
      51: invokevirtual #30                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConnectorName:()Ljava/lang/String;
      54: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #32                 // class org/apache/activemq/artemis/api/core/TransportConfiguration
      62: astore        4
      64: aload         4
      66: ifnonnull     91
      69: getstatic     #24                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      72: aload_3
      73: invokevirtual #30                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConnectorName:()Ljava/lang/String;
      76: invokeinterface #33,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.announceBackupNoConnector:(Ljava/lang/String;)V
      81: new           #26                 // class org/apache/activemq/artemis/api/core/ActiveMQException
      84: dup
      85: ldc           #27                 // String lacking cluster connection
      87: invokespecial #28                 // Method org/apache/activemq/artemis/api/core/ActiveMQException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload_0
      92: getfield      #14                 // Field clusterChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      95: new           #34                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRegistrationMessage
      98: dup
      99: aload         4
     101: aload_0
     102: getfield      #6                  // Field clusterUser:Ljava/lang/String;
     105: aload_0
     106: getfield      #8                  // Field clusterPassword:Ljava/lang/String;
     109: iload_1
     110: invokespecial #35                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRegistrationMessage."<init>":(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Ljava/lang/String;Ljava/lang/String;Z)V
     113: invokeinterface #36,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.send:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Z
     118: pop
     119: return

  public void sendNodeAnnounce(long, java.lang.String, java.lang.String, java.lang.String, boolean, org.apache.activemq.artemis.api.core.TransportConfiguration, org.apache.activemq.artemis.api.core.TransportConfiguration);
    Code:
       0: aload_0
       1: getfield      #14                 // Field clusterChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
       4: new           #37                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/NodeAnnounceMessage
       7: dup
       8: lload_1
       9: aload_3
      10: aload         4
      12: aload         5
      14: iload         6
      16: aload         7
      18: aload         8
      20: invokespecial #38                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/NodeAnnounceMessage."<init>":(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/apache/activemq/artemis/api/core/TransportConfiguration;Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
      23: invokeinterface #36,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.send:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Z
      28: pop
      29: return

  public org.apache.activemq.artemis.core.protocol.core.Channel createReplicationChannel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getConnection:()Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;
       9: checkcast     #10                 // class org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection
      12: astore_1
      13: aload_1
      14: getstatic     #39                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.REPLICATION:Lorg/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID;
      17: getfield      #12                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.id:J
      20: iconst_m1
      21: invokeinterface #13,  4           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.getChannel:(JI)Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      26: areturn

  public org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal getSessionFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       4: invokeinterface #40,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
       9: return

  public org.apache.activemq.artemis.core.server.cluster.qourum.Vote sendQuorumVote(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.core.server.cluster.qourum.Vote);
    Code:
       0: aload_0
       1: getfield      #14                 // Field clusterChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
       4: new           #41                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/QuorumVoteMessage
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #42                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/QuorumVoteMessage."<init>":(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/server/cluster/qourum/Vote;)V
      13: bipush        -3
      15: invokeinterface #18,  3           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.sendBlocking:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;B)Lorg/apache/activemq/artemis/core/protocol/core/Packet;
      20: checkcast     #43                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/QuorumVoteReplyMessage
      23: astore_3
      24: aload_0
      25: getfield      #3                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      28: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
      33: invokevirtual #45                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.getQuorumManager:()Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
      36: aload_3
      37: invokevirtual #46                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/QuorumVoteReplyMessage.getHandler:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      40: invokevirtual #47                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.getVoteHandler:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumVoteHandler;
      43: astore        4
      45: aload_3
      46: aload         4
      48: invokevirtual #48                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/QuorumVoteReplyMessage.decodeRest:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumVoteHandler;)V
      51: aload_3
      52: invokevirtual #49                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/QuorumVoteReplyMessage.getVote:()Lorg/apache/activemq/artemis/core/server/cluster/qourum/Vote;
      55: areturn
      56: astore_3
      57: aconst_null
      58: areturn
    Exception table:
       from    to  target type
           0    55    56   Class org/apache/activemq/artemis/api/core/ActiveMQException

  public boolean requestReplicatedBackup(int, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #50                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRequestMessage
       3: dup
       4: iload_1
       5: aload_2
       6: invokespecial #51                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRequestMessage."<init>":(ILorg/apache/activemq/artemis/api/core/SimpleString;)V
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokespecial #52                 // Method requestBackup:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRequestMessage;)Z
      15: ireturn

  private boolean requestBackup(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.BackupRequestMessage);
    Code:
       0: aload_0
       1: getfield      #14                 // Field clusterChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
       4: aload_1
       5: iconst_m1
       6: invokeinterface #18,  3           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.sendBlocking:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;B)Lorg/apache/activemq/artemis/core/protocol/core/Packet;
      11: checkcast     #53                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupResponseMessage
      14: astore_2
      15: goto          21
      18: astore_3
      19: iconst_0
      20: ireturn
      21: aload_2
      22: invokevirtual #54                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupResponseMessage.isBackupStarted:()Z
      25: ireturn
    Exception table:
       from    to  target type
           0    15    18   Class org/apache/activemq/artemis/api/core/ActiveMQException

  public boolean requestSharedStoreBackup(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #50                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRequestMessage
       3: dup
       4: iload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokespecial #55                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRequestMessage."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      14: astore        6
      16: aload_0
      17: aload         6
      19: invokespecial #52                 // Method requestBackup:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/BackupRequestMessage;)Z
      22: ireturn

  public void announceScaleDown(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #56                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ScaleDownAnnounceMessage
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #57                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ScaleDownAnnounceMessage."<init>":(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;)V
       9: astore_3
      10: aload_0
      11: getfield      #14                 // Field clusterChannel:Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      14: aload_3
      15: invokeinterface #36,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.send:(Lorg/apache/activemq/artemis/core/protocol/core/Packet;)Z
      20: pop
      21: return

  public java.lang.String getClusterUser();
    Code:
       0: aload_0
       1: getfield      #6                  // Field clusterUser:Ljava/lang/String;
       4: areturn

  public java.lang.String getClusterPassword();
    Code:
       0: aload_0
       1: getfield      #8                  // Field clusterPassword:Ljava/lang/String;
       4: areturn
}
