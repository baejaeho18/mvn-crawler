Compiled from "ReplicatedPolicy.java"
public class org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy implements org.apache.activemq.artemis.core.server.cluster.ha.HAPolicy<org.apache.activemq.artemis.core.server.impl.LiveActivation> {
  private boolean checkForLiveServer;

  private java.lang.String groupName;

  private java.lang.String clusterName;

  private long initialReplicationSyncTimeout;

  private boolean allowAutoFailBack;

  private org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy replicaPolicy;

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultCheckForLiveServer:()Z
       8: putfield      #3                  // Field checkForLiveServer:Z
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field groupName:Ljava/lang/String;
      16: aload_0
      17: invokestatic  #5                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultInitialReplicationSyncTimeout:()J
      20: putfield      #6                  // Field initialReplicationSyncTimeout:J
      23: aload_0
      24: invokestatic  #7                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultAllowAutoFailback:()Z
      27: putfield      #8                  // Field allowAutoFailBack:Z
      30: aload_0
      31: new           #9                  // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy
      34: dup
      35: aload_0
      36: getfield      #10                 // Field clusterName:Ljava/lang/String;
      39: iconst_m1
      40: aload_0
      41: getfield      #4                  // Field groupName:Ljava/lang/String;
      44: aload_0
      45: invokespecial #11                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy."<init>":(Ljava/lang/String;ILjava/lang/String;Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;)V
      48: putfield      #12                 // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      51: return

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy(boolean, java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultCheckForLiveServer:()Z
       8: putfield      #3                  // Field checkForLiveServer:Z
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field groupName:Ljava/lang/String;
      16: aload_0
      17: invokestatic  #5                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultInitialReplicationSyncTimeout:()J
      20: putfield      #6                  // Field initialReplicationSyncTimeout:J
      23: aload_0
      24: invokestatic  #7                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultAllowAutoFailback:()Z
      27: putfield      #8                  // Field allowAutoFailBack:Z
      30: aload_0
      31: iload_1
      32: putfield      #3                  // Field checkForLiveServer:Z
      35: aload_0
      36: aload_2
      37: putfield      #4                  // Field groupName:Ljava/lang/String;
      40: aload_0
      41: aload_3
      42: putfield      #10                 // Field clusterName:Ljava/lang/String;
      45: aload_0
      46: lload         4
      48: putfield      #6                  // Field initialReplicationSyncTimeout:J
      51: return

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy(boolean, boolean, long, java.lang.String, java.lang.String, org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultCheckForLiveServer:()Z
       8: putfield      #3                  // Field checkForLiveServer:Z
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field groupName:Ljava/lang/String;
      16: aload_0
      17: invokestatic  #5                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultInitialReplicationSyncTimeout:()J
      20: putfield      #6                  // Field initialReplicationSyncTimeout:J
      23: aload_0
      24: invokestatic  #7                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultAllowAutoFailback:()Z
      27: putfield      #8                  // Field allowAutoFailBack:Z
      30: aload_0
      31: iload_1
      32: putfield      #3                  // Field checkForLiveServer:Z
      35: aload_0
      36: aload         6
      38: putfield      #10                 // Field clusterName:Ljava/lang/String;
      41: aload_0
      42: aload         5
      44: putfield      #4                  // Field groupName:Ljava/lang/String;
      47: aload_0
      48: iload_2
      49: putfield      #8                  // Field allowAutoFailBack:Z
      52: aload_0
      53: lload_3
      54: putfield      #6                  // Field initialReplicationSyncTimeout:J
      57: aload_0
      58: aload         7
      60: putfield      #12                 // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      63: return

  public boolean isCheckForLiveServer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field checkForLiveServer:Z
       4: ireturn

  public void setCheckForLiveServer(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field checkForLiveServer:Z
       5: return

  public boolean isAllowAutoFailBack();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allowAutoFailBack:Z
       4: ireturn

  public long getFailbackDelay();
    Code:
       0: ldc2_w        #13                 // long -1l
       3: lreturn

  public void setFailbackDelay(long);
    Code:
       0: return

  public long getInitialReplicationSyncTimeout();
    Code:
       0: aload_0
       1: getfield      #6                  // Field initialReplicationSyncTimeout:J
       4: lreturn

  public void setInitialReplicationSyncTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field initialReplicationSyncTimeout:J
       5: return

  public java.lang.String getClusterName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field clusterName:Ljava/lang/String;
       4: areturn

  public void setClusterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field clusterName:Ljava/lang/String;
       5: return

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy getReplicaPolicy();
    Code:
       0: aload_0
       1: getfield      #12                 // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
       4: ifnonnull     28
       7: aload_0
       8: new           #9                  // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy
      11: dup
      12: aload_0
      13: getfield      #10                 // Field clusterName:Ljava/lang/String;
      16: iconst_m1
      17: aload_0
      18: getfield      #4                  // Field groupName:Ljava/lang/String;
      21: aload_0
      22: invokespecial #11                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy."<init>":(Ljava/lang/String;ILjava/lang/String;Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;)V
      25: putfield      #12                 // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      28: aload_0
      29: getfield      #12                 // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      32: areturn

  public void setReplicaPolicy(org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
       5: return

  public java.lang.String getBackupGroupName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field groupName:Ljava/lang/String;
       4: areturn

  public java.lang.String getGroupName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field groupName:Ljava/lang/String;
       4: areturn

  public java.lang.String getScaleDownGroupName();
    Code:
       0: aconst_null
       1: areturn

  public void setGroupName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field groupName:Ljava/lang/String;
       5: return

  public boolean isSharedStore();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isBackup();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canScaleDown();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getScaleDownClustername();
    Code:
       0: aconst_null
       1: areturn

  public void setAllowAutoFailBack(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field allowAutoFailBack:Z
       5: return

  public org.apache.activemq.artemis.core.server.impl.LiveActivation createActivation(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, boolean, java.util.Map<java.lang.String, java.lang.Object>, org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl$ShutdownOnCriticalErrorListener);
    Code:
       0: new           #15                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #16                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation."<init>":(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;)V
       9: areturn

  public org.apache.activemq.artemis.core.server.impl.Activation createActivation(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, boolean, java.util.Map, org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl$ShutdownOnCriticalErrorListener) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #17                 // Method createActivation:(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;ZLjava/util/Map;Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$ShutdownOnCriticalErrorListener;)Lorg/apache/activemq/artemis/core/server/impl/LiveActivation;
       9: areturn
}
