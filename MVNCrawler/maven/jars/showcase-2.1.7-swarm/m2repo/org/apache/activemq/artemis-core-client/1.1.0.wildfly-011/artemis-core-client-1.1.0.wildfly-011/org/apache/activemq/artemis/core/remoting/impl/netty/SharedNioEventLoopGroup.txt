Compiled from "SharedNioEventLoopGroup.java"
public class org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup extends io.netty.channel.nio.NioEventLoopGroup {
  private static org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup instance;

  private final java.util.concurrent.atomic.AtomicReference<java.util.concurrent.ScheduledFuture<?>> shutdown;

  private final java.util.concurrent.atomic.AtomicLong nioChannelFactoryCount;

  private final io.netty.util.concurrent.Promise<?> terminationPromise;

  private org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup(int, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #5                  // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(ILjava/util/concurrent/ThreadFactory;)V
       6: aload_0
       7: new           #6                  // class java/util/concurrent/atomic/AtomicReference
      10: dup
      11: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      14: putfield      #4                  // Field shutdown:Ljava/util/concurrent/atomic/AtomicReference;
      17: aload_0
      18: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      21: dup
      22: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      25: putfield      #10                 // Field nioChannelFactoryCount:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: getstatic     #11                 // Field io/netty/util/concurrent/ImmediateEventExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateEventExecutor;
      32: invokevirtual #12                 // Method io/netty/util/concurrent/ImmediateEventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      35: putfield      #2                  // Field terminationPromise:Lio/netty/util/concurrent/Promise;
      38: return

  public static synchronized void forceShutdown();
    Code:
       0: getstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
       3: ifnull        26
       6: getstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
       9: invokevirtual #13                 // Method shutdown:()V
      12: getstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
      15: getfield      #10                 // Field nioChannelFactoryCount:Ljava/util/concurrent/atomic/AtomicLong;
      18: lconst_0
      19: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      22: aconst_null
      23: putstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
      26: return

  public static synchronized org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup getInstance(int);
    Code:
       0: getstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
       3: ifnull        35
       6: getstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
       9: getfield      #4                  // Field shutdown:Ljava/util/concurrent/atomic/AtomicReference;
      12: aconst_null
      13: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #16                 // class java/util/concurrent/ScheduledFuture
      19: astore_1
      20: aload_1
      21: ifnull        32
      24: aload_1
      25: iconst_0
      26: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      31: pop
      32: goto          59
      35: new           #18                 // class org/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup
      38: dup
      39: iload_0
      40: new           #19                 // class org/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup$1
      43: dup
      44: invokespecial #20                 // Method org/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup$1."<init>":()V
      47: invokestatic  #21                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      50: checkcast     #22                 // class java/util/concurrent/ThreadFactory
      53: invokespecial #23                 // Method "<init>":(ILjava/util/concurrent/ThreadFactory;)V
      56: putstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
      59: getstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
      62: getfield      #10                 // Field nioChannelFactoryCount:Ljava/util/concurrent/atomic/AtomicLong;
      65: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      68: pop2
      69: getstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
      72: areturn

  public io.netty.util.concurrent.Future<?> terminationFuture();
    Code:
       0: aload_0
       1: getfield      #2                  // Field terminationPromise:Lio/netty/util/concurrent/Promise;
       4: areturn

  public io.netty.util.concurrent.Future<?> shutdownGracefully();
    Code:
       0: aload_0
       1: ldc2_w        #25                 // long 100l
       4: ldc2_w        #27                 // long 3000l
       7: getstatic     #29                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokevirtual #30                 // Method shutdownGracefully:(JJLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/Future;
      13: areturn

  public io.netty.util.concurrent.Future<?> shutdownGracefully(long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #10                 // Field nioChannelFactoryCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
       7: lconst_0
       8: lcmp
       9: ifne          51
      12: aload_0
      13: getfield      #4                  // Field shutdown:Ljava/util/concurrent/atomic/AtomicReference;
      16: aconst_null
      17: aload_0
      18: invokevirtual #32                 // Method next:()Lio/netty/channel/EventLoop;
      21: new           #33                 // class org/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup$2
      24: dup
      25: aload_0
      26: lload_1
      27: lload_3
      28: aload         5
      30: invokespecial #34                 // Method org/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup$2."<init>":(Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;JJLjava/util/concurrent/TimeUnit;)V
      33: ldc2_w        #35                 // long 10l
      36: ldc2_w        #35                 // long 10l
      39: getstatic     #37                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      42: invokeinterface #38,  7           // InterfaceMethod io/netty/channel/EventLoop.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      47: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      50: pop
      51: aload_0
      52: getfield      #2                  // Field terminationPromise:Lio/netty/util/concurrent/Promise;
      55: areturn

  static java.util.concurrent.atomic.AtomicReference access$000(org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup);
    Code:
       0: aload_0
       1: getfield      #4                  // Field shutdown:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static io.netty.util.concurrent.Future access$101(org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: aload         5
       5: invokespecial #3                  // Method io/netty/channel/nio/NioEventLoopGroup.shutdownGracefully:(JJLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/Future;
       8: areturn

  static io.netty.util.concurrent.Promise access$200(org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup);
    Code:
       0: aload_0
       1: getfield      #2                  // Field terminationPromise:Lio/netty/util/concurrent/Promise;
       4: areturn

  static org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup access$302(org.apache.activemq.artemis.core.remoting.impl.netty.SharedNioEventLoopGroup);
    Code:
       0: aload_0
       1: dup
       2: putstatic     #1                  // Field instance:Lorg/apache/activemq/artemis/core/remoting/impl/netty/SharedNioEventLoopGroup;
       5: areturn
}
