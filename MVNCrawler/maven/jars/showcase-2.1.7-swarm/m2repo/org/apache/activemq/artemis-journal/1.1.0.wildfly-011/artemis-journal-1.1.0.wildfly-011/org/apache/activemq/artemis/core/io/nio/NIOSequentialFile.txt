Compiled from "NIOSequentialFile.java"
public final class org.apache.activemq.artemis.core.io.nio.NIOSequentialFile extends org.apache.activemq.artemis.core.io.AbstractSequentialFile {
  private java.nio.channels.FileChannel channel;

  private java.io.RandomAccessFile rfile;

  private java.util.concurrent.Semaphore maxIOSemaphore;

  private final int defaultMaxIO;

  private int maxIO;

  public org.apache.activemq.artemis.core.io.nio.NIOSequentialFile(org.apache.activemq.artemis.core.io.SequentialFileFactory, java.io.File, java.lang.String, int, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload_1
       4: aload         5
       6: invokespecial #4                  // Method org/apache/activemq/artemis/core/io/AbstractSequentialFile."<init>":(Ljava/io/File;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;Ljava/util/concurrent/Executor;)V
       9: aload_0
      10: iload         4
      12: putfield      #5                  // Field defaultMaxIO:I
      15: return

  public int getAlignment();
    Code:
       0: iconst_1
       1: ireturn

  public int calculateBlockStart(int);
    Code:
       0: iload_1
       1: ireturn

  public synchronized boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public synchronized void open() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field defaultMaxIO:I
       5: iconst_1
       6: invokevirtual #7                  // Method open:(IZ)V
       9: return

  public void open(int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #8                  // class java/io/RandomAccessFile
       4: dup
       5: aload_0
       6: invokevirtual #9                  // Method getFile:()Ljava/io/File;
       9: ldc           #10                 // String rw
      11: invokespecial #11                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      14: putfield      #12                 // Field rfile:Ljava/io/RandomAccessFile;
      17: aload_0
      18: aload_0
      19: getfield      #12                 // Field rfile:Ljava/io/RandomAccessFile;
      22: invokevirtual #13                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      25: putfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      28: aload_0
      29: aload_0
      30: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      33: invokevirtual #14                 // Method java/nio/channels/FileChannel.size:()J
      36: putfield      #15                 // Field fileSize:J
      39: goto          74
      42: astore_3
      43: aload_3
      44: athrow
      45: astore_3
      46: aload_0
      47: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      50: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      53: dup
      54: aload_3
      55: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      58: aload_3
      59: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: aload_3
      63: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      66: aload_0
      67: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
      72: aload_3
      73: athrow
      74: aload_0
      75: getfield      #22                 // Field writerExecutor:Ljava/util/concurrent/Executor;
      78: ifnull        102
      81: iload_2
      82: ifeq          102
      85: aload_0
      86: new           #23                 // class java/util/concurrent/Semaphore
      89: dup
      90: iload_1
      91: invokespecial #24                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      94: putfield      #1                  // Field maxIOSemaphore:Ljava/util/concurrent/Semaphore;
      97: aload_0
      98: iload_1
      99: putfield      #25                 // Field maxIO:I
     102: return
    Exception table:
       from    to  target type
           0    39    42   Class java/nio/channels/ClosedChannelException
           0    39    45   Class java/io/IOException

  public void fill(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #26                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokevirtual #27                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      10: pop
      11: aload_2
      12: iconst_0
      13: invokevirtual #28                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      16: pop
      17: aload_0
      18: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      21: lconst_0
      22: invokevirtual #29                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      25: pop
      26: aload_0
      27: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      30: aload_2
      31: invokevirtual #30                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
      34: pop
      35: aload_0
      36: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      39: iconst_0
      40: invokevirtual #31                 // Method java/nio/channels/FileChannel.force:(Z)V
      43: aload_0
      44: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      47: lconst_0
      48: invokevirtual #29                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      51: pop
      52: goto          87
      55: astore_3
      56: aload_3
      57: athrow
      58: astore_3
      59: aload_0
      60: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      63: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      66: dup
      67: aload_3
      68: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      71: aload_3
      72: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: aload_3
      76: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      79: aload_0
      80: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
      85: aload_3
      86: athrow
      87: aload_0
      88: aload_0
      89: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      92: invokevirtual #14                 // Method java/nio/channels/FileChannel.size:()J
      95: putfield      #15                 // Field fileSize:J
      98: return
    Exception table:
       from    to  target type
          17    52    55   Class java/nio/channels/ClosedChannelException
          17    52    58   Class java/io/IOException

  public synchronized void waitForClose() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isOpen:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #33                 // Method java/lang/Object.wait:()V
      11: goto          0
      14: return

  public synchronized void close() throws java.io.IOException, java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/apache/activemq/artemis/core/io/AbstractSequentialFile.close:()V
       4: aload_0
       5: getfield      #1                  // Field maxIOSemaphore:Ljava/util/concurrent/Semaphore;
       8: ifnull        46
      11: aload_0
      12: getfield      #1                  // Field maxIOSemaphore:Ljava/util/concurrent/Semaphore;
      15: aload_0
      16: getfield      #25                 // Field maxIO:I
      19: ldc2_w        #35                 // long 60l
      22: getstatic     #37                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      25: invokevirtual #38                 // Method java/util/concurrent/Semaphore.tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z
      28: ifne          46
      31: getstatic     #39                 // Field org/apache/activemq/artemis/journal/ActiveMQJournalLogger.LOGGER:Lorg/apache/activemq/artemis/journal/ActiveMQJournalLogger;
      34: aload_0
      35: invokevirtual #40                 // Method getFileName:()Ljava/lang/String;
      38: invokeinterface #41,  2           // InterfaceMethod org/apache/activemq/artemis/journal/ActiveMQJournalLogger.errorClosingFile:(Ljava/lang/String;)V
      43: goto          11
      46: aload_0
      47: aconst_null
      48: putfield      #1                  // Field maxIOSemaphore:Ljava/util/concurrent/Semaphore;
      51: aload_0
      52: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      55: ifnull        65
      58: aload_0
      59: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      62: invokevirtual #42                 // Method java/nio/channels/FileChannel.close:()V
      65: aload_0
      66: getfield      #12                 // Field rfile:Ljava/io/RandomAccessFile;
      69: ifnull        79
      72: aload_0
      73: getfield      #12                 // Field rfile:Ljava/io/RandomAccessFile;
      76: invokevirtual #43                 // Method java/io/RandomAccessFile.close:()V
      79: goto          114
      82: astore_1
      83: aload_1
      84: athrow
      85: astore_1
      86: aload_0
      87: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      90: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      93: dup
      94: aload_1
      95: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      98: aload_1
      99: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     102: aload_1
     103: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     106: aload_0
     107: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
     112: aload_1
     113: athrow
     114: aload_0
     115: aconst_null
     116: putfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
     119: aload_0
     120: aconst_null
     121: putfield      #12                 // Field rfile:Ljava/io/RandomAccessFile;
     124: aload_0
     125: invokevirtual #44                 // Method java/lang/Object.notifyAll:()V
     128: return
    Exception table:
       from    to  target type
          51    79    82   Class java/nio/channels/ClosedChannelException
          51    79    85   Class java/io/IOException

  public int read(java.nio.ByteBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #45                 // Method read:(Ljava/nio/ByteBuffer;Lorg/apache/activemq/artemis/core/io/IOCallback;)I
       6: ireturn

  public synchronized int read(java.nio.ByteBuffer, org.apache.activemq.artemis.core.io.IOCallback) throws java.io.IOException, org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
       4: ifnonnull     42
       7: new           #46                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
      10: dup
      11: new           #47                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #49                 // String File
      20: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #40                 // Method getFileName:()Ljava/lang/String;
      27: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #51                 // String  has a null channel
      32: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #53                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      46: aload_1
      47: invokevirtual #54                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      50: istore_3
      51: aload_2
      52: ifnull        61
      55: aload_2
      56: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.done:()V
      61: aload_1
      62: invokevirtual #56                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      65: pop
      66: iload_3
      67: ireturn
      68: astore_3
      69: aload_3
      70: athrow
      71: astore_3
      72: aload_2
      73: ifnull        92
      76: aload_2
      77: getstatic     #57                 // Field org/apache/activemq/artemis/api/core/ActiveMQExceptionType.IO_ERROR:Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
      80: invokevirtual #58                 // Method org/apache/activemq/artemis/api/core/ActiveMQExceptionType.getCode:()I
      83: aload_3
      84: invokevirtual #59                 // Method java/io/IOException.getLocalizedMessage:()Ljava/lang/String;
      87: invokeinterface #60,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      92: aload_0
      93: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      96: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      99: dup
     100: aload_3
     101: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     104: aload_3
     105: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     108: aload_3
     109: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     112: aload_0
     113: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
     118: aload_3
     119: athrow
    Exception table:
       from    to  target type
           0    67    68   Class java/nio/channels/ClosedChannelException
           0    67    71   Class java/io/IOException

  public void sync() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
       4: ifnull        50
       7: aload_0
       8: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      11: iconst_0
      12: invokevirtual #31                 // Method java/nio/channels/FileChannel.force:(Z)V
      15: goto          50
      18: astore_1
      19: aload_1
      20: athrow
      21: astore_1
      22: aload_0
      23: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      26: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      29: dup
      30: aload_1
      31: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      34: aload_1
      35: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: aload_1
      39: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      42: aload_0
      43: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
      48: aload_1
      49: athrow
      50: return
    Exception table:
       from    to  target type
           7    15    18   Class java/nio/channels/ClosedChannelException
           7    15    21   Class java/io/IOException

  public long size() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
       4: ifnonnull     15
       7: aload_0
       8: invokevirtual #9                  // Method getFile:()Ljava/io/File;
      11: invokevirtual #61                 // Method java/io/File.length:()J
      14: lreturn
      15: aload_0
      16: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
      19: invokevirtual #14                 // Method java/nio/channels/FileChannel.size:()J
      22: lreturn
      23: astore_1
      24: aload_1
      25: athrow
      26: astore_1
      27: aload_0
      28: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      31: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      34: dup
      35: aload_1
      36: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      39: aload_1
      40: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: aload_1
      44: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      47: aload_0
      48: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
      53: aload_1
      54: athrow
    Exception table:
       from    to  target type
          15    22    23   Class java/nio/channels/ClosedChannelException
          15    22    26   Class java/io/IOException

  public void position(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #62                 // Method org/apache/activemq/artemis/core/io/AbstractSequentialFile.position:(J)V
       5: aload_0
       6: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
       9: lload_1
      10: invokevirtual #29                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      13: pop
      14: goto          49
      17: astore_3
      18: aload_3
      19: athrow
      20: astore_3
      21: aload_0
      22: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      25: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      28: dup
      29: aload_3
      30: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      33: aload_3
      34: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: aload_3
      38: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      41: aload_0
      42: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
      47: aload_3
      48: athrow
      49: return
    Exception table:
       from    to  target type
           0    14    17   Class java/nio/channels/ClosedChannelException
           0    14    20   Class java/io/IOException

  public java.lang.String toString();
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #63                 // String NIOSequentialFile
       9: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #9                  // Method getFile:()Ljava/io/File;
      16: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public org.apache.activemq.artemis.core.io.SequentialFile cloneFile();
    Code:
       0: new           #65                 // class org/apache/activemq/artemis/core/io/nio/NIOSequentialFile
       3: dup
       4: aload_0
       5: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
       8: aload_0
       9: getfield      #66                 // Field directory:Ljava/io/File;
      12: aload_0
      13: invokevirtual #40                 // Method getFileName:()Ljava/lang/String;
      16: aload_0
      17: getfield      #25                 // Field maxIO:I
      20: aload_0
      21: getfield      #22                 // Field writerExecutor:Ljava/util/concurrent/Executor;
      24: invokespecial #67                 // Method "<init>":(Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;Ljava/io/File;Ljava/lang/String;ILjava/util/concurrent/Executor;)V
      27: areturn

  public void writeDirect(java.nio.ByteBuffer, boolean, org.apache.activemq.artemis.core.io.IOCallback);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #68                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #69                 // String callback parameter need to be set
      10: invokespecial #70                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: iload_2
      17: aload_3
      18: invokespecial #71                 // Method internalWrite:(Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      21: goto          43
      24: astore        4
      26: aload_3
      27: getstatic     #73                 // Field org/apache/activemq/artemis/api/core/ActiveMQExceptionType.GENERIC_EXCEPTION:Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
      30: invokevirtual #58                 // Method org/apache/activemq/artemis/api/core/ActiveMQExceptionType.getCode:()I
      33: aload         4
      35: invokevirtual #74                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      38: invokeinterface #60,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      43: return
    Exception table:
       from    to  target type
          14    21    24   Class java/lang/Exception

  public void writeDirect(java.nio.ByteBuffer, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #71                 // Method internalWrite:(Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
       7: return

  public void writeInternal(java.nio.ByteBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aconst_null
       4: invokespecial #71                 // Method internalWrite:(Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
       7: return

  protected java.nio.ByteBuffer newBuffer(int, int);
    Code:
       0: iload_2
       1: istore_1
       2: aload_0
       3: iload_1
       4: iload_2
       5: invokespecial #75                 // Method org/apache/activemq/artemis/core/io/AbstractSequentialFile.newBuffer:(II)Ljava/nio/ByteBuffer;
       8: areturn

  private void internalWrite(java.nio.ByteBuffer, boolean, org.apache.activemq.artemis.core.io.IOCallback) throws java.io.IOException, org.apache.activemq.artemis.api.core.ActiveMQIOErrorException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isOpen:()Z
       4: ifne          38
       7: aload_3
       8: ifnull        28
      11: aload_3
      12: getstatic     #57                 // Field org/apache/activemq/artemis/api/core/ActiveMQExceptionType.IO_ERROR:Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
      15: invokevirtual #58                 // Method org/apache/activemq/artemis/api/core/ActiveMQExceptionType.getCode:()I
      18: ldc           #76                 // String File not opened
      20: invokeinterface #60,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      25: goto          37
      28: getstatic     #77                 // Field org/apache/activemq/artemis/journal/ActiveMQJournalBundle.BUNDLE:Lorg/apache/activemq/artemis/journal/ActiveMQJournalBundle;
      31: invokeinterface #78,  1           // InterfaceMethod org/apache/activemq/artemis/journal/ActiveMQJournalBundle.fileNotOpened:()Lorg/apache/activemq/artemis/api/core/ActiveMQIOErrorException;
      36: athrow
      37: return
      38: aload_0
      39: getfield      #79                 // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      42: aload_1
      43: invokevirtual #80                 // Method java/nio/ByteBuffer.limit:()I
      46: i2l
      47: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      50: pop2
      51: aload_0
      52: getfield      #1                  // Field maxIOSemaphore:Ljava/util/concurrent/Semaphore;
      55: ifnull        62
      58: aload_3
      59: ifnonnull     111
      62: aload_0
      63: aload_1
      64: iload_2
      65: aload_3
      66: invokespecial #3                  // Method doInternalWrite:(Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      69: goto          138
      72: astore        4
      74: aload         4
      76: athrow
      77: astore        4
      79: aload_0
      80: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      83: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      86: dup
      87: aload         4
      89: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      92: aload         4
      94: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      97: aload         4
      99: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     102: aload_0
     103: invokeinterface #21,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
     108: goto          138
     111: aload_0
     112: getfield      #1                  // Field maxIOSemaphore:Ljava/util/concurrent/Semaphore;
     115: invokevirtual #82                 // Method java/util/concurrent/Semaphore.acquire:()V
     118: aload_0
     119: getfield      #22                 // Field writerExecutor:Ljava/util/concurrent/Executor;
     122: new           #83                 // class org/apache/activemq/artemis/core/io/nio/NIOSequentialFile$1
     125: dup
     126: aload_0
     127: aload_1
     128: iload_2
     129: aload_3
     130: invokespecial #84                 // Method org/apache/activemq/artemis/core/io/nio/NIOSequentialFile$1."<init>":(Lorg/apache/activemq/artemis/core/io/nio/NIOSequentialFile;Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
     133: invokeinterface #85,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     138: return
    Exception table:
       from    to  target type
          62    69    72   Class java/nio/channels/ClosedChannelException
          62    69    77   Class java/io/IOException

  private void doInternalWrite(java.nio.ByteBuffer, boolean, org.apache.activemq.artemis.core.io.IOCallback) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/FileChannel;
       4: aload_1
       5: invokevirtual #30                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
       8: pop
       9: iload_2
      10: ifeq          17
      13: aload_0
      14: invokevirtual #86                 // Method sync:()V
      17: aload_3
      18: ifnull        27
      21: aload_3
      22: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.done:()V
      27: return

  static void access$000(org.apache.activemq.artemis.core.io.nio.NIOSequentialFile, java.nio.ByteBuffer, boolean, org.apache.activemq.artemis.core.io.IOCallback) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #3                  // Method doInternalWrite:(Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
       7: return

  static org.apache.activemq.artemis.core.io.SequentialFileFactory access$100(org.apache.activemq.artemis.core.io.nio.NIOSequentialFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
       4: areturn

  static java.util.concurrent.Semaphore access$200(org.apache.activemq.artemis.core.io.nio.NIOSequentialFile);
    Code:
       0: aload_0
       1: getfield      #1                  // Field maxIOSemaphore:Ljava/util/concurrent/Semaphore;
       4: areturn
}
