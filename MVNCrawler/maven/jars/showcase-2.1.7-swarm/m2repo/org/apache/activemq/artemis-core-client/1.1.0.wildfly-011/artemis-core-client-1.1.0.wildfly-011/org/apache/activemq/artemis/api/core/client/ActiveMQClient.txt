Compiled from "ActiveMQClient.java"
public final class org.apache.activemq.artemis.api.core.client.ActiveMQClient {
  public static int globalThreadMaxPoolSize;

  public static int globalScheduledThreadPoolSize;

  public static final java.lang.String DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME;

  public static final long DEFAULT_CLIENT_FAILURE_CHECK_PERIOD;

  public static final long DEFAULT_CLIENT_FAILURE_CHECK_PERIOD_INVM;

  public static final long DEFAULT_CONNECTION_TTL;

  public static final long DEFAULT_CONNECTION_TTL_INVM;

  public static final int DEFAULT_MIN_LARGE_MESSAGE_SIZE;

  public static final boolean DEFAULT_COMPRESS_LARGE_MESSAGES;

  public static final int DEFAULT_CONSUMER_WINDOW_SIZE;

  public static final int DEFAULT_CONSUMER_MAX_RATE;

  public static final int DEFAULT_CONFIRMATION_WINDOW_SIZE;

  public static final int DEFAULT_PRODUCER_WINDOW_SIZE;

  public static final int DEFAULT_PRODUCER_MAX_RATE;

  public static final boolean DEFAULT_BLOCK_ON_ACKNOWLEDGE;

  public static final boolean DEFAULT_BLOCK_ON_DURABLE_SEND;

  public static final boolean DEFAULT_BLOCK_ON_NON_DURABLE_SEND;

  public static final boolean DEFAULT_AUTO_GROUP;

  public static final long DEFAULT_CALL_TIMEOUT;

  public static final long DEFAULT_CALL_FAILOVER_TIMEOUT;

  public static final int DEFAULT_ACK_BATCH_SIZE;

  public static final boolean DEFAULT_PRE_ACKNOWLEDGE;

  public static final long DEFAULT_DISCOVERY_INITIAL_WAIT_TIMEOUT;

  public static final long DEFAULT_DISCOVERY_REFRESH_TIMEOUT;

  public static final int DEFAULT_DISCOVERY_PORT;

  public static final long DEFAULT_RETRY_INTERVAL;

  public static final double DEFAULT_RETRY_INTERVAL_MULTIPLIER;

  public static final long DEFAULT_MAX_RETRY_INTERVAL;

  public static final int DEFAULT_RECONNECT_ATTEMPTS;

  public static final int INITIAL_CONNECT_ATTEMPTS;

  public static final boolean DEFAULT_FAILOVER_ON_INITIAL_CONNECTION;

  public static final boolean DEFAULT_IS_HA;

  public static final boolean DEFAULT_USE_GLOBAL_POOLS;

  public static final int DEFAULT_THREAD_POOL_MAX_SIZE;

  public static final int DEFAULT_GLOBAL_THREAD_POOL_MAX_SIZE;

  public static final int DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE;

  public static final boolean DEFAULT_CACHE_LARGE_MESSAGE_CLIENT;

  public static final int DEFAULT_INITIAL_MESSAGE_PACKET_SIZE;

  public static final boolean DEFAULT_XA;

  public static final boolean DEFAULT_HA;

  public static final java.lang.String DEFAULT_CORE_PROTOCOL;

  public static final java.lang.String THREAD_POOL_MAX_SIZE_PROPERTY_KEY;

  public static final java.lang.String SCHEDULED_THREAD_POOL_SIZE_PROPERTY_KEY;

  private static java.util.concurrent.ThreadPoolExecutor globalThreadPool;

  private static boolean injectedPools;

  private static java.util.concurrent.ScheduledThreadPoolExecutor globalScheduledThreadPool;

  public static synchronized void clearThreadPools();
    Code:
       0: ldc2_w        #1                  // long 10l
       3: getstatic     #3                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokestatic  #4                  // Method clearThreadPools:(JLjava/util/concurrent/TimeUnit;)V
       9: return

  public static synchronized void clearThreadPools(long, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #5                  // Field injectedPools:Z
       3: ifeq          19
       6: aconst_null
       7: putstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      10: aconst_null
      11: putstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      14: iconst_0
      15: putstatic     #5                  // Field injectedPools:Z
      18: return
      19: getstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      22: ifnull        85
      25: getstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      28: invokevirtual #8                  // Method java/util/concurrent/ThreadPoolExecutor.shutdown:()V
      31: getstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      34: lload_0
      35: aload_2
      36: invokevirtual #9                  // Method java/util/concurrent/ThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      39: ifne          59
      42: getstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      45: invokevirtual #10                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      48: pop
      49: getstatic     #11                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      52: ldc           #12                 // String Couldn\'t finish the client globalThreadPool in less than 10 seconds, interrupting it now
      54: invokeinterface #13,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.warn:(Ljava/lang/String;)V
      59: aconst_null
      60: putstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      63: goto          85
      66: astore_3
      67: new           #15                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
      70: dup
      71: aload_3
      72: invokespecial #16                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
      75: athrow
      76: astore        4
      78: aconst_null
      79: putstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      82: aload         4
      84: athrow
      85: getstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      88: ifnull        151
      91: getstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      94: invokevirtual #17                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdown:()V
      97: getstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
     100: lload_0
     101: aload_2
     102: invokevirtual #18                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     105: ifne          125
     108: getstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
     111: invokevirtual #19                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.shutdownNow:()Ljava/util/List;
     114: pop
     115: getstatic     #11                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
     118: ldc           #20                 // String Couldn\'t finish the client scheduled in less than 10 seconds, interrupting it now
     120: invokeinterface #13,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.warn:(Ljava/lang/String;)V
     125: aconst_null
     126: putstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
     129: goto          151
     132: astore_3
     133: new           #15                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     136: dup
     137: aload_3
     138: invokespecial #16                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     141: athrow
     142: astore        5
     144: aconst_null
     145: putstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
     148: aload         5
     150: athrow
     151: return
    Exception table:
       from    to  target type
          31    59    66   Class java/lang/InterruptedException
          31    59    76   any
          66    78    76   any
          97   125   132   Class java/lang/InterruptedException
          97   125   142   any
         132   144   142   any

  public static synchronized void injectPools(java.util.concurrent.ThreadPoolExecutor, java.util.concurrent.ScheduledThreadPoolExecutor);
    Code:
       0: invokestatic  #21                 // Method clearThreadPools:()V
       3: aload_0
       4: putstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
       7: aload_1
       8: putstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      11: iconst_1
      12: putstatic     #5                  // Field injectedPools:Z
      15: return

  public static synchronized java.util.concurrent.ThreadPoolExecutor getGlobalThreadPool();
    Code:
       0: getstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
       3: ifnonnull     85
       6: new           #22                 // class org/apache/activemq/artemis/api/core/client/ActiveMQClient$1
       9: dup
      10: invokespecial #23                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient$1."<init>":()V
      13: invokestatic  #24                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      16: checkcast     #25                 // class java/util/concurrent/ThreadFactory
      19: astore_0
      20: getstatic     #26                 // Field globalThreadMaxPoolSize:I
      23: iconst_m1
      24: if_icmpne     57
      27: new           #27                 // class java/util/concurrent/ThreadPoolExecutor
      30: dup
      31: iconst_0
      32: ldc           #29                 // int 2147483647
      34: ldc2_w        #30                 // long 60l
      37: getstatic     #3                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      40: new           #32                 // class java/util/concurrent/SynchronousQueue
      43: dup
      44: invokespecial #33                 // Method java/util/concurrent/SynchronousQueue."<init>":()V
      47: aload_0
      48: invokespecial #34                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      51: putstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      54: goto          85
      57: new           #27                 // class java/util/concurrent/ThreadPoolExecutor
      60: dup
      61: getstatic     #26                 // Field globalThreadMaxPoolSize:I
      64: getstatic     #26                 // Field globalThreadMaxPoolSize:I
      67: lconst_1
      68: getstatic     #3                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      71: new           #35                 // class java/util/concurrent/LinkedBlockingQueue
      74: dup
      75: invokespecial #36                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      78: aload_0
      79: invokespecial #34                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      82: putstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      85: getstatic     #6                  // Field globalThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      88: areturn

  public static synchronized java.util.concurrent.ScheduledThreadPoolExecutor getGlobalScheduledThreadPool();
    Code:
       0: getstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
       3: ifnonnull     34
       6: new           #37                 // class org/apache/activemq/artemis/api/core/client/ActiveMQClient$2
       9: dup
      10: invokespecial #38                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient$2."<init>":()V
      13: invokestatic  #24                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      16: checkcast     #25                 // class java/util/concurrent/ThreadFactory
      19: astore_0
      20: new           #39                 // class java/util/concurrent/ScheduledThreadPoolExecutor
      23: dup
      24: getstatic     #40                 // Field globalScheduledThreadPoolSize:I
      27: aload_0
      28: invokespecial #41                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      31: putstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      34: getstatic     #7                  // Field globalScheduledThreadPool:Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      37: areturn

  public static void initializeGlobalThreadPoolProperties();
    Code:
       0: ldc           #43                 // String activemq.artemis.client.global.thread.pool.max.size
       2: ldc           #44                 // String 500
       4: invokestatic  #45                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: invokestatic  #46                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      10: invokevirtual #47                 // Method java/lang/Integer.intValue:()I
      13: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokevirtual #47                 // Method java/lang/Integer.intValue:()I
      19: ldc           #49                 // String activemq.artemis.client.global.scheduled.thread.pool.core.size
      21: ldc           #50                 // String 5
      23: invokestatic  #45                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      26: invokestatic  #46                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      29: invokevirtual #47                 // Method java/lang/Integer.intValue:()I
      32: invokestatic  #51                 // Method setGlobalThreadPoolProperties:(II)V
      35: return

  public static void setGlobalThreadPoolProperties(int, int);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmpge     7
       5: iconst_2
       6: istore_0
       7: iload_1
       8: putstatic     #40                 // Field globalScheduledThreadPoolSize:I
      11: iload_0
      12: putstatic     #26                 // Field globalThreadMaxPoolSize:I
      15: getstatic     #5                  // Field injectedPools:Z
      18: ifne          42
      21: invokestatic  #52                 // Method getGlobalThreadPool:()Ljava/util/concurrent/ThreadPoolExecutor;
      24: iload_0
      25: invokevirtual #53                 // Method java/util/concurrent/ThreadPoolExecutor.setCorePoolSize:(I)V
      28: invokestatic  #52                 // Method getGlobalThreadPool:()Ljava/util/concurrent/ThreadPoolExecutor;
      31: iload_0
      32: invokevirtual #54                 // Method java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize:(I)V
      35: invokestatic  #55                 // Method getGlobalScheduledThreadPool:()Ljava/util/concurrent/ScheduledThreadPoolExecutor;
      38: iload_1
      39: invokevirtual #56                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setCorePoolSize:(I)V
      42: return

  public static org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocator(java.lang.String) throws java.lang.Exception;
    Code:
       0: new           #57                 // class org/apache/activemq/artemis/uri/ServerLocatorParser
       3: dup
       4: invokespecial #58                 // Method org/apache/activemq/artemis/uri/ServerLocatorParser."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #59                 // class java/net/URI
      12: dup
      13: aload_0
      14: invokespecial #60                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      17: aconst_null
      18: invokevirtual #61                 // Method org/apache/activemq/artemis/uri/ServerLocatorParser.newObject:(Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #62                 // class org/apache/activemq/artemis/api/core/client/ServerLocator
      24: areturn

  public static org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocatorWithoutHA(org.apache.activemq.artemis.api.core.TransportConfiguration...);
    Code:
       0: new           #63                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_0
       5: aload_0
       6: invokespecial #64                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl."<init>":(Z[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
       9: areturn

  public static org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocator(boolean, org.apache.activemq.artemis.api.core.TransportConfiguration...);
    Code:
       0: new           #63                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #64                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl."<init>":(Z[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
       9: areturn

  public static org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocatorWithoutHA(org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);
    Code:
       0: new           #63                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_0
       5: aload_0
       6: invokespecial #65                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl."<init>":(ZLorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)V
       9: areturn

  public static org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocator(boolean, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);
    Code:
       0: new           #63                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #65                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl."<init>":(ZLorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)V
       9: areturn

  public static org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocatorWithHA(org.apache.activemq.artemis.api.core.TransportConfiguration...);
    Code:
       0: new           #63                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_1
       5: aload_0
       6: invokespecial #64                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl."<init>":(Z[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
       9: areturn

  public static org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocatorWithHA(org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);
    Code:
       0: new           #63                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       3: dup
       4: iconst_1
       5: aload_0
       6: invokespecial #65                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl."<init>":(ZLorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)V
       9: areturn

  private org.apache.activemq.artemis.api.core.client.ActiveMQClient();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #67                 // class org/apache/activemq/artemis/api/core/client/loadbalance/RoundRobinConnectionLoadBalancingPolicy
       2: invokevirtual #68                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
       5: putstatic     #69                 // Field DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME:Ljava/lang/String;
       8: invokestatic  #70                 // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultClientFailureCheckPeriod:()J
      11: putstatic     #71                 // Field DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
      14: invokestatic  #72                 // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultConnectionTtl:()J
      17: putstatic     #73                 // Field DEFAULT_CONNECTION_TTL:J
      20: invokestatic  #74                 // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultRetryIntervalMultiplier:()D
      23: putstatic     #75                 // Field DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
      26: invokestatic  #76                 // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultMaxRetryInterval:()J
      29: putstatic     #77                 // Field DEFAULT_MAX_RETRY_INTERVAL:J
      32: iconst_0
      33: putstatic     #5                  // Field injectedPools:Z
      36: invokestatic  #78                 // Method initializeGlobalThreadPoolProperties:()V
      39: return
}
