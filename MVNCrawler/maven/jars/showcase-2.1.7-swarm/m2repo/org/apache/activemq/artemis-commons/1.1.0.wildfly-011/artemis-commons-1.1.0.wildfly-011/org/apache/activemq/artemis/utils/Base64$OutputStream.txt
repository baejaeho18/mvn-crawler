Compiled from "Base64.java"
public class org.apache.activemq.artemis.utils.Base64$OutputStream extends java.io.FilterOutputStream {
  private final boolean encode;

  private int position;

  private byte[] buffer;

  private final int bufferLength;

  private int lineLength;

  private final boolean breakLines;

  private final byte[] b4;

  private boolean suspendEncoding;

  private final int options;

  private final byte[] alphabet;

  private final byte[] decodabet;

  public org.apache.activemq.artemis.utils.Base64$OutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #2                  // Method "<init>":(Ljava/io/OutputStream;I)V
       6: return

  public org.apache.activemq.artemis.utils.Base64$OutputStream(java.io.OutputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: iload_2
       7: bipush        8
       9: iand
      10: bipush        8
      12: if_icmpeq     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: putfield      #4                  // Field breakLines:Z
      23: aload_0
      24: iload_2
      25: iconst_1
      26: iand
      27: iconst_1
      28: if_icmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: putfield      #5                  // Field encode:Z
      39: aload_0
      40: aload_0
      41: getfield      #5                  // Field encode:Z
      44: ifeq          51
      47: iconst_3
      48: goto          52
      51: iconst_4
      52: putfield      #6                  // Field bufferLength:I
      55: aload_0
      56: aload_0
      57: getfield      #6                  // Field bufferLength:I
      60: newarray       byte
      62: putfield      #7                  // Field buffer:[B
      65: aload_0
      66: iconst_0
      67: putfield      #8                  // Field position:I
      70: aload_0
      71: iconst_0
      72: putfield      #9                  // Field lineLength:I
      75: aload_0
      76: iconst_0
      77: putfield      #10                 // Field suspendEncoding:Z
      80: aload_0
      81: iconst_4
      82: newarray       byte
      84: putfield      #11                 // Field b4:[B
      87: aload_0
      88: iload_2
      89: putfield      #12                 // Field options:I
      92: aload_0
      93: iload_2
      94: invokestatic  #13                 // Method org/apache/activemq/artemis/utils/Base64.access$000:(I)[B
      97: putfield      #14                 // Field alphabet:[B
     100: aload_0
     101: iload_2
     102: invokestatic  #15                 // Method org/apache/activemq/artemis/utils/Base64.access$100:(I)[B
     105: putfield      #16                 // Field decodabet:[B
     108: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field suspendEncoding:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #17                 // Field java/io/FilterOutputStream.out:Ljava/io/OutputStream;
      11: iload_1
      12: invokevirtual #18                 // Method java/io/OutputStream.write:(I)V
      15: return
      16: aload_0
      17: getfield      #5                  // Field encode:Z
      20: ifeq          126
      23: aload_0
      24: getfield      #7                  // Field buffer:[B
      27: aload_0
      28: dup
      29: getfield      #8                  // Field position:I
      32: dup_x1
      33: iconst_1
      34: iadd
      35: putfield      #8                  // Field position:I
      38: iload_1
      39: i2b
      40: bastore
      41: aload_0
      42: getfield      #8                  // Field position:I
      45: aload_0
      46: getfield      #6                  // Field bufferLength:I
      49: if_icmplt     232
      52: aload_0
      53: getfield      #19                 // Field out:Ljava/io/OutputStream;
      56: aload_0
      57: getfield      #11                 // Field b4:[B
      60: aload_0
      61: getfield      #7                  // Field buffer:[B
      64: aload_0
      65: getfield      #6                  // Field bufferLength:I
      68: aload_0
      69: getfield      #12                 // Field options:I
      72: invokestatic  #20                 // Method org/apache/activemq/artemis/utils/Base64.access$400:([B[BII)[B
      75: invokevirtual #21                 // Method java/io/OutputStream.write:([B)V
      78: aload_0
      79: dup
      80: getfield      #9                  // Field lineLength:I
      83: iconst_4
      84: iadd
      85: putfield      #9                  // Field lineLength:I
      88: aload_0
      89: getfield      #4                  // Field breakLines:Z
      92: ifeq          118
      95: aload_0
      96: getfield      #9                  // Field lineLength:I
      99: bipush        76
     101: if_icmplt     118
     104: aload_0
     105: getfield      #19                 // Field out:Ljava/io/OutputStream;
     108: bipush        10
     110: invokevirtual #18                 // Method java/io/OutputStream.write:(I)V
     113: aload_0
     114: iconst_0
     115: putfield      #9                  // Field lineLength:I
     118: aload_0
     119: iconst_0
     120: putfield      #8                  // Field position:I
     123: goto          232
     126: aload_0
     127: getfield      #16                 // Field decodabet:[B
     130: iload_1
     131: bipush        127
     133: iand
     134: baload
     135: bipush        -5
     137: if_icmple     208
     140: aload_0
     141: getfield      #7                  // Field buffer:[B
     144: aload_0
     145: dup
     146: getfield      #8                  // Field position:I
     149: dup_x1
     150: iconst_1
     151: iadd
     152: putfield      #8                  // Field position:I
     155: iload_1
     156: i2b
     157: bastore
     158: aload_0
     159: getfield      #8                  // Field position:I
     162: aload_0
     163: getfield      #6                  // Field bufferLength:I
     166: if_icmplt     232
     169: aload_0
     170: getfield      #7                  // Field buffer:[B
     173: iconst_0
     174: aload_0
     175: getfield      #11                 // Field b4:[B
     178: iconst_0
     179: aload_0
     180: getfield      #12                 // Field options:I
     183: invokestatic  #22                 // Method org/apache/activemq/artemis/utils/Base64.access$300:([BI[BII)I
     186: istore_2
     187: aload_0
     188: getfield      #19                 // Field out:Ljava/io/OutputStream;
     191: aload_0
     192: getfield      #11                 // Field b4:[B
     195: iconst_0
     196: iload_2
     197: invokevirtual #23                 // Method java/io/OutputStream.write:([BII)V
     200: aload_0
     201: iconst_0
     202: putfield      #8                  // Field position:I
     205: goto          232
     208: aload_0
     209: getfield      #16                 // Field decodabet:[B
     212: iload_1
     213: bipush        127
     215: iand
     216: baload
     217: bipush        -5
     219: if_icmpeq     232
     222: new           #24                 // class java/io/IOException
     225: dup
     226: ldc           #25                 // String Invalid character in Base64 data.
     228: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     231: athrow
     232: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field suspendEncoding:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #17                 // Field java/io/FilterOutputStream.out:Ljava/io/OutputStream;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokevirtual #23                 // Method java/io/OutputStream.write:([BII)V
      17: return
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     43
      27: aload_0
      28: aload_1
      29: iload_2
      30: iload         4
      32: iadd
      33: baload
      34: invokevirtual #27                 // Method write:(I)V
      37: iinc          4, 1
      40: goto          21
      43: return

  public void flushBase64() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field position:I
       4: ifle          58
       7: aload_0
       8: getfield      #5                  // Field encode:Z
      11: ifeq          48
      14: aload_0
      15: getfield      #19                 // Field out:Ljava/io/OutputStream;
      18: aload_0
      19: getfield      #11                 // Field b4:[B
      22: aload_0
      23: getfield      #7                  // Field buffer:[B
      26: aload_0
      27: getfield      #8                  // Field position:I
      30: aload_0
      31: getfield      #12                 // Field options:I
      34: invokestatic  #20                 // Method org/apache/activemq/artemis/utils/Base64.access$400:([B[BII)[B
      37: invokevirtual #21                 // Method java/io/OutputStream.write:([B)V
      40: aload_0
      41: iconst_0
      42: putfield      #8                  // Field position:I
      45: goto          58
      48: new           #24                 // class java/io/IOException
      51: dup
      52: ldc           #28                 // String Base64 input not properly padded.
      54: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method flushBase64:()V
       4: aload_0
       5: invokespecial #30                 // Method java/io/FilterOutputStream.close:()V
       8: aload_0
       9: aconst_null
      10: putfield      #7                  // Field buffer:[B
      13: aload_0
      14: aconst_null
      15: putfield      #19                 // Field out:Ljava/io/OutputStream;
      18: return

  public void suspendEncoding() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method flushBase64:()V
       4: aload_0
       5: iconst_1
       6: putfield      #10                 // Field suspendEncoding:Z
       9: return

  public void resumeEncoding();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #10                 // Field suspendEncoding:Z
       5: return
}
