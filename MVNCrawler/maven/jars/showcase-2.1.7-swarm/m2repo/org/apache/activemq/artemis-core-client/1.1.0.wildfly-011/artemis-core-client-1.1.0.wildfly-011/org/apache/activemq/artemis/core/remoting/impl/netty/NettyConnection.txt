Compiled from "NettyConnection.java"
public class org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnection implements org.apache.activemq.artemis.spi.core.remoting.Connection {
  private static final int BATCHING_BUFFER_SIZE;

  protected final io.netty.channel.Channel channel;

  private boolean closed;

  private final org.apache.activemq.artemis.spi.core.remoting.ConnectionLifeCycleListener listener;

  private final boolean batchingEnabled;

  private final boolean directDeliver;

  private volatile org.apache.activemq.artemis.api.core.ActiveMQBuffer batchBuffer;

  private final java.util.Map<java.lang.String, java.lang.Object> configuration;

  private final java.util.concurrent.Semaphore writeLock;

  private org.apache.activemq.artemis.spi.core.protocol.RemotingConnection protocolConnection;

  private boolean ready;

  private final java.util.concurrent.ConcurrentLinkedDeque<org.apache.activemq.artemis.spi.core.remoting.ReadyListener> readyListeners;

  public org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnection(java.util.Map<java.lang.String, java.lang.Object>, io.netty.channel.Channel, org.apache.activemq.artemis.spi.core.remoting.ConnectionLifeCycleListener, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/Semaphore
       8: dup
       9: iconst_1
      10: invokespecial #4                  // Method java/util/concurrent/Semaphore."<init>":(I)V
      13: putfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field ready:Z
      21: aload_0
      22: new           #7                  // class java/util/concurrent/ConcurrentLinkedDeque
      25: dup
      26: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      29: putfield      #9                  // Field readyListeners:Ljava/util/concurrent/ConcurrentLinkedDeque;
      32: aload_0
      33: aload_1
      34: putfield      #10                 // Field configuration:Ljava/util/Map;
      37: aload_0
      38: aload_2
      39: putfield      #11                 // Field channel:Lio/netty/channel/Channel;
      42: aload_0
      43: aload_3
      44: putfield      #12                 // Field listener:Lorg/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener;
      47: aload_0
      48: iload         4
      50: putfield      #13                 // Field batchingEnabled:Z
      53: aload_0
      54: iload         5
      56: putfield      #14                 // Field directDeliver:Z
      59: return

  public io.netty.channel.Channel getNettyChannel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
       4: areturn

  public boolean isWritable(org.apache.activemq.artemis.spi.core.remoting.ReadyListener);
    Code:
       0: aload_0
       1: getfield      #9                  // Field readyListeners:Ljava/util/concurrent/ConcurrentLinkedDeque;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field ready:Z
      11: ifne          22
      14: aload_0
      15: getfield      #9                  // Field readyListeners:Ljava/util/concurrent/ConcurrentLinkedDeque;
      18: aload_1
      19: invokevirtual #15                 // Method java/util/concurrent/ConcurrentLinkedDeque.push:(Ljava/lang/Object;)V
      22: aload_0
      23: getfield      #6                  // Field ready:Z
      26: aload_2
      27: monitorexit
      28: ireturn
      29: astore_3
      30: aload_2
      31: monitorexit
      32: aload_3
      33: athrow
    Exception table:
       from    to  target type
           7    28    29   any
          29    32    29   any

  public void fireReady(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field readyListeners:Ljava/util/concurrent/ConcurrentLinkedDeque;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: iload_1
       9: putfield      #6                  // Field ready:Z
      12: iload_1
      13: ifeq          63
      16: aload_0
      17: getfield      #9                  // Field readyListeners:Ljava/util/concurrent/ConcurrentLinkedDeque;
      20: invokevirtual #16                 // Method java/util/concurrent/ConcurrentLinkedDeque.poll:()Ljava/lang/Object;
      23: checkcast     #17                 // class org/apache/activemq/artemis/spi/core/remoting/ReadyListener
      26: astore_3
      27: aload_3
      28: ifnonnull     34
      31: aload_2
      32: monitorexit
      33: return
      34: aload_3
      35: invokeinterface #18,  1           // InterfaceMethod org/apache/activemq/artemis/spi/core/remoting/ReadyListener.readyForWriting:()V
      40: goto          60
      43: astore        4
      45: getstatic     #20                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      48: aload         4
      50: invokevirtual #21                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      53: aload         4
      55: invokeinterface #22,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      60: goto          16
      63: aload_2
      64: monitorexit
      65: goto          75
      68: astore        5
      70: aload_2
      71: monitorexit
      72: aload         5
      74: athrow
      75: return
    Exception table:
       from    to  target type
          34    40    43   Class java/lang/Throwable
           7    33    68   any
          34    65    68   any
          68    72    68   any

  public void forceClose();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
       4: ifnull        34
       7: aload_0
       8: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
      11: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      16: pop
      17: goto          34
      20: astore_1
      21: getstatic     #20                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      24: aload_1
      25: invokevirtual #21                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      28: aload_1
      29: invokeinterface #22,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      34: return
    Exception table:
       from    to  target type
           7    17    20   Class java/lang/Throwable

  public io.netty.channel.Channel getChannel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
       4: areturn

  public org.apache.activemq.artemis.spi.core.protocol.RemotingConnection getProtocolConnection();
    Code:
       0: aload_0
       1: getfield      #24                 // Field protocolConnection:Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;
       4: areturn

  public void setProtocolConnection(org.apache.activemq.artemis.spi.core.protocol.RemotingConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field protocolConnection:Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;
       5: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #25                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
      12: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      17: ldc           #27                 // String ssl
      19: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      24: checkcast     #29                 // class io/netty/handler/ssl/SslHandler
      27: astore_1
      28: aload_0
      29: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
      32: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      37: astore_2
      38: aload_2
      39: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: istore_3
      45: iload_3
      46: ifne          61
      49: aload_0
      50: aload_1
      51: aload_0
      52: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
      55: invokespecial #1                  // Method closeSSLAndChannel:(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/Channel;)V
      58: goto          76
      61: aload_2
      62: new           #32                 // class org/apache/activemq/artemis/core/remoting/impl/netty/NettyConnection$1
      65: dup
      66: aload_0
      67: aload_1
      68: invokespecial #33                 // Method org/apache/activemq/artemis/core/remoting/impl/netty/NettyConnection$1."<init>":(Lorg/apache/activemq/artemis/core/remoting/impl/netty/NettyConnection;Lio/netty/handler/ssl/SslHandler;)V
      71: invokeinterface #34,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      76: aload_0
      77: iconst_1
      78: putfield      #25                 // Field closed:Z
      81: aload_0
      82: getfield      #12                 // Field listener:Lorg/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener;
      85: aload_0
      86: invokevirtual #35                 // Method getID:()Ljava/lang/Object;
      89: invokeinterface #36,  2           // InterfaceMethod org/apache/activemq/artemis/spi/core/remoting/ConnectionLifeCycleListener.connectionDestroyed:(Ljava/lang/Object;)V
      94: return

  public org.apache.activemq.artemis.api.core.ActiveMQBuffer createTransportBuffer(int);
    Code:
       0: new           #37                 // class org/apache/activemq/artemis/core/buffers/impl/ChannelBufferWrapper
       3: dup
       4: getstatic     #38                 // Field org/apache/activemq/artemis/core/remoting/impl/netty/PartialPooledByteBufAllocator.INSTANCE:Lorg/apache/activemq/artemis/core/remoting/impl/netty/PartialPooledByteBufAllocator;
       7: iload_1
       8: invokevirtual #39                 // Method org/apache/activemq/artemis/core/remoting/impl/netty/PartialPooledByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      11: iconst_1
      12: invokespecial #40                 // Method org/apache/activemq/artemis/core/buffers/impl/ChannelBufferWrapper."<init>":(Lio/netty/buffer/ByteBuf;Z)V
      15: areturn

  public java.lang.Object getID();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
       4: invokevirtual #41                 // Method java/lang/Object.hashCode:()I
       7: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: areturn

  public void checkFlushBatchBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field batchingEnabled:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      12: invokevirtual #43                 // Method java/util/concurrent/Semaphore.tryAcquire:()Z
      15: ifeq          87
      18: aload_0
      19: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      22: ifnull        67
      25: aload_0
      26: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      29: invokeinterface #45,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readable:()Z
      34: ifeq          67
      37: aload_0
      38: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
      41: aload_0
      42: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      45: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.byteBuf:()Lio/netty/buffer/ByteBuf;
      50: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      55: pop
      56: aload_0
      57: aload_0
      58: sipush        8192
      61: invokevirtual #49                 // Method createTransportBuffer:(I)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      64: putfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      67: aload_0
      68: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      71: invokevirtual #50                 // Method java/util/concurrent/Semaphore.release:()V
      74: goto          87
      77: astore_1
      78: aload_0
      79: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      82: invokevirtual #50                 // Method java/util/concurrent/Semaphore.release:()V
      85: aload_1
      86: athrow
      87: return
    Exception table:
       from    to  target type
          18    67    77   any

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokevirtual #51                 // Method write:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;ZZ)V
       7: return

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #52                 // Method write:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;ZZLio/netty/channel/ChannelFutureListener;)V
       8: return

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer, boolean, boolean, io.netty.channel.ChannelFutureListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #53                 // Method java/util/concurrent/Semaphore.acquire:()V
       7: aload_0
       8: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      11: ifnonnull     39
      14: aload_0
      15: getfield      #13                 // Field batchingEnabled:Z
      18: ifeq          39
      21: iload_3
      22: ifeq          39
      25: iload_2
      26: ifne          39
      29: aload_0
      30: sipush        8192
      33: invokestatic  #54                 // Method org/apache/activemq/artemis/api/core/ActiveMQBuffers.dynamicBuffer:(I)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      36: putfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      39: aload_0
      40: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      43: ifnull        128
      46: aload_0
      47: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      50: aload_1
      51: iconst_0
      52: aload_1
      53: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writerIndex:()I
      58: invokeinterface #56,  4           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBytes:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;II)V
      63: aload_0
      64: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      67: invokeinterface #55,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writerIndex:()I
      72: sipush        8192
      75: if_icmpge     86
      78: iload_3
      79: ifeq          86
      82: iload_2
      83: ifeq          94
      86: aload_0
      87: getfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      90: astore_1
      91: goto          102
      94: aload_0
      95: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
      98: invokevirtual #50                 // Method java/util/concurrent/Semaphore.release:()V
     101: return
     102: iload_3
     103: ifeq          110
     106: iload_2
     107: ifeq          118
     110: aload_0
     111: aconst_null
     112: putfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
     115: goto          128
     118: aload_0
     119: sipush        8192
     122: invokestatic  #54                 // Method org/apache/activemq/artemis/api/core/ActiveMQBuffers.dynamicBuffer:(I)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
     125: putfield      #44                 // Field batchBuffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
     128: aload_1
     129: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.byteBuf:()Lio/netty/buffer/ByteBuf;
     134: astore        5
     136: iload_2
     137: ifne          145
     140: aload         4
     142: ifnull        159
     145: aload_0
     146: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
     149: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
     154: astore        6
     156: goto          170
     159: aload_0
     160: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
     163: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
     168: astore        6
     170: aload_0
     171: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
     174: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
     179: astore        7
     181: aload         7
     183: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     188: istore        8
     190: iload         8
     192: ifne          241
     195: aload         4
     197: ifnull        224
     200: aload_0
     201: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
     204: aload         5
     206: aload         6
     208: invokeinterface #59,  3           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     213: aload         4
     215: invokeinterface #60,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     220: pop
     221: goto          266
     224: aload_0
     225: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
     228: aload         5
     230: aload         6
     232: invokeinterface #59,  3           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     237: pop
     238: goto          266
     241: new           #61                 // class org/apache/activemq/artemis/core/remoting/impl/netty/NettyConnection$2
     244: dup
     245: aload_0
     246: aload         4
     248: aload         5
     250: aload         6
     252: invokespecial #62                 // Method org/apache/activemq/artemis/core/remoting/impl/netty/NettyConnection$2."<init>":(Lorg/apache/activemq/artemis/core/remoting/impl/netty/NettyConnection;Lio/netty/channel/ChannelFutureListener;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)V
     255: astore        9
     257: aload         7
     259: aload         9
     261: invokeinterface #34,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     266: iload_2
     267: ifeq          315
     270: iload         8
     272: ifne          315
     275: aload         6
     277: ldc2_w        #63                 // long 10000l
     280: invokeinterface #65,  3           // InterfaceMethod io/netty/channel/ChannelPromise.await:(J)Z
     285: istore        9
     287: iload         9
     289: ifne          300
     292: getstatic     #20                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
     295: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.timeoutFlushingPacket:()V
     300: goto          315
     303: astore        9
     305: new           #68                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     308: dup
     309: aload         9
     311: invokespecial #69                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     314: athrow
     315: aload_0
     316: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
     319: invokevirtual #50                 // Method java/util/concurrent/Semaphore.release:()V
     322: goto          337
     325: astore        10
     327: aload_0
     328: getfield      #5                  // Field writeLock:Ljava/util/concurrent/Semaphore;
     331: invokevirtual #50                 // Method java/util/concurrent/Semaphore.release:()V
     334: aload         10
     336: athrow
     337: goto          352
     340: astore        5
     342: new           #68                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
     345: dup
     346: aload         5
     348: invokespecial #69                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
     351: athrow
     352: return
    Exception table:
       from    to  target type
         275   300   303   Class java/lang/InterruptedException
           7    94   325   any
         102   315   325   any
         325   327   325   any
           0   101   340   Class java/lang/InterruptedException
         102   337   340   Class java/lang/InterruptedException

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: invokevirtual #71                 // Method java/lang/Object.toString:()Ljava/lang/String;
      20: areturn

  public java.lang.String getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #72,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: new           #73                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #75                 // String tcp://
      25: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #71                 // Method java/lang/Object.toString:()Ljava/lang/String;
      32: invokestatic  #77                 // Method org/apache/activemq/artemis/utils/IPV6Util.encloseHost:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public boolean isDirectDeliver();
    Code:
       0: aload_0
       1: getfield      #14                 // Field directDeliver:Z
       4: ireturn

  public org.apache.activemq.artemis.core.security.ActiveMQPrincipal getDefaultActiveMQPrincipal();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.artemis.api.core.TransportConfiguration getConnectorConfig();
    Code:
       0: aload_0
       1: getfield      #10                 // Field configuration:Ljava/util/Map;
       4: ifnull        24
       7: new           #79                 // class org/apache/activemq/artemis/api/core/TransportConfiguration
      10: dup
      11: ldc           #80                 // class org/apache/activemq/artemis/core/remoting/impl/netty/NettyConnectorFactory
      13: invokevirtual #81                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: aload_0
      17: getfield      #10                 // Field configuration:Ljava/util/Map;
      20: invokespecial #82                 // Method org/apache/activemq/artemis/api/core/TransportConfiguration."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      23: areturn
      24: aconst_null
      25: areturn

  public boolean isUsingProtocolHandling();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #73                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #71                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #83                 // String [local=
      16: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
      23: invokeinterface #72,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
      28: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #85                 // String , remote=
      33: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #11                 // Field channel:Lio/netty/channel/Channel;
      40: invokeinterface #70,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      45: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #86                 // String ]
      50: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  private void closeSSLAndChannel(io.netty.handler.ssl.SslHandler, io.netty.channel.Channel);
    Code:
       0: aload_1
       1: ifnull        33
       4: aload_1
       5: invokevirtual #87                 // Method io/netty/handler/ssl/SslHandler.close:()Lio/netty/channel/ChannelFuture;
       8: astore_3
       9: aload_3
      10: ldc2_w        #63                 // long 10000l
      13: invokeinterface #88,  3           // InterfaceMethod io/netty/channel/ChannelFuture.awaitUninterruptibly:(J)Z
      18: ifne          29
      21: getstatic     #20                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      24: invokeinterface #89,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.timeoutClosingSSL:()V
      29: goto          33
      32: astore_3
      33: aload_2
      34: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      39: astore_3
      40: aload_3
      41: ldc2_w        #63                 // long 10000l
      44: invokeinterface #88,  3           // InterfaceMethod io/netty/channel/ChannelFuture.awaitUninterruptibly:(J)Z
      49: ifne          60
      52: getstatic     #20                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      55: invokeinterface #90,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.timeoutClosingNettyChannel:()V
      60: return
    Exception table:
       from    to  target type
           4    29    32   Class java/lang/Throwable

  static void access$000(org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnection, io.netty.handler.ssl.SslHandler, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method closeSSLAndChannel:(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/Channel;)V
       6: return
}
