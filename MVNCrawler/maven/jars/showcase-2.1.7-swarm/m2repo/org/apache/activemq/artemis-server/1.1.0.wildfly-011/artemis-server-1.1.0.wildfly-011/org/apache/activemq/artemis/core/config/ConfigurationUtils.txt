Compiled from "ConfigurationUtils.java"
public final class org.apache.activemq.artemis.core.config.ConfigurationUtils {
  private org.apache.activemq.artemis.core.config.ConfigurationUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration getReplicationClusterConfiguration(org.apache.activemq.artemis.core.config.Configuration, java.lang.String) throws org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException;
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #2                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          27
      11: aload_0
      12: invokeinterface #3,  1            // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterConfigurations:()Ljava/util/List;
      17: iconst_0
      18: invokeinterface #4,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #5                  // class org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration
      26: areturn
      27: aload_0
      28: invokeinterface #3,  1            // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterConfigurations:()Ljava/util/List;
      33: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore_2
      39: aload_2
      40: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          74
      48: aload_2
      49: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #5                  // class org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration
      57: astore_3
      58: aload_1
      59: aload_3
      60: invokevirtual #9                  // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getName:()Ljava/lang/String;
      63: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          71
      69: aload_3
      70: areturn
      71: goto          39
      74: new           #11                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
      77: dup
      78: new           #12                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #14                 // String Missing cluster-configuration for replication-clustername \'
      87: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #16                 // String \'.
      96: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokespecial #18                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
     105: athrow

  public static org.apache.activemq.artemis.core.server.cluster.ha.HAPolicy getHAPolicy(org.apache.activemq.artemis.core.config.HAPolicyConfiguration) throws org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException;
    Code:
       0: aload_0
       1: ifnonnull     12
       4: new           #19                 // class org/apache/activemq/artemis/core/server/cluster/ha/LiveOnlyPolicy
       7: dup
       8: invokespecial #20                 // Method org/apache/activemq/artemis/core/server/cluster/ha/LiveOnlyPolicy."<init>":()V
      11: areturn
      12: getstatic     #21                 // Field org/apache/activemq/artemis/core/config/ConfigurationUtils$1.$SwitchMap$org$apache$activemq$artemis$core$config$HAPolicyConfiguration$TYPE:[I
      15: aload_0
      16: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/HAPolicyConfiguration.getType:()Lorg/apache/activemq/artemis/core/config/HAPolicyConfiguration$TYPE;
      21: invokevirtual #23                 // Method org/apache/activemq/artemis/core/config/HAPolicyConfiguration$TYPE.ordinal:()I
      24: iaload
      25: tableswitch   { // 1 to 6
                     1: 64
                     2: 84
                     3: 113
                     4: 157
                     5: 174
                     6: 206
               default: 378
          }
      64: aload_0
      65: checkcast     #24                 // class org/apache/activemq/artemis/core/config/ha/LiveOnlyPolicyConfiguration
      68: astore_1
      69: new           #19                 // class org/apache/activemq/artemis/core/server/cluster/ha/LiveOnlyPolicy
      72: dup
      73: aload_1
      74: invokevirtual #25                 // Method org/apache/activemq/artemis/core/config/ha/LiveOnlyPolicyConfiguration.getScaleDownConfiguration:()Lorg/apache/activemq/artemis/core/config/ScaleDownConfiguration;
      77: invokestatic  #26                 // Method getScaleDownPolicy:(Lorg/apache/activemq/artemis/core/config/ScaleDownConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      80: invokespecial #27                 // Method org/apache/activemq/artemis/core/server/cluster/ha/LiveOnlyPolicy."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;)V
      83: areturn
      84: aload_0
      85: checkcast     #28                 // class org/apache/activemq/artemis/core/config/ha/ReplicatedPolicyConfiguration
      88: astore_1
      89: new           #29                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy
      92: dup
      93: aload_1
      94: invokevirtual #30                 // Method org/apache/activemq/artemis/core/config/ha/ReplicatedPolicyConfiguration.isCheckForLiveServer:()Z
      97: aload_1
      98: invokevirtual #31                 // Method org/apache/activemq/artemis/core/config/ha/ReplicatedPolicyConfiguration.getGroupName:()Ljava/lang/String;
     101: aload_1
     102: invokevirtual #32                 // Method org/apache/activemq/artemis/core/config/ha/ReplicatedPolicyConfiguration.getClusterName:()Ljava/lang/String;
     105: aload_1
     106: invokevirtual #33                 // Method org/apache/activemq/artemis/core/config/ha/ReplicatedPolicyConfiguration.getInitialReplicationSyncTimeout:()J
     109: invokespecial #34                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy."<init>":(ZLjava/lang/String;Ljava/lang/String;J)V
     112: areturn
     113: aload_0
     114: checkcast     #35                 // class org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration
     117: astore_1
     118: new           #36                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy
     121: dup
     122: aload_1
     123: invokevirtual #37                 // Method org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration.getClusterName:()Ljava/lang/String;
     126: aload_1
     127: invokevirtual #38                 // Method org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration.getMaxSavedReplicatedJournalsSize:()I
     130: aload_1
     131: invokevirtual #39                 // Method org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration.getGroupName:()Ljava/lang/String;
     134: aload_1
     135: invokevirtual #40                 // Method org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration.isRestartBackup:()Z
     138: aload_1
     139: invokevirtual #41                 // Method org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration.isAllowFailBack:()Z
     142: aload_1
     143: invokevirtual #42                 // Method org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration.getInitialReplicationSyncTimeout:()J
     146: aload_1
     147: invokevirtual #43                 // Method org/apache/activemq/artemis/core/config/ha/ReplicaPolicyConfiguration.getScaleDownConfiguration:()Lorg/apache/activemq/artemis/core/config/ScaleDownConfiguration;
     150: invokestatic  #26                 // Method getScaleDownPolicy:(Lorg/apache/activemq/artemis/core/config/ScaleDownConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
     153: invokespecial #44                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy."<init>":(Ljava/lang/String;ILjava/lang/String;ZZJLorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;)V
     156: areturn
     157: aload_0
     158: checkcast     #45                 // class org/apache/activemq/artemis/core/config/ha/SharedStoreMasterPolicyConfiguration
     161: astore_1
     162: new           #46                 // class org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy
     165: dup
     166: aload_1
     167: invokevirtual #47                 // Method org/apache/activemq/artemis/core/config/ha/SharedStoreMasterPolicyConfiguration.isFailoverOnServerShutdown:()Z
     170: invokespecial #48                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy."<init>":(Z)V
     173: areturn
     174: aload_0
     175: checkcast     #49                 // class org/apache/activemq/artemis/core/config/ha/SharedStoreSlavePolicyConfiguration
     178: astore_1
     179: new           #50                 // class org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy
     182: dup
     183: aload_1
     184: invokevirtual #51                 // Method org/apache/activemq/artemis/core/config/ha/SharedStoreSlavePolicyConfiguration.isFailoverOnServerShutdown:()Z
     187: aload_1
     188: invokevirtual #52                 // Method org/apache/activemq/artemis/core/config/ha/SharedStoreSlavePolicyConfiguration.isRestartBackup:()Z
     191: aload_1
     192: invokevirtual #53                 // Method org/apache/activemq/artemis/core/config/ha/SharedStoreSlavePolicyConfiguration.isAllowFailBack:()Z
     195: aload_1
     196: invokevirtual #54                 // Method org/apache/activemq/artemis/core/config/ha/SharedStoreSlavePolicyConfiguration.getScaleDownConfiguration:()Lorg/apache/activemq/artemis/core/config/ScaleDownConfiguration;
     199: invokestatic  #26                 // Method getScaleDownPolicy:(Lorg/apache/activemq/artemis/core/config/ScaleDownConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
     202: invokespecial #55                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy."<init>":(ZZZLorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;)V
     205: areturn
     206: aload_0
     207: checkcast     #56                 // class org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration
     210: astore_1
     211: aload_1
     212: invokevirtual #57                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.getLiveConfig:()Lorg/apache/activemq/artemis/core/config/HAPolicyConfiguration;
     215: astore_2
     216: aload_2
     217: ifnonnull     231
     220: new           #29                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy
     223: dup
     224: invokespecial #58                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy."<init>":()V
     227: astore_3
     228: goto          236
     231: aload_2
     232: invokestatic  #59                 // Method getHAPolicy:(Lorg/apache/activemq/artemis/core/config/HAPolicyConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
     235: astore_3
     236: aload_1
     237: invokevirtual #60                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.getBackupConfig:()Lorg/apache/activemq/artemis/core/config/HAPolicyConfiguration;
     240: astore        4
     242: aload         4
     244: ifnonnull     294
     247: aload_3
     248: instanceof    #29                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy
     251: ifeq          266
     254: new           #36                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy
     257: dup
     258: invokespecial #61                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy."<init>":()V
     261: astore        5
     263: goto          304
     266: aload_3
     267: instanceof    #46                 // class org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy
     270: ifeq          285
     273: new           #50                 // class org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy
     276: dup
     277: invokespecial #62                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy."<init>":()V
     280: astore        5
     282: goto          304
     285: getstatic     #63                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
     288: invokeinterface #64,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.liveBackupMismatch:()Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
     293: athrow
     294: aload         4
     296: invokestatic  #59                 // Method getHAPolicy:(Lorg/apache/activemq/artemis/core/config/HAPolicyConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
     299: checkcast     #65                 // class org/apache/activemq/artemis/core/server/cluster/ha/BackupPolicy
     302: astore        5
     304: aload_3
     305: instanceof    #29                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy
     308: ifeq          319
     311: aload         5
     313: instanceof    #36                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy
     316: ifeq          334
     319: aload_3
     320: instanceof    #46                 // class org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy
     323: ifeq          343
     326: aload         5
     328: instanceof    #50                 // class org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy
     331: ifne          343
     334: getstatic     #63                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
     337: invokeinterface #64,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.liveBackupMismatch:()Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
     342: athrow
     343: new           #66                 // class org/apache/activemq/artemis/core/server/cluster/ha/ColocatedPolicy
     346: dup
     347: aload_1
     348: invokevirtual #67                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.isRequestBackup:()Z
     351: aload_1
     352: invokevirtual #68                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.getBackupRequestRetries:()I
     355: aload_1
     356: invokevirtual #69                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.getBackupRequestRetryInterval:()J
     359: aload_1
     360: invokevirtual #70                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.getMaxBackups:()I
     363: aload_1
     364: invokevirtual #71                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.getBackupPortOffset:()I
     367: aload_1
     368: invokevirtual #72                 // Method org/apache/activemq/artemis/core/config/ha/ColocatedPolicyConfiguration.getExcludedConnectors:()Ljava/util/List;
     371: aload_3
     372: aload         5
     374: invokespecial #73                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ColocatedPolicy."<init>":(ZIJIILjava/util/List;Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;Lorg/apache/activemq/artemis/core/server/cluster/ha/BackupPolicy;)V
     377: areturn
     378: getstatic     #63                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
     381: aload_0
     382: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.unsupportedHAPolicyConfiguration:(Ljava/lang/Object;)Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
     387: athrow

  public static org.apache.activemq.artemis.core.server.cluster.ha.ScaleDownPolicy getScaleDownPolicy(org.apache.activemq.artemis.core.config.ScaleDownConfiguration);
    Code:
       0: aload_0
       1: ifnull        59
       4: aload_0
       5: invokevirtual #75                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.getDiscoveryGroup:()Ljava/lang/String;
       8: ifnull        35
      11: new           #76                 // class org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy
      14: dup
      15: aload_0
      16: invokevirtual #75                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.getDiscoveryGroup:()Ljava/lang/String;
      19: aload_0
      20: invokevirtual #77                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.getGroupName:()Ljava/lang/String;
      23: aload_0
      24: invokevirtual #78                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.getClusterName:()Ljava/lang/String;
      27: aload_0
      28: invokevirtual #79                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.isEnabled:()Z
      31: invokespecial #80                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      34: areturn
      35: new           #76                 // class org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy
      38: dup
      39: aload_0
      40: invokevirtual #81                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.getConnectors:()Ljava/util/List;
      43: aload_0
      44: invokevirtual #77                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.getGroupName:()Ljava/lang/String;
      47: aload_0
      48: invokevirtual #78                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.getClusterName:()Ljava/lang/String;
      51: aload_0
      52: invokevirtual #79                 // Method org/apache/activemq/artemis/core/config/ScaleDownConfiguration.isEnabled:()Z
      55: invokespecial #82                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy."<init>":(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Z)V
      58: areturn
      59: aconst_null
      60: areturn

  public static void validateConfiguration(org.apache.activemq.artemis.core.config.Configuration);
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method compareTTLWithCheckPeriod:(Lorg/apache/activemq/artemis/core/config/Configuration;)V
       4: return

  private static void compareTTLWithCheckPeriod(org.apache.activemq.artemis.core.config.Configuration);
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterConfigurations:()Ljava/util/List;
       6: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_1
      12: aload_1
      13: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          55
      21: aload_1
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #5                  // class org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration
      30: astore_2
      31: aload_2
      32: invokevirtual #9                  // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getName:()Ljava/lang/String;
      35: aload_2
      36: invokevirtual #84                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConnectionTTL:()J
      39: aload_0
      40: invokeinterface #85,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectionTTLOverride:()J
      45: aload_2
      46: invokevirtual #86                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClientFailureCheckPeriod:()J
      49: invokestatic  #87                 // Method compareTTLWithCheckPeriod:(Ljava/lang/String;JJJ)V
      52: goto          12
      55: aload_0
      56: invokeinterface #88,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getBridgeConfigurations:()Ljava/util/List;
      61: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      66: astore_1
      67: aload_1
      68: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          110
      76: aload_1
      77: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #89                 // class org/apache/activemq/artemis/core/config/BridgeConfiguration
      85: astore_2
      86: aload_2
      87: invokevirtual #90                 // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getName:()Ljava/lang/String;
      90: aload_2
      91: invokevirtual #91                 // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getConnectionTTL:()J
      94: aload_0
      95: invokeinterface #85,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectionTTLOverride:()J
     100: aload_2
     101: invokevirtual #92                 // Method org/apache/activemq/artemis/core/config/BridgeConfiguration.getClientFailureCheckPeriod:()J
     104: invokestatic  #87                 // Method compareTTLWithCheckPeriod:(Ljava/lang/String;JJJ)V
     107: goto          67
     110: return

  private static void compareTTLWithCheckPeriod(java.lang.String, long, long, long);
    Code:
       0: lload_3
       1: lload         5
       3: lcmp
       4: ifne          20
       7: getstatic     #93                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      10: aload_0
      11: ldc           #94                 // String connection-ttl-override
      13: ldc           #95                 // String check-period
      15: invokeinterface #96,  4           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.connectionTTLEqualsCheckPeriod:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      20: lload_1
      21: lload         5
      23: lcmp
      24: ifne          40
      27: getstatic     #93                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      30: aload_0
      31: ldc           #97                 // String connection-ttl
      33: ldc           #95                 // String check-period
      35: invokeinterface #96,  4           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.connectionTTLEqualsCheckPeriod:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      40: return
}
