Compiled from "VersionLoader.java"
public final class org.apache.activemq.artemis.utils.VersionLoader {
  public static final java.lang.String VERSION_PROP_FILE_KEY;

  public static final java.lang.String DEFAULT_PROP_FILE_NAME;

  private static java.lang.String PROP_FILE_NAME;

  private static org.apache.activemq.artemis.core.version.Version[] versions;

  public org.apache.activemq.artemis.utils.VersionLoader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.activemq.artemis.core.version.Version[] getClientVersions();
    Code:
       0: getstatic     #2                  // Field versions:[Lorg/apache/activemq/artemis/core/version/Version;
       3: ifnonnull     35
       6: new           #3                  // class java/lang/RuntimeException
       9: dup
      10: new           #4                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      17: getstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #8                  // String  is not available
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #10                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: getstatic     #2                  // Field versions:[Lorg/apache/activemq/artemis/core/version/Version;
      38: areturn

  public static org.apache.activemq.artemis.core.version.Version getVersion();
    Code:
       0: getstatic     #2                  // Field versions:[Lorg/apache/activemq/artemis/core/version/Version;
       3: ifnonnull     35
       6: new           #3                  // class java/lang/RuntimeException
       9: dup
      10: new           #4                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      17: getstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #8                  // String  is not available
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #10                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: getstatic     #2                  // Field versions:[Lorg/apache/activemq/artemis/core/version/Version;
      38: iconst_0
      39: aaload
      40: areturn

  public static java.lang.String getClasspathString();
    Code:
       0: new           #11                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_0
       8: ldc           #13                 // class org/apache/activemq/artemis/core/version/impl/VersionImpl
      10: invokevirtual #14                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      13: astore_1
      14: aload_1
      15: checkcast     #15                 // class java/net/URLClassLoader
      18: invokevirtual #16                 // Method java/net/URLClassLoader.getURLs:()[Ljava/net/URL;
      21: astore_2
      22: aload_2
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     65
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: aload_0
      45: aload         6
      47: invokevirtual #17                 // Method java/net/URL.getFile:()Ljava/lang/String;
      50: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      53: ldc           #19                 // String \r\n
      55: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      58: pop
      59: iinc          5, 1
      62: goto          31
      65: aload_0
      66: invokevirtual #20                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      69: areturn

  private static org.apache.activemq.artemis.core.version.Version[] load();
    Code:
       0: new           #21                 // class java/util/Properties
       3: dup
       4: invokespecial #22                 // Method java/util/Properties."<init>":()V
       7: astore_0
       8: ldc           #13                 // class org/apache/activemq/artemis/core/version/impl/VersionImpl
      10: invokevirtual #14                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      13: getstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      16: invokevirtual #23                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      19: astore_1
      20: aload_1
      21: ifnonnull     64
      24: getstatic     #24                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      27: invokestatic  #25                 // Method getClasspathString:()Ljava/lang/String;
      30: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.noVersionOnClasspath:(Ljava/lang/String;)V
      35: new           #3                  // class java/lang/RuntimeException
      38: dup
      39: new           #4                  // class java/lang/StringBuilder
      42: dup
      43: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      46: getstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      49: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #8                  // String  is not available
      54: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #10                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: aload_1
      66: invokevirtual #27                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      69: aload_0
      70: ldc           #28                 // String activemq.version.versionName
      72: invokevirtual #29                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      75: astore_2
      76: aload_0
      77: ldc           #30                 // String activemq.version.majorVersion
      79: invokevirtual #29                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      82: invokestatic  #31                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      85: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
      88: istore_3
      89: aload_0
      90: ldc           #33                 // String activemq.version.minorVersion
      92: invokevirtual #29                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      95: invokestatic  #31                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      98: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
     101: istore        4
     103: aload_0
     104: ldc           #34                 // String activemq.version.microVersion
     106: invokevirtual #29                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     109: invokestatic  #31                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     112: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
     115: istore        5
     117: aload_0
     118: ldc           #35                 // String activemq.version.incrementingVersion
     120: invokevirtual #29                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     123: invokestatic  #36                 // Method parseCompatibleVersionList:(Ljava/lang/String;)[I
     126: astore        6
     128: aload_0
     129: ldc           #37                 // String activemq.version.compatibleVersionList
     131: invokevirtual #29                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     134: invokestatic  #36                 // Method parseCompatibleVersionList:(Ljava/lang/String;)[I
     137: astore        7
     139: new           #38                 // class java/util/ArrayList
     142: dup
     143: aload         6
     145: arraylength
     146: invokespecial #39                 // Method java/util/ArrayList."<init>":(I)V
     149: astore        8
     151: aload         6
     153: astore        9
     155: aload         9
     157: arraylength
     158: istore        10
     160: iconst_0
     161: istore        11
     163: iload         11
     165: iload         10
     167: if_icmpge     208
     170: aload         9
     172: iload         11
     174: iaload
     175: istore        12
     177: aload         8
     179: new           #13                 // class org/apache/activemq/artemis/core/version/impl/VersionImpl
     182: dup
     183: aload_2
     184: iload_3
     185: iload         4
     187: iload         5
     189: iload         12
     191: aload         7
     193: invokespecial #40                 // Method org/apache/activemq/artemis/core/version/impl/VersionImpl."<init>":(Ljava/lang/String;IIII[I)V
     196: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     201: pop
     202: iinc          11, 1
     205: goto          163
     208: aload         8
     210: new           #42                 // class org/apache/activemq/artemis/utils/VersionLoader$2
     213: dup
     214: invokespecial #43                 // Method org/apache/activemq/artemis/utils/VersionLoader$2."<init>":()V
     217: invokestatic  #44                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     220: aload         8
     222: aload         6
     224: arraylength
     225: anewarray     #45                 // class org/apache/activemq/artemis/core/version/Version
     228: invokeinterface #46,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     233: checkcast     #47                 // class "[Lorg/apache/activemq/artemis/core/version/Version;"
     236: astore        9
     238: aload_1
     239: ifnull        246
     242: aload_1
     243: invokevirtual #48                 // Method java/io/InputStream.close:()V
     246: goto          251
     249: astore        10
     251: aload         9
     253: areturn
     254: astore_2
     255: new           #3                  // class java/lang/RuntimeException
     258: dup
     259: new           #4                  // class java/lang/StringBuilder
     262: dup
     263: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     266: ldc           #51                 // String unable to load
     268: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: getstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
     274: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     280: aload_2
     281: invokespecial #52                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     284: athrow
     285: astore        13
     287: aload_1
     288: ifnull        295
     291: aload_1
     292: invokevirtual #48                 // Method java/io/InputStream.close:()V
     295: goto          300
     298: astore        14
     300: aload         13
     302: athrow
    Exception table:
       from    to  target type
         238   246   249   Class java/lang/Throwable
          64   238   254   Class java/io/IOException
          20   238   285   any
         287   295   298   Class java/lang/Throwable
         254   287   285   any

  private static int[] parseCompatibleVersionList(java.lang.String) throws java.io.IOException;
    Code:
       0: iconst_0
       1: newarray       int
       3: astore_1
       4: new           #53                 // class java/util/StringTokenizer
       7: dup
       8: aload_0
       9: ldc           #54                 // String ,
      11: invokespecial #55                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      14: astore_2
      15: aload_2
      16: invokevirtual #56                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      19: ifeq          288
      22: iconst_m1
      23: istore_3
      24: iconst_m1
      25: istore        4
      27: aload_2
      28: invokevirtual #57                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      31: astore        5
      33: iconst_0
      34: istore        6
      36: aload         5
      38: iconst_0
      39: invokevirtual #58                 // Method java/lang/String.charAt:(I)C
      42: istore        7
      44: iload         7
      46: bipush        45
      48: if_icmpne     107
      51: iconst_0
      52: istore_3
      53: iinc          6, 1
      56: iload         6
      58: aload         5
      60: invokevirtual #59                 // Method java/lang/String.length:()I
      63: if_icmpge     85
      66: aload         5
      68: iload         6
      70: invokevirtual #58                 // Method java/lang/String.charAt:(I)C
      73: invokestatic  #60                 // Method java/lang/Character.isDigit:(C)Z
      76: ifeq          85
      79: iinc          6, 1
      82: goto          56
      85: iload         6
      87: iconst_1
      88: if_icmple     216
      91: aload         5
      93: iconst_1
      94: iload         6
      96: invokevirtual #61                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      99: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     102: istore        4
     104: goto          216
     107: iload         7
     109: invokestatic  #60                 // Method java/lang/Character.isDigit:(C)Z
     112: ifeq          216
     115: iload         6
     117: aload         5
     119: invokevirtual #59                 // Method java/lang/String.length:()I
     122: if_icmpge     144
     125: aload         5
     127: iload         6
     129: invokevirtual #58                 // Method java/lang/String.charAt:(I)C
     132: invokestatic  #60                 // Method java/lang/Character.isDigit:(C)Z
     135: ifeq          144
     138: iinc          6, 1
     141: goto          115
     144: aload         5
     146: iconst_0
     147: iload         6
     149: invokevirtual #61                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     152: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     155: istore_3
     156: iload         6
     158: aload         5
     160: invokevirtual #59                 // Method java/lang/String.length:()I
     163: if_icmpne     172
     166: iload_3
     167: istore        4
     169: goto          216
     172: aload         5
     174: iload         6
     176: invokevirtual #58                 // Method java/lang/String.charAt:(I)C
     179: bipush        45
     181: if_icmpne     216
     184: iinc          6, 1
     187: iload         6
     189: aload         5
     191: invokevirtual #59                 // Method java/lang/String.length:()I
     194: if_icmpne     204
     197: ldc           #64                 // int 2147483647
     199: istore        4
     201: goto          216
     204: aload         5
     206: iload         6
     208: invokevirtual #65                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     211: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     214: istore        4
     216: iload_3
     217: iconst_m1
     218: if_icmpeq     285
     221: iload         4
     223: iconst_m1
     224: if_icmpeq     285
     227: aload_1
     228: arraylength
     229: iload         4
     231: iadd
     232: iload_3
     233: isub
     234: iconst_1
     235: iadd
     236: newarray       int
     238: astore        8
     240: aload_1
     241: iconst_0
     242: aload         8
     244: iconst_0
     245: aload_1
     246: arraylength
     247: invokestatic  #66                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     250: iconst_0
     251: istore        9
     253: iload         9
     255: iload         4
     257: iload_3
     258: isub
     259: iconst_1
     260: iadd
     261: if_icmpge     282
     264: aload         8
     266: aload_1
     267: arraylength
     268: iload         9
     270: iadd
     271: iload_3
     272: iload         9
     274: iadd
     275: iastore
     276: iinc          9, 1
     279: goto          253
     282: aload         8
     284: astore_1
     285: goto          15
     288: aload_1
     289: areturn

  static {};
    Code:
       0: new           #67                 // class org/apache/activemq/artemis/utils/VersionLoader$1
       3: dup
       4: invokespecial #68                 // Method org/apache/activemq/artemis/utils/VersionLoader$1."<init>":()V
       7: invokestatic  #69                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      10: checkcast     #70                 // class java/lang/String
      13: putstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      16: goto          37
      19: astore_0
      20: getstatic     #24                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      23: aload_0
      24: invokevirtual #71                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      27: aload_0
      28: invokeinterface #72,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      33: aconst_null
      34: putstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      37: getstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      40: ifnonnull     48
      43: ldc           #74                 // String activemq-version.properties
      45: putstatic     #6                  // Field PROP_FILE_NAME:Ljava/lang/String;
      48: invokestatic  #75                 // Method load:()[Lorg/apache/activemq/artemis/core/version/Version;
      51: putstatic     #2                  // Field versions:[Lorg/apache/activemq/artemis/core/version/Version;
      54: goto          75
      57: astore_0
      58: aconst_null
      59: putstatic     #2                  // Field versions:[Lorg/apache/activemq/artemis/core/version/Version;
      62: getstatic     #24                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      65: aload_0
      66: invokevirtual #71                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      69: aload_0
      70: invokeinterface #76,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      75: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable
           0    54    57   Class java/lang/Throwable
}
