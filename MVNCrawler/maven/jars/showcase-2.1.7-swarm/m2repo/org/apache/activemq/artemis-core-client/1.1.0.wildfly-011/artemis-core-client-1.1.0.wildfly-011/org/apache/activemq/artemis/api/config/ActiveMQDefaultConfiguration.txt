Compiled from "ActiveMQDefaultConfiguration.java"
public final class org.apache.activemq.artemis.api.config.ActiveMQDefaultConfiguration {
  private static long DEFAULT_CLIENT_FAILURE_CHECK_PERIOD;

  private static long DEFAULT_FILE_DEPLOYER_SCAN_PERIOD;

  private static int DEFAULT_JOURNAL_MAX_IO_AIO;

  private static int DEFAULT_JOURNAL_POOL_FILES;

  private static int DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO;

  private static int DEFAULT_JOURNAL_BUFFER_SIZE_AIO;

  private static int DEFAULT_JOURNAL_MAX_IO_NIO;

  private static int DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO;

  private static int DEFAULT_JOURNAL_BUFFER_SIZE_NIO;

  private static java.lang.String PROP_MASK_PASSWORD;

  private static java.lang.String PROP_PASSWORD_CODEC;

  private static java.lang.String DEFAULT_HAPOLICY_TYPE;

  private static java.lang.String DEFAULT_HAPOLICY_BACKUP_STRATEGY;

  private static boolean DEFAULT_RESOLVE_PROTOCOLS;

  private static boolean DEFAULT_FILE_DEPLOYMENT_ENABLED;

  private static boolean DEFAULT_PERSISTENCE_ENABLED;

  private static int DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE;

  private static int DEFAULT_THREAD_POOL_MAX_SIZE;

  private static boolean DEFAULT_SECURITY_ENABLED;

  private static boolean DEFAULT_GRACEFUL_SHUTDOWN_ENABLED;

  private static long DEFAULT_GRACEFUL_SHUTDOWN_TIMEOUT;

  private static long DEFAULT_SECURITY_INVALIDATION_INTERVAL;

  private static long DEFAULT_JOURNAL_LOCK_ACQUISITION_TIMEOUT;

  private static boolean DEFAULT_WILDCARD_ROUTING_ENABLED;

  private static org.apache.activemq.artemis.api.core.SimpleString DEFAULT_MANAGEMENT_ADDRESS;

  private static org.apache.activemq.artemis.api.core.SimpleString DEFAULT_MANAGEMENT_NOTIFICATION_ADDRESS;

  private static java.lang.String DEFAULT_CLUSTER_USER;

  private static java.lang.String DEFAULT_CLUSTER_PASSWORD;

  private static boolean DEFAULT_MASK_PASSWORD;

  private static boolean DEFAULT_JMX_MANAGEMENT_ENABLED;

  private static java.lang.String DEFAULT_JMX_DOMAIN;

  private static boolean DEFAULT_MESSAGE_COUNTER_ENABLED;

  private static long DEFAULT_MESSAGE_COUNTER_SAMPLE_PERIOD;

  private static int DEFAULT_MESSAGE_COUNTER_MAX_DAY_HISTORY;

  private static long DEFAULT_CONNECTION_TTL_OVERRIDE;

  private static boolean DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED;

  private static long DEFAULT_TRANSACTION_TIMEOUT;

  private static long DEFAULT_TRANSACTION_TIMEOUT_SCAN_PERIOD;

  private static long DEFAULT_MESSAGE_EXPIRY_SCAN_PERIOD;

  private static int DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY;

  private static int DEFAULT_ID_CACHE_SIZE;

  private static boolean DEFAULT_PERSIST_ID_CACHE;

  private static boolean DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY;

  private static java.lang.String DEFAULT_PAGING_DIR;

  private static java.lang.String DEFAULT_BINDINGS_DIRECTORY;

  private static boolean DEFAULT_CREATE_BINDINGS_DIR;

  private static int DEFAULT_MAX_CONCURRENT_PAGE_IO;

  private static java.lang.String DEFAULT_JOURNAL_DIR;

  private static boolean DEFAULT_CREATE_JOURNAL_DIR;

  private static boolean DEFAULT_JOURNAL_SYNC_TRANSACTIONAL;

  private static boolean DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL;

  private static boolean DEFAULT_JOURNAL_LOG_WRITE_RATE;

  private static int DEFAULT_JOURNAL_FILE_SIZE;

  private static int DEFAULT_JOURNAL_MIN_FILES;

  private static int DEFAULT_JOURNAL_COMPACT_PERCENTAGE;

  private static int DEFAULT_JOURNAL_COMPACT_MIN_FILES;

  private static int DEFAULT_JOURNAL_PERF_BLAST_PAGES;

  private static boolean DEFAULT_RUN_SYNC_SPEED_TEST;

  private static long DEFAULT_SERVER_DUMP_INTERVAL;

  private static int DEFAULT_MEMORY_WARNING_THRESHOLD;

  private static long DEFAULT_MEMORY_MEASURE_INTERVAL;

  private static java.lang.String DEFAULT_LARGE_MESSAGES_DIR;

  private static long DEFAULT_BROADCAST_PERIOD;

  private static int DEFAULT_BROADCAST_REFRESH_TIMEOUT;

  private static long DEFAULT_CONNECTION_TTL;

  private static double DEFAULT_RETRY_INTERVAL_MULTIPLIER;

  private static long DEFAULT_MAX_RETRY_INTERVAL;

  private static int DEFAULT_BRIDGE_INITIAL_CONNECT_ATTEMPTS;

  private static int DEFAULT_BRIDGE_RECONNECT_ATTEMPTS;

  private static boolean DEFAULT_BRIDGE_DUPLICATE_DETECTION;

  private static int DEFAULT_BRIDGE_CONFIRMATION_WINDOW_SIZE;

  private static int DEFAULT_BRIDGE_CONNECT_SAME_NODE;

  private static long DEFAULT_CLUSTER_FAILURE_CHECK_PERIOD;

  private static long DEFAULT_CLUSTER_CONNECTION_TTL;

  private static long DEFAULT_CLUSTER_CALL_TIMEOUT;

  private static long DEFAULT_CLUSTER_RETRY_INTERVAL;

  private static double DEFAULT_CLUSTER_RETRY_INTERVAL_MULTIPLIER;

  private static long DEFAULT_CLUSTER_MAX_RETRY_INTERVAL;

  private static int DEFAULT_CLUSTER_INITIAL_CONNECT_ATTEMPTS;

  private static int DEFAULT_CLUSTER_RECONNECT_ATTEMPTS;

  private static boolean DEFAULT_CLUSTER_DUPLICATE_DETECTION;

  private static boolean DEFAULT_CLUSTER_FORWARD_WHEN_NO_CONSUMERS;

  private static java.lang.String DEFAULT_CLUSTER_MESSAGE_LOAD_BALANCING_TYPE;

  private static int DEFAULT_CLUSTER_MAX_HOPS;

  private static int DEFAULT_CLUSTER_CONFIRMATION_WINDOW_SIZE;

  private static long DEFAULT_CLUSTER_CALL_FAILOVER_TIMEOUT;

  private static long DEFAULT_CLUSTER_NOTIFICATION_INTERVAL;

  private static int DEFAULT_CLUSTER_NOTIFICATION_ATTEMPTS;

  private static boolean DEFAULT_DIVERT_EXCLUSIVE;

  private static boolean DEFAULT_HAPOLICY_REQUEST_BACKUP;

  private static int DEFAULT_HAPOLICY_BACKUP_REQUEST_RETRIES;

  private static long DEFAULT_HAPOLICY_BACKUP_REQUEST_RETRY_INTERVAL;

  private static int DEFAULT_HAPOLICY_MAX_BACKUPS;

  private static int DEFAULT_HAPOLICY_BACKUP_PORT_OFFSET;

  private static boolean DEFAULT_CHECK_FOR_LIVE_SERVER;

  private static int DEFAULT_MAX_SAVED_REPLICATED_JOURNALS_SIZE;

  private static boolean DEFAULT_RESTART_BACKUP;

  private static boolean DEFAULT_ALLOW_AUTO_FAILBACK;

  private static long DEFAULT_INITIAL_REPLICATION_SYNC_TIMEOUT;

  private static boolean DEFAULT_FAILOVER_ON_SERVER_SHUTDOWN;

  private static boolean DEFAULT_SCALE_DOWN_ENABLED;

  private static int DEFAULT_GROUPING_HANDLER_TIMEOUT;

  private static int DEFAULT_GROUPING_HANDLER_GROUP_TIMEOUT;

  private static long DEFAULT_GROUPING_HANDLER_REAPER_PERIOD;

  private org.apache.activemq.artemis.api.config.ActiveMQDefaultConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static long getDefaultClientFailureCheckPeriod();
    Code:
       0: getstatic     #2                  // Field DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
       3: lreturn

  public static long getDefaultFileDeployerScanPeriod();
    Code:
       0: getstatic     #3                  // Field DEFAULT_FILE_DEPLOYER_SCAN_PERIOD:J
       3: lreturn

  public static int getDefaultJournalMaxIoAio();
    Code:
       0: getstatic     #4                  // Field DEFAULT_JOURNAL_MAX_IO_AIO:I
       3: ireturn

  public static int getDefaultJournalBufferTimeoutAio();
    Code:
       0: getstatic     #5                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO:I
       3: ireturn

  public static int getDefaultJournalBufferSizeAio();
    Code:
       0: getstatic     #6                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_AIO:I
       3: ireturn

  public static int getDefaultJournalMaxIoNio();
    Code:
       0: getstatic     #7                  // Field DEFAULT_JOURNAL_MAX_IO_NIO:I
       3: ireturn

  public static int getDefaultJournalBufferTimeoutNio();
    Code:
       0: getstatic     #8                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO:I
       3: ireturn

  public static int getDefaultJournalBufferSizeNio();
    Code:
       0: getstatic     #9                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_NIO:I
       3: ireturn

  public static java.lang.String getPropMaskPassword();
    Code:
       0: getstatic     #10                 // Field PROP_MASK_PASSWORD:Ljava/lang/String;
       3: areturn

  public static java.lang.String getPropPasswordCodec();
    Code:
       0: getstatic     #11                 // Field PROP_PASSWORD_CODEC:Ljava/lang/String;
       3: areturn

  public static java.lang.String getDefaultHapolicyType();
    Code:
       0: getstatic     #12                 // Field DEFAULT_HAPOLICY_TYPE:Ljava/lang/String;
       3: areturn

  public static java.lang.String getDefaultHapolicyBackupStrategy();
    Code:
       0: getstatic     #13                 // Field DEFAULT_HAPOLICY_BACKUP_STRATEGY:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultResolveProtocols();
    Code:
       0: getstatic     #14                 // Field DEFAULT_RESOLVE_PROTOCOLS:Z
       3: ireturn

  public static boolean isDefaultFileDeploymentEnabled();
    Code:
       0: getstatic     #15                 // Field DEFAULT_FILE_DEPLOYMENT_ENABLED:Z
       3: ireturn

  public static boolean isDefaultPersistenceEnabled();
    Code:
       0: getstatic     #16                 // Field DEFAULT_PERSISTENCE_ENABLED:Z
       3: ireturn

  public static int getDefaultScheduledThreadPoolMaxSize();
    Code:
       0: getstatic     #17                 // Field DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE:I
       3: ireturn

  public static int getDefaultThreadPoolMaxSize();
    Code:
       0: getstatic     #18                 // Field DEFAULT_THREAD_POOL_MAX_SIZE:I
       3: ireturn

  public static boolean isDefaultSecurityEnabled();
    Code:
       0: getstatic     #19                 // Field DEFAULT_SECURITY_ENABLED:Z
       3: ireturn

  public static boolean isDefaultGracefulShutdownEnabled();
    Code:
       0: getstatic     #20                 // Field DEFAULT_GRACEFUL_SHUTDOWN_ENABLED:Z
       3: ireturn

  public static long getDefaultGracefulShutdownTimeout();
    Code:
       0: getstatic     #21                 // Field DEFAULT_GRACEFUL_SHUTDOWN_TIMEOUT:J
       3: lreturn

  public static long getDefaultSecurityInvalidationInterval();
    Code:
       0: getstatic     #22                 // Field DEFAULT_SECURITY_INVALIDATION_INTERVAL:J
       3: lreturn

  public static long getDefaultJournalLockAcquisitionTimeout();
    Code:
       0: getstatic     #23                 // Field DEFAULT_JOURNAL_LOCK_ACQUISITION_TIMEOUT:J
       3: lreturn

  public static boolean isDefaultWildcardRoutingEnabled();
    Code:
       0: getstatic     #24                 // Field DEFAULT_WILDCARD_ROUTING_ENABLED:Z
       3: ireturn

  public static org.apache.activemq.artemis.api.core.SimpleString getDefaultManagementAddress();
    Code:
       0: getstatic     #25                 // Field DEFAULT_MANAGEMENT_ADDRESS:Lorg/apache/activemq/artemis/api/core/SimpleString;
       3: areturn

  public static org.apache.activemq.artemis.api.core.SimpleString getDefaultManagementNotificationAddress();
    Code:
       0: getstatic     #26                 // Field DEFAULT_MANAGEMENT_NOTIFICATION_ADDRESS:Lorg/apache/activemq/artemis/api/core/SimpleString;
       3: areturn

  public static java.lang.String getDefaultClusterUser();
    Code:
       0: getstatic     #27                 // Field DEFAULT_CLUSTER_USER:Ljava/lang/String;
       3: areturn

  public static java.lang.String getDefaultClusterPassword();
    Code:
       0: getstatic     #28                 // Field DEFAULT_CLUSTER_PASSWORD:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultMaskPassword();
    Code:
       0: getstatic     #29                 // Field DEFAULT_MASK_PASSWORD:Z
       3: ireturn

  public static boolean isDefaultJmxManagementEnabled();
    Code:
       0: getstatic     #30                 // Field DEFAULT_JMX_MANAGEMENT_ENABLED:Z
       3: ireturn

  public static java.lang.String getDefaultJmxDomain();
    Code:
       0: getstatic     #31                 // Field DEFAULT_JMX_DOMAIN:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultMessageCounterEnabled();
    Code:
       0: getstatic     #32                 // Field DEFAULT_MESSAGE_COUNTER_ENABLED:Z
       3: ireturn

  public static long getDefaultMessageCounterSamplePeriod();
    Code:
       0: getstatic     #33                 // Field DEFAULT_MESSAGE_COUNTER_SAMPLE_PERIOD:J
       3: lreturn

  public static int getDefaultMessageCounterMaxDayHistory();
    Code:
       0: getstatic     #34                 // Field DEFAULT_MESSAGE_COUNTER_MAX_DAY_HISTORY:I
       3: ireturn

  public static long getDefaultConnectionTtlOverride();
    Code:
       0: getstatic     #35                 // Field DEFAULT_CONNECTION_TTL_OVERRIDE:J
       3: lreturn

  public static boolean isDefaultAsyncConnectionExecutionEnabled();
    Code:
       0: getstatic     #36                 // Field DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED:Z
       3: ireturn

  public static long getDefaultTransactionTimeout();
    Code:
       0: getstatic     #37                 // Field DEFAULT_TRANSACTION_TIMEOUT:J
       3: lreturn

  public static long getDefaultTransactionTimeoutScanPeriod();
    Code:
       0: getstatic     #38                 // Field DEFAULT_TRANSACTION_TIMEOUT_SCAN_PERIOD:J
       3: lreturn

  public static long getDefaultMessageExpiryScanPeriod();
    Code:
       0: getstatic     #39                 // Field DEFAULT_MESSAGE_EXPIRY_SCAN_PERIOD:J
       3: lreturn

  public static int getDefaultMessageExpiryThreadPriority();
    Code:
       0: getstatic     #40                 // Field DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY:I
       3: ireturn

  public static int getDefaultIdCacheSize();
    Code:
       0: getstatic     #41                 // Field DEFAULT_ID_CACHE_SIZE:I
       3: ireturn

  public static boolean isDefaultPersistIdCache();
    Code:
       0: getstatic     #42                 // Field DEFAULT_PERSIST_ID_CACHE:Z
       3: ireturn

  public static boolean isDefaultPersistDeliveryCountBeforeDelivery();
    Code:
       0: getstatic     #43                 // Field DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY:Z
       3: ireturn

  public static java.lang.String getDefaultPagingDir();
    Code:
       0: getstatic     #44                 // Field DEFAULT_PAGING_DIR:Ljava/lang/String;
       3: areturn

  public static java.lang.String getDefaultBindingsDirectory();
    Code:
       0: getstatic     #45                 // Field DEFAULT_BINDINGS_DIRECTORY:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultCreateBindingsDir();
    Code:
       0: getstatic     #46                 // Field DEFAULT_CREATE_BINDINGS_DIR:Z
       3: ireturn

  public static int getDefaultMaxConcurrentPageIo();
    Code:
       0: getstatic     #47                 // Field DEFAULT_MAX_CONCURRENT_PAGE_IO:I
       3: ireturn

  public static java.lang.String getDefaultJournalDir();
    Code:
       0: getstatic     #48                 // Field DEFAULT_JOURNAL_DIR:Ljava/lang/String;
       3: areturn

  public static boolean isDefaultCreateJournalDir();
    Code:
       0: getstatic     #49                 // Field DEFAULT_CREATE_JOURNAL_DIR:Z
       3: ireturn

  public static boolean isDefaultJournalSyncTransactional();
    Code:
       0: getstatic     #50                 // Field DEFAULT_JOURNAL_SYNC_TRANSACTIONAL:Z
       3: ireturn

  public static boolean isDefaultJournalSyncNonTransactional();
    Code:
       0: getstatic     #51                 // Field DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL:Z
       3: ireturn

  public static boolean isDefaultJournalLogWriteRate();
    Code:
       0: getstatic     #52                 // Field DEFAULT_JOURNAL_LOG_WRITE_RATE:Z
       3: ireturn

  public static int getDefaultJournalFileSize();
    Code:
       0: getstatic     #53                 // Field DEFAULT_JOURNAL_FILE_SIZE:I
       3: ireturn

  public static int getDefaultJournalMinFiles();
    Code:
       0: getstatic     #54                 // Field DEFAULT_JOURNAL_MIN_FILES:I
       3: ireturn

  public static int getDefaultJournalPoolFiles();
    Code:
       0: getstatic     #55                 // Field DEFAULT_JOURNAL_POOL_FILES:I
       3: ireturn

  public static int getDefaultJournalCompactPercentage();
    Code:
       0: getstatic     #56                 // Field DEFAULT_JOURNAL_COMPACT_PERCENTAGE:I
       3: ireturn

  public static int getDefaultJournalCompactMinFiles();
    Code:
       0: getstatic     #57                 // Field DEFAULT_JOURNAL_COMPACT_MIN_FILES:I
       3: ireturn

  public static int getDefaultJournalPerfBlastPages();
    Code:
       0: getstatic     #58                 // Field DEFAULT_JOURNAL_PERF_BLAST_PAGES:I
       3: ireturn

  public static boolean isDefaultRunSyncSpeedTest();
    Code:
       0: getstatic     #59                 // Field DEFAULT_RUN_SYNC_SPEED_TEST:Z
       3: ireturn

  public static long getDefaultServerDumpInterval();
    Code:
       0: getstatic     #60                 // Field DEFAULT_SERVER_DUMP_INTERVAL:J
       3: lreturn

  public static int getDefaultMemoryWarningThreshold();
    Code:
       0: getstatic     #61                 // Field DEFAULT_MEMORY_WARNING_THRESHOLD:I
       3: ireturn

  public static long getDefaultMemoryMeasureInterval();
    Code:
       0: getstatic     #62                 // Field DEFAULT_MEMORY_MEASURE_INTERVAL:J
       3: lreturn

  public static java.lang.String getDefaultLargeMessagesDir();
    Code:
       0: getstatic     #63                 // Field DEFAULT_LARGE_MESSAGES_DIR:Ljava/lang/String;
       3: areturn

  public static long getDefaultBroadcastPeriod();
    Code:
       0: getstatic     #64                 // Field DEFAULT_BROADCAST_PERIOD:J
       3: lreturn

  public static int getDefaultBroadcastRefreshTimeout();
    Code:
       0: getstatic     #65                 // Field DEFAULT_BROADCAST_REFRESH_TIMEOUT:I
       3: ireturn

  public static long getDefaultConnectionTtl();
    Code:
       0: getstatic     #66                 // Field DEFAULT_CONNECTION_TTL:J
       3: lreturn

  public static double getDefaultRetryIntervalMultiplier();
    Code:
       0: getstatic     #67                 // Field DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
       3: dreturn

  public static long getDefaultMaxRetryInterval();
    Code:
       0: getstatic     #68                 // Field DEFAULT_MAX_RETRY_INTERVAL:J
       3: lreturn

  public static int getDefaultBridgeInitialConnectAttempts();
    Code:
       0: getstatic     #69                 // Field DEFAULT_BRIDGE_INITIAL_CONNECT_ATTEMPTS:I
       3: ireturn

  public static int getDefaultBridgeReconnectAttempts();
    Code:
       0: getstatic     #70                 // Field DEFAULT_BRIDGE_RECONNECT_ATTEMPTS:I
       3: ireturn

  public static boolean isDefaultBridgeDuplicateDetection();
    Code:
       0: getstatic     #71                 // Field DEFAULT_BRIDGE_DUPLICATE_DETECTION:Z
       3: ireturn

  public static int getDefaultBridgeConfirmationWindowSize();
    Code:
       0: getstatic     #72                 // Field DEFAULT_BRIDGE_CONFIRMATION_WINDOW_SIZE:I
       3: ireturn

  public static int getDefaultBridgeConnectSameNode();
    Code:
       0: getstatic     #73                 // Field DEFAULT_BRIDGE_CONNECT_SAME_NODE:I
       3: ireturn

  public static long getDefaultClusterFailureCheckPeriod();
    Code:
       0: getstatic     #74                 // Field DEFAULT_CLUSTER_FAILURE_CHECK_PERIOD:J
       3: lreturn

  public static long getDefaultClusterConnectionTtl();
    Code:
       0: getstatic     #75                 // Field DEFAULT_CLUSTER_CONNECTION_TTL:J
       3: lreturn

  public static long getDefaultClusterCallTimeout();
    Code:
       0: getstatic     #76                 // Field DEFAULT_CLUSTER_CALL_TIMEOUT:J
       3: lreturn

  public static long getDefaultClusterRetryInterval();
    Code:
       0: getstatic     #77                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL:J
       3: lreturn

  public static double getDefaultClusterRetryIntervalMultiplier();
    Code:
       0: getstatic     #78                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL_MULTIPLIER:D
       3: dreturn

  public static long getDefaultClusterMaxRetryInterval();
    Code:
       0: getstatic     #79                 // Field DEFAULT_CLUSTER_MAX_RETRY_INTERVAL:J
       3: lreturn

  public static int getDefaultClusterInitialConnectAttempts();
    Code:
       0: getstatic     #80                 // Field DEFAULT_CLUSTER_INITIAL_CONNECT_ATTEMPTS:I
       3: ireturn

  public static int getDefaultClusterReconnectAttempts();
    Code:
       0: getstatic     #81                 // Field DEFAULT_CLUSTER_RECONNECT_ATTEMPTS:I
       3: ireturn

  public static boolean isDefaultClusterDuplicateDetection();
    Code:
       0: getstatic     #82                 // Field DEFAULT_CLUSTER_DUPLICATE_DETECTION:Z
       3: ireturn

  public static boolean isDefaultClusterForwardWhenNoConsumers();
    Code:
       0: getstatic     #83                 // Field DEFAULT_CLUSTER_FORWARD_WHEN_NO_CONSUMERS:Z
       3: ireturn

  public static java.lang.String getDefaultClusterMessageLoadBalancingType();
    Code:
       0: getstatic     #84                 // Field DEFAULT_CLUSTER_MESSAGE_LOAD_BALANCING_TYPE:Ljava/lang/String;
       3: areturn

  public static int getDefaultClusterMaxHops();
    Code:
       0: getstatic     #85                 // Field DEFAULT_CLUSTER_MAX_HOPS:I
       3: ireturn

  public static int getDefaultClusterConfirmationWindowSize();
    Code:
       0: getstatic     #86                 // Field DEFAULT_CLUSTER_CONFIRMATION_WINDOW_SIZE:I
       3: ireturn

  public static long getDefaultClusterCallFailoverTimeout();
    Code:
       0: getstatic     #87                 // Field DEFAULT_CLUSTER_CALL_FAILOVER_TIMEOUT:J
       3: lreturn

  public static long getDefaultClusterNotificationInterval();
    Code:
       0: getstatic     #88                 // Field DEFAULT_CLUSTER_NOTIFICATION_INTERVAL:J
       3: lreturn

  public static int getDefaultClusterNotificationAttempts();
    Code:
       0: getstatic     #89                 // Field DEFAULT_CLUSTER_NOTIFICATION_ATTEMPTS:I
       3: ireturn

  public static boolean isDefaultDivertExclusive();
    Code:
       0: getstatic     #90                 // Field DEFAULT_DIVERT_EXCLUSIVE:Z
       3: ireturn

  public static boolean isDefaultHapolicyRequestBackup();
    Code:
       0: getstatic     #91                 // Field DEFAULT_HAPOLICY_REQUEST_BACKUP:Z
       3: ireturn

  public static int getDefaultHapolicyBackupRequestRetries();
    Code:
       0: getstatic     #92                 // Field DEFAULT_HAPOLICY_BACKUP_REQUEST_RETRIES:I
       3: ireturn

  public static long getDefaultHapolicyBackupRequestRetryInterval();
    Code:
       0: getstatic     #93                 // Field DEFAULT_HAPOLICY_BACKUP_REQUEST_RETRY_INTERVAL:J
       3: lreturn

  public static int getDefaultHapolicyMaxBackups();
    Code:
       0: getstatic     #94                 // Field DEFAULT_HAPOLICY_MAX_BACKUPS:I
       3: ireturn

  public static int getDefaultHapolicyBackupPortOffset();
    Code:
       0: getstatic     #95                 // Field DEFAULT_HAPOLICY_BACKUP_PORT_OFFSET:I
       3: ireturn

  public static boolean isDefaultCheckForLiveServer();
    Code:
       0: getstatic     #96                 // Field DEFAULT_CHECK_FOR_LIVE_SERVER:Z
       3: ireturn

  public static int getDefaultMaxSavedReplicatedJournalsSize();
    Code:
       0: getstatic     #97                 // Field DEFAULT_MAX_SAVED_REPLICATED_JOURNALS_SIZE:I
       3: ireturn

  public static boolean isDefaultRestartBackup();
    Code:
       0: getstatic     #98                 // Field DEFAULT_RESTART_BACKUP:Z
       3: ireturn

  public static boolean isDefaultAllowAutoFailback();
    Code:
       0: getstatic     #99                 // Field DEFAULT_ALLOW_AUTO_FAILBACK:Z
       3: ireturn

  public static long getDefaultInitialReplicationSyncTimeout();
    Code:
       0: getstatic     #100                // Field DEFAULT_INITIAL_REPLICATION_SYNC_TIMEOUT:J
       3: lreturn

  public static long getDefaultFailbackDelay();
    Code:
       0: ldc2_w        #101                // long 5000l
       3: lreturn

  public static boolean isDefaultFailoverOnServerShutdown();
    Code:
       0: getstatic     #103                // Field DEFAULT_FAILOVER_ON_SERVER_SHUTDOWN:Z
       3: ireturn

  public static boolean isDefaultScaleDownEnabled();
    Code:
       0: getstatic     #104                // Field DEFAULT_SCALE_DOWN_ENABLED:Z
       3: ireturn

  public static int getDefaultGroupingHandlerTimeout();
    Code:
       0: getstatic     #105                // Field DEFAULT_GROUPING_HANDLER_TIMEOUT:I
       3: ireturn

  public static int getDefaultGroupingHandlerGroupTimeout();
    Code:
       0: getstatic     #106                // Field DEFAULT_GROUPING_HANDLER_GROUP_TIMEOUT:I
       3: ireturn

  public static long getDefaultGroupingHandlerReaperPeriod();
    Code:
       0: getstatic     #107                // Field DEFAULT_GROUPING_HANDLER_REAPER_PERIOD:J
       3: lreturn

  static {};
    Code:
       0: ldc2_w        #108                // long 30000l
       3: putstatic     #2                  // Field DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
       6: ldc2_w        #101                // long 5000l
       9: putstatic     #3                  // Field DEFAULT_FILE_DEPLOYER_SCAN_PERIOD:J
      12: sipush        500
      15: putstatic     #4                  // Field DEFAULT_JOURNAL_MAX_IO_AIO:I
      18: iconst_m1
      19: putstatic     #55                 // Field DEFAULT_JOURNAL_POOL_FILES:I
      22: ldc           #111                // int 500000
      24: putstatic     #5                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_AIO:I
      27: ldc           #112                // int 501760
      29: putstatic     #6                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_AIO:I
      32: iconst_1
      33: putstatic     #7                  // Field DEFAULT_JOURNAL_MAX_IO_NIO:I
      36: ldc           #113                // int 3333333
      38: putstatic     #8                  // Field DEFAULT_JOURNAL_BUFFER_TIMEOUT_NIO:I
      41: ldc           #112                // int 501760
      43: putstatic     #9                  // Field DEFAULT_JOURNAL_BUFFER_SIZE_NIO:I
      46: ldc           #114                // String activemq.usemaskedpassword
      48: putstatic     #10                 // Field PROP_MASK_PASSWORD:Ljava/lang/String;
      51: ldc           #115                // String activemq.passwordcodec
      53: putstatic     #11                 // Field PROP_PASSWORD_CODEC:Ljava/lang/String;
      56: ldc           #116                // String NONE
      58: putstatic     #12                 // Field DEFAULT_HAPOLICY_TYPE:Ljava/lang/String;
      61: ldc           #117                // String FULL
      63: putstatic     #13                 // Field DEFAULT_HAPOLICY_BACKUP_STRATEGY:Ljava/lang/String;
      66: iconst_1
      67: putstatic     #14                 // Field DEFAULT_RESOLVE_PROTOCOLS:Z
      70: iconst_0
      71: putstatic     #15                 // Field DEFAULT_FILE_DEPLOYMENT_ENABLED:Z
      74: iconst_1
      75: putstatic     #16                 // Field DEFAULT_PERSISTENCE_ENABLED:Z
      78: iconst_5
      79: putstatic     #17                 // Field DEFAULT_SCHEDULED_THREAD_POOL_MAX_SIZE:I
      82: bipush        30
      84: putstatic     #18                 // Field DEFAULT_THREAD_POOL_MAX_SIZE:I
      87: iconst_1
      88: putstatic     #19                 // Field DEFAULT_SECURITY_ENABLED:Z
      91: iconst_0
      92: putstatic     #20                 // Field DEFAULT_GRACEFUL_SHUTDOWN_ENABLED:Z
      95: ldc2_w        #118                // long -1l
      98: putstatic     #21                 // Field DEFAULT_GRACEFUL_SHUTDOWN_TIMEOUT:J
     101: ldc2_w        #120                // long 10000l
     104: putstatic     #22                 // Field DEFAULT_SECURITY_INVALIDATION_INTERVAL:J
     107: ldc2_w        #118                // long -1l
     110: putstatic     #23                 // Field DEFAULT_JOURNAL_LOCK_ACQUISITION_TIMEOUT:J
     113: iconst_1
     114: putstatic     #24                 // Field DEFAULT_WILDCARD_ROUTING_ENABLED:Z
     117: new           #122                // class org/apache/activemq/artemis/api/core/SimpleString
     120: dup
     121: ldc           #123                // String jms.queue.activemq.management
     123: invokespecial #124                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     126: putstatic     #25                 // Field DEFAULT_MANAGEMENT_ADDRESS:Lorg/apache/activemq/artemis/api/core/SimpleString;
     129: new           #122                // class org/apache/activemq/artemis/api/core/SimpleString
     132: dup
     133: ldc           #125                // String activemq.notifications
     135: invokespecial #124                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
     138: putstatic     #26                 // Field DEFAULT_MANAGEMENT_NOTIFICATION_ADDRESS:Lorg/apache/activemq/artemis/api/core/SimpleString;
     141: ldc           #126                // String ACTIVEMQ.CLUSTER.ADMIN.USER
     143: putstatic     #27                 // Field DEFAULT_CLUSTER_USER:Ljava/lang/String;
     146: ldc           #127                // String CHANGE ME!!
     148: putstatic     #28                 // Field DEFAULT_CLUSTER_PASSWORD:Ljava/lang/String;
     151: iconst_0
     152: putstatic     #29                 // Field DEFAULT_MASK_PASSWORD:Z
     155: iconst_1
     156: putstatic     #30                 // Field DEFAULT_JMX_MANAGEMENT_ENABLED:Z
     159: ldc           #128                // String org.apache.activemq.artemis
     161: putstatic     #31                 // Field DEFAULT_JMX_DOMAIN:Ljava/lang/String;
     164: iconst_0
     165: putstatic     #32                 // Field DEFAULT_MESSAGE_COUNTER_ENABLED:Z
     168: ldc2_w        #120                // long 10000l
     171: putstatic     #33                 // Field DEFAULT_MESSAGE_COUNTER_SAMPLE_PERIOD:J
     174: bipush        10
     176: putstatic     #34                 // Field DEFAULT_MESSAGE_COUNTER_MAX_DAY_HISTORY:I
     179: ldc2_w        #118                // long -1l
     182: putstatic     #35                 // Field DEFAULT_CONNECTION_TTL_OVERRIDE:J
     185: iconst_1
     186: putstatic     #36                 // Field DEFAULT_ASYNC_CONNECTION_EXECUTION_ENABLED:Z
     189: ldc2_w        #129                // long 300000l
     192: putstatic     #37                 // Field DEFAULT_TRANSACTION_TIMEOUT:J
     195: ldc2_w        #131                // long 1000l
     198: putstatic     #38                 // Field DEFAULT_TRANSACTION_TIMEOUT_SCAN_PERIOD:J
     201: ldc2_w        #108                // long 30000l
     204: putstatic     #39                 // Field DEFAULT_MESSAGE_EXPIRY_SCAN_PERIOD:J
     207: iconst_3
     208: putstatic     #40                 // Field DEFAULT_MESSAGE_EXPIRY_THREAD_PRIORITY:I
     211: sipush        20000
     214: putstatic     #41                 // Field DEFAULT_ID_CACHE_SIZE:I
     217: iconst_1
     218: putstatic     #42                 // Field DEFAULT_PERSIST_ID_CACHE:Z
     221: iconst_0
     222: putstatic     #43                 // Field DEFAULT_PERSIST_DELIVERY_COUNT_BEFORE_DELIVERY:Z
     225: ldc           #133                // String data/paging
     227: putstatic     #44                 // Field DEFAULT_PAGING_DIR:Ljava/lang/String;
     230: ldc           #134                // String data/bindings
     232: putstatic     #45                 // Field DEFAULT_BINDINGS_DIRECTORY:Ljava/lang/String;
     235: iconst_1
     236: putstatic     #46                 // Field DEFAULT_CREATE_BINDINGS_DIR:Z
     239: iconst_5
     240: putstatic     #47                 // Field DEFAULT_MAX_CONCURRENT_PAGE_IO:I
     243: ldc           #135                // String data/journal
     245: putstatic     #48                 // Field DEFAULT_JOURNAL_DIR:Ljava/lang/String;
     248: iconst_1
     249: putstatic     #49                 // Field DEFAULT_CREATE_JOURNAL_DIR:Z
     252: iconst_1
     253: putstatic     #50                 // Field DEFAULT_JOURNAL_SYNC_TRANSACTIONAL:Z
     256: iconst_1
     257: putstatic     #51                 // Field DEFAULT_JOURNAL_SYNC_NON_TRANSACTIONAL:Z
     260: iconst_0
     261: putstatic     #52                 // Field DEFAULT_JOURNAL_LOG_WRITE_RATE:Z
     264: ldc           #136                // int 10485760
     266: putstatic     #53                 // Field DEFAULT_JOURNAL_FILE_SIZE:I
     269: iconst_2
     270: putstatic     #54                 // Field DEFAULT_JOURNAL_MIN_FILES:I
     273: bipush        30
     275: putstatic     #56                 // Field DEFAULT_JOURNAL_COMPACT_PERCENTAGE:I
     278: bipush        10
     280: putstatic     #57                 // Field DEFAULT_JOURNAL_COMPACT_MIN_FILES:I
     283: iconst_m1
     284: putstatic     #58                 // Field DEFAULT_JOURNAL_PERF_BLAST_PAGES:I
     287: iconst_0
     288: putstatic     #59                 // Field DEFAULT_RUN_SYNC_SPEED_TEST:Z
     291: ldc2_w        #118                // long -1l
     294: putstatic     #60                 // Field DEFAULT_SERVER_DUMP_INTERVAL:J
     297: bipush        25
     299: putstatic     #61                 // Field DEFAULT_MEMORY_WARNING_THRESHOLD:I
     302: ldc2_w        #118                // long -1l
     305: putstatic     #62                 // Field DEFAULT_MEMORY_MEASURE_INTERVAL:J
     308: ldc           #137                // String data/largemessages
     310: putstatic     #63                 // Field DEFAULT_LARGE_MESSAGES_DIR:Ljava/lang/String;
     313: ldc2_w        #138                // long 2000l
     316: putstatic     #64                 // Field DEFAULT_BROADCAST_PERIOD:J
     319: sipush        10000
     322: putstatic     #65                 // Field DEFAULT_BROADCAST_REFRESH_TIMEOUT:I
     325: ldc2_w        #140                // long 60000l
     328: putstatic     #66                 // Field DEFAULT_CONNECTION_TTL:J
     331: dconst_1
     332: putstatic     #67                 // Field DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
     335: ldc2_w        #138                // long 2000l
     338: putstatic     #68                 // Field DEFAULT_MAX_RETRY_INTERVAL:J
     341: iconst_m1
     342: putstatic     #69                 // Field DEFAULT_BRIDGE_INITIAL_CONNECT_ATTEMPTS:I
     345: iconst_m1
     346: putstatic     #70                 // Field DEFAULT_BRIDGE_RECONNECT_ATTEMPTS:I
     349: iconst_1
     350: putstatic     #71                 // Field DEFAULT_BRIDGE_DUPLICATE_DETECTION:Z
     353: ldc           #142                // int 1048576
     355: putstatic     #72                 // Field DEFAULT_BRIDGE_CONFIRMATION_WINDOW_SIZE:I
     358: bipush        10
     360: putstatic     #73                 // Field DEFAULT_BRIDGE_CONNECT_SAME_NODE:I
     363: ldc2_w        #108                // long 30000l
     366: putstatic     #74                 // Field DEFAULT_CLUSTER_FAILURE_CHECK_PERIOD:J
     369: ldc2_w        #140                // long 60000l
     372: putstatic     #75                 // Field DEFAULT_CLUSTER_CONNECTION_TTL:J
     375: ldc2_w        #108                // long 30000l
     378: putstatic     #76                 // Field DEFAULT_CLUSTER_CALL_TIMEOUT:J
     381: ldc2_w        #143                // long 500l
     384: putstatic     #77                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL:J
     387: dconst_1
     388: putstatic     #78                 // Field DEFAULT_CLUSTER_RETRY_INTERVAL_MULTIPLIER:D
     391: ldc2_w        #138                // long 2000l
     394: putstatic     #79                 // Field DEFAULT_CLUSTER_MAX_RETRY_INTERVAL:J
     397: iconst_m1
     398: putstatic     #80                 // Field DEFAULT_CLUSTER_INITIAL_CONNECT_ATTEMPTS:I
     401: iconst_m1
     402: putstatic     #81                 // Field DEFAULT_CLUSTER_RECONNECT_ATTEMPTS:I
     405: iconst_1
     406: putstatic     #82                 // Field DEFAULT_CLUSTER_DUPLICATE_DETECTION:Z
     409: iconst_0
     410: putstatic     #83                 // Field DEFAULT_CLUSTER_FORWARD_WHEN_NO_CONSUMERS:Z
     413: ldc           #145                // String ON_DEMAND
     415: putstatic     #84                 // Field DEFAULT_CLUSTER_MESSAGE_LOAD_BALANCING_TYPE:Ljava/lang/String;
     418: iconst_1
     419: putstatic     #85                 // Field DEFAULT_CLUSTER_MAX_HOPS:I
     422: ldc           #142                // int 1048576
     424: putstatic     #86                 // Field DEFAULT_CLUSTER_CONFIRMATION_WINDOW_SIZE:I
     427: ldc2_w        #118                // long -1l
     430: putstatic     #87                 // Field DEFAULT_CLUSTER_CALL_FAILOVER_TIMEOUT:J
     433: ldc2_w        #131                // long 1000l
     436: putstatic     #88                 // Field DEFAULT_CLUSTER_NOTIFICATION_INTERVAL:J
     439: iconst_2
     440: putstatic     #89                 // Field DEFAULT_CLUSTER_NOTIFICATION_ATTEMPTS:I
     443: iconst_0
     444: putstatic     #90                 // Field DEFAULT_DIVERT_EXCLUSIVE:Z
     447: iconst_0
     448: putstatic     #91                 // Field DEFAULT_HAPOLICY_REQUEST_BACKUP:Z
     451: iconst_m1
     452: putstatic     #92                 // Field DEFAULT_HAPOLICY_BACKUP_REQUEST_RETRIES:I
     455: ldc2_w        #101                // long 5000l
     458: putstatic     #93                 // Field DEFAULT_HAPOLICY_BACKUP_REQUEST_RETRY_INTERVAL:J
     461: iconst_1
     462: putstatic     #94                 // Field DEFAULT_HAPOLICY_MAX_BACKUPS:I
     465: bipush        100
     467: putstatic     #95                 // Field DEFAULT_HAPOLICY_BACKUP_PORT_OFFSET:I
     470: iconst_0
     471: putstatic     #96                 // Field DEFAULT_CHECK_FOR_LIVE_SERVER:Z
     474: iconst_2
     475: putstatic     #97                 // Field DEFAULT_MAX_SAVED_REPLICATED_JOURNALS_SIZE:I
     478: iconst_1
     479: putstatic     #98                 // Field DEFAULT_RESTART_BACKUP:Z
     482: iconst_1
     483: putstatic     #99                 // Field DEFAULT_ALLOW_AUTO_FAILBACK:Z
     486: ldc2_w        #108                // long 30000l
     489: putstatic     #100                // Field DEFAULT_INITIAL_REPLICATION_SYNC_TIMEOUT:J
     492: iconst_0
     493: putstatic     #103                // Field DEFAULT_FAILOVER_ON_SERVER_SHUTDOWN:Z
     496: iconst_1
     497: putstatic     #104                // Field DEFAULT_SCALE_DOWN_ENABLED:Z
     500: sipush        5000
     503: putstatic     #105                // Field DEFAULT_GROUPING_HANDLER_TIMEOUT:I
     506: iconst_m1
     507: putstatic     #106                // Field DEFAULT_GROUPING_HANDLER_GROUP_TIMEOUT:I
     510: ldc2_w        #108                // long 30000l
     513: putstatic     #107                // Field DEFAULT_GROUPING_HANDLER_REAPER_PERIOD:J
     516: return
}
