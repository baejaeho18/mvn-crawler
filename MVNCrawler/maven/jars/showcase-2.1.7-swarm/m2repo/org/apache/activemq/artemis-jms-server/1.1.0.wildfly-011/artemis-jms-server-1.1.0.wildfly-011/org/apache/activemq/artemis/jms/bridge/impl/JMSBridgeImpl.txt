Compiled from "JMSBridgeImpl.java"
public final class org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl implements org.apache.activemq.artemis.jms.bridge.JMSBridge {
  private static final java.lang.String[] RESOURCE_RECOVERY_CLASS_NAMES;

  private static boolean trace;

  private static final int TEN_YEARS;

  private static final long DEFAULT_FAILOVER_TIMEOUT;

  private final java.lang.Object lock;

  private java.lang.String sourceUsername;

  private java.lang.String sourcePassword;

  private java.lang.String targetUsername;

  private java.lang.String targetPassword;

  private javax.transaction.TransactionManager tm;

  private java.lang.String selector;

  private long failureRetryInterval;

  private int maxRetries;

  private org.apache.activemq.artemis.jms.bridge.QualityOfServiceMode qualityOfServiceMode;

  private int maxBatchSize;

  private long maxBatchTime;

  private java.lang.String subName;

  private java.lang.String clientID;

  private volatile boolean addMessageIDInHeader;

  private boolean started;

  private final java.lang.Object stoppingGuard;

  private boolean stopping;

  private final java.util.LinkedList<javax.jms.Message> messages;

  private org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory sourceCff;

  private org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory targetCff;

  private org.apache.activemq.artemis.jms.bridge.DestinationFactory sourceDestinationFactory;

  private org.apache.activemq.artemis.jms.bridge.DestinationFactory targetDestinationFactory;

  private javax.jms.Connection sourceConn;

  private javax.jms.Connection targetConn;

  private javax.jms.Destination sourceDestination;

  private javax.jms.Destination targetDestination;

  private javax.jms.Session sourceSession;

  private javax.jms.Session targetSession;

  private javax.jms.MessageConsumer sourceConsumer;

  private javax.jms.MessageProducer targetProducer;

  private org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl$BatchTimeChecker timeChecker;

  private java.util.concurrent.ExecutorService executor;

  private long batchExpiryTime;

  private boolean paused;

  private javax.transaction.Transaction tx;

  private boolean failed;

  private boolean connectedSource;

  private boolean connectedTarget;

  private int forwardMode;

  private javax.management.MBeanServer mbeanServer;

  private javax.management.ObjectName objectName;

  private boolean useMaskedPassword;

  private java.lang.String passwordCodec;

  private long failoverTimeout;

  private static final int FORWARD_MODE_XA;

  private static final int FORWARD_MODE_LOCALTX;

  private static final int FORWARD_MODE_NONTX;

  private org.apache.activemq.artemis.service.extensions.xa.recovery.ActiveMQRegistry registry;

  private java.lang.ClassLoader moduleTccl;

  public org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #26                 // class java/lang/Object
       8: dup
       9: invokespecial #25                 // Method java/lang/Object."<init>":()V
      12: putfield      #21                 // Field lock:Ljava/lang/Object;
      15: aload_0
      16: new           #26                 // class java/lang/Object
      19: dup
      20: invokespecial #25                 // Method java/lang/Object."<init>":()V
      23: putfield      #27                 // Field stoppingGuard:Ljava/lang/Object;
      26: aload_0
      27: iconst_0
      28: putfield      #22                 // Field stopping:Z
      31: aload_0
      32: iconst_0
      33: putfield      #10                 // Field connectedSource:Z
      36: aload_0
      37: iconst_0
      38: putfield      #9                  // Field connectedTarget:Z
      41: aload_0
      42: iconst_0
      43: putfield      #28                 // Field useMaskedPassword:Z
      46: aload_0
      47: new           #29                 // class java/util/LinkedList
      50: dup
      51: invokespecial #30                 // Method java/util/LinkedList."<init>":()V
      54: putfield      #16                 // Field messages:Ljava/util/LinkedList;
      57: aload_0
      58: aload_0
      59: invokespecial #31                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;
      62: putfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
      65: return

  public org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl(org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory, org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory, org.apache.activemq.artemis.jms.bridge.DestinationFactory, org.apache.activemq.artemis.jms.bridge.DestinationFactory, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, int, org.apache.activemq.artemis.jms.bridge.QualityOfServiceMode, int, long, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: lload         10
      18: iload         12
      20: aload         13
      22: iload         14
      24: lload         15
      26: aload         17
      28: aload         18
      30: iload         19
      32: aconst_null
      33: aconst_null
      34: invokespecial #33                 // Method "<init>":(Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JILorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;IJLjava/lang/String;Ljava/lang/String;ZLjavax/management/MBeanServer;Ljava/lang/String;)V
      37: return

  public org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl(org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory, org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory, org.apache.activemq.artemis.jms.bridge.DestinationFactory, org.apache.activemq.artemis.jms.bridge.DestinationFactory, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, int, org.apache.activemq.artemis.jms.bridge.QualityOfServiceMode, int, long, java.lang.String, java.lang.String, boolean, javax.management.MBeanServer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: lload         10
      18: iload         12
      20: aload         13
      22: iload         14
      24: lload         15
      26: aload         17
      28: aload         18
      30: iload         19
      32: aload         20
      34: aload         21
      36: ldc2_w        #35                 // long 60000l
      39: invokespecial #37                 // Method "<init>":(Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JILorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;IJLjava/lang/String;Ljava/lang/String;ZLjavax/management/MBeanServer;Ljava/lang/String;J)V
      42: return

  public org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl(org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory, org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory, org.apache.activemq.artemis.jms.bridge.DestinationFactory, org.apache.activemq.artemis.jms.bridge.DestinationFactory, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, int, org.apache.activemq.artemis.jms.bridge.QualityOfServiceMode, int, long, java.lang.String, java.lang.String, boolean, javax.management.MBeanServer, java.lang.String, long);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
       9: aload_0
      10: aload_2
      11: putfield      #40                 // Field targetCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
      14: aload_0
      15: aload_3
      16: putfield      #41                 // Field sourceDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      19: aload_0
      20: aload         4
      22: putfield      #42                 // Field targetDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      25: aload_0
      26: aload         5
      28: putfield      #43                 // Field sourceUsername:Ljava/lang/String;
      31: aload_0
      32: aload         6
      34: putfield      #44                 // Field sourcePassword:Ljava/lang/String;
      37: aload_0
      38: aload         7
      40: putfield      #45                 // Field targetUsername:Ljava/lang/String;
      43: aload_0
      44: aload         8
      46: putfield      #46                 // Field targetPassword:Ljava/lang/String;
      49: aload_0
      50: aload         9
      52: putfield      #47                 // Field selector:Ljava/lang/String;
      55: aload_0
      56: lload         10
      58: putfield      #6                  // Field failureRetryInterval:J
      61: aload_0
      62: iload         12
      64: putfield      #7                  // Field maxRetries:I
      67: aload_0
      68: aload         13
      70: putfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      73: aload_0
      74: iload         14
      76: putfield      #13                 // Field maxBatchSize:I
      79: aload_0
      80: lload         15
      82: putfield      #14                 // Field maxBatchTime:J
      85: aload_0
      86: aload         17
      88: putfield      #49                 // Field subName:Ljava/lang/String;
      91: aload_0
      92: aload         18
      94: putfield      #50                 // Field clientID:Ljava/lang/String;
      97: aload_0
      98: iload         19
     100: putfield      #51                 // Field addMessageIDInHeader:Z
     103: aload_0
     104: lload         22
     106: putfield      #1                  // Field failoverTimeout:J
     109: aload_0
     110: invokespecial #52                 // Method checkParams:()V
     113: aload         20
     115: ifnull        235
     118: aload         21
     120: ifnull        225
     123: aload_0
     124: aload         20
     126: putfield      #53                 // Field mbeanServer:Ljavax/management/MBeanServer;
     129: new           #54                 // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeControlImpl
     132: dup
     133: aload_0
     134: invokespecial #55                 // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeControlImpl."<init>":(Lorg/apache/activemq/artemis/jms/bridge/JMSBridge;)V
     137: astore        24
     139: aload_0
     140: aload         21
     142: invokestatic  #56                 // Method javax/management/ObjectName.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
     145: putfield      #57                 // Field objectName:Ljavax/management/ObjectName;
     148: new           #58                 // class javax/management/StandardMBean
     151: dup
     152: aload         24
     154: ldc           #59                 // class org/apache/activemq/artemis/jms/bridge/JMSBridgeControl
     156: invokespecial #60                 // Method javax/management/StandardMBean."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
     159: astore        25
     161: aload         20
     163: aload         25
     165: aload_0
     166: getfield      #57                 // Field objectName:Ljavax/management/ObjectName;
     169: invokeinterface #61,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
     174: pop
     175: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     178: new           #63                 // class java/lang/StringBuilder
     181: dup
     182: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     185: ldc           #65                 // String Registered JMSBridge instance as:
     187: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: getfield      #57                 // Field objectName:Ljavax/management/ObjectName;
     194: invokevirtual #67                 // Method javax/management/ObjectName.getCanonicalName:()Ljava/lang/String;
     197: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: invokeinterface #69,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.debug:(Ljava/lang/Object;)V
     208: goto          235
     211: astore        24
     213: new           #71                 // class java/lang/IllegalStateException
     216: dup
     217: ldc           #72                 // String Failed to register JMSBridge MBean
     219: aload         24
     221: invokespecial #73                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     224: athrow
     225: new           #74                 // class java/lang/IllegalArgumentException
     228: dup
     229: ldc           #75                 // String objectName is required when specifying an MBeanServer
     231: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     234: athrow
     235: getstatic     #17                 // Field trace:Z
     238: ifeq          268
     241: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     244: new           #63                 // class java/lang/StringBuilder
     247: dup
     248: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     251: ldc           #77                 // String Created
     253: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: aload_0
     257: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     260: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     263: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     268: return
    Exception table:
       from    to  target type
         129   208   211   Class java/lang/Exception

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #27                 // Field stoppingGuard:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_0
       9: putfield      #22                 // Field stopping:Z
      12: aload_1
      13: monitorexit
      14: goto          22
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
      22: aload_0
      23: new           #80                 // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$1
      26: dup
      27: aload_0
      28: invokespecial #81                 // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$1."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;)V
      31: invokestatic  #82                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      34: checkcast     #83                 // class java/lang/ClassLoader
      37: putfield      #24                 // Field moduleTccl:Ljava/lang/ClassLoader;
      40: aload_0
      41: invokespecial #84                 // Method locateRecoveryRegistry:()V
      44: aload_0
      45: getfield      #23                 // Field started:Z
      48: ifeq          60
      51: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      54: invokeinterface #85,  1           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.errorBridgeAlreadyStarted:()V
      59: return
      60: getstatic     #17                 // Field trace:Z
      63: ifeq          93
      66: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      69: new           #63                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #86                 // String Starting
      78: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
      97: invokeinterface #87,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
     102: ifeq          113
     105: aload_0
     106: aload_0
     107: invokespecial #31                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;
     110: putfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
     113: aload_0
     114: invokespecial #88                 // Method initPasswords:()V
     117: aload_0
     118: invokespecial #52                 // Method checkParams:()V
     121: aload_0
     122: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     125: getstatic     #89                 // Field org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.ONCE_AND_ONLY_ONCE:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     128: invokevirtual #90                 // Method org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.equals:(Ljava/lang/Object;)Z
     131: ifeq          240
     134: aload_0
     135: getfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
     138: aload_0
     139: getfield      #40                 // Field targetCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
     142: if_acmpeq     240
     145: aload_0
     146: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
     149: ifnonnull     159
     152: aload_0
     153: invokestatic  #92                 // Method org/apache/activemq/artemis/service/extensions/ServiceUtils.getTransactionManager:()Ljavax/transaction/TransactionManager;
     156: putfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
     159: aload_0
     160: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
     163: ifnonnull     186
     166: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     169: aload_0
     170: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     173: invokeinterface #93,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.jmsBridgeTransactionManagerMissing:(Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;)V
     178: new           #94                 // class java/lang/RuntimeException
     181: dup
     182: invokespecial #95                 // Method java/lang/RuntimeException."<init>":()V
     185: athrow
     186: aconst_null
     187: astore_2
     188: aload_0
     189: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
     192: invokeinterface #96,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
     197: astore_2
     198: aload_0
     199: invokespecial #97                 // Method setupJMSObjects:()Z
     202: istore_1
     203: aload_2
     204: ifnull        237
     207: aload_0
     208: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
     211: aload_2
     212: invokeinterface #98,  2           // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
     217: goto          237
     220: astore_3
     221: aload_2
     222: ifnull        235
     225: aload_0
     226: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
     229: aload_2
     230: invokeinterface #98,  2           // InterfaceMethod javax/transaction/TransactionManager.resume:(Ljavax/transaction/Transaction;)V
     235: aload_3
     236: athrow
     237: goto          245
     240: aload_0
     241: invokespecial #97                 // Method setupJMSObjects:()Z
     244: istore_1
     245: iload_1
     246: ifeq          266
     249: aload_0
     250: iconst_1
     251: putfield      #10                 // Field connectedSource:Z
     254: aload_0
     255: iconst_1
     256: putfield      #9                  // Field connectedTarget:Z
     259: aload_0
     260: invokespecial #3                  // Method startSource:()V
     263: goto          278
     266: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     269: invokeinterface #99,  1           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.errorStartingBridge:()V
     274: aload_0
     275: invokespecial #100                // Method handleFailureOnStartup:()V
     278: return
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any
         188   203   220   any

  private void startSource() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
       4: invokeinterface #101,  1          // InterfaceMethod javax/jms/Connection.start:()V
       9: aload_0
      10: iconst_1
      11: putfield      #23                 // Field started:Z
      14: aload_0
      15: getfield      #14                 // Field maxBatchTime:J
      18: ldc2_w        #102                // long -1l
      21: lcmp
      22: ifeq          95
      25: getstatic     #17                 // Field trace:Z
      28: ifeq          41
      31: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      34: ldc           #104                // String Starting time checker thread
      36: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      41: aload_0
      42: new           #105                // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BatchTimeChecker
      45: dup
      46: aload_0
      47: aconst_null
      48: invokespecial #106                // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BatchTimeChecker."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$1;)V
      51: putfield      #107                // Field timeChecker:Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BatchTimeChecker;
      54: aload_0
      55: getfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
      58: aload_0
      59: getfield      #107                // Field timeChecker:Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BatchTimeChecker;
      62: invokeinterface #108,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      67: aload_0
      68: invokestatic  #109                // Method java/lang/System.currentTimeMillis:()J
      71: aload_0
      72: getfield      #14                 // Field maxBatchTime:J
      75: ladd
      76: putfield      #15                 // Field batchExpiryTime:J
      79: getstatic     #17                 // Field trace:Z
      82: ifeq          95
      85: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      88: ldc           #110                // String Started time checker thread
      90: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      95: aload_0
      96: getfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
      99: new           #111                // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$SourceReceiver
     102: dup
     103: aload_0
     104: invokespecial #112                // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$SourceReceiver."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;)V
     107: invokeinterface #108,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     112: getstatic     #17                 // Field trace:Z
     115: ifeq          145
     118: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     121: new           #63                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #113                // String Started
     130: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_0
     134: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     137: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     145: return

  private void initPasswords() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field useMaskedPassword:Z
       4: ifeq          92
       7: new           #114                // class org/apache/activemq/artemis/utils/DefaultSensitiveStringCodec
      10: dup
      11: invokespecial #115                // Method org/apache/activemq/artemis/utils/DefaultSensitiveStringCodec."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #116                // Field passwordCodec:Ljava/lang/String;
      19: ifnull        30
      22: aload_0
      23: getfield      #116                // Field passwordCodec:Ljava/lang/String;
      26: invokestatic  #117                // Method org/apache/activemq/artemis/utils/PasswordMaskingUtil.getCodec:(Ljava/lang/String;)Lorg/apache/activemq/artemis/utils/SensitiveDataCodec;
      29: astore_1
      30: aload_0
      31: getfield      #44                 // Field sourcePassword:Ljava/lang/String;
      34: ifnull        54
      37: aload_0
      38: aload_1
      39: aload_0
      40: getfield      #44                 // Field sourcePassword:Ljava/lang/String;
      43: invokeinterface #118,  2          // InterfaceMethod org/apache/activemq/artemis/utils/SensitiveDataCodec.decode:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #119                // class java/lang/String
      51: putfield      #44                 // Field sourcePassword:Ljava/lang/String;
      54: aload_0
      55: getfield      #46                 // Field targetPassword:Ljava/lang/String;
      58: ifnull        78
      61: aload_0
      62: aload_1
      63: aload_0
      64: getfield      #46                 // Field targetPassword:Ljava/lang/String;
      67: invokeinterface #118,  2          // InterfaceMethod org/apache/activemq/artemis/utils/SensitiveDataCodec.decode:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #119                // class java/lang/String
      75: putfield      #46                 // Field targetPassword:Ljava/lang/String;
      78: goto          92
      81: astore_2
      82: getstatic     #120                // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.BUNDLE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle;
      85: aload_2
      86: invokeinterface #121,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.errorDecodingPassword:(Ljava/lang/Exception;)Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
      91: athrow
      92: return
    Exception table:
       from    to  target type
          30    78    81   Class java/lang/Exception

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #27                 // Field stoppingGuard:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #22                 // Field stopping:Z
      11: ifeq          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #22                 // Field stopping:Z
      22: aload_1
      23: monitorexit
      24: goto          32
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
      32: aload_0
      33: dup
      34: astore_1
      35: monitorenter
      36: getstatic     #17                 // Field trace:Z
      39: ifeq          69
      42: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      45: new           #63                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #122                // String Stopping
      54: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      69: aload_0
      70: getfield      #10                 // Field connectedSource:Z
      73: ifne          92
      76: aload_0
      77: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
      80: ifnull        92
      83: aload_0
      84: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
      87: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
      92: aload_0
      93: getfield      #9                  // Field connectedTarget:Z
      96: ifne          115
      99: aload_0
     100: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     103: ifnull        115
     106: aload_0
     107: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     110: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
     115: aload_0
     116: getfield      #21                 // Field lock:Ljava/lang/Object;
     119: dup
     120: astore_2
     121: monitorenter
     122: aload_0
     123: iconst_0
     124: putfield      #23                 // Field started:Z
     127: aload_0
     128: getfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
     131: invokeinterface #125,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     136: pop
     137: aload_2
     138: monitorexit
     139: goto          147
     142: astore_3
     143: aload_2
     144: monitorexit
     145: aload_3
     146: athrow
     147: aload_0
     148: getfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
     151: ldc2_w        #126                // long 60l
     154: getstatic     #128                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     157: invokeinterface #129,  4          // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
     162: istore_2
     163: iload_2
     164: ifne          177
     167: new           #70                 // class java/lang/Exception
     170: dup
     171: ldc           #130                // String fail to stop JMS Bridge
     173: invokespecial #131                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     176: athrow
     177: aload_0
     178: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
     181: ifnull        246
     184: getstatic     #17                 // Field trace:Z
     187: ifeq          200
     190: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     193: ldc           #133                // String Rolling back remaining tx
     195: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     200: aload_0
     201: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
     204: invokeinterface #134,  1          // InterfaceMethod javax/transaction/Transaction.rollback:()V
     209: goto          230
     212: astore_3
     213: getstatic     #17                 // Field trace:Z
     216: ifeq          230
     219: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     222: ldc           #135                // String Failed to rollback
     224: aload_3
     225: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     230: getstatic     #17                 // Field trace:Z
     233: ifeq          246
     236: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     239: ldc           #137                // String Rolled back remaining tx
     241: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     246: aload_0
     247: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     250: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
     255: goto          276
     258: astore_3
     259: getstatic     #17                 // Field trace:Z
     262: ifeq          276
     265: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     268: ldc           #138                // String Failed to close source conn
     270: aload_3
     271: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     276: aload_0
     277: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     280: ifnull        313
     283: aload_0
     284: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     287: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
     292: goto          313
     295: astore_3
     296: getstatic     #17                 // Field trace:Z
     299: ifeq          313
     302: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     305: ldc           #139                // String Failed to close target conn
     307: aload_3
     308: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     313: getstatic     #17                 // Field trace:Z
     316: ifeq          346
     319: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     322: new           #63                 // class java/lang/StringBuilder
     325: dup
     326: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     329: ldc           #140                // String Stopped
     331: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     334: aload_0
     335: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     338: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     341: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     346: aload_1
     347: monitorexit
     348: goto          358
     351: astore        4
     353: aload_1
     354: monitorexit
     355: aload         4
     357: athrow
     358: return
    Exception table:
       from    to  target type
           7    16    27   any
          17    24    27   any
          27    30    27   any
         122   139   142   any
         142   145   142   any
         200   209   212   Class java/lang/Exception
         246   255   258   Class java/lang/Exception
         283   292   295   Class java/lang/Exception
          36   348   351   any
         351   355   351   any

  public synchronized boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: ireturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #53                 // Field mbeanServer:Ljavax/management/MBeanServer;
       4: ifnull        43
       7: aload_0
       8: getfield      #57                 // Field objectName:Ljavax/management/ObjectName;
      11: ifnull        43
      14: aload_0
      15: getfield      #53                 // Field mbeanServer:Ljavax/management/MBeanServer;
      18: aload_0
      19: getfield      #57                 // Field objectName:Ljavax/management/ObjectName;
      22: invokeinterface #141,  2          // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      27: goto          43
      30: astore_1
      31: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      34: aload_0
      35: getfield      #57                 // Field objectName:Ljavax/management/ObjectName;
      38: invokeinterface #142,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.errorUnregisteringBridge:(Ljavax/management/ObjectName;)V
      43: return
    Exception table:
       from    to  target type
          14    27    30   Class java/lang/Exception

  public synchronized void pause() throws java.lang.Exception;
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          33
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: new           #63                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #143                // String Pausing
      18: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #21                 // Field lock:Ljava/lang/Object;
      37: dup
      38: astore_1
      39: monitorenter
      40: aload_0
      41: iconst_1
      42: putfield      #20                 // Field paused:Z
      45: aload_0
      46: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
      49: invokeinterface #144,  1          // InterfaceMethod javax/jms/Connection.stop:()V
      54: aload_1
      55: monitorexit
      56: goto          64
      59: astore_2
      60: aload_1
      61: monitorexit
      62: aload_2
      63: athrow
      64: getstatic     #17                 // Field trace:Z
      67: ifeq          97
      70: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      73: new           #63                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #145                // String Paused
      82: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      97: return
    Exception table:
       from    to  target type
          40    56    59   any
          59    62    59   any

  public synchronized void resume() throws java.lang.Exception;
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          33
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: new           #63                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #146                // String Resuming
      18: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #21                 // Field lock:Ljava/lang/Object;
      37: dup
      38: astore_1
      39: monitorenter
      40: aload_0
      41: iconst_0
      42: putfield      #20                 // Field paused:Z
      45: aload_0
      46: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
      49: invokeinterface #101,  1          // InterfaceMethod javax/jms/Connection.start:()V
      54: aload_1
      55: monitorexit
      56: goto          64
      59: astore_2
      60: aload_1
      61: monitorexit
      62: aload_2
      63: athrow
      64: getstatic     #17                 // Field trace:Z
      67: ifeq          97
      70: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      73: new           #63                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #147                // String Resumed
      82: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      97: return
    Exception table:
       from    to  target type
          40    56    59   any
          59    62    59   any

  public org.apache.activemq.artemis.jms.bridge.DestinationFactory getSourceDestinationFactory();
    Code:
       0: aload_0
       1: getfield      #41                 // Field sourceDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
       4: areturn

  public void setSourceDestinationFactory(org.apache.activemq.artemis.jms.bridge.DestinationFactory);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_1
       5: ldc           #149                // String TargetDestinationFactory
       7: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #41                 // Field sourceDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      15: return

  public org.apache.activemq.artemis.jms.bridge.DestinationFactory getTargetDestinationFactory();
    Code:
       0: aload_0
       1: getfield      #42                 // Field targetDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
       4: areturn

  public void setTargetDestinationFactory(org.apache.activemq.artemis.jms.bridge.DestinationFactory);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_1
       5: ldc           #149                // String TargetDestinationFactory
       7: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #42                 // Field targetDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      15: return

  public synchronized java.lang.String getSourceUsername();
    Code:
       0: aload_0
       1: getfield      #43                 // Field sourceUsername:Ljava/lang/String;
       4: areturn

  public synchronized void setSourceUsername(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_0
       5: aload_1
       6: putfield      #43                 // Field sourceUsername:Ljava/lang/String;
       9: return

  public synchronized java.lang.String getSourcePassword();
    Code:
       0: aload_0
       1: getfield      #44                 // Field sourcePassword:Ljava/lang/String;
       4: areturn

  public synchronized void setSourcePassword(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_0
       5: aload_1
       6: putfield      #44                 // Field sourcePassword:Ljava/lang/String;
       9: return

  public synchronized java.lang.String getTargetUsername();
    Code:
       0: aload_0
       1: getfield      #45                 // Field targetUsername:Ljava/lang/String;
       4: areturn

  public synchronized void setTargetUsername(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_0
       5: aload_1
       6: putfield      #45                 // Field targetUsername:Ljava/lang/String;
       9: return

  public synchronized java.lang.String getTargetPassword();
    Code:
       0: aload_0
       1: getfield      #46                 // Field targetPassword:Ljava/lang/String;
       4: areturn

  public synchronized void setTargetPassword(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_0
       5: aload_1
       6: putfield      #46                 // Field targetPassword:Ljava/lang/String;
       9: return

  public synchronized java.lang.String getSelector();
    Code:
       0: aload_0
       1: getfield      #47                 // Field selector:Ljava/lang/String;
       4: areturn

  public synchronized void setSelector(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_0
       5: aload_1
       6: putfield      #47                 // Field selector:Ljava/lang/String;
       9: return

  public synchronized long getFailureRetryInterval();
    Code:
       0: aload_0
       1: getfield      #6                  // Field failureRetryInterval:J
       4: lreturn

  public synchronized void setFailureRetryInterval(long);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: lload_1
       5: lconst_1
       6: lcmp
       7: ifge          20
      10: new           #74                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #151                // String FailureRetryInterval must be >= 1
      16: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: lload_1
      22: putfield      #6                  // Field failureRetryInterval:J
      25: return

  public synchronized int getMaxRetries();
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxRetries:I
       4: ireturn

  public synchronized void setMaxRetries(int);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: iload_1
       5: i2l
       6: ldc           #152                // String MaxRetries
       8: invokestatic  #153                // Method checkValidValue:(JLjava/lang/String;)V
      11: aload_0
      12: iload_1
      13: putfield      #7                  // Field maxRetries:I
      16: return

  public synchronized org.apache.activemq.artemis.jms.bridge.QualityOfServiceMode getQualityOfServiceMode();
    Code:
       0: aload_0
       1: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
       4: areturn

  public synchronized void setQualityOfServiceMode(org.apache.activemq.artemis.jms.bridge.QualityOfServiceMode);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_1
       5: ldc           #154                // String QualityOfServiceMode
       7: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      15: return

  public synchronized int getMaxBatchSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxBatchSize:I
       4: ireturn

  public synchronized void setMaxBatchSize(int);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: iload_1
       5: invokestatic  #155                // Method checkMaxBatchSize:(I)V
       8: aload_0
       9: iload_1
      10: putfield      #13                 // Field maxBatchSize:I
      13: return

  public synchronized long getMaxBatchTime();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxBatchTime:J
       4: lreturn

  public synchronized void setMaxBatchTime(long);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: lload_1
       5: ldc           #156                // String MaxBatchTime
       7: invokestatic  #153                // Method checkValidValue:(JLjava/lang/String;)V
      10: aload_0
      11: lload_1
      12: putfield      #14                 // Field maxBatchTime:J
      15: return

  public synchronized java.lang.String getSubscriptionName();
    Code:
       0: aload_0
       1: getfield      #49                 // Field subName:Ljava/lang/String;
       4: areturn

  public synchronized void setSubscriptionName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_0
       5: aload_1
       6: putfield      #49                 // Field subName:Ljava/lang/String;
       9: return

  public synchronized java.lang.String getClientID();
    Code:
       0: aload_0
       1: getfield      #50                 // Field clientID:Ljava/lang/String;
       4: areturn

  public synchronized void setClientID(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_0
       5: aload_1
       6: putfield      #50                 // Field clientID:Ljava/lang/String;
       9: return

  public boolean isAddMessageIDInHeader();
    Code:
       0: aload_0
       1: getfield      #51                 // Field addMessageIDInHeader:Z
       4: ireturn

  public void setAddMessageIDInHeader(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field addMessageIDInHeader:Z
       5: return

  public synchronized boolean isPaused();
    Code:
       0: aload_0
       1: getfield      #20                 // Field paused:Z
       4: ireturn

  public synchronized boolean isFailed();
    Code:
       0: aload_0
       1: getfield      #19                 // Field failed:Z
       4: ireturn

  public synchronized void setSourceConnectionFactoryFactory(org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_1
       5: ldc           #157                // String SourceConnectionFactoryFactory
       7: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
      15: return

  public synchronized void setTargetConnectionFactoryFactory(org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory);
    Code:
       0: aload_0
       1: invokespecial #148                // Method checkBridgeNotStarted:()V
       4: aload_1
       5: ldc           #158                // String TargetConnectionFactoryFactory
       7: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #40                 // Field targetCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
      15: return

  public void setTransactionManager(javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
       5: return

  private synchronized void checkParams();
    Code:
       0: aload_0
       1: getfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
       4: ldc           #159                // String sourceCff
       6: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #40                 // Field targetCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
      13: ldc           #160                // String targetCff
      15: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: getfield      #41                 // Field sourceDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      22: ldc           #161                // String sourceDestinationFactory
      24: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      27: aload_0
      28: getfield      #42                 // Field targetDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      31: ldc           #162                // String targetDestinationFactory
      33: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      36: aload_0
      37: getfield      #6                  // Field failureRetryInterval:J
      40: ldc           #163                // String failureRetryInterval
      42: invokestatic  #153                // Method checkValidValue:(JLjava/lang/String;)V
      45: aload_0
      46: getfield      #7                  // Field maxRetries:I
      49: i2l
      50: ldc           #164                // String maxRetries
      52: invokestatic  #153                // Method checkValidValue:(JLjava/lang/String;)V
      55: aload_0
      56: getfield      #6                  // Field failureRetryInterval:J
      59: ldc2_w        #102                // long -1l
      62: lcmp
      63: ifne          83
      66: aload_0
      67: getfield      #7                  // Field maxRetries:I
      70: ifle          83
      73: new           #74                 // class java/lang/IllegalArgumentException
      76: dup
      77: ldc           #165                // String If failureRetryInterval == -1 maxRetries must be set to -1
      79: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_0
      84: getfield      #13                 // Field maxBatchSize:I
      87: invokestatic  #155                // Method checkMaxBatchSize:(I)V
      90: aload_0
      91: getfield      #14                 // Field maxBatchTime:J
      94: ldc           #166                // String maxBatchTime
      96: invokestatic  #153                // Method checkValidValue:(JLjava/lang/String;)V
      99: aload_0
     100: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     103: ldc           #167                // String qualityOfServiceMode
     105: invokestatic  #150                // Method checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
     108: return

  private static void checkNotNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     31
       4: new           #74                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #63                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #168                // String  cannot be null
      21: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: return

  private void checkBridgeNotStarted();
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: ifeq          17
       7: new           #71                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #169                // String Cannot set bridge attributes while it is started
      13: invokespecial #170                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private static void checkValidValue(long, java.lang.String);
    Code:
       0: lload_0
       1: ldc2_w        #102                // long -1l
       4: lcmp
       5: ifeq          41
       8: lload_0
       9: lconst_0
      10: lcmp
      11: ifgt          41
      14: new           #74                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #63                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      25: aload_2
      26: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #171                // String  must be > 0 or -1
      31: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  private static void checkMaxBatchSize(int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     15
       5: new           #74                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #172                // String maxBatchSize must be >= 1
      11: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: return

  private void enlistResources(javax.transaction.Transaction) throws java.lang.Exception;
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: ldc           #173                // String Enlisting resources in tx
      11: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
      20: checkcast     #175                // class javax/jms/XASession
      23: invokeinterface #176,  1          // InterfaceMethod javax/jms/XASession.getXAResource:()Ljavax/transaction/xa/XAResource;
      28: astore_2
      29: aload_1
      30: aload_2
      31: invokeinterface #177,  2          // InterfaceMethod javax/transaction/Transaction.enlistResource:(Ljavax/transaction/xa/XAResource;)Z
      36: pop
      37: aload_0
      38: getfield      #178                // Field targetSession:Ljavax/jms/Session;
      41: checkcast     #175                // class javax/jms/XASession
      44: invokeinterface #176,  1          // InterfaceMethod javax/jms/XASession.getXAResource:()Ljavax/transaction/xa/XAResource;
      49: astore_3
      50: aload_1
      51: aload_3
      52: invokeinterface #177,  2          // InterfaceMethod javax/transaction/Transaction.enlistResource:(Ljavax/transaction/xa/XAResource;)Z
      57: pop
      58: getstatic     #17                 // Field trace:Z
      61: ifeq          74
      64: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      67: ldc           #179                // String Enlisted resources in tx
      69: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      74: return

  private void delistResources(javax.transaction.Transaction);
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: ldc           #180                // String Delisting resources from tx
      11: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
      20: checkcast     #175                // class javax/jms/XASession
      23: invokeinterface #176,  1          // InterfaceMethod javax/jms/XASession.getXAResource:()Ljavax/transaction/xa/XAResource;
      28: astore_2
      29: aload_1
      30: aload_2
      31: ldc           #182                // int 67108864
      33: invokeinterface #183,  3          // InterfaceMethod javax/transaction/Transaction.delistResource:(Ljavax/transaction/xa/XAResource;I)Z
      38: pop
      39: goto          60
      42: astore_3
      43: getstatic     #17                 // Field trace:Z
      46: ifeq          60
      49: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      52: ldc           #184                // String Failed to delist source resource
      54: aload_3
      55: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      60: aload_0
      61: getfield      #178                // Field targetSession:Ljavax/jms/Session;
      64: checkcast     #175                // class javax/jms/XASession
      67: invokeinterface #176,  1          // InterfaceMethod javax/jms/XASession.getXAResource:()Ljavax/transaction/xa/XAResource;
      72: astore_3
      73: aload_1
      74: aload_3
      75: ldc           #182                // int 67108864
      77: invokeinterface #183,  3          // InterfaceMethod javax/transaction/Transaction.delistResource:(Ljavax/transaction/xa/XAResource;I)Z
      82: pop
      83: goto          106
      86: astore        4
      88: getstatic     #17                 // Field trace:Z
      91: ifeq          106
      94: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      97: ldc           #185                // String Failed to delist target resource
      99: aload         4
     101: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     106: getstatic     #17                 // Field trace:Z
     109: ifeq          122
     112: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     115: ldc           #186                // String Delisted resources from tx
     117: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     122: return
    Exception table:
       from    to  target type
          29    39    42   Class java/lang/Exception
          73    83    86   Class java/lang/Exception

  private javax.transaction.Transaction startTx() throws java.lang.Exception;
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: ldc           #187                // String Starting JTA transaction
      11: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
      20: ifnonnull     30
      23: aload_0
      24: invokestatic  #92                 // Method org/apache/activemq/artemis/service/extensions/ServiceUtils.getTransactionManager:()Ljavax/transaction/TransactionManager;
      27: putfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
      30: aload_0
      31: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
      34: ldc           #188                // int 315360000
      36: invokeinterface #189,  2          // InterfaceMethod javax/transaction/TransactionManager.setTransactionTimeout:(I)V
      41: aload_0
      42: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
      45: invokeinterface #190,  1          // InterfaceMethod javax/transaction/TransactionManager.begin:()V
      50: aload_0
      51: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
      54: invokeinterface #191,  1          // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      59: astore_1
      60: aload_0
      61: getfield      #91                 // Field tm:Ljavax/transaction/TransactionManager;
      64: invokeinterface #96,  1           // InterfaceMethod javax/transaction/TransactionManager.suspend:()Ljavax/transaction/Transaction;
      69: pop
      70: getstatic     #17                 // Field trace:Z
      73: ifeq          86
      76: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      79: ldc           #192                // String Started JTA transaction
      81: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      86: aload_1
      87: areturn

  private javax.jms.Connection createConnection(java.lang.String, java.lang.String, org.apache.activemq.artemis.jms.bridge.ConnectionFactoryFactory, java.lang.String, boolean, boolean) throws java.lang.Exception;
    Code:
       0: aload_3
       1: invokeinterface #193,  1          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory.createConnectionFactory:()Ljava/lang/Object;
       6: astore        8
       8: aload         8
      10: instanceof    #194                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      13: ifeq          43
      16: aload_0
      17: getfield      #195                // Field registry:Lorg/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry;
      20: ifnull        43
      23: aload_0
      24: getfield      #195                // Field registry:Lorg/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry;
      27: aload         8
      29: checkcast     #194                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      32: aload_1
      33: aload_2
      34: aconst_null
      35: invokestatic  #196                // Method org/apache/activemq/artemis/service/extensions/xa/recovery/XARecoveryConfig.newConfig:(Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lorg/apache/activemq/artemis/service/extensions/xa/recovery/XARecoveryConfig;
      38: invokeinterface #197,  2          // InterfaceMethod org/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry.register:(Lorg/apache/activemq/artemis/service/extensions/xa/recovery/XARecoveryConfig;)V
      43: aload_0
      44: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      47: getstatic     #89                 // Field org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.ONCE_AND_ONLY_ONCE:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      50: if_acmpne     71
      53: aload         8
      55: instanceof    #198                // class javax/jms/XAConnectionFactory
      58: ifne          71
      61: new           #74                 // class java/lang/IllegalArgumentException
      64: dup
      65: ldc           #199                // String Connection factory must be XAConnectionFactory
      67: invokespecial #76                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_1
      72: ifnonnull     142
      75: iload         5
      77: ifeq          111
      80: getstatic     #17                 // Field trace:Z
      83: ifeq          96
      86: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      89: ldc           #200                // String Creating an XA connection
      91: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      96: aload         8
      98: checkcast     #198                // class javax/jms/XAConnectionFactory
     101: invokeinterface #201,  1          // InterfaceMethod javax/jms/XAConnectionFactory.createXAConnection:()Ljavax/jms/XAConnection;
     106: astore        7
     108: goto          210
     111: getstatic     #17                 // Field trace:Z
     114: ifeq          127
     117: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     120: ldc           #202                // String Creating a non XA connection
     122: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     127: aload         8
     129: checkcast     #203                // class javax/jms/ConnectionFactory
     132: invokeinterface #204,  1          // InterfaceMethod javax/jms/ConnectionFactory.createConnection:()Ljavax/jms/Connection;
     137: astore        7
     139: goto          210
     142: iload         5
     144: ifeq          180
     147: getstatic     #17                 // Field trace:Z
     150: ifeq          163
     153: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     156: ldc           #200                // String Creating an XA connection
     158: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     163: aload         8
     165: checkcast     #198                // class javax/jms/XAConnectionFactory
     168: aload_1
     169: aload_2
     170: invokeinterface #205,  3          // InterfaceMethod javax/jms/XAConnectionFactory.createXAConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAConnection;
     175: astore        7
     177: goto          210
     180: getstatic     #17                 // Field trace:Z
     183: ifeq          196
     186: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     189: ldc           #202                // String Creating a non XA connection
     191: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     196: aload         8
     198: checkcast     #203                // class javax/jms/ConnectionFactory
     201: aload_1
     202: aload_2
     203: invokeinterface #206,  3          // InterfaceMethod javax/jms/ConnectionFactory.createConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/Connection;
     208: astore        7
     210: aload         4
     212: ifnull        224
     215: aload         7
     217: aload         4
     219: invokeinterface #207,  2          // InterfaceMethod javax/jms/Connection.setClientID:(Ljava/lang/String;)V
     224: iconst_0
     225: istore        9
     227: aconst_null
     228: astore        10
     230: aload         7
     232: instanceof    #208                // class org/apache/activemq/artemis/jms/client/ActiveMQConnection
     235: ifeq          283
     238: aload         8
     240: checkcast     #194                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
     243: astore        11
     245: aload         11
     247: invokevirtual #209                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.isHA:()Z
     250: istore        9
     252: iload         9
     254: ifeq          283
     257: aload         7
     259: checkcast     #208                // class org/apache/activemq/artemis/jms/client/ActiveMQConnection
     262: astore        12
     264: new           #210                // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BridgeFailoverListener
     267: dup
     268: aload_0
     269: iload         6
     271: invokespecial #211                // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BridgeFailoverListener."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;Z)V
     274: astore        10
     276: aload         12
     278: aload         10
     280: invokevirtual #212                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection.setFailoverListener:(Lorg/apache/activemq/artemis/api/core/client/FailoverEventListener;)V
     283: aload         7
     285: new           #213                // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BridgeExceptionListener
     288: dup
     289: aload_0
     290: iload         9
     292: aload         10
     294: iload         6
     296: invokespecial #214                // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BridgeExceptionListener."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;ZLorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$BridgeFailoverListener;Z)V
     299: invokeinterface #215,  2          // InterfaceMethod javax/jms/Connection.setExceptionListener:(Ljavax/jms/ExceptionListener;)V
     304: aload         7
     306: areturn

  private boolean setupJMSObjects();
    Code:
       0: aload_0
       1: getfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
       4: aload_0
       5: getfield      #40                 // Field targetCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
       8: if_acmpne     19
      11: aload_0
      12: iconst_1
      13: putfield      #216                // Field forwardMode:I
      16: goto          42
      19: aload_0
      20: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      23: getstatic     #89                 // Field org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.ONCE_AND_ONLY_ONCE:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      26: if_acmpne     37
      29: aload_0
      30: iconst_0
      31: putfield      #216                // Field forwardMode:I
      34: goto          42
      37: aload_0
      38: iconst_2
      39: putfield      #216                // Field forwardMode:I
      42: aload_0
      43: aload_0
      44: getfield      #41                 // Field sourceDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      47: invokeinterface #217,  1          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/DestinationFactory.createDestination:()Ljavax/jms/Destination;
      52: putfield      #218                // Field sourceDestination:Ljavax/jms/Destination;
      55: aload_0
      56: aload_0
      57: getfield      #42                 // Field targetDestinationFactory:Lorg/apache/activemq/artemis/jms/bridge/DestinationFactory;
      60: invokeinterface #217,  1          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/DestinationFactory.createDestination:()Ljavax/jms/Destination;
      65: putfield      #219                // Field targetDestination:Ljavax/jms/Destination;
      68: aload_0
      69: getfield      #216                // Field forwardMode:I
      72: iconst_1
      73: if_icmpne     120
      76: aload_0
      77: aload_0
      78: aload_0
      79: getfield      #43                 // Field sourceUsername:Ljava/lang/String;
      82: aload_0
      83: getfield      #44                 // Field sourcePassword:Ljava/lang/String;
      86: aload_0
      87: getfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
      90: aload_0
      91: getfield      #50                 // Field clientID:Ljava/lang/String;
      94: iconst_0
      95: iconst_1
      96: invokespecial #220                // Method createConnection:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Ljava/lang/String;ZZ)Ljavax/jms/Connection;
      99: putfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     102: aload_0
     103: aload_0
     104: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     107: iconst_1
     108: iconst_0
     109: invokeinterface #222,  3          // InterfaceMethod javax/jms/Connection.createSession:(ZI)Ljavax/jms/Session;
     114: putfield      #174                // Field sourceSession:Ljavax/jms/Session;
     117: goto          281
     120: aload_0
     121: getfield      #216                // Field forwardMode:I
     124: ifne          188
     127: getstatic     #17                 // Field trace:Z
     130: ifeq          143
     133: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     136: ldc           #223                // String Creating XA source session
     138: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     143: aload_0
     144: aload_0
     145: aload_0
     146: getfield      #43                 // Field sourceUsername:Ljava/lang/String;
     149: aload_0
     150: getfield      #44                 // Field sourcePassword:Ljava/lang/String;
     153: aload_0
     154: getfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
     157: aload_0
     158: getfield      #50                 // Field clientID:Ljava/lang/String;
     161: iconst_1
     162: iconst_1
     163: invokespecial #220                // Method createConnection:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Ljava/lang/String;ZZ)Ljavax/jms/Connection;
     166: putfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     169: aload_0
     170: aload_0
     171: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     174: checkcast     #224                // class javax/jms/XAConnection
     177: invokeinterface #225,  1          // InterfaceMethod javax/jms/XAConnection.createXASession:()Ljavax/jms/XASession;
     182: putfield      #174                // Field sourceSession:Ljavax/jms/Session;
     185: goto          281
     188: getstatic     #17                 // Field trace:Z
     191: ifeq          204
     194: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     197: ldc           #226                // String Creating non XA source session
     199: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     204: aload_0
     205: aload_0
     206: aload_0
     207: getfield      #43                 // Field sourceUsername:Ljava/lang/String;
     210: aload_0
     211: getfield      #44                 // Field sourcePassword:Ljava/lang/String;
     214: aload_0
     215: getfield      #39                 // Field sourceCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
     218: aload_0
     219: getfield      #50                 // Field clientID:Ljava/lang/String;
     222: iconst_0
     223: iconst_1
     224: invokespecial #220                // Method createConnection:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Ljava/lang/String;ZZ)Ljavax/jms/Connection;
     227: putfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     230: aload_0
     231: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     234: getstatic     #227                // Field org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.AT_MOST_ONCE:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     237: if_acmpne     266
     240: aload_0
     241: getfield      #13                 // Field maxBatchSize:I
     244: iconst_1
     245: if_icmpne     266
     248: aload_0
     249: aload_0
     250: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     253: iconst_0
     254: iconst_1
     255: invokeinterface #222,  3          // InterfaceMethod javax/jms/Connection.createSession:(ZI)Ljavax/jms/Session;
     260: putfield      #174                // Field sourceSession:Ljavax/jms/Session;
     263: goto          281
     266: aload_0
     267: aload_0
     268: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     271: iconst_0
     272: iconst_2
     273: invokeinterface #222,  3          // InterfaceMethod javax/jms/Connection.createSession:(ZI)Ljavax/jms/Session;
     278: putfield      #174                // Field sourceSession:Ljavax/jms/Session;
     281: aload_0
     282: getfield      #49                 // Field subName:Ljava/lang/String;
     285: ifnonnull     340
     288: aload_0
     289: getfield      #47                 // Field selector:Ljava/lang/String;
     292: ifnonnull     315
     295: aload_0
     296: aload_0
     297: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
     300: aload_0
     301: getfield      #218                // Field sourceDestination:Ljavax/jms/Destination;
     304: invokeinterface #228,  2          // InterfaceMethod javax/jms/Session.createConsumer:(Ljavax/jms/Destination;)Ljavax/jms/MessageConsumer;
     309: putfield      #18                 // Field sourceConsumer:Ljavax/jms/MessageConsumer;
     312: goto          403
     315: aload_0
     316: aload_0
     317: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
     320: aload_0
     321: getfield      #218                // Field sourceDestination:Ljavax/jms/Destination;
     324: aload_0
     325: getfield      #47                 // Field selector:Ljava/lang/String;
     328: iconst_0
     329: invokeinterface #229,  4          // InterfaceMethod javax/jms/Session.createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;Z)Ljavax/jms/MessageConsumer;
     334: putfield      #18                 // Field sourceConsumer:Ljavax/jms/MessageConsumer;
     337: goto          403
     340: aload_0
     341: getfield      #47                 // Field selector:Ljava/lang/String;
     344: ifnonnull     374
     347: aload_0
     348: aload_0
     349: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
     352: aload_0
     353: getfield      #218                // Field sourceDestination:Ljavax/jms/Destination;
     356: checkcast     #230                // class javax/jms/Topic
     359: aload_0
     360: getfield      #49                 // Field subName:Ljava/lang/String;
     363: invokeinterface #231,  3          // InterfaceMethod javax/jms/Session.createDurableSubscriber:(Ljavax/jms/Topic;Ljava/lang/String;)Ljavax/jms/TopicSubscriber;
     368: putfield      #18                 // Field sourceConsumer:Ljavax/jms/MessageConsumer;
     371: goto          403
     374: aload_0
     375: aload_0
     376: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
     379: aload_0
     380: getfield      #218                // Field sourceDestination:Ljavax/jms/Destination;
     383: checkcast     #230                // class javax/jms/Topic
     386: aload_0
     387: getfield      #49                 // Field subName:Ljava/lang/String;
     390: aload_0
     391: getfield      #47                 // Field selector:Ljava/lang/String;
     394: iconst_0
     395: invokeinterface #232,  5          // InterfaceMethod javax/jms/Session.createDurableSubscriber:(Ljavax/jms/Topic;Ljava/lang/String;Ljava/lang/String;Z)Ljavax/jms/TopicSubscriber;
     400: putfield      #18                 // Field sourceConsumer:Ljavax/jms/MessageConsumer;
     403: aload_0
     404: getfield      #216                // Field forwardMode:I
     407: iconst_1
     408: if_icmpne     430
     411: aload_0
     412: aload_0
     413: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     416: putfield      #124                // Field targetConn:Ljavax/jms/Connection;
     419: aload_0
     420: aload_0
     421: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
     424: putfield      #178                // Field targetSession:Ljavax/jms/Session;
     427: goto          571
     430: aload_0
     431: getfield      #216                // Field forwardMode:I
     434: ifne          495
     437: getstatic     #17                 // Field trace:Z
     440: ifeq          453
     443: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     446: ldc           #233                // String Creating XA dest session
     448: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     453: aload_0
     454: aload_0
     455: aload_0
     456: getfield      #45                 // Field targetUsername:Ljava/lang/String;
     459: aload_0
     460: getfield      #46                 // Field targetPassword:Ljava/lang/String;
     463: aload_0
     464: getfield      #40                 // Field targetCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
     467: aconst_null
     468: iconst_1
     469: iconst_0
     470: invokespecial #220                // Method createConnection:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Ljava/lang/String;ZZ)Ljavax/jms/Connection;
     473: putfield      #124                // Field targetConn:Ljavax/jms/Connection;
     476: aload_0
     477: aload_0
     478: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     481: checkcast     #224                // class javax/jms/XAConnection
     484: invokeinterface #225,  1          // InterfaceMethod javax/jms/XAConnection.createXASession:()Ljavax/jms/XASession;
     489: putfield      #178                // Field targetSession:Ljavax/jms/Session;
     492: goto          571
     495: getstatic     #17                 // Field trace:Z
     498: ifeq          511
     501: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     504: ldc           #234                // String Creating non XA dest session
     506: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     511: aload_0
     512: getfield      #13                 // Field maxBatchSize:I
     515: iconst_1
     516: if_icmple     523
     519: iconst_1
     520: goto          524
     523: iconst_0
     524: istore_1
     525: aload_0
     526: aload_0
     527: aload_0
     528: getfield      #45                 // Field targetUsername:Ljava/lang/String;
     531: aload_0
     532: getfield      #46                 // Field targetPassword:Ljava/lang/String;
     535: aload_0
     536: getfield      #40                 // Field targetCff:Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;
     539: aconst_null
     540: iconst_0
     541: iconst_0
     542: invokespecial #220                // Method createConnection:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/jms/bridge/ConnectionFactoryFactory;Ljava/lang/String;ZZ)Ljavax/jms/Connection;
     545: putfield      #124                // Field targetConn:Ljavax/jms/Connection;
     548: aload_0
     549: aload_0
     550: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     553: iload_1
     554: iload_1
     555: ifeq          562
     558: iconst_0
     559: goto          563
     562: iconst_1
     563: invokeinterface #222,  3          // InterfaceMethod javax/jms/Connection.createSession:(ZI)Ljavax/jms/Session;
     568: putfield      #178                // Field targetSession:Ljavax/jms/Session;
     571: aload_0
     572: getfield      #216                // Field forwardMode:I
     575: ifne          610
     578: getstatic     #17                 // Field trace:Z
     581: ifeq          594
     584: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     587: ldc           #187                // String Starting JTA transaction
     589: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     594: aload_0
     595: aload_0
     596: invokespecial #235                // Method startTx:()Ljavax/transaction/Transaction;
     599: putfield      #132                // Field tx:Ljavax/transaction/Transaction;
     602: aload_0
     603: aload_0
     604: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
     607: invokespecial #236                // Method enlistResources:(Ljavax/transaction/Transaction;)V
     610: aload_0
     611: aload_0
     612: getfield      #178                // Field targetSession:Ljavax/jms/Session;
     615: aconst_null
     616: invokeinterface #237,  2          // InterfaceMethod javax/jms/Session.createProducer:(Ljavax/jms/Destination;)Ljavax/jms/MessageProducer;
     621: putfield      #238                // Field targetProducer:Ljavax/jms/MessageProducer;
     624: iconst_1
     625: ireturn
     626: astore_1
     627: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     630: aload_1
     631: invokeinterface #239,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.bridgeConnectError:(Ljava/lang/Exception;)V
     636: aload_0
     637: invokespecial #8                  // Method cleanup:()V
     640: iconst_0
     641: ireturn
    Exception table:
       from    to  target type
           0   625   626   Class java/lang/Exception

  private void cleanup();
    Code:
       0: aload_0
       1: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
       4: invokeinterface #144,  1          // InterfaceMethod javax/jms/Connection.stop:()V
       9: goto          30
      12: astore_1
      13: getstatic     #17                 // Field trace:Z
      16: ifeq          30
      19: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      22: ldc           #241                // String Failed to stop source connection
      24: aload_1
      25: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      30: aload_0
      31: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
      34: ifnull        96
      37: aload_0
      38: aload_0
      39: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
      42: invokespecial #242                // Method delistResources:(Ljavax/transaction/Transaction;)V
      45: goto          66
      48: astore_1
      49: getstatic     #17                 // Field trace:Z
      52: ifeq          66
      55: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      58: ldc           #243                // String Failed to delist resources
      60: aload_1
      61: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      66: aload_0
      67: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
      70: invokeinterface #134,  1          // InterfaceMethod javax/transaction/Transaction.rollback:()V
      75: goto          96
      78: astore_1
      79: getstatic     #17                 // Field trace:Z
      82: ifeq          96
      85: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      88: ldc           #135                // String Failed to rollback
      90: aload_1
      91: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      96: aload_0
      97: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
     100: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
     105: goto          126
     108: astore_1
     109: getstatic     #17                 // Field trace:Z
     112: ifeq          126
     115: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     118: ldc           #244                // String Failed to close source connection
     120: aload_1
     121: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     126: aload_0
     127: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     130: ifnull        142
     133: aload_0
     134: getfield      #124                // Field targetConn:Ljavax/jms/Connection;
     137: invokeinterface #123,  1          // InterfaceMethod javax/jms/Connection.close:()V
     142: goto          163
     145: astore_1
     146: getstatic     #17                 // Field trace:Z
     149: ifeq          163
     152: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     155: ldc           #245                // String Failed to close target connection
     157: aload_1
     158: invokeinterface #136,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     163: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Throwable
          37    45    48   Class java/lang/Throwable
          66    75    78   Class java/lang/Throwable
          96   105   108   Class java/lang/Throwable
         126   142   145   Class java/lang/Throwable

  private void pause(long);
    Code:
       0: invokestatic  #109                // Method java/lang/System.currentTimeMillis:()J
       3: lstore_3
       4: invokestatic  #109                // Method java/lang/System.currentTimeMillis:()J
       7: lload_3
       8: lsub
       9: aload_0
      10: getfield      #6                  // Field failureRetryInterval:J
      13: lcmp
      14: ifge          32
      17: aload_0
      18: getfield      #6                  // Field failureRetryInterval:J
      21: invokestatic  #246                // Method java/lang/Thread.sleep:(J)V
      24: goto          4
      27: astore        5
      29: goto          4
      32: return
    Exception table:
       from    to  target type
          17    24    27   Class java/lang/InterruptedException

  private boolean setupJMSObjectsWithRetry();
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: ldc           #248                // String Setting up connections
      11: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      16: iconst_0
      17: istore_1
      18: aload_0
      19: getfield      #22                 // Field stopping:Z
      22: ifne          81
      25: aload_0
      26: invokespecial #97                 // Method setupJMSObjects:()Z
      29: istore_2
      30: iload_2
      31: ifeq          36
      34: iconst_1
      35: ireturn
      36: iinc          1, 1
      39: aload_0
      40: getfield      #7                  // Field maxRetries:I
      43: iconst_m1
      44: if_icmpeq     58
      47: iload_1
      48: aload_0
      49: getfield      #7                  // Field maxRetries:I
      52: if_icmpne     58
      55: goto          81
      58: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      61: aload_0
      62: getfield      #6                  // Field failureRetryInterval:J
      65: invokeinterface #249,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.failedToSetUpBridge:(J)V
      70: aload_0
      71: aload_0
      72: getfield      #6                  // Field failureRetryInterval:J
      75: invokespecial #5                  // Method pause:(J)V
      78: goto          18
      81: iconst_0
      82: ireturn

  private void sendBatch();
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          44
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: new           #63                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #250                // String Sending batch of
      18: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #16                 // Field messages:Ljava/util/LinkedList;
      25: invokevirtual #251                // Method java/util/LinkedList.size:()I
      28: invokevirtual #252                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #253                // String  messages
      33: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      44: aload_0
      45: getfield      #20                 // Field paused:Z
      48: ifeq          68
      51: getstatic     #17                 // Field trace:Z
      54: ifeq          67
      57: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      60: ldc           #254                // String Paused, so not sending now
      62: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      67: return
      68: aload_0
      69: getfield      #216                // Field forwardMode:I
      72: iconst_1
      73: if_icmpne     83
      76: aload_0
      77: invokespecial #255                // Method sendBatchLocalTx:()V
      80: goto          101
      83: aload_0
      84: getfield      #216                // Field forwardMode:I
      87: ifne          97
      90: aload_0
      91: invokespecial #256                // Method sendBatchXA:()V
      94: goto          101
      97: aload_0
      98: invokespecial #257                // Method sendBatchNonTransacted:()V
     101: return

  private void sendBatchNonTransacted();
    Code:
       0: aload_0
       1: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
       4: getstatic     #89                 // Field org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.ONCE_AND_ONLY_ONCE:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
       7: if_acmpeq     28
      10: aload_0
      11: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      14: getstatic     #227                // Field org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.AT_MOST_ONCE:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
      17: if_acmpne     77
      20: aload_0
      21: getfield      #13                 // Field maxBatchSize:I
      24: iconst_1
      25: if_icmple     77
      28: getstatic     #17                 // Field trace:Z
      31: ifeq          45
      34: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      37: ldc_w         #258                // String Client acking source session
      40: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #16                 // Field messages:Ljava/util/LinkedList;
      49: invokevirtual #259                // Method java/util/LinkedList.getLast:()Ljava/lang/Object;
      52: checkcast     #260                // class javax/jms/Message
      55: invokeinterface #261,  1          // InterfaceMethod javax/jms/Message.acknowledge:()V
      60: getstatic     #17                 // Field trace:Z
      63: ifeq          77
      66: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      69: ldc_w         #262                // String Client acked source session
      72: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      77: iconst_0
      78: istore_1
      79: aload_0
      80: invokespecial #263                // Method sendMessages:()V
      83: goto          121
      86: astore_2
      87: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      90: new           #63                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      97: aload_2
      98: invokevirtual #265                // Method javax/transaction/TransactionRolledbackException.getMessage:()Ljava/lang/String;
     101: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc_w         #266                // String , retrying TX
     107: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: aload_2
     114: invokeinterface #267,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     119: iconst_1
     120: istore_1
     121: iload_1
     122: ifne          77
     125: aload_0
     126: getfield      #13                 // Field maxBatchSize:I
     129: iconst_1
     130: if_icmple     176
     133: getstatic     #17                 // Field trace:Z
     136: ifeq          150
     139: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     142: ldc_w         #268                // String Committing target session
     145: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     150: aload_0
     151: getfield      #178                // Field targetSession:Ljavax/jms/Session;
     154: invokeinterface #269,  1          // InterfaceMethod javax/jms/Session.commit:()V
     159: getstatic     #17                 // Field trace:Z
     162: ifeq          176
     165: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     168: ldc_w         #270                // String Committed target session
     171: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     176: aload_0
     177: getfield      #48                 // Field qualityOfServiceMode:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     180: getstatic     #271                // Field org/apache/activemq/artemis/jms/bridge/QualityOfServiceMode.DUPLICATES_OK:Lorg/apache/activemq/artemis/jms/bridge/QualityOfServiceMode;
     183: if_acmpne     235
     186: getstatic     #17                 // Field trace:Z
     189: ifeq          203
     192: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     195: ldc_w         #258                // String Client acking source session
     198: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     203: aload_0
     204: getfield      #16                 // Field messages:Ljava/util/LinkedList;
     207: invokevirtual #259                // Method java/util/LinkedList.getLast:()Ljava/lang/Object;
     210: checkcast     #260                // class javax/jms/Message
     213: invokeinterface #261,  1          // InterfaceMethod javax/jms/Message.acknowledge:()V
     218: getstatic     #17                 // Field trace:Z
     221: ifeq          235
     224: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     227: ldc_w         #262                // String Client acked source session
     230: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     235: aload_0
     236: getfield      #16                 // Field messages:Ljava/util/LinkedList;
     239: invokevirtual #272                // Method java/util/LinkedList.clear:()V
     242: goto          302
     245: astore_1
     246: aload_0
     247: getfield      #22                 // Field stopping:Z
     250: ifne          262
     253: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     256: aload_1
     257: invokeinterface #273,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.bridgeAckError:(Ljava/lang/Exception;)V
     262: aload_0
     263: getfield      #10                 // Field connectedSource:Z
     266: ifeq          282
     269: aload_0
     270: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
     273: invokeinterface #274,  1          // InterfaceMethod javax/jms/Session.recover:()V
     278: goto          282
     281: astore_2
     282: aload_0
     283: getfield      #16                 // Field messages:Ljava/util/LinkedList;
     286: invokevirtual #272                // Method java/util/LinkedList.clear:()V
     289: goto          302
     292: astore_3
     293: aload_0
     294: getfield      #16                 // Field messages:Ljava/util/LinkedList;
     297: invokevirtual #272                // Method java/util/LinkedList.clear:()V
     300: aload_3
     301: athrow
     302: return
    Exception table:
       from    to  target type
          79    83    86   Class javax/transaction/TransactionRolledbackException
           0   235   245   Class java/lang/Exception
         269   278   281   Class java/lang/Throwable
           0   235   292   any
         245   282   292   any

  private void sendBatchXA();
    Code:
       0: aload_0
       1: invokespecial #263                // Method sendMessages:()V
       4: aload_0
       5: aload_0
       6: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
       9: invokespecial #242                // Method delistResources:(Ljavax/transaction/Transaction;)V
      12: getstatic     #17                 // Field trace:Z
      15: ifeq          29
      18: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      21: ldc_w         #275                // String Committing JTA transaction
      24: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
      33: invokeinterface #276,  1          // InterfaceMethod javax/transaction/Transaction.commit:()V
      38: getstatic     #17                 // Field trace:Z
      41: ifeq          55
      44: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      47: ldc_w         #277                // String Committed JTA transaction
      50: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      55: aload_0
      56: aload_0
      57: invokespecial #235                // Method startTx:()Ljavax/transaction/Transaction;
      60: putfield      #132                // Field tx:Ljavax/transaction/Transaction;
      63: aload_0
      64: aload_0
      65: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
      68: invokespecial #236                // Method enlistResources:(Ljavax/transaction/Transaction;)V
      71: aload_0
      72: getfield      #16                 // Field messages:Ljava/util/LinkedList;
      75: invokevirtual #272                // Method java/util/LinkedList.clear:()V
      78: goto          209
      81: astore_1
      82: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      85: aload_1
      86: invokeinterface #273,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.bridgeAckError:(Ljava/lang/Exception;)V
      91: aload_0
      92: invokespecial #278                // Method handleFailureOnSend:()V
      95: goto          209
      98: astore_1
      99: aload_0
     100: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
     103: invokeinterface #134,  1          // InterfaceMethod javax/transaction/Transaction.rollback:()V
     108: goto          112
     111: astore_2
     112: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     115: aload_1
     116: invokeinterface #273,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.bridgeAckError:(Ljava/lang/Exception;)V
     121: aload_0
     122: aload_0
     123: invokespecial #235                // Method startTx:()Ljavax/transaction/Transaction;
     126: putfield      #132                // Field tx:Ljavax/transaction/Transaction;
     129: aload_0
     130: aload_0
     131: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
     134: invokespecial #236                // Method enlistResources:(Ljavax/transaction/Transaction;)V
     137: aload_0
     138: getfield      #16                 // Field messages:Ljava/util/LinkedList;
     141: invokevirtual #272                // Method java/util/LinkedList.clear:()V
     144: goto          209
     147: astore_1
     148: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     151: aload_1
     152: invokeinterface #273,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.bridgeAckError:(Ljava/lang/Exception;)V
     157: aload_0
     158: invokespecial #278                // Method handleFailureOnSend:()V
     161: goto          209
     164: astore_3
     165: aload_0
     166: aload_0
     167: invokespecial #235                // Method startTx:()Ljavax/transaction/Transaction;
     170: putfield      #132                // Field tx:Ljavax/transaction/Transaction;
     173: aload_0
     174: aload_0
     175: getfield      #132                // Field tx:Ljavax/transaction/Transaction;
     178: invokespecial #236                // Method enlistResources:(Ljavax/transaction/Transaction;)V
     181: aload_0
     182: getfield      #16                 // Field messages:Ljava/util/LinkedList;
     185: invokevirtual #272                // Method java/util/LinkedList.clear:()V
     188: goto          207
     191: astore        4
     193: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     196: aload         4
     198: invokeinterface #273,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.bridgeAckError:(Ljava/lang/Exception;)V
     203: aload_0
     204: invokespecial #278                // Method handleFailureOnSend:()V
     207: aload_3
     208: athrow
     209: return
    Exception table:
       from    to  target type
          55    78    81   Class java/lang/Exception
           0    55    98   Class java/lang/Exception
          99   108   111   Class java/lang/Throwable
         121   144   147   Class java/lang/Exception
           0    55   164   any
          98   121   164   any
         165   188   191   Class java/lang/Exception

  private void sendBatchLocalTx();
    Code:
       0: aload_0
       1: invokespecial #263                // Method sendMessages:()V
       4: getstatic     #17                 // Field trace:Z
       7: ifeq          21
      10: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      13: ldc_w         #279                // String Committing source session
      16: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
      25: invokeinterface #269,  1          // InterfaceMethod javax/jms/Session.commit:()V
      30: getstatic     #17                 // Field trace:Z
      33: ifeq          47
      36: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      39: ldc_w         #280                // String Committed source session
      42: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      47: aload_0
      48: getfield      #16                 // Field messages:Ljava/util/LinkedList;
      51: invokevirtual #272                // Method java/util/LinkedList.clear:()V
      54: goto          113
      57: astore_1
      58: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      61: aload_1
      62: invokeinterface #273,  2          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.bridgeAckError:(Ljava/lang/Exception;)V
      67: aload_0
      68: getfield      #174                // Field sourceSession:Ljavax/jms/Session;
      71: invokeinterface #281,  1          // InterfaceMethod javax/jms/Session.rollback:()V
      76: goto          80
      79: astore_2
      80: aload_0
      81: getfield      #178                // Field targetSession:Ljavax/jms/Session;
      84: invokeinterface #281,  1          // InterfaceMethod javax/jms/Session.rollback:()V
      89: goto          93
      92: astore_2
      93: aload_0
      94: getfield      #16                 // Field messages:Ljava/util/LinkedList;
      97: invokevirtual #272                // Method java/util/LinkedList.clear:()V
     100: goto          113
     103: astore_3
     104: aload_0
     105: getfield      #16                 // Field messages:Ljava/util/LinkedList;
     108: invokevirtual #272                // Method java/util/LinkedList.clear:()V
     111: aload_3
     112: athrow
     113: return
    Exception table:
       from    to  target type
           0    47    57   Class java/lang/Exception
          67    76    79   Class java/lang/Throwable
          80    89    92   Class java/lang/Throwable
           0    47   103   any
          57    93   103   any

  private void sendMessages() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field messages:Ljava/util/LinkedList;
       4: invokevirtual #282                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aconst_null
       9: astore_2
      10: aload_1
      11: invokeinterface #283,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          166
      19: aload_1
      20: invokeinterface #284,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #260                // class javax/jms/Message
      28: astore_2
      29: aload_0
      30: getfield      #51                 // Field addMessageIDInHeader:Z
      33: ifeq          41
      36: aload_0
      37: aload_2
      38: invokespecial #285                // Method addMessageIDInHeader:(Ljavax/jms/Message;)V
      41: getstatic     #17                 // Field trace:Z
      44: ifeq          75
      47: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      50: new           #63                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc_w         #286                // String Sending message
      60: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      75: aload_2
      76: invokeinterface #287,  1          // InterfaceMethod javax/jms/Message.getJMSExpiration:()J
      81: lstore_3
      82: lload_3
      83: lconst_0
      84: lcmp
      85: ifeq          102
      88: lload_3
      89: invokestatic  #109                // Method java/lang/System.currentTimeMillis:()J
      92: lsub
      93: lstore_3
      94: lload_3
      95: lconst_0
      96: lcmp
      97: ifgt          102
     100: lconst_1
     101: lstore_3
     102: aload_0
     103: getfield      #238                // Field targetProducer:Ljavax/jms/MessageProducer;
     106: aload_0
     107: getfield      #219                // Field targetDestination:Ljavax/jms/Destination;
     110: aload_2
     111: aload_2
     112: invokeinterface #288,  1          // InterfaceMethod javax/jms/Message.getJMSDeliveryMode:()I
     117: aload_2
     118: invokeinterface #289,  1          // InterfaceMethod javax/jms/Message.getJMSPriority:()I
     123: lload_3
     124: invokeinterface #290,  7          // InterfaceMethod javax/jms/MessageProducer.send:(Ljavax/jms/Destination;Ljavax/jms/Message;IIJ)V
     129: getstatic     #17                 // Field trace:Z
     132: ifeq          163
     135: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     138: new           #63                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc_w         #291                // String Sent message
     148: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_2
     152: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     155: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
     163: goto          10
     166: return

  private void handleFailureOnSend();
    Code:
       0: aload_0
       1: new           #292                // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$FailureHandler
       4: dup
       5: aload_0
       6: aconst_null
       7: invokespecial #293                // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$FailureHandler."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$1;)V
      10: invokespecial #2                  // Method handleFailure:(Ljava/lang/Runnable;)V
      13: return

  private void handleFailureOnStartup();
    Code:
       0: aload_0
       1: new           #294                // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$StartupFailureHandler
       4: dup
       5: aload_0
       6: aconst_null
       7: invokespecial #295                // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$StartupFailureHandler."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$1;)V
      10: invokespecial #2                  // Method handleFailure:(Ljava/lang/Runnable;)V
      13: return

  private void handleFailure(java.lang.Runnable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #19                 // Field failed:Z
       5: aload_0
       6: getfield      #32                 // Field executor:Ljava/util/concurrent/ExecutorService;
       9: aload_1
      10: invokeinterface #108,  2          // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      15: return

  private void addMessageIDInHeader(javax.jms.Message) throws java.lang.Exception;
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ifeq          17
       6: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
       9: ldc_w         #296                // String Adding old message id in Message header
      12: invokeinterface #79,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.trace:(Ljava/lang/Object;)V
      17: aload_1
      18: invokestatic  #297                // Method copyProperties:(Ljavax/jms/Message;)V
      21: aconst_null
      22: astore_2
      23: aload_1
      24: ldc_w         #299                // String AMQ_BRIDGE_MSG_ID_LIST
      27: invokeinterface #300,  2          // InterfaceMethod javax/jms/Message.getStringProperty:(Ljava/lang/String;)Ljava/lang/String;
      32: astore_2
      33: aload_2
      34: ifnonnull     47
      37: aload_1
      38: invokeinterface #301,  1          // InterfaceMethod javax/jms/Message.getJMSMessageID:()Ljava/lang/String;
      43: astore_2
      44: goto          78
      47: new           #302                // class java/lang/StringBuffer
      50: dup
      51: aload_2
      52: invokespecial #303                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      55: astore_3
      56: aload_3
      57: ldc_w         #304                // String ,
      60: invokevirtual #305                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      63: aload_1
      64: invokeinterface #301,  1          // InterfaceMethod javax/jms/Message.getJMSMessageID:()Ljava/lang/String;
      69: invokevirtual #305                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      72: pop
      73: aload_3
      74: invokevirtual #306                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      77: astore_2
      78: aload_1
      79: ldc_w         #299                // String AMQ_BRIDGE_MSG_ID_LIST
      82: aload_2
      83: invokeinterface #307,  3          // InterfaceMethod javax/jms/Message.setStringProperty:(Ljava/lang/String;Ljava/lang/String;)V
      88: return

  private static void copyProperties(javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokeinterface #308,  1          // InterfaceMethod javax/jms/Message.getPropertyNames:()Ljava/util/Enumeration;
       6: astore_1
       7: aconst_null
       8: astore_2
       9: aload_1
      10: invokeinterface #309,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          58
      18: aload_1
      19: invokeinterface #310,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: checkcast     #119                // class java/lang/String
      27: astore_3
      28: aload_2
      29: ifnonnull     40
      32: new           #311                // class java/util/HashMap
      35: dup
      36: invokespecial #312                // Method java/util/HashMap."<init>":()V
      39: astore_2
      40: aload_2
      41: aload_3
      42: aload_0
      43: aload_3
      44: invokeinterface #313,  2          // InterfaceMethod javax/jms/Message.getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
      49: invokeinterface #314,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: goto          9
      58: aload_0
      59: invokeinterface #315,  1          // InterfaceMethod javax/jms/Message.clearProperties:()V
      64: aload_2
      65: ifnull        180
      68: aload_2
      69: invokeinterface #316,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      74: invokeinterface #317,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      79: astore_3
      80: aload_3
      81: invokeinterface #283,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          180
      89: aload_3
      90: invokeinterface #284,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #318                // class java/util/Map$Entry
      98: astore        4
     100: aload         4
     102: invokeinterface #319,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     107: checkcast     #119                // class java/lang/String
     110: astore        5
     112: aload         4
     114: invokeinterface #320,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     119: astore        6
     121: aload         6
     123: instanceof    #321                // class "[B"
     126: ifne          147
     129: aload_0
     130: aload         5
     132: aload         4
     134: invokeinterface #320,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     139: invokeinterface #322,  3          // InterfaceMethod javax/jms/Message.setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
     144: goto          177
     147: aload_0
     148: instanceof    #323                // class org/apache/activemq/artemis/jms/client/ActiveMQMessage
     151: ifeq          177
     154: aload_0
     155: checkcast     #323                // class org/apache/activemq/artemis/jms/client/ActiveMQMessage
     158: invokevirtual #324                // Method org/apache/activemq/artemis/jms/client/ActiveMQMessage.getCoreMessage:()Lorg/apache/activemq/artemis/api/core/client/ClientMessage;
     161: aload         5
     163: aload         6
     165: checkcast     #321                // class "[B"
     168: checkcast     #321                // class "[B"
     171: invokeinterface #325,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ClientMessage.putBytesProperty:(Ljava/lang/String;[B)Lorg/apache/activemq/artemis/api/core/client/ClientMessage;
     176: pop
     177: goto          80
     180: return

  private java.util.concurrent.ExecutorService createExecutor();
    Code:
       0: iconst_3
       1: new           #326                // class org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$2
       4: dup
       5: aload_0
       6: invokespecial #327                // Method org/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl$2."<init>":(Lorg/apache/activemq/artemis/jms/bridge/impl/JMSBridgeImpl;)V
       9: invokestatic  #328                // Method java/util/concurrent/Executors.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      12: astore_1
      13: aload_1
      14: areturn

  private void locateRecoveryRegistry();
    Code:
       0: aload_0
       1: getfield      #195                // Field registry:Lorg/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry;
       4: ifnonnull     154
       7: getstatic     #329                // Field RESOURCE_RECOVERY_CLASS_NAMES:[Ljava/lang/String;
      10: astore_1
      11: aload_1
      12: arraylength
      13: istore_2
      14: iconst_0
      15: istore_3
      16: iload_3
      17: iload_2
      18: if_icmpge     116
      21: aload_1
      22: iload_3
      23: aaload
      24: astore        4
      26: ldc_w         #330                // class org/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry
      29: invokestatic  #331                // Method java/util/ServiceLoader.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;
      32: astore        5
      34: aload         5
      36: invokevirtual #332                // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      39: invokeinterface #283,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          64
      47: aload_0
      48: aload         5
      50: invokevirtual #332                // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      53: invokeinterface #284,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #330                // class org/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry
      61: putfield      #195                // Field registry:Lorg/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry;
      64: goto          100
      67: astore        5
      69: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      72: new           #63                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc_w         #333                // String unable to load  recovery registry
      82: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload         4
      87: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: aload         5
      95: invokeinterface #334,  3          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     100: aload_0
     101: getfield      #195                // Field registry:Lorg/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry;
     104: ifnull        110
     107: goto          116
     110: iinc          3, 1
     113: goto          16
     116: aload_0
     117: getfield      #195                // Field registry:Lorg/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry;
     120: ifnull        154
     123: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
     126: new           #63                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     133: ldc_w         #335                // String Recovery Registry located =
     136: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload_0
     140: getfield      #195                // Field registry:Lorg/apache/activemq/artemis/service/extensions/xa/recovery/ActiveMQRegistry;
     143: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokeinterface #69,  2           // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.debug:(Ljava/lang/Object;)V
     154: return
    Exception table:
       from    to  target type
          26    64    67   Class java/lang/Throwable

  public boolean isUseMaskedPassword();
    Code:
       0: aload_0
       1: getfield      #28                 // Field useMaskedPassword:Z
       4: ireturn

  public void setUseMaskedPassword(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field useMaskedPassword:Z
       5: return

  public java.lang.String getPasswordCodec();
    Code:
       0: aload_0
       1: getfield      #116                // Field passwordCodec:Ljava/lang/String;
       4: areturn

  public void setPasswordCodec(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #116                // Field passwordCodec:Ljava/lang/String;
       5: return

  public long getFailoverTimeout();
    Code:
       0: aload_0
       1: getfield      #1                  // Field failoverTimeout:J
       4: lreturn

  public void setFailoverTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #1                  // Field failoverTimeout:J
       5: return

  static java.lang.ClassLoader access$300(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #24                 // Field moduleTccl:Ljava/lang/ClassLoader;
       4: areturn

  static boolean access$400(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: ireturn

  static boolean access$500(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #22                 // Field stopping:Z
       4: ireturn

  static java.lang.Object access$600(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #21                 // Field lock:Ljava/lang/Object;
       4: areturn

  static boolean access$700(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #20                 // Field paused:Z
       4: ireturn

  static boolean access$800(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #19                 // Field failed:Z
       4: ireturn

  static javax.jms.MessageConsumer access$900(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sourceConsumer:Ljavax/jms/MessageConsumer;
       4: areturn

  static boolean access$1000();
    Code:
       0: getstatic     #17                 // Field trace:Z
       3: ireturn

  static java.util.LinkedList access$1100(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #16                 // Field messages:Ljava/util/LinkedList;
       4: areturn

  static long access$1202(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #15                 // Field batchExpiryTime:J
       6: lreturn

  static long access$1300(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxBatchTime:J
       4: lreturn

  static long access$1200(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #15                 // Field batchExpiryTime:J
       4: lreturn

  static int access$1400(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxBatchSize:I
       4: ireturn

  static void access$1500(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method sendBatch:()V
       4: return

  static javax.jms.Connection access$1600(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #11                 // Field sourceConn:Ljavax/jms/Connection;
       4: areturn

  static boolean access$1702(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #10                 // Field connectedSource:Z
       6: ireturn

  static boolean access$1802(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #9                  // Field connectedTarget:Z
       6: ireturn

  static boolean access$802(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #19                 // Field failed:Z
       6: ireturn

  static void access$1900(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method cleanup:()V
       4: return

  static int access$2000(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field maxRetries:I
       4: ireturn

  static long access$2100(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field failureRetryInterval:J
       4: lreturn

  static void access$2200(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #5                  // Method pause:(J)V
       5: return

  static boolean access$2300(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method setupJMSObjectsWithRetry:()Z
       4: ireturn

  static boolean access$402(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #23                 // Field started:Z
       6: ireturn

  static void access$2400(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method startSource:()V
       4: return

  static void access$2500(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method handleFailure:(Ljava/lang/Runnable;)V
       5: return

  static long access$2600(org.apache.activemq.artemis.jms.bridge.impl.JMSBridgeImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field failoverTimeout:J
       4: lreturn

  static {};
    Code:
       0: iconst_1
       1: anewarray     #119                // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc_w         #336                // String org.jboss.as.messaging.jms.AS7RecoveryRegistry
       9: aastore
      10: putstatic     #329                // Field RESOURCE_RECOVERY_CLASS_NAMES:[Ljava/lang/String;
      13: getstatic     #62                 // Field org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.LOGGER:Lorg/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger;
      16: invokeinterface #337,  1          // InterfaceMethod org/apache/activemq/artemis/jms/bridge/ActiveMQJMSBridgeLogger.isTraceEnabled:()Z
      21: putstatic     #17                 // Field trace:Z
      24: return
}
