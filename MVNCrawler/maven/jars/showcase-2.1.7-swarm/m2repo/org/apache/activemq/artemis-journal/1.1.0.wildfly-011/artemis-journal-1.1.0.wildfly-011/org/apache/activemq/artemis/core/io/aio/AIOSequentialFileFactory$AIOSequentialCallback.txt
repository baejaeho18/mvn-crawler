Compiled from "AIOSequentialFileFactory.java"
public class org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$AIOSequentialCallback implements org.apache.activemq.artemis.jlibaio.SubmitInfo, java.lang.Runnable, java.lang.Comparable<org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$AIOSequentialCallback> {
  org.apache.activemq.artemis.core.io.IOCallback callback;

  boolean error;

  org.apache.activemq.artemis.core.io.aio.AIOSequentialFile sequentialFile;

  java.nio.ByteBuffer buffer;

  org.apache.activemq.artemis.jlibaio.LibaioFile libaioFile;

  java.lang.String errorMessage;

  int errorCode;

  long writeSequence;

  long position;

  int bytes;

  final org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory this$0;

  public org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$AIOSequentialCallback(org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field error:Z
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field errorCode:I
      19: return

  public java.lang.String toString();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #7                  // String AIOSequentialCallback{error=
       9: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field error:Z
      16: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      19: ldc           #10                 // String , errorMessage=\'
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #11                 // Field errorMessage:Ljava/lang/String;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: bipush        39
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: ldc           #13                 // String , errorCode=
      38: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #4                  // Field errorCode:I
      45: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #15                 // String , writeSequence=
      50: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #16                 // Field writeSequence:J
      57: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      60: ldc           #18                 // String , position=
      62: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #19                 // Field position:J
      69: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      72: bipush        125
      74: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      77: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  public org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$AIOSequentialCallback initWrite(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #19                 // Field position:J
       5: aload_0
       6: iload_3
       7: putfield      #21                 // Field bytes:I
      10: aload_0
      11: areturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #22                 // Field libaioFile:Lorg/apache/activemq/artemis/jlibaio/LibaioFile;
       4: aload_0
       5: getfield      #19                 // Field position:J
       8: aload_0
       9: getfield      #21                 // Field bytes:I
      12: aload_0
      13: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      16: aload_0
      17: invokevirtual #24                 // Method org/apache/activemq/artemis/jlibaio/LibaioFile.write:(JILjava/nio/ByteBuffer;Lorg/apache/activemq/artemis/jlibaio/SubmitInfo;)V
      20: goto          38
      23: astore_1
      24: aload_0
      25: getfield      #26                 // Field callback:Lorg/apache/activemq/artemis/core/io/IOCallback;
      28: iconst_m1
      29: aload_1
      30: invokevirtual #27                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      33: invokeinterface #28,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      38: return
    Exception table:
       from    to  target type
           0    20    23   Class java/io/IOException

  public int compareTo(org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$AIOSequentialCallback);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     17
       5: aload_0
       6: getfield      #16                 // Field writeSequence:J
       9: aload_1
      10: getfield      #16                 // Field writeSequence:J
      13: lcmp
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: getfield      #16                 // Field writeSequence:J
      23: aload_0
      24: getfield      #16                 // Field writeSequence:J
      27: lcmp
      28: ifge          33
      31: iconst_1
      32: ireturn
      33: iconst_m1
      34: ireturn

  public org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$AIOSequentialCallback init(long, org.apache.activemq.artemis.core.io.IOCallback, org.apache.activemq.artemis.jlibaio.LibaioFile, org.apache.activemq.artemis.core.io.aio.AIOSequentialFile, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_3
       2: putfield      #26                 // Field callback:Lorg/apache/activemq/artemis/core/io/IOCallback;
       5: aload_0
       6: aload         5
       8: putfield      #29                 // Field sequentialFile:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFile;
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field error:Z
      16: aload_0
      17: aload         6
      19: putfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      22: aload_0
      23: aload         4
      25: putfield      #22                 // Field libaioFile:Lorg/apache/activemq/artemis/jlibaio/LibaioFile;
      28: aload_0
      29: lload_1
      30: putfield      #16                 // Field writeSequence:J
      33: aload_0
      34: aconst_null
      35: putfield      #11                 // Field errorMessage:Ljava/lang/String;
      38: aload_0
      39: areturn

  public void onError(int, java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field error:Z
       5: aload_0
       6: iload_1
       7: putfield      #4                  // Field errorCode:I
      10: aload_0
      11: aload_2
      12: putfield      #11                 // Field errorMessage:Ljava/lang/String;
      15: return

  public void done();
    Code:
       0: aload_0
       1: getfield      #29                 // Field sequentialFile:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFile;
       4: aload_0
       5: invokevirtual #30                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFile.done:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory$AIOSequentialCallback;)V
       8: return

  public void sequentialDone();
    Code:
       0: aload_0
       1: getfield      #3                  // Field error:Z
       4: ifeq          32
       7: aload_0
       8: getfield      #26                 // Field callback:Lorg/apache/activemq/artemis/core/io/IOCallback;
      11: aload_0
      12: getfield      #4                  // Field errorCode:I
      15: aload_0
      16: getfield      #11                 // Field errorMessage:Ljava/lang/String;
      19: invokeinterface #28,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      24: aload_0
      25: aconst_null
      26: putfield      #11                 // Field errorMessage:Ljava/lang/String;
      29: goto          91
      32: aload_0
      33: getfield      #26                 // Field callback:Lorg/apache/activemq/artemis/core/io/IOCallback;
      36: ifnull        48
      39: aload_0
      40: getfield      #26                 // Field callback:Lorg/apache/activemq/artemis/core/io/IOCallback;
      43: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.done:()V
      48: aload_0
      49: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      52: ifnull        79
      55: aload_0
      56: getfield      #1                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      59: invokestatic  #32                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$100:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;)Z
      62: ifeq          79
      65: aload_0
      66: getfield      #1                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      69: invokestatic  #33                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$200:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;)Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory$ReuseBuffersController;
      72: aload_0
      73: getfield      #23                 // Field buffer:Ljava/nio/ByteBuffer;
      76: invokevirtual #34                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory$ReuseBuffersController.bufferDone:(Ljava/nio/ByteBuffer;)V
      79: aload_0
      80: getfield      #1                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      83: invokestatic  #35                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$300:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;)Lorg/apache/activemq/artemis/jlibaio/util/CallbackCache;
      86: aload_0
      87: invokevirtual #36                 // Method org/apache/activemq/artemis/jlibaio/util/CallbackCache.put:(Lorg/apache/activemq/artemis/jlibaio/SubmitInfo;)Lorg/apache/activemq/artemis/jlibaio/util/CallbackCache;
      90: pop
      91: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #37                 // class org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory$AIOSequentialCallback
       5: invokevirtual #38                 // Method compareTo:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory$AIOSequentialCallback;)I
       8: ireturn
}
