Compiled from "QueueControlImpl.java"
public class org.apache.activemq.artemis.core.management.impl.QueueControlImpl extends org.apache.activemq.artemis.core.management.impl.AbstractControl implements org.apache.activemq.artemis.api.core.management.QueueControl {
  public static final int FLUSH_LIMIT;

  private final org.apache.activemq.artemis.core.server.Queue queue;

  private final java.lang.String address;

  private final org.apache.activemq.artemis.core.postoffice.PostOffice postOffice;

  private final org.apache.activemq.artemis.core.settings.HierarchicalRepository<org.apache.activemq.artemis.core.settings.impl.AddressSettings> addressSettingsRepository;

  private org.apache.activemq.artemis.core.messagecounter.MessageCounter counter;

  private static java.lang.String toJSON(java.util.Map<java.lang.String, java.lang.Object>[]);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method toJSONMsgArray:([Ljava/util/Map;)Lorg/apache/activemq/artemis/utils/json/JSONArray;
       4: astore_1
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/activemq/artemis/utils/json/JSONArray.toString:()Ljava/lang/String;
       9: areturn

  private static org.apache.activemq.artemis.utils.json.JSONArray toJSONMsgArray(java.util.Map<java.lang.String, java.lang.Object>[]);
    Code:
       0: new           #3                  // class org/apache/activemq/artemis/utils/json/JSONArray
       3: dup
       4: invokespecial #4                  // Method org/apache/activemq/artemis/utils/json/JSONArray."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     48
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_1
      29: new           #5                  // class org/apache/activemq/artemis/utils/json/JSONObject
      32: dup
      33: aload         5
      35: invokespecial #6                  // Method org/apache/activemq/artemis/utils/json/JSONObject."<init>":(Ljava/util/Map;)V
      38: invokevirtual #7                  // Method org/apache/activemq/artemis/utils/json/JSONArray.put:(Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONArray;
      41: pop
      42: iinc          4, 1
      45: goto          16
      48: aload_1
      49: areturn

  private static java.lang.String toJSON(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>[]>);
    Code:
       0: new           #3                  // class org/apache/activemq/artemis/utils/json/JSONArray
       3: dup
       4: invokespecial #4                  // Method org/apache/activemq/artemis/utils/json/JSONArray."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          92
      29: aload_2
      30: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #12                 // class java/util/Map$Entry
      38: astore_3
      39: new           #5                  // class org/apache/activemq/artemis/utils/json/JSONObject
      42: dup
      43: invokespecial #13                 // Method org/apache/activemq/artemis/utils/json/JSONObject."<init>":()V
      46: astore        4
      48: aload         4
      50: ldc           #14                 // String consumerName
      52: aload_3
      53: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: invokevirtual #16                 // Method org/apache/activemq/artemis/utils/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONObject;
      61: pop
      62: aload         4
      64: ldc           #17                 // String elements
      66: aload_3
      67: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #19                 // class "[Ljava/util/Map;"
      75: invokestatic  #1                  // Method toJSONMsgArray:([Ljava/util/Map;)Lorg/apache/activemq/artemis/utils/json/JSONArray;
      78: invokevirtual #16                 // Method org/apache/activemq/artemis/utils/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONObject;
      81: pop
      82: aload_1
      83: aload         4
      85: invokevirtual #7                  // Method org/apache/activemq/artemis/utils/json/JSONArray.put:(Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONArray;
      88: pop
      89: goto          20
      92: aload_1
      93: invokevirtual #2                  // Method org/apache/activemq/artemis/utils/json/JSONArray.toString:()Ljava/lang/String;
      96: areturn
      97: astore_1
      98: new           #21                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #23                 // String Invalid conversion
     107: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_1
     111: invokevirtual #25                 // Method org/apache/activemq/artemis/utils/json/JSONException.toString:()Ljava/lang/String;
     114: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: areturn
    Exception table:
       from    to  target type
           0    96    97   Class org/apache/activemq/artemis/utils/json/JSONException

  public org.apache.activemq.artemis.core.management.impl.QueueControlImpl(org.apache.activemq.artemis.core.server.Queue, java.lang.String, org.apache.activemq.artemis.core.postoffice.PostOffice, org.apache.activemq.artemis.core.persistence.StorageManager, org.apache.activemq.artemis.core.settings.HierarchicalRepository<org.apache.activemq.artemis.core.settings.impl.AddressSettings>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #27                 // class org/apache/activemq/artemis/api/core/management/QueueControl
       3: aload         4
       5: invokespecial #28                 // Method org/apache/activemq/artemis/core/management/impl/AbstractControl."<init>":(Ljava/lang/Class;Lorg/apache/activemq/artemis/core/persistence/StorageManager;)V
       8: aload_0
       9: aload_1
      10: putfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      13: aload_0
      14: aload_2
      15: putfield      #30                 // Field address:Ljava/lang/String;
      18: aload_0
      19: aload_3
      20: putfield      #31                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
      23: aload_0
      24: aload         5
      26: putfield      #32                 // Field addressSettingsRepository:Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
      29: return

  public void setMessageCounter(org.apache.activemq.artemis.core.messagecounter.MessageCounter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field counter:Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;
       5: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method clearIO:()V
       4: aload_0
       5: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
       8: invokeinterface #35,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getName:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      13: invokevirtual #36                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      16: astore_1
      17: aload_0
      18: invokevirtual #37                 // Method blockOnIO:()V
      21: aload_1
      22: areturn
      23: astore_2
      24: aload_0
      25: invokevirtual #37                 // Method blockOnIO:()V
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           4    17    23   any

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: getfield      #30                 // Field address:Ljava/lang/String;
       8: areturn

  public java.lang.String getFilter();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #39,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getFilter:()Lorg/apache/activemq/artemis/core/filter/Filter;
      17: astore_1
      18: aload_1
      19: ifnull        34
      22: aload_1
      23: invokeinterface #40,  1           // InterfaceMethod org/apache/activemq/artemis/core/filter/Filter.getFilterString:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      28: invokevirtual #36                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      31: goto          35
      34: aconst_null
      35: astore_2
      36: aload_0
      37: invokevirtual #37                 // Method blockOnIO:()V
      40: aload_2
      41: areturn
      42: astore_3
      43: aload_0
      44: invokevirtual #37                 // Method blockOnIO:()V
      47: aload_3
      48: athrow
    Exception table:
       from    to  target type
           8    36    42   any

  public boolean isDurable();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #41,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.isDurable:()Z
      17: istore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: iload_1
      23: ireturn
      24: astore_2
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public boolean isTemporary();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.isTemporary:()Z
      17: istore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: iload_1
      23: ireturn
      24: astore_2
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public long getMessageCount();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #43,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getMessageCount:()J
      17: lstore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: lload_1
      23: lreturn
      24: astore_3
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public int getConsumerCount();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getConsumerCount:()I
      17: istore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: iload_1
      23: ireturn
      24: astore_2
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public int getDeliveringCount();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #45,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getDeliveringCount:()I
      17: istore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: iload_1
      23: ireturn
      24: astore_2
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public long getMessagesAdded();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #46,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getMessagesAdded:()J
      17: lstore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: lload_1
      23: lreturn
      24: astore_3
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public long getMessagesAcknowledged();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #47,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getMessagesAcknowledged:()J
      17: lstore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: lload_1
      23: lreturn
      24: astore_3
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public long getID();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getID:()J
      17: lstore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: lload_1
      23: lreturn
      24: astore_3
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public long getScheduledCount();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getScheduledCount:()I
      17: i2l
      18: lstore_1
      19: aload_0
      20: invokevirtual #37                 // Method blockOnIO:()V
      23: lload_1
      24: lreturn
      25: astore_3
      26: aload_0
      27: invokevirtual #37                 // Method blockOnIO:()V
      30: aload_3
      31: athrow
    Exception table:
       from    to  target type
           8    19    25   any

  public java.lang.String getDeadLetterAddress();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #32                 // Field addressSettingsRepository:Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
      12: aload_0
      13: getfield      #30                 // Field address:Ljava/lang/String;
      16: invokeinterface #50,  2           // InterfaceMethod org/apache/activemq/artemis/core/settings/HierarchicalRepository.getMatch:(Ljava/lang/String;)Ljava/lang/Object;
      21: checkcast     #51                 // class org/apache/activemq/artemis/core/settings/impl/AddressSettings
      24: astore_1
      25: aload_1
      26: ifnull        50
      29: aload_1
      30: invokevirtual #52                 // Method org/apache/activemq/artemis/core/settings/impl/AddressSettings.getDeadLetterAddress:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      33: ifnull        50
      36: aload_1
      37: invokevirtual #52                 // Method org/apache/activemq/artemis/core/settings/impl/AddressSettings.getDeadLetterAddress:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      40: invokevirtual #36                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      43: astore_2
      44: aload_0
      45: invokevirtual #37                 // Method blockOnIO:()V
      48: aload_2
      49: areturn
      50: aconst_null
      51: astore_2
      52: aload_0
      53: invokevirtual #37                 // Method blockOnIO:()V
      56: aload_2
      57: areturn
      58: astore_3
      59: aload_0
      60: invokevirtual #37                 // Method blockOnIO:()V
      63: aload_3
      64: athrow
    Exception table:
       from    to  target type
           8    44    58   any
          50    52    58   any

  public java.lang.String getExpiryAddress();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #32                 // Field addressSettingsRepository:Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
      12: aload_0
      13: getfield      #30                 // Field address:Ljava/lang/String;
      16: invokeinterface #50,  2           // InterfaceMethod org/apache/activemq/artemis/core/settings/HierarchicalRepository.getMatch:(Ljava/lang/String;)Ljava/lang/Object;
      21: checkcast     #51                 // class org/apache/activemq/artemis/core/settings/impl/AddressSettings
      24: astore_1
      25: aload_1
      26: ifnull        50
      29: aload_1
      30: invokevirtual #53                 // Method org/apache/activemq/artemis/core/settings/impl/AddressSettings.getExpiryAddress:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      33: ifnull        50
      36: aload_1
      37: invokevirtual #53                 // Method org/apache/activemq/artemis/core/settings/impl/AddressSettings.getExpiryAddress:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      40: invokevirtual #36                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      43: astore_2
      44: aload_0
      45: invokevirtual #37                 // Method blockOnIO:()V
      48: aload_2
      49: areturn
      50: aconst_null
      51: astore_2
      52: aload_0
      53: invokevirtual #37                 // Method blockOnIO:()V
      56: aload_2
      57: areturn
      58: astore_3
      59: aload_0
      60: invokevirtual #37                 // Method blockOnIO:()V
      63: aload_3
      64: athrow
    Exception table:
       from    to  target type
           8    44    58   any
          50    52    58   any

  public java.util.Map<java.lang.String, java.lang.Object>[] listScheduledMessages() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #54,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getScheduledMessages:()Ljava/util/List;
      17: astore_1
      18: aload_0
      19: aload_1
      20: invokespecial #55                 // Method convertMessagesToMaps:(Ljava/util/List;)[Ljava/util/Map;
      23: astore_2
      24: aload_0
      25: invokevirtual #37                 // Method blockOnIO:()V
      28: aload_2
      29: areturn
      30: astore_3
      31: aload_0
      32: invokevirtual #37                 // Method blockOnIO:()V
      35: aload_3
      36: athrow
    Exception table:
       from    to  target type
           8    24    30   any

  public java.lang.String listScheduledMessagesAsJSON() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: invokevirtual #56                 // Method listScheduledMessages:()[Ljava/util/Map;
      12: invokestatic  #57                 // Method toJSON:([Ljava/util/Map;)Ljava/lang/String;
      15: astore_1
      16: aload_0
      17: invokevirtual #37                 // Method blockOnIO:()V
      20: aload_1
      21: areturn
      22: astore_2
      23: aload_0
      24: invokevirtual #37                 // Method blockOnIO:()V
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           8    16    22   any

  private java.util.Map<java.lang.String, java.lang.Object>[] convertMessagesToMaps(java.util.List<org.apache.activemq.artemis.core.server.MessageReference>) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_1
       1: invokeinterface #58,  1           // InterfaceMethod java/util/List.size:()I
       6: anewarray     #59                 // class java/util/Map
       9: astore_2
      10: iconst_0
      11: istore_3
      12: aload_1
      13: invokeinterface #60,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          67
      30: aload         4
      32: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #61                 // class org/apache/activemq/artemis/core/server/MessageReference
      40: astore        5
      42: aload         5
      44: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/MessageReference.getMessage:()Lorg/apache/activemq/artemis/core/server/ServerMessage;
      49: astore        6
      51: aload_2
      52: iload_3
      53: iinc          3, 1
      56: aload         6
      58: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/Message.toMap:()Ljava/util/Map;
      63: aastore
      64: goto          20
      67: aload_2
      68: areturn

  public java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>[]> listDeliveringMessages() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #64,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getDeliveringMessages:()Ljava/util/Map;
      17: astore_1
      18: new           #65                 // class java/util/HashMap
      21: dup
      22: invokespecial #66                 // Method java/util/HashMap."<init>":()V
      25: astore_2
      26: aload_1
      27: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      32: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: astore_3
      38: aload_3
      39: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          89
      47: aload_3
      48: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #12                 // class java/util/Map$Entry
      56: astore        4
      58: aload_2
      59: aload         4
      61: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      66: aload_0
      67: aload         4
      69: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #67                 // class java/util/List
      77: invokespecial #55                 // Method convertMessagesToMaps:(Ljava/util/List;)[Ljava/util/Map;
      80: invokeinterface #68,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: goto          38
      89: aload_2
      90: astore_3
      91: aload_0
      92: invokevirtual #37                 // Method blockOnIO:()V
      95: aload_3
      96: areturn
      97: astore        5
      99: aload_0
     100: invokevirtual #37                 // Method blockOnIO:()V
     103: aload         5
     105: athrow
    Exception table:
       from    to  target type
           8    91    97   any
          97    99    97   any

  public java.lang.String listDeliveringMessagesAsJSON() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: invokevirtual #69                 // Method listDeliveringMessages:()Ljava/util/Map;
      12: invokestatic  #70                 // Method toJSON:(Ljava/util/Map;)Ljava/lang/String;
      15: astore_1
      16: aload_0
      17: invokevirtual #37                 // Method blockOnIO:()V
      20: aload_1
      21: areturn
      22: astore_2
      23: aload_0
      24: invokevirtual #37                 // Method blockOnIO:()V
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           8    16    22   any

  public java.util.Map<java.lang.String, java.lang.Object>[] listMessages(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_1
       9: invokestatic  #71                 // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
      12: astore_2
      13: new           #72                 // class java/util/ArrayList
      16: dup
      17: invokespecial #73                 // Method java/util/ArrayList."<init>":()V
      20: astore_3
      21: aload_0
      22: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      25: invokeinterface #74,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.flushExecutor:()Z
      30: pop
      31: aload_0
      32: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      35: invokeinterface #75,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.totalIterator:()Lorg/apache/activemq/artemis/utils/LinkedListIterator;
      40: astore        4
      42: aload         4
      44: invokeinterface #76,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.hasNext:()Z
      49: ifeq          110
      52: aload         4
      54: invokeinterface #77,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.next:()Ljava/lang/Object;
      59: checkcast     #61                 // class org/apache/activemq/artemis/core/server/MessageReference
      62: astore        5
      64: aload_2
      65: ifnull        84
      68: aload_2
      69: aload         5
      71: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/MessageReference.getMessage:()Lorg/apache/activemq/artemis/core/server/ServerMessage;
      76: invokeinterface #78,  2           // InterfaceMethod org/apache/activemq/artemis/core/filter/Filter.match:(Lorg/apache/activemq/artemis/core/server/ServerMessage;)Z
      81: ifeq          107
      84: aload         5
      86: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/MessageReference.getMessage:()Lorg/apache/activemq/artemis/core/server/ServerMessage;
      91: astore        6
      93: aload_3
      94: aload         6
      96: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/Message.toMap:()Ljava/util/Map;
     101: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     106: pop
     107: goto          42
     110: aload_3
     111: aload_3
     112: invokeinterface #58,  1           // InterfaceMethod java/util/List.size:()I
     117: anewarray     #59                 // class java/util/Map
     120: invokeinterface #80,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     125: checkcast     #19                 // class "[Ljava/util/Map;"
     128: astore        5
     130: aload         4
     132: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.close:()V
     137: aload_0
     138: invokevirtual #37                 // Method blockOnIO:()V
     141: aload         5
     143: areturn
     144: astore        7
     146: aload         4
     148: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.close:()V
     153: aload         7
     155: athrow
     156: astore_2
     157: new           #83                 // class java/lang/IllegalStateException
     160: dup
     161: aload_2
     162: invokevirtual #84                 // Method org/apache/activemq/artemis/api/core/ActiveMQException.getMessage:()Ljava/lang/String;
     165: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     168: athrow
     169: astore        8
     171: aload_0
     172: invokevirtual #37                 // Method blockOnIO:()V
     175: aload         8
     177: athrow
    Exception table:
       from    to  target type
          42   130   144   any
         144   146   144   any
           8   137   156   Class org/apache/activemq/artemis/api/core/ActiveMQException
         144   156   156   Class org/apache/activemq/artemis/api/core/ActiveMQException
           8   137   169   any
         144   171   169   any

  public java.lang.String listMessagesAsJSON(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: aload_1
      10: invokevirtual #86                 // Method listMessages:(Ljava/lang/String;)[Ljava/util/Map;
      13: invokestatic  #57                 // Method toJSON:([Ljava/util/Map;)Ljava/lang/String;
      16: astore_2
      17: aload_0
      18: invokevirtual #37                 // Method blockOnIO:()V
      21: aload_2
      22: areturn
      23: astore_3
      24: aload_0
      25: invokevirtual #37                 // Method blockOnIO:()V
      28: aload_3
      29: athrow
    Exception table:
       from    to  target type
           8    17    23   any

  protected java.util.Map<java.lang.String, java.lang.Object>[] getFirstMessage() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: new           #72                 // class java/util/ArrayList
      11: dup
      12: invokespecial #73                 // Method java/util/ArrayList."<init>":()V
      15: astore_1
      16: aload_0
      17: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      20: invokeinterface #74,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.flushExecutor:()Z
      25: pop
      26: aload_0
      27: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      30: invokeinterface #75,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.totalIterator:()Lorg/apache/activemq/artemis/utils/LinkedListIterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #76,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.hasNext:()Z
      42: ifeq          77
      45: aload_2
      46: invokeinterface #77,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.next:()Ljava/lang/Object;
      51: checkcast     #61                 // class org/apache/activemq/artemis/core/server/MessageReference
      54: astore_3
      55: aload_3
      56: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/MessageReference.getMessage:()Lorg/apache/activemq/artemis/core/server/ServerMessage;
      61: astore        4
      63: aload_1
      64: aload         4
      66: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/Message.toMap:()Ljava/util/Map;
      71: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: aload_1
      78: iconst_1
      79: anewarray     #59                 // class java/util/Map
      82: invokeinterface #80,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      87: checkcast     #19                 // class "[Ljava/util/Map;"
      90: astore_3
      91: aload_2
      92: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.close:()V
      97: aload_0
      98: invokevirtual #37                 // Method blockOnIO:()V
     101: aload_3
     102: areturn
     103: astore        5
     105: aload_2
     106: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.close:()V
     111: aload         5
     113: athrow
     114: astore        6
     116: aload_0
     117: invokevirtual #37                 // Method blockOnIO:()V
     120: aload         6
     122: athrow
    Exception table:
       from    to  target type
          36    91   103   any
         103   105   103   any
           8    97   114   any
         103   116   114   any

  public java.lang.String getFirstMessageAsJSON() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getFirstMessage:()[Ljava/util/Map;
       4: invokestatic  #57                 // Method toJSON:([Ljava/util/Map;)Ljava/lang/String;
       7: invokevirtual #88                 // Method java/lang/String.toString:()Ljava/lang/String;
      10: areturn

  public java.lang.Long getFirstMessageTimestamp() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getFirstMessage:()[Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: arraylength
      11: ifeq          20
      14: aload_1
      15: iconst_0
      16: aaload
      17: ifnonnull     22
      20: aconst_null
      21: areturn
      22: aload_1
      23: iconst_0
      24: aaload
      25: astore_2
      26: aload_2
      27: ldc           #89                 // String timestamp
      29: invokeinterface #90,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      34: ifne          39
      37: aconst_null
      38: areturn
      39: aload_2
      40: ldc           #89                 // String timestamp
      42: invokeinterface #91,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #92                 // class java/lang/Long
      50: areturn

  public java.lang.Long getFirstMessageAge() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method getFirstMessageTimestamp:()Ljava/lang/Long;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: new           #94                 // class java/util/Date
      14: dup
      15: invokespecial #95                 // Method java/util/Date."<init>":()V
      18: invokevirtual #96                 // Method java/util/Date.getTime:()J
      21: lstore_2
      22: lload_2
      23: aload_1
      24: invokevirtual #97                 // Method java/lang/Long.longValue:()J
      27: lsub
      28: invokestatic  #98                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: areturn

  public long countMessages(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_1
       9: invokestatic  #71                 // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
      12: astore_2
      13: aload_2
      14: ifnonnull     28
      17: aload_0
      18: invokevirtual #99                 // Method getMessageCount:()J
      21: lstore_3
      22: aload_0
      23: invokevirtual #37                 // Method blockOnIO:()V
      26: lload_3
      27: lreturn
      28: aload_0
      29: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      32: invokeinterface #75,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.totalIterator:()Lorg/apache/activemq/artemis/utils/LinkedListIterator;
      37: astore_3
      38: iconst_0
      39: istore        4
      41: aload_3
      42: invokeinterface #76,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.hasNext:()Z
      47: ifeq          83
      50: aload_3
      51: invokeinterface #77,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.next:()Ljava/lang/Object;
      56: checkcast     #61                 // class org/apache/activemq/artemis/core/server/MessageReference
      59: astore        5
      61: aload_2
      62: aload         5
      64: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/MessageReference.getMessage:()Lorg/apache/activemq/artemis/core/server/ServerMessage;
      69: invokeinterface #78,  2           // InterfaceMethod org/apache/activemq/artemis/core/filter/Filter.match:(Lorg/apache/activemq/artemis/core/server/ServerMessage;)Z
      74: ifeq          80
      77: iinc          4, 1
      80: goto          41
      83: iload         4
      85: i2l
      86: lstore        5
      88: aload_3
      89: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.close:()V
      94: aload_0
      95: invokevirtual #37                 // Method blockOnIO:()V
      98: lload         5
     100: lreturn
     101: astore        7
     103: aload_3
     104: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/utils/LinkedListIterator.close:()V
     109: aload         7
     111: athrow
     112: astore        8
     114: aload_0
     115: invokevirtual #37                 // Method blockOnIO:()V
     118: aload         8
     120: athrow
    Exception table:
       from    to  target type
          38    88   101   any
         101   103   101   any
           8    22   112   any
          28    94   112   any
         101   114   112   any

  public boolean removeMessage(long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: lload_1
      13: invokeinterface #100,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.deleteReference:(J)Z
      18: istore_3
      19: aload_0
      20: invokevirtual #37                 // Method blockOnIO:()V
      23: iload_3
      24: ireturn
      25: astore_3
      26: new           #83                 // class java/lang/IllegalStateException
      29: dup
      30: aload_3
      31: invokevirtual #84                 // Method org/apache/activemq/artemis/api/core/ActiveMQException.getMessage:()Ljava/lang/String;
      34: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: astore        4
      40: aload_0
      41: invokevirtual #37                 // Method blockOnIO:()V
      44: aload         4
      46: athrow
    Exception table:
       from    to  target type
           8    19    25   Class org/apache/activemq/artemis/api/core/ActiveMQException
           8    19    38   any
          25    40    38   any

  public int removeMessages(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: sipush        500
       4: aload_1
       5: invokevirtual #102                // Method removeMessages:(ILjava/lang/String;)I
       8: ireturn

  public int removeMessages(int, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_2
       9: invokestatic  #71                 // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
      12: astore_3
      13: aload_0
      14: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      17: iload_1
      18: aload_3
      19: invokeinterface #103,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.deleteMatchingReferences:(ILorg/apache/activemq/artemis/core/filter/Filter;)I
      24: istore        4
      26: aload_0
      27: invokevirtual #37                 // Method blockOnIO:()V
      30: iload         4
      32: ireturn
      33: astore        5
      35: aload_0
      36: invokevirtual #37                 // Method blockOnIO:()V
      39: aload         5
      41: athrow
    Exception table:
       from    to  target type
           8    26    33   any
          33    35    33   any

  public boolean expireMessage(long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: lload_1
      13: invokeinterface #104,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.expireReference:(J)Z
      18: istore_3
      19: aload_0
      20: invokevirtual #37                 // Method blockOnIO:()V
      23: iload_3
      24: ireturn
      25: astore        4
      27: aload_0
      28: invokevirtual #37                 // Method blockOnIO:()V
      31: aload         4
      33: athrow
    Exception table:
       from    to  target type
           8    19    25   any
          25    27    25   any

  public int expireMessages(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_1
       9: invokestatic  #71                 // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
      12: astore_2
      13: aload_0
      14: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      17: aload_2
      18: invokeinterface #105,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.expireReferences:(Lorg/apache/activemq/artemis/core/filter/Filter;)I
      23: istore_3
      24: aload_0
      25: invokevirtual #37                 // Method blockOnIO:()V
      28: iload_3
      29: ireturn
      30: astore_2
      31: new           #83                 // class java/lang/IllegalStateException
      34: dup
      35: aload_2
      36: invokevirtual #84                 // Method org/apache/activemq/artemis/api/core/ActiveMQException.getMessage:()Ljava/lang/String;
      39: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: astore        4
      45: aload_0
      46: invokevirtual #37                 // Method blockOnIO:()V
      49: aload         4
      51: athrow
    Exception table:
       from    to  target type
           8    24    30   Class org/apache/activemq/artemis/api/core/ActiveMQException
           8    24    43   any
          30    45    43   any

  public boolean moveMessage(long, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iconst_0
       4: invokevirtual #106                // Method moveMessage:(JLjava/lang/String;Z)Z
       7: ireturn

  public boolean moveMessage(long, java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #31                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
      12: new           #107                // class org/apache/activemq/artemis/api/core/SimpleString
      15: dup
      16: aload_3
      17: invokespecial #108                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
      20: invokeinterface #109,  2          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/PostOffice.getBinding:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Lorg/apache/activemq/artemis/core/postoffice/Binding;
      25: astore        5
      27: aload         5
      29: ifnonnull     42
      32: getstatic     #110                // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      35: aload_3
      36: invokeinterface #111,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.noQueueFound:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      41: athrow
      42: aload_0
      43: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      46: lload_1
      47: aload         5
      49: invokeinterface #112,  1          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/Binding.getAddress:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      54: iload         4
      56: invokeinterface #113,  5          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.moveReference:(JLorg/apache/activemq/artemis/api/core/SimpleString;Z)Z
      61: istore        6
      63: aload_0
      64: invokevirtual #37                 // Method blockOnIO:()V
      67: iload         6
      69: ireturn
      70: astore        7
      72: aload_0
      73: invokevirtual #37                 // Method blockOnIO:()V
      76: aload         7
      78: athrow
    Exception table:
       from    to  target type
           8    63    70   any
          70    72    70   any

  public int moveMessages(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #114                // Method moveMessages:(Ljava/lang/String;Ljava/lang/String;Z)I
       7: ireturn

  public int moveMessages(int, java.lang.String, java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_2
       9: invokestatic  #71                 // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
      12: astore        5
      14: aload_0
      15: getfield      #31                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
      18: new           #107                // class org/apache/activemq/artemis/api/core/SimpleString
      21: dup
      22: aload_3
      23: invokespecial #108                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
      26: invokeinterface #109,  2          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/PostOffice.getBinding:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Lorg/apache/activemq/artemis/core/postoffice/Binding;
      31: astore        6
      33: aload         6
      35: ifnonnull     48
      38: getstatic     #110                // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      41: aload_3
      42: invokeinterface #111,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.noQueueFound:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      47: athrow
      48: aload_0
      49: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      52: iload_1
      53: aload         5
      55: aload         6
      57: invokeinterface #112,  1          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/Binding.getAddress:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      62: iload         4
      64: invokeinterface #115,  5          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.moveReferences:(ILorg/apache/activemq/artemis/core/filter/Filter;Lorg/apache/activemq/artemis/api/core/SimpleString;Z)I
      69: istore        7
      71: iload         7
      73: istore        8
      75: aload_0
      76: invokevirtual #37                 // Method blockOnIO:()V
      79: iload         8
      81: ireturn
      82: astore        9
      84: aload_0
      85: invokevirtual #37                 // Method blockOnIO:()V
      88: aload         9
      90: athrow
    Exception table:
       from    to  target type
           8    75    82   any
          82    84    82   any

  public int moveMessages(java.lang.String, java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: sipush        500
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #116                // Method moveMessages:(ILjava/lang/String;Ljava/lang/String;Z)I
      10: ireturn

  public int sendMessagesToDeadLetterAddress(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_1
       9: invokestatic  #71                 // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
      12: astore_2
      13: aload_0
      14: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      17: aload_2
      18: invokeinterface #117,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.sendMessagesToDeadLetterAddress:(Lorg/apache/activemq/artemis/core/filter/Filter;)I
      23: istore_3
      24: aload_0
      25: invokevirtual #37                 // Method blockOnIO:()V
      28: iload_3
      29: ireturn
      30: astore        4
      32: aload_0
      33: invokevirtual #37                 // Method blockOnIO:()V
      36: aload         4
      38: athrow
    Exception table:
       from    to  target type
           8    24    30   any
          30    32    30   any

  public boolean sendMessageToDeadLetterAddress(long) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: lload_1
      13: invokeinterface #118,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.sendMessageToDeadLetterAddress:(J)Z
      18: istore_3
      19: aload_0
      20: invokevirtual #37                 // Method blockOnIO:()V
      23: iload_3
      24: ireturn
      25: astore        4
      27: aload_0
      28: invokevirtual #37                 // Method blockOnIO:()V
      31: aload         4
      33: athrow
    Exception table:
       from    to  target type
           8    19    25   any
          25    27    25   any

  public int changeMessagesPriority(java.lang.String, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: iload_2
       9: iflt          18
      12: iload_2
      13: bipush        9
      15: if_icmple     31
      18: getstatic     #110                // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      21: iload_2
      22: invokestatic  #119                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: invokeinterface #120,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.invalidNewPriority:(Ljava/lang/Integer;)Ljava/lang/IllegalArgumentException;
      30: athrow
      31: aload_1
      32: invokestatic  #71                 // Method org/apache/activemq/artemis/core/filter/impl/FilterImpl.createFilter:(Ljava/lang/String;)Lorg/apache/activemq/artemis/core/filter/Filter;
      35: astore_3
      36: aload_0
      37: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      40: aload_3
      41: iload_2
      42: i2b
      43: invokeinterface #121,  3          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.changeReferencesPriority:(Lorg/apache/activemq/artemis/core/filter/Filter;B)I
      48: istore        4
      50: aload_0
      51: invokevirtual #37                 // Method blockOnIO:()V
      54: iload         4
      56: ireturn
      57: astore        5
      59: aload_0
      60: invokevirtual #37                 // Method blockOnIO:()V
      63: aload         5
      65: athrow
    Exception table:
       from    to  target type
           8    50    57   any
          57    59    57   any

  public boolean changeMessagePriority(long, int) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: iload_3
       9: iflt          18
      12: iload_3
      13: bipush        9
      15: if_icmple     31
      18: getstatic     #110                // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      21: iload_3
      22: invokestatic  #119                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: invokeinterface #120,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.invalidNewPriority:(Ljava/lang/Integer;)Ljava/lang/IllegalArgumentException;
      30: athrow
      31: aload_0
      32: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      35: lload_1
      36: iload_3
      37: i2b
      38: invokeinterface #122,  4          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.changeReferencePriority:(JB)Z
      43: istore        4
      45: aload_0
      46: invokevirtual #37                 // Method blockOnIO:()V
      49: iload         4
      51: ireturn
      52: astore        5
      54: aload_0
      55: invokevirtual #37                 // Method blockOnIO:()V
      58: aload         5
      60: athrow
    Exception table:
       from    to  target type
           8    45    52   any
          52    54    52   any

  public java.lang.String listMessageCounter();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #33                 // Field counter:Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;
      12: invokestatic  #123                // Method org/apache/activemq/artemis/api/core/management/MessageCounterInfo.toJSon:(Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;)Ljava/lang/String;
      15: astore_1
      16: aload_0
      17: invokevirtual #37                 // Method blockOnIO:()V
      20: aload_1
      21: areturn
      22: astore_1
      23: new           #83                 // class java/lang/IllegalStateException
      26: dup
      27: aload_1
      28: invokespecial #125                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
      32: astore_2
      33: aload_0
      34: invokevirtual #37                 // Method blockOnIO:()V
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           8    16    22   Class java/lang/Exception
           8    16    32   any
          22    33    32   any

  public void resetMessageCounter();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #33                 // Field counter:Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;
      12: invokevirtual #126                // Method org/apache/activemq/artemis/core/messagecounter/MessageCounter.resetCounter:()V
      15: aload_0
      16: invokevirtual #37                 // Method blockOnIO:()V
      19: goto          29
      22: astore_1
      23: aload_0
      24: invokevirtual #37                 // Method blockOnIO:()V
      27: aload_1
      28: athrow
      29: return
    Exception table:
       from    to  target type
           8    15    22   any

  public java.lang.String listMessageCounterAsHTML();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: iconst_1
       9: anewarray     #127                // class org/apache/activemq/artemis/core/messagecounter/MessageCounter
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #33                 // Field counter:Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;
      18: aastore
      19: invokestatic  #128                // Method org/apache/activemq/artemis/core/messagecounter/impl/MessageCounterHelper.listMessageCounterAsHTML:([Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;)Ljava/lang/String;
      22: astore_1
      23: aload_0
      24: invokevirtual #37                 // Method blockOnIO:()V
      27: aload_1
      28: areturn
      29: astore_2
      30: aload_0
      31: invokevirtual #37                 // Method blockOnIO:()V
      34: aload_2
      35: athrow
    Exception table:
       from    to  target type
           8    23    29   any

  public java.lang.String listMessageCounterHistory() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #33                 // Field counter:Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;
      12: invokestatic  #129                // Method org/apache/activemq/artemis/core/messagecounter/impl/MessageCounterHelper.listMessageCounterHistory:(Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;)Ljava/lang/String;
      15: astore_1
      16: aload_0
      17: invokevirtual #37                 // Method blockOnIO:()V
      20: aload_1
      21: areturn
      22: astore_2
      23: aload_0
      24: invokevirtual #37                 // Method blockOnIO:()V
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           8    16    22   any

  public java.lang.String listMessageCounterHistoryAsHTML();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: iconst_1
       9: anewarray     #127                // class org/apache/activemq/artemis/core/messagecounter/MessageCounter
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #33                 // Field counter:Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;
      18: aastore
      19: invokestatic  #130                // Method org/apache/activemq/artemis/core/messagecounter/impl/MessageCounterHelper.listMessageCounterHistoryAsHTML:([Lorg/apache/activemq/artemis/core/messagecounter/MessageCounter;)Ljava/lang/String;
      22: astore_1
      23: aload_0
      24: invokevirtual #37                 // Method blockOnIO:()V
      27: aload_1
      28: areturn
      29: astore_2
      30: aload_0
      31: invokevirtual #37                 // Method blockOnIO:()V
      34: aload_2
      35: athrow
    Exception table:
       from    to  target type
           8    23    29   any

  public void pause();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #131,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.pause:()V
      17: aload_0
      18: invokevirtual #37                 // Method blockOnIO:()V
      21: goto          31
      24: astore_1
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_1
      30: athrow
      31: return
    Exception table:
       from    to  target type
           8    17    24   any

  public void resume();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #132,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.resume:()V
      17: aload_0
      18: invokevirtual #37                 // Method blockOnIO:()V
      21: goto          31
      24: astore_1
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_1
      30: athrow
      31: return
    Exception table:
       from    to  target type
           8    17    24   any

  public boolean isPaused() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #133,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.isPaused:()Z
      17: istore_1
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: iload_1
      23: ireturn
      24: astore_2
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           8    18    24   any

  public void flushExecutor();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #74,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.flushExecutor:()Z
      17: pop
      18: aload_0
      19: invokevirtual #37                 // Method blockOnIO:()V
      22: goto          32
      25: astore_1
      26: aload_0
      27: invokevirtual #37                 // Method blockOnIO:()V
      30: aload_1
      31: athrow
      32: return
    Exception table:
       from    to  target type
           8    18    25   any

  public java.lang.String listConsumersAsJSON() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #134,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.getConsumers:()Ljava/util/Collection;
      17: astore_1
      18: new           #3                  // class org/apache/activemq/artemis/utils/json/JSONArray
      21: dup
      22: invokespecial #4                  // Method org/apache/activemq/artemis/utils/json/JSONArray."<init>":()V
      25: astore_2
      26: aload_1
      27: invokeinterface #135,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore_3
      33: aload_3
      34: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          165
      42: aload_3
      43: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #136                // class org/apache/activemq/artemis/core/server/Consumer
      51: astore        4
      53: aload         4
      55: instanceof    #137                // class org/apache/activemq/artemis/core/server/ServerConsumer
      58: ifeq          162
      61: aload         4
      63: checkcast     #137                // class org/apache/activemq/artemis/core/server/ServerConsumer
      66: astore        5
      68: new           #5                  // class org/apache/activemq/artemis/utils/json/JSONObject
      71: dup
      72: invokespecial #13                 // Method org/apache/activemq/artemis/utils/json/JSONObject."<init>":()V
      75: astore        6
      77: aload         6
      79: ldc           #138                // String consumerID
      81: aload         5
      83: invokeinterface #139,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ServerConsumer.getID:()J
      88: invokevirtual #140                // Method org/apache/activemq/artemis/utils/json/JSONObject.put:(Ljava/lang/String;J)Lorg/apache/activemq/artemis/utils/json/JSONObject;
      91: pop
      92: aload         6
      94: ldc           #141                // String connectionID
      96: aload         5
      98: invokeinterface #142,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ServerConsumer.getConnectionID:()Ljava/lang/Object;
     103: invokevirtual #143                // Method java/lang/Object.toString:()Ljava/lang/String;
     106: invokevirtual #16                 // Method org/apache/activemq/artemis/utils/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONObject;
     109: pop
     110: aload         6
     112: ldc           #144                // String sessionID
     114: aload         5
     116: invokeinterface #145,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ServerConsumer.getSessionID:()Ljava/lang/String;
     121: invokevirtual #16                 // Method org/apache/activemq/artemis/utils/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONObject;
     124: pop
     125: aload         6
     127: ldc           #146                // String browseOnly
     129: aload         5
     131: invokeinterface #147,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ServerConsumer.isBrowseOnly:()Z
     136: invokevirtual #148                // Method org/apache/activemq/artemis/utils/json/JSONObject.put:(Ljava/lang/String;Z)Lorg/apache/activemq/artemis/utils/json/JSONObject;
     139: pop
     140: aload         6
     142: ldc           #149                // String creationTime
     144: aload         5
     146: invokeinterface #150,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ServerConsumer.getCreationTime:()J
     151: invokevirtual #140                // Method org/apache/activemq/artemis/utils/json/JSONObject.put:(Ljava/lang/String;J)Lorg/apache/activemq/artemis/utils/json/JSONObject;
     154: pop
     155: aload_2
     156: aload         6
     158: invokevirtual #7                  // Method org/apache/activemq/artemis/utils/json/JSONArray.put:(Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONArray;
     161: pop
     162: goto          33
     165: aload_2
     166: invokevirtual #2                  // Method org/apache/activemq/artemis/utils/json/JSONArray.toString:()Ljava/lang/String;
     169: astore_3
     170: aload_0
     171: invokevirtual #37                 // Method blockOnIO:()V
     174: aload_3
     175: areturn
     176: astore        7
     178: aload_0
     179: invokevirtual #37                 // Method blockOnIO:()V
     182: aload         7
     184: athrow
    Exception table:
       from    to  target type
           8   170   176   any
         176   178   176   any

  protected javax.management.MBeanOperationInfo[] fillMBeanOperationInfo();
    Code:
       0: ldc           #27                 // class org/apache/activemq/artemis/api/core/management/QueueControl
       2: invokestatic  #151                // Method org/apache/activemq/artemis/core/management/impl/MBeanInfoHelper.getMBeanOperationsInfo:(Ljava/lang/Class;)[Ljavax/management/MBeanOperationInfo;
       5: areturn

  public void resetMessagesAdded() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #152,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.resetMessagesAdded:()V
      17: aload_0
      18: invokevirtual #37                 // Method blockOnIO:()V
      21: goto          31
      24: astore_1
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_1
      30: athrow
      31: return
    Exception table:
       from    to  target type
           8    17    24   any

  public void resetMessagesAcknowledged() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method checkStarted:()V
       4: aload_0
       5: invokevirtual #34                 // Method clearIO:()V
       8: aload_0
       9: getfield      #29                 // Field queue:Lorg/apache/activemq/artemis/core/server/Queue;
      12: invokeinterface #153,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/Queue.resetMessagesAcknowledged:()V
      17: aload_0
      18: invokevirtual #37                 // Method blockOnIO:()V
      21: goto          31
      24: astore_1
      25: aload_0
      26: invokevirtual #37                 // Method blockOnIO:()V
      29: aload_1
      30: athrow
      31: return
    Exception table:
       from    to  target type
           8    17    24   any

  private void checkStarted();
    Code:
       0: aload_0
       1: getfield      #31                 // Field postOffice:Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
       4: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/PostOffice.isStarted:()Z
       9: ifne          22
      12: new           #83                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #155                // String Broker is not started. Queue can not be managed yet
      18: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: return
}
