Compiled from "ActiveMQConnectionFactory.java"
public class org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory implements java.io.Externalizable,javax.naming.Referenceable,javax.jms.ConnectionFactory,javax.jms.XAConnectionFactory,java.lang.AutoCloseable {
  private org.apache.activemq.artemis.api.core.client.ServerLocator serverLocator;

  private java.lang.String clientID;

  private int dupsOKBatchSize;

  private int transactionBatchSize;

  private boolean readOnly;

  private java.lang.String user;

  private java.lang.String password;

  private java.lang.String protocolManagerFactoryStr;

  public void writeExternal(java.io.ObjectOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method toURI:()Ljava/net/URI;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #3                  // Method java/net/URI.toASCIIString:()Ljava/lang/String;
      10: invokeinterface #4,  2            // InterfaceMethod java/io/ObjectOutput.writeUTF:(Ljava/lang/String;)V
      15: goto          40
      18: astore_3
      19: aload_3
      20: instanceof    #6                  // class java/io/IOException
      23: ifeq          31
      26: aload_3
      27: checkcast     #6                  // class java/io/IOException
      30: athrow
      31: new           #6                  // class java/io/IOException
      34: dup
      35: aload_3
      36: invokespecial #7                  // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      39: athrow
      40: return
    Exception table:
       from    to  target type
           5    15    18   Class java/lang/Exception

  public java.net.URI toURI() throws java.io.IOException;
    Code:
       0: new           #8                  // class org/apache/activemq/artemis/uri/ConnectionFactoryParser
       3: dup
       4: invokespecial #9                  // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      12: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getDiscoveryGroupConfiguration:()Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      17: ifnull        50
      20: aload_0
      21: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      24: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getDiscoveryGroupConfiguration:()Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
      29: invokevirtual #11                 // Method org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration.getBroadcastEndpointFactory:()Lorg/apache/activemq/artemis/api/core/BroadcastEndpointFactory;
      32: instanceof    #12                 // class org/apache/activemq/artemis/api/core/UDPBroadcastEndpointFactory
      35: ifeq          44
      38: ldc           #13                 // String udp
      40: astore_2
      41: goto          71
      44: ldc           #14                 // String jgroups
      46: astore_2
      47: goto          71
      50: aload_0
      51: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      54: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.allInVM:()Z
      59: ifeq          68
      62: ldc           #16                 // String vm
      64: astore_2
      65: goto          71
      68: ldc           #17                 // String tcp
      70: astore_2
      71: aload_1
      72: aload_2
      73: aload_0
      74: invokevirtual #18                 // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser.createSchema:(Ljava/lang/String;Ljava/lang/Object;)Ljava/net/URI;
      77: astore_3
      78: goto          107
      81: astore        4
      83: aload         4
      85: instanceof    #6                  // class java/io/IOException
      88: ifeq          97
      91: aload         4
      93: checkcast     #6                  // class java/io/IOException
      96: athrow
      97: new           #6                  // class java/io/IOException
     100: dup
     101: aload         4
     103: invokespecial #7                  // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     106: athrow
     107: aload_3
     108: areturn
    Exception table:
       from    to  target type
          71    78    81   Class java/lang/Exception

  public java.lang.String getProtocolManagerFactoryStr();
    Code:
       0: aload_0
       1: getfield      #19                 // Field protocolManagerFactoryStr:Ljava/lang/String;
       4: areturn

  public void setProtocolManagerFactoryStr(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        32
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #21                 // Method java/lang/String.isEmpty:()Z
      11: ifne          32
      14: new           #22                 // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory$1
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #23                 // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory$1."<init>":(Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;Ljava/lang/String;)V
      23: invokestatic  #24                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: aload_1
      29: putfield      #19                 // Field protocolManagerFactoryStr:Ljava/lang/String;
      32: return

  public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod java/io/ObjectInput.readUTF:()Ljava/lang/String;
       6: astore_2
       7: new           #8                  // class org/apache/activemq/artemis/uri/ConnectionFactoryParser
      10: dup
      11: invokespecial #9                  // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser."<init>":()V
      14: astore_3
      15: new           #26                 // class org/apache/activemq/artemis/uri/ServerLocatorParser
      18: dup
      19: invokespecial #27                 // Method org/apache/activemq/artemis/uri/ServerLocatorParser."<init>":()V
      22: astore        4
      24: new           #28                 // class java/net/URI
      27: dup
      28: aload_2
      29: invokespecial #29                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      32: astore        5
      34: aload_0
      35: aload         4
      37: aload         5
      39: aconst_null
      40: invokevirtual #30                 // Method org/apache/activemq/artemis/uri/ServerLocatorParser.newObject:(Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #31                 // class org/apache/activemq/artemis/api/core/client/ServerLocator
      46: putfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      49: aload_3
      50: aload         5
      52: aload_0
      53: invokevirtual #32                 // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser.populateObject:(Ljava/net/URI;Ljava/lang/Object;)V
      56: goto          74
      59: astore        5
      61: new           #33                 // class java/io/InvalidObjectException
      64: dup
      65: aload         5
      67: invokevirtual #34                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      70: invokespecial #35                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: return
    Exception table:
       from    to  target type
          24    56    59   Class java/lang/Exception

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory();
    Code:
       0: aload_0
       1: getstatic     #36                 // Field org/apache/activemq/artemis/jms/client/DefaultConnectionProperties.DEFAULT_BROKER_URL:Ljava/lang/String;
       4: invokespecial #37                 // Method "<init>":(Ljava/lang/String;)V
       7: return

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #40                 // int 1048576
       7: putfield      #41                 // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #40                 // int 1048576
      13: putfield      #42                 // Field transactionBatchSize:I
      16: new           #8                  // class org/apache/activemq/artemis/uri/ConnectionFactoryParser
      19: dup
      20: invokespecial #9                  // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser."<init>":()V
      23: astore_2
      24: new           #28                 // class java/net/URI
      27: dup
      28: aload_1
      29: invokespecial #29                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      32: astore_3
      33: aload_0
      34: aload_3
      35: invokestatic  #43                 // Method org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl.newLocator:(Ljava/net/URI;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      38: putfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      41: aload_2
      42: aload_3
      43: aload_0
      44: invokevirtual #32                 // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser.populateObject:(Ljava/net/URI;Ljava/lang/Object;)V
      47: goto          64
      50: astore_3
      51: new           #44                 // class java/lang/RuntimeException
      54: dup
      55: aload_3
      56: invokevirtual #34                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      59: aload_3
      60: invokespecial #45                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: athrow
      64: aload_0
      65: invokevirtual #46                 // Method getUser:()Ljava/lang/String;
      68: ifnonnull     79
      71: aload_0
      72: getstatic     #47                 // Field org/apache/activemq/artemis/jms/client/DefaultConnectionProperties.DEFAULT_USER:Ljava/lang/String;
      75: invokevirtual #48                 // Method setUser:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      78: pop
      79: aload_0
      80: invokevirtual #49                 // Method getPassword:()Ljava/lang/String;
      83: ifnonnull     94
      86: aload_0
      87: getstatic     #50                 // Field org/apache/activemq/artemis/jms/client/DefaultConnectionProperties.DEFAULT_PASSWORD:Ljava/lang/String;
      90: invokevirtual #51                 // Method setPassword:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      93: pop
      94: return
    Exception table:
       from    to  target type
          24    47    50   Class java/lang/Exception

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method "<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #48                 // Method setUser:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      10: aload_3
      11: invokevirtual #51                 // Method setPassword:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      14: pop
      15: return

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory(org.apache.activemq.artemis.api.core.client.ServerLocator);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #40                 // int 1048576
       7: putfield      #41                 // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #40                 // int 1048576
      13: putfield      #42                 // Field transactionBatchSize:I
      16: aload_0
      17: aload_1
      18: putfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      21: aload_1
      22: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.disableFinalizeCheck:()V
      27: return

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory(boolean, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #40                 // int 1048576
       7: putfield      #41                 // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #40                 // int 1048576
      13: putfield      #42                 // Field transactionBatchSize:I
      16: iload_1
      17: ifeq          31
      20: aload_0
      21: aload_2
      22: invokestatic  #53                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      25: putfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      28: goto          39
      31: aload_0
      32: aload_2
      33: invokestatic  #54                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithoutHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      36: putfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      39: aload_0
      40: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      43: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.disableFinalizeCheck:()V
      48: return

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory(boolean, org.apache.activemq.artemis.api.core.TransportConfiguration...);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #40                 // int 1048576
       7: putfield      #41                 // Field dupsOKBatchSize:I
      10: aload_0
      11: ldc           #40                 // int 1048576
      13: putfield      #42                 // Field transactionBatchSize:I
      16: iload_1
      17: ifeq          31
      20: aload_0
      21: aload_2
      22: invokestatic  #55                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:([Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      25: putfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      28: goto          39
      31: aload_0
      32: aload_2
      33: invokestatic  #56                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithoutHA:([Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      36: putfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      39: aload_0
      40: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      43: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.disableFinalizeCheck:()V
      48: return

  public javax.jms.Connection createConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #57                 // Field user:Ljava/lang/String;
       5: aload_0
       6: getfield      #58                 // Field password:Ljava/lang/String;
       9: invokevirtual #59                 // Method createConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/Connection;
      12: areturn

  public javax.jms.Connection createConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_0
       5: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
       8: areturn

  public javax.jms.JMSContext createContext();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #57                 // Field user:Ljava/lang/String;
       5: aload_0
       6: getfield      #58                 // Field password:Ljava/lang/String;
       9: invokevirtual #62                 // Method createContext:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/JMSContext;
      12: areturn

  public javax.jms.JMSContext createContext(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #57                 // Field user:Ljava/lang/String;
       5: aload_0
       6: getfield      #58                 // Field password:Ljava/lang/String;
       9: iload_1
      10: invokevirtual #63                 // Method createContext:(Ljava/lang/String;Ljava/lang/String;I)Ljavax/jms/JMSContext;
      13: areturn

  public javax.jms.JMSContext createContext(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #63                 // Method createContext:(Ljava/lang/String;Ljava/lang/String;I)Ljavax/jms/JMSContext;
       7: areturn

  public javax.jms.JMSContext createContext(java.lang.String, java.lang.String, int);
    Code:
       0: iload_3
       1: invokestatic  #65                 // Method validateSessionMode:(I)V
       4: aload_0
       5: aload_1
       6: aload_2
       7: iconst_0
       8: iconst_0
       9: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
      12: astore        4
      14: aload         4
      16: iload_3
      17: invokevirtual #66                 // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection.createContext:(I)Ljavax/jms/JMSContext;
      20: areturn
      21: astore        4
      23: new           #68                 // class javax/jms/JMSSecurityRuntimeException
      26: dup
      27: aload         4
      29: invokevirtual #69                 // Method javax/jms/JMSSecurityException.getMessage:()Ljava/lang/String;
      32: aload         4
      34: invokevirtual #70                 // Method javax/jms/JMSSecurityException.getErrorCode:()Ljava/lang/String;
      37: aload         4
      39: invokespecial #71                 // Method javax/jms/JMSSecurityRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
      43: astore        4
      45: aload         4
      47: invokestatic  #73                 // Method org/apache/activemq/artemis/jms/client/JmsExceptionUtils.convertToRuntimeException:(Ljavax/jms/JMSException;)Ljavax/jms/JMSRuntimeException;
      50: athrow
    Exception table:
       from    to  target type
           4    20    21   Class javax/jms/JMSSecurityException
           4    20    43   Class javax/jms/JMSException

  private static void validateSessionMode(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 32
                     2: 32
                     3: 32
               default: 33
          }
      32: return
      33: new           #74                 // class javax/jms/JMSRuntimeException
      36: dup
      37: new           #75                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #77                 // String Invalid Session Mode:
      46: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_0
      50: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #81                 // Method javax/jms/JMSRuntimeException."<init>":(Ljava/lang/String;)V
      59: athrow

  public javax.jms.QueueConnection createQueueConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #82                 // Method createQueueConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/QueueConnection;
       6: areturn

  public javax.jms.QueueConnection createQueueConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_1
       5: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
       8: areturn

  public javax.jms.TopicConnection createTopicConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #83                 // Method createTopicConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/TopicConnection;
       6: areturn

  public javax.jms.TopicConnection createTopicConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: iconst_2
       5: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
       8: areturn

  public javax.jms.XAConnection createXAConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #84                 // Method createXAConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAConnection;
       6: areturn

  public javax.jms.XAConnection createXAConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_0
       5: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
       8: checkcast     #85                 // class javax/jms/XAConnection
      11: areturn

  public javax.jms.XAJMSContext createXAContext();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #86                 // Method createXAContext:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAJMSContext;
       6: areturn

  public javax.jms.XAJMSContext createXAContext(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_0
       5: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
       8: astore_3
       9: aload_3
      10: invokevirtual #87                 // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection.createXAContext:()Ljavax/jms/XAJMSContext;
      13: areturn
      14: astore_3
      15: new           #68                 // class javax/jms/JMSSecurityRuntimeException
      18: dup
      19: aload_3
      20: invokevirtual #69                 // Method javax/jms/JMSSecurityException.getMessage:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #70                 // Method javax/jms/JMSSecurityException.getErrorCode:()Ljava/lang/String;
      27: aload_3
      28: invokespecial #71                 // Method javax/jms/JMSSecurityRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      31: athrow
      32: astore_3
      33: aload_3
      34: invokestatic  #73                 // Method org/apache/activemq/artemis/jms/client/JmsExceptionUtils.convertToRuntimeException:(Ljavax/jms/JMSException;)Ljavax/jms/JMSRuntimeException;
      37: athrow
    Exception table:
       from    to  target type
           0    13    14   Class javax/jms/JMSSecurityException
           0    13    32   Class javax/jms/JMSException

  public javax.jms.XAQueueConnection createXAQueueConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #88                 // Method createXAQueueConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XAQueueConnection;
       6: areturn

  public javax.jms.XAQueueConnection createXAQueueConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_1
       5: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
       8: checkcast     #89                 // class javax/jms/XAQueueConnection
      11: areturn

  public javax.jms.XATopicConnection createXATopicConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #90                 // Method createXATopicConnection:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/XATopicConnection;
       6: areturn

  public javax.jms.XATopicConnection createXATopicConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_2
       5: invokevirtual #61                 // Method createConnectionInternal:(Ljava/lang/String;Ljava/lang/String;ZI)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnection;
       8: checkcast     #91                 // class javax/jms/XATopicConnection
      11: areturn

  public javax.naming.Reference getReference() throws javax.naming.NamingException;
    Code:
       0: new           #92                 // class javax/naming/Reference
       3: dup
       4: aload_0
       5: invokevirtual #93                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #94                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      11: new           #95                 // class org/apache/activemq/artemis/jms/referenceable/SerializableObjectRefAddr
      14: dup
      15: ldc           #96                 // String ActiveMQ-CF
      17: aload_0
      18: invokespecial #97                 // Method org/apache/activemq/artemis/jms/referenceable/SerializableObjectRefAddr."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      21: ldc           #98                 // class org/apache/activemq/artemis/jms/referenceable/ConnectionFactoryObjectFactory
      23: invokevirtual #94                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      26: aconst_null
      27: invokespecial #99                 // Method javax/naming/Reference."<init>":(Ljava/lang/String;Ljavax/naming/RefAddr;Ljava/lang/String;Ljava/lang/String;)V
      30: areturn

  public boolean isHA();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #100,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isHA:()Z
       9: ireturn

  public synchronized java.lang.String getConnectionLoadBalancingPolicyClassName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #101,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getConnectionLoadBalancingPolicyClassName:()Ljava/lang/String;
       9: areturn

  public synchronized void setConnectionLoadBalancingPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: aload_1
       9: invokeinterface #103,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setConnectionLoadBalancingPolicyClassName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized org.apache.activemq.artemis.api.core.TransportConfiguration[] getStaticConnectors();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #104,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getStaticTransportConfigurations:()[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       9: areturn

  public synchronized org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration getDiscoveryGroupConfiguration();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getDiscoveryGroupConfiguration:()Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
       9: areturn

  public synchronized java.lang.String getClientID();
    Code:
       0: aload_0
       1: getfield      #105                // Field clientID:Ljava/lang/String;
       4: areturn

  public synchronized void setClientID(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: aload_1
       6: putfield      #105                // Field clientID:Ljava/lang/String;
       9: return

  public synchronized int getDupsOKBatchSize();
    Code:
       0: aload_0
       1: getfield      #41                 // Field dupsOKBatchSize:I
       4: ireturn

  public synchronized void setDupsOKBatchSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #41                 // Field dupsOKBatchSize:I
       9: return

  public synchronized int getTransactionBatchSize();
    Code:
       0: aload_0
       1: getfield      #42                 // Field transactionBatchSize:I
       4: ireturn

  public synchronized void setTransactionBatchSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: iload_1
       6: putfield      #42                 // Field transactionBatchSize:I
       9: return

  public synchronized long getClientFailureCheckPeriod();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #106,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getClientFailureCheckPeriod:()J
       9: lreturn

  public synchronized void setClientFailureCheckPeriod(long);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #107,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setClientFailureCheckPeriod:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized long getConnectionTTL();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #108,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getConnectionTTL:()J
       9: lreturn

  public synchronized void setConnectionTTL(long);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #109,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setConnectionTTL:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized long getCallTimeout();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #110,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getCallTimeout:()J
       9: lreturn

  public synchronized void setCallTimeout(long);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #111,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setCallTimeout:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized long getCallFailoverTimeout();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #112,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getCallFailoverTimeout:()J
       9: lreturn

  public synchronized void setCallFailoverTimeout(long);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #113,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setCallFailoverTimeout:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getConsumerWindowSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #114,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getConsumerWindowSize:()I
       9: ireturn

  public synchronized void setConsumerWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #115,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setConsumerWindowSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getConsumerMaxRate();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #116,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getConsumerMaxRate:()I
       9: ireturn

  public synchronized void setConsumerMaxRate(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #117,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setConsumerMaxRate:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getConfirmationWindowSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #118,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getConfirmationWindowSize:()I
       9: ireturn

  public synchronized void setConfirmationWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #119,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setConfirmationWindowSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getProducerMaxRate();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #120,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getProducerMaxRate:()I
       9: ireturn

  public synchronized void setProducerMaxRate(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #121,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setProducerMaxRate:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getProducerWindowSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #122,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getProducerWindowSize:()I
       9: ireturn

  public synchronized void setProducerWindowSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #123,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setProducerWindowSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized void setCacheLargeMessagesClient(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #124,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setCacheLargeMessagesClient:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized boolean isCacheLargeMessagesClient();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #125,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isCacheLargeMessagesClient:()Z
       9: ireturn

  public synchronized int getMinLargeMessageSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #126,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getMinLargeMessageSize:()I
       9: ireturn

  public synchronized void setMinLargeMessageSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #127,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setMinLargeMessageSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized boolean isBlockOnAcknowledge();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #128,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isBlockOnAcknowledge:()Z
       9: ireturn

  public synchronized void setBlockOnAcknowledge(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #129,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setBlockOnAcknowledge:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized boolean isBlockOnNonDurableSend();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #130,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isBlockOnNonDurableSend:()Z
       9: ireturn

  public synchronized void setBlockOnNonDurableSend(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #131,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setBlockOnNonDurableSend:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized boolean isBlockOnDurableSend();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #132,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isBlockOnDurableSend:()Z
       9: ireturn

  public synchronized void setBlockOnDurableSend(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #133,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setBlockOnDurableSend:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized boolean isAutoGroup();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #134,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isAutoGroup:()Z
       9: ireturn

  public synchronized void setAutoGroup(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #135,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setAutoGroup:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized boolean isPreAcknowledge();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #136,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isPreAcknowledge:()Z
       9: ireturn

  public synchronized void setPreAcknowledge(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #137,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setPreAcknowledge:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized long getRetryInterval();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #138,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getRetryInterval:()J
       9: lreturn

  public synchronized void setRetryInterval(long);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #139,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setRetryInterval:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized long getMaxRetryInterval();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #140,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getMaxRetryInterval:()J
       9: lreturn

  public synchronized void setMaxRetryInterval(long);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: lload_1
       9: invokeinterface #141,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setMaxRetryInterval:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized double getRetryIntervalMultiplier();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #142,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getRetryIntervalMultiplier:()D
       9: dreturn

  public synchronized void setRetryIntervalMultiplier(double);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: dload_1
       9: invokeinterface #143,  3          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setRetryIntervalMultiplier:(D)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getReconnectAttempts();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #144,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getReconnectAttempts:()I
       9: ireturn

  public synchronized void setReconnectAttempts(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #145,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setReconnectAttempts:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized void setInitialConnectAttempts(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #146,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setInitialConnectAttempts:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getInitialConnectAttempts();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #147,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getInitialConnectAttempts:()I
       9: ireturn

  public synchronized boolean isFailoverOnInitialConnection();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #148,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isFailoverOnInitialConnection:()Z
       9: ireturn

  public synchronized void setFailoverOnInitialConnection(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #149,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setFailoverOnInitialConnection:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized boolean isUseGlobalPools();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #150,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isUseGlobalPools:()Z
       9: ireturn

  public synchronized void setUseGlobalPools(boolean);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #151,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setUseGlobalPools:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getScheduledThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #152,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getScheduledThreadPoolMaxSize:()I
       9: ireturn

  public synchronized void setScheduledThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #153,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setScheduledThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getThreadPoolMaxSize:()I
       9: ireturn

  public synchronized void setThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #155,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public synchronized int getInitialMessagePacketSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #156,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getInitialMessagePacketSize:()I
       9: ireturn

  public synchronized void setInitialMessagePacketSize(int);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: iload_1
       9: invokeinterface #157,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setInitialMessagePacketSize:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public void setIncomingInterceptorList(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       8: aload_1
       9: invokeinterface #158,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setIncomingInterceptorList:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      14: pop
      15: return

  public java.lang.String getIncomingInterceptorList();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #159,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getIncomingInterceptorList:()Ljava/lang/String;
       9: areturn

  public void setOutgoingInterceptorList(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: aload_1
       5: invokeinterface #160,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setOutgoingInterceptorList:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      10: pop
      11: return

  public java.lang.String getOutgoingInterceptorList();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #161,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getOutgoingInterceptorList:()Ljava/lang/String;
       9: areturn

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory setUser(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: aload_1
       6: putfield      #57                 // Field user:Ljava/lang/String;
       9: aload_0
      10: areturn

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #57                 // Field user:Ljava/lang/String;
       4: areturn

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #58                 // Field password:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory setPassword(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #102                // Method checkWrite:()V
       4: aload_0
       5: aload_1
       6: putfield      #58                 // Field password:Ljava/lang/String;
       9: aload_0
      10: areturn

  public void setGroupID(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: aload_1
       5: invokeinterface #162,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setGroupID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      10: pop
      11: return

  public java.lang.String getGroupID();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #163,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getGroupID:()Ljava/lang/String;
       9: areturn

  public boolean isCompressLargeMessage();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #164,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.isCompressLargeMessage:()Z
       9: ireturn

  public void setCompressLargeMessage(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: iload_1
       5: invokeinterface #165,  2          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setCompressLargeMessage:(Z)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      10: pop
      11: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #166,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.close:()V
      15: return

  public org.apache.activemq.artemis.api.core.client.ServerLocator getServerLocator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: areturn

  public int getFactoryType();
    Code:
       0: getstatic     #167                // Field org/apache/activemq/artemis/api/jms/JMSFactoryType.CF:Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
       3: invokevirtual #168                // Method org/apache/activemq/artemis/api/jms/JMSFactoryType.intValue:()I
       6: ireturn

  protected synchronized org.apache.activemq.artemis.jms.client.ActiveMQConnection createConnectionInternal(java.lang.String, java.lang.String, boolean, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #169                // Field readOnly:Z
       5: aload_0
       6: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       9: invokeinterface #170,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.createSessionFactory:()Lorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;
      14: astore        5
      16: goto          50
      19: astore        6
      21: new           #72                 // class javax/jms/JMSException
      24: dup
      25: ldc           #171                // String Failed to create session factory
      27: invokespecial #172                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      30: astore        7
      32: aload         7
      34: aload         6
      36: invokevirtual #173                // Method javax/jms/JMSException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      39: pop
      40: aload         7
      42: aload         6
      44: invokevirtual #174                // Method javax/jms/JMSException.setLinkedException:(Ljava/lang/Exception;)V
      47: aload         7
      49: athrow
      50: aconst_null
      51: astore        6
      53: iload_3
      54: ifeq          164
      57: iload         4
      59: ifne          92
      62: new           #175                // class org/apache/activemq/artemis/jms/client/ActiveMQXAConnection
      65: dup
      66: aload_1
      67: aload_2
      68: iload         4
      70: aload_0
      71: getfield      #105                // Field clientID:Ljava/lang/String;
      74: aload_0
      75: getfield      #41                 // Field dupsOKBatchSize:I
      78: aload_0
      79: getfield      #42                 // Field transactionBatchSize:I
      82: aload         5
      84: invokespecial #176                // Method org/apache/activemq/artemis/jms/client/ActiveMQXAConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;)V
      87: astore        6
      89: goto          268
      92: iload         4
      94: iconst_1
      95: if_icmpne     128
      98: new           #175                // class org/apache/activemq/artemis/jms/client/ActiveMQXAConnection
     101: dup
     102: aload_1
     103: aload_2
     104: iload         4
     106: aload_0
     107: getfield      #105                // Field clientID:Ljava/lang/String;
     110: aload_0
     111: getfield      #41                 // Field dupsOKBatchSize:I
     114: aload_0
     115: getfield      #42                 // Field transactionBatchSize:I
     118: aload         5
     120: invokespecial #176                // Method org/apache/activemq/artemis/jms/client/ActiveMQXAConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;)V
     123: astore        6
     125: goto          268
     128: iload         4
     130: iconst_2
     131: if_icmpne     268
     134: new           #175                // class org/apache/activemq/artemis/jms/client/ActiveMQXAConnection
     137: dup
     138: aload_1
     139: aload_2
     140: iload         4
     142: aload_0
     143: getfield      #105                // Field clientID:Ljava/lang/String;
     146: aload_0
     147: getfield      #41                 // Field dupsOKBatchSize:I
     150: aload_0
     151: getfield      #42                 // Field transactionBatchSize:I
     154: aload         5
     156: invokespecial #176                // Method org/apache/activemq/artemis/jms/client/ActiveMQXAConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;)V
     159: astore        6
     161: goto          268
     164: iload         4
     166: ifne          199
     169: new           #60                 // class org/apache/activemq/artemis/jms/client/ActiveMQConnection
     172: dup
     173: aload_1
     174: aload_2
     175: iload         4
     177: aload_0
     178: getfield      #105                // Field clientID:Ljava/lang/String;
     181: aload_0
     182: getfield      #41                 // Field dupsOKBatchSize:I
     185: aload_0
     186: getfield      #42                 // Field transactionBatchSize:I
     189: aload         5
     191: invokespecial #177                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;)V
     194: astore        6
     196: goto          268
     199: iload         4
     201: iconst_1
     202: if_icmpne     235
     205: new           #60                 // class org/apache/activemq/artemis/jms/client/ActiveMQConnection
     208: dup
     209: aload_1
     210: aload_2
     211: iload         4
     213: aload_0
     214: getfield      #105                // Field clientID:Ljava/lang/String;
     217: aload_0
     218: getfield      #41                 // Field dupsOKBatchSize:I
     221: aload_0
     222: getfield      #42                 // Field transactionBatchSize:I
     225: aload         5
     227: invokespecial #177                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;)V
     230: astore        6
     232: goto          268
     235: iload         4
     237: iconst_2
     238: if_icmpne     268
     241: new           #60                 // class org/apache/activemq/artemis/jms/client/ActiveMQConnection
     244: dup
     245: aload_1
     246: aload_2
     247: iload         4
     249: aload_0
     250: getfield      #105                // Field clientID:Ljava/lang/String;
     253: aload_0
     254: getfield      #41                 // Field dupsOKBatchSize:I
     257: aload_0
     258: getfield      #42                 // Field transactionBatchSize:I
     261: aload         5
     263: invokespecial #177                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IILorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;)V
     266: astore        6
     268: aload         6
     270: ifnonnull     301
     273: new           #72                 // class javax/jms/JMSException
     276: dup
     277: new           #75                 // class java/lang/StringBuilder
     280: dup
     281: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
     284: ldc           #178                // String Failed to create connection: invalid type
     286: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: iload         4
     291: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     294: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     297: invokespecial #172                // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
     300: athrow
     301: aload         6
     303: aload_0
     304: invokevirtual #179                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection.setReference:(Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;)V
     307: aload         6
     309: invokevirtual #180                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection.authorize:()V
     312: goto          330
     315: astore        7
     317: aload         6
     319: invokevirtual #181                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnection.close:()V
     322: goto          327
     325: astore        8
     327: aload         7
     329: athrow
     330: aload         6
     332: areturn
    Exception table:
       from    to  target type
           5    16    19   Class java/lang/Exception
         307   312   315   Class javax/jms/JMSException
         317   322   325   Class javax/jms/JMSException

  public java.lang.String toString();
    Code:
       0: new           #75                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #182                // String ActiveMQConnectionFactory [serverLocator=
       9: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      16: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #184                // String , clientID=
      21: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #105                // Field clientID:Ljava/lang/String;
      28: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #185                // String , consumerWindowSize =
      33: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #186                // Method getConsumerWindowSize:()I
      40: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #187                // String , dupsOKBatchSize=
      45: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #41                 // Field dupsOKBatchSize:I
      52: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #188                // String , transactionBatchSize=
      57: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #42                 // Field transactionBatchSize:I
      64: invokevirtual #79                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #189                // String , readOnly=
      69: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #169                // Field readOnly:Z
      76: invokevirtual #190                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      79: ldc           #191                // String ]
      81: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  private void checkWrite();
    Code:
       0: aload_0
       1: getfield      #169                // Field readOnly:Z
       4: ifeq          17
       7: new           #192                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #193                // String Cannot set attribute on ActiveMQConnectionFactory after it has been used
      13: invokespecial #194                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #166,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.close:()V
       9: goto          17
      12: astore_1
      13: aload_1
      14: invokevirtual #195                // Method java/lang/Exception.printStackTrace:()V
      17: aload_0
      18: invokespecial #196                // Method java/lang/Object.finalize:()V
      21: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Exception

  static org.apache.activemq.artemis.api.core.client.ServerLocator access$000(org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: areturn
}
