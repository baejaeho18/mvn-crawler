Compiled from "ReplicationStartSyncMessage.java"
public class org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage extends org.apache.activemq.artemis.core.protocol.core.impl.PacketImpl {
  private long[] ids;

  private org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage$SyncDataType dataType;

  private boolean synchronizationIsFinished;

  private java.lang.String nodeID;

  private boolean allowsAutoFailBack;

  public org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage();
    Code:
       0: aload_0
       1: bipush        120
       3: invokespecial #2                  // Method org/apache/activemq/artemis/core/protocol/core/impl/PacketImpl."<init>":(B)V
       6: return

  public org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage(java.util.List<java.lang.Long>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      11: newarray       long
      13: putfield      #5                  // Field ids:[J
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_1
      20: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      25: if_icmpge     53
      28: aload_0
      29: getfield      #5                  // Field ids:[J
      32: iload_2
      33: aload_1
      34: iload_2
      35: invokeinterface #6,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      40: checkcast     #7                  // class java/lang/Long
      43: invokevirtual #8                  // Method java/lang/Long.longValue:()J
      46: lastore
      47: iinc          2, 1
      50: goto          18
      53: aload_0
      54: getstatic     #9                  // Field org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.LargeMessages:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      57: putfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      60: aload_0
      61: ldc           #11                 // String
      63: putfield      #12                 // Field nodeID:Ljava/lang/String;
      66: return

  public org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #13                 // Field synchronizationIsFinished:Z
       9: aload_0
      10: aload_1
      11: putfield      #12                 // Field nodeID:Ljava/lang/String;
      14: return

  public org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage(org.apache.activemq.artemis.core.journal.impl.JournalFile[], org.apache.activemq.artemis.core.persistence.impl.journal.JournalStorageManager$JournalContent, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #12                 // Field nodeID:Ljava/lang/String;
       9: aload_0
      10: iload         4
      12: putfield      #14                 // Field allowsAutoFailBack:Z
      15: aload_0
      16: iconst_0
      17: putfield      #13                 // Field synchronizationIsFinished:Z
      20: aload_0
      21: aload_1
      22: arraylength
      23: newarray       long
      25: putfield      #5                  // Field ids:[J
      28: iconst_0
      29: istore        5
      31: iload         5
      33: aload_1
      34: arraylength
      35: if_icmpge     60
      38: aload_0
      39: getfield      #5                  // Field ids:[J
      42: iload         5
      44: aload_1
      45: iload         5
      47: aaload
      48: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/artemis/core/journal/impl/JournalFile.getFileID:()J
      53: lastore
      54: iinc          5, 1
      57: goto          31
      60: getstatic     #16                 // Field org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$1.$SwitchMap$org$apache$activemq$artemis$core$persistence$impl$journal$JournalStorageManager$JournalContent:[I
      63: aload_2
      64: invokevirtual #17                 // Method org/apache/activemq/artemis/core/persistence/impl/journal/JournalStorageManager$JournalContent.ordinal:()I
      67: iaload
      68: lookupswitch  { // 2
                     1: 96
                     2: 106
               default: 116
          }
      96: aload_0
      97: getstatic     #18                 // Field org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.JournalMessages:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
     100: putfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
     103: goto          124
     106: aload_0
     107: getstatic     #19                 // Field org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.JournalBindings:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
     110: putfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
     113: goto          124
     116: new           #20                 // class java/lang/IllegalArgumentException
     119: dup
     120: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":()V
     123: athrow
     124: return

  public void encodeRest(org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #13                 // Field synchronizationIsFinished:Z
       5: invokeinterface #22,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
      10: aload_1
      11: aload_0
      12: getfield      #14                 // Field allowsAutoFailBack:Z
      15: invokeinterface #22,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
      20: aload_1
      21: aload_0
      22: getfield      #12                 // Field nodeID:Ljava/lang/String;
      25: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeString:(Ljava/lang/String;)V
      30: aload_0
      31: getfield      #13                 // Field synchronizationIsFinished:Z
      34: ifeq          38
      37: return
      38: aload_1
      39: aload_0
      40: getfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      43: invokestatic  #24                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.access$000:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;)B
      46: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeByte:(B)V
      51: aload_1
      52: aload_0
      53: getfield      #5                  // Field ids:[J
      56: arraylength
      57: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
      62: aload_0
      63: getfield      #5                  // Field ids:[J
      66: astore_2
      67: aload_2
      68: arraylength
      69: istore_3
      70: iconst_0
      71: istore        4
      73: iload         4
      75: iload_3
      76: if_icmpge     99
      79: aload_2
      80: iload         4
      82: laload
      83: lstore        5
      85: aload_1
      86: lload         5
      88: invokeinterface #27,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeLong:(J)V
      93: iinc          4, 1
      96: goto          73
      99: return

  public void decodeRest(org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #28,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
       7: putfield      #13                 // Field synchronizationIsFinished:Z
      10: aload_0
      11: aload_1
      12: invokeinterface #28,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
      17: putfield      #14                 // Field allowsAutoFailBack:Z
      20: aload_0
      21: aload_1
      22: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readString:()Ljava/lang/String;
      27: putfield      #12                 // Field nodeID:Ljava/lang/String;
      30: aload_0
      31: getfield      #13                 // Field synchronizationIsFinished:Z
      34: ifeq          38
      37: return
      38: aload_0
      39: aload_1
      40: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readByte:()B
      45: invokestatic  #31                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.getDataType:(B)Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      48: putfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      51: aload_1
      52: invokeinterface #32,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
      57: istore_2
      58: aload_0
      59: iload_2
      60: newarray       long
      62: putfield      #5                  // Field ids:[J
      65: iconst_0
      66: istore_3
      67: iload_3
      68: iload_2
      69: if_icmpge     90
      72: aload_0
      73: getfield      #5                  // Field ids:[J
      76: iload_3
      77: aload_1
      78: invokeinterface #33,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readLong:()J
      83: lastore
      84: iinc          3, 1
      87: goto          67
      90: return

  public boolean isServerToFailBack();
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowsAutoFailBack:Z
       4: ireturn

  public boolean isSynchronizationFinished();
    Code:
       0: aload_0
       1: getfield      #13                 // Field synchronizationIsFinished:Z
       4: ireturn

  public org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationStartSyncMessage$SyncDataType getDataType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
       4: areturn

  public long[] getFileIds();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ids:[J
       4: areturn

  public java.lang.String getNodeID();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nodeID:Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: aload_0
       4: invokespecial #34                 // Method org/apache/activemq/artemis/core/protocol/core/impl/PacketImpl.hashCode:()I
       7: istore_2
       8: bipush        31
      10: iload_2
      11: imul
      12: aload_0
      13: getfield      #14                 // Field allowsAutoFailBack:Z
      16: ifeq          25
      19: sipush        1231
      22: goto          28
      25: sipush        1237
      28: iadd
      29: istore_2
      30: bipush        31
      32: iload_2
      33: imul
      34: aload_0
      35: getfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      38: ifnonnull     45
      41: iconst_0
      42: goto          52
      45: aload_0
      46: getfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      49: invokevirtual #35                 // Method org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType.hashCode:()I
      52: iadd
      53: istore_2
      54: bipush        31
      56: iload_2
      57: imul
      58: aload_0
      59: getfield      #5                  // Field ids:[J
      62: invokestatic  #36                 // Method java/util/Arrays.hashCode:([J)I
      65: iadd
      66: istore_2
      67: bipush        31
      69: iload_2
      70: imul
      71: aload_0
      72: getfield      #12                 // Field nodeID:Ljava/lang/String;
      75: ifnonnull     82
      78: iconst_0
      79: goto          89
      82: aload_0
      83: getfield      #12                 // Field nodeID:Ljava/lang/String;
      86: invokevirtual #37                 // Method java/lang/String.hashCode:()I
      89: iadd
      90: istore_2
      91: bipush        31
      93: iload_2
      94: imul
      95: aload_0
      96: getfield      #13                 // Field synchronizationIsFinished:Z
      99: ifeq          108
     102: sipush        1231
     105: goto          111
     108: sipush        1237
     111: iadd
     112: istore_2
     113: iload_2
     114: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #38                 // Method org/apache/activemq/artemis/core/protocol/core/impl/PacketImpl.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: instanceof    #39                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #39                 // class org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage
      30: astore_2
      31: aload_0
      32: getfield      #14                 // Field allowsAutoFailBack:Z
      35: aload_2
      36: getfield      #14                 // Field allowsAutoFailBack:Z
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: getfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      48: aload_2
      49: getfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      52: if_acmpeq     57
      55: iconst_0
      56: ireturn
      57: aload_0
      58: getfield      #5                  // Field ids:[J
      61: aload_2
      62: getfield      #5                  // Field ids:[J
      65: invokestatic  #40                 // Method java/util/Arrays.equals:([J[J)Z
      68: ifne          73
      71: iconst_0
      72: ireturn
      73: aload_0
      74: getfield      #12                 // Field nodeID:Ljava/lang/String;
      77: ifnonnull     89
      80: aload_2
      81: getfield      #12                 // Field nodeID:Ljava/lang/String;
      84: ifnull        105
      87: iconst_0
      88: ireturn
      89: aload_0
      90: getfield      #12                 // Field nodeID:Ljava/lang/String;
      93: aload_2
      94: getfield      #12                 // Field nodeID:Ljava/lang/String;
      97: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     100: ifne          105
     103: iconst_0
     104: ireturn
     105: aload_0
     106: getfield      #13                 // Field synchronizationIsFinished:Z
     109: aload_2
     110: getfield      #13                 // Field synchronizationIsFinished:Z
     113: if_icmpeq     118
     116: iconst_0
     117: ireturn
     118: iconst_1
     119: ireturn

  public java.lang.String toString();
    Code:
       0: new           #42                 // class java/lang/StringBuffer
       3: dup
       4: aload_0
       5: invokevirtual #43                 // Method getParentString:()Ljava/lang/String;
       8: invokespecial #44                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: new           #45                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #47                 // String , synchronizationIsFinished=
      22: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #13                 // Field synchronizationIsFinished:Z
      29: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      32: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      38: pop
      39: aload_1
      40: new           #45                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #52                 // String , dataType=
      49: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #10                 // Field dataType:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationStartSyncMessage$SyncDataType;
      56: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      65: pop
      66: aload_1
      67: new           #45                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #54                 // String , nodeID=
      76: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #12                 // Field nodeID:Ljava/lang/String;
      83: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      92: pop
      93: aload_1
      94: new           #45                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #55                 // String , ids=
     103: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #5                  // Field ids:[J
     110: invokestatic  #56                 // Method java/util/Arrays.toString:([J)Ljava/lang/String;
     113: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     122: pop
     123: aload_1
     124: new           #45                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     131: ldc           #57                 // String , allowsAutoFailBack=
     133: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_0
     137: getfield      #14                 // Field allowsAutoFailBack:Z
     140: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     143: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     149: pop
     150: aload_1
     151: ldc           #58                 // String ]
     153: invokevirtual #51                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     156: pop
     157: aload_1
     158: invokevirtual #59                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     161: areturn
}
