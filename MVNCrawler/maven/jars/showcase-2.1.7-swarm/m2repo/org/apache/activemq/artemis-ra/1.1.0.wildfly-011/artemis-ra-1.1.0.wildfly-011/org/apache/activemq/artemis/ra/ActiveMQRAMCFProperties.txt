Compiled from "ActiveMQRAMCFProperties.java"
public class org.apache.activemq.artemis.ra.ActiveMQRAMCFProperties extends org.apache.activemq.artemis.ra.ConnectionFactoryProperties implements java.io.Serializable {
  static final long serialVersionUID;

  private static boolean trace;

  private static final java.lang.String QUEUE_TYPE;

  private static final java.lang.String TOPIC_TYPE;

  private java.lang.String strConnectorClassName;

  public java.lang.String strConnectionParameters;

  private int type;

  private java.lang.Integer useTryLock;

  public org.apache.activemq.artemis.ra.ActiveMQRAMCFProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/artemis/ra/ConnectionFactoryProperties."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field type:I
       9: getstatic     #4                  // Field trace:Z
      12: ifeq          25
      15: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
      18: ldc           #6                  // String constructor()
      20: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      25: aload_0
      26: aconst_null
      27: putfield      #8                  // Field useTryLock:Ljava/lang/Integer;
      30: return

  public int getType();
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ifeq          16
       6: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: ldc           #9                  // String getType()
      11: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #3                  // Field type:I
      20: ireturn

  public java.lang.String getConnectorClassName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field strConnectorClassName:Ljava/lang/String;
       4: areturn

  public void setConnectorClassName(java.lang.String);
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ifeq          38
       6: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: new           #11                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #13                 // String setConnectorClassName(
      18: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #15                 // String )
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      38: aload_0
      39: aload_1
      40: putfield      #10                 // Field strConnectorClassName:Ljava/lang/String;
      43: aload_0
      44: aload_1
      45: invokestatic  #17                 // Method org/apache/activemq/artemis/ra/ActiveMQRaUtils.parseConnectorConnectorConfig:(Ljava/lang/String;)Ljava/util/List;
      48: invokevirtual #18                 // Method setParsedConnectorClassNames:(Ljava/util/List;)V
      51: return

  public java.lang.String getStrConnectionParameters();
    Code:
       0: aload_0
       1: getfield      #19                 // Field strConnectionParameters:Ljava/lang/String;
       4: areturn

  public void setConnectionParameters(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field strConnectionParameters:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokestatic  #20                 // Method org/apache/activemq/artemis/ra/ActiveMQRaUtils.parseConfig:(Ljava/lang/String;)Ljava/util/List;
      10: invokevirtual #21                 // Method setParsedConnectionParameters:(Ljava/util/List;)V
      13: return

  public void setSessionDefaultType(java.lang.String);
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ifeq          41
       6: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: new           #11                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #22                 // String setSessionDefaultType(
      18: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #3                  // Field type:I
      25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #15                 // String )
      30: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      41: aload_1
      42: getstatic     #24                 // Field QUEUE_TYPE:Ljava/lang/String;
      45: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          59
      51: aload_0
      52: iconst_1
      53: putfield      #3                  // Field type:I
      56: goto          82
      59: aload_1
      60: getstatic     #26                 // Field TOPIC_TYPE:Ljava/lang/String;
      63: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          77
      69: aload_0
      70: iconst_2
      71: putfield      #3                  // Field type:I
      74: goto          82
      77: aload_0
      78: iconst_0
      79: putfield      #3                  // Field type:I
      82: return

  public java.lang.String getSessionDefaultType();
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ifeq          16
       6: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: ldc           #27                 // String getSessionDefaultType()
      11: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #3                  // Field type:I
      20: ifne          26
      23: ldc           #28                 // String BOTH
      25: areturn
      26: aload_0
      27: getfield      #3                  // Field type:I
      30: iconst_1
      31: if_icmpne     38
      34: getstatic     #26                 // Field TOPIC_TYPE:Ljava/lang/String;
      37: areturn
      38: getstatic     #24                 // Field QUEUE_TYPE:Ljava/lang/String;
      41: areturn

  public java.lang.Integer getUseTryLock();
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ifeq          16
       6: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: ldc           #29                 // String getUseTryLock()
      11: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #8                  // Field useTryLock:Ljava/lang/Integer;
      20: areturn

  public void setUseTryLock(java.lang.Integer);
    Code:
       0: getstatic     #4                  // Field trace:Z
       3: ifeq          38
       6: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: new           #11                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #30                 // String setUseTryLock(
      18: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #15                 // String )
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      38: aload_0
      39: aload_1
      40: putfield      #8                  // Field useTryLock:Ljava/lang/Integer;
      43: return

  static {};
    Code:
       0: getstatic     #5                  // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       3: invokeinterface #32,  1           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.isTraceEnabled:()Z
       8: putstatic     #4                  // Field trace:Z
      11: ldc           #33                 // class javax/jms/Queue
      13: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: putstatic     #24                 // Field QUEUE_TYPE:Ljava/lang/String;
      19: ldc           #35                 // class javax/jms/Topic
      21: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: putstatic     #26                 // Field TOPIC_TYPE:Ljava/lang/String;
      27: return
}
