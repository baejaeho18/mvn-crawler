Compiled from "RemotingService.java"
public interface org.apache.activemq.artemis.core.remoting.server.RemotingService {
  public abstract org.apache.activemq.artemis.spi.core.protocol.RemotingConnection removeConnection(java.lang.Object);

  public abstract java.util.Set<org.apache.activemq.artemis.spi.core.protocol.RemotingConnection> getConnections();

  public abstract org.apache.activemq.artemis.utils.ReusableLatch getConnectionCountLatch();

  public abstract void addIncomingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);

  public abstract java.util.List<org.apache.activemq.artemis.api.core.BaseInterceptor> getIncomingInterceptors();

  public abstract void addOutgoingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);

  public abstract java.util.List<org.apache.activemq.artemis.api.core.BaseInterceptor> getOutgoinInterceptors();

  public abstract boolean removeIncomingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);

  public abstract boolean removeOutgoingInterceptor(org.apache.activemq.artemis.api.core.Interceptor);

  public abstract void stop(boolean) throws java.lang.Exception;

  public abstract void start() throws java.lang.Exception;

  public abstract void startAcceptors() throws java.lang.Exception;

  public abstract boolean isStarted();

  public abstract void allowInvmSecurityOverride(org.apache.activemq.artemis.core.security.ActiveMQPrincipal);

  public abstract void pauseAcceptors();

  public abstract void freeze(java.lang.String, org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection);

  public abstract org.apache.activemq.artemis.spi.core.remoting.Acceptor getAcceptor(java.lang.String);
}
