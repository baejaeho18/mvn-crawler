Compiled from "ClientSessionInternal.java"
public interface org.apache.activemq.artemis.core.client.impl.ClientSessionInternal extends org.apache.activemq.artemis.api.core.client.ClientSession {
  public abstract java.lang.String getName();

  public abstract void acknowledge(org.apache.activemq.artemis.api.core.client.ClientConsumer, org.apache.activemq.artemis.api.core.Message) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void individualAcknowledge(org.apache.activemq.artemis.api.core.client.ClientConsumer, org.apache.activemq.artemis.api.core.Message) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract boolean isCacheLargeMessageClient();

  public abstract int getMinLargeMessageSize();

  public abstract boolean isCompressLargeMessages();

  public abstract void expire(org.apache.activemq.artemis.api.core.client.ClientConsumer, org.apache.activemq.artemis.api.core.Message) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void addConsumer(org.apache.activemq.artemis.core.client.impl.ClientConsumerInternal);

  public abstract void addProducer(org.apache.activemq.artemis.core.client.impl.ClientProducerInternal);

  public abstract void removeConsumer(org.apache.activemq.artemis.core.client.impl.ClientConsumerInternal) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void removeProducer(org.apache.activemq.artemis.core.client.impl.ClientProducerInternal);

  public abstract void handleReceiveMessage(org.apache.activemq.artemis.spi.core.remoting.ConsumerContext, org.apache.activemq.artemis.core.client.impl.ClientMessageInternal) throws java.lang.Exception;

  public abstract void handleReceiveLargeMessage(org.apache.activemq.artemis.spi.core.remoting.ConsumerContext, org.apache.activemq.artemis.core.client.impl.ClientLargeMessageInternal, long) throws java.lang.Exception;

  public abstract void handleReceiveContinuation(org.apache.activemq.artemis.spi.core.remoting.ConsumerContext, byte[], int, boolean) throws java.lang.Exception;

  public abstract void handleConsumerDisconnect(org.apache.activemq.artemis.spi.core.remoting.ConsumerContext) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void preHandleFailover(org.apache.activemq.artemis.spi.core.protocol.RemotingConnection);

  public abstract void handleFailover(org.apache.activemq.artemis.spi.core.protocol.RemotingConnection, org.apache.activemq.artemis.api.core.ActiveMQException);

  public abstract org.apache.activemq.artemis.spi.core.protocol.RemotingConnection getConnection();

  public abstract void cleanUp(boolean) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void setForceNotSameRM(boolean);

  public abstract void workDone();

  public abstract void sendProducerCreditsMessage(int, org.apache.activemq.artemis.api.core.SimpleString);

  public abstract org.apache.activemq.artemis.core.client.impl.ClientProducerCredits getCredits(org.apache.activemq.artemis.api.core.SimpleString, boolean);

  public abstract void returnCredits(org.apache.activemq.artemis.api.core.SimpleString);

  public abstract void handleReceiveProducerCredits(org.apache.activemq.artemis.api.core.SimpleString, int);

  public abstract void handleReceiveProducerFailCredits(org.apache.activemq.artemis.api.core.SimpleString, int);

  public abstract org.apache.activemq.artemis.core.client.impl.ClientProducerCreditManager getProducerCreditManager();

  public abstract void setAddress(org.apache.activemq.artemis.api.core.Message, org.apache.activemq.artemis.api.core.SimpleString);

  public abstract void setPacketSize(int);

  public abstract void resetIfNeeded() throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void markRollbackOnly();

  public abstract void startCall();

  public abstract void endCall();

  public abstract void setStopSignal();

  public abstract boolean isConfirmationWindowEnabled();

  public abstract void scheduleConfirmation(org.apache.activemq.artemis.api.core.client.SendAcknowledgementHandler, org.apache.activemq.artemis.api.core.Message);

  public abstract boolean isClosing();

  public abstract java.lang.String getNodeId();

  public abstract boolean isWritable(org.apache.activemq.artemis.spi.core.remoting.ReadyListener);
}
