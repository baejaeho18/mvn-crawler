Compiled from "ConnectionFactoryConfigurationImpl.java"
public class org.apache.activemq.artemis.jms.server.config.impl.ConnectionFactoryConfigurationImpl implements org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration {
  private java.lang.String name;

  private boolean persisted;

  private java.lang.String[] bindings;

  private java.util.List<java.lang.String> connectorNames;

  private java.lang.String discoveryGroupName;

  private java.lang.String clientID;

  private boolean ha;

  private long clientFailureCheckPeriod;

  private long connectionTTL;

  private long callTimeout;

  private long callFailoverTimeout;

  private boolean cacheLargeMessagesClient;

  private int minLargeMessageSize;

  private boolean compressLargeMessage;

  private int consumerWindowSize;

  private int consumerMaxRate;

  private int confirmationWindowSize;

  private int producerWindowSize;

  private int producerMaxRate;

  private boolean blockOnAcknowledge;

  private boolean blockOnDurableSend;

  private boolean blockOnNonDurableSend;

  private boolean autoGroup;

  private boolean preAcknowledge;

  private java.lang.String loadBalancingPolicyClassName;

  private int transactionBatchSize;

  private int dupsOKBatchSize;

  private long initialWaitTimeout;

  private boolean useGlobalPools;

  private int scheduledThreadPoolMaxSize;

  private int threadPoolMaxSize;

  private long retryInterval;

  private double retryIntervalMultiplier;

  private long maxRetryInterval;

  private int reconnectAttempts;

  private boolean failoverOnInitialConnection;

  private java.lang.String groupID;

  private java.lang.String protocolManagerFactoryStr;

  private org.apache.activemq.artemis.api.jms.JMSFactoryType factoryType;

  public org.apache.activemq.artemis.jms.server.config.impl.ConnectionFactoryConfigurationImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field persisted:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field bindings:[Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field connectorNames:Ljava/util/List;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field discoveryGroupName:Ljava/lang/String;
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field clientID:Ljava/lang/String;
      34: aload_0
      35: iconst_0
      36: putfield      #9                  // Field ha:Z
      39: aload_0
      40: getstatic     #10                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_CLIENT_FAILURE_CHECK_PERIOD:J
      43: putfield      #11                 // Field clientFailureCheckPeriod:J
      46: aload_0
      47: getstatic     #12                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_CONNECTION_TTL:J
      50: putfield      #13                 // Field connectionTTL:J
      53: aload_0
      54: ldc2_w        #14                 // long 30000l
      57: putfield      #16                 // Field callTimeout:J
      60: aload_0
      61: ldc2_w        #17                 // long -1l
      64: putfield      #19                 // Field callFailoverTimeout:J
      67: aload_0
      68: iconst_0
      69: putfield      #20                 // Field cacheLargeMessagesClient:Z
      72: aload_0
      73: ldc           #21                 // int 102400
      75: putfield      #22                 // Field minLargeMessageSize:I
      78: aload_0
      79: iconst_0
      80: putfield      #23                 // Field compressLargeMessage:Z
      83: aload_0
      84: ldc           #24                 // int 1048576
      86: putfield      #25                 // Field consumerWindowSize:I
      89: aload_0
      90: iconst_m1
      91: putfield      #26                 // Field consumerMaxRate:I
      94: aload_0
      95: iconst_m1
      96: putfield      #27                 // Field confirmationWindowSize:I
      99: aload_0
     100: ldc           #28                 // int 65536
     102: putfield      #29                 // Field producerWindowSize:I
     105: aload_0
     106: iconst_m1
     107: putfield      #30                 // Field producerMaxRate:I
     110: aload_0
     111: iconst_0
     112: putfield      #31                 // Field blockOnAcknowledge:Z
     115: aload_0
     116: iconst_1
     117: putfield      #32                 // Field blockOnDurableSend:Z
     120: aload_0
     121: iconst_0
     122: putfield      #33                 // Field blockOnNonDurableSend:Z
     125: aload_0
     126: iconst_0
     127: putfield      #34                 // Field autoGroup:Z
     130: aload_0
     131: iconst_0
     132: putfield      #35                 // Field preAcknowledge:Z
     135: aload_0
     136: getstatic     #36                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_CONNECTION_LOAD_BALANCING_POLICY_CLASS_NAME:Ljava/lang/String;
     139: putfield      #37                 // Field loadBalancingPolicyClassName:Ljava/lang/String;
     142: aload_0
     143: ldc           #24                 // int 1048576
     145: putfield      #38                 // Field transactionBatchSize:I
     148: aload_0
     149: ldc           #24                 // int 1048576
     151: putfield      #39                 // Field dupsOKBatchSize:I
     154: aload_0
     155: ldc2_w        #40                 // long 10000l
     158: putfield      #42                 // Field initialWaitTimeout:J
     161: aload_0
     162: iconst_1
     163: putfield      #43                 // Field useGlobalPools:Z
     166: aload_0
     167: iconst_5
     168: putfield      #44                 // Field scheduledThreadPoolMaxSize:I
     171: aload_0
     172: iconst_m1
     173: putfield      #45                 // Field threadPoolMaxSize:I
     176: aload_0
     177: ldc2_w        #46                 // long 2000l
     180: putfield      #48                 // Field retryInterval:J
     183: aload_0
     184: getstatic     #49                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_RETRY_INTERVAL_MULTIPLIER:D
     187: putfield      #50                 // Field retryIntervalMultiplier:D
     190: aload_0
     191: getstatic     #51                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_MAX_RETRY_INTERVAL:J
     194: putfield      #52                 // Field maxRetryInterval:J
     197: aload_0
     198: iconst_0
     199: putfield      #53                 // Field reconnectAttempts:I
     202: aload_0
     203: iconst_0
     204: putfield      #54                 // Field failoverOnInitialConnection:Z
     207: aload_0
     208: aconst_null
     209: putfield      #55                 // Field groupID:Ljava/lang/String;
     212: aload_0
     213: getstatic     #56                 // Field org/apache/activemq/artemis/api/jms/JMSFactoryType.CF:Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
     216: putfield      #57                 // Field factoryType:Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
     219: return

  public java.lang.String[] getBindings();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bindings:[Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setBindings(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field bindings:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public boolean isPersisted();
    Code:
       0: aload_0
       1: getfield      #3                  // Field persisted:Z
       4: ireturn

  public java.lang.String getDiscoveryGroupName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field discoveryGroupName:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setDiscoveryGroupName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field discoveryGroupName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.util.List<java.lang.String> getConnectorNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectorNames:Ljava/util/List;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setConnectorNames(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field connectorNames:Ljava/util/List;
       5: aload_0
       6: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setConnectorNames(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #59                 // Method setConnectorNames:(Ljava/util/List;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       8: areturn

  public boolean isHA();
    Code:
       0: aload_0
       1: getfield      #9                  // Field ha:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setHA(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field ha:Z
       5: aload_0
       6: areturn

  public java.lang.String getClientID();
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientID:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setClientID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field clientID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public long getClientFailureCheckPeriod();
    Code:
       0: aload_0
       1: getfield      #11                 // Field clientFailureCheckPeriod:J
       4: lreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setClientFailureCheckPeriod(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field clientFailureCheckPeriod:J
       5: aload_0
       6: areturn

  public long getConnectionTTL();
    Code:
       0: aload_0
       1: getfield      #13                 // Field connectionTTL:J
       4: lreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setConnectionTTL(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field connectionTTL:J
       5: aload_0
       6: areturn

  public long getCallTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field callTimeout:J
       4: lreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setCallTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #16                 // Field callTimeout:J
       5: aload_0
       6: areturn

  public long getCallFailoverTimeout();
    Code:
       0: aload_0
       1: getfield      #19                 // Field callFailoverTimeout:J
       4: lreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setCallFailoverTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #19                 // Field callFailoverTimeout:J
       5: aload_0
       6: areturn

  public boolean isCacheLargeMessagesClient();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cacheLargeMessagesClient:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setCacheLargeMessagesClient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field cacheLargeMessagesClient:Z
       5: aload_0
       6: areturn

  public int getMinLargeMessageSize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field minLargeMessageSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setMinLargeMessageSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field minLargeMessageSize:I
       5: aload_0
       6: areturn

  public int getConsumerWindowSize();
    Code:
       0: aload_0
       1: getfield      #25                 // Field consumerWindowSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setConsumerWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field consumerWindowSize:I
       5: aload_0
       6: areturn

  public int getConsumerMaxRate();
    Code:
       0: aload_0
       1: getfield      #26                 // Field consumerMaxRate:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setConsumerMaxRate(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field consumerMaxRate:I
       5: aload_0
       6: areturn

  public int getConfirmationWindowSize();
    Code:
       0: aload_0
       1: getfield      #27                 // Field confirmationWindowSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setConfirmationWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field confirmationWindowSize:I
       5: aload_0
       6: areturn

  public int getProducerMaxRate();
    Code:
       0: aload_0
       1: getfield      #30                 // Field producerMaxRate:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setProducerMaxRate(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field producerMaxRate:I
       5: aload_0
       6: areturn

  public int getProducerWindowSize();
    Code:
       0: aload_0
       1: getfield      #29                 // Field producerWindowSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setProducerWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field producerWindowSize:I
       5: aload_0
       6: areturn

  public boolean isBlockOnAcknowledge();
    Code:
       0: aload_0
       1: getfield      #31                 // Field blockOnAcknowledge:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setBlockOnAcknowledge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field blockOnAcknowledge:Z
       5: aload_0
       6: areturn

  public boolean isBlockOnDurableSend();
    Code:
       0: aload_0
       1: getfield      #32                 // Field blockOnDurableSend:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setBlockOnDurableSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field blockOnDurableSend:Z
       5: aload_0
       6: areturn

  public boolean isBlockOnNonDurableSend();
    Code:
       0: aload_0
       1: getfield      #33                 // Field blockOnNonDurableSend:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setBlockOnNonDurableSend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field blockOnNonDurableSend:Z
       5: aload_0
       6: areturn

  public boolean isAutoGroup();
    Code:
       0: aload_0
       1: getfield      #34                 // Field autoGroup:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setAutoGroup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field autoGroup:Z
       5: aload_0
       6: areturn

  public boolean isPreAcknowledge();
    Code:
       0: aload_0
       1: getfield      #35                 // Field preAcknowledge:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setPreAcknowledge(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field preAcknowledge:Z
       5: aload_0
       6: areturn

  public java.lang.String getLoadBalancingPolicyClassName();
    Code:
       0: aload_0
       1: getfield      #37                 // Field loadBalancingPolicyClassName:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setLoadBalancingPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field loadBalancingPolicyClassName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public int getTransactionBatchSize();
    Code:
       0: aload_0
       1: getfield      #38                 // Field transactionBatchSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setTransactionBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field transactionBatchSize:I
       5: aload_0
       6: areturn

  public int getDupsOKBatchSize();
    Code:
       0: aload_0
       1: getfield      #39                 // Field dupsOKBatchSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setDupsOKBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field dupsOKBatchSize:I
       5: aload_0
       6: areturn

  public long getInitialWaitTimeout();
    Code:
       0: aload_0
       1: getfield      #42                 // Field initialWaitTimeout:J
       4: lreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setInitialWaitTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #42                 // Field initialWaitTimeout:J
       5: aload_0
       6: areturn

  public boolean isUseGlobalPools();
    Code:
       0: aload_0
       1: getfield      #43                 // Field useGlobalPools:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setUseGlobalPools(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field useGlobalPools:Z
       5: aload_0
       6: areturn

  public int getScheduledThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #44                 // Field scheduledThreadPoolMaxSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setScheduledThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field scheduledThreadPoolMaxSize:I
       5: aload_0
       6: areturn

  public int getThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #45                 // Field threadPoolMaxSize:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field threadPoolMaxSize:I
       5: aload_0
       6: areturn

  public long getRetryInterval();
    Code:
       0: aload_0
       1: getfield      #48                 // Field retryInterval:J
       4: lreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setRetryInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #48                 // Field retryInterval:J
       5: aload_0
       6: areturn

  public double getRetryIntervalMultiplier();
    Code:
       0: aload_0
       1: getfield      #50                 // Field retryIntervalMultiplier:D
       4: dreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setRetryIntervalMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #50                 // Field retryIntervalMultiplier:D
       5: aload_0
       6: areturn

  public long getMaxRetryInterval();
    Code:
       0: aload_0
       1: getfield      #52                 // Field maxRetryInterval:J
       4: lreturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setMaxRetryInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #52                 // Field maxRetryInterval:J
       5: aload_0
       6: areturn

  public int getReconnectAttempts();
    Code:
       0: aload_0
       1: getfield      #53                 // Field reconnectAttempts:I
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setReconnectAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field reconnectAttempts:I
       5: aload_0
       6: areturn

  public boolean isFailoverOnInitialConnection();
    Code:
       0: aload_0
       1: getfield      #54                 // Field failoverOnInitialConnection:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setFailoverOnInitialConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #54                 // Field failoverOnInitialConnection:Z
       5: aload_0
       6: areturn

  public java.lang.String getGroupID();
    Code:
       0: aload_0
       1: getfield      #55                 // Field groupID:Ljava/lang/String;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setGroupID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field groupID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public void decode(org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field persisted:Z
       5: aload_0
       6: aload_1
       7: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readSimpleString:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      12: invokevirtual #61                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      15: putfield      #2                  // Field name:Ljava/lang/String;
      18: aload_0
      19: aload_1
      20: invokestatic  #62                 // Method org/apache/activemq/artemis/utils/BufferHelper.readNullableSimpleStringAsString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)Ljava/lang/String;
      23: putfield      #6                  // Field discoveryGroupName:Ljava/lang/String;
      26: aload_1
      27: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
      32: istore_2
      33: iload_2
      34: ifle          85
      37: aload_0
      38: new           #64                 // class java/util/ArrayList
      41: dup
      42: iload_2
      43: invokespecial #65                 // Method java/util/ArrayList."<init>":(I)V
      46: putfield      #5                  // Field connectorNames:Ljava/util/List;
      49: iconst_0
      50: istore_3
      51: iload_3
      52: iload_2
      53: if_icmpge     85
      56: aload_1
      57: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readSimpleString:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      62: astore        4
      64: aload_0
      65: getfield      #5                  // Field connectorNames:Ljava/util/List;
      68: aload         4
      70: invokevirtual #61                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
      73: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: iinc          3, 1
      82: goto          51
      85: aload_0
      86: aload_1
      87: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
      92: putfield      #9                  // Field ha:Z
      95: aload_0
      96: aload_1
      97: invokestatic  #62                 // Method org/apache/activemq/artemis/utils/BufferHelper.readNullableSimpleStringAsString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)Ljava/lang/String;
     100: putfield      #7                  // Field clientID:Ljava/lang/String;
     103: aload_0
     104: aload_1
     105: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readLong:()J
     110: putfield      #11                 // Field clientFailureCheckPeriod:J
     113: aload_0
     114: aload_1
     115: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readLong:()J
     120: putfield      #13                 // Field connectionTTL:J
     123: aload_0
     124: aload_1
     125: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readLong:()J
     130: putfield      #16                 // Field callTimeout:J
     133: aload_0
     134: aload_1
     135: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     140: putfield      #20                 // Field cacheLargeMessagesClient:Z
     143: aload_0
     144: aload_1
     145: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     150: putfield      #22                 // Field minLargeMessageSize:I
     153: aload_0
     154: aload_1
     155: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     160: putfield      #25                 // Field consumerWindowSize:I
     163: aload_0
     164: aload_1
     165: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     170: putfield      #26                 // Field consumerMaxRate:I
     173: aload_0
     174: aload_1
     175: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     180: putfield      #27                 // Field confirmationWindowSize:I
     183: aload_0
     184: aload_1
     185: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     190: putfield      #29                 // Field producerWindowSize:I
     193: aload_0
     194: aload_1
     195: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     200: putfield      #30                 // Field producerMaxRate:I
     203: aload_0
     204: aload_1
     205: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     210: putfield      #31                 // Field blockOnAcknowledge:Z
     213: aload_0
     214: aload_1
     215: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     220: putfield      #32                 // Field blockOnDurableSend:Z
     223: aload_0
     224: aload_1
     225: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     230: putfield      #33                 // Field blockOnNonDurableSend:Z
     233: aload_0
     234: aload_1
     235: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     240: putfield      #34                 // Field autoGroup:Z
     243: aload_0
     244: aload_1
     245: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     250: putfield      #35                 // Field preAcknowledge:Z
     253: aload_0
     254: aload_1
     255: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readSimpleString:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     260: invokevirtual #61                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
     263: putfield      #37                 // Field loadBalancingPolicyClassName:Ljava/lang/String;
     266: aload_0
     267: aload_1
     268: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     273: putfield      #38                 // Field transactionBatchSize:I
     276: aload_0
     277: aload_1
     278: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     283: putfield      #39                 // Field dupsOKBatchSize:I
     286: aload_0
     287: aload_1
     288: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readLong:()J
     293: putfield      #42                 // Field initialWaitTimeout:J
     296: aload_0
     297: aload_1
     298: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     303: putfield      #43                 // Field useGlobalPools:Z
     306: aload_0
     307: aload_1
     308: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     313: putfield      #44                 // Field scheduledThreadPoolMaxSize:I
     316: aload_0
     317: aload_1
     318: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     323: putfield      #45                 // Field threadPoolMaxSize:I
     326: aload_0
     327: aload_1
     328: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readLong:()J
     333: putfield      #48                 // Field retryInterval:J
     336: aload_0
     337: aload_1
     338: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readDouble:()D
     343: putfield      #50                 // Field retryIntervalMultiplier:D
     346: aload_0
     347: aload_1
     348: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readLong:()J
     353: putfield      #52                 // Field maxRetryInterval:J
     356: aload_0
     357: aload_1
     358: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     363: putfield      #53                 // Field reconnectAttempts:I
     366: aload_0
     367: aload_1
     368: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     373: putfield      #54                 // Field failoverOnInitialConnection:Z
     376: aload_0
     377: aload_1
     378: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBoolean:()Z
     383: putfield      #23                 // Field compressLargeMessage:Z
     386: aload_0
     387: aload_1
     388: invokestatic  #62                 // Method org/apache/activemq/artemis/utils/BufferHelper.readNullableSimpleStringAsString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)Ljava/lang/String;
     391: putfield      #55                 // Field groupID:Ljava/lang/String;
     394: aload_0
     395: aload_1
     396: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readInt:()I
     401: invokestatic  #70                 // Method org/apache/activemq/artemis/api/jms/JMSFactoryType.valueOf:(I)Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
     404: putfield      #57                 // Field factoryType:Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
     407: aload_0
     408: aload_1
     409: invokestatic  #62                 // Method org/apache/activemq/artemis/utils/BufferHelper.readNullableSimpleStringAsString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)Ljava/lang/String;
     412: putfield      #71                 // Field protocolManagerFactoryStr:Ljava/lang/String;
     415: return

  public void encode(org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field persisted:Z
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field name:Ljava/lang/String;
      10: invokestatic  #72                 // Method org/apache/activemq/artemis/utils/BufferHelper.writeAsSimpleString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Ljava/lang/String;)V
      13: aload_1
      14: aload_0
      15: getfield      #6                  // Field discoveryGroupName:Ljava/lang/String;
      18: invokestatic  #73                 // Method org/apache/activemq/artemis/utils/BufferHelper.writeAsNullableSimpleString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Ljava/lang/String;)V
      21: aload_0
      22: getfield      #5                  // Field connectorNames:Ljava/util/List;
      25: ifnonnull     38
      28: aload_1
      29: iconst_0
      30: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
      35: goto          90
      38: aload_1
      39: aload_0
      40: getfield      #5                  // Field connectorNames:Ljava/util/List;
      43: invokeinterface #75,  1           // InterfaceMethod java/util/List.size:()I
      48: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
      53: aload_0
      54: getfield      #5                  // Field connectorNames:Ljava/util/List;
      57: invokeinterface #76,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore_2
      63: aload_2
      64: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          90
      72: aload_2
      73: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #79                 // class java/lang/String
      81: astore_3
      82: aload_1
      83: aload_3
      84: invokestatic  #72                 // Method org/apache/activemq/artemis/utils/BufferHelper.writeAsSimpleString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Ljava/lang/String;)V
      87: goto          63
      90: aload_1
      91: aload_0
      92: getfield      #9                  // Field ha:Z
      95: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     100: aload_1
     101: aload_0
     102: getfield      #7                  // Field clientID:Ljava/lang/String;
     105: invokestatic  #73                 // Method org/apache/activemq/artemis/utils/BufferHelper.writeAsNullableSimpleString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Ljava/lang/String;)V
     108: aload_1
     109: aload_0
     110: getfield      #11                 // Field clientFailureCheckPeriod:J
     113: invokeinterface #81,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeLong:(J)V
     118: aload_1
     119: aload_0
     120: getfield      #13                 // Field connectionTTL:J
     123: invokeinterface #81,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeLong:(J)V
     128: aload_1
     129: aload_0
     130: getfield      #16                 // Field callTimeout:J
     133: invokeinterface #81,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeLong:(J)V
     138: aload_1
     139: aload_0
     140: getfield      #20                 // Field cacheLargeMessagesClient:Z
     143: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     148: aload_1
     149: aload_0
     150: getfield      #22                 // Field minLargeMessageSize:I
     153: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     158: aload_1
     159: aload_0
     160: getfield      #25                 // Field consumerWindowSize:I
     163: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     168: aload_1
     169: aload_0
     170: getfield      #26                 // Field consumerMaxRate:I
     173: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     178: aload_1
     179: aload_0
     180: getfield      #27                 // Field confirmationWindowSize:I
     183: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     188: aload_1
     189: aload_0
     190: getfield      #29                 // Field producerWindowSize:I
     193: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     198: aload_1
     199: aload_0
     200: getfield      #30                 // Field producerMaxRate:I
     203: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     208: aload_1
     209: aload_0
     210: getfield      #31                 // Field blockOnAcknowledge:Z
     213: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     218: aload_1
     219: aload_0
     220: getfield      #32                 // Field blockOnDurableSend:Z
     223: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     228: aload_1
     229: aload_0
     230: getfield      #33                 // Field blockOnNonDurableSend:Z
     233: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     238: aload_1
     239: aload_0
     240: getfield      #34                 // Field autoGroup:Z
     243: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     248: aload_1
     249: aload_0
     250: getfield      #35                 // Field preAcknowledge:Z
     253: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     258: aload_1
     259: aload_0
     260: getfield      #37                 // Field loadBalancingPolicyClassName:Ljava/lang/String;
     263: invokestatic  #72                 // Method org/apache/activemq/artemis/utils/BufferHelper.writeAsSimpleString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Ljava/lang/String;)V
     266: aload_1
     267: aload_0
     268: getfield      #38                 // Field transactionBatchSize:I
     271: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     276: aload_1
     277: aload_0
     278: getfield      #39                 // Field dupsOKBatchSize:I
     281: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     286: aload_1
     287: aload_0
     288: getfield      #42                 // Field initialWaitTimeout:J
     291: invokeinterface #81,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeLong:(J)V
     296: aload_1
     297: aload_0
     298: getfield      #43                 // Field useGlobalPools:Z
     301: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     306: aload_1
     307: aload_0
     308: getfield      #44                 // Field scheduledThreadPoolMaxSize:I
     311: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     316: aload_1
     317: aload_0
     318: getfield      #45                 // Field threadPoolMaxSize:I
     321: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     326: aload_1
     327: aload_0
     328: getfield      #48                 // Field retryInterval:J
     331: invokeinterface #81,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeLong:(J)V
     336: aload_1
     337: aload_0
     338: getfield      #50                 // Field retryIntervalMultiplier:D
     341: invokeinterface #82,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeDouble:(D)V
     346: aload_1
     347: aload_0
     348: getfield      #52                 // Field maxRetryInterval:J
     351: invokeinterface #81,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeLong:(J)V
     356: aload_1
     357: aload_0
     358: getfield      #53                 // Field reconnectAttempts:I
     361: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     366: aload_1
     367: aload_0
     368: getfield      #54                 // Field failoverOnInitialConnection:Z
     371: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     376: aload_1
     377: aload_0
     378: getfield      #23                 // Field compressLargeMessage:Z
     381: invokeinterface #80,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeBoolean:(Z)V
     386: aload_1
     387: aload_0
     388: getfield      #55                 // Field groupID:Ljava/lang/String;
     391: invokestatic  #73                 // Method org/apache/activemq/artemis/utils/BufferHelper.writeAsNullableSimpleString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Ljava/lang/String;)V
     394: aload_1
     395: aload_0
     396: getfield      #57                 // Field factoryType:Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
     399: invokevirtual #83                 // Method org/apache/activemq/artemis/api/jms/JMSFactoryType.intValue:()I
     402: invokeinterface #74,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writeInt:(I)V
     407: aload_1
     408: aload_0
     409: getfield      #71                 // Field protocolManagerFactoryStr:Ljava/lang/String;
     412: invokestatic  #73                 // Method org/apache/activemq/artemis/utils/BufferHelper.writeAsNullableSimpleString:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;Ljava/lang/String;)V
     415: return

  public int getEncodeSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: invokestatic  #84                 // Method org/apache/activemq/artemis/utils/BufferHelper.sizeOfSimpleString:(Ljava/lang/String;)I
       7: aload_0
       8: getfield      #6                  // Field discoveryGroupName:Ljava/lang/String;
      11: invokestatic  #85                 // Method org/apache/activemq/artemis/utils/BufferHelper.sizeOfNullableSimpleString:(Ljava/lang/String;)I
      14: iadd
      15: istore_1
      16: iinc          1, 4
      19: aload_0
      20: getfield      #5                  // Field connectorNames:Ljava/util/List;
      23: ifnull        65
      26: aload_0
      27: getfield      #5                  // Field connectorNames:Ljava/util/List;
      30: invokeinterface #76,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          65
      45: aload_2
      46: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #79                 // class java/lang/String
      54: astore_3
      55: iload_1
      56: aload_3
      57: invokestatic  #84                 // Method org/apache/activemq/artemis/utils/BufferHelper.sizeOfSimpleString:(Ljava/lang/String;)I
      60: iadd
      61: istore_1
      62: goto          36
      65: iload_1
      66: aload_0
      67: getfield      #7                  // Field clientID:Ljava/lang/String;
      70: invokestatic  #85                 // Method org/apache/activemq/artemis/utils/BufferHelper.sizeOfNullableSimpleString:(Ljava/lang/String;)I
      73: iconst_1
      74: iadd
      75: bipush        8
      77: iadd
      78: bipush        8
      80: iadd
      81: bipush        8
      83: iadd
      84: iconst_1
      85: iadd
      86: iconst_4
      87: iadd
      88: iconst_4
      89: iadd
      90: iconst_4
      91: iadd
      92: iconst_4
      93: iadd
      94: iconst_4
      95: iadd
      96: iconst_4
      97: iadd
      98: iconst_1
      99: iadd
     100: iconst_1
     101: iadd
     102: iconst_1
     103: iadd
     104: iconst_1
     105: iadd
     106: iconst_1
     107: iadd
     108: aload_0
     109: getfield      #37                 // Field loadBalancingPolicyClassName:Ljava/lang/String;
     112: invokestatic  #84                 // Method org/apache/activemq/artemis/utils/BufferHelper.sizeOfSimpleString:(Ljava/lang/String;)I
     115: iadd
     116: iconst_4
     117: iadd
     118: iconst_4
     119: iadd
     120: bipush        8
     122: iadd
     123: iconst_1
     124: iadd
     125: iconst_4
     126: iadd
     127: iconst_4
     128: iadd
     129: bipush        8
     131: iadd
     132: bipush        8
     134: iadd
     135: bipush        8
     137: iadd
     138: iconst_4
     139: iadd
     140: iconst_1
     141: iadd
     142: iconst_1
     143: iadd
     144: aload_0
     145: getfield      #55                 // Field groupID:Ljava/lang/String;
     148: invokestatic  #85                 // Method org/apache/activemq/artemis/utils/BufferHelper.sizeOfNullableSimpleString:(Ljava/lang/String;)I
     151: iadd
     152: iconst_4
     153: iadd
     154: aload_0
     155: getfield      #71                 // Field protocolManagerFactoryStr:Ljava/lang/String;
     158: invokestatic  #85                 // Method org/apache/activemq/artemis/utils/BufferHelper.sizeOfNullableSimpleString:(Ljava/lang/String;)I
     161: iadd
     162: iadd
     163: istore_1
     164: iload_1
     165: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setFactoryType(org.apache.activemq.artemis.api.jms.JMSFactoryType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field factoryType:Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
       5: aload_0
       6: areturn

  public org.apache.activemq.artemis.api.jms.JMSFactoryType getFactoryType();
    Code:
       0: aload_0
       1: getfield      #57                 // Field factoryType:Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
       4: areturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setCompressLargeMessages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field compressLargeMessage:Z
       5: aload_0
       6: areturn

  public boolean isCompressLargeMessages();
    Code:
       0: aload_0
       1: getfield      #23                 // Field compressLargeMessage:Z
       4: ireturn

  public org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration setProtocolManagerFactoryStr(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field protocolManagerFactoryStr:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getProtocolManagerFactoryStr();
    Code:
       0: aload_0
       1: getfield      #71                 // Field protocolManagerFactoryStr:Ljava/lang/String;
       4: areturn
}
