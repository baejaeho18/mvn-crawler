Compiled from "LogicExpression.java"
final class org.apache.activemq.artemis.selector.filter.LogicExpression$2 extends org.apache.activemq.artemis.selector.filter.LogicExpression {
  org.apache.activemq.artemis.selector.filter.LogicExpression$2(org.apache.activemq.artemis.selector.filter.BooleanExpression, org.apache.activemq.artemis.selector.filter.BooleanExpression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/activemq/artemis/selector/filter/LogicExpression."<init>":(Lorg/apache/activemq/artemis/selector/filter/BooleanExpression;Lorg/apache/activemq/artemis/selector/filter/BooleanExpression;)V
       6: return

  public java.lang.Object evaluate(org.apache.activemq.artemis.selector.filter.Filterable) throws org.apache.activemq.artemis.selector.filter.FilterException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Lorg/apache/activemq/artemis/selector/filter/Expression;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod org/apache/activemq/artemis/selector/filter/Expression.evaluate:(Lorg/apache/activemq/artemis/selector/filter/Filterable;)Ljava/lang/Object;
      10: checkcast     #4                  // class java/lang/Boolean
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_2
      21: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
      24: ifne          31
      27: getstatic     #6                  // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      30: areturn
      31: aload_0
      32: getfield      #7                  // Field right:Lorg/apache/activemq/artemis/selector/filter/Expression;
      35: aload_1
      36: invokeinterface #3,  2            // InterfaceMethod org/apache/activemq/artemis/selector/filter/Expression.evaluate:(Lorg/apache/activemq/artemis/selector/filter/Filterable;)Ljava/lang/Object;
      41: checkcast     #4                  // class java/lang/Boolean
      44: astore_3
      45: aload_3
      46: ifnonnull     53
      49: aconst_null
      50: goto          54
      53: aload_3
      54: areturn

  public java.lang.String getExpressionSymbol();
    Code:
       0: ldc           #8                  // String AND
       2: areturn
}
