Compiled from "CoreProtocolManager.java"
public class org.apache.activemq.artemis.core.protocol.core.impl.CoreProtocolManager implements org.apache.activemq.artemis.spi.core.protocol.ProtocolManager<org.apache.activemq.artemis.api.core.Interceptor> {
  private static final boolean isTrace;

  private final org.apache.activemq.artemis.core.server.ActiveMQServer server;

  private final java.util.List<org.apache.activemq.artemis.api.core.Interceptor> incomingInterceptors;

  private final java.util.List<org.apache.activemq.artemis.api.core.Interceptor> outgoingInterceptors;

  private final org.apache.activemq.artemis.core.protocol.core.impl.CoreProtocolManagerFactory protocolManagerFactory;

  private final java.util.Map<java.lang.String, org.apache.activemq.artemis.core.protocol.core.ServerSessionPacketHandler> sessionHandlers;

  public org.apache.activemq.artemis.core.protocol.core.impl.CoreProtocolManager(org.apache.activemq.artemis.core.protocol.core.impl.CoreProtocolManagerFactory, org.apache.activemq.artemis.core.server.ActiveMQServer, java.util.List<org.apache.activemq.artemis.api.core.Interceptor>, java.util.List<org.apache.activemq.artemis.api.core.Interceptor>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field sessionHandlers:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field protocolManagerFactory:Lorg/apache/activemq/artemis/core/protocol/core/impl/CoreProtocolManagerFactory;
      20: aload_0
      21: aload_2
      22: putfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field incomingInterceptors:Ljava/util/List;
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field outgoingInterceptors:Ljava/util/List;
      36: return

  public org.apache.activemq.artemis.spi.core.protocol.ProtocolManagerFactory<org.apache.activemq.artemis.api.core.Interceptor> getFactory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocolManagerFactory:Lorg/apache/activemq/artemis/core/protocol/core/impl/CoreProtocolManagerFactory;
       4: areturn

  public void updateInterceptors(java.util.List<org.apache.activemq.artemis.api.core.BaseInterceptor>, java.util.List<org.apache.activemq.artemis.api.core.BaseInterceptor>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field incomingInterceptors:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #7                  // Field incomingInterceptors:Ljava/util/List;
      13: aload_0
      14: invokevirtual #10                 // Method getFactory:()Lorg/apache/activemq/artemis/spi/core/protocol/ProtocolManagerFactory;
      17: aload_1
      18: invokeinterface #11,  2           // InterfaceMethod org/apache/activemq/artemis/spi/core/protocol/ProtocolManagerFactory.filterInterceptors:(Ljava/util/List;)Ljava/util/List;
      23: invokeinterface #12,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: aload_0
      30: getfield      #8                  // Field outgoingInterceptors:Ljava/util/List;
      33: invokeinterface #9,  1            // InterfaceMethod java/util/List.clear:()V
      38: aload_0
      39: getfield      #8                  // Field outgoingInterceptors:Ljava/util/List;
      42: aload_0
      43: invokevirtual #10                 // Method getFactory:()Lorg/apache/activemq/artemis/spi/core/protocol/ProtocolManagerFactory;
      46: aload_2
      47: invokeinterface #11,  2           // InterfaceMethod org/apache/activemq/artemis/spi/core/protocol/ProtocolManagerFactory.filterInterceptors:(Ljava/util/List;)Ljava/util/List;
      52: invokeinterface #12,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: return

  public boolean acceptsNoHandshake();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.activemq.artemis.spi.core.protocol.MessageConverter getConverter();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.activemq.artemis.spi.core.protocol.ConnectionEntry createConnectionEntry(org.apache.activemq.artemis.spi.core.remoting.Acceptor, org.apache.activemq.artemis.spi.core.remoting.Connection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
       9: astore_3
      10: aload_0
      11: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      14: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getExecutorFactory:()Lorg/apache/activemq/artemis/utils/ExecutorFactory;
      19: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/artemis/utils/ExecutorFactory.getExecutor:()Ljava/util/concurrent/Executor;
      24: astore        4
      26: new           #16                 // class org/apache/activemq/artemis/core/protocol/core/impl/RemotingConnectionImpl
      29: dup
      30: getstatic     #17                 // Field org/apache/activemq/artemis/core/protocol/ServerPacketDecoder.INSTANCE:Lorg/apache/activemq/artemis/core/protocol/ServerPacketDecoder;
      33: aload_2
      34: aload_0
      35: getfield      #7                  // Field incomingInterceptors:Ljava/util/List;
      38: aload_0
      39: getfield      #8                  // Field outgoingInterceptors:Ljava/util/List;
      42: aload_3
      43: invokeinterface #18,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.isAsyncConnectionExecutionEnabled:()Z
      48: ifeq          56
      51: aload         4
      53: goto          57
      56: aconst_null
      57: aload_0
      58: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      61: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getNodeID:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      66: invokespecial #20                 // Method org/apache/activemq/artemis/core/protocol/core/impl/RemotingConnectionImpl."<init>":(Lorg/apache/activemq/artemis/core/protocol/core/impl/PacketDecoder;Lorg/apache/activemq/artemis/spi/core/remoting/Connection;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Lorg/apache/activemq/artemis/api/core/SimpleString;)V
      69: astore        5
      71: aload         5
      73: getstatic     #21                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.SESSION:Lorg/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID;
      76: getfield      #22                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.id:J
      79: iconst_m1
      80: invokeinterface #23,  4           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.getChannel:(JI)Lorg/apache/activemq/artemis/core/protocol/core/Channel;
      85: astore        6
      87: new           #24                 // class org/apache/activemq/artemis/core/protocol/core/impl/ActiveMQPacketHandler
      90: dup
      91: aload_0
      92: aload_0
      93: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      96: aload         6
      98: aload         5
     100: invokespecial #25                 // Method org/apache/activemq/artemis/core/protocol/core/impl/ActiveMQPacketHandler."<init>":(Lorg/apache/activemq/artemis/core/protocol/core/impl/CoreProtocolManager;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Lorg/apache/activemq/artemis/core/protocol/core/Channel;Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;)V
     103: astore        7
     105: aload         6
     107: aload         7
     109: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.setHandler:(Lorg/apache/activemq/artemis/core/protocol/core/ChannelHandler;)V
     114: getstatic     #27                 // Field org/apache/activemq/artemis/api/core/client/ActiveMQClient.DEFAULT_CONNECTION_TTL:J
     117: lstore        8
     119: aload_3
     120: invokeinterface #28,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectionTTLOverride:()J
     125: ldc2_w        #29                 // long -1l
     128: lcmp
     129: ifeq          140
     132: aload_3
     133: invokeinterface #28,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectionTTLOverride:()J
     138: lstore        8
     140: new           #31                 // class org/apache/activemq/artemis/spi/core/protocol/ConnectionEntry
     143: dup
     144: aload         5
     146: aload         4
     148: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
     151: lload         8
     153: invokespecial #33                 // Method org/apache/activemq/artemis/spi/core/protocol/ConnectionEntry."<init>":(Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;Ljava/util/concurrent/Executor;JJ)V
     156: astore        10
     158: aload         5
     160: getstatic     #34                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.PING:Lorg/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID;
     163: getfield      #22                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.id:J
     166: iconst_m1
     167: invokeinterface #23,  4           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.getChannel:(JI)Lorg/apache/activemq/artemis/core/protocol/core/Channel;
     172: astore        11
     174: aload         11
     176: new           #35                 // class org/apache/activemq/artemis/core/protocol/core/impl/CoreProtocolManager$LocalChannelHandler
     179: dup
     180: aload_0
     181: aload_3
     182: aload         10
     184: aload         11
     186: aload_1
     187: aload         5
     189: invokespecial #36                 // Method org/apache/activemq/artemis/core/protocol/core/impl/CoreProtocolManager$LocalChannelHandler."<init>":(Lorg/apache/activemq/artemis/core/protocol/core/impl/CoreProtocolManager;Lorg/apache/activemq/artemis/core/config/Configuration;Lorg/apache/activemq/artemis/spi/core/protocol/ConnectionEntry;Lorg/apache/activemq/artemis/core/protocol/core/Channel;Lorg/apache/activemq/artemis/spi/core/remoting/Acceptor;Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;)V
     192: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.setHandler:(Lorg/apache/activemq/artemis/core/protocol/core/ChannelHandler;)V
     197: aload_0
     198: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     201: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
     206: aload         5
     208: getstatic     #38                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.CLUSTER:Lorg/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID;
     211: getfield      #22                 // Field org/apache/activemq/artemis/core/protocol/core/impl/ChannelImpl$CHANNEL_ID.id:J
     214: iconst_m1
     215: invokeinterface #23,  4           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.getChannel:(JI)Lorg/apache/activemq/artemis/core/protocol/core/Channel;
     220: aload_1
     221: aload         5
     223: aload_0
     224: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     227: invokeinterface #39,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActivation:()Lorg/apache/activemq/artemis/core/server/impl/Activation;
     232: invokevirtual #40                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.addClusterChannelHandler:(Lorg/apache/activemq/artemis/core/protocol/core/Channel;Lorg/apache/activemq/artemis/spi/core/remoting/Acceptor;Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;Lorg/apache/activemq/artemis/core/server/impl/Activation;)V
     235: aload         10
     237: areturn

  org.apache.activemq.artemis.core.protocol.core.ServerSessionPacketHandler getSessionHandler(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessionHandlers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #42                 // class org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler
      13: areturn

  void addSessionHandler(java.lang.String, org.apache.activemq.artemis.core.protocol.core.ServerSessionPacketHandler);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessionHandlers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void removeHandler(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessionHandlers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void handleBuffer(org.apache.activemq.artemis.spi.core.protocol.RemotingConnection, org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: return

  public void addChannelHandlers(io.netty.channel.ChannelPipeline);
    Code:
       0: aload_1
       1: ldc           #45                 // String activemq-decoder
       3: new           #46                 // class org/apache/activemq/artemis/core/remoting/impl/netty/ActiveMQFrameDecoder2
       6: dup
       7: invokespecial #47                 // Method org/apache/activemq/artemis/core/remoting/impl/netty/ActiveMQFrameDecoder2."<init>":()V
      10: invokeinterface #48,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      15: pop
      16: return

  public boolean isProtocol(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // Method org/apache/activemq/artemis/api/core/ActiveMQBuffers.wrappedBuffer:([B)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
       5: invokespecial #50                 // Method isArtemis:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)Z
       8: ireturn

  public void handshake(org.apache.activemq.artemis.core.remoting.impl.netty.NettyServerConnection, org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #50                 // Method isArtemis:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)Z
       5: ifeq          17
       8: aload_2
       9: bipush        7
      11: invokeinterface #51,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.readBytes:(I)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      16: pop
      17: return

  private boolean isArtemis(org.apache.activemq.artemis.api.core.ActiveMQBuffer);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.getByte:(I)B
       7: bipush        65
       9: if_icmpne     89
      12: aload_1
      13: iconst_1
      14: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.getByte:(I)B
      19: bipush        82
      21: if_icmpne     89
      24: aload_1
      25: iconst_2
      26: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.getByte:(I)B
      31: bipush        84
      33: if_icmpne     89
      36: aload_1
      37: iconst_3
      38: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.getByte:(I)B
      43: bipush        69
      45: if_icmpne     89
      48: aload_1
      49: iconst_4
      50: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.getByte:(I)B
      55: bipush        77
      57: if_icmpne     89
      60: aload_1
      61: iconst_5
      62: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.getByte:(I)B
      67: bipush        73
      69: if_icmpne     89
      72: aload_1
      73: bipush        6
      75: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.getByte:(I)B
      80: bipush        83
      82: if_icmpne     89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn

  public java.lang.String toString();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #55                 // String CoreProtocolManager(server=
       9: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      16: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #58                 // String )
      21: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  static org.apache.activemq.artemis.core.server.ActiveMQServer access$300(org.apache.activemq.artemis.core.protocol.core.impl.CoreProtocolManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: areturn

  static {};
    Code:
       0: getstatic     #60                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isTraceEnabled:()Z
       8: putstatic     #62                 // Field isTrace:Z
      11: return
}
