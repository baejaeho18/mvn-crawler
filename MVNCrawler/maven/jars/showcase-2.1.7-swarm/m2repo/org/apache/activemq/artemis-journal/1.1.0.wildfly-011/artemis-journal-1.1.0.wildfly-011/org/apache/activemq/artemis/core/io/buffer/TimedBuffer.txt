Compiled from "TimedBuffer.java"
public class org.apache.activemq.artemis.core.io.buffer.TimedBuffer {
  public static final int MAX_CHECKS_ON_SLEEP;

  private org.apache.activemq.artemis.core.io.buffer.TimedBufferObserver bufferObserver;

  private final java.util.concurrent.Semaphore spinLimiter;

  private org.apache.activemq.artemis.core.io.buffer.TimedBuffer$CheckTimer timerRunnable;

  private final int bufferSize;

  private final org.apache.activemq.artemis.api.core.ActiveMQBuffer buffer;

  private int bufferLimit;

  private java.util.List<org.apache.activemq.artemis.core.io.IOCallback> callbacks;

  private volatile int timeout;

  private volatile boolean pendingSync;

  private java.lang.Thread timerThread;

  private volatile boolean started;

  private boolean delayFlush;

  private final boolean logRates;

  private final java.util.concurrent.atomic.AtomicLong bytesFlushed;

  private final java.util.concurrent.atomic.AtomicLong flushesDone;

  private java.util.Timer logRatesTimer;

  private java.util.TimerTask logRatesTimerTask;

  private boolean useSleep;

  private boolean spinning;

  public org.apache.activemq.artemis.core.io.buffer.TimedBuffer(int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/concurrent/Semaphore
       8: dup
       9: iconst_1
      10: invokespecial #9                  // Method java/util/concurrent/Semaphore."<init>":(I)V
      13: putfield      #1                  // Field spinLimiter:Ljava/util/concurrent/Semaphore;
      16: aload_0
      17: new           #10                 // class org/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer
      20: dup
      21: aload_0
      22: aconst_null
      23: invokespecial #11                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer."<init>":(Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer$1;)V
      26: putfield      #12                 // Field timerRunnable:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer;
      29: aload_0
      30: iconst_0
      31: putfield      #13                 // Field bufferLimit:I
      34: aload_0
      35: iconst_0
      36: putfield      #3                  // Field pendingSync:Z
      39: aload_0
      40: new           #14                 // class java/util/concurrent/atomic/AtomicLong
      43: dup
      44: lconst_0
      45: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      48: putfield      #6                  // Field bytesFlushed:Ljava/util/concurrent/atomic/AtomicLong;
      51: aload_0
      52: new           #14                 // class java/util/concurrent/atomic/AtomicLong
      55: dup
      56: lconst_0
      57: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      60: putfield      #5                  // Field flushesDone:Ljava/util/concurrent/atomic/AtomicLong;
      63: aload_0
      64: iconst_1
      65: putfield      #16                 // Field useSleep:Z
      68: aload_0
      69: iconst_0
      70: putfield      #17                 // Field spinning:Z
      73: aload_0
      74: iload_1
      75: putfield      #18                 // Field bufferSize:I
      78: aload_0
      79: iload_3
      80: putfield      #19                 // Field logRates:Z
      83: iload_3
      84: ifeq          99
      87: aload_0
      88: new           #20                 // class java/util/Timer
      91: dup
      92: iconst_1
      93: invokespecial #21                 // Method java/util/Timer."<init>":(Z)V
      96: putfield      #22                 // Field logRatesTimer:Ljava/util/Timer;
      99: aload_0
     100: aload_0
     101: getfield      #18                 // Field bufferSize:I
     104: invokestatic  #23                 // Method org/apache/activemq/artemis/api/core/ActiveMQBuffers.fixedBuffer:(I)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
     107: putfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
     110: aload_0
     111: getfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
     114: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.clear:()V
     119: aload_0
     120: iconst_0
     121: putfield      #13                 // Field bufferLimit:I
     124: aload_0
     125: new           #26                 // class java/util/ArrayList
     128: dup
     129: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
     132: putfield      #28                 // Field callbacks:Ljava/util/List;
     135: aload_0
     136: iload_2
     137: putfield      #4                  // Field timeout:I
     140: return

  public synchronized boolean isUseSleep();
    Code:
       0: aload_0
       1: getfield      #16                 // Field useSleep:Z
       4: ireturn

  public synchronized void setUseSleep(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field useSleep:Z
       5: return

  public synchronized void start();
    Code:
       0: aload_0
       1: getfield      #29                 // Field started:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #1                  // Field spinLimiter:Ljava/util/concurrent/Semaphore;
      12: invokevirtual #30                 // Method java/util/concurrent/Semaphore.acquire:()V
      15: goto          28
      18: astore_1
      19: new           #32                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
      22: dup
      23: aload_1
      24: invokespecial #33                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: aload_0
      29: new           #10                 // class org/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer
      32: dup
      33: aload_0
      34: aconst_null
      35: invokespecial #11                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer."<init>":(Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer$1;)V
      38: putfield      #12                 // Field timerRunnable:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer;
      41: aload_0
      42: new           #34                 // class java/lang/Thread
      45: dup
      46: aload_0
      47: getfield      #12                 // Field timerRunnable:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer;
      50: ldc           #35                 // String activemq-buffer-timeout
      52: invokespecial #36                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      55: putfield      #37                 // Field timerThread:Ljava/lang/Thread;
      58: aload_0
      59: getfield      #37                 // Field timerThread:Ljava/lang/Thread;
      62: invokevirtual #38                 // Method java/lang/Thread.start:()V
      65: aload_0
      66: getfield      #19                 // Field logRates:Z
      69: ifeq          102
      72: aload_0
      73: new           #39                 // class org/apache/activemq/artemis/core/io/buffer/TimedBuffer$LogRatesTimerTask
      76: dup
      77: aload_0
      78: aconst_null
      79: invokespecial #40                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer$LogRatesTimerTask."<init>":(Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer$1;)V
      82: putfield      #41                 // Field logRatesTimerTask:Ljava/util/TimerTask;
      85: aload_0
      86: getfield      #22                 // Field logRatesTimer:Ljava/util/Timer;
      89: aload_0
      90: getfield      #41                 // Field logRatesTimerTask:Ljava/util/TimerTask;
      93: ldc2_w        #42                 // long 2000l
      96: ldc2_w        #42                 // long 2000l
      99: invokevirtual #44                 // Method java/util/Timer.scheduleAtFixedRate:(Ljava/util/TimerTask;JJ)V
     102: aload_0
     103: iconst_1
     104: putfield      #29                 // Field started:Z
     107: return
    Exception table:
       from    to  target type
           8    15    18   Class java/lang/InterruptedException

  public void stop();
    Code:
       0: aload_0
       1: getfield      #29                 // Field started:Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #45                 // Method flush:()V
      12: aload_0
      13: aconst_null
      14: putfield      #2                  // Field bufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
      17: aload_0
      18: getfield      #12                 // Field timerRunnable:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer;
      21: invokevirtual #46                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer$CheckTimer.close:()V
      24: aload_0
      25: getfield      #1                  // Field spinLimiter:Ljava/util/concurrent/Semaphore;
      28: invokevirtual #47                 // Method java/util/concurrent/Semaphore.release:()V
      31: aload_0
      32: getfield      #19                 // Field logRates:Z
      35: ifeq          46
      38: aload_0
      39: getfield      #41                 // Field logRatesTimerTask:Ljava/util/TimerTask;
      42: invokevirtual #48                 // Method java/util/TimerTask.cancel:()Z
      45: pop
      46: aload_0
      47: getfield      #37                 // Field timerThread:Ljava/lang/Thread;
      50: invokevirtual #49                 // Method java/lang/Thread.isAlive:()Z
      53: ifeq          76
      56: aload_0
      57: getfield      #37                 // Field timerThread:Ljava/lang/Thread;
      60: invokevirtual #50                 // Method java/lang/Thread.join:()V
      63: goto          46
      66: astore_1
      67: new           #32                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
      70: dup
      71: aload_1
      72: invokespecial #33                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
      75: athrow
      76: aload_0
      77: iconst_0
      78: putfield      #29                 // Field started:Z
      81: return
    Exception table:
       from    to  target type
          56    63    66   Class java/lang/InterruptedException

  public synchronized void setObserver(org.apache.activemq.artemis.core.io.buffer.TimedBufferObserver);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
       4: ifnull        11
       7: aload_0
       8: invokevirtual #45                 // Method flush:()V
      11: aload_0
      12: aload_1
      13: putfield      #2                  // Field bufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
      16: return

  public synchronized boolean checkSize(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field started:Z
       4: ifne          17
       7: new           #51                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #52                 // String TimedBuffer is not started
      13: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_1
      18: aload_0
      19: getfield      #18                 // Field bufferSize:I
      22: if_icmple     60
      25: new           #51                 // class java/lang/IllegalStateException
      28: dup
      29: new           #54                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #56                 // String Can\'t write records bigger than the bufferSize(
      38: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #18                 // Field bufferSize:I
      45: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #59                 // String ) on the journal
      50: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: getfield      #13                 // Field bufferLimit:I
      64: ifeq          85
      67: aload_0
      68: getfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      71: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writerIndex:()I
      76: iload_1
      77: iadd
      78: aload_0
      79: getfield      #13                 // Field bufferLimit:I
      82: if_icmple     125
      85: aload_0
      86: invokevirtual #45                 // Method flush:()V
      89: aload_0
      90: iconst_1
      91: putfield      #62                 // Field delayFlush:Z
      94: aload_0
      95: getfield      #2                  // Field bufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
      98: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/buffer/TimedBufferObserver.getRemainingBytes:()I
     103: istore_2
     104: iload_1
     105: iload_2
     106: if_icmple     111
     109: iconst_0
     110: ireturn
     111: aload_0
     112: iload_2
     113: aload_0
     114: getfield      #18                 // Field bufferSize:I
     117: invokestatic  #64                 // Method java/lang/Math.min:(II)I
     120: putfield      #13                 // Field bufferLimit:I
     123: iconst_1
     124: ireturn
     125: aload_0
     126: iconst_1
     127: putfield      #62                 // Field delayFlush:Z
     130: iconst_1
     131: ireturn

  public synchronized void addBytes(org.apache.activemq.artemis.api.core.ActiveMQBuffer, boolean, org.apache.activemq.artemis.core.io.IOCallback);
    Code:
       0: aload_0
       1: new           #65                 // class org/apache/activemq/artemis/core/journal/impl/dataformat/ByteArrayEncoding
       4: dup
       5: aload_1
       6: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.toByteBuffer:()Ljava/nio/ByteBuffer;
      11: invokevirtual #67                 // Method java/nio/ByteBuffer.array:()[B
      14: invokespecial #68                 // Method org/apache/activemq/artemis/core/journal/impl/dataformat/ByteArrayEncoding."<init>":([B)V
      17: iload_2
      18: aload_3
      19: invokevirtual #69                 // Method addBytes:(Lorg/apache/activemq/artemis/core/journal/EncodingSupport;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      22: return

  public synchronized void addBytes(org.apache.activemq.artemis.core.journal.EncodingSupport, boolean, org.apache.activemq.artemis.core.io.IOCallback);
    Code:
       0: aload_0
       1: getfield      #29                 // Field started:Z
       4: ifne          17
       7: new           #51                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #52                 // String TimedBuffer is not started
      13: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_0
      19: putfield      #62                 // Field delayFlush:Z
      22: aload_1
      23: aload_0
      24: getfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      27: invokeinterface #70,  2           // InterfaceMethod org/apache/activemq/artemis/core/journal/EncodingSupport.encode:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)V
      32: aload_0
      33: getfield      #28                 // Field callbacks:Ljava/util/List;
      36: aload_3
      37: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: iload_2
      44: ifeq          56
      47: aload_0
      48: iconst_1
      49: putfield      #3                  // Field pendingSync:Z
      52: aload_0
      53: invokevirtual #72                 // Method startSpin:()V
      56: return

  public void flush();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #73                 // Method flush:(Z)V
       5: return

  public void flush(boolean);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #29                 // Field started:Z
       8: ifne          21
      11: new           #51                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #52                 // String TimedBuffer is not started
      17: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_1
      22: ifne          32
      25: aload_0
      26: getfield      #62                 // Field delayFlush:Z
      29: ifne          168
      32: aload_0
      33: getfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      36: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writerIndex:()I
      41: ifle          168
      44: aload_0
      45: getfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      48: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.writerIndex:()I
      53: istore_3
      54: aload_0
      55: getfield      #19                 // Field logRates:Z
      58: ifeq          71
      61: aload_0
      62: getfield      #6                  // Field bytesFlushed:Ljava/util/concurrent/atomic/AtomicLong;
      65: iload_3
      66: i2l
      67: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      70: pop2
      71: aload_0
      72: getfield      #2                  // Field bufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
      75: aload_0
      76: getfield      #18                 // Field bufferSize:I
      79: iload_3
      80: invokeinterface #75,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/buffer/TimedBufferObserver.newBuffer:(II)Ljava/nio/ByteBuffer;
      85: astore        4
      87: aload         4
      89: aload_0
      90: getfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      93: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.toByteBuffer:()Ljava/nio/ByteBuffer;
      98: invokevirtual #67                 // Method java/nio/ByteBuffer.array:()[B
     101: iconst_0
     102: iload_3
     103: invokevirtual #76                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     106: pop
     107: aload_0
     108: getfield      #2                  // Field bufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
     111: aload         4
     113: aload_0
     114: getfield      #3                  // Field pendingSync:Z
     117: aload_0
     118: getfield      #28                 // Field callbacks:Ljava/util/List;
     121: invokeinterface #77,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/buffer/TimedBufferObserver.flushBuffer:(Ljava/nio/ByteBuffer;ZLjava/util/List;)V
     126: aload_0
     127: invokevirtual #78                 // Method stopSpin:()V
     130: aload_0
     131: iconst_0
     132: putfield      #3                  // Field pendingSync:Z
     135: aload_0
     136: new           #79                 // class java/util/LinkedList
     139: dup
     140: invokespecial #80                 // Method java/util/LinkedList."<init>":()V
     143: putfield      #28                 // Field callbacks:Ljava/util/List;
     146: aload_0
     147: getfield      #24                 // Field buffer:Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
     150: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.clear:()V
     155: aload_0
     156: iconst_0
     157: putfield      #13                 // Field bufferLimit:I
     160: aload_0
     161: getfield      #5                  // Field flushesDone:Ljava/util/concurrent/atomic/AtomicLong;
     164: invokevirtual #81                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     167: pop2
     168: aload_2
     169: monitorexit
     170: goto          180
     173: astore        5
     175: aload_2
     176: monitorexit
     177: aload         5
     179: athrow
     180: return
    Exception table:
       from    to  target type
           4   170   173   any
         173   177   173   any

  protected void sleep(int, int) throws java.lang.InterruptedException;
    Code:
       0: iload_1
       1: i2l
       2: iload_2
       3: invokestatic  #82                 // Method java/lang/Thread.sleep:(JI)V
       6: return

  protected void stopSpin();
    Code:
       0: aload_0
       1: getfield      #17                 // Field spinning:Z
       4: ifeq          32
       7: aload_0
       8: getfield      #1                  // Field spinLimiter:Ljava/util/concurrent/Semaphore;
      11: invokevirtual #30                 // Method java/util/concurrent/Semaphore.acquire:()V
      14: goto          27
      17: astore_1
      18: new           #32                 // class org/apache/activemq/artemis/api/core/ActiveMQInterruptedException
      21: dup
      22: aload_1
      23: invokespecial #33                 // Method org/apache/activemq/artemis/api/core/ActiveMQInterruptedException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
      27: aload_0
      28: iconst_0
      29: putfield      #17                 // Field spinning:Z
      32: return
    Exception table:
       from    to  target type
           7    14    17   Class java/lang/InterruptedException

  protected void startSpin();
    Code:
       0: aload_0
       1: getfield      #17                 // Field spinning:Z
       4: ifne          19
       7: aload_0
       8: getfield      #1                  // Field spinLimiter:Ljava/util/concurrent/Semaphore;
      11: invokevirtual #47                 // Method java/util/concurrent/Semaphore.release:()V
      14: aload_0
      15: iconst_1
      16: putfield      #17                 // Field spinning:Z
      19: return

  static java.util.concurrent.atomic.AtomicLong access$200(org.apache.activemq.artemis.core.io.buffer.TimedBuffer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bytesFlushed:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$300(org.apache.activemq.artemis.core.io.buffer.TimedBuffer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field flushesDone:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static int access$400(org.apache.activemq.artemis.core.io.buffer.TimedBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field timeout:I
       4: ireturn

  static boolean access$500(org.apache.activemq.artemis.core.io.buffer.TimedBuffer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pendingSync:Z
       4: ireturn

  static org.apache.activemq.artemis.core.io.buffer.TimedBufferObserver access$600(org.apache.activemq.artemis.core.io.buffer.TimedBuffer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
       4: areturn

  static java.util.concurrent.Semaphore access$700(org.apache.activemq.artemis.core.io.buffer.TimedBuffer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field spinLimiter:Ljava/util/concurrent/Semaphore;
       4: areturn
}
