Compiled from "ActiveMQServerLogger_$logger.java"
public class org.apache.activemq.artemis.core.server.ActiveMQServerLogger_$logger extends org.jboss.logging.DelegatingBasicLogger implements org.apache.activemq.artemis.core.server.ActiveMQServerLogger,org.jboss.logging.BasicLogger,java.io.Serializable {
  private static final long serialVersionUID;

  private static final java.lang.String FQCN;

  private static final java.lang.String serverStarting;

  private static final java.lang.String serverStarted;

  private static final java.lang.String serverStopped;

  private static final java.lang.String deployQueue;

  private static final java.lang.String dumpServerInfo;

  private static final java.lang.String deletingPendingMessage;

  private static final java.lang.String awaitingLiveLock;

  private static final java.lang.String serverIsLive0;

  private static final java.lang.String awaitFailBack;

  private static final java.lang.String backupServerStarted;

  private static final java.lang.String backupServerIsLive;

  private static final java.lang.String serverIsLive1;

  private static final java.lang.String journalUseAIO;

  private static final java.lang.String journalUseNIO;

  private static final java.lang.String percentLoaded;

  private static final java.lang.String journalCannotFindQueueReloading;

  private static final java.lang.String journalCannotFindQueueReloadingPage;

  private static final java.lang.String journalCannotFindQueueReloadingPageCursor;

  private static final java.lang.String largeMessageWithNoRef;

  private static final java.lang.String journalUnreferencedMessage;

  private static final java.lang.String startedAcceptor;

  private static final java.lang.String errorRemovingConnection;

  private static final java.lang.String errorStartingConnectorService;

  private static final java.lang.String errorStoppingConnectorService;

  private static final java.lang.String backupServerSynched;

  private static final java.lang.String journalSynch;

  private static final java.lang.String bridgeNoBindings;

  private static final java.lang.String bridgeConnected;

  private static final java.lang.String bridgeStopping;

  private static final java.lang.String bridgeStopped;

  private static final java.lang.String bridgePaused;

  private static final java.lang.String backupAnnounced;

  private static final java.lang.String waitingToBecomeBackup;

  private static final java.lang.String gotBackupLock;

  private static final java.lang.String waitingToObtainLiveLock;

  private static final java.lang.String obtainedLiveLock;

  private static final java.lang.String messageWithDuplicateID;

  private static final java.lang.String becomingLive;

  private static final java.lang.String deprecatedConfigurationOption;

  private static final java.lang.String restartingReplicatedBackupAfterFailback;

  private static final java.lang.String remoteGroupCoordinatorsNotStarted;

  private static final java.lang.String cantFindQueueOnPageComplete;

  private static final java.lang.String timedOutWaitingCompletions;

  private static final java.lang.String addingProtocolSupport;

  private static final java.lang.String switchingNIO;

  private static final java.lang.String unblockingMessageProduction;

  private static final java.lang.String backupServerScaledDown;

  private static final java.lang.String slowConsumerDetected;

  private static final java.lang.String activatingReplica;

  private static final java.lang.String activatingSharedStoreSlave;

  private static final java.lang.String serverFinalisedWIthoutBeingSTopped;

  private static final java.lang.String errorClosingSessionsWhileStoppingServer;

  private static final java.lang.String timedOutStoppingThreadpool;

  private static final java.lang.String divertWithNoName;

  private static final java.lang.String divertWithNoAddress;

  private static final java.lang.String divertWithNoForwardingAddress;

  private static final java.lang.String divertBindingNotExists;

  private static final java.lang.String clusterSecurityRisk;

  private static final java.lang.String serverRestartWarning;

  private static final java.lang.String replicationStartProblem;

  private static final java.lang.String ioCriticalIOError;

  private static final java.lang.String errorStoppingServer;

  private static final java.lang.String backupActivationProblem;

  private static final java.lang.String errorStartingReplication0;

  private static final java.lang.String errorStoppingReplication;

  private static final java.lang.String connectorWithNoName;

  private static final java.lang.String connectorAlreadyDeployed;

  private static final java.lang.String AIONotFound;

  private static final java.lang.String discoveryGroupAlreadyDeployed;

  private static final java.lang.String errorScanningURLs;

  private static final java.lang.String problemUndeployingNode;

  private static final java.lang.String timedOutStoppingPagingCursor;

  private static final java.lang.String problemCleaningPageAddress;

  private static final java.lang.String problemCompletingOperations;

  private static final java.lang.String problemCleaningPagesubscriptionCounter;

  private static final java.lang.String problemCleaningCursorPages;

  private static final java.lang.String timedOutFlushingExecutorsPagingCursor;

  private static final java.lang.String pageNotFound;

  private static final java.lang.String pageSubscriptionCouldntLoad;

  private static final java.lang.String pageInvalid;

  private static final java.lang.String pageDeleteError;

  private static final java.lang.String pageFinaliseError;

  private static final java.lang.String pageSuspectFile;

  private static final java.lang.String pageTxDeleteError;

  private static final java.lang.String pageStoreFactoryNoIdFile;

  private static final java.lang.String pageStoreTimeout;

  private static final java.lang.String pageStoreStartIOError;

  private static final java.lang.String pageStoreStart;

  private static final java.lang.String pageStoreDropMessages;

  private static final java.lang.String serverIsStopped;

  private static final java.lang.String journalCannotFindQueueDelCount;

  private static final java.lang.String journalCannotFindMessageDelCount;

  private static final java.lang.String journalCannotFindQueueForMessage;

  private static final java.lang.String journalErrorDeletingMessage;

  private static final java.lang.String journalMessageInPreparedTX;

  private static final java.lang.String journalErrorRemovingRef;

  private static final java.lang.String journalCannotFindQueueReloadingACK;

  private static final java.lang.String journalPAGEOnPrepared;

  private static final java.lang.String journalInvalidRecordType;

  private static final java.lang.String journalInvalidRecordTypeOnPreparedTX;

  private static final java.lang.String journalError;

  private static final java.lang.String errorIncrementDelayDeletionCount;

  private static final java.lang.String lareMessageErrorCopying;

  private static final java.lang.String errorExecutingAIOCallback;

  private static final java.lang.String errorDeletingDuplicateCache;

  private static final java.lang.String noDLA;

  private static final java.lang.String ioErrorAddingReferences;

  private static final java.lang.String duplicateMessageDetectedThruBridge;

  private static final java.lang.String duplicateMessageDetected;

  private static final java.lang.String journalErrorConfirmingLargeMessage;

  private static final java.lang.String clientConnectionFailed;

  private static final java.lang.String clearingUpSession;

  private static final java.lang.String errorProcessingIOCallback;

  private static final java.lang.String incompatibleVersionAfterConnect;

  private static final java.lang.String reattachRequestFailed;

  private static final java.lang.String connectionFailureDetected;

  private static final java.lang.String errorCleaningStompConn;

  private static final java.lang.String stompTXAckNorSupported;

  private static final java.lang.String errorOnStompHeartBeat;

  private static final java.lang.String timedOutFlushingInvmChannel;

  private static final java.lang.String nettyChannelGroupError;

  private static final java.lang.String nettyChannelStillOpen;

  private static final java.lang.String nettyChannelGroupBindError;

  private static final java.lang.String nettyChannelStillBound;

  private static final java.lang.String errorCreatingRemotingInterceptor;

  private static final java.lang.String invalidAcceptorKeys;

  private static final java.lang.String errorCreatingAcceptor;

  private static final java.lang.String timeoutRemotingThreadPool;

  private static final java.lang.String errorOnFailureCheck;

  private static final java.lang.String connectorKeysInvalid;

  private static final java.lang.String connectorKeysMissing;

  private static final java.lang.String invalidPacketForReplication;

  private static final java.lang.String errorHandlingReplicationPacket;

  private static final java.lang.String errorClosingPageOnReplication;

  private static final java.lang.String journalcomparisonMismatch;

  private static final java.lang.String errorDeletingLargeMessage;

  private static final java.lang.String largeMessageNotAvailable;

  private static final java.lang.String replicationStopOnBackupShutdown;

  private static final java.lang.String replicationStopOnBackupFail;

  private static final java.lang.String timedOutWaitingToStopBridge;

  private static final java.lang.String bridgeUnableToSendMessage;

  private static final java.lang.String bridgeConnectionFailed;

  private static final java.lang.String errorQueryingBridge1;

  private static final java.lang.String errorQueryingBridge2;

  private static final java.lang.String errorStartingBridge;

  private static final java.lang.String errorConnectingBridge;

  private static final java.lang.String bridgeLocatorShutdown;

  private static final java.lang.String bridgeAbortStart;

  private static final java.lang.String errorReConnecting;

  private static final java.lang.String timedOutXID;

  private static final java.lang.String ioErrorOnTX;

  private static final java.lang.String errorCompletingContext;

  private static final java.lang.String replacingIncompleteLargeMessage;

  private static final java.lang.String clientConnectionFailedClearingSession;

  private static final java.lang.String broadcastGroupClosed;

  private static final java.lang.String nodeNotAvailable;

  private static final java.lang.String noQueueIdDefined;

  private static final java.lang.String managementOperationError;

  private static final java.lang.String managementAttributeError;

  private static final java.lang.String managementStopError;

  private static final java.lang.String unableToDeleteGroupBindings;

  private static final java.lang.String errorClosingServerLocator;

  private static final java.lang.String unableToStartBroadcastGroup;

  private static final java.lang.String unableToStartClusterConnection;

  private static final java.lang.String unableToStartBridge;

  private static final java.lang.String announceBackupNoConnector;

  private static final java.lang.String announceBackupNoClusterConnections;

  private static final java.lang.String bridgeNotUnique;

  private static final java.lang.String bridgeNoQueue;

  private static final java.lang.String bridgeNoForwardAddress;

  private static final java.lang.String bridgeAlreadyDeployed;

  private static final java.lang.String bridgeQueueNotFound;

  private static final java.lang.String bridgeNoDiscoveryGroup;

  private static final java.lang.String clusterConnectionNotUnique;

  private static final java.lang.String clusterConnectionNoForwardAddress;

  private static final java.lang.String clusterConnectionNoConnector;

  private static final java.lang.String clusterConnectionAlreadyExists;

  private static final java.lang.String clusterConnectionNoDiscoveryGroup;

  private static final java.lang.String broadcastGroupAlreadyExists;

  private static final java.lang.String broadcastGroupNoConnector;

  private static final java.lang.String bridgeNoConnector;

  private static final java.lang.String errorStoppingRedistributor;

  private static final java.lang.String ioErrorRedistributing;

  private static final java.lang.String errorAnnouncingBackup;

  private static final java.lang.String noLocalMemborOnClusterConnection;

  private static final java.lang.String remoteQueueAlreadyBoundOnClusterConnection;

  private static final java.lang.String nodeManagerCantOpenFile;

  private static final java.lang.String errorResttingLargeMessage;

  private static final java.lang.String errorTransferringConsumer;

  private static final java.lang.String errorFlushingExecutorsOnQueue;

  private static final java.lang.String errorExpiringReferencesOnQueue;

  private static final java.lang.String errorExpiringReferencesNoBindings;

  private static final java.lang.String errorExpiringReferencesNoQueue;

  private static final java.lang.String messageExceededMaxDelivery;

  private static final java.lang.String messageExceededMaxDeliverySendtoDLA;

  private static final java.lang.String messageExceededMaxDeliveryNoDLA;

  private static final java.lang.String removingBadConsumer;

  private static final java.lang.String errorDecrementingRefCount;

  private static final java.lang.String errorRemovingMessage;

  private static final java.lang.String errorCheckingDLQ;

  private static final java.lang.String errorRegisteringBackup;

  private static final java.lang.String memoryError;

  private static final java.lang.String errorCompletingCallbackOnReplicationManager;

  private static final java.lang.String backupActivationDidntFinish;

  private static final java.lang.String broadcastBridgeStoppedError;

  private static final java.lang.String notificationBridgeStoppedError;

  private static final java.lang.String groupHandlerSendTimeout;

  private static final java.lang.String backupMovingDataAway;

  private static final java.lang.String stopReplicatedBackupAfterFailback;

  private static final java.lang.String errorStartingReplication1;

  private static final java.lang.String groupingQueueRemoved;

  private static final java.lang.String warnDeprecatedProtocol;

  private static final java.lang.String warnDisconnectOldClient;

  private static final java.lang.String bridgeConfirmationWindowTooSmall;

  private static final java.lang.String bridgeCantFindAddressConfig;

  private static final java.lang.String queueBusy;

  private static final java.lang.String queueDuplicatedRenaming;

  private static final java.lang.String timeoutFlushInTransit;

  private static final java.lang.String bridgeCantFindConnectors;

  private static final java.lang.String xidReplacedOnXStart;

  private static final java.lang.String rolePermissionConfigurationError;

  private static final java.lang.String errorRecoveringPageCounter;

  private static final java.lang.String failedToScaleDown;

  private static final java.lang.String missingClusterConfigForScaleDown;

  private static final java.lang.String blockingMessageProduction;

  private static final java.lang.String groupBindingsOnRecovery;

  private static final java.lang.String noClusterConnectionForReplicationCluster;

  private static final java.lang.String clusterControlAuthfailure;

  private static final java.lang.String activateReplicatedBackupFailed;

  private static final java.lang.String unableToFindTargetQueue;

  private static final java.lang.String activateSharedStoreSlaveFailed;

  private static final java.lang.String disallowedProtocol;

  private static final java.lang.String cannotFindRoleForUser;

  private static final java.lang.String couldNotDeleteTempFile;

  private static final java.lang.String memoryLimitReached;

  private static final java.lang.String nullPageCursorInfo;

  private static final java.lang.String largeMessageNotFound;

  private static final java.lang.String bindingNotFound;

  private static final java.lang.String nonDeliveryHandled;

  private static final java.lang.String couldNotFlushClusterManager;

  private static final java.lang.String threadDump;

  private static final java.lang.String couldNotFinishExecutor;

  private static final java.lang.String backupActivationTimeout;

  private static final java.lang.String connectionTTLEqualsCheckPeriod;

  private static final java.lang.String noProtocolManagerFound;

  private static final java.lang.String initializationError;

  private static final java.lang.String errorDeployingURI1;

  private static final java.lang.String errorDeployingURI0;

  private static final java.lang.String errorUnDeployingURI;

  private static final java.lang.String unableToDeployNode;

  private static final java.lang.String invalidFilter;

  private static final java.lang.String pageSubscriptionError;

  private static final java.lang.String batchingIdError;

  private static final java.lang.String cannotFindMessage;

  private static final java.lang.String journalCannotFindQueue;

  private static final java.lang.String journalCannotFindQueueScheduled;

  private static final java.lang.String largeMessageErrorReleasingResources;

  private static final java.lang.String errorExpiringMessages;

  private static final java.lang.String errorClosingSession;

  private static final java.lang.String caughtXaException;

  private static final java.lang.String caughtException;

  private static final java.lang.String invalidPacket;

  private static final java.lang.String failedToCreateSession;

  private static final java.lang.String failedToReattachSession;

  private static final java.lang.String failedToHandleCreateQueue;

  private static final java.lang.String errorDecodingPacket;

  private static final java.lang.String errorCallingFailureListener;

  private static final java.lang.String stompErrorTXExists;

  private static final java.lang.String errorWritingToInvmConnector;

  private static final java.lang.String errorStoppingAcceptor;

  private static final java.lang.String largeMessageIncompatible;

  private static final java.lang.String errorCancellingRefOnBridge;

  private static final java.lang.String stompBeginTX;

  private static final java.lang.String errorPausingBridge;

  private static final java.lang.String errorBroadcastingConnectorConfigs;

  private static final java.lang.String errorClosingConsumer;

  private static final java.lang.String errorClosingFlowRecord;

  private static final java.lang.String errorUpdatingTopology;

  private static final java.lang.String errorHandlingMessage;

  private static final java.lang.String errorAckingOldReference;

  private static final java.lang.String errorExpiringRef;

  private static final java.lang.String errorRemovingConsumer;

  private static final java.lang.String errorDelivering;

  private static final java.lang.String errorRestartingBackupServer;

  private static final java.lang.String errorSendingForcedDelivery;

  private static final java.lang.String errorAckingMessage;

  private static final java.lang.String errorRunningLargeMessageDeliverer;

  private static final java.lang.String errorBrowserHandlingMessage;

  private static final java.lang.String errorDeletingLargeMessageFile;

  private static final java.lang.String errorRemovingTempQueue;

  private static final java.lang.String cannotFindConsumer;

  private static final java.lang.String errorClosingConnection;

  private static final java.lang.String errorCallingNotifListener;

  private static final java.lang.String errorCallingRepoListener;

  private static final java.lang.String errorTimingOutTX;

  private static final java.lang.String errorStoppingReplicationManager;

  private static final java.lang.String bridgeFailedToAck;

  private static final java.lang.String autoFailBackDenied;

  private static final java.lang.String failbackMissedBackupAnnouncement;

  private static final java.lang.String clusterManagerAuthenticationError;

  private static final java.lang.String invalidCipherSuite;

  private static final java.lang.String invalidProtocol;

  private static final java.lang.String impossibleToRouteGrouped;

  private static final java.lang.String incompatibleWithHAPolicy;

  private static final java.lang.String failedToSendSlowConsumerNotification;

  private static final java.lang.String failedToCloseConsumerConnectionsForAddress;

  private static final java.lang.String incompatibleWithHAPolicyChosen;

  private static final java.lang.String errorRemovingAutoCreatedQueue;

  private static final java.lang.String duplicatedAcceptor;

  private static final java.lang.String errorStoppingComponent;

  private static final java.lang.String interruptWhilstStoppingComponent;

  public org.apache.activemq.artemis.core.server.ActiveMQServerLogger_$logger(org.jboss.logging.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/DelegatingBasicLogger."<init>":(Lorg/jboss/logging/Logger;)V
       5: return

  public final void serverStarting(java.lang.String, org.apache.activemq.artemis.core.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #5                  // Method serverStarting$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String serverStarting$str();
    Code:
       0: ldc           #8                  // String AMQ221000: {0} Message Broker is starting with configuration {1}
       2: areturn

  public final void serverStarted(java.lang.String, org.apache.activemq.artemis.api.core.SimpleString, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #9                  // Method serverStarted$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String serverStarted$str();
    Code:
       0: ldc           #11                 // String AMQ221001: Apache ActiveMQ Artemis Message Broker version {0} [nodeID={1}] {2}
       2: areturn

  public final void serverStopped(java.lang.String, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #12                 // Method serverStopped$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String serverStopped$str();
    Code:
       0: ldc           #13                 // String AMQ221002: Apache ActiveMQ Artemis Message Broker version {0} [{1}] stopped
       2: areturn

  public final void deployQueue(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #14                 // Method deployQueue$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String deployQueue$str();
    Code:
       0: ldc           #16                 // String AMQ221003: trying to deploy queue {0}
       2: areturn

  public final void dumpServerInfo(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #17                 // Method dumpServerInfo$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String dumpServerInfo$str();
    Code:
       0: ldc           #18                 // String AMQ221004: {0}
       2: areturn

  public final void deletingPendingMessage(org.apache.activemq.artemis.api.core.Pair);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #19                 // Method deletingPendingMessage$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String deletingPendingMessage$str();
    Code:
       0: ldc           #20                 // String AMQ221005: Deleting pending large message as it was not completed: {0}
       2: areturn

  public final void awaitingLiveLock();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #21                 // Method awaitingLiveLock$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String awaitingLiveLock$str();
    Code:
       0: ldc           #24                 // String AMQ221006: Waiting to obtain live lock
       2: areturn

  public final void serverIsLive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #25                 // Method serverIsLive0$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String serverIsLive0$str();
    Code:
       0: ldc           #26                 // String AMQ221007: Server is now live
       2: areturn

  public final void awaitFailBack();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #27                 // Method awaitFailBack$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String awaitFailBack$str();
    Code:
       0: ldc           #28                 // String AMQ221008: live server wants to restart, restarting server in backup
       2: areturn

  public final void backupServerStarted(java.lang.String, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #29                 // Method backupServerStarted$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String backupServerStarted$str();
    Code:
       0: ldc           #30                 // String AMQ221109: Apache ActiveMQ Artemis Backup Server version {0} [{1}] started, waiting live to fail before it gets active
       2: areturn

  public final void backupServerIsLive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #31                 // Method backupServerIsLive$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String backupServerIsLive$str();
    Code:
       0: ldc           #32                 // String AMQ221010: Backup Server is now live
       2: areturn

  public final void serverIsLive(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #33                 // Method serverIsLive1$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String serverIsLive1$str();
    Code:
       0: ldc           #34                 // String AMQ221011: Server {0} is now live
       2: areturn

  public final void journalUseAIO();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #35                 // Method journalUseAIO$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String journalUseAIO$str();
    Code:
       0: ldc           #36                 // String AMQ221012: Using AIO Journal
       2: areturn

  public final void journalUseNIO();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #37                 // Method journalUseNIO$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String journalUseNIO$str();
    Code:
       0: ldc           #38                 // String AMQ221013: Using NIO Journal
       2: areturn

  public final void percentLoaded(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #39                 // Method percentLoaded$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String percentLoaded$str();
    Code:
       0: ldc           #40                 // String AMQ221014: {0}% loaded
       2: areturn

  public final void journalCannotFindQueueReloading(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #41                 // Method journalCannotFindQueueReloading$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalCannotFindQueueReloading$str();
    Code:
       0: ldc           #42                 // String AMQ221015: Can not find queue {0} while reloading ACKNOWLEDGE_CURSOR, deleting record now
       2: areturn

  public final void journalCannotFindQueueReloadingPage(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #43                 // Method journalCannotFindQueueReloadingPage$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalCannotFindQueueReloadingPage$str();
    Code:
       0: ldc           #44                 // String AMQ221016: Can not find queue {0} while reloading PAGE_CURSOR_COUNTER_VALUE, deleting record now
       2: areturn

  public final void journalCannotFindQueueReloadingPageCursor(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #45                 // Method journalCannotFindQueueReloadingPageCursor$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalCannotFindQueueReloadingPageCursor$str();
    Code:
       0: ldc           #46                 // String AMQ221017: Can not find queue {0} while reloading PAGE_CURSOR_COUNTER_INC, deleting record now
       2: areturn

  public final void largeMessageWithNoRef(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #47                 // Method largeMessageWithNoRef$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String largeMessageWithNoRef$str();
    Code:
       0: ldc           #48                 // String AMQ221018: Large message: {0} did not have any associated reference, file will be deleted
       2: areturn

  public final void journalUnreferencedMessage(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #49                 // Method journalUnreferencedMessage$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalUnreferencedMessage$str();
    Code:
       0: ldc           #50                 // String AMQ221019: Deleting unreferenced message id={0} from the journal
       2: areturn

  public final void startedAcceptor(java.lang.String, java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #51                 // Method startedAcceptor$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String startedAcceptor$str();
    Code:
       0: ldc           #52                 // String AMQ221020: Started Acceptor at {0}:{1,number,#} for protocols [{2}]
       2: areturn

  public final void errorRemovingConnection();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #53                 // Method errorRemovingConnection$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorRemovingConnection$str();
    Code:
       0: ldc           #54                 // String AMQ221021: failed to remove connection
       2: areturn

  public final void errorStartingConnectorService(java.lang.Throwable, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #55                 // Method errorStartingConnectorService$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorStartingConnectorService$str();
    Code:
       0: ldc           #56                 // String AMQ221022: unable to start connector service: {0}
       2: areturn

  public final void errorStoppingConnectorService(java.lang.Throwable, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #57                 // Method errorStoppingConnectorService$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorStoppingConnectorService$str();
    Code:
       0: ldc           #58                 // String AMQ221023: unable to stop connector service: {0}
       2: areturn

  public final void backupServerSynched(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #59                 // Method backupServerSynched$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String backupServerSynched$str();
    Code:
       0: ldc           #60                 // String AMQ221024: Backup server {0} is synchronized with live-server.
       2: areturn

  public final void journalSynch(org.apache.activemq.artemis.core.journal.impl.JournalFile, java.lang.Long, org.apache.activemq.artemis.core.io.SequentialFile);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #61                 // Method journalSynch$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String journalSynch$str();
    Code:
       0: ldc           #62                 // String AMQ221025: Replication: sending {0} (size={1}) to backup. {2}
       2: areturn

  public final void bridgeNoBindings(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #63                 // Method bridgeNoBindings$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String bridgeNoBindings$str();
    Code:
       0: ldc           #64                 // String AMQ221026: Bridge {0} connected to fowardingAddress={1}. {2} does not have any bindings what means messages will be ignored until a binding is created.
       2: areturn

  public final void bridgeConnected(org.apache.activemq.artemis.core.server.cluster.impl.BridgeImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #65                 // Method bridgeConnected$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeConnected$str();
    Code:
       0: ldc           #66                 // String AMQ221027: Bridge {0} is connected
       2: areturn

  public final void bridgeStopping();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #67                 // Method bridgeStopping$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String bridgeStopping$str();
    Code:
       0: ldc           #68                 // String AMQ221028: Bridge is stopping, will not retry
       2: areturn

  public final void bridgeStopped(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #69                 // Method bridgeStopped$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeStopped$str();
    Code:
       0: ldc           #70                 // String AMQ221029: stopped bridge {0}
       2: areturn

  public final void bridgePaused(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #71                 // Method bridgePaused$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgePaused$str();
    Code:
       0: ldc           #72                 // String AMQ221030: paused bridge {0}
       2: areturn

  public final void backupAnnounced();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #73                 // Method backupAnnounced$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String backupAnnounced$str();
    Code:
       0: ldc           #74                 // String AMQ221031: backup announced
       2: areturn

  public final void waitingToBecomeBackup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #75                 // Method waitingToBecomeBackup$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String waitingToBecomeBackup$str();
    Code:
       0: ldc           #76                 // String AMQ221032: Waiting to become backup node
       2: areturn

  public final void gotBackupLock();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #77                 // Method gotBackupLock$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String gotBackupLock$str();
    Code:
       0: ldc           #78                 // String AMQ221033: ** got backup lock
       2: areturn

  public final void waitingToObtainLiveLock(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #79                 // Method waitingToObtainLiveLock$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String waitingToObtainLiveLock$str();
    Code:
       0: ldc           #80                 // String AMQ221034: Waiting {0} to obtain live lock
       2: areturn

  public final void obtainedLiveLock();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #81                 // Method obtainedLiveLock$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String obtainedLiveLock$str();
    Code:
       0: ldc           #82                 // String AMQ221035: Live Server Obtained live lock
       2: areturn

  public final void messageWithDuplicateID(java.lang.Object, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #83                 // Method messageWithDuplicateID$str:()Ljava/lang/String;
      15: iconst_4
      16: anewarray     #22                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: dup
      24: iconst_1
      25: aload_2
      26: aastore
      27: dup
      28: iconst_2
      29: aload_3
      30: aastore
      31: dup
      32: iconst_3
      33: aload         4
      35: aastore
      36: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      39: return

  protected java.lang.String messageWithDuplicateID$str();
    Code:
       0: ldc           #84                 // String AMQ221036: Message with duplicate ID {0} was already set at {1}. Move from {2} being ignored and message removed from {3}
       2: areturn

  public final void becomingLive(org.apache.activemq.artemis.core.server.ActiveMQServer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #85                 // Method becomingLive$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String becomingLive$str();
    Code:
       0: ldc           #86                 // String AMQ221037: {0} to become \'\'live\'\'
       2: areturn

  public final void deprecatedConfigurationOption(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #87                 // Method deprecatedConfigurationOption$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String deprecatedConfigurationOption$str();
    Code:
       0: ldc           #88                 // String AMQ221038: Configuration option \'\'{0}\'\' is deprecated. Consult the manual for details.
       2: areturn

  public final void restartingReplicatedBackupAfterFailback();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #89                 // Method restartingReplicatedBackupAfterFailback$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String restartingReplicatedBackupAfterFailback$str();
    Code:
       0: ldc           #90                 // String AMQ221039: Restarting as Replicating backup server after live restart
       2: areturn

  public final void remoteGroupCoordinatorsNotStarted();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #91                 // Method remoteGroupCoordinatorsNotStarted$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String remoteGroupCoordinatorsNotStarted$str();
    Code:
       0: ldc           #92                 // String AMQ221040: Remote group coordinators has not started.
       2: areturn

  public final void cantFindQueueOnPageComplete(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #93                 // Method cantFindQueueOnPageComplete$str:()Ljava/lang/String;
      15: lload_1
      16: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  protected java.lang.String cantFindQueueOnPageComplete$str();
    Code:
       0: ldc           #95                 // String AMQ221041: Cannot find queue {0} while reloading PAGE_CURSOR_COMPLETE, deleting record now
       2: areturn

  public final void timedOutWaitingCompletions(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #96                 // Method timedOutWaitingCompletions$str:()Ljava/lang/String;
      15: aload_1
      16: lload_2
      17: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: return

  protected java.lang.String timedOutWaitingCompletions$str();
    Code:
       0: ldc           #97                 // String AMQ221042: Bridge {0} timed out waiting for the completion of {1} messages, we will just shutdown the bridge after 10 seconds wait
       2: areturn

  public final void addingProtocolSupport(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #98                 // Method addingProtocolSupport$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String addingProtocolSupport$str();
    Code:
       0: ldc           #99                 // String AMQ221043: Protocol module found: [{1}]. Adding protocol support for: {0}
       2: areturn

  public final void switchingNIO();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #100                // Method switchingNIO$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String switchingNIO$str();
    Code:
       0: ldc           #101                // String AMQ221045: libaio is not available, switching the configuration into NIO
       2: areturn

  public final void unblockingMessageProduction(org.apache.activemq.artemis.api.core.SimpleString, long, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #102                // Method unblockingMessageProduction$str:()Ljava/lang/String;
      15: aload_1
      16: lload_2
      17: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: lload         4
      22: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      28: return

  protected java.lang.String unblockingMessageProduction$str();
    Code:
       0: ldc           #103                // String AMQ221046: Unblocking message production on address \'\'{0}\'\'; size is currently: {1} bytes; max-size-bytes: {2}
       2: areturn

  public final void backupServerScaledDown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #104                // Method backupServerScaledDown$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String backupServerScaledDown$str();
    Code:
       0: ldc           #105                // String AMQ221047: Backup Server has scaled down to live server
       2: areturn

  public final void slowConsumerDetected(java.lang.String, long, java.lang.String, java.lang.String, float, float);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #106                // Method slowConsumerDetected$str:()Ljava/lang/String;
      15: bipush        6
      17: anewarray     #22                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: dup
      25: iconst_1
      26: lload_2
      27: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: aastore
      31: dup
      32: iconst_2
      33: aload         4
      35: aastore
      36: dup
      37: iconst_3
      38: aload         5
      40: aastore
      41: dup
      42: iconst_4
      43: fload         6
      45: invokestatic  #107                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      48: aastore
      49: dup
      50: iconst_5
      51: fload         7
      53: invokestatic  #107                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      56: aastore
      57: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      60: return

  protected java.lang.String slowConsumerDetected$str();
    Code:
       0: ldc           #108                // String AMQ221048: Consumer {0}:{1} attached to queue \'\'{2}\'\' from {3} identified as \'\'slow.\'\' Expected consumption rate: {4} msgs/second; actual consumption rate: {5} msgs/second.
       2: areturn

  public final void activatingReplica(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #109                // Method activatingReplica$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String activatingReplica$str();
    Code:
       0: ldc           #110                // String AMQ221049: Activating Replica for node: {0}
       2: areturn

  public final void activatingSharedStoreSlave();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #4                  // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #111                // Method activatingSharedStoreSlave$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String activatingSharedStoreSlave$str();
    Code:
       0: ldc           #112                // String AMQ221050: Activating Shared Store Slave
       2: areturn

  public final void serverFinalisedWIthoutBeingSTopped();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #114                // Method serverFinalisedWIthoutBeingSTopped$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String serverFinalisedWIthoutBeingSTopped$str();
    Code:
       0: ldc           #115                // String AMQ222000: ActiveMQServer is being finalized and has not been stopped. Please remember to stop the server before letting it go out of scope
       2: areturn

  public final void errorClosingSessionsWhileStoppingServer(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #116                // Method errorClosingSessionsWhileStoppingServer$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorClosingSessionsWhileStoppingServer$str();
    Code:
       0: ldc           #117                // String AMQ222001: Error closing sessions while stopping server
       2: areturn

  public final void timedOutStoppingThreadpool(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #118                // Method timedOutStoppingThreadpool$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String timedOutStoppingThreadpool$str();
    Code:
       0: ldc           #119                // String AMQ222002: Timed out waiting for pool to terminate {0}. Interrupting all its threads!
       2: areturn

  public final void divertWithNoName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #120                // Method divertWithNoName$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String divertWithNoName$str();
    Code:
       0: ldc           #121                // String AMQ222003: Must specify a name for each divert. This one will not be deployed.
       2: areturn

  public final void divertWithNoAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #122                // Method divertWithNoAddress$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String divertWithNoAddress$str();
    Code:
       0: ldc           #123                // String AMQ222004: Must specify an address for each divert. This one will not be deployed.
       2: areturn

  public final void divertWithNoForwardingAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #124                // Method divertWithNoForwardingAddress$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String divertWithNoForwardingAddress$str();
    Code:
       0: ldc           #125                // String AMQ222005: Must specify a forwarding address for each divert. This one will not be deployed.
       2: areturn

  public final void divertBindingNotExists(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #126                // Method divertBindingNotExists$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String divertBindingNotExists$str();
    Code:
       0: ldc           #127                // String AMQ222006: Binding already exists with name {0}, divert will not be deployed
       2: areturn

  public final void clusterSecurityRisk();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #128                // Method clusterSecurityRisk$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String clusterSecurityRisk$str();
    Code:
       0: ldc           #129                // String AMQ222007: Security risk! Apache ActiveMQ Artemis is running with the default cluster admin user and default password. Please see the cluster chapter in the ActiveMQ Artemis User Guide for instructions on how to change this.
       2: areturn

  public final void serverRestartWarning();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #130                // Method serverRestartWarning$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String serverRestartWarning$str();
    Code:
       0: ldc           #131                // String AMQ222008: unable to restart server, please kill and restart manually
       2: areturn

  public final void serverRestartWarning(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #130                // Method serverRestartWarning$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  public final void replicationStartProblem(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #132                // Method replicationStartProblem$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String replicationStartProblem$str();
    Code:
       0: ldc           #133                // String AMQ222009: Unable to announce backup for replication. Trying to stop the server.
       2: areturn

  public final void ioCriticalIOError(java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_3
      11: aload_0
      12: invokevirtual #134                // Method ioCriticalIOError$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String ioCriticalIOError$str();
    Code:
       0: ldc           #135                // String AMQ222010: Critical IO Error, shutting down the server. file={1}, message={0}
       2: areturn

  public final void errorStoppingServer(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #136                // Method errorStoppingServer$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorStoppingServer$str();
    Code:
       0: ldc           #137                // String AMQ222011: Error stopping server
       2: areturn

  public final void backupActivationProblem();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #138                // Method backupActivationProblem$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String backupActivationProblem$str();
    Code:
       0: ldc           #139                // String AMQ222012: Timed out waiting for backup activation to exit
       2: areturn

  public final void errorStartingReplication(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #140                // Method errorStartingReplication0$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorStartingReplication0$str();
    Code:
       0: ldc           #141                // String AMQ222013: Error when trying to start replication
       2: areturn

  public final void errorStoppingReplication(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #142                // Method errorStoppingReplication$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorStoppingReplication$str();
    Code:
       0: ldc           #143                // String AMQ222014: Error when trying to stop replication
       2: areturn

  public final void connectorWithNoName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #144                // Method connectorWithNoName$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String connectorWithNoName$str();
    Code:
       0: ldc           #145                // String AMQ222016: Cannot deploy a connector with no name specified.
       2: areturn

  public final void connectorAlreadyDeployed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #146                // Method connectorAlreadyDeployed$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String connectorAlreadyDeployed$str();
    Code:
       0: ldc           #147                // String AMQ222017: There is already a connector with name {0} deployed. This one will not be deployed.
       2: areturn

  public final void AIONotFound();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #148                // Method AIONotFound$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String AIONotFound$str();
    Code:
       0: ldc           #149                // String AMQ222018: AIO was not located on this platform, it will fall back to using pure Java NIO. If your platform is Linux, install LibAIO to enable the AIO journal
       2: areturn

  public final void discoveryGroupAlreadyDeployed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #150                // Method discoveryGroupAlreadyDeployed$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String discoveryGroupAlreadyDeployed$str();
    Code:
       0: ldc           #151                // String AMQ222019: There is already a discovery group with name {0} deployed. This one will not be deployed.
       2: areturn

  public final void errorScanningURLs(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #152                // Method errorScanningURLs$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorScanningURLs$str();
    Code:
       0: ldc           #153                // String AMQ222020: error scanning for URL\'\'s
       2: areturn

  public final void problemUndeployingNode(java.lang.Exception, org.w3c.dom.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #154                // Method problemUndeployingNode$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String problemUndeployingNode$str();
    Code:
       0: ldc           #155                // String AMQ222021: problem undeploying {0}
       2: areturn

  public final void timedOutStoppingPagingCursor(org.apache.activemq.artemis.utils.FutureLatch, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #156                // Method timedOutStoppingPagingCursor$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String timedOutStoppingPagingCursor$str();
    Code:
       0: ldc           #157                // String AMQ222022: Timed out waiting for paging cursor to stop {0} {1}
       2: areturn

  public final void problemCleaningPageAddress(java.lang.Exception, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #158                // Method problemCleaningPageAddress$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String problemCleaningPageAddress$str();
    Code:
       0: ldc           #159                // String AMQ222023: problem cleaning page address {0}
       2: areturn

  public final void problemCompletingOperations(org.apache.activemq.artemis.core.persistence.OperationContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #160                // Method problemCompletingOperations$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String problemCompletingOperations$str();
    Code:
       0: ldc           #161                // String AMQ222024: Could not complete operations on IO context {0}
       2: areturn

  public final void problemCleaningPagesubscriptionCounter(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #162                // Method problemCleaningPagesubscriptionCounter$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String problemCleaningPagesubscriptionCounter$str();
    Code:
       0: ldc           #163                // String AMQ222025: Problem cleaning page subscription counter
       2: areturn

  public final void problemCleaningCursorPages(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #164                // Method problemCleaningCursorPages$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String problemCleaningCursorPages$str();
    Code:
       0: ldc           #165                // String AMQ222026: Error on cleaning up cursor pages
       2: areturn

  public final void timedOutFlushingExecutorsPagingCursor(org.apache.activemq.artemis.core.paging.cursor.PageSubscription);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #166                // Method timedOutFlushingExecutorsPagingCursor$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String timedOutFlushingExecutorsPagingCursor$str();
    Code:
       0: ldc           #167                // String AMQ222027: Timed out flushing executors for paging cursor to stop {0}
       2: areturn

  public final void pageNotFound(org.apache.activemq.artemis.core.paging.cursor.PagePosition);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #168                // Method pageNotFound$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String pageNotFound$str();
    Code:
       0: ldc           #169                // String AMQ222028: Could not find page cache for page {0} removing it from the journal
       2: areturn

  public final void pageSubscriptionCouldntLoad(long, org.apache.activemq.artemis.core.paging.cursor.PagePosition, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #170                // Method pageSubscriptionCouldntLoad$str:()Ljava/lang/String;
      15: iconst_4
      16: anewarray     #22                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: lload_1
      22: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_3
      29: aastore
      30: dup
      31: iconst_2
      32: aload         4
      34: aastore
      35: dup
      36: iconst_3
      37: aload         5
      39: aastore
      40: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      43: return

  protected java.lang.String pageSubscriptionCouldntLoad$str();
    Code:
       0: ldc           #171                // String AMQ222029: Could not locate page transaction {0}, ignoring message on position {1} on address={2} queue={3}
       2: areturn

  public final void pageInvalid(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #172                // Method pageInvalid$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String pageInvalid$str();
    Code:
       0: ldc           #173                // String AMQ222030: File {0} being renamed to {1}.invalidPage as it was loaded partially. Please verify your data.
       2: areturn

  public final void pageDeleteError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #174                // Method pageDeleteError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String pageDeleteError$str();
    Code:
       0: ldc           #175                // String AMQ222031: Error while deleting page file
       2: areturn

  public final void pageFinaliseError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #176                // Method pageFinaliseError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String pageFinaliseError$str();
    Code:
       0: ldc           #177                // String AMQ222032: page finalise error
       2: areturn

  public final void pageSuspectFile(java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #178                // Method pageSuspectFile$str:()Ljava/lang/String;
      15: aload_1
      16: iload_2
      17: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: iload_3
      21: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  protected java.lang.String pageSuspectFile$str();
    Code:
       0: ldc           #180                // String AMQ222033: Page file {0} had incomplete records at position {1} at record number {2}
       2: areturn

  public final void pageTxDeleteError(java.lang.Exception, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #181                // Method pageTxDeleteError$str:()Ljava/lang/String;
      15: lload_2
      16: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  protected java.lang.String pageTxDeleteError$str();
    Code:
       0: ldc           #182                // String AMQ222034: Can not delete page transaction id={0}
       2: areturn

  public final void pageStoreFactoryNoIdFile(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #183                // Method pageStoreFactoryNoIdFile$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String pageStoreFactoryNoIdFile$str();
    Code:
       0: ldc           #184                // String AMQ222035: Directory {0} did not have an identification file {1}
       2: areturn

  public final void pageStoreTimeout(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #185                // Method pageStoreTimeout$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String pageStoreTimeout$str();
    Code:
       0: ldc           #186                // String AMQ222036: Timed out on waiting PagingStore {0} to shutdown
       2: areturn

  public final void pageStoreStartIOError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #187                // Method pageStoreStartIOError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String pageStoreStartIOError$str();
    Code:
       0: ldc           #188                // String AMQ222037: IO Error, impossible to start paging
       2: areturn

  public final void pageStoreStart(org.apache.activemq.artemis.api.core.SimpleString, long, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #189                // Method pageStoreStart$str:()Ljava/lang/String;
      15: aload_1
      16: lload_2
      17: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: lload         4
      22: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      28: return

  protected java.lang.String pageStoreStart$str();
    Code:
       0: ldc           #190                // String AMQ222038: Starting paging on address \'\'{0}\'\'; size is currently: {1} bytes; max-size-bytes: {2}
       2: areturn

  public final void pageStoreDropMessages(org.apache.activemq.artemis.api.core.SimpleString, long, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #191                // Method pageStoreDropMessages$str:()Ljava/lang/String;
      15: aload_1
      16: lload_2
      17: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: lload         4
      22: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      28: return

  protected java.lang.String pageStoreDropMessages$str();
    Code:
       0: ldc           #192                // String AMQ222039: Messages sent to address \'\'{0}\'\' are being dropped; size is currently: {1} bytes; max-size-bytes: {2}
       2: areturn

  public final void serverIsStopped();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #193                // Method serverIsStopped$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String serverIsStopped$str();
    Code:
       0: ldc           #194                // String AMQ222040: Server is stopped
       2: areturn

  public final void journalCannotFindQueueDelCount(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #195                // Method journalCannotFindQueueDelCount$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalCannotFindQueueDelCount$str();
    Code:
       0: ldc           #196                // String AMQ222041: Cannot find queue {0} to update delivery count
       2: areturn

  public final void journalCannotFindMessageDelCount(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #197                // Method journalCannotFindMessageDelCount$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalCannotFindMessageDelCount$str();
    Code:
       0: ldc           #198                // String AMQ222042: Cannot find message {0} to update delivery count
       2: areturn

  public final void journalCannotFindQueueForMessage(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #199                // Method journalCannotFindQueueForMessage$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalCannotFindQueueForMessage$str();
    Code:
       0: ldc           #200                // String AMQ222043: Message for queue {0} which does not exist. This message will be ignored.
       2: areturn

  public final void journalErrorDeletingMessage(java.lang.Exception, java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #201                // Method journalErrorDeletingMessage$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalErrorDeletingMessage$str();
    Code:
       0: ldc           #202                // String AMQ222044: It was not possible to delete message {0}
       2: areturn

  public final void journalMessageInPreparedTX(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #203                // Method journalMessageInPreparedTX$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalMessageInPreparedTX$str();
    Code:
       0: ldc           #204                // String AMQ222045: Message in prepared tx for queue {0} which does not exist. This message will be ignored.
       2: areturn

  public final void journalErrorRemovingRef(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #205                // Method journalErrorRemovingRef$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalErrorRemovingRef$str();
    Code:
       0: ldc           #206                // String AMQ222046: Failed to remove reference for {0}
       2: areturn

  public final void journalCannotFindQueueReloadingACK(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #207                // Method journalCannotFindQueueReloadingACK$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalCannotFindQueueReloadingACK$str();
    Code:
       0: ldc           #208                // String AMQ222047: Can not find queue {0} while reloading ACKNOWLEDGE_CURSOR
       2: areturn

  public final void journalPAGEOnPrepared();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #209                // Method journalPAGEOnPrepared$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String journalPAGEOnPrepared$str();
    Code:
       0: ldc           #210                // String AMQ222048: PAGE_CURSOR_COUNTER_VALUE record used on a prepared statement, invalid state
       2: areturn

  public final void journalInvalidRecordType(java.lang.Byte);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #211                // Method journalInvalidRecordType$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalInvalidRecordType$str();
    Code:
       0: ldc           #212                // String AMQ222049: InternalError: Record type {0} not recognized. Maybe you are using journal files created on a different version
       2: areturn

  public final void journalInvalidRecordTypeOnPreparedTX(java.lang.Byte);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #213                // Method journalInvalidRecordTypeOnPreparedTX$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalInvalidRecordTypeOnPreparedTX$str();
    Code:
       0: ldc           #214                // String AMQ222050: Can not locate recordType={0} on loadPreparedTransaction//deleteRecords
       2: areturn

  public final void journalError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #215                // Method journalError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String journalError$str();
    Code:
       0: ldc           #216                // String AMQ222051: Journal Error
       2: areturn

  public final void errorIncrementDelayDeletionCount(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #217                // Method errorIncrementDelayDeletionCount$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorIncrementDelayDeletionCount$str();
    Code:
       0: ldc           #218                // String AMQ222052: error incrementing delay detection
       2: areturn

  public final void lareMessageErrorCopying(java.lang.Exception, org.apache.activemq.artemis.core.server.LargeServerMessage);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #219                // Method lareMessageErrorCopying$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String lareMessageErrorCopying$str();
    Code:
       0: ldc           #220                // String AMQ222053: Error on copying large message {0} for DLA or Expiry
       2: areturn

  public final void errorExecutingAIOCallback(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #221                // Method errorExecutingAIOCallback$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorExecutingAIOCallback$str();
    Code:
       0: ldc           #222                // String AMQ222054: Error on executing IOCallback
       2: areturn

  public final void errorDeletingDuplicateCache(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #223                // Method errorDeletingDuplicateCache$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorDeletingDuplicateCache$str();
    Code:
       0: ldc           #224                // String AMQ222055: Error on deleting duplicate cache
       2: areturn

  public final void noDLA(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #225                // Method noDLA$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String noDLA$str();
    Code:
       0: ldc           #226                // String AMQ222056: Did not route to any bindings for address {0} and sendToDLAOnNoRoute is true but there is no DLA configured for the address, the message will be ignored.
       2: areturn

  public final void ioErrorAddingReferences(java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #227                // Method ioErrorAddingReferences$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String ioErrorAddingReferences$str();
    Code:
       0: ldc           #228                // String AMQ222057: It was not possible to add references due to an IO error code {0} message = {1}
       2: areturn

  public final void duplicateMessageDetectedThruBridge(org.apache.activemq.artemis.core.server.ServerMessage);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #229                // Method duplicateMessageDetectedThruBridge$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String duplicateMessageDetectedThruBridge$str();
    Code:
       0: ldc           #230                // String AMQ222058: Duplicate message detected through the bridge - message will not be routed. Message information:\n{0}
       2: areturn

  public final void duplicateMessageDetected(org.apache.activemq.artemis.core.server.ServerMessage);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #231                // Method duplicateMessageDetected$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String duplicateMessageDetected$str();
    Code:
       0: ldc           #232                // String AMQ222059: Duplicate message detected - message will not be routed. Message information:\n{0}
       2: areturn

  public final void journalErrorConfirmingLargeMessage(java.lang.Throwable, java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #233                // Method journalErrorConfirmingLargeMessage$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalErrorConfirmingLargeMessage$str();
    Code:
       0: ldc           #234                // String AMQ222060: Error while confirming large message completion on rollback for recordID={0}
       2: areturn

  public final void clientConnectionFailed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #235                // Method clientConnectionFailed$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String clientConnectionFailed$str();
    Code:
       0: ldc           #236                // String AMQ222061: Client connection failed, clearing up resources for session {0}
       2: areturn

  public final void clearingUpSession(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #237                // Method clearingUpSession$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String clearingUpSession$str();
    Code:
       0: ldc           #238                // String AMQ222062: Cleared up resources for session {0}
       2: areturn

  public final void errorProcessingIOCallback(java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #239                // Method errorProcessingIOCallback$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String errorProcessingIOCallback$str();
    Code:
       0: ldc           #240                // String AMQ222063: Error processing IOCallback code = {0} message = {1}
       2: areturn

  public final void incompatibleVersionAfterConnect(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #241                // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #242                // Method incompatibleVersionAfterConnect$str:()Ljava/lang/String;
      15: iload_1
      16: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: iload_2
      20: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      26: return

  protected java.lang.String incompatibleVersionAfterConnect$str();
    Code:
       0: ldc           #243                // String AMQ222065: Client is not being consistent on the request versioning. It just sent a version id={0} while it informed {1} previously
       2: areturn

  public final void reattachRequestFailed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #244                // Method reattachRequestFailed$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String reattachRequestFailed$str();
    Code:
       0: ldc           #245                // String AMQ222066: Reattach request from {0} failed as there is no confirmationWindowSize configured, which may be ok for your system
       2: areturn

  public final void connectionFailureDetected(java.lang.String, org.apache.activemq.artemis.api.core.ActiveMQExceptionType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #246                // Method connectionFailureDetected$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String connectionFailureDetected$str();
    Code:
       0: ldc           #247                // String AMQ222067: Connection failure has been detected: {0} [code={1}]
       2: areturn

  public final void errorCleaningStompConn(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #248                // Method errorCleaningStompConn$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorCleaningStompConn$str();
    Code:
       0: ldc           #249                // String AMQ222069: error cleaning up stomp connection
       2: areturn

  public final void stompTXAckNorSupported();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #250                // Method stompTXAckNorSupported$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String stompTXAckNorSupported$str();
    Code:
       0: ldc           #251                // String AMQ222070: Stomp Transactional acknowledgement is not supported
       2: areturn

  public final void errorOnStompHeartBeat(java.lang.InterruptedException);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #252                // Method errorOnStompHeartBeat$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorOnStompHeartBeat$str();
    Code:
       0: ldc           #253                // String AMQ222071: Interrupted while waiting for stomp heart beate to die
       2: areturn

  public final void timedOutFlushingInvmChannel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #254                // Method timedOutFlushingInvmChannel$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String timedOutFlushingInvmChannel$str();
    Code:
       0: ldc           #255                // String AMQ222072: Timed out flushing channel on InVMConnection
       2: areturn

  public final void nettyChannelGroupError();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #256                // Method nettyChannelGroupError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String nettyChannelGroupError$str();
    Code:
       0: ldc_w         #257                // String AMQ212074: channel group did not completely close
       3: areturn

  public final void nettyChannelStillOpen(io.netty.channel.Channel, java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #258                // Method nettyChannelStillOpen$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String nettyChannelStillOpen$str();
    Code:
       0: ldc_w         #259                // String AMQ222075: {0} is still connected to {1}
       3: areturn

  public final void nettyChannelGroupBindError();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #260                // Method nettyChannelGroupBindError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String nettyChannelGroupBindError$str();
    Code:
       0: ldc_w         #261                // String AMQ222076: channel group did not completely unbind
       3: areturn

  public final void nettyChannelStillBound(io.netty.channel.Channel, java.net.SocketAddress);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #262                // Method nettyChannelStillBound$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String nettyChannelStillBound$str();
    Code:
       0: ldc_w         #263                // String AMQ222077: {0} is still bound to {1}
       3: areturn

  public final void errorCreatingRemotingInterceptor(java.lang.Exception, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #264                // Method errorCreatingRemotingInterceptor$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorCreatingRemotingInterceptor$str();
    Code:
       0: ldc_w         #265                // String AMQ222078: Error instantiating remoting interceptor {0}
       3: areturn

  public final void invalidAcceptorKeys(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #266                // Method invalidAcceptorKeys$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String invalidAcceptorKeys$str();
    Code:
       0: ldc_w         #267                // String AMQ222079: The following keys are invalid for configuring the acceptor: {0} the acceptor will not be started.
       3: areturn

  public final void errorCreatingAcceptor(java.lang.Exception, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #268                // Method errorCreatingAcceptor$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorCreatingAcceptor$str();
    Code:
       0: ldc_w         #269                // String AMQ222080: Error instantiating remoting acceptor {0}
       3: areturn

  public final void timeoutRemotingThreadPool();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #270                // Method timeoutRemotingThreadPool$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String timeoutRemotingThreadPool$str();
    Code:
       0: ldc_w         #271                // String AMQ222081: Timed out waiting for remoting thread pool to terminate
       3: areturn

  public final void errorOnFailureCheck(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #272                // Method errorOnFailureCheck$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorOnFailureCheck$str();
    Code:
       0: ldc_w         #273                // String AMQ222082: error on connection failure check
       3: areturn

  public final void connectorKeysInvalid(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #274                // Method connectorKeysInvalid$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String connectorKeysInvalid$str();
    Code:
       0: ldc_w         #275                // String AMQ222083: The following keys are invalid for configuring the connector service: {0} the connector will not be started.
       3: areturn

  public final void connectorKeysMissing(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #276                // Method connectorKeysMissing$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String connectorKeysMissing$str();
    Code:
       0: ldc_w         #277                // String AMQ222084: The following keys are required for configuring the connector service: {0} the connector will not be started.
       3: areturn

  public final void invalidPacketForReplication(org.apache.activemq.artemis.core.protocol.core.Packet);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #278                // Method invalidPacketForReplication$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String invalidPacketForReplication$str();
    Code:
       0: ldc_w         #279                // String AMQ222085: Packet {0} can not be processed by the ReplicationEndpoint
       3: areturn

  public final void errorHandlingReplicationPacket(java.lang.Exception, org.apache.activemq.artemis.core.protocol.core.Packet);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #280                // Method errorHandlingReplicationPacket$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorHandlingReplicationPacket$str();
    Code:
       0: ldc_w         #281                // String AMQ222086: error handling packet {0} for replication
       3: areturn

  public final void errorClosingPageOnReplication(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #282                // Method errorClosingPageOnReplication$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorClosingPageOnReplication$str();
    Code:
       0: ldc_w         #283                // String AMQ222087: Replication Error while closing the page on backup
       3: areturn

  public final void journalcomparisonMismatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #284                // Method journalcomparisonMismatch$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String journalcomparisonMismatch$str();
    Code:
       0: ldc_w         #285                // String AMQ222088: Journal comparison mismatch:\n{0}
       3: areturn

  public final void errorDeletingLargeMessage(java.lang.Exception, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #286                // Method errorDeletingLargeMessage$str:()Ljava/lang/String;
      15: lload_2
      16: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorDeletingLargeMessage$str();
    Code:
       0: ldc_w         #287                // String AMQ222089: Replication Error deleting large message ID = {0}
       3: areturn

  public final void largeMessageNotAvailable(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #288                // Method largeMessageNotAvailable$str:()Ljava/lang/String;
      15: lload_1
      16: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  protected java.lang.String largeMessageNotAvailable$str();
    Code:
       0: ldc_w         #289                // String AMQ222090: Replication Large MessageID {0}  is not available on backup server. Ignoring replication message
       3: areturn

  public final void replicationStopOnBackupShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #290                // Method replicationStopOnBackupShutdown$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String replicationStopOnBackupShutdown$str();
    Code:
       0: ldc_w         #291                // String AMQ222091: The backup node has been shut-down, replication will now stop
       3: areturn

  public final void replicationStopOnBackupFail(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #292                // Method replicationStopOnBackupFail$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String replicationStopOnBackupFail$str();
    Code:
       0: ldc_w         #293                // String AMQ222092: Connection to the backup node failed, removing replication now
       3: areturn

  public final void timedOutWaitingToStopBridge();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #294                // Method timedOutWaitingToStopBridge$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String timedOutWaitingToStopBridge$str();
    Code:
       0: ldc_w         #295                // String AMQ222093: Timed out waiting to stop Bridge
       3: areturn

  public final void bridgeUnableToSendMessage(java.lang.Exception, org.apache.activemq.artemis.core.server.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #296                // Method bridgeUnableToSendMessage$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeUnableToSendMessage$str();
    Code:
       0: ldc_w         #297                // String AMQ222094: Bridge unable to send message {0}, will try again once bridge reconnects
       3: areturn

  public final void bridgeConnectionFailed(java.lang.Boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #298                // Method bridgeConnectionFailed$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeConnectionFailed$str();
    Code:
       0: ldc_w         #299                // String AMQ222095: Connection failed with failedOver={0}
       3: areturn

  public final void errorQueryingBridge(java.lang.Throwable, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #300                // Method errorQueryingBridge1$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorQueryingBridge1$str();
    Code:
       0: ldc_w         #301                // String AMQ222096: Error on querying binding on bridge {0}. Retrying in 100 milliseconds
       3: areturn

  public final void errorQueryingBridge(org.apache.activemq.artemis.api.core.SimpleString, java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #302                // Method errorQueryingBridge2$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String errorQueryingBridge2$str();
    Code:
       0: ldc_w         #303                // String AMQ222097: Address {0} does not have any bindings, retry #({1})
       3: areturn

  public final void errorStartingBridge(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #304                // Method errorStartingBridge$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorStartingBridge$str();
    Code:
       0: ldc_w         #305                // String AMQ222098: Server is starting, retry to create the session for bridge {0}
       3: areturn

  public final void errorConnectingBridge(java.lang.Exception, org.apache.activemq.artemis.core.server.cluster.Bridge);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #306                // Method errorConnectingBridge$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorConnectingBridge$str();
    Code:
       0: ldc_w         #307                // String AMQ222099: Bridge {0} is unable to connect to destination. It will be disabled.
       3: areturn

  public final void bridgeLocatorShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #308                // Method bridgeLocatorShutdown$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String bridgeLocatorShutdown$str();
    Code:
       0: ldc_w         #309                // String AMQ222100: ServerLocator was shutdown, can not retry on opening connection for bridge
       3: areturn

  public final void bridgeAbortStart(org.apache.activemq.artemis.api.core.SimpleString, java.lang.Integer, java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #310                // Method bridgeAbortStart$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String bridgeAbortStart$str();
    Code:
       0: ldc_w         #311                // String AMQ222101: Bridge {0} achieved {1} maxattempts={2} it will stop retrying to reconnect
       3: areturn

  public final void errorReConnecting(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #312                // Method errorReConnecting$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorReConnecting$str();
    Code:
       0: ldc_w         #313                // String AMQ222102: Unexpected exception while trying to reconnect
       3: areturn

  public final void timedOutXID(javax.transaction.xa.Xid);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #314                // Method timedOutXID$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String timedOutXID$str();
    Code:
       0: ldc_w         #315                // String AMQ222103: transaction with xid {0} timed out
       3: areturn

  public final void ioErrorOnTX(java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #316                // Method ioErrorOnTX$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String ioErrorOnTX$str();
    Code:
       0: ldc_w         #317                // String AMQ222104: IO Error completing the transaction, code = {0}, message = {1}
       3: areturn

  public final void errorCompletingContext(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #318                // Method errorCompletingContext$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorCompletingContext$str();
    Code:
       0: ldc_w         #319                // String AMQ222105: Could not finish context execution in 10 seconds
       3: areturn

  public final void replacingIncompleteLargeMessage(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #320                // Method replacingIncompleteLargeMessage$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String replacingIncompleteLargeMessage$str();
    Code:
       0: ldc_w         #321                // String AMQ222106: Replacing incomplete LargeMessage with ID={0}
       3: areturn

  public final void clientConnectionFailedClearingSession(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #322                // Method clientConnectionFailedClearingSession$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String clientConnectionFailedClearingSession$str();
    Code:
       0: ldc_w         #323                // String AMQ222107: Cleared up resources for session {0}
       3: areturn

  public final void broadcastGroupClosed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #324                // Method broadcastGroupClosed$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String broadcastGroupClosed$str();
    Code:
       0: ldc_w         #325                // String AMQ222108: unable to send notification when broadcast group is stopped
       3: areturn

  public final void nodeNotAvailable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #326                // Method nodeNotAvailable$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String nodeNotAvailable$str();
    Code:
       0: ldc_w         #327                // String AMQ222109: NodeID={0} is not available on the topology. Retrying the connection to that node now
       3: areturn

  public final void noQueueIdDefined(org.apache.activemq.artemis.core.server.ServerMessage, org.apache.activemq.artemis.core.server.ServerMessage, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #328                // Method noQueueIdDefined$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String noQueueIdDefined$str();
    Code:
       0: ldc_w         #329                // String AMQ222110: no queue IDs defined!,  originalMessage  = {0}, copiedMessage = {1}, props={2}
       3: areturn

  public final void managementOperationError(java.lang.Exception, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #330                // Method managementOperationError$str:()Ljava/lang/String;
      15: aload_2
      16: aload_3
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String managementOperationError$str();
    Code:
       0: ldc_w         #331                // String AMQ222111: exception while invoking {0} on {1}
       3: areturn

  public final void managementAttributeError(java.lang.Exception, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #332                // Method managementAttributeError$str:()Ljava/lang/String;
      15: aload_2
      16: aload_3
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String managementAttributeError$str();
    Code:
       0: ldc_w         #333                // String AMQ222112: exception while retrieving attribute {0} on {1}
       3: areturn

  public final void managementStopError(java.lang.Integer, java.util.List);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #334                // Method managementStopError$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String managementStopError$str();
    Code:
       0: ldc_w         #335                // String AMQ222113: On ManagementService stop, there are {0} unexpected registered MBeans: {1}
       3: areturn

  public final void unableToDeleteGroupBindings(java.lang.Exception, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #336                // Method unableToDeleteGroupBindings$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String unableToDeleteGroupBindings$str();
    Code:
       0: ldc_w         #337                // String AMQ222114: Unable to delete group binding info {0}
       3: areturn

  public final void errorClosingServerLocator(java.lang.Exception, org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #338                // Method errorClosingServerLocator$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorClosingServerLocator$str();
    Code:
       0: ldc_w         #339                // String AMQ222115: Error closing serverLocator={0}
       3: areturn

  public final void unableToStartBroadcastGroup(java.lang.Exception, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #340                // Method unableToStartBroadcastGroup$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String unableToStartBroadcastGroup$str();
    Code:
       0: ldc_w         #341                // String AMQ222116: unable to start broadcast group {0}
       3: areturn

  public final void unableToStartClusterConnection(java.lang.Exception, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #342                // Method unableToStartClusterConnection$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String unableToStartClusterConnection$str();
    Code:
       0: ldc_w         #343                // String AMQ222117: unable to start cluster connection {0}
       3: areturn

  public final void unableToStartBridge(java.lang.Exception, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #344                // Method unableToStartBridge$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String unableToStartBridge$str();
    Code:
       0: ldc_w         #345                // String AMQ222118: unable to start Bridge {0}
       3: areturn

  public final void announceBackupNoConnector(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #346                // Method announceBackupNoConnector$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String announceBackupNoConnector$str();
    Code:
       0: ldc_w         #347                // String AMQ222119: No connector with name {0}. backup cannot be announced.
       3: areturn

  public final void announceBackupNoClusterConnections();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #348                // Method announceBackupNoClusterConnections$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String announceBackupNoClusterConnections$str();
    Code:
       0: ldc_w         #349                // String AMQ222120: no cluster connections defined, unable to announce backup
       3: areturn

  public final void bridgeNotUnique();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #350                // Method bridgeNotUnique$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String bridgeNotUnique$str();
    Code:
       0: ldc_w         #351                // String AMQ222121: Must specify a unique name for each bridge. This one will not be deployed.
       3: areturn

  public final void bridgeNoQueue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #352                // Method bridgeNoQueue$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeNoQueue$str();
    Code:
       0: ldc_w         #353                // String AMQ222122: Must specify a queue name for each bridge. This one {0} will not be deployed.
       3: areturn

  public final void bridgeNoForwardAddress(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #354                // Method bridgeNoForwardAddress$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeNoForwardAddress$str();
    Code:
       0: ldc_w         #355                // String AMQ222123: Forward address is not specified on bridge {0}. Will use original message address instead
       3: areturn

  public final void bridgeAlreadyDeployed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #356                // Method bridgeAlreadyDeployed$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeAlreadyDeployed$str();
    Code:
       0: ldc_w         #357                // String AMQ222124: There is already a bridge with name {0} deployed. This one will not be deployed.
       3: areturn

  public final void bridgeQueueNotFound(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #358                // Method bridgeQueueNotFound$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String bridgeQueueNotFound$str();
    Code:
       0: ldc_w         #359                // String AMQ222125: No queue found with name {0} bridge {1} will not be deployed.
       3: areturn

  public final void bridgeNoDiscoveryGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #360                // Method bridgeNoDiscoveryGroup$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeNoDiscoveryGroup$str();
    Code:
       0: ldc_w         #361                // String AMQ222126: No discovery group found with name {0} bridge will not be deployed.
       3: areturn

  public final void clusterConnectionNotUnique();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #362                // Method clusterConnectionNotUnique$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String clusterConnectionNotUnique$str();
    Code:
       0: ldc_w         #363                // String AMQ222127: Must specify a unique name for each cluster connection. This one will not be deployed.
       3: areturn

  public final void clusterConnectionNoForwardAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #364                // Method clusterConnectionNoForwardAddress$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String clusterConnectionNoForwardAddress$str();
    Code:
       0: ldc_w         #365                // String AMQ222128: Must specify an address for each cluster connection. This one will not be deployed.
       3: areturn

  public final void clusterConnectionNoConnector(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #366                // Method clusterConnectionNoConnector$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String clusterConnectionNoConnector$str();
    Code:
       0: ldc_w         #367                // String AMQ222129: No connector with name {0}. The cluster connection will not be deployed.
       3: areturn

  public final void clusterConnectionAlreadyExists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #368                // Method clusterConnectionAlreadyExists$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String clusterConnectionAlreadyExists$str();
    Code:
       0: ldc_w         #369                // String AMQ222130: Cluster Configuration  {0} already exists. The cluster connection will not be deployed.
       3: areturn

  public final void clusterConnectionNoDiscoveryGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #370                // Method clusterConnectionNoDiscoveryGroup$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String clusterConnectionNoDiscoveryGroup$str();
    Code:
       0: ldc_w         #371                // String AMQ222131: No discovery group with name {0}. The cluster connection will not be deployed.
       3: areturn

  public final void broadcastGroupAlreadyExists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #372                // Method broadcastGroupAlreadyExists$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String broadcastGroupAlreadyExists$str();
    Code:
       0: ldc_w         #373                // String AMQ222132: There is already a broadcast-group with name {0} deployed. This one will not be deployed.
       3: areturn

  public final void broadcastGroupNoConnector(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #374                // Method broadcastGroupNoConnector$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String broadcastGroupNoConnector$str();
    Code:
       0: ldc_w         #375                // String AMQ222133: There is no connector deployed with name {0}. The broadcast group with name {1} will not be deployed.
       3: areturn

  public final void bridgeNoConnector(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #376                // Method bridgeNoConnector$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeNoConnector$str();
    Code:
       0: ldc_w         #377                // String AMQ222134: No connector defined with name {0}. The bridge will not be deployed.
       3: areturn

  public final void errorStoppingRedistributor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #378                // Method errorStoppingRedistributor$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorStoppingRedistributor$str();
    Code:
       0: ldc_w         #379                // String AMQ222135: Stopping Redistributor, Timed out waiting for tasks to complete
       3: areturn

  public final void ioErrorRedistributing(java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #380                // Method ioErrorRedistributing$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String ioErrorRedistributing$str();
    Code:
       0: ldc_w         #381                // String AMQ222136: IO Error during redistribution, errorCode = {0} message = {1}
       3: areturn

  public final void errorAnnouncingBackup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #382                // Method errorAnnouncingBackup$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorAnnouncingBackup$str();
    Code:
       0: ldc_w         #383                // String AMQ222137: Unable to announce backup, retrying
       3: areturn

  public final void noLocalMemborOnClusterConnection(org.apache.activemq.artemis.core.server.cluster.impl.ClusterConnectionImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #384                // Method noLocalMemborOnClusterConnection$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String noLocalMemborOnClusterConnection$str();
    Code:
       0: ldc_w         #385                // String AMQ222138: Local Member is not set at on ClusterConnection {0}
       3: areturn

  public final void remoteQueueAlreadyBoundOnClusterConnection(java.lang.Object, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #386                // Method remoteQueueAlreadyBoundOnClusterConnection$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String remoteQueueAlreadyBoundOnClusterConnection$str();
    Code:
       0: ldc_w         #387                // String AMQ222139: {0}::Remote queue binding {1} has already been bound in the post office. Most likely cause for this is you have a loop in your cluster due to cluster max-hops being too large or you have multiple cluster connections to the same nodes using overlapping addresses
       3: areturn

  public final void nodeManagerCantOpenFile(java.lang.Exception, java.io.File);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #388                // Method nodeManagerCantOpenFile$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String nodeManagerCantOpenFile$str();
    Code:
       0: ldc_w         #389                // String AMQ222141: Node Manager can not open file {0}
       3: areturn

  public final void errorResttingLargeMessage(java.lang.Throwable, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #390                // Method errorResttingLargeMessage$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorResttingLargeMessage$str();
    Code:
       0: ldc_w         #391                // String AMQ222142: Error on resetting large message deliver - {0}
       3: areturn

  public final void errorTransferringConsumer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #392                // Method errorTransferringConsumer$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorTransferringConsumer$str();
    Code:
       0: ldc_w         #393                // String AMQ222143: Timed out waiting for executor to complete
       3: areturn

  public final void errorFlushingExecutorsOnQueue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #394                // Method errorFlushingExecutorsOnQueue$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorFlushingExecutorsOnQueue$str();
    Code:
       0: ldc_w         #395                // String AMQ222144: Queue could not finish waiting executors. Try increasing the thread pool size
       3: areturn

  public final void errorExpiringReferencesOnQueue(java.lang.Exception, org.apache.activemq.artemis.core.server.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #396                // Method errorExpiringReferencesOnQueue$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorExpiringReferencesOnQueue$str();
    Code:
       0: ldc_w         #397                // String AMQ222145: Error expiring reference {0} 0n queue
       3: areturn

  public final void errorExpiringReferencesNoBindings(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #398                // Method errorExpiringReferencesNoBindings$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorExpiringReferencesNoBindings$str();
    Code:
       0: ldc_w         #399                // String AMQ222146: Message has expired. No bindings for Expiry Address {0} so dropping it
       3: areturn

  public final void errorExpiringReferencesNoQueue(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #400                // Method errorExpiringReferencesNoQueue$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorExpiringReferencesNoQueue$str();
    Code:
       0: ldc_w         #401                // String AMQ222147: Message has expired. No expiry queue configured for queue {0} so dropping it
       3: areturn

  public final void messageExceededMaxDelivery(org.apache.activemq.artemis.core.server.MessageReference, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #402                // Method messageExceededMaxDelivery$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String messageExceededMaxDelivery$str();
    Code:
       0: ldc_w         #403                // String AMQ222148: Message {0} has exceeded max delivery attempts. No bindings for Dead Letter Address {1} so dropping it
       3: areturn

  public final void messageExceededMaxDeliverySendtoDLA(org.apache.activemq.artemis.core.server.MessageReference, org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #404                // Method messageExceededMaxDeliverySendtoDLA$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String messageExceededMaxDeliverySendtoDLA$str();
    Code:
       0: ldc_w         #405                // String AMQ222149: Message {0} has reached maximum delivery attempts, sending it to Dead Letter Address {1} from {2}
       3: areturn

  public final void messageExceededMaxDeliveryNoDLA(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #406                // Method messageExceededMaxDeliveryNoDLA$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String messageExceededMaxDeliveryNoDLA$str();
    Code:
       0: ldc_w         #407                // String AMQ222150: Message has exceeded max delivery attempts. No Dead Letter Address configured for queue {0} so dropping it
       3: areturn

  public final void removingBadConsumer(java.lang.Throwable, org.apache.activemq.artemis.core.server.Consumer, org.apache.activemq.artemis.core.server.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #408                // Method removingBadConsumer$str:()Ljava/lang/String;
      15: aload_2
      16: aload_3
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String removingBadConsumer$str();
    Code:
       0: ldc_w         #409                // String AMQ222151: removing consumer which did not handle a message, consumer={0}, message={1}
       3: areturn

  public final void errorDecrementingRefCount(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #410                // Method errorDecrementingRefCount$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorDecrementingRefCount$str();
    Code:
       0: ldc_w         #411                // String AMQ222152: Unable to decrement reference counting on queue
       3: areturn

  public final void errorRemovingMessage(java.lang.Throwable, java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #412                // Method errorRemovingMessage$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorRemovingMessage$str();
    Code:
       0: ldc_w         #413                // String AMQ222153: Unable to remove message id = {0} please remove manually
       3: areturn

  public final void errorCheckingDLQ(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #414                // Method errorCheckingDLQ$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorCheckingDLQ$str();
    Code:
       0: ldc_w         #415                // String AMQ222154: Error checking DLQ
       3: areturn

  public final void errorRegisteringBackup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #416                // Method errorRegisteringBackup$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorRegisteringBackup$str();
    Code:
       0: ldc_w         #417                // String AMQ222155: Failed to register as backup. Stopping the server.
       3: areturn

  public final void memoryError(java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #418                // Method memoryError$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String memoryError$str();
    Code:
       0: ldc_w         #419                // String AMQ222156: Less than {0}%\n{1}\nYou are in danger of running out of RAM. Have you set paging parameters on your addresses? (See user manual \"Paging\" chapter)
       3: areturn

  public final void errorCompletingCallbackOnReplicationManager(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #420                // Method errorCompletingCallbackOnReplicationManager$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorCompletingCallbackOnReplicationManager$str();
    Code:
       0: ldc_w         #421                // String AMQ222157: Error completing callback on replication manager
       3: areturn

  public final void backupActivationDidntFinish(org.apache.activemq.artemis.core.server.ActiveMQServer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #422                // Method backupActivationDidntFinish$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String backupActivationDidntFinish$str();
    Code:
       0: ldc_w         #423                // String AMQ222158: {0} backup activation thread did not finish.
       3: areturn

  public final void broadcastBridgeStoppedError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #424                // Method broadcastBridgeStoppedError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String broadcastBridgeStoppedError$str();
    Code:
       0: ldc_w         #425                // String AMQ222159: unable to send notification when broadcast group is stopped
       3: areturn

  public final void notificationBridgeStoppedError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #426                // Method notificationBridgeStoppedError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String notificationBridgeStoppedError$str();
    Code:
       0: ldc_w         #427                // String AMQ222160: unable to send notification when broadcast group is stopped
       3: areturn

  public final void groupHandlerSendTimeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #428                // Method groupHandlerSendTimeout$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String groupHandlerSendTimeout$str();
    Code:
       0: ldc_w         #429                // String AMQ222161: Group Handler timed-out waiting for sendCondition
       3: areturn

  public final void backupMovingDataAway(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #430                // Method backupMovingDataAway$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String backupMovingDataAway$str();
    Code:
       0: ldc_w         #431                // String AMQ222162: Moving data directory {0} to {1}
       3: areturn

  public final void stopReplicatedBackupAfterFailback();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #432                // Method stopReplicatedBackupAfterFailback$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String stopReplicatedBackupAfterFailback$str();
    Code:
       0: ldc_w         #433                // String AMQ222163: Server is being completely stopped, since this was a replicated backup there may be journal files that need cleaning up. The Apache ActiveMQ Artemis broker will have to be manually restarted.
       3: areturn

  public final void errorStartingReplication(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.BackupReplicationStartFailedMessage$BackupRegistrationProblem);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #434                // Method errorStartingReplication1$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorStartingReplication1$str();
    Code:
       0: ldc_w         #435                // String AMQ222164: Error when trying to start replication {0}
       3: areturn

  public final void groupingQueueRemoved(int, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #436                // Method groupingQueueRemoved$str:()Ljava/lang/String;
      15: iload_1
      16: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: aload_2
      20: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: return

  protected java.lang.String groupingQueueRemoved$str();
    Code:
       0: ldc_w         #437                // String AMQ222167: Group Binding not available so deleting {0} groups from {1}, groups will be bound to another node
       3: areturn

  public final void warnDeprecatedProtocol();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #438                // Method warnDeprecatedProtocol$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String warnDeprecatedProtocol$str();
    Code:
       0: ldc_w         #439                // String AMQ222168: The \'\'protocol\'\' property is deprecated, if you want this Acceptor to support multiple protocols use the \'\'protocols\'\' property, i.e. \'\'CORE,AMQP,STOMP\'\'
       3: areturn

  public final void warnDisconnectOldClient(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #440                // Method warnDisconnectOldClient$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String warnDisconnectOldClient$str();
    Code:
       0: ldc_w         #441                // String AMQ222169: You have old legacy clients connected to the queue {0} and we can\'\'t disconnect them, these clients may just hang
       3: areturn

  public final void bridgeConfirmationWindowTooSmall(java.lang.String, java.lang.String, int, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #442                // Method bridgeConfirmationWindowTooSmall$str:()Ljava/lang/String;
      15: iconst_4
      16: anewarray     #22                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: dup
      24: iconst_1
      25: aload_2
      26: aastore
      27: dup
      28: iconst_2
      29: iload_3
      30: invokestatic  #179                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_3
      36: lload         4
      38: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: aastore
      42: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      45: return

  protected java.lang.String bridgeConfirmationWindowTooSmall$str();
    Code:
       0: ldc_w         #443                // String AMQ222170: Bridge {0} forwarding address {1} has confirmation-window-size ({2}) greater than address\'\' max-size-bytes\'\' ({3})
       3: areturn

  public final void bridgeCantFindAddressConfig(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #444                // Method bridgeCantFindAddressConfig$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String bridgeCantFindAddressConfig$str();
    Code:
       0: ldc_w         #445                // String AMQ222171: Bridge {0} forwarding address {1} could not be resolved on address-settings configuration
       3: areturn

  public final void queueBusy(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #446                // Method queueBusy$str:()Ljava/lang/String;
      15: aload_1
      16: lload_2
      17: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: return

  protected java.lang.String queueBusy$str();
    Code:
       0: ldc_w         #447                // String AMQ222172: Queue {0} was busy for more than {1} milliseconds. There are possibly consumers hanging on a network operation
       3: areturn

  public final void queueDuplicatedRenaming(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #448                // Method queueDuplicatedRenaming$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String queueDuplicatedRenaming$str();
    Code:
       0: ldc_w         #449                // String AMQ222173: Queue {0} is duplicated during reload. This queue will be renamed as {1}
       3: areturn

  public final void timeoutFlushInTransit(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #450                // Method timeoutFlushInTransit$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String timeoutFlushInTransit$str();
    Code:
       0: ldc_w         #451                // String AMQ222174: Queue {0}, on address={1}, is taking too long to flush deliveries. Watch out for frozen clients.
       3: areturn

  public final void bridgeCantFindConnectors(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #452                // Method bridgeCantFindConnectors$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String bridgeCantFindConnectors$str();
    Code:
       0: ldc_w         #453                // String AMQ222175: Bridge {0} could not find configured connectors
       3: areturn

  public final void xidReplacedOnXStart(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #454                // Method xidReplacedOnXStart$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String xidReplacedOnXStart$str();
    Code:
       0: ldc_w         #455                // String AMQ222176: A session that was already doing XA work on {0} is replacing the xid by {1} . This was most likely caused from a previous communication timeout
       3: areturn

  public final void rolePermissionConfigurationError(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #456                // Method rolePermissionConfigurationError$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String rolePermissionConfigurationError$str();
    Code:
       0: ldc_w         #457                // String AMQ222177: Wrong configuration for role, {0} is not a valid permission
       3: areturn

  public final void errorRecoveringPageCounter(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #458                // Method errorRecoveringPageCounter$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorRecoveringPageCounter$str();
    Code:
       0: ldc_w         #459                // String AMQ222178: Error during recovery of page counters
       3: areturn

  public final void failedToScaleDown(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #460                // Method failedToScaleDown$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String failedToScaleDown$str();
    Code:
       0: ldc_w         #461                // String AMQ222181: Unable to scaleDown messages
       3: areturn

  public final void missingClusterConfigForScaleDown(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #462                // Method missingClusterConfigForScaleDown$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String missingClusterConfigForScaleDown$str();
    Code:
       0: ldc_w         #463                // String AMQ222182: Missing cluster-configuration for scale-down-clustername {0}
       3: areturn

  public final void blockingMessageProduction(org.apache.activemq.artemis.api.core.SimpleString, long, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #464                // Method blockingMessageProduction$str:()Ljava/lang/String;
      15: aload_1
      16: lload_2
      17: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: lload         4
      22: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      28: return

  protected java.lang.String blockingMessageProduction$str();
    Code:
       0: ldc_w         #465                // String AMQ222183: Blocking message production on address \'\'{0}\'\'; size is currently: {1} bytes; max-size-bytes: {2}
       3: areturn

  public final void groupBindingsOnRecovery();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #466                // Method groupBindingsOnRecovery$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String groupBindingsOnRecovery$str();
    Code:
       0: ldc_w         #467                // String AMQ222184: Unable to recover group bindings in SCALE_DOWN mode, only FULL backup server can do this
       3: areturn

  public final void noClusterConnectionForReplicationCluster();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #468                // Method noClusterConnectionForReplicationCluster$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String noClusterConnectionForReplicationCluster$str();
    Code:
       0: ldc_w         #469                // String AMQ222185: no cluster connection for specified replication cluster
       3: areturn

  public final void clusterControlAuthfailure();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #470                // Method clusterControlAuthfailure$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String clusterControlAuthfailure$str();
    Code:
       0: ldc_w         #471                // String AMQ222186: unable to authorise cluster control
       3: areturn

  public final void activateReplicatedBackupFailed(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #472                // Method activateReplicatedBackupFailed$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String activateReplicatedBackupFailed$str();
    Code:
       0: ldc_w         #473                // String AMQ222187: Failed to activate replicata
       3: areturn

  public final void unableToFindTargetQueue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #474                // Method unableToFindTargetQueue$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String unableToFindTargetQueue$str();
    Code:
       0: ldc_w         #475                // String AMQ222188: Unable to find target queue for node {0}
       3: areturn

  public final void activateSharedStoreSlaveFailed(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #476                // Method activateSharedStoreSlaveFailed$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String activateSharedStoreSlaveFailed$str();
    Code:
       0: ldc_w         #477                // String AMQ222189: Failed to activate shared store slave
       3: areturn

  public final void disallowedProtocol(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #478                // Method disallowedProtocol$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String disallowedProtocol$str();
    Code:
       0: ldc_w         #479                // String AMQ222190: Disallowing use of vulnerable protocol: {0}. See http://www.oracle.com/technetwork/topics/security/poodlecve-2014-3566-2339408.html for more details.
       3: areturn

  public final void cannotFindRoleForUser(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #480                // Method cannotFindRoleForUser$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String cannotFindRoleForUser$str();
    Code:
       0: ldc_w         #481                // String AMQ222191: Could not find any configured role for user {0}.
       3: areturn

  public final void couldNotDeleteTempFile(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #482                // Method couldNotDeleteTempFile$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String couldNotDeleteTempFile$str();
    Code:
       0: ldc_w         #483                // String AMQ222192: Could not delete: {0}
       3: areturn

  public final void memoryLimitReached(java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #484                // Method memoryLimitReached$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: lload_3
      18: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      24: return

  protected java.lang.String memoryLimitReached$str();
    Code:
       0: ldc_w         #485                // String AMQ222193: Memory Limit reached. Producer ({0}) stopped to prevent flooding {1} (blocking for {2}s). See http://activemq.apache.org/producer-flow-control.html for more info.
       3: areturn

  public final void nullPageCursorInfo(java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #486                // Method nullPageCursorInfo$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: lload_3
      18: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      24: return

  protected java.lang.String nullPageCursorInfo$str();
    Code:
       0: ldc_w         #487                // String AMQ222194: PageCursorInfo == null on address {0}, pos = {1}, queue = {2}.
       3: areturn

  public final void largeMessageNotFound(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #488                // Method largeMessageNotFound$str:()Ljava/lang/String;
      15: lload_1
      16: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  protected java.lang.String largeMessageNotFound$str();
    Code:
       0: ldc_w         #489                // String AMQ222195: Large message {0} wasn\'t found when dealing with add pending large message
       3: areturn

  public final void bindingNotFound(long, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #490                // Method bindingNotFound$str:()Ljava/lang/String;
      15: lload_1
      16: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: aload_3
      20: aload         4
      22: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      25: return

  protected java.lang.String bindingNotFound$str();
    Code:
       0: ldc_w         #491                // String AMQ222196: Could not find binding with id={0} on routeFromCluster for message={1} binding = {2}
       3: areturn

  public final void nonDeliveryHandled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #492                // Method nonDeliveryHandled$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String nonDeliveryHandled$str();
    Code:
       0: ldc_w         #493                // String AMQ222197: Internal error! Delivery logic has identified a non delivery and still handled a consumer!
       3: areturn

  public final void couldNotFlushClusterManager(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #494                // Method couldNotFlushClusterManager$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String couldNotFlushClusterManager$str();
    Code:
       0: ldc_w         #495                // String AMQ222198: Could not flush ClusterManager executor ({0}) in 10 seconds, verify your thread pool size
       3: areturn

  public final void threadDump(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #496                // Method threadDump$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String threadDump$str();
    Code:
       0: ldc_w         #497                // String AMQ222199: Thread dump: {0}
       3: areturn

  public final void couldNotFinishExecutor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #498                // Method couldNotFinishExecutor$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String couldNotFinishExecutor$str();
    Code:
       0: ldc_w         #499                // String AMQ222200: Could not finish executor on {0}
       3: areturn

  public final void backupActivationTimeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #500                // Method backupActivationTimeout$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String backupActivationTimeout$str();
    Code:
       0: ldc_w         #501                // String AMQ222201: Timed out waiting for backup activation to exit
       3: areturn

  public final void connectionTTLEqualsCheckPeriod(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #502                // Method connectionTTLEqualsCheckPeriod$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String connectionTTLEqualsCheckPeriod$str();
    Code:
       0: ldc_w         #503                // String AMQ222202: {0}: <{1}> should not be set to the same value as <{2}>.  If a system is under high load, or there is a minor network delay, there is a high probability of a cluster split/failure due to connection timeout.
       3: areturn

  public final void noProtocolManagerFound(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #504                // Method noProtocolManagerFound$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String noProtocolManagerFound$str();
    Code:
       0: ldc_w         #505                // String AMQ222203: Classpath lacks a protocol-manager for protocol {0}, Protocol being ignored on acceptor {1}
       3: areturn

  public final void initializationError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #507                // Method initializationError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String initializationError$str();
    Code:
       0: ldc_w         #508                // String AMQ224000: Failure in initialisation
       3: areturn

  public final void errorDeployingURI(java.lang.Throwable, java.net.URI);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #509                // Method errorDeployingURI1$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorDeployingURI1$str();
    Code:
       0: ldc_w         #510                // String AMQ224001: Error deploying URI {0}
       3: areturn

  public final void errorDeployingURI(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #511                // Method errorDeployingURI0$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorDeployingURI0$str();
    Code:
       0: ldc_w         #512                // String AMQ224002: Error deploying URI
       3: areturn

  public final void errorUnDeployingURI(java.lang.Throwable, java.net.URI);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #513                // Method errorUnDeployingURI$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorUnDeployingURI$str();
    Code:
       0: ldc_w         #514                // String AMQ224003: Error undeploying URI {0}
       3: areturn

  public final void unableToDeployNode(java.lang.Exception, org.w3c.dom.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #515                // Method unableToDeployNode$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String unableToDeployNode$str();
    Code:
       0: ldc_w         #516                // String AMQ224005: Unable to deploy node {0}
       3: areturn

  public final void invalidFilter(java.lang.Throwable, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #517                // Method invalidFilter$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String invalidFilter$str();
    Code:
       0: ldc_w         #518                // String AMQ224006: Invalid filter: {0}
       3: areturn

  public final void pageSubscriptionError(org.apache.activemq.artemis.core.io.IOCallback, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #519                // Method pageSubscriptionError$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String pageSubscriptionError$str();
    Code:
       0: ldc_w         #520                // String AMQ224007: page subscription = {0} error={1}
       3: areturn

  public final void batchingIdError(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #521                // Method batchingIdError$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String batchingIdError$str();
    Code:
       0: ldc_w         #522                // String AMQ224008: Failed to store id
       3: areturn

  public final void cannotFindMessage(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #523                // Method cannotFindMessage$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String cannotFindMessage$str();
    Code:
       0: ldc_w         #524                // String AMQ224009: Cannot find message {0}
       3: areturn

  public final void journalCannotFindQueue(java.lang.Long, java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #525                // Method journalCannotFindQueue$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String journalCannotFindQueue$str();
    Code:
       0: ldc_w         #526                // String AMQ224010: Cannot find queue messages for queueID={0} on ack for messageID={1}
       3: areturn

  public final void journalCannotFindQueueScheduled(java.lang.Long, java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #527                // Method journalCannotFindQueueScheduled$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokevirtual #6                  // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  protected java.lang.String journalCannotFindQueueScheduled$str();
    Code:
       0: ldc_w         #528                // String AMQ224011: Cannot find queue messages {0} for message {1} while processing scheduled messages
       3: areturn

  public final void largeMessageErrorReleasingResources(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #529                // Method largeMessageErrorReleasingResources$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String largeMessageErrorReleasingResources$str();
    Code:
       0: ldc_w         #530                // String AMQ224012: error releasing resources
       3: areturn

  public final void errorExpiringMessages(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #531                // Method errorExpiringMessages$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorExpiringMessages$str();
    Code:
       0: ldc_w         #532                // String AMQ224013: failed to expire messages for queue
       3: areturn

  public final void errorClosingSession(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #533                // Method errorClosingSession$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorClosingSession$str();
    Code:
       0: ldc_w         #534                // String AMQ224014: Failed to close session
       3: areturn

  public final void caughtXaException(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #535                // Method caughtXaException$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String caughtXaException$str();
    Code:
       0: ldc_w         #536                // String AMQ224015: Caught XA exception
       3: areturn

  public final void caughtException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #537                // Method caughtException$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String caughtException$str();
    Code:
       0: ldc_w         #538                // String AMQ224016: Caught exception
       3: areturn

  public final void invalidPacket(org.apache.activemq.artemis.core.protocol.core.Packet);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #539                // Method invalidPacket$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String invalidPacket$str();
    Code:
       0: ldc_w         #540                // String AMQ224017: Invalid packet {0}
       3: areturn

  public final void failedToCreateSession(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #541                // Method failedToCreateSession$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String failedToCreateSession$str();
    Code:
       0: ldc_w         #542                // String AMQ224018: Failed to create session
       3: areturn

  public final void failedToReattachSession(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #543                // Method failedToReattachSession$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String failedToReattachSession$str();
    Code:
       0: ldc_w         #544                // String AMQ224019: Failed to reattach session
       3: areturn

  public final void failedToHandleCreateQueue(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #545                // Method failedToHandleCreateQueue$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String failedToHandleCreateQueue$str();
    Code:
       0: ldc_w         #546                // String AMQ224020: Failed to handle create queue
       3: areturn

  public final void errorDecodingPacket(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #547                // Method errorDecodingPacket$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorDecodingPacket$str();
    Code:
       0: ldc_w         #548                // String AMQ224021: Failed to decode packet
       3: areturn

  public final void errorCallingFailureListener(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #549                // Method errorCallingFailureListener$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorCallingFailureListener$str();
    Code:
       0: ldc_w         #550                // String AMQ224022: Failed to execute failure listener
       3: areturn

  public final void stompErrorTXExists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #551                // Method stompErrorTXExists$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String stompErrorTXExists$str();
    Code:
       0: ldc_w         #552                // String AMQ224024: Stomp Error, tx already exist! {0}
       3: areturn

  public final void errorWritingToInvmConnector(java.lang.Exception, java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #553                // Method errorWritingToInvmConnector$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorWritingToInvmConnector$str();
    Code:
       0: ldc_w         #554                // String AMQ224027: Failed to write to handler on invm connector {0}
       3: areturn

  public final void errorStoppingAcceptor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #555                // Method errorStoppingAcceptor$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorStoppingAcceptor$str();
    Code:
       0: ldc_w         #556                // String AMQ224028: Failed to stop accepto {0}r
       3: areturn

  public final void largeMessageIncompatible();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #557                // Method largeMessageIncompatible$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String largeMessageIncompatible$str();
    Code:
       0: ldc_w         #558                // String AMQ224029: large message sync: largeMessage instance is incompatible with it, ignoring data
       3: areturn

  public final void errorCancellingRefOnBridge(java.lang.Exception, org.apache.activemq.artemis.core.server.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #559                // Method errorCancellingRefOnBridge$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorCancellingRefOnBridge$str();
    Code:
       0: ldc_w         #560                // String AMQ224030: Could not cancel reference {0}
       3: areturn

  public final void stompBeginTX(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #561                // Method stompBeginTX$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String stompBeginTX$str();
    Code:
       0: ldc_w         #562                // String AMQ224031: -------------------------------Stomp begin tx: {0}
       3: areturn

  public final void errorPausingBridge(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #563                // Method errorPausingBridge$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorPausingBridge$str();
    Code:
       0: ldc_w         #564                // String AMQ224032: Failed to pause bridge
       3: areturn

  public final void errorBroadcastingConnectorConfigs(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #565                // Method errorBroadcastingConnectorConfigs$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorBroadcastingConnectorConfigs$str();
    Code:
       0: ldc_w         #566                // String AMQ224033: Failed to broadcast connector configs
       3: areturn

  public final void errorClosingConsumer(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #567                // Method errorClosingConsumer$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorClosingConsumer$str();
    Code:
       0: ldc_w         #568                // String AMQ224034: Failed to close consumer
       3: areturn

  public final void errorClosingFlowRecord(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #569                // Method errorClosingFlowRecord$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorClosingFlowRecord$str();
    Code:
       0: ldc_w         #570                // String AMQ224035: Failed to close cluster connection flow record
       3: areturn

  public final void errorUpdatingTopology(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #571                // Method errorUpdatingTopology$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorUpdatingTopology$str();
    Code:
       0: ldc_w         #572                // String AMQ224036: Failed to update cluster connection topology
       3: areturn

  public final void errorHandlingMessage(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #573                // Method errorHandlingMessage$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorHandlingMessage$str();
    Code:
       0: ldc_w         #574                // String AMQ224037: cluster connection Failed to handle message
       3: areturn

  public final void errorAckingOldReference(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #575                // Method errorAckingOldReference$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorAckingOldReference$str();
    Code:
       0: ldc_w         #576                // String AMQ224038: Failed to ack old reference
       3: areturn

  public final void errorExpiringRef(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #577                // Method errorExpiringRef$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorExpiringRef$str();
    Code:
       0: ldc_w         #578                // String AMQ224039: Failed to expire message reference
       3: areturn

  public final void errorRemovingConsumer(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #579                // Method errorRemovingConsumer$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorRemovingConsumer$str();
    Code:
       0: ldc_w         #580                // String AMQ224040: Failed to remove consumer
       3: areturn

  public final void errorDelivering(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #581                // Method errorDelivering$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorDelivering$str();
    Code:
       0: ldc_w         #582                // String AMQ224041: Failed to deliver
       3: areturn

  public final void errorRestartingBackupServer(java.lang.Exception, org.apache.activemq.artemis.core.server.ActiveMQServer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #583                // Method errorRestartingBackupServer$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorRestartingBackupServer$str();
    Code:
       0: ldc_w         #584                // String AMQ224042: Error while restarting the backup server: {0}
       3: areturn

  public final void errorSendingForcedDelivery(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #585                // Method errorSendingForcedDelivery$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorSendingForcedDelivery$str();
    Code:
       0: ldc_w         #586                // String AMQ224043: Failed to send forced delivery message
       3: areturn

  public final void errorAckingMessage(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #587                // Method errorAckingMessage$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorAckingMessage$str();
    Code:
       0: ldc_w         #588                // String AMQ224044: error acknowledging message
       3: areturn

  public final void errorRunningLargeMessageDeliverer(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #589                // Method errorRunningLargeMessageDeliverer$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorRunningLargeMessageDeliverer$str();
    Code:
       0: ldc_w         #590                // String AMQ224045: Failed to run large message deliverer
       3: areturn

  public final void errorBrowserHandlingMessage(java.lang.Exception, org.apache.activemq.artemis.core.server.MessageReference);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #591                // Method errorBrowserHandlingMessage$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorBrowserHandlingMessage$str();
    Code:
       0: ldc_w         #592                // String AMQ224046: Exception while browser handled from {0}
       3: areturn

  public final void errorDeletingLargeMessageFile(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #593                // Method errorDeletingLargeMessageFile$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorDeletingLargeMessageFile$str();
    Code:
       0: ldc_w         #594                // String AMQ224047: Failed to delete large message file
       3: areturn

  public final void errorRemovingTempQueue(java.lang.Exception, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #595                // Method errorRemovingTempQueue$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorRemovingTempQueue$str();
    Code:
       0: ldc_w         #596                // String AMQ224048: Failed to remove temporary queue {0}
       3: areturn

  public final void cannotFindConsumer(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #597                // Method cannotFindConsumer$str:()Ljava/lang/String;
      15: lload_1
      16: invokestatic  #94                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  protected java.lang.String cannotFindConsumer$str();
    Code:
       0: ldc_w         #598                // String AMQ224049: Cannot find consumer with id {0}
       3: areturn

  public final void errorClosingConnection(org.apache.activemq.artemis.core.server.impl.ServerSessionImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #599                // Method errorClosingConnection$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorClosingConnection$str();
    Code:
       0: ldc_w         #600                // String AMQ224050: Failed to close connection {0}
       3: areturn

  public final void errorCallingNotifListener(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #601                // Method errorCallingNotifListener$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorCallingNotifListener$str();
    Code:
       0: ldc_w         #602                // String AMQ224051: Failed to call notification listener
       3: areturn

  public final void errorCallingRepoListener(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #603                // Method errorCallingRepoListener$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorCallingRepoListener$str();
    Code:
       0: ldc_w         #604                // String AMQ224052: Unable to call Hierarchical Repository Change Listener
       3: areturn

  public final void errorTimingOutTX(java.lang.Exception, javax.transaction.xa.Xid);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #605                // Method errorTimingOutTX$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorTimingOutTX$str();
    Code:
       0: ldc_w         #606                // String AMQ224053: failed to timeout transaction, xid:{0}
       3: areturn

  public final void errorStoppingReplicationManager(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #607                // Method errorStoppingReplicationManager$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String errorStoppingReplicationManager$str();
    Code:
       0: ldc_w         #608                // String AMQ224054: exception while stopping the replication manager
       3: areturn

  public final void bridgeFailedToAck(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #609                // Method bridgeFailedToAck$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String bridgeFailedToAck$str();
    Code:
       0: ldc_w         #610                // String AMQ224055: Bridge Failed to ack
       3: areturn

  public final void autoFailBackDenied();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #611                // Method autoFailBackDenied$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String autoFailBackDenied$str();
    Code:
       0: ldc_w         #612                // String AMQ224056: Live server will not fail-back automatically
       3: areturn

  public final void failbackMissedBackupAnnouncement();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #613                // Method failbackMissedBackupAnnouncement$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String failbackMissedBackupAnnouncement$str();
    Code:
       0: ldc_w         #614                // String AMQ224057: Backup server that requested fail-back was not announced. Server will not stop for fail-back.
       3: areturn

  public final void clusterManagerAuthenticationError(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #615                // Method clusterManagerAuthenticationError$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String clusterManagerAuthenticationError$str();
    Code:
       0: ldc_w         #616                // String AMQ224058: Stopping ClusterManager. As it failed to authenticate with the cluster: {0}
       3: areturn

  public final void invalidCipherSuite(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #617                // Method invalidCipherSuite$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String invalidCipherSuite$str();
    Code:
       0: ldc_w         #618                // String AMQ224059: Invalid cipher suite specified. Supported cipher suites are: {0}
       3: areturn

  public final void invalidProtocol(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #619                // Method invalidProtocol$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String invalidProtocol$str();
    Code:
       0: ldc_w         #620                // String AMQ224060: Invalid protocol specified. Supported protocols are: {0}
       3: areturn

  public final void impossibleToRouteGrouped();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #621                // Method impossibleToRouteGrouped$str:()Ljava/lang/String;
      15: iconst_0
      16: anewarray     #22                 // class java/lang/Object
      19: invokevirtual #23                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      22: return

  protected java.lang.String impossibleToRouteGrouped$str();
    Code:
       0: ldc_w         #622                // String AMQ224069: Could not contact group handler coordinator after 10 retries, message being routed without grouping information
       3: areturn

  public final void incompatibleWithHAPolicy(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #623                // Method incompatibleWithHAPolicy$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String incompatibleWithHAPolicy$str();
    Code:
       0: ldc_w         #624                // String AMQ224061: Setting both <{0}> and <ha-policy> is invalid. Please use <ha-policy> exclusively as <{0}> is deprecated. Ignoring <{0}> value.
       3: areturn

  public final void failedToSendSlowConsumerNotification(org.apache.activemq.artemis.core.server.management.Notification, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_2
      11: aload_0
      12: invokevirtual #625                // Method failedToSendSlowConsumerNotification$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String failedToSendSlowConsumerNotification$str();
    Code:
       0: ldc_w         #626                // String AMQ224062: Failed to send SLOW_CONSUMER notification: {0}
       3: areturn

  public final void failedToCloseConsumerConnectionsForAddress(java.lang.String, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_2
      11: aload_0
      12: invokevirtual #627                // Method failedToCloseConsumerConnectionsForAddress$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String failedToCloseConsumerConnectionsForAddress$str();
    Code:
       0: ldc_w         #628                // String AMQ224063: Failed to close consumer connections for address {0}
       3: areturn

  public final void incompatibleWithHAPolicyChosen(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #629                // Method incompatibleWithHAPolicyChosen$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String incompatibleWithHAPolicyChosen$str();
    Code:
       0: ldc_w         #630                // String AMQ224064: Setting <{0}> is invalid with this HA Policy Configuration. Please use <ha-policy> exclusively or remove. Ignoring <{0}> value.
       3: areturn

  public final void errorRemovingAutoCreatedQueue(java.lang.Exception, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #631                // Method errorRemovingAutoCreatedQueue$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorRemovingAutoCreatedQueue$str();
    Code:
       0: ldc_w         #632                // String AMQ224065: Failed to remove auto-created queue {0}
       3: areturn

  public final void duplicatedAcceptor(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #113                // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #633                // Method duplicatedAcceptor$str:()Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokevirtual #10                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      21: return

  protected java.lang.String duplicatedAcceptor$str();
    Code:
       0: ldc_w         #634                // String AMQ224066: Duplicated Acceptor {0} with parameters {1} classFactory={2} duplicated on the configuration
       3: areturn

  public final void errorStoppingComponent(java.lang.Throwable, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #506                // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      10: aload_1
      11: aload_0
      12: invokevirtual #635                // Method errorStoppingComponent$str:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String errorStoppingComponent$str();
    Code:
       0: ldc_w         #636                // String AMQ224068: Unable to stop component: {0}
       3: areturn

  public final void interruptWhilstStoppingComponent(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/jboss/logging/Logger;
       4: getstatic     #3                  // Field FQCN:Ljava/lang/String;
       7: getstatic     #241                // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      10: aconst_null
      11: aload_0
      12: invokevirtual #637                // Method interruptWhilstStoppingComponent$str:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #15                 // Method org/jboss/logging/Logger.logv:(Ljava/lang/String;Lorg/jboss/logging/Logger$Level;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      19: return

  protected java.lang.String interruptWhilstStoppingComponent$str();
    Code:
       0: ldc_w         #638                // String AMQ224070: Received Interrupt Exception whilst waiting for component to shutdown: {0}
       3: areturn

  static {};
    Code:
       0: ldc           #7                  // class org/apache/activemq/artemis/core/server/ActiveMQServerLogger_$logger
       2: invokevirtual #639                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #3                  // Field FQCN:Ljava/lang/String;
       8: return
}
