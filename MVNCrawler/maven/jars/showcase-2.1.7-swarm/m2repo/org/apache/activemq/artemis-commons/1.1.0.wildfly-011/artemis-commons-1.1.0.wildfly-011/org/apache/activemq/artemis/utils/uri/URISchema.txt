Compiled from "URISchema.java"
public abstract class org.apache.activemq.artemis.utils.uri.URISchema<T, P> {
  private org.apache.activemq.artemis.utils.uri.URIFactory<T, P> parentFactory;

  private static final org.apache.commons.beanutils.BeanUtilsBean beanUtils;

  public org.apache.activemq.artemis.utils.uri.URISchema();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract java.lang.String getSchemaName();

  public T newObject(java.net.URI, P) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #2                  // Method newObject:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public void populateObject(java.net.URI, T) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_1
       3: invokevirtual #3                  // Method java/net/URI.getQuery:()Ljava/lang/String;
       6: aconst_null
       7: invokestatic  #4                  // Method parseQuery:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
      10: invokestatic  #5                  // Method setData:(Ljava/net/URI;Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;
      13: pop
      14: return

  public java.net.URI newURI(T) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method internalNewURI:(Ljava/lang/Object;)Ljava/net/URI;
       5: areturn

  void setFactory(org.apache.activemq.artemis.utils.uri.URIFactory<T, P>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field parentFactory:Lorg/apache/activemq/artemis/utils/uri/URIFactory;
       5: return

  protected org.apache.activemq.artemis.utils.uri.URIFactory<T, P> getFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field parentFactory:Lorg/apache/activemq/artemis/utils/uri/URIFactory;
       4: areturn

  protected java.lang.String getHost(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getDefaultURI:()Ljava/net/URI;
       4: astore_2
       5: aload_2
       6: ifnull        32
       9: aload_1
      10: invokevirtual #9                  // Method java/net/URI.getHost:()Ljava/lang/String;
      13: ifnonnull     32
      16: aload_2
      17: invokevirtual #10                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #10                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      24: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: aload_2
      31: astore_1
      32: aload_1
      33: invokevirtual #9                  // Method java/net/URI.getHost:()Ljava/lang/String;
      36: areturn

  protected java.net.URI getDefaultURI();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getFactory:()Lorg/apache/activemq/artemis/utils/uri/URIFactory;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #13                 // Method org/apache/activemq/artemis/utils/uri/URIFactory.getDefaultURI:()Ljava/net/URI;
      15: areturn

  protected int getPort(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getDefaultURI:()Ljava/net/URI;
       4: astore_2
       5: aload_2
       6: ifnull        32
       9: aload_1
      10: invokevirtual #14                 // Method java/net/URI.getPort:()I
      13: ifge          32
      16: aload_2
      17: invokevirtual #10                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #10                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      24: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: aload_2
      31: astore_1
      32: aload_1
      33: invokevirtual #14                 // Method java/net/URI.getPort:()I
      36: ireturn

  public T newObject(java.net.URI, java.util.Map<java.lang.String, java.lang.String>, P) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #3                  // Method java/net/URI.getQuery:()Ljava/lang/String;
       6: aload_2
       7: invokestatic  #4                  // Method parseQuery:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;
      10: aload_3
      11: invokevirtual #15                 // Method internalNewObject:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  protected abstract T internalNewObject(java.net.URI, java.util.Map<java.lang.String, java.lang.String>, P) throws java.lang.Exception;

  protected abstract java.net.URI internalNewURI(T) throws java.lang.Exception;

  public static java.util.Map<java.lang.String, java.lang.String> parseQuery(java.lang.String, java.util.Map<java.lang.String, java.lang.String>) throws java.net.URISyntaxException;
    Code:
       0: new           #16                 // class java/util/HashMap
       3: dup
       4: invokespecial #17                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: ifnull        132
      12: aload_0
      13: invokevirtual #18                 // Method java/lang/String.isEmpty:()Z
      16: ifne          132
      19: aload_0
      20: ldc           #19                 // String &
      22: invokevirtual #20                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      25: astore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: aload_3
      32: arraylength
      33: if_icmpge     132
      36: aload_3
      37: iload         4
      39: aaload
      40: ldc           #21                 // String =
      42: invokevirtual #22                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      45: istore        5
      47: iload         5
      49: iflt          101
      52: aload_3
      53: iload         4
      55: aaload
      56: iconst_0
      57: iload         5
      59: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      62: ldc           #24                 // String UTF-8
      64: invokestatic  #25                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      67: astore        6
      69: aload_3
      70: iload         4
      72: aaload
      73: iload         5
      75: iconst_1
      76: iadd
      77: invokevirtual #26                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      80: ldc           #24                 // String UTF-8
      82: invokestatic  #25                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      85: astore        7
      87: aload_2
      88: aload         6
      90: aload         7
      92: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          126
     101: aload_3
     102: iload         4
     104: aaload
     105: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
     108: invokevirtual #18                 // Method java/lang/String.isEmpty:()Z
     111: ifne          126
     114: aload_2
     115: aload_3
     116: iload         4
     118: aaload
     119: aconst_null
     120: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     125: pop
     126: iinc          4, 1
     129: goto          29
     132: aload_1
     133: ifnull        192
     136: aload_1
     137: invokeinterface #29,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     142: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     147: astore_3
     148: aload_3
     149: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     154: ifeq          192
     157: aload_3
     158: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     163: checkcast     #33                 // class java/util/Map$Entry
     166: astore        4
     168: aload_2
     169: aload         4
     171: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     176: aload         4
     178: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     183: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     188: pop
     189: goto          148
     192: aload_2
     193: areturn
     194: astore_2
     195: new           #37                 // class java/net/URISyntaxException
     198: dup
     199: aload_2
     200: invokevirtual #38                 // Method java/io/UnsupportedEncodingException.toString:()Ljava/lang/String;
     203: ldc           #39                 // String Invalid encoding
     205: invokespecial #40                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     208: aload_2
     209: invokevirtual #41                 // Method java/net/URISyntaxException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     212: checkcast     #37                 // class java/net/URISyntaxException
     215: athrow
    Exception table:
       from    to  target type
           0   193   194   Class java/io/UnsupportedEncodingException

  protected java.lang.String printQuery(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #42                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #43                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #29,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          96
      29: aload_3
      30: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #33                 // class java/util/Map$Entry
      38: astore        4
      40: aload_2
      41: new           #44                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      48: aload         4
      50: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: checkcast     #46                 // class java/lang/String
      58: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #21                 // String =
      63: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload         4
      68: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: checkcast     #46                 // class java/lang/String
      76: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      85: pop
      86: aload_2
      87: ldc           #50                 // String \n
      89: invokevirtual #49                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      92: pop
      93: goto          20
      96: aload_2
      97: invokevirtual #51                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     100: areturn

  protected static <P> P copyData(P, P) throws java.lang.Exception;
    Code:
       0: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
       3: dup
       4: astore_2
       5: monitorenter
       6: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
       9: aload_0
      10: aload_1
      11: invokevirtual #53                 // Method org/apache/commons/beanutils/BeanUtilsBean.copyProperties:(Ljava/lang/Object;Ljava/lang/Object;)V
      14: aload_2
      15: monitorexit
      16: goto          24
      19: astore_3
      20: aload_2
      21: monitorexit
      22: aload_3
      23: athrow
      24: aload_1
      25: areturn
    Exception table:
       from    to  target type
           6    16    19   any
          19    22    19   any

  protected static <P> P setData(java.net.URI, P, java.util.Map<java.lang.String, java.lang.String>) throws java.lang.Exception;
    Code:
       0: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
       3: dup
       4: astore_3
       5: monitorenter
       6: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
       9: aload_1
      10: ldc           #54                 // String host
      12: aload_0
      13: invokevirtual #9                  // Method java/net/URI.getHost:()Ljava/lang/String;
      16: invokevirtual #55                 // Method org/apache/commons/beanutils/BeanUtilsBean.setProperty:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      19: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
      22: aload_1
      23: ldc           #56                 // String port
      25: aload_0
      26: invokevirtual #14                 // Method java/net/URI.getPort:()I
      29: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: invokevirtual #55                 // Method org/apache/commons/beanutils/BeanUtilsBean.setProperty:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      35: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
      38: aload_1
      39: ldc           #58                 // String userInfo
      41: aload_0
      42: invokevirtual #59                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
      45: invokevirtual #55                 // Method org/apache/commons/beanutils/BeanUtilsBean.setProperty:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      48: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
      51: aload_1
      52: aload_2
      53: invokevirtual #60                 // Method org/apache/commons/beanutils/BeanUtilsBean.populate:(Ljava/lang/Object;Ljava/util/Map;)V
      56: aload_3
      57: monitorexit
      58: goto          68
      61: astore        4
      63: aload_3
      64: monitorexit
      65: aload         4
      67: athrow
      68: aload_1
      69: areturn
    Exception table:
       from    to  target type
           6    58    61   any
          61    65    61   any

  public static void setData(java.net.URI, java.util.HashMap<java.lang.String, java.lang.Object>, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_2
       1: ldc           #54                 // String host
       3: invokeinterface #61,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       8: ifeq          40
      11: aload_1
      12: ldc           #54                 // String host
      14: new           #44                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #62                 // String
      23: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #9                  // Method java/net/URI.getHost:()Ljava/lang/String;
      30: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokevirtual #63                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: ldc           #56                 // String port
      43: invokeinterface #61,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      48: ifeq          80
      51: aload_1
      52: ldc           #56                 // String port
      54: new           #44                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #62                 // String
      63: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #14                 // Method java/net/URI.getPort:()I
      70: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      73: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokevirtual #63                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload_2
      81: ldc           #58                 // String userInfo
      83: invokeinterface #61,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      88: ifeq          120
      91: aload_1
      92: ldc           #58                 // String userInfo
      94: new           #44                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #62                 // String
     103: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: invokevirtual #59                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
     110: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokevirtual #63                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: aload_3
     121: invokeinterface #29,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     126: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     131: astore        4
     133: aload         4
     135: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     140: ifeq          193
     143: aload         4
     145: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     150: checkcast     #33                 // class java/util/Map$Entry
     153: astore        5
     155: aload_2
     156: aload         5
     158: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     163: invokeinterface #61,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     168: ifeq          190
     171: aload_1
     172: aload         5
     174: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     179: aload         5
     181: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     186: invokevirtual #63                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     189: pop
     190: goto          133
     193: return

  public static java.lang.String getData(java.util.List<java.lang.String>, java.lang.Object...) throws java.lang.Exception;
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
      11: dup
      12: astore_3
      13: monitorenter
      14: aload_1
      15: astore        4
      17: aload         4
      19: arraylength
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         6
      27: iload         5
      29: if_icmpge     157
      32: aload         4
      34: iload         6
      36: aaload
      37: astore        7
      39: aload         7
      41: ifnull        151
      44: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
      47: invokevirtual #65                 // Method org/apache/commons/beanutils/BeanUtilsBean.getPropertyUtils:()Lorg/apache/commons/beanutils/PropertyUtilsBean;
      50: aload         7
      52: invokevirtual #66                 // Method org/apache/commons/beanutils/PropertyUtilsBean.getPropertyDescriptors:(Ljava/lang/Object;)[Ljava/beans/PropertyDescriptor;
      55: astore        8
      57: aload         8
      59: astore        9
      61: aload         9
      63: arraylength
      64: istore        10
      66: iconst_0
      67: istore        11
      69: iload         11
      71: iload         10
      73: if_icmpge     151
      76: aload         9
      78: iload         11
      80: aaload
      81: astore        12
      83: aload         12
      85: invokevirtual #67                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
      88: ifnull        145
      91: aload         12
      93: aload_0
      94: invokestatic  #68                 // Method isWriteable:(Ljava/beans/PropertyDescriptor;Ljava/util/List;)Z
      97: ifeq          145
     100: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
     103: aload         7
     105: aload         12
     107: invokevirtual #69                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     110: invokevirtual #70                 // Method org/apache/commons/beanutils/BeanUtilsBean.getProperty:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
     113: astore        13
     115: aload         13
     117: ifnull        145
     120: aload_2
     121: ldc           #19                 // String &
     123: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         12
     128: invokevirtual #69                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     131: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: ldc           #21                 // String =
     136: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload         13
     141: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: pop
     145: iinc          11, 1
     148: goto          69
     151: iinc          6, 1
     154: goto          25
     157: aload_3
     158: monitorexit
     159: goto          169
     162: astore        14
     164: aload_3
     165: monitorexit
     166: aload         14
     168: athrow
     169: aload_2
     170: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: areturn
    Exception table:
       from    to  target type
          14   159   162   any
         162   166   162   any

  private static boolean isWriteable(java.beans.PropertyDescriptor, java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: aload_0
       6: invokevirtual #69                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
       9: invokeinterface #71,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      14: ifeq          19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: invokevirtual #72                 // Method java/beans/PropertyDescriptor.getPropertyType:()Ljava/lang/Class;
      23: astore_2
      24: aload_2
      25: ldc           #73                 // class java/lang/Double
      27: if_acmpeq     95
      30: aload_2
      31: getstatic     #74                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      34: if_acmpeq     95
      37: aload_2
      38: ldc           #75                 // class java/lang/Long
      40: if_acmpeq     95
      43: aload_2
      44: getstatic     #76                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      47: if_acmpeq     95
      50: aload_2
      51: ldc           #77                 // class java/lang/Integer
      53: if_acmpeq     95
      56: aload_2
      57: getstatic     #78                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      60: if_acmpeq     95
      63: aload_2
      64: ldc           #79                 // class java/lang/Float
      66: if_acmpeq     95
      69: aload_2
      70: getstatic     #80                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      73: if_acmpeq     95
      76: aload_2
      77: ldc           #81                 // class java/lang/Boolean
      79: if_acmpeq     95
      82: aload_2
      83: getstatic     #82                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      86: if_acmpeq     95
      89: aload_2
      90: ldc           #46                 // class java/lang/String
      92: if_acmpne     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ireturn

  static {};
    Code:
       0: new           #83                 // class org/apache/commons/beanutils/BeanUtilsBean
       3: dup
       4: invokespecial #84                 // Method org/apache/commons/beanutils/BeanUtilsBean."<init>":()V
       7: putstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
      10: getstatic     #52                 // Field beanUtils:Lorg/apache/commons/beanutils/BeanUtilsBean;
      13: invokevirtual #65                 // Method org/apache/commons/beanutils/BeanUtilsBean.getPropertyUtils:()Lorg/apache/commons/beanutils/PropertyUtilsBean;
      16: new           #85                 // class org/apache/commons/beanutils/FluentPropertyBeanIntrospector
      19: dup
      20: invokespecial #86                 // Method org/apache/commons/beanutils/FluentPropertyBeanIntrospector."<init>":()V
      23: invokevirtual #87                 // Method org/apache/commons/beanutils/PropertyUtilsBean.addBeanIntrospector:(Lorg/apache/commons/beanutils/BeanIntrospector;)V
      26: return
}
