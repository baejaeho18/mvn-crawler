Compiled from "OperationContextImpl.java"
public class org.apache.activemq.artemis.core.persistence.impl.journal.OperationContextImpl implements org.apache.activemq.artemis.core.persistence.OperationContext {
  private static final java.lang.ThreadLocal<org.apache.activemq.artemis.core.persistence.OperationContext> threadLocalContext;

  private java.util.List<org.apache.activemq.artemis.core.persistence.impl.journal.OperationContextImpl$TaskHolder> tasks;

  private long minimalStore;

  private long minimalReplicated;

  private long minimalPage;

  private final java.util.concurrent.atomic.AtomicLong storeLineUp;

  private final java.util.concurrent.atomic.AtomicLong replicationLineUp;

  private final java.util.concurrent.atomic.AtomicLong pageLineUp;

  private long stored;

  private long replicated;

  private long paged;

  private int errorCode;

  private java.lang.String errorMessage;

  private final java.util.concurrent.Executor executor;

  private final java.util.concurrent.atomic.AtomicInteger executorsPending;

  public static void clearContext();
    Code:
       0: getstatic     #5                  // Field threadLocalContext:Ljava/lang/ThreadLocal;
       3: aconst_null
       4: invokevirtual #6                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public static final org.apache.activemq.artemis.core.persistence.OperationContext getContext();
    Code:
       0: aconst_null
       1: invokestatic  #7                  // Method getContext:(Lorg/apache/activemq/artemis/utils/ExecutorFactory;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
       4: areturn

  public static org.apache.activemq.artemis.core.persistence.OperationContext getContext(org.apache.activemq.artemis.utils.ExecutorFactory);
    Code:
       0: getstatic     #5                  // Field threadLocalContext:Ljava/lang/ThreadLocal;
       3: invokevirtual #8                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #9                  // class org/apache/activemq/artemis/core/persistence/OperationContext
       9: astore_1
      10: aload_1
      11: ifnonnull     41
      14: aload_0
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: new           #10                 // class org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl
      23: dup
      24: aload_0
      25: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/artemis/utils/ExecutorFactory.getExecutor:()Ljava/util/concurrent/Executor;
      30: invokespecial #12                 // Method "<init>":(Ljava/util/concurrent/Executor;)V
      33: astore_1
      34: getstatic     #5                  // Field threadLocalContext:Ljava/lang/ThreadLocal;
      37: aload_1
      38: invokevirtual #6                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      41: aload_1
      42: areturn

  public static void setContext(org.apache.activemq.artemis.core.persistence.OperationContext);
    Code:
       0: getstatic     #5                  // Field threadLocalContext:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #6                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public org.apache.activemq.artemis.core.persistence.impl.journal.OperationContextImpl(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #15                 // long 9223372036854775807l
       8: putfield      #17                 // Field minimalStore:J
      11: aload_0
      12: ldc2_w        #15                 // long 9223372036854775807l
      15: putfield      #18                 // Field minimalReplicated:J
      18: aload_0
      19: ldc2_w        #15                 // long 9223372036854775807l
      22: putfield      #19                 // Field minimalPage:J
      25: aload_0
      26: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      29: dup
      30: lconst_0
      31: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      34: putfield      #3                  // Field storeLineUp:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      41: dup
      42: lconst_0
      43: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      46: putfield      #2                  // Field replicationLineUp:Ljava/util/concurrent/atomic/AtomicLong;
      49: aload_0
      50: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      53: dup
      54: lconst_0
      55: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      58: putfield      #1                  // Field pageLineUp:Ljava/util/concurrent/atomic/AtomicLong;
      61: aload_0
      62: lconst_0
      63: putfield      #22                 // Field stored:J
      66: aload_0
      67: lconst_0
      68: putfield      #23                 // Field replicated:J
      71: aload_0
      72: lconst_0
      73: putfield      #24                 // Field paged:J
      76: aload_0
      77: iconst_m1
      78: putfield      #25                 // Field errorCode:I
      81: aload_0
      82: aconst_null
      83: putfield      #26                 // Field errorMessage:Ljava/lang/String;
      86: aload_0
      87: new           #27                 // class java/util/concurrent/atomic/AtomicInteger
      90: dup
      91: iconst_0
      92: invokespecial #28                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      95: putfield      #4                  // Field executorsPending:Ljava/util/concurrent/atomic/AtomicInteger;
      98: aload_0
      99: aload_1
     100: putfield      #29                 // Field executor:Ljava/util/concurrent/Executor;
     103: return

  public void pageSyncLineUp();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pageLineUp:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public synchronized void pageSyncDone();
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field paged:J
       5: lconst_1
       6: ladd
       7: putfield      #24                 // Field paged:J
      10: aload_0
      11: invokespecial #31                 // Method checkTasks:()V
      14: return

  public void storeLineUp();
    Code:
       0: aload_0
       1: getfield      #3                  // Field storeLineUp:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public void replicationLineUp();
    Code:
       0: aload_0
       1: getfield      #2                  // Field replicationLineUp:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public synchronized void replicationDone();
    Code:
       0: aload_0
       1: dup
       2: getfield      #23                 // Field replicated:J
       5: lconst_1
       6: ladd
       7: putfield      #23                 // Field replicated:J
      10: aload_0
      11: invokespecial #31                 // Method checkTasks:()V
      14: return

  public void executeOnCompletion(org.apache.activemq.artemis.core.io.IOCallback);
    Code:
       0: aload_0
       1: getfield      #25                 // Field errorCode:I
       4: iconst_m1
       5: if_icmpeq     23
       8: aload_1
       9: aload_0
      10: getfield      #25                 // Field errorCode:I
      13: aload_0
      14: getfield      #26                 // Field errorMessage:Ljava/lang/String;
      17: invokeinterface #32,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      22: return
      23: iconst_0
      24: istore_2
      25: aload_0
      26: dup
      27: astore_3
      28: monitorenter
      29: aload_0
      30: getfield      #33                 // Field tasks:Ljava/util/List;
      33: ifnonnull     83
      36: aload_0
      37: new           #34                 // class java/util/LinkedList
      40: dup
      41: invokespecial #35                 // Method java/util/LinkedList."<init>":()V
      44: putfield      #33                 // Field tasks:Ljava/util/List;
      47: aload_0
      48: aload_0
      49: getfield      #2                  // Field replicationLineUp:Ljava/util/concurrent/atomic/AtomicLong;
      52: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.intValue:()I
      55: i2l
      56: putfield      #18                 // Field minimalReplicated:J
      59: aload_0
      60: aload_0
      61: getfield      #3                  // Field storeLineUp:Ljava/util/concurrent/atomic/AtomicLong;
      64: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.intValue:()I
      67: i2l
      68: putfield      #17                 // Field minimalStore:J
      71: aload_0
      72: aload_0
      73: getfield      #1                  // Field pageLineUp:Ljava/util/concurrent/atomic/AtomicLong;
      76: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.intValue:()I
      79: i2l
      80: putfield      #19                 // Field minimalPage:J
      83: aload_0
      84: getfield      #2                  // Field replicationLineUp:Ljava/util/concurrent/atomic/AtomicLong;
      87: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.intValue:()I
      90: i2l
      91: aload_0
      92: getfield      #23                 // Field replicated:J
      95: lcmp
      96: ifne          154
      99: aload_0
     100: getfield      #3                  // Field storeLineUp:Ljava/util/concurrent/atomic/AtomicLong;
     103: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.intValue:()I
     106: i2l
     107: aload_0
     108: getfield      #22                 // Field stored:J
     111: lcmp
     112: ifne          154
     115: aload_0
     116: getfield      #1                  // Field pageLineUp:Ljava/util/concurrent/atomic/AtomicLong;
     119: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLong.intValue:()I
     122: i2l
     123: aload_0
     124: getfield      #24                 // Field paged:J
     127: lcmp
     128: ifne          154
     131: aload_0
     132: getfield      #4                  // Field executorsPending:Ljava/util/concurrent/atomic/AtomicInteger;
     135: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     138: ifne          146
     141: iconst_1
     142: istore_2
     143: goto          173
     146: aload_0
     147: aload_1
     148: invokespecial #38                 // Method execute:(Lorg/apache/activemq/artemis/core/io/IOCallback;)V
     151: goto          173
     154: aload_0
     155: getfield      #33                 // Field tasks:Ljava/util/List;
     158: new           #39                 // class org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder
     161: dup
     162: aload_0
     163: aload_1
     164: invokespecial #40                 // Method org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder."<init>":(Lorg/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl;Lorg/apache/activemq/artemis/core/io/IOCallback;)V
     167: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     172: pop
     173: aload_3
     174: monitorexit
     175: goto          185
     178: astore        4
     180: aload_3
     181: monitorexit
     182: aload         4
     184: athrow
     185: iload_2
     186: ifeq          195
     189: aload_1
     190: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.done:()V
     195: return
    Exception table:
       from    to  target type
          29   175   178   any
         178   182   178   any

  public synchronized void done();
    Code:
       0: aload_0
       1: dup
       2: getfield      #22                 // Field stored:J
       5: lconst_1
       6: ladd
       7: putfield      #22                 // Field stored:J
      10: aload_0
      11: invokespecial #31                 // Method checkTasks:()V
      14: return

  private void checkTasks();
    Code:
       0: aload_0
       1: getfield      #22                 // Field stored:J
       4: aload_0
       5: getfield      #17                 // Field minimalStore:J
       8: lcmp
       9: iflt          121
      12: aload_0
      13: getfield      #23                 // Field replicated:J
      16: aload_0
      17: getfield      #18                 // Field minimalReplicated:J
      20: lcmp
      21: iflt          121
      24: aload_0
      25: getfield      #24                 // Field paged:J
      28: aload_0
      29: getfield      #19                 // Field minimalPage:J
      32: lcmp
      33: iflt          121
      36: aload_0
      37: getfield      #33                 // Field tasks:Ljava/util/List;
      40: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore_1
      46: aload_1
      47: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          121
      55: aload_1
      56: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #39                 // class org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder
      64: astore_2
      65: aload_0
      66: getfield      #22                 // Field stored:J
      69: aload_2
      70: getfield      #46                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder.storeLined:I
      73: i2l
      74: lcmp
      75: iflt          121
      78: aload_0
      79: getfield      #23                 // Field replicated:J
      82: aload_2
      83: getfield      #47                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder.replicationLined:I
      86: i2l
      87: lcmp
      88: iflt          121
      91: aload_0
      92: getfield      #24                 // Field paged:J
      95: aload_2
      96: getfield      #48                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder.pageLined:I
      99: i2l
     100: lcmp
     101: iflt          121
     104: aload_0
     105: aload_2
     106: getfield      #49                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder.task:Lorg/apache/activemq/artemis/core/io/IOCallback;
     109: invokespecial #38                 // Method execute:(Lorg/apache/activemq/artemis/core/io/IOCallback;)V
     112: aload_1
     113: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.remove:()V
     118: goto          46
     121: return

  private void execute(org.apache.activemq.artemis.core.io.IOCallback);
    Code:
       0: aload_0
       1: getfield      #4                  // Field executorsPending:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: aload_0
       9: getfield      #29                 // Field executor:Ljava/util/concurrent/Executor;
      12: new           #52                 // class org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$1
      15: dup
      16: aload_0
      17: aload_1
      18: invokespecial #53                 // Method org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$1."<init>":(Lorg/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl;Lorg/apache/activemq/artemis/core/io/IOCallback;)V
      21: invokeinterface #54,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      26: goto          81
      29: astore_2
      30: getstatic     #56                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      33: aload_2
      34: invokeinterface #57,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorExecutingAIOCallback:(Ljava/lang/Throwable;)V
      39: aload_0
      40: getfield      #4                  // Field executorsPending:Ljava/util/concurrent/atomic/AtomicInteger;
      43: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      46: pop
      47: aload_1
      48: getstatic     #59                 // Field org/apache/activemq/artemis/api/core/ActiveMQExceptionType.INTERNAL_ERROR:Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
      51: invokevirtual #60                 // Method org/apache/activemq/artemis/api/core/ActiveMQExceptionType.getCode:()I
      54: new           #61                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #63                 // String It wasn\'t possible to complete IO operation -
      63: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_2
      67: invokevirtual #65                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      70: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokeinterface #32,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      81: return
    Exception table:
       from    to  target type
           8    26    29   Class java/lang/Throwable

  public void complete();
    Code:
       0: return

  public synchronized void onError(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field errorCode:I
       5: aload_0
       6: aload_2
       7: putfield      #26                 // Field errorMessage:Ljava/lang/String;
      10: aload_0
      11: getfield      #33                 // Field tasks:Ljava/util/List;
      14: ifnull        68
      17: aload_0
      18: getfield      #33                 // Field tasks:Ljava/util/List;
      21: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          68
      36: aload_3
      37: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #39                 // class org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder
      45: astore        4
      47: aload         4
      49: getfield      #49                 // Field org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder.task:Lorg/apache/activemq/artemis/core/io/IOCallback;
      52: iload_1
      53: aload_2
      54: invokeinterface #32,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/IOCallback.onError:(ILjava/lang/String;)V
      59: aload_3
      60: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.remove:()V
      65: goto          27
      68: return

  public void waitCompletion() throws java.lang.Exception;
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #67                 // Method waitCompletion:(J)Z
       5: pop
       6: return

  public boolean waitCompletion(long) throws java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: new           #68                 // class org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback
       3: dup
       4: invokespecial #69                 // Method org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_3
      10: invokevirtual #70                 // Method executeOnCompletion:(Lorg/apache/activemq/artemis/core/io/IOCallback;)V
      13: aload_0
      14: invokevirtual #71                 // Method complete:()V
      17: lload_1
      18: lconst_0
      19: lcmp
      20: ifne          29
      23: aload_3
      24: invokevirtual #72                 // Method org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback.waitCompletion:()V
      27: iconst_1
      28: ireturn
      29: aload_3
      30: lload_1
      31: invokevirtual #73                 // Method org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback.waitCompletion:(J)Z
      34: ireturn

  public java.lang.String toString();
    Code:
       0: new           #74                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #75                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #33                 // Field tasks:Ljava/util/List;
      12: ifnull        76
      15: aload_0
      16: getfield      #33                 // Field tasks:Ljava/util/List;
      19: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          76
      34: aload_2
      35: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #39                 // class org/apache/activemq/artemis/core/persistence/impl/journal/OperationContextImpl$TaskHolder
      43: astore_3
      44: aload_1
      45: new           #61                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #76                 // String Task =
      54: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc           #78                 // String \n
      63: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokevirtual #79                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      72: pop
      73: goto          25
      76: new           #61                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #80                 // String OperationContextImpl [
      85: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: invokevirtual #81                 // Method java/lang/Object.hashCode:()I
      92: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      95: ldc           #83                 // String ] [minimalStore=
      97: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_0
     101: getfield      #17                 // Field minimalStore:J
     104: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     107: ldc           #85                 // String , storeLineUp=
     109: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: getfield      #3                  // Field storeLineUp:Ljava/util/concurrent/atomic/AtomicLong;
     116: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: ldc           #86                 // String , stored=
     121: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_0
     125: getfield      #22                 // Field stored:J
     128: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     131: ldc           #87                 // String , minimalReplicated=
     133: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_0
     137: getfield      #18                 // Field minimalReplicated:J
     140: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     143: ldc           #88                 // String , replicationLineUp=
     145: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_0
     149: getfield      #2                  // Field replicationLineUp:Ljava/util/concurrent/atomic/AtomicLong;
     152: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     155: ldc           #89                 // String , replicated=
     157: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_0
     161: getfield      #23                 // Field replicated:J
     164: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     167: ldc           #90                 // String , paged=
     169: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_0
     173: getfield      #24                 // Field paged:J
     176: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     179: ldc           #91                 // String , minimalPage=
     181: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_0
     185: getfield      #19                 // Field minimalPage:J
     188: invokevirtual #84                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     191: ldc           #92                 // String , pageLineUp=
     193: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload_0
     197: getfield      #1                  // Field pageLineUp:Ljava/util/concurrent/atomic/AtomicLong;
     200: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     203: ldc           #93                 // String , errorCode=
     205: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_0
     209: getfield      #25                 // Field errorCode:I
     212: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     215: ldc           #94                 // String , errorMessage=
     217: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: aload_0
     221: getfield      #26                 // Field errorMessage:Ljava/lang/String;
     224: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: ldc           #95                 // String , executorsPending=
     229: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload_0
     233: getfield      #4                  // Field executorsPending:Ljava/util/concurrent/atomic/AtomicInteger;
     236: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     239: ldc           #96                 // String , executor=
     241: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: aload_0
     245: getfield      #29                 // Field executor:Ljava/util/concurrent/Executor;
     248: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     251: ldc           #97                 // String ]
     253: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: aload_1
     257: invokevirtual #98                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     260: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     266: areturn

  static java.util.concurrent.atomic.AtomicInteger access$000(org.apache.activemq.artemis.core.persistence.impl.journal.OperationContextImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field executorsPending:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$100(org.apache.activemq.artemis.core.persistence.impl.journal.OperationContextImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field storeLineUp:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$200(org.apache.activemq.artemis.core.persistence.impl.journal.OperationContextImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field replicationLineUp:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$300(org.apache.activemq.artemis.core.persistence.impl.journal.OperationContextImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pageLineUp:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static {};
    Code:
       0: new           #99                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #100                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #5                  // Field threadLocalContext:Ljava/lang/ThreadLocal;
      10: return
}
