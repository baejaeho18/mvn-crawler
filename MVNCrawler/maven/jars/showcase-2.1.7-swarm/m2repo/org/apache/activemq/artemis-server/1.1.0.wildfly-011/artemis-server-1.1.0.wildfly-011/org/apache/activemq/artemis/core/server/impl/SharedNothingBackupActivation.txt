Compiled from "SharedNothingBackupActivation.java"
public final class org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation extends org.apache.activemq.artemis.core.server.impl.Activation {
  private org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy replicaPolicy;

  private org.apache.activemq.artemis.core.replication.ReplicationEndpoint replicationEndpoint;

  private final org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl activeMQServer;

  private org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum backupQuorum;

  private final boolean attemptFailBack;

  private final java.util.Map<java.lang.String, java.lang.Object> activationParams;

  private final org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl$ShutdownOnCriticalErrorListener shutdownOnCriticalIO;

  private java.lang.String nodeID;

  org.apache.activemq.artemis.core.server.cluster.ClusterControl clusterControl;

  private boolean closed;

  private volatile boolean backupUpToDate;

  private final org.apache.activemq.artemis.utils.ReusableLatch backupSyncLatch;

  static final boolean $assertionsDisabled;

  public org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, boolean, java.util.Map<java.lang.String, java.lang.Object>, org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl$ShutdownOnCriticalErrorListener, org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/activemq/artemis/core/server/impl/Activation."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #7                  // Field backupUpToDate:Z
       9: aload_0
      10: new           #8                  // class org/apache/activemq/artemis/utils/ReusableLatch
      13: dup
      14: iconst_0
      15: invokespecial #9                  // Method org/apache/activemq/artemis/utils/ReusableLatch."<init>":(I)V
      18: putfield      #10                 // Field backupSyncLatch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      21: aload_0
      22: aload_1
      23: putfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      26: aload_0
      27: iload_2
      28: putfield      #2                  // Field attemptFailBack:Z
      31: aload_0
      32: aload_3
      33: putfield      #11                 // Field activationParams:Ljava/util/Map;
      36: aload_0
      37: aload         4
      39: putfield      #12                 // Field shutdownOnCriticalIO:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$ShutdownOnCriticalErrorListener;
      42: aload_0
      43: aload         5
      45: putfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      48: aload_0
      49: getfield      #10                 // Field backupSyncLatch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      52: iconst_1
      53: invokevirtual #13                 // Method org/apache/activemq/artemis/utils/ReusableLatch.setCount:(I)V
      56: return

  public void init() throws java.lang.Exception;
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
      10: ifnull        21
      13: new           #15                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      25: invokevirtual #17                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.resetNodeManager:()V
      28: aload_0
      29: iconst_0
      30: putfield      #7                  // Field backupUpToDate:Z
      33: aload_0
      34: new           #18                 // class org/apache/activemq/artemis/core/replication/ReplicationEndpoint
      37: dup
      38: aload_0
      39: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      42: aload_0
      43: getfield      #12                 // Field shutdownOnCriticalIO:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$ShutdownOnCriticalErrorListener;
      46: aload_0
      47: getfield      #2                  // Field attemptFailBack:Z
      50: aload_0
      51: invokespecial #19                 // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint."<init>":(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;Lorg/apache/activemq/artemis/core/io/IOCriticalErrorListener;ZLorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;)V
      54: putfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
      57: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      11: getstatic     #20                 // Field org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE.STARTED:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
      14: invokevirtual #21                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.setState:(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;)V
      17: aload_1
      18: monitorexit
      19: goto          27
      22: astore_2
      23: aload_1
      24: monitorexit
      25: aload_2
      26: athrow
      27: aload_0
      28: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      31: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      34: invokevirtual #23                 // Method org/apache/activemq/artemis/core/server/NodeManager.stop:()V
      37: aload_0
      38: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      41: invokevirtual #24                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.moveServerData:()V
      44: aload_0
      45: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      48: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      51: invokevirtual #25                 // Method org/apache/activemq/artemis/core/server/NodeManager.start:()V
      54: aload_0
      55: dup
      56: astore_1
      57: monitorenter
      58: aload_0
      59: getfield      #26                 // Field closed:Z
      62: ifeq          68
      65: aload_1
      66: monitorexit
      67: return
      68: aload_1
      69: monitorexit
      70: goto          78
      73: astore_3
      74: aload_1
      75: monitorexit
      76: aload_3
      77: athrow
      78: aload_0
      79: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      82: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      85: ifnull        105
      88: aload_0
      89: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      92: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      95: invokevirtual #28                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy.isEnabled:()Z
      98: ifeq          105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: istore_1
     107: aload_0
     108: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     111: iload_1
     112: invokevirtual #29                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart1:(Z)Z
     115: ifne          119
     118: return
     119: aload_0
     120: dup
     121: astore_2
     122: monitorenter
     123: aload_0
     124: getfield      #26                 // Field closed:Z
     127: ifeq          133
     130: aload_2
     131: monitorexit
     132: return
     133: aload_0
     134: new           #30                 // class org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum
     137: dup
     138: aload_0
     139: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     142: invokevirtual #31                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getStorageManager:()Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     145: aload_0
     146: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     149: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
     152: aload_0
     153: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     156: invokevirtual #32                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getScheduledPool:()Ljava/util/concurrent/ScheduledExecutorService;
     159: invokespecial #33                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum."<init>":(Lorg/apache/activemq/artemis/core/persistence/StorageManager;Lorg/apache/activemq/artemis/core/server/NodeManager;Ljava/util/concurrent/ScheduledExecutorService;)V
     162: putfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     165: aload_0
     166: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     169: invokevirtual #34                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
     172: invokevirtual #35                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.getQuorumManager:()Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
     175: aload_0
     176: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     179: invokevirtual #36                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.registerQuorum:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/Quorum;)V
     182: aload_2
     183: monitorexit
     184: goto          194
     187: astore        4
     189: aload_2
     190: monitorexit
     191: aload         4
     193: athrow
     194: aload_0
     195: getfield      #11                 // Field activationParams:Ljava/util/Map;
     198: ldc           #38                 // String REPLICATION_ENDPOINT
     200: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     205: ifnull        259
     208: aload_0
     209: getfield      #11                 // Field activationParams:Ljava/util/Map;
     212: ldc           #38                 // String REPLICATION_ENDPOINT
     214: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     219: checkcast     #40                 // class org/apache/activemq/artemis/api/core/client/TopologyMember
     222: astore_3
     223: new           #41                 // class org/apache/activemq/artemis/core/server/impl/NamedNodeIdNodeLocator
     226: dup
     227: aload_3
     228: invokeinterface #42,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getNodeId:()Ljava/lang/String;
     233: new           #43                 // class org/apache/activemq/artemis/api/core/Pair
     236: dup
     237: aload_3
     238: invokeinterface #44,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getLive:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     243: aload_3
     244: invokeinterface #45,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/TopologyMember.getBackup:()Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
     249: invokespecial #46                 // Method org/apache/activemq/artemis/api/core/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     252: invokespecial #47                 // Method org/apache/activemq/artemis/core/server/impl/NamedNodeIdNodeLocator."<init>":(Ljava/lang/String;Lorg/apache/activemq/artemis/api/core/Pair;)V
     255: astore_2
     256: goto          306
     259: aload_0
     260: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
     263: invokevirtual #48                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getGroupName:()Ljava/lang/String;
     266: ifnonnull     287
     269: new           #49                 // class org/apache/activemq/artemis/core/server/impl/AnyLiveNodeLocatorForReplication
     272: dup
     273: aload_0
     274: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     277: aload_0
     278: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     281: invokespecial #50                 // Method org/apache/activemq/artemis/core/server/impl/AnyLiveNodeLocatorForReplication."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;)V
     284: goto          305
     287: new           #51                 // class org/apache/activemq/artemis/core/server/impl/NamedLiveNodeLocatorForReplication
     290: dup
     291: aload_0
     292: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
     295: invokevirtual #48                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getGroupName:()Ljava/lang/String;
     298: aload_0
     299: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     302: invokespecial #52                 // Method org/apache/activemq/artemis/core/server/impl/NamedLiveNodeLocatorForReplication."<init>":(Ljava/lang/String;Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;)V
     305: astore_2
     306: aload_0
     307: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     310: invokevirtual #34                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
     313: invokevirtual #53                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.getClusterController:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
     316: astore_3
     317: aload_3
     318: aload_2
     319: invokevirtual #54                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.addClusterTopologyListenerForReplication:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)V
     322: aload_3
     323: invokevirtual #55                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.awaitConnectionToReplicationCluster:()V
     326: aload_3
     327: new           #56                 // class org/apache/activemq/artemis/core/server/impl/ReplicationError
     330: dup
     331: aload_0
     332: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     335: aload_2
     336: invokespecial #57                 // Method org/apache/activemq/artemis/core/server/impl/ReplicationError."<init>":(Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Lorg/apache/activemq/artemis/core/server/LiveNodeLocator;)V
     339: invokevirtual #58                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.addIncomingInterceptorForReplication:(Lorg/apache/activemq/artemis/api/core/Interceptor;)V
     342: aload_0
     343: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     346: invokevirtual #59                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getBackupManager:()Lorg/apache/activemq/artemis/core/server/cluster/BackupManager;
     349: invokevirtual #60                 // Method org/apache/activemq/artemis/core/server/cluster/BackupManager.start:()V
     352: aload_0
     353: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
     356: aload_0
     357: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     360: invokevirtual #61                 // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint.setBackupQuorum:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;)V
     363: aload_0
     364: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
     367: aload_0
     368: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     371: invokevirtual #62                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getExecutorFactory:()Lorg/apache/activemq/artemis/utils/ExecutorFactory;
     374: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/utils/ExecutorFactory.getExecutor:()Ljava/util/concurrent/Executor;
     379: invokevirtual #64                 // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint.setExecutor:(Ljava/util/concurrent/Executor;)V
     382: new           #65                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation$EndpointConnector
     385: dup
     386: aload_0
     387: aconst_null
     388: invokespecial #66                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation$EndpointConnector."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation$1;)V
     391: astore        4
     393: getstatic     #67                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     396: aload_0
     397: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     400: invokevirtual #68                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getVersion:()Lorg/apache/activemq/artemis/core/version/Version;
     403: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/core/version/Version.getFullVersion:()Ljava/lang/String;
     408: aload_0
     409: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     412: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
     415: invokevirtual #70                 // Method org/apache/activemq/artemis/core/server/NodeManager.getNodeId:()Lorg/apache/activemq/artemis/api/core/SimpleString;
     418: invokeinterface #71,  3           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.backupServerStarted:(Ljava/lang/String;Lorg/apache/activemq/artemis/api/core/SimpleString;)V
     423: aload_0
     424: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     427: getstatic     #20                 // Field org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE.STARTED:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
     430: invokevirtual #21                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.setState:(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;)V
     433: aload_2
     434: invokevirtual #72                 // Method org/apache/activemq/artemis/core/server/LiveNodeLocator.locateNode:()V
     437: aload_0
     438: getfield      #26                 // Field closed:Z
     441: ifeq          445
     444: return
     445: aload_2
     446: invokevirtual #73                 // Method org/apache/activemq/artemis/core/server/LiveNodeLocator.getLiveConfiguration:()Lorg/apache/activemq/artemis/api/core/Pair;
     449: astore        6
     451: aload_0
     452: aload_2
     453: invokevirtual #74                 // Method org/apache/activemq/artemis/core/server/LiveNodeLocator.getNodeID:()Ljava/lang/String;
     456: putfield      #75                 // Field nodeID:Ljava/lang/String;
     459: aload_0
     460: getfield      #2                  // Field attemptFailBack:Z
     463: ifne          497
     466: aload_0
     467: getfield      #75                 // Field nodeID:Ljava/lang/String;
     470: ifnonnull     483
     473: new           #76                 // class java/lang/RuntimeException
     476: dup
     477: ldc           #77                 // String Could not establish the connection
     479: invokespecial #78                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     482: athrow
     483: aload_0
     484: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     487: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
     490: aload_0
     491: getfield      #75                 // Field nodeID:Ljava/lang/String;
     494: invokevirtual #79                 // Method org/apache/activemq/artemis/core/server/NodeManager.setNodeID:(Ljava/lang/String;)V
     497: aload_0
     498: aload_3
     499: aload         6
     501: invokevirtual #80                 // Method org/apache/activemq/artemis/api/core/Pair.getA:()Ljava/lang/Object;
     504: checkcast     #81                 // class org/apache/activemq/artemis/api/core/TransportConfiguration
     507: invokevirtual #82                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.connectToNodeInReplicatedCluster:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
     510: putfield      #83                 // Field clusterControl:Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
     513: goto          552
     516: astore        7
     518: aload         6
     520: invokevirtual #85                 // Method org/apache/activemq/artemis/api/core/Pair.getB:()Ljava/lang/Object;
     523: ifnull        552
     526: aload_0
     527: aload_3
     528: aload         6
     530: invokevirtual #85                 // Method org/apache/activemq/artemis/api/core/Pair.getB:()Ljava/lang/Object;
     533: checkcast     #81                 // class org/apache/activemq/artemis/api/core/TransportConfiguration
     536: invokevirtual #82                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.connectToNodeInReplicatedCluster:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
     539: putfield      #83                 // Field clusterControl:Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
     542: goto          552
     545: astore        8
     547: aload_0
     548: aconst_null
     549: putfield      #83                 // Field clusterControl:Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
     552: aload_0
     553: getfield      #83                 // Field clusterControl:Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
     556: ifnonnull     574
     559: aload_3
     560: invokevirtual #86                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.getRetryIntervalForReplicatedCluster:()J
     563: invokestatic  #87                 // Method java/lang/Thread.sleep:(J)V
     566: getstatic     #88                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.ALREADY_REPLICATING:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
     569: astore        5
     571: goto          709
     574: aload_0
     575: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     578: invokevirtual #89                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getThreadPool:()Ljava/util/concurrent/ExecutorService;
     581: aload         4
     583: invokeinterface #90,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     588: aload_0
     589: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     592: invokevirtual #91                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum.waitForStatusChange:()Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
     595: astore        5
     597: aload_0
     598: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
     601: invokestatic  #92                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.stopComponent:(Lorg/apache/activemq/artemis/core/server/ActiveMQComponent;)V
     604: aload_0
     605: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     608: invokevirtual #93                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.isStarted:()Z
     611: ifeq          622
     614: aload         5
     616: getstatic     #94                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.STOP:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
     619: if_acmpne     623
     622: return
     623: aload         5
     625: getstatic     #95                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.FAIL_OVER:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
     628: if_acmpne     634
     631: goto          717
     634: aload         5
     636: getstatic     #96                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.FAILURE_REPLICATING:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
     639: if_acmpne     665
     642: new           #97                 // class java/lang/Thread
     645: dup
     646: new           #98                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation$1
     649: dup
     650: aload_0
     651: invokespecial #99                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation$1."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation;)V
     654: invokespecial #100                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
     657: astore        7
     659: aload         7
     661: invokevirtual #101                // Method java/lang/Thread.start:()V
     664: return
     665: aload_0
     666: getfield      #83                 // Field clusterControl:Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
     669: invokevirtual #102                // Method org/apache/activemq/artemis/core/server/cluster/ClusterControl.close:()V
     672: aload_0
     673: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     676: invokevirtual #103                // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum.reset:()V
     679: aload_0
     680: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
     683: invokevirtual #104                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint.getChannel:()Lorg/apache/activemq/artemis/core/protocol/core/Channel;
     686: ifnull        709
     689: aload_0
     690: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
     693: invokevirtual #104                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint.getChannel:()Lorg/apache/activemq/artemis/core/protocol/core/Channel;
     696: invokeinterface #105,  1          // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.close:()V
     701: aload_0
     702: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
     705: aconst_null
     706: invokevirtual #106                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint.setChannel:(Lorg/apache/activemq/artemis/core/protocol/core/Channel;)V
     709: aload         5
     711: getstatic     #88                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.ALREADY_REPLICATING:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
     714: if_acmpeq     433
     717: aload_0
     718: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     721: invokevirtual #34                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
     724: invokevirtual #35                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.getQuorumManager:()Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
     727: aload_0
     728: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
     731: invokevirtual #107                // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.unRegisterQuorum:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/Quorum;)V
     734: aload_0
     735: invokevirtual #108                // Method isRemoteBackupUpToDate:()Z
     738: ifne          750
     741: getstatic     #109                // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
     744: invokeinterface #110,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.backupServerNotInSync:()Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
     749: athrow
     750: aload_0
     751: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
     754: invokevirtual #111                // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getReplicatedPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
     757: aload_0
     758: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
     761: invokevirtual #112                // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy.setReplicaPolicy:(Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;)V
     764: aload_0
     765: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     768: aload_0
     769: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
     772: invokevirtual #111                // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getReplicatedPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
     775: invokevirtual #113                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.setHAPolicy:(Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;)V
     778: aload_0
     779: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     782: dup
     783: astore        6
     785: monitorenter
     786: aload_0
     787: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     790: invokevirtual #93                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.isStarted:()Z
     793: ifne          800
     796: aload         6
     798: monitorexit
     799: return
     800: getstatic     #67                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     803: aload_0
     804: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     807: invokeinterface #114,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.becomingLive:(Lorg/apache/activemq/artemis/core/server/ActiveMQServer;)V
     812: aload_0
     813: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     816: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
     819: invokevirtual #115                // Method org/apache/activemq/artemis/core/server/NodeManager.stopBackup:()V
     822: aload_0
     823: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     826: invokevirtual #31                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getStorageManager:()Lorg/apache/activemq/artemis/core/persistence/StorageManager;
     829: invokeinterface #116,  1          // InterfaceMethod org/apache/activemq/artemis/core/persistence/StorageManager.start:()V
     834: aload_0
     835: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     838: invokevirtual #59                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getBackupManager:()Lorg/apache/activemq/artemis/core/server/cluster/BackupManager;
     841: invokevirtual #117                // Method org/apache/activemq/artemis/core/server/cluster/BackupManager.activated:()V
     844: iload_1
     845: ifeq          859
     848: aload_0
     849: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     852: iconst_1
     853: invokevirtual #118                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart2:(Z)V
     856: goto          928
     859: aload_0
     860: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     863: new           #119                // class org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation
     866: dup
     867: aload_0
     868: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     871: aload_0
     872: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
     875: invokevirtual #111                // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getReplicatedPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
     878: invokespecial #120                // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation."<init>":(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;)V
     881: invokevirtual #121                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.setActivation:(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation;)V
     884: aload_0
     885: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     888: iconst_0
     889: invokevirtual #118                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart2:(Z)V
     892: aload_0
     893: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     896: invokevirtual #122                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getIdentity:()Ljava/lang/String;
     899: ifnull        920
     902: getstatic     #67                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     905: aload_0
     906: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     909: invokevirtual #122                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getIdentity:()Ljava/lang/String;
     912: invokeinterface #123,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.serverIsLive:(Ljava/lang/String;)V
     917: goto          928
     920: getstatic     #67                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     923: invokeinterface #124,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.serverIsLive:()V
     928: aload_0
     929: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     932: invokevirtual #125                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.completeActivation:()V
     935: aload         6
     937: monitorexit
     938: goto          949
     941: astore        9
     943: aload         6
     945: monitorexit
     946: aload         9
     948: athrow
     949: goto          991
     952: astore_1
     953: aload_1
     954: instanceof    #126                // class java/lang/InterruptedException
     957: ifne          967
     960: aload_1
     961: instanceof    #127                // class java/lang/IllegalStateException
     964: ifeq          978
     967: aload_0
     968: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     971: invokevirtual #93                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.isStarted:()Z
     974: ifne          978
     977: return
     978: getstatic     #67                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     981: aload_1
     982: invokeinterface #128,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.initializationError:(Ljava/lang/Throwable;)V
     987: aload_1
     988: invokevirtual #129                // Method java/lang/Exception.printStackTrace:()V
     991: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    25    22   any
          58    67    73   any
          68    70    73   any
          73    76    73   any
         123   132   187   any
         133   184   187   any
         187   191   187   any
         497   513   516   Class java/lang/Exception
         526   542   545   Class java/lang/Exception
         786   799   941   any
         800   938   941   any
         941   946   941   any
           0    67   952   Class java/lang/Exception
          68   118   952   Class java/lang/Exception
         119   132   952   Class java/lang/Exception
         133   444   952   Class java/lang/Exception
         445   622   952   Class java/lang/Exception
         623   664   952   Class java/lang/Exception
         665   799   952   Class java/lang/Exception
         800   949   952   Class java/lang/Exception

  public void close(boolean, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
       8: ifnull        21
      11: aload_0
      12: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
      15: getstatic     #94                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.STOP:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      18: invokevirtual #130                // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum.causeExit:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;)V
      21: aload_0
      22: aconst_null
      23: putfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
      26: aload_0
      27: iconst_1
      28: putfield      #26                 // Field closed:Z
      31: aload_3
      32: monitorexit
      33: goto          43
      36: astore        4
      38: aload_3
      39: monitorexit
      40: aload         4
      42: athrow
      43: aload_0
      44: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      47: invokevirtual #131                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getHAPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
      50: invokeinterface #132,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAPolicy.isBackup:()Z
      55: ifeq          82
      58: aload_0
      59: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      62: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      65: astore_3
      66: aload_0
      67: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      70: aload_3
      71: invokevirtual #133                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.interrupBackupThread:(Lorg/apache/activemq/artemis/core/server/NodeManager;)V
      74: aload_3
      75: ifnull        82
      78: aload_3
      79: invokevirtual #115                // Method org/apache/activemq/artemis/core/server/NodeManager.stopBackup:()V
      82: return
    Exception table:
       from    to  target type
           4    33    36   any
          36    40    36   any

  public void preStorageClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
       4: ifnull        14
       7: aload_0
       8: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
      11: invokevirtual #134                // Method org/apache/activemq/artemis/core/replication/ReplicationEndpoint.stop:()V
      14: return

  public org.apache.activemq.artemis.core.server.impl.JournalLoader createJournalLoader(org.apache.activemq.artemis.core.postoffice.PostOffice, org.apache.activemq.artemis.core.paging.PagingManager, org.apache.activemq.artemis.core.persistence.StorageManager, org.apache.activemq.artemis.core.server.QueueFactory, org.apache.activemq.artemis.core.server.NodeManager, org.apache.activemq.artemis.core.server.management.ManagementService, org.apache.activemq.artemis.core.server.group.GroupingHandler, org.apache.activemq.artemis.core.config.Configuration, org.apache.activemq.artemis.core.server.ActiveMQServer) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
       4: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
       7: ifnull        70
      10: aload_0
      11: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      14: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      17: invokevirtual #28                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy.isEnabled:()Z
      20: ifeq          70
      23: new           #135                // class org/apache/activemq/artemis/core/server/impl/BackupRecoveryJournalLoader
      26: dup
      27: aload_1
      28: aload_2
      29: aload_3
      30: aload         4
      32: aload         5
      34: aload         6
      36: aload         7
      38: aload         8
      40: aload         9
      42: aload_0
      43: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      46: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      49: aload_0
      50: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      53: invokestatic  #136                // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy.getScaleDownConnector:(Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;
      56: aload_0
      57: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      60: invokevirtual #34                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
      63: invokevirtual #53                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.getClusterController:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
      66: invokespecial #137                // Method org/apache/activemq/artemis/core/server/impl/BackupRecoveryJournalLoader."<init>":(Lorg/apache/activemq/artemis/core/postoffice/PostOffice;Lorg/apache/activemq/artemis/core/paging/PagingManager;Lorg/apache/activemq/artemis/core/persistence/StorageManager;Lorg/apache/activemq/artemis/core/server/QueueFactory;Lorg/apache/activemq/artemis/core/server/NodeManager;Lorg/apache/activemq/artemis/core/server/management/ManagementService;Lorg/apache/activemq/artemis/core/server/group/GroupingHandler;Lorg/apache/activemq/artemis/core/config/Configuration;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;)V
      69: areturn
      70: aload_0
      71: aload_1
      72: aload_2
      73: aload_3
      74: aload         4
      76: aload         5
      78: aload         6
      80: aload         7
      82: aload         8
      84: aload         9
      86: invokespecial #138                // Method org/apache/activemq/artemis/core/server/impl/Activation.createJournalLoader:(Lorg/apache/activemq/artemis/core/postoffice/PostOffice;Lorg/apache/activemq/artemis/core/paging/PagingManager;Lorg/apache/activemq/artemis/core/persistence/StorageManager;Lorg/apache/activemq/artemis/core/server/QueueFactory;Lorg/apache/activemq/artemis/core/server/NodeManager;Lorg/apache/activemq/artemis/core/server/management/ManagementService;Lorg/apache/activemq/artemis/core/server/group/GroupingHandler;Lorg/apache/activemq/artemis/core/config/Configuration;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;)Lorg/apache/activemq/artemis/core/server/impl/JournalLoader;
      89: areturn

  public void haStarted();
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: invokevirtual #34                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
       7: invokevirtual #53                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.getClusterController:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
      10: aload_0
      11: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      14: invokevirtual #139                // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.getClusterName:()Ljava/lang/String;
      17: invokevirtual #140                // Method org/apache/activemq/artemis/core/server/cluster/ClusterController.setReplicatedClusterName:(Ljava/lang/String;)V
      20: return

  public boolean waitForBackupSync(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field backupSyncLatch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
       4: lload_1
       5: aload_3
       6: invokevirtual #141                // Method org/apache/activemq/artemis/utils/ReusableLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
       9: ireturn

  public void failOver(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLiveIsStoppingMessage$LiveStopping);
    Code:
       0: aload_1
       1: ifnonnull     17
       4: aload_0
       5: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
       8: getstatic     #96                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.FAILURE_REPLICATING:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      11: invokevirtual #130                // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum.causeExit:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;)V
      14: goto          25
      17: aload_0
      18: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
      21: aload_1
      22: invokevirtual #142                // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum.failOver:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;)V
      25: return

  public org.apache.activemq.artemis.core.replication.ReplicationEndpoint getReplicationEndpoint();
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
       4: areturn

  public boolean isRemoteBackupUpToDate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field backupUpToDate:Z
       4: ireturn

  public void setRemoteBackupUpToDate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: invokevirtual #59                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getBackupManager:()Lorg/apache/activemq/artemis/core/server/cluster/BackupManager;
       7: invokevirtual #143                // Method org/apache/activemq/artemis/core/server/cluster/BackupManager.announceBackup:()V
      10: aload_0
      11: iconst_1
      12: putfield      #7                  // Field backupUpToDate:Z
      15: aload_0
      16: getfield      #10                 // Field backupSyncLatch:Lorg/apache/activemq/artemis/utils/ReusableLatch;
      19: invokevirtual #144                // Method org/apache/activemq/artemis/utils/ReusableLatch.countDown:()V
      22: return

  public void remoteFailOver(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLiveIsStoppingMessage$LiveStopping) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: getstatic     #67                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: new           #145                // class java/lang/StringBuilder
       6: dup
       7: invokespecial #146                // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #147                // String Remote fail-over, got message=
      12: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #150                // String , backupUpToDate=
      21: invokevirtual #148                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field backupUpToDate:Z
      28: invokevirtual #151                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      31: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokeinterface #153,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.trace:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      43: invokevirtual #131                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getHAPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
      46: invokeinterface #132,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAPolicy.isBackup:()Z
      51: ifeq          69
      54: aload_0
      55: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      58: invokevirtual #131                // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getHAPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
      61: invokeinterface #154,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAPolicy.isSharedStore:()Z
      66: ifeq          77
      69: new           #155                // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
      72: dup
      73: invokespecial #156                // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":()V
      76: athrow
      77: aload_0
      78: getfield      #7                  // Field backupUpToDate:Z
      81: ifne          92
      84: aload_0
      85: aconst_null
      86: invokevirtual #157                // Method failOver:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;)V
      89: goto          97
      92: aload_0
      93: aload_1
      94: invokevirtual #157                // Method failOver:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;)V
      97: return

  static org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl access$100(org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation);
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: areturn

  static org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum access$200(org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backupQuorum:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;
       4: areturn

  static org.apache.activemq.artemis.core.replication.ReplicationEndpoint access$300(org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationEndpoint:Lorg/apache/activemq/artemis/core/replication/ReplicationEndpoint;
       4: areturn

  static boolean access$400(org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field attemptFailBack:Z
       4: ireturn

  static org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy access$500(org.apache.activemq.artemis.core.server.impl.SharedNothingBackupActivation);
    Code:
       0: aload_0
       1: getfield      #1                  // Field replicaPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
       4: areturn

  static {};
    Code:
       0: ldc           #158                // class org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation
       2: invokevirtual #159                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #14                 // Field $assertionsDisabled:Z
      16: return
}
