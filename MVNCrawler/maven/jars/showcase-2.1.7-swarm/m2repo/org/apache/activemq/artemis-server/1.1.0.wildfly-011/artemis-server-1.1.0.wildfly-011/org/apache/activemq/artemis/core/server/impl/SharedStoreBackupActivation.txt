Compiled from "SharedStoreBackupActivation.java"
public final class org.apache.activemq.artemis.core.server.impl.SharedStoreBackupActivation extends org.apache.activemq.artemis.core.server.impl.Activation {
  private org.apache.activemq.artemis.core.server.cluster.ha.SharedStoreSlavePolicy sharedStoreSlavePolicy;

  private org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl activeMQServer;

  private final java.lang.Object failbackCheckerGuard;

  private boolean cancelFailBackChecker;

  public org.apache.activemq.artemis.core.server.impl.SharedStoreBackupActivation(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, org.apache.activemq.artemis.core.server.cluster.ha.SharedStoreSlavePolicy);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/activemq/artemis/core/server/impl/Activation."<init>":()V
       4: aload_0
       5: new           #6                  // class java/lang/Object
       8: dup
       9: invokespecial #7                  // Method java/lang/Object."<init>":()V
      12: putfield      #2                  // Field failbackCheckerGuard:Ljava/lang/Object;
      15: aload_0
      16: aload_1
      17: putfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      20: aload_0
      21: aload_2
      22: putfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
      25: aload_0
      26: getfield      #2                  // Field failbackCheckerGuard:Ljava/lang/Object;
      29: dup
      30: astore_3
      31: monitorenter
      32: aload_0
      33: iconst_0
      34: putfield      #1                  // Field cancelFailBackChecker:Z
      37: aload_3
      38: monitorexit
      39: goto          49
      42: astore        4
      44: aload_3
      45: monitorexit
      46: aload         4
      48: athrow
      49: return
    Exception table:
       from    to  target type
          32    39    42   any
          42    46    42   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: invokevirtual #8                  // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
       7: invokevirtual #9                  // Method org/apache/activemq/artemis/core/server/NodeManager.startBackup:()V
      10: aload_0
      11: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
      14: invokevirtual #10                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      17: astore_1
      18: aload_1
      19: ifnull        33
      22: aload_1
      23: invokevirtual #11                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy.isEnabled:()Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: istore_2
      35: aload_0
      36: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      39: iload_2
      40: invokevirtual #12                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart1:(Z)Z
      43: ifne          47
      46: return
      47: aload_0
      48: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      51: invokevirtual #13                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getBackupManager:()Lorg/apache/activemq/artemis/core/server/cluster/BackupManager;
      54: invokevirtual #14                 // Method org/apache/activemq/artemis/core/server/cluster/BackupManager.start:()V
      57: aload_0
      58: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      61: getstatic     #15                 // Field org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE.STARTED:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
      64: invokevirtual #16                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.setState:(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;)V
      67: getstatic     #17                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      70: aload_0
      71: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      74: invokevirtual #18                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getVersion:()Lorg/apache/activemq/artemis/core/version/Version;
      77: invokeinterface #19,  1           // InterfaceMethod org/apache/activemq/artemis/core/version/Version.getFullVersion:()Ljava/lang/String;
      82: aload_0
      83: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      86: invokevirtual #8                  // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      89: invokevirtual #20                 // Method org/apache/activemq/artemis/core/server/NodeManager.getNodeId:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      92: invokeinterface #21,  3           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.backupServerStarted:(Ljava/lang/String;Lorg/apache/activemq/artemis/api/core/SimpleString;)V
      97: aload_0
      98: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     101: invokevirtual #8                  // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
     104: invokevirtual #22                 // Method org/apache/activemq/artemis/core/server/NodeManager.awaitLiveNode:()V
     107: aload_0
     108: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
     111: invokevirtual #23                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.getSharedStoreMasterPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy;
     114: aload_0
     115: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
     118: invokevirtual #24                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy.setSharedStoreSlavePolicy:(Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;)V
     121: aload_0
     122: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     125: aload_0
     126: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
     129: invokevirtual #23                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.getSharedStoreMasterPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreMasterPolicy;
     132: invokevirtual #25                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.setHAPolicy:(Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;)V
     135: aload_0
     136: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     139: invokevirtual #13                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getBackupManager:()Lorg/apache/activemq/artemis/core/server/cluster/BackupManager;
     142: invokevirtual #26                 // Method org/apache/activemq/artemis/core/server/cluster/BackupManager.activated:()V
     145: aload_0
     146: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     149: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getState:()Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
     152: getstatic     #15                 // Field org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE.STARTED:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$SERVER_STATE;
     155: if_acmpeq     159
     158: return
     159: aload_0
     160: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     163: iload_2
     164: invokevirtual #28                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart2:(Z)V
     167: aload_0
     168: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     171: invokevirtual #29                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.completeActivation:()V
     174: iload_2
     175: ifeq          207
     178: getstatic     #17                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     181: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.backupServerScaledDown:()V
     186: new           #31                 // class java/lang/Thread
     189: dup
     190: new           #32                 // class org/apache/activemq/artemis/core/server/impl/SharedStoreBackupActivation$1
     193: dup
     194: aload_0
     195: invokespecial #33                 // Method org/apache/activemq/artemis/core/server/impl/SharedStoreBackupActivation$1."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedStoreBackupActivation;)V
     198: invokespecial #34                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
     201: astore_3
     202: aload_3
     203: invokevirtual #35                 // Method java/lang/Thread.start:()V
     206: return
     207: getstatic     #17                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     210: invokeinterface #36,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.backupServerIsLive:()V
     215: aload_0
     216: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
     219: invokevirtual #8                  // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
     222: invokevirtual #37                 // Method org/apache/activemq/artemis/core/server/NodeManager.releaseBackup:()V
     225: aload_0
     226: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
     229: invokevirtual #38                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.isAllowAutoFailBack:()Z
     232: ifeq          239
     235: aload_0
     236: invokespecial #39                 // Method startFailbackChecker:()V
     239: goto          283
     242: astore_1
     243: goto          283
     246: astore_1
     247: goto          283
     250: astore_1
     251: aload_1
     252: invokevirtual #43                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     255: instanceof    #40                 // class java/lang/InterruptedException
     258: ifne          270
     261: getstatic     #17                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     264: aload_1
     265: invokeinterface #44,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.initializationError:(Ljava/lang/Throwable;)V
     270: goto          283
     273: astore_1
     274: getstatic     #17                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     277: aload_1
     278: invokeinterface #44,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.initializationError:(Ljava/lang/Throwable;)V
     283: return
    Exception table:
       from    to  target type
           0    46   242   Class java/lang/InterruptedException
          47   158   242   Class java/lang/InterruptedException
         159   206   242   Class java/lang/InterruptedException
         207   239   242   Class java/lang/InterruptedException
           0    46   246   Class java/nio/channels/ClosedChannelException
          47   158   246   Class java/nio/channels/ClosedChannelException
         159   206   246   Class java/nio/channels/ClosedChannelException
         207   239   246   Class java/nio/channels/ClosedChannelException
           0    46   250   Class java/lang/Exception
          47   158   250   Class java/lang/Exception
         159   206   250   Class java/lang/Exception
         207   239   250   Class java/lang/Exception
           0    46   273   Class java/lang/Throwable
          47   158   273   Class java/lang/Throwable
         159   206   273   Class java/lang/Throwable
         207   239   273   Class java/lang/Throwable

  public void close(boolean, boolean) throws java.lang.Exception;
    Code:
       0: iload_2
       1: ifne          28
       4: aload_0
       5: getfield      #2                  // Field failbackCheckerGuard:Ljava/lang/Object;
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: iconst_1
      13: putfield      #1                  // Field cancelFailBackChecker:Z
      16: aload_3
      17: monitorexit
      18: goto          28
      21: astore        4
      23: aload_3
      24: monitorexit
      25: aload         4
      27: athrow
      28: aload_0
      29: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      32: invokevirtual #8                  // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      35: astore_3
      36: aload_0
      37: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      40: invokevirtual #46                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getHAPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;
      43: invokeinterface #47,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/cluster/ha/HAPolicy.isBackup:()Z
      48: ifeq          70
      51: aload_0
      52: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      55: aload_3
      56: invokevirtual #48                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.interrupBackupThread:(Lorg/apache/activemq/artemis/core/server/NodeManager;)V
      59: aload_3
      60: ifnull        99
      63: aload_3
      64: invokevirtual #49                 // Method org/apache/activemq/artemis/core/server/NodeManager.stopBackup:()V
      67: goto          99
      70: aload_3
      71: ifnull        99
      74: aload_0
      75: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
      78: invokevirtual #50                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.isFailoverOnServerShutdown:()Z
      81: ifne          88
      84: iload_1
      85: ifeq          95
      88: aload_3
      89: invokevirtual #51                 // Method org/apache/activemq/artemis/core/server/NodeManager.crashLiveServer:()V
      92: goto          99
      95: aload_3
      96: invokevirtual #52                 // Method org/apache/activemq/artemis/core/server/NodeManager.pauseLiveServer:()V
      99: return
    Exception table:
       from    to  target type
          11    18    21   any
          21    25    21   any

  public org.apache.activemq.artemis.core.server.impl.JournalLoader createJournalLoader(org.apache.activemq.artemis.core.postoffice.PostOffice, org.apache.activemq.artemis.core.paging.PagingManager, org.apache.activemq.artemis.core.persistence.StorageManager, org.apache.activemq.artemis.core.server.QueueFactory, org.apache.activemq.artemis.core.server.NodeManager, org.apache.activemq.artemis.core.server.management.ManagementService, org.apache.activemq.artemis.core.server.group.GroupingHandler, org.apache.activemq.artemis.core.config.Configuration, org.apache.activemq.artemis.core.server.ActiveMQServer) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
       4: invokevirtual #10                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
       7: ifnull        70
      10: aload_0
      11: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
      14: invokevirtual #10                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      17: invokevirtual #11                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy.isEnabled:()Z
      20: ifeq          70
      23: new           #53                 // class org/apache/activemq/artemis/core/server/impl/BackupRecoveryJournalLoader
      26: dup
      27: aload_1
      28: aload_2
      29: aload_3
      30: aload         4
      32: aload         5
      34: aload         6
      36: aload         7
      38: aload         8
      40: aload         9
      42: aload_0
      43: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
      46: invokevirtual #10                 // Method org/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy.getScaleDownPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      49: aload_0
      50: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      53: invokestatic  #54                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy.getScaleDownConnector:(Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;
      56: aload_0
      57: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      60: invokevirtual #55                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getClusterManager:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterManager;
      63: invokevirtual #56                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterManager.getClusterController:()Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;
      66: invokespecial #57                 // Method org/apache/activemq/artemis/core/server/impl/BackupRecoveryJournalLoader."<init>":(Lorg/apache/activemq/artemis/core/postoffice/PostOffice;Lorg/apache/activemq/artemis/core/paging/PagingManager;Lorg/apache/activemq/artemis/core/persistence/StorageManager;Lorg/apache/activemq/artemis/core/server/QueueFactory;Lorg/apache/activemq/artemis/core/server/NodeManager;Lorg/apache/activemq/artemis/core/server/management/ManagementService;Lorg/apache/activemq/artemis/core/server/group/GroupingHandler;Lorg/apache/activemq/artemis/core/config/Configuration;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;)V
      69: areturn
      70: aload_0
      71: aload_1
      72: aload_2
      73: aload_3
      74: aload         4
      76: aload         5
      78: aload         6
      80: aload         7
      82: aload         8
      84: aload         9
      86: invokespecial #58                 // Method org/apache/activemq/artemis/core/server/impl/Activation.createJournalLoader:(Lorg/apache/activemq/artemis/core/postoffice/PostOffice;Lorg/apache/activemq/artemis/core/paging/PagingManager;Lorg/apache/activemq/artemis/core/persistence/StorageManager;Lorg/apache/activemq/artemis/core/server/QueueFactory;Lorg/apache/activemq/artemis/core/server/NodeManager;Lorg/apache/activemq/artemis/core/server/management/ManagementService;Lorg/apache/activemq/artemis/core/server/group/GroupingHandler;Lorg/apache/activemq/artemis/core/config/Configuration;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;)Lorg/apache/activemq/artemis/core/server/impl/JournalLoader;
      89: areturn

  private void startFailbackChecker();
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: invokevirtual #59                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getScheduledPool:()Ljava/util/concurrent/ScheduledExecutorService;
       7: new           #60                 // class org/apache/activemq/artemis/core/server/impl/SharedStoreBackupActivation$FailbackChecker
      10: dup
      11: aload_0
      12: invokespecial #61                 // Method org/apache/activemq/artemis/core/server/impl/SharedStoreBackupActivation$FailbackChecker."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedStoreBackupActivation;)V
      15: ldc2_w        #62                 // long 1000l
      18: ldc2_w        #62                 // long 1000l
      21: getstatic     #64                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      24: invokeinterface #65,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      29: pop
      30: return

  static org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl access$000(org.apache.activemq.artemis.core.server.impl.SharedStoreBackupActivation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: areturn

  static org.apache.activemq.artemis.core.server.cluster.ha.SharedStoreSlavePolicy access$100(org.apache.activemq.artemis.core.server.impl.SharedStoreBackupActivation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sharedStoreSlavePolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/SharedStoreSlavePolicy;
       4: areturn

  static java.lang.Object access$200(org.apache.activemq.artemis.core.server.impl.SharedStoreBackupActivation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field failbackCheckerGuard:Ljava/lang/Object;
       4: areturn

  static boolean access$300(org.apache.activemq.artemis.core.server.impl.SharedStoreBackupActivation);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cancelFailBackChecker:Z
       4: ireturn
}
