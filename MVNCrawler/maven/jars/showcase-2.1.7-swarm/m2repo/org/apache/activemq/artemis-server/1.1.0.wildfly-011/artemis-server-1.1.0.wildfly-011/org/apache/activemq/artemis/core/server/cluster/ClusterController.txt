Compiled from "ClusterController.java"
public class org.apache.activemq.artemis.core.server.cluster.ClusterController implements org.apache.activemq.artemis.core.server.ActiveMQComponent {
  private static final boolean isTrace;

  private final org.apache.activemq.artemis.core.server.cluster.qourum.QuorumManager quorumManager;

  private final org.apache.activemq.artemis.core.server.ActiveMQServer server;

  private java.util.Map<org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal> locators;

  private org.apache.activemq.artemis.api.core.SimpleString defaultClusterConnectionName;

  private org.apache.activemq.artemis.api.core.client.ServerLocator defaultLocator;

  private org.apache.activemq.artemis.api.core.client.ServerLocator replicationLocator;

  private final java.util.concurrent.Executor executor;

  private java.util.concurrent.CountDownLatch replicationClusterConnectedLatch;

  private boolean started;

  private org.apache.activemq.artemis.api.core.SimpleString replicatedClusterName;

  public org.apache.activemq.artemis.core.server.cluster.ClusterController(org.apache.activemq.artemis.core.server.ActiveMQServer, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/HashMap
       8: dup
       9: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      12: putfield      #10                 // Field locators:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      20: aload_0
      21: aload_1
      22: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getExecutorFactory:()Lorg/apache/activemq/artemis/utils/ExecutorFactory;
      27: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/artemis/utils/ExecutorFactory.getExecutor:()Ljava/util/concurrent/Executor;
      32: putfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
      35: aload_0
      36: new           #14                 // class org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager
      39: dup
      40: aload_2
      41: aload_0
      42: invokespecial #15                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager."<init>":(Ljava/util/concurrent/ExecutorService;Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;)V
      45: putfield      #4                  // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
      48: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field started:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: aload_0
      10: getfield      #10                 // Field locators:Ljava/util/Map;
      13: aload_0
      14: getfield      #16                 // Field defaultClusterConnectionName:Lorg/apache/activemq/artemis/api/core/SimpleString;
      17: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #18                 // class org/apache/activemq/artemis/api/core/client/ServerLocator
      25: putfield      #19                 // Field defaultLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      28: aload_0
      29: getfield      #20                 // Field replicatedClusterName:Lorg/apache/activemq/artemis/api/core/SimpleString;
      32: ifnull        95
      35: aload_0
      36: getfield      #20                 // Field replicatedClusterName:Lorg/apache/activemq/artemis/api/core/SimpleString;
      39: aload_0
      40: getfield      #16                 // Field defaultClusterConnectionName:Lorg/apache/activemq/artemis/api/core/SimpleString;
      43: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/SimpleString.equals:(Ljava/lang/Object;)Z
      46: ifne          95
      49: aload_0
      50: aload_0
      51: getfield      #10                 // Field locators:Ljava/util/Map;
      54: aload_0
      55: getfield      #20                 // Field replicatedClusterName:Lorg/apache/activemq/artemis/api/core/SimpleString;
      58: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #18                 // class org/apache/activemq/artemis/api/core/client/ServerLocator
      66: putfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      69: aload_0
      70: getfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      73: ifnonnull     103
      76: getstatic     #22                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      79: invokeinterface #23,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.noClusterConnectionForReplicationCluster:()V
      84: aload_0
      85: aload_0
      86: getfield      #19                 // Field defaultLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      89: putfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      92: goto          103
      95: aload_0
      96: aload_0
      97: getfield      #19                 // Field defaultLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     100: putfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     103: aload_0
     104: new           #24                 // class java/util/concurrent/CountDownLatch
     107: dup
     108: iconst_1
     109: invokespecial #25                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
     112: putfield      #2                  // Field replicationClusterConnectedLatch:Ljava/util/concurrent/CountDownLatch;
     115: aload_0
     116: getfield      #19                 // Field defaultLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     119: aload_0
     120: getfield      #4                  // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
     123: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.addClusterTopologyListener:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     128: pop
     129: aload_0
     130: getfield      #4                  // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
     133: invokevirtual #27                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.start:()V
     136: aload_0
     137: iconst_1
     138: putfield      #1                  // Field started:Z
     141: aload_0
     142: getfield      #10                 // Field locators:Ljava/util/Map;
     145: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     150: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     155: astore_1
     156: aload_1
     157: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     162: ifeq          205
     165: aload_1
     166: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     171: checkcast     #32                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
     174: astore_2
     175: aload_2
     176: invokeinterface #33,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.isConnectable:()Z
     181: ifeq          202
     184: aload_0
     185: getfield      #13                 // Field executor:Ljava/util/concurrent/Executor;
     188: new           #34                 // class org/apache/activemq/artemis/core/server/cluster/ClusterController$ConnectRunnable
     191: dup
     192: aload_0
     193: aload_2
     194: invokespecial #35                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController$ConnectRunnable."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;)V
     197: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     202: goto          156
     205: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field locators:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          43
      24: aload_1
      25: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #32                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
      33: astore_2
      34: aload_2
      35: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.close:()V
      40: goto          15
      43: aload_0
      44: getfield      #4                  // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
      47: invokevirtual #38                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.stop:()V
      50: aload_0
      51: iconst_0
      52: putfield      #1                  // Field started:Z
      55: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #1                  // Field started:Z
       4: ireturn

  public org.apache.activemq.artemis.core.server.cluster.qourum.QuorumManager getQuorumManager();
    Code:
       0: aload_0
       1: getfield      #4                  // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
       4: areturn

  public void setDefaultClusterConnectionName(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field defaultClusterConnectionName:Lorg/apache/activemq/artemis/api/core/SimpleString;
       5: return

  public void addClusterConnection(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration, org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration);
    Code:
       0: aload_2
       1: invokestatic  #39                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: checkcast     #40                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       7: astore        4
       9: aload_0
      10: aload_1
      11: aload         4
      13: aload_3
      14: invokespecial #41                 // Method configAndAdd:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;)V
      17: return

  public void addClusterConnection(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.TransportConfiguration[], org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration);
    Code:
       0: aload_2
       1: invokestatic  #42                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:([Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: checkcast     #40                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorImpl
       7: astore        4
       9: aload_0
      10: aload_1
      11: aload         4
      13: aload_3
      14: invokespecial #41                 // Method configAndAdd:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;)V
      17: return

  private void configAndAdd(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal, org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration);
    Code:
       0: aload_2
       1: aload_3
       2: invokevirtual #43                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getConnectionTTL:()J
       5: invokeinterface #44,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setConnectionTTL:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      10: pop
      11: aload_2
      12: aload_3
      13: invokevirtual #45                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getClientFailureCheckPeriod:()J
      16: invokeinterface #46,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setClientFailureCheckPeriod:(J)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      21: pop
      22: aload_2
      23: iconst_m1
      24: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setReconnectAttempts:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      29: pop
      30: aload_2
      31: iconst_m1
      32: invokeinterface #48,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setInitialConnectAttempts:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      37: pop
      38: aload_2
      39: aload_2
      40: invokestatic  #49                 // Method org/apache/activemq/artemis/core/server/cluster/ActiveMQServerSideProtocolManagerFactory.getInstance:(Lorg/apache/activemq/artemis/api/core/client/ServerLocator;)Lorg/apache/activemq/artemis/core/server/cluster/ActiveMQServerSideProtocolManagerFactory;
      43: invokeinterface #50,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setProtocolManagerFactory:(Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      48: pop
      49: aload_0
      50: getfield      #10                 // Field locators:Ljava/util/Map;
      53: aload_1
      54: aload_2
      55: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: return

  public void addClusterTopologyListenerForReplication(org.apache.activemq.artemis.api.core.client.ClusterTopologyListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.addClusterTopologyListener:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      10: pop
      11: return

  public void addIncomingInterceptorForReplication(org.apache.activemq.artemis.api.core.Interceptor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.addIncomingInterceptor:(Lorg/apache/activemq/artemis/api/core/Interceptor;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      10: pop
      11: return

  public org.apache.activemq.artemis.core.server.cluster.ClusterControl connectToNode(org.apache.activemq.artemis.api.core.TransportConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #19                 // Field defaultLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: aload_1
       5: iconst_0
       6: iconst_0
       7: invokeinterface #53,  4           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.createSessionFactory:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;IZ)Lorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;
      12: checkcast     #54                 // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #55                 // Method connectToNodeInCluster:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
      21: areturn

  public org.apache.activemq.artemis.core.server.cluster.ClusterControl connectToNodeInReplicatedCluster(org.apache.activemq.artemis.api.core.TransportConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: aload_1
       5: iconst_0
       6: iconst_0
       7: invokeinterface #53,  4           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.createSessionFactory:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;IZ)Lorg/apache/activemq/artemis/api/core/client/ClientSessionFactory;
      12: checkcast     #54                 // class org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #55                 // Method connectToNodeInCluster:(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;)Lorg/apache/activemq/artemis/core/server/cluster/ClusterControl;
      21: areturn

  public org.apache.activemq.artemis.core.server.cluster.ClusterControl connectToNodeInCluster(org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal);
    Code:
       0: aload_1
       1: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getServerLocator:()Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       6: aload_1
       7: invokeinterface #56,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getServerLocator:()Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      12: invokestatic  #49                 // Method org/apache/activemq/artemis/core/server/cluster/ActiveMQServerSideProtocolManagerFactory.getInstance:(Lorg/apache/activemq/artemis/api/core/client/ServerLocator;)Lorg/apache/activemq/artemis/core/server/cluster/ActiveMQServerSideProtocolManagerFactory;
      15: invokeinterface #57,  2           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.setProtocolManagerFactory:(Lorg/apache/activemq/artemis/spi/core/remoting/ClientProtocolManagerFactory;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      20: pop
      21: new           #58                 // class org/apache/activemq/artemis/core/server/cluster/ClusterControl
      24: dup
      25: aload_1
      26: aload_0
      27: getfield      #6                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      30: invokespecial #59                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterControl."<init>":(Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;)V
      33: areturn

  public long getRetryIntervalForReplicatedCluster();
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getRetryInterval:()J
       9: lreturn

  public void awaitConnectionToReplicationCluster() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field replicationClusterConnectedLatch:Ljava/util/concurrent/CountDownLatch;
       4: invokevirtual #61                 // Method java/util/concurrent/CountDownLatch.await:()V
       7: return

  public void addClusterChannelHandler(org.apache.activemq.artemis.core.protocol.core.Channel, org.apache.activemq.artemis.spi.core.remoting.Acceptor, org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection, org.apache.activemq.artemis.core.server.impl.Activation);
    Code:
       0: aload_1
       1: new           #62                 // class org/apache/activemq/artemis/core/server/cluster/ClusterController$ClusterControllerChannelHandler
       4: dup
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: aload         4
      11: aload_1
      12: aload_2
      13: invokevirtual #63                 // Method org/apache/activemq/artemis/core/server/impl/Activation.getActivationChannelHandler:(Lorg/apache/activemq/artemis/core/protocol/core/Channel;Lorg/apache/activemq/artemis/spi/core/remoting/Acceptor;)Lorg/apache/activemq/artemis/core/protocol/core/ChannelHandler;
      16: invokespecial #64                 // Method org/apache/activemq/artemis/core/server/cluster/ClusterController$ClusterControllerChannelHandler."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/ClusterController;Lorg/apache/activemq/artemis/core/protocol/core/Channel;Lorg/apache/activemq/artemis/spi/core/remoting/Acceptor;Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;Lorg/apache/activemq/artemis/core/protocol/core/ChannelHandler;)V
      19: invokeinterface #65,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/Channel.setHandler:(Lorg/apache/activemq/artemis/core/protocol/core/ChannelHandler;)V
      24: return

  public int getDefaultClusterSize();
    Code:
       0: aload_0
       1: getfield      #19                 // Field defaultLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getTopology:()Lorg/apache/activemq/artemis/core/client/impl/Topology;
       9: invokevirtual #67                 // Method org/apache/activemq/artemis/core/client/impl/Topology.getMembers:()Ljava/util/Collection;
      12: invokeinterface #68,  1           // InterfaceMethod java/util/Collection.size:()I
      17: ireturn

  public org.apache.activemq.artemis.core.client.impl.Topology getDefaultClusterTopology();
    Code:
       0: aload_0
       1: getfield      #19                 // Field defaultLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getTopology:()Lorg/apache/activemq/artemis/core/client/impl/Topology;
       9: areturn

  public org.apache.activemq.artemis.api.core.SimpleString getNodeID();
    Code:
       0: aload_0
       1: getfield      #6                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getNodeID:()Lorg/apache/activemq/artemis/api/core/SimpleString;
       9: areturn

  public java.lang.String getIdentity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #70,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getIdentity:()Ljava/lang/String;
       9: areturn

  public void setReplicatedClusterName(java.lang.String);
    Code:
       0: aload_0
       1: new           #71                 // class org/apache/activemq/artemis/api/core/SimpleString
       4: dup
       5: aload_1
       6: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
       9: putfield      #20                 // Field replicatedClusterName:Lorg/apache/activemq/artemis/api/core/SimpleString;
      12: return

  public org.apache.activemq.artemis.api.core.client.ServerLocator getReplicationLocator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: areturn

  static org.apache.activemq.artemis.core.server.ActiveMQServer access$000(org.apache.activemq.artemis.core.server.cluster.ClusterController);
    Code:
       0: aload_0
       1: getfield      #6                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: areturn

  static boolean access$100();
    Code:
       0: getstatic     #5                  // Field isTrace:Z
       3: ireturn

  static org.apache.activemq.artemis.core.server.cluster.qourum.QuorumManager access$200(org.apache.activemq.artemis.core.server.cluster.ClusterController);
    Code:
       0: aload_0
       1: getfield      #4                  // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
       4: areturn

  static org.apache.activemq.artemis.api.core.client.ServerLocator access$300(org.apache.activemq.artemis.core.server.cluster.ClusterController);
    Code:
       0: aload_0
       1: getfield      #3                  // Field replicationLocator:Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
       4: areturn

  static java.util.concurrent.CountDownLatch access$400(org.apache.activemq.artemis.core.server.cluster.ClusterController);
    Code:
       0: aload_0
       1: getfield      #2                  // Field replicationClusterConnectedLatch:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  static boolean access$500(org.apache.activemq.artemis.core.server.cluster.ClusterController);
    Code:
       0: aload_0
       1: getfield      #1                  // Field started:Z
       4: ireturn

  static {};
    Code:
       0: getstatic     #22                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
       3: invokeinterface #73,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.isTraceEnabled:()Z
       8: putstatic     #5                  // Field isTrace:Z
      11: return
}
