Compiled from "AIOSequentialFileFactory.java"
class org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$ReuseBuffersController {
  private volatile long bufferReuseLastTime;

  private final java.util.concurrent.ConcurrentLinkedQueue<java.nio.ByteBuffer> reuseBuffersQueue;

  private boolean stopped;

  final org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory this$0;

  private org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$ReuseBuffersController(org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #5                  // Method java/lang/System.currentTimeMillis:()J
      13: putfield      #6                  // Field bufferReuseLastTime:J
      16: aload_0
      17: new           #7                  // class java/util/concurrent/ConcurrentLinkedQueue
      20: dup
      21: invokespecial #8                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      24: putfield      #9                  // Field reuseBuffersQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      27: aload_0
      28: iconst_0
      29: putfield      #1                  // Field stopped:Z
      32: return

  public java.nio.ByteBuffer newBuffer(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
       4: invokestatic  #10                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$500:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;)I
       7: ifle          75
      10: invokestatic  #5                  // Method java/lang/System.currentTimeMillis:()J
      13: aload_0
      14: getfield      #6                  // Field bufferReuseLastTime:J
      17: lsub
      18: ldc2_w        #11                 // long 10000l
      21: lcmp
      22: ifle          75
      25: invokestatic  #13                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$600:()Z
      28: ifeq          64
      31: new           #14                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #16                 // String Clearing reuse buffers queue with
      40: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #9                  // Field reuseBuffersQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      47: invokevirtual #18                 // Method java/util/concurrent/ConcurrentLinkedQueue.size:()I
      50: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #20                 // String  elements
      55: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokestatic  #22                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$700:(Ljava/lang/String;)V
      64: aload_0
      65: invokestatic  #5                  // Method java/lang/System.currentTimeMillis:()J
      68: putfield      #6                  // Field bufferReuseLastTime:J
      71: aload_0
      72: invokevirtual #23                 // Method clearPoll:()V
      75: iload_1
      76: aload_0
      77: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      80: invokestatic  #24                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$800:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;)I
      83: if_icmple     94
      86: iload_1
      87: sipush        512
      90: invokestatic  #25                 // Method org/apache/activemq/artemis/jlibaio/LibaioContext.newAlignedBuffer:(II)Ljava/nio/ByteBuffer;
      93: areturn
      94: aload_0
      95: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      98: iload_1
      99: invokevirtual #26                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.calculateBlockSize:(I)I
     102: istore_2
     103: aload_0
     104: getfield      #9                  // Field reuseBuffersQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
     107: invokevirtual #27                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
     110: checkcast     #28                 // class java/nio/ByteBuffer
     113: astore_3
     114: aload_3
     115: ifnonnull     135
     118: iload_1
     119: sipush        512
     122: invokestatic  #25                 // Method org/apache/activemq/artemis/jlibaio/LibaioContext.newAlignedBuffer:(II)Ljava/nio/ByteBuffer;
     125: astore_3
     126: aload_3
     127: iload_2
     128: invokevirtual #29                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     131: pop
     132: goto          149
     135: aload_0
     136: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
     139: aload_3
     140: invokevirtual #30                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.clearBuffer:(Ljava/nio/ByteBuffer;)V
     143: aload_3
     144: iload_2
     145: invokevirtual #29                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     148: pop
     149: aload_3
     150: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     153: pop
     154: aload_3
     155: areturn

  public synchronized void stop();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #1                  // Field stopped:Z
       5: aload_0
       6: invokevirtual #23                 // Method clearPoll:()V
       9: return

  public synchronized void clearPoll();
    Code:
       0: aload_0
       1: getfield      #9                  // Field reuseBuffersQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #27                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       7: checkcast     #28                 // class java/nio/ByteBuffer
      10: dup
      11: astore_1
      12: ifnull        26
      15: aload_0
      16: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      19: aload_1
      20: invokevirtual #32                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.releaseBuffer:(Ljava/nio/ByteBuffer;)V
      23: goto          0
      26: return

  public void bufferDone(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #1                  // Field stopped:Z
       8: ifeq          22
      11: aload_0
      12: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      15: aload_1
      16: invokevirtual #32                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.releaseBuffer:(Ljava/nio/ByteBuffer;)V
      19: goto          63
      22: aload_0
      23: invokestatic  #5                  // Method java/lang/System.currentTimeMillis:()J
      26: putfield      #6                  // Field bufferReuseLastTime:J
      29: aload_1
      30: invokevirtual #33                 // Method java/nio/ByteBuffer.capacity:()I
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      37: invokestatic  #34                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.access$900:(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;)I
      40: if_icmpne     55
      43: aload_0
      44: getfield      #9                  // Field reuseBuffersQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      47: aload_1
      48: invokevirtual #35                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
      51: pop
      52: goto          63
      55: aload_0
      56: getfield      #3                  // Field this$0:Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;
      59: aload_1
      60: invokevirtual #32                 // Method org/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory.releaseBuffer:(Ljava/nio/ByteBuffer;)V
      63: aload_2
      64: monitorexit
      65: goto          73
      68: astore_3
      69: aload_2
      70: monitorexit
      71: aload_3
      72: athrow
      73: return
    Exception table:
       from    to  target type
           4    65    68   any
          68    71    68   any

  org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$ReuseBuffersController(org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory, org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lorg/apache/activemq/artemis/core/io/aio/AIOSequentialFileFactory;)V
       5: return

  static boolean access$1000(org.apache.activemq.artemis.core.io.aio.AIOSequentialFileFactory$ReuseBuffersController);
    Code:
       0: aload_0
       1: getfield      #1                  // Field stopped:Z
       4: ireturn
}
