Compiled from "PageSubscription.java"
public interface org.apache.activemq.artemis.core.paging.cursor.PageSubscription {
  public abstract org.apache.activemq.artemis.core.paging.PagingStore getPagingStore();

  public abstract void stop();

  public abstract void notEmpty();

  public abstract void bookmark(org.apache.activemq.artemis.core.paging.cursor.PagePosition) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.paging.cursor.PageSubscriptionCounter getCounter();

  public abstract long getMessageCount();

  public abstract long getId();

  public abstract boolean isPersistent();

  public abstract boolean isPaging();

  public abstract org.apache.activemq.artemis.utils.LinkedListIterator<org.apache.activemq.artemis.core.paging.cursor.PagedReference> iterator();

  public abstract void destroy() throws java.lang.Exception;

  public abstract void scheduleCleanupCheck();

  public abstract void cleanupEntries(boolean) throws java.lang.Exception;

  public abstract void onPageModeCleared(org.apache.activemq.artemis.core.transaction.Transaction) throws java.lang.Exception;

  public abstract void disableAutoCleanup();

  public abstract void enableAutoCleanup();

  public abstract void ack(org.apache.activemq.artemis.core.paging.cursor.PagedReference) throws java.lang.Exception;

  public abstract boolean contains(org.apache.activemq.artemis.core.paging.cursor.PagedReference) throws java.lang.Exception;

  public abstract void confirmPosition(org.apache.activemq.artemis.core.paging.cursor.PagePosition) throws java.lang.Exception;

  public abstract void ackTx(org.apache.activemq.artemis.core.transaction.Transaction, org.apache.activemq.artemis.core.paging.cursor.PagedReference) throws java.lang.Exception;

  public abstract void confirmPosition(org.apache.activemq.artemis.core.transaction.Transaction, org.apache.activemq.artemis.core.paging.cursor.PagePosition) throws java.lang.Exception;

  public abstract long getFirstPage();

  public abstract void reloadACK(org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract void reloadPageCompletion(org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract void reloadPageInfo(long);

  public abstract void positionIgnored(org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract void lateDeliveryRollback(org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract void reloadPreparedACK(org.apache.activemq.artemis.core.transaction.Transaction, org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract void processReload() throws java.lang.Exception;

  public abstract void addPendingDelivery(org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract void redeliver(org.apache.activemq.artemis.core.paging.cursor.PageIterator, org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract void printDebug();

  public abstract boolean isComplete(long);

  public abstract void flushExecutors();

  public abstract void setQueue(org.apache.activemq.artemis.core.server.Queue);

  public abstract org.apache.activemq.artemis.core.server.Queue getQueue();

  public abstract org.apache.activemq.artemis.core.paging.PagedMessage queryMessage(org.apache.activemq.artemis.core.paging.cursor.PagePosition);

  public abstract java.util.concurrent.Executor getExecutor();

  public abstract void onDeletePage(org.apache.activemq.artemis.core.paging.impl.Page) throws java.lang.Exception;
}
