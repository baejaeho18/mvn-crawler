Compiled from "Queue.java"
public interface org.apache.activemq.artemis.core.server.Queue extends org.apache.activemq.artemis.core.server.Bindable {
  public abstract org.apache.activemq.artemis.api.core.SimpleString getName();

  public abstract long getID();

  public abstract org.apache.activemq.artemis.core.filter.Filter getFilter();

  public abstract org.apache.activemq.artemis.core.paging.cursor.PageSubscription getPageSubscription();

  public abstract boolean isDurable();

  public abstract boolean isTemporary();

  public abstract boolean isAutoCreated();

  public abstract void addConsumer(org.apache.activemq.artemis.core.server.Consumer) throws java.lang.Exception;

  public abstract void removeConsumer(org.apache.activemq.artemis.core.server.Consumer);

  public abstract int getConsumerCount();

  public abstract void setConsumersRefCount(org.apache.activemq.artemis.utils.ReferenceCounter);

  public abstract org.apache.activemq.artemis.utils.ReferenceCounter getConsumersRefCount();

  public abstract void reload(org.apache.activemq.artemis.core.server.MessageReference);

  public abstract void addTail(org.apache.activemq.artemis.core.server.MessageReference);

  public abstract void addTail(org.apache.activemq.artemis.core.server.MessageReference, boolean);

  public abstract void addHead(org.apache.activemq.artemis.core.server.MessageReference);

  public abstract void addHead(java.util.List<org.apache.activemq.artemis.core.server.MessageReference>);

  public abstract void acknowledge(org.apache.activemq.artemis.core.server.MessageReference) throws java.lang.Exception;

  public abstract void acknowledge(org.apache.activemq.artemis.core.transaction.Transaction, org.apache.activemq.artemis.core.server.MessageReference) throws java.lang.Exception;

  public abstract void reacknowledge(org.apache.activemq.artemis.core.transaction.Transaction, org.apache.activemq.artemis.core.server.MessageReference) throws java.lang.Exception;

  public abstract void cancel(org.apache.activemq.artemis.core.transaction.Transaction, org.apache.activemq.artemis.core.server.MessageReference);

  public abstract void cancel(org.apache.activemq.artemis.core.transaction.Transaction, org.apache.activemq.artemis.core.server.MessageReference, boolean);

  public abstract void cancel(org.apache.activemq.artemis.core.server.MessageReference, long) throws java.lang.Exception;

  public abstract void deliverAsync();

  public abstract void unproposed(org.apache.activemq.artemis.api.core.SimpleString);

  public abstract void forceDelivery();

  public abstract void deleteQueue() throws java.lang.Exception;

  public abstract void deleteQueue(boolean) throws java.lang.Exception;

  public abstract void destroyPaging() throws java.lang.Exception;

  public abstract long getMessageCount();

  public abstract int getDeliveringCount();

  public abstract void referenceHandled();

  public abstract int getScheduledCount();

  public abstract java.util.List<org.apache.activemq.artemis.core.server.MessageReference> getScheduledMessages();

  public abstract java.util.Map<java.lang.String, java.util.List<org.apache.activemq.artemis.core.server.MessageReference>> getDeliveringMessages();

  public abstract long getMessagesAdded();

  public abstract long getMessagesAcknowledged();

  public abstract org.apache.activemq.artemis.core.server.MessageReference removeReferenceWithID(long) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.core.server.MessageReference getReference(long) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract int deleteAllReferences() throws java.lang.Exception;

  public abstract int deleteAllReferences(int) throws java.lang.Exception;

  public abstract boolean deleteReference(long) throws java.lang.Exception;

  public abstract int deleteMatchingReferences(org.apache.activemq.artemis.core.filter.Filter) throws java.lang.Exception;

  public abstract int deleteMatchingReferences(int, org.apache.activemq.artemis.core.filter.Filter) throws java.lang.Exception;

  public abstract boolean expireReference(long) throws java.lang.Exception;

  public abstract int expireReferences(org.apache.activemq.artemis.core.filter.Filter) throws java.lang.Exception;

  public abstract void expireReferences() throws java.lang.Exception;

  public abstract void expire(org.apache.activemq.artemis.core.server.MessageReference) throws java.lang.Exception;

  public abstract boolean sendMessageToDeadLetterAddress(long) throws java.lang.Exception;

  public abstract int sendMessagesToDeadLetterAddress(org.apache.activemq.artemis.core.filter.Filter) throws java.lang.Exception;

  public abstract boolean changeReferencePriority(long, byte) throws java.lang.Exception;

  public abstract int changeReferencesPriority(org.apache.activemq.artemis.core.filter.Filter, byte) throws java.lang.Exception;

  public abstract boolean moveReference(long, org.apache.activemq.artemis.api.core.SimpleString) throws java.lang.Exception;

  public abstract boolean moveReference(long, org.apache.activemq.artemis.api.core.SimpleString, boolean) throws java.lang.Exception;

  public abstract int moveReferences(org.apache.activemq.artemis.core.filter.Filter, org.apache.activemq.artemis.api.core.SimpleString) throws java.lang.Exception;

  public abstract int moveReferences(int, org.apache.activemq.artemis.core.filter.Filter, org.apache.activemq.artemis.api.core.SimpleString, boolean) throws java.lang.Exception;

  public abstract void addRedistributor(long);

  public abstract void cancelRedistributor() throws java.lang.Exception;

  public abstract boolean hasMatchingConsumer(org.apache.activemq.artemis.core.server.ServerMessage);

  public abstract java.util.Collection<org.apache.activemq.artemis.core.server.Consumer> getConsumers();

  public abstract boolean checkRedelivery(org.apache.activemq.artemis.core.server.MessageReference, long, boolean) throws java.lang.Exception;

  public abstract org.apache.activemq.artemis.utils.LinkedListIterator<org.apache.activemq.artemis.core.server.MessageReference> iterator();

  public abstract org.apache.activemq.artemis.utils.LinkedListIterator<org.apache.activemq.artemis.core.server.MessageReference> totalIterator();

  public abstract org.apache.activemq.artemis.api.core.SimpleString getExpiryAddress();

  public abstract void pause();

  public abstract void resume();

  public abstract boolean isPaused();

  public abstract java.util.concurrent.Executor getExecutor();

  public abstract void resetAllIterators();

  public abstract boolean flushExecutor();

  public abstract void close() throws java.lang.Exception;

  public abstract boolean isDirectDeliver();

  public abstract org.apache.activemq.artemis.api.core.SimpleString getAddress();

  public abstract boolean isInternalQueue();

  public abstract void setInternalQueue(boolean);

  public abstract void resetMessagesAdded();

  public abstract void resetMessagesAcknowledged();

  public abstract void incrementMesssagesAdded();

  public abstract void deliverScheduledMessages() throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void postAcknowledge(org.apache.activemq.artemis.core.server.MessageReference);

  public abstract float getRate();

  public abstract org.apache.activemq.artemis.api.core.SimpleString getUser();
}
