Compiled from "ReplicaPolicy.java"
public class org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy extends org.apache.activemq.artemis.core.server.cluster.ha.BackupPolicy {
  private java.lang.String clusterName;

  private int maxSavedReplicatedJournalsSize;

  private java.lang.String groupName;

  private boolean restartBackup;

  private boolean allowFailback;

  private long initialReplicationSyncTimeout;

  private org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy replicatedPolicy;

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/artemis/core/server/cluster/ha/BackupPolicy."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultMaxSavedReplicatedJournalsSize:()I
       8: putfield      #3                  // Field maxSavedReplicatedJournalsSize:I
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field groupName:Ljava/lang/String;
      16: aload_0
      17: invokestatic  #5                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultRestartBackup:()Z
      20: putfield      #6                  // Field restartBackup:Z
      23: aload_0
      24: invokestatic  #7                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultAllowAutoFailback:()Z
      27: putfield      #8                  // Field allowFailback:Z
      30: aload_0
      31: invokestatic  #9                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultInitialReplicationSyncTimeout:()J
      34: putfield      #10                 // Field initialReplicationSyncTimeout:J
      37: return

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy(java.lang.String, int, java.lang.String, boolean, boolean, long, org.apache.activemq.artemis.core.server.cluster.ha.ScaleDownPolicy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/artemis/core/server/cluster/ha/BackupPolicy."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultMaxSavedReplicatedJournalsSize:()I
       8: putfield      #3                  // Field maxSavedReplicatedJournalsSize:I
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field groupName:Ljava/lang/String;
      16: aload_0
      17: invokestatic  #5                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultRestartBackup:()Z
      20: putfield      #6                  // Field restartBackup:Z
      23: aload_0
      24: invokestatic  #7                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultAllowAutoFailback:()Z
      27: putfield      #8                  // Field allowFailback:Z
      30: aload_0
      31: invokestatic  #9                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultInitialReplicationSyncTimeout:()J
      34: putfield      #10                 // Field initialReplicationSyncTimeout:J
      37: aload_0
      38: aload_1
      39: putfield      #11                 // Field clusterName:Ljava/lang/String;
      42: aload_0
      43: iload_2
      44: putfield      #3                  // Field maxSavedReplicatedJournalsSize:I
      47: aload_0
      48: aload_3
      49: putfield      #4                  // Field groupName:Ljava/lang/String;
      52: aload_0
      53: iload         4
      55: putfield      #6                  // Field restartBackup:Z
      58: aload_0
      59: iload         5
      61: putfield      #8                  // Field allowFailback:Z
      64: aload_0
      65: lload         6
      67: putfield      #10                 // Field initialReplicationSyncTimeout:J
      70: aload_0
      71: aload         8
      73: putfield      #12                 // Field scaleDownPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
      76: return

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicaPolicy(java.lang.String, int, java.lang.String, org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/artemis/core/server/cluster/ha/BackupPolicy."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultMaxSavedReplicatedJournalsSize:()I
       8: putfield      #3                  // Field maxSavedReplicatedJournalsSize:I
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field groupName:Ljava/lang/String;
      16: aload_0
      17: invokestatic  #5                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultRestartBackup:()Z
      20: putfield      #6                  // Field restartBackup:Z
      23: aload_0
      24: invokestatic  #7                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.isDefaultAllowAutoFailback:()Z
      27: putfield      #8                  // Field allowFailback:Z
      30: aload_0
      31: invokestatic  #9                  // Method org/apache/activemq/artemis/api/config/ActiveMQDefaultConfiguration.getDefaultInitialReplicationSyncTimeout:()J
      34: putfield      #10                 // Field initialReplicationSyncTimeout:J
      37: aload_0
      38: aload_1
      39: putfield      #11                 // Field clusterName:Ljava/lang/String;
      42: aload_0
      43: iload_2
      44: putfield      #3                  // Field maxSavedReplicatedJournalsSize:I
      47: aload_0
      48: aload_3
      49: putfield      #4                  // Field groupName:Ljava/lang/String;
      52: aload_0
      53: aload         4
      55: putfield      #13                 // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      58: return

  public java.lang.String getClusterName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field clusterName:Ljava/lang/String;
       4: areturn

  public void setClusterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field clusterName:Ljava/lang/String;
       5: return

  public int getMaxSavedReplicatedJournalsSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxSavedReplicatedJournalsSize:I
       4: ireturn

  public void setMaxSavedReplicatedJournalsSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field maxSavedReplicatedJournalsSize:I
       5: return

  public org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy getReplicatedPolicy();
    Code:
       0: aload_0
       1: getfield      #13                 // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
       4: ifnonnull     36
       7: aload_0
       8: new           #14                 // class org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #8                  // Field allowFailback:Z
      17: aload_0
      18: getfield      #10                 // Field initialReplicationSyncTimeout:J
      21: aload_0
      22: getfield      #4                  // Field groupName:Ljava/lang/String;
      25: aload_0
      26: getfield      #11                 // Field clusterName:Ljava/lang/String;
      29: aload_0
      30: invokespecial #15                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy."<init>":(ZZJLjava/lang/String;Ljava/lang/String;Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;)V
      33: putfield      #13                 // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      36: aload_0
      37: getfield      #13                 // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      40: areturn

  public void setReplicatedPolicy(org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
       5: return

  public java.lang.String getBackupGroupName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field groupName:Ljava/lang/String;
       4: areturn

  public java.lang.String getGroupName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field groupName:Ljava/lang/String;
       4: areturn

  public void setGroupName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field groupName:Ljava/lang/String;
       5: return

  public boolean isRestartBackup();
    Code:
       0: aload_0
       1: getfield      #6                  // Field restartBackup:Z
       4: ireturn

  public void setRestartBackup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field restartBackup:Z
       5: return

  public boolean isSharedStore();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canScaleDown();
    Code:
       0: aload_0
       1: getfield      #12                 // Field scaleDownPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ScaleDownPolicy;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isAllowFailback();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allowFailback:Z
       4: ireturn

  public void setAllowFailback(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field allowFailback:Z
       5: return

  public long getFailbackDelay();
    Code:
       0: ldc2_w        #16                 // long -1l
       3: lreturn

  public void setFailbackDelay(long);
    Code:
       0: return

  public long getInitialReplicationSyncTimeout();
    Code:
       0: aload_0
       1: getfield      #10                 // Field initialReplicationSyncTimeout:J
       4: lreturn

  public void setInitialReplicationSyncTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field initialReplicationSyncTimeout:J
       5: return

  public org.apache.activemq.artemis.core.server.impl.Activation createActivation(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, boolean, java.util.Map<java.lang.String, java.lang.Object>, org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl$ShutdownOnCriticalErrorListener) throws java.lang.Exception;
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: aload_0
      10: invokespecial #19                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation."<init>":(Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;ZLjava/util/Map;Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl$ShutdownOnCriticalErrorListener;Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;)V
      13: astore        5
      15: aload         5
      17: invokevirtual #20                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingBackupActivation.init:()V
      20: aload         5
      22: areturn
}
