Compiled from "ActiveMQRAProperties.java"
public class org.apache.activemq.artemis.ra.ActiveMQRAProperties extends org.apache.activemq.artemis.ra.ConnectionFactoryProperties implements java.io.Serializable {
  static final long serialVersionUID;

  private static boolean trace;

  private java.lang.String userName;

  private java.lang.String password;

  private java.lang.Boolean localTx;

  private static final int DEFAULT_SETUP_ATTEMPTS;

  private static final long DEFAULT_SETUP_INTERVAL;

  private int setupAttempts;

  private long setupInterval;

  private java.util.Hashtable<?, ?> jndiParams;

  private boolean useJNDI;

  private boolean useMaskedPassword;

  private java.lang.String passwordCodec;

  private boolean initialized;

  private transient org.apache.activemq.artemis.utils.SensitiveDataCodec<java.lang.String> codecInstance;

  private java.lang.String jgroupsChannelLocatorClass;

  private java.lang.String jgroupsChannelRefName;

  public org.apache.activemq.artemis.ra.ActiveMQRAProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/artemis/ra/ConnectionFactoryProperties."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field password:Ljava/lang/String;
       9: aload_0
      10: iconst_0
      11: invokestatic  #3                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: putfield      #4                  // Field localTx:Ljava/lang/Boolean;
      17: aload_0
      18: iconst_m1
      19: putfield      #6                  // Field setupAttempts:I
      22: aload_0
      23: ldc2_w        #7                  // long 2000l
      26: putfield      #9                  // Field setupInterval:J
      29: aload_0
      30: iconst_0
      31: putfield      #10                 // Field useMaskedPassword:Z
      34: aload_0
      35: iconst_0
      36: putfield      #11                 // Field initialized:Z
      39: getstatic     #12                 // Field trace:Z
      42: ifeq          55
      45: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
      48: ldc           #14                 // String constructor()
      50: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      55: return

  public java.lang.String getUserName();
    Code:
       0: getstatic     #12                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: ldc           #16                 // String getUserName()
      11: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #17                 // Field userName:Ljava/lang/String;
      20: areturn

  public void setUserName(java.lang.String);
    Code:
       0: getstatic     #12                 // Field trace:Z
       3: ifeq          38
       6: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: new           #18                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #20                 // String setUserName(
      18: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #22                 // String )
      27: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      38: aload_0
      39: aload_1
      40: putfield      #17                 // Field userName:Ljava/lang/String;
      43: return

  public java.lang.String getPassword();
    Code:
       0: getstatic     #12                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: ldc           #24                 // String getPassword()
      11: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #2                  // Field password:Ljava/lang/String;
      20: areturn

  public void setPassword(java.lang.String);
    Code:
       0: getstatic     #12                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: ldc           #25                 // String setPassword(****)
      11: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: aload_1
      18: putfield      #2                  // Field password:Ljava/lang/String;
      21: return

  public boolean isUseJNDI();
    Code:
       0: aload_0
       1: getfield      #26                 // Field useJNDI:Z
       4: ireturn

  public void setUseJNDI(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method java/lang/Boolean.booleanValue:()Z
       5: putfield      #26                 // Field useJNDI:Z
       8: return

  public java.util.Hashtable<?, ?> getParsedJndiParams();
    Code:
       0: aload_0
       1: getfield      #28                 // Field jndiParams:Ljava/util/Hashtable;
       4: areturn

  public void setParsedJndiParams(java.util.Hashtable<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field jndiParams:Ljava/util/Hashtable;
       5: return

  public java.lang.Boolean getUseLocalTx();
    Code:
       0: getstatic     #12                 // Field trace:Z
       3: ifeq          16
       6: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: ldc           #29                 // String getUseLocalTx()
      11: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #4                  // Field localTx:Ljava/lang/Boolean;
      20: areturn

  public void setUseLocalTx(java.lang.Boolean);
    Code:
       0: getstatic     #12                 // Field trace:Z
       3: ifeq          38
       6: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       9: new           #18                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #30                 // String setUseLocalTx(
      18: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #22                 // String )
      27: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #15,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.trace:(Ljava/lang/Object;)V
      38: aload_0
      39: aload_1
      40: putfield      #4                  // Field localTx:Ljava/lang/Boolean;
      43: return

  public int getSetupAttempts();
    Code:
       0: aload_0
       1: getfield      #6                  // Field setupAttempts:I
       4: ireturn

  public void setSetupAttempts(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
       5: putfield      #6                  // Field setupAttempts:I
       8: return

  public long getSetupInterval();
    Code:
       0: aload_0
       1: getfield      #9                  // Field setupInterval:J
       4: lreturn

  public void setSetupInterval(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method java/lang/Long.longValue:()J
       5: putfield      #9                  // Field setupInterval:J
       8: return

  public boolean isUseMaskedPassword();
    Code:
       0: aload_0
       1: getfield      #10                 // Field useMaskedPassword:Z
       4: ireturn

  public void setUseMaskedPassword(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field useMaskedPassword:Z
       5: return

  public java.lang.String getPasswordCodec();
    Code:
       0: aload_0
       1: getfield      #34                 // Field passwordCodec:Ljava/lang/String;
       4: areturn

  public void setPasswordCodec(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field passwordCodec:Ljava/lang/String;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String ActiveMQRAProperties[localTx=
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field localTx:Ljava/lang/Boolean;
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #36                 // String , userName=
      21: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #17                 // Field userName:Ljava/lang/String;
      28: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #37                 // String , password=****]
      33: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public synchronized void init() throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field initialized:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #10                 // Field useMaskedPassword:Z
      12: ifeq          85
      15: aload_0
      16: new           #38                 // class org/apache/activemq/artemis/utils/DefaultSensitiveStringCodec
      19: dup
      20: invokespecial #39                 // Method org/apache/activemq/artemis/utils/DefaultSensitiveStringCodec."<init>":()V
      23: putfield      #40                 // Field codecInstance:Lorg/apache/activemq/artemis/utils/SensitiveDataCodec;
      26: aload_0
      27: getfield      #34                 // Field passwordCodec:Ljava/lang/String;
      30: ifnull        44
      33: aload_0
      34: aload_0
      35: getfield      #34                 // Field passwordCodec:Ljava/lang/String;
      38: invokestatic  #41                 // Method org/apache/activemq/artemis/utils/PasswordMaskingUtil.getCodec:(Ljava/lang/String;)Lorg/apache/activemq/artemis/utils/SensitiveDataCodec;
      41: putfield      #40                 // Field codecInstance:Lorg/apache/activemq/artemis/utils/SensitiveDataCodec;
      44: aload_0
      45: getfield      #2                  // Field password:Ljava/lang/String;
      48: ifnull        71
      51: aload_0
      52: aload_0
      53: getfield      #40                 // Field codecInstance:Lorg/apache/activemq/artemis/utils/SensitiveDataCodec;
      56: aload_0
      57: getfield      #2                  // Field password:Ljava/lang/String;
      60: invokeinterface #42,  2           // InterfaceMethod org/apache/activemq/artemis/utils/SensitiveDataCodec.decode:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #43                 // class java/lang/String
      68: putfield      #2                  // Field password:Ljava/lang/String;
      71: goto          85
      74: astore_1
      75: getstatic     #45                 // Field org/apache/activemq/artemis/ra/ActiveMQRABundle.BUNDLE:Lorg/apache/activemq/artemis/ra/ActiveMQRABundle;
      78: aload_1
      79: invokeinterface #46,  2           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRABundle.errorDecodingPassword:(Ljava/lang/Exception;)Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
      84: athrow
      85: aload_0
      86: iconst_1
      87: putfield      #11                 // Field initialized:Z
      90: return
    Exception table:
       from    to  target type
          44    71    74   Class java/lang/Exception

  public org.apache.activemq.artemis.utils.SensitiveDataCodec<java.lang.String> getCodecInstance();
    Code:
       0: aload_0
       1: getfield      #40                 // Field codecInstance:Lorg/apache/activemq/artemis/utils/SensitiveDataCodec;
       4: areturn

  public java.lang.String getJgroupsChannelLocatorClass();
    Code:
       0: aload_0
       1: getfield      #47                 // Field jgroupsChannelLocatorClass:Ljava/lang/String;
       4: areturn

  public void setJgroupsChannelLocatorClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field jgroupsChannelLocatorClass:Ljava/lang/String;
       5: return

  public java.lang.String getJgroupsChannelRefName();
    Code:
       0: aload_0
       1: getfield      #48                 // Field jgroupsChannelRefName:Ljava/lang/String;
       4: areturn

  public void setJgroupsChannelRefName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field jgroupsChannelRefName:Ljava/lang/String;
       5: return

  static {};
    Code:
       0: getstatic     #13                 // Field org/apache/activemq/artemis/ra/ActiveMQRALogger.LOGGER:Lorg/apache/activemq/artemis/ra/ActiveMQRALogger;
       3: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/artemis/ra/ActiveMQRALogger.isTraceEnabled:()Z
       8: putstatic     #12                 // Field trace:Z
      11: return
}
