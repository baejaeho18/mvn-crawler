Compiled from "JMSServerManagerImpl.java"
public class org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl implements org.apache.activemq.artemis.jms.server.JMSServerManager,org.apache.activemq.artemis.core.server.ActivateCallback {
  private static final java.lang.String REJECT_FILTER;

  private org.apache.activemq.artemis.spi.core.naming.BindingRegistry registry;

  private final java.util.Map<java.lang.String, org.apache.activemq.artemis.jms.client.ActiveMQQueue> queues;

  private final java.util.Map<java.lang.String, org.apache.activemq.artemis.jms.client.ActiveMQTopic> topics;

  private final java.util.Map<java.lang.String, org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory> connectionFactories;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> queueBindings;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> topicBindings;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> connectionFactoryBindings;

  private final java.util.List<java.lang.Runnable> cachedCommands;

  private final org.apache.activemq.artemis.core.server.ActiveMQServer server;

  private org.apache.activemq.artemis.jms.server.management.JMSManagementService jmsManagementService;

  private boolean startCalled;

  private boolean active;

  private org.apache.activemq.artemis.jms.server.config.JMSConfiguration config;

  private org.apache.activemq.artemis.core.config.Configuration coreConfig;

  private org.apache.activemq.artemis.jms.persistence.JMSStorageManager storage;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> unRecoveredBindings;

  public org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl(org.apache.activemq.artemis.core.server.ActiveMQServer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/HashMap
       8: dup
       9: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      12: putfield      #14                 // Field queues:Ljava/util/Map;
      15: aload_0
      16: new           #18                 // class java/util/HashMap
      19: dup
      20: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      23: putfield      #8                  // Field topics:Ljava/util/Map;
      26: aload_0
      27: new           #18                 // class java/util/HashMap
      30: dup
      31: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      34: putfield      #20                 // Field connectionFactories:Ljava/util/Map;
      37: aload_0
      38: new           #18                 // class java/util/HashMap
      41: dup
      42: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      45: putfield      #12                 // Field queueBindings:Ljava/util/Map;
      48: aload_0
      49: new           #18                 // class java/util/HashMap
      52: dup
      53: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      56: putfield      #7                  // Field topicBindings:Ljava/util/Map;
      59: aload_0
      60: new           #18                 // class java/util/HashMap
      63: dup
      64: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      67: putfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      70: aload_0
      71: new           #21                 // class java/util/ArrayList
      74: dup
      75: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      78: putfield      #23                 // Field cachedCommands:Ljava/util/List;
      81: aload_0
      82: new           #18                 // class java/util/HashMap
      85: dup
      86: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      89: putfield      #24                 // Field unRecoveredBindings:Ljava/util/Map;
      92: aload_0
      93: aload_1
      94: putfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      97: aload_0
      98: aload_1
      99: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     104: putfield      #26                 // Field coreConfig:Lorg/apache/activemq/artemis/core/config/Configuration;
     107: return

  public org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl(org.apache.activemq.artemis.core.server.ActiveMQServer, org.apache.activemq.artemis.spi.core.naming.BindingRegistry) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/HashMap
       8: dup
       9: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      12: putfield      #14                 // Field queues:Ljava/util/Map;
      15: aload_0
      16: new           #18                 // class java/util/HashMap
      19: dup
      20: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      23: putfield      #8                  // Field topics:Ljava/util/Map;
      26: aload_0
      27: new           #18                 // class java/util/HashMap
      30: dup
      31: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      34: putfield      #20                 // Field connectionFactories:Ljava/util/Map;
      37: aload_0
      38: new           #18                 // class java/util/HashMap
      41: dup
      42: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      45: putfield      #12                 // Field queueBindings:Ljava/util/Map;
      48: aload_0
      49: new           #18                 // class java/util/HashMap
      52: dup
      53: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      56: putfield      #7                  // Field topicBindings:Ljava/util/Map;
      59: aload_0
      60: new           #18                 // class java/util/HashMap
      63: dup
      64: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      67: putfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      70: aload_0
      71: new           #21                 // class java/util/ArrayList
      74: dup
      75: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      78: putfield      #23                 // Field cachedCommands:Ljava/util/List;
      81: aload_0
      82: new           #18                 // class java/util/HashMap
      85: dup
      86: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      89: putfield      #24                 // Field unRecoveredBindings:Ljava/util/Map;
      92: aload_0
      93: aload_1
      94: putfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      97: aload_0
      98: aload_1
      99: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     104: putfield      #26                 // Field coreConfig:Lorg/apache/activemq/artemis/core/config/Configuration;
     107: aload_0
     108: aload_2
     109: putfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
     112: return

  public org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl(org.apache.activemq.artemis.core.server.ActiveMQServer, org.apache.activemq.artemis.jms.server.config.JMSConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/HashMap
       8: dup
       9: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      12: putfield      #14                 // Field queues:Ljava/util/Map;
      15: aload_0
      16: new           #18                 // class java/util/HashMap
      19: dup
      20: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      23: putfield      #8                  // Field topics:Ljava/util/Map;
      26: aload_0
      27: new           #18                 // class java/util/HashMap
      30: dup
      31: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      34: putfield      #20                 // Field connectionFactories:Ljava/util/Map;
      37: aload_0
      38: new           #18                 // class java/util/HashMap
      41: dup
      42: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      45: putfield      #12                 // Field queueBindings:Ljava/util/Map;
      48: aload_0
      49: new           #18                 // class java/util/HashMap
      52: dup
      53: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      56: putfield      #7                  // Field topicBindings:Ljava/util/Map;
      59: aload_0
      60: new           #18                 // class java/util/HashMap
      63: dup
      64: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      67: putfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      70: aload_0
      71: new           #21                 // class java/util/ArrayList
      74: dup
      75: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      78: putfield      #23                 // Field cachedCommands:Ljava/util/List;
      81: aload_0
      82: new           #18                 // class java/util/HashMap
      85: dup
      86: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      89: putfield      #24                 // Field unRecoveredBindings:Ljava/util/Map;
      92: aload_0
      93: aload_1
      94: putfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      97: aload_0
      98: aload_1
      99: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     104: putfield      #26                 // Field coreConfig:Lorg/apache/activemq/artemis/core/config/Configuration;
     107: aload_0
     108: aload_2
     109: putfield      #28                 // Field config:Lorg/apache/activemq/artemis/jms/server/config/JMSConfiguration;
     112: return

  public void preActivate();
    Code:
       0: return

  public synchronized void activated();
    Code:
       0: aload_0
       1: getfield      #29                 // Field startCalled:Z
       4: ifne          8
       7: return
       8: aload_0
       9: new           #30                 // class org/apache/activemq/artemis/jms/server/management/impl/JMSManagementServiceImpl
      12: dup
      13: aload_0
      14: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      17: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getManagementService:()Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      22: aload_0
      23: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      26: aload_0
      27: invokespecial #32                 // Method org/apache/activemq/artemis/jms/server/management/impl/JMSManagementServiceImpl."<init>":(Lorg/apache/activemq/artemis/core/server/management/ManagementService;Lorg/apache/activemq/artemis/core/server/ActiveMQServer;Lorg/apache/activemq/artemis/jms/server/JMSServerManager;)V
      30: putfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
      33: aload_0
      34: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
      37: aload_0
      38: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.registerJMSServer:(Lorg/apache/activemq/artemis/jms/server/JMSServerManager;)Lorg/apache/activemq/artemis/api/jms/management/JMSServerControl;
      43: pop
      44: aload_0
      45: iconst_1
      46: putfield      #35                 // Field active:Z
      49: aload_0
      50: invokespecial #36                 // Method initJournal:()V
      53: aload_0
      54: invokespecial #37                 // Method deploy:()V
      57: aload_0
      58: getfield      #23                 // Field cachedCommands:Ljava/util/List;
      61: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      66: astore_1
      67: aload_1
      68: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          104
      76: aload_1
      77: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #41                 // class java/lang/Runnable
      85: astore_2
      86: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
      89: aload_2
      90: invokeinterface #43,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.serverRunningCachedCommand:(Ljava/lang/Runnable;)V
      95: aload_2
      96: invokeinterface #44,  1           // InterfaceMethod java/lang/Runnable.run:()V
     101: goto          67
     104: aload_0
     105: invokespecial #45                 // Method recoverBindings:()V
     108: goto          126
     111: astore_1
     112: aload_0
     113: iconst_0
     114: putfield      #35                 // Field active:Z
     117: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
     120: aload_1
     121: invokeinterface #47,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.jmsDeployerStartError:(Ljava/lang/Exception;)V
     126: return
    Exception table:
       from    to  target type
           8   108   111   Class java/lang/Exception

  public void deActivate();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #35                 // Field active:Z
       8: ifne          14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      18: ifnull        42
      21: aload_0
      22: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      25: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.isStarted:()Z
      30: ifeq          42
      33: aload_0
      34: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      37: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.stop:()V
      42: aload_0
      43: aload_0
      44: getfield      #12                 // Field queueBindings:Ljava/util/Map;
      47: invokespecial #50                 // Method unbindBindings:(Ljava/util/Map;)V
      50: aload_0
      51: aload_0
      52: getfield      #7                  // Field topicBindings:Ljava/util/Map;
      55: invokespecial #50                 // Method unbindBindings:(Ljava/util/Map;)V
      58: aload_0
      59: aload_0
      60: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      63: invokespecial #50                 // Method unbindBindings:(Ljava/util/Map;)V
      66: new           #51                 // class java/util/HashSet
      69: dup
      70: aload_0
      71: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
      74: invokeinterface #52,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      79: invokespecial #53                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      82: invokevirtual #54                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      85: astore_2
      86: aload_2
      87: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          114
      95: aload_2
      96: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #55                 // class java/lang/String
     104: astore_3
     105: aload_0
     106: aload_3
     107: invokevirtual #56                 // Method shutdownConnectionFactory:(Ljava/lang/String;)Z
     110: pop
     111: goto          86
     114: aload_0
     115: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
     118: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
     123: aload_0
     124: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
     127: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
     132: aload_0
     133: getfield      #12                 // Field queueBindings:Ljava/util/Map;
     136: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
     141: aload_0
     142: getfield      #14                 // Field queues:Ljava/util/Map;
     145: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
     150: aload_0
     151: getfield      #7                  // Field topicBindings:Ljava/util/Map;
     154: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
     159: aload_0
     160: getfield      #8                  // Field topics:Ljava/util/Map;
     163: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
     168: aload_0
     169: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
     172: ifnull        193
     175: aload_0
     176: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
     179: invokeinterface #58,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.unregisterJMSServer:()V
     184: aload_0
     185: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
     188: invokeinterface #59,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.stop:()V
     193: aload_0
     194: aconst_null
     195: putfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
     198: aload_0
     199: iconst_0
     200: putfield      #35                 // Field active:Z
     203: aload_1
     204: monitorexit
     205: goto          215
     208: astore        4
     210: aload_1
     211: monitorexit
     212: aload         4
     214: athrow
     215: goto          223
     218: astore_1
     219: aload_1
     220: invokevirtual #60                 // Method java/lang/Exception.printStackTrace:()V
     223: return
    Exception table:
       from    to  target type
           4    13   208   any
          14   205   208   any
         208   212   208   any
           0    13   218   Class java/lang/Exception
          14   215   218   Class java/lang/Exception

  public void activationComplete();
    Code:
       0: return

  public void recoverregistryBindings(java.lang.String, org.apache.activemq.artemis.jms.persistence.config.PersistedType) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field unRecoveredBindings:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #62                 // class java/util/List
      13: astore_3
      14: aload_3
      15: ifnull        219
      18: aload_3
      19: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
      24: ifle          219
      27: getstatic     #64                 // Field org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$9.$SwitchMap$org$apache$activemq$artemis$jms$persistence$config$PersistedType:[I
      30: aload_2
      31: invokevirtual #65                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedType.ordinal:()I
      34: iaload
      35: tableswitch   { // 1 to 3
                     1: 60
                     2: 75
                     3: 90
               default: 90
          }
      60: aload_0
      61: getfield      #12                 // Field queueBindings:Ljava/util/Map;
      64: astore        4
      66: aload_0
      67: getfield      #14                 // Field queues:Ljava/util/Map;
      70: astore        5
      72: goto          102
      75: aload_0
      76: getfield      #7                  // Field topicBindings:Ljava/util/Map;
      79: astore        4
      81: aload_0
      82: getfield      #8                  // Field topics:Ljava/util/Map;
      85: astore        5
      87: goto          102
      90: aload_0
      91: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      94: astore        4
      96: aload_0
      97: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
     100: astore        5
     102: aload         5
     104: aload_1
     105: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     110: astore        6
     112: aload         4
     114: aload_1
     115: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     120: checkcast     #62                 // class java/util/List
     123: astore        7
     125: aload         6
     127: ifnonnull     131
     130: return
     131: aload         7
     133: ifnonnull     156
     136: new           #21                 // class java/util/ArrayList
     139: dup
     140: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
     143: astore        7
     145: aload         4
     147: aload_1
     148: aload         7
     150: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     155: pop
     156: aload_3
     157: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     162: astore        8
     164: aload         8
     166: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     171: ifeq          208
     174: aload         8
     176: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     181: checkcast     #55                 // class java/lang/String
     184: astore        9
     186: aload         7
     188: aload         9
     190: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     195: pop
     196: aload_0
     197: aload         9
     199: aload         6
     201: invokespecial #13                 // Method bindToBindings:(Ljava/lang/String;Ljava/lang/Object;)Z
     204: pop
     205: goto          164
     208: aload_0
     209: getfield      #24                 // Field unRecoveredBindings:Ljava/util/Map;
     212: aload_1
     213: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     218: pop
     219: return

  private void recoverBindings() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
       4: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.recoverPersistedBindings:()Ljava/util/List;
       9: astore_1
      10: aload_1
      11: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          255
      26: aload_2
      27: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #70                 // class org/apache/activemq/artemis/jms/persistence/config/PersistedBindings
      35: astore_3
      36: getstatic     #64                 // Field org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$9.$SwitchMap$org$apache$activemq$artemis$jms$persistence$config$PersistedType:[I
      39: aload_3
      40: invokevirtual #71                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedBindings.getType:()Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
      43: invokevirtual #65                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedType.ordinal:()I
      46: iaload
      47: tableswitch   { // 1 to 3
                     1: 72
                     2: 87
                     3: 102
               default: 102
          }
      72: aload_0
      73: getfield      #12                 // Field queueBindings:Ljava/util/Map;
      76: astore        4
      78: aload_0
      79: getfield      #14                 // Field queues:Ljava/util/Map;
      82: astore        5
      84: goto          114
      87: aload_0
      88: getfield      #7                  // Field topicBindings:Ljava/util/Map;
      91: astore        4
      93: aload_0
      94: getfield      #8                  // Field topics:Ljava/util/Map;
      97: astore        5
      99: goto          114
     102: aload_0
     103: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
     106: astore        4
     108: aload_0
     109: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
     112: astore        5
     114: aload         5
     116: aload_3
     117: invokevirtual #72                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedBindings.getName:()Ljava/lang/String;
     120: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     125: astore        6
     127: aload         4
     129: aload_3
     130: invokevirtual #72                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedBindings.getName:()Ljava/lang/String;
     133: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     138: checkcast     #62                 // class java/util/List
     141: astore        7
     143: aload         6
     145: ifnonnull     169
     148: aload_0
     149: getfield      #24                 // Field unRecoveredBindings:Ljava/util/Map;
     152: aload_3
     153: invokevirtual #72                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedBindings.getName:()Ljava/lang/String;
     156: aload_3
     157: invokevirtual #73                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedBindings.getBindings:()Ljava/util/List;
     160: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     165: pop
     166: goto          17
     169: aload         7
     171: ifnonnull     197
     174: new           #21                 // class java/util/ArrayList
     177: dup
     178: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
     181: astore        7
     183: aload         4
     185: aload_3
     186: invokevirtual #72                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedBindings.getName:()Ljava/lang/String;
     189: aload         7
     191: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     196: pop
     197: aload_3
     198: invokevirtual #73                 // Method org/apache/activemq/artemis/jms/persistence/config/PersistedBindings.getBindings:()Ljava/util/List;
     201: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     206: astore        8
     208: aload         8
     210: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     215: ifeq          252
     218: aload         8
     220: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     225: checkcast     #55                 // class java/lang/String
     228: astore        9
     230: aload         7
     232: aload         9
     234: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     239: pop
     240: aload_0
     241: aload         9
     243: aload         6
     245: invokespecial #13                 // Method bindToBindings:(Ljava/lang/String;Ljava/lang/Object;)Z
     248: pop
     249: goto          208
     252: goto          17
     255: return

  public synchronized void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #29                 // Field startCalled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      12: new           #74                 // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$JMSQueueCreator
      15: dup
      16: aload_0
      17: invokespecial #75                 // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$JMSQueueCreator."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;)V
      20: invokeinterface #76,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.setJMSQueueCreator:(Lorg/apache/activemq/artemis/core/server/QueueCreator;)V
      25: aload_0
      26: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      29: aload_0
      30: invokeinterface #77,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.registerActivateCallback:(Lorg/apache/activemq/artemis/core/server/ActivateCallback;)V
      35: aload_0
      36: iconst_1
      37: putfield      #29                 // Field startCalled:Z
      40: aload_0
      41: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      44: invokeinterface #78,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.start:()V
      49: return

  public void stop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #29                 // Field startCalled:Z
       8: ifne          14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: iconst_0
      16: putfield      #29                 // Field startCalled:Z
      19: aload_0
      20: invokevirtual #79                 // Method deActivate:()V
      23: aload_0
      24: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      27: ifnull        39
      30: aload_0
      31: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      34: invokeinterface #80,  1           // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.close:()V
      39: aload_1
      40: monitorexit
      41: goto          49
      44: astore_2
      45: aload_1
      46: monitorexit
      47: aload_2
      48: athrow
      49: aload_0
      50: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      53: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.stop:()V
      58: return
    Exception table:
       from    to  target type
           4    13    44   any
          14    41    44   any
          44    47    44   any

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #82,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.isStarted:()Z
       9: ireturn

  public org.apache.activemq.artemis.spi.core.naming.BindingRegistry getRegistry();
    Code:
       0: aload_0
       1: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
       4: areturn

  public void setRegistry(org.apache.activemq.artemis.spi.core.naming.BindingRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
       5: return

  public org.apache.activemq.artemis.core.server.ActiveMQServer getActiveMQServer();
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: areturn

  public void addAddressSettings(java.lang.String, org.apache.activemq.artemis.core.settings.impl.AddressSettings);
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #83,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getAddressSettingsRepository:()Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
       9: aload_1
      10: aload_2
      11: invokeinterface #84,  3           // InterfaceMethod org/apache/activemq/artemis/core/settings/HierarchicalRepository.addMatch:(Ljava/lang/String;Ljava/lang/Object;)V
      16: return

  public org.apache.activemq.artemis.core.settings.impl.AddressSettings getAddressSettings(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #83,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getAddressSettingsRepository:()Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
       9: aload_1
      10: invokeinterface #85,  2           // InterfaceMethod org/apache/activemq/artemis/core/settings/HierarchicalRepository.getMatch:(Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #86                 // class org/apache/activemq/artemis/core/settings/impl/AddressSettings
      18: areturn

  public void addSecurity(java.lang.String, java.util.Set<org.apache.activemq.artemis.core.security.Role>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #87,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getSecurityRepository:()Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
       9: aload_1
      10: aload_2
      11: invokeinterface #84,  3           // InterfaceMethod org/apache/activemq/artemis/core/settings/HierarchicalRepository.addMatch:(Ljava/lang/String;Ljava/lang/Object;)V
      16: return

  public java.util.Set<org.apache.activemq.artemis.core.security.Role> getSecurity(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #87,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getSecurityRepository:()Lorg/apache/activemq/artemis/core/settings/HierarchicalRepository;
       9: aload_1
      10: invokeinterface #85,  2           // InterfaceMethod org/apache/activemq/artemis/core/settings/HierarchicalRepository.getMatch:(Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #88                 // class java/util/Set
      18: areturn

  public synchronized java.lang.String getVersion();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #89,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getVersion:()Lorg/apache/activemq/artemis/core/version/Version;
      13: invokeinterface #90,  1           // InterfaceMethod org/apache/activemq/artemis/core/version/Version.getFullVersion:()Ljava/lang/String;
      18: areturn

  public synchronized boolean createQueue(boolean, java.lang.String, java.lang.String, boolean, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iconst_0
       7: aload         5
       9: invokevirtual #91                 // Method internalCreateJMSQueue:(ZLjava/lang/String;Ljava/lang/String;ZZ[Ljava/lang/String;)Z
      12: ireturn

  protected boolean internalCreateJMSQueue(boolean, java.lang.String, java.lang.String, boolean, boolean, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #35                 // Field active:Z
       4: ifeq          22
       7: aload_0
       8: getfield      #14                 // Field queues:Ljava/util/Map;
      11: aload_2
      12: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: ifnull        22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: new           #92                 // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$1
      26: dup
      27: aload_0
      28: aload_2
      29: aload         6
      31: aload_3
      32: iload         4
      34: iload_1
      35: invokespecial #93                 // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$1."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;ZZ)V
      38: invokespecial #94                 // Method runAfterActive:(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$WrappedRunnable;)Z
      41: pop
      42: aload_0
      43: getstatic     #95                 // Field org/apache/activemq/artemis/jms/server/management/JMSNotificationType.QUEUE_CREATED:Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;
      46: aload_2
      47: invokespecial #2                  // Method sendNotification:(Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;Ljava/lang/String;)V
      50: iconst_1
      51: ireturn

  public synchronized boolean createTopic(boolean, java.lang.String, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #35                 // Field active:Z
       4: ifeq          22
       7: aload_0
       8: getfield      #8                  // Field topics:Ljava/util/Map;
      11: aload_2
      12: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: ifnull        22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: new           #96                 // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$2
      26: dup
      27: aload_0
      28: aload_2
      29: aload_3
      30: iload_1
      31: invokespecial #97                 // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$2."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;Ljava/lang/String;[Ljava/lang/String;Z)V
      34: invokespecial #94                 // Method runAfterActive:(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$WrappedRunnable;)Z
      37: pop
      38: aload_0
      39: getstatic     #98                 // Field org/apache/activemq/artemis/jms/server/management/JMSNotificationType.TOPIC_CREATED:Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;
      42: aload_2
      43: invokespecial #2                  // Method sendNotification:(Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;Ljava/lang/String;)V
      46: iconst_1
      47: ireturn

  public boolean addTopicToBindingRegistry(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: iconst_1
       6: anewarray     #55                 // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: invokespecial #16                 // Method checkBindings:([Ljava/lang/String;)V
      16: aload_0
      17: getfield      #8                  // Field topics:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #99                 // class org/apache/activemq/artemis/jms/client/ActiveMQTopic
      29: astore_3
      30: aload_3
      31: ifnonnull     44
      34: new           #100                // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #101                // String Topic does not exist
      40: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_3
      45: invokevirtual #103                // Method org/apache/activemq/artemis/jms/client/ActiveMQTopic.getTopicName:()Ljava/lang/String;
      48: ifnonnull     78
      51: new           #100                // class java/lang/IllegalArgumentException
      54: dup
      55: new           #104                // class java/lang/StringBuilder
      58: dup
      59: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      62: aload_1
      63: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #107                // String  is not a topic
      68: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: aload_2
      80: aload_3
      81: invokespecial #13                 // Method bindToBindings:(Ljava/lang/String;Ljava/lang/Object;)Z
      84: istore        4
      86: iload         4
      88: ifeq          129
      91: aload_0
      92: aload_0
      93: getfield      #7                  // Field topicBindings:Ljava/util/Map;
      96: aload_1
      97: iconst_1
      98: anewarray     #55                 // class java/lang/String
     101: dup
     102: iconst_0
     103: aload_2
     104: aastore
     105: invokespecial #11                 // Method addToBindings:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)V
     108: aload_0
     109: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
     112: getstatic     #109                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Topic:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     115: aload_1
     116: iconst_1
     117: anewarray     #55                 // class java/lang/String
     120: dup
     121: iconst_0
     122: aload_2
     123: aastore
     124: invokeinterface #110,  4          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.addBindings:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;[Ljava/lang/String;)V
     129: iload         4
     131: ireturn

  public java.lang.String[] getBindingsOnQueue(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #12                 // Field queueBindings:Ljava/util/Map;
       5: aload_1
       6: invokespecial #111                // Method getBindingsList:(Ljava/util/Map;Ljava/lang/String;)[Ljava/lang/String;
       9: areturn

  public java.lang.String[] getBindingsOnTopic(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field topicBindings:Ljava/util/Map;
       5: aload_1
       6: invokespecial #111                // Method getBindingsList:(Ljava/util/Map;Ljava/lang/String;)[Ljava/lang/String;
       9: areturn

  public java.lang.String[] getBindingsOnConnectionFactory(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
       5: aload_1
       6: invokespecial #111                // Method getBindingsList:(Ljava/util/Map;Ljava/lang/String;)[Ljava/lang/String;
       9: areturn

  public boolean addQueueToBindingRegistry(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: iconst_1
       6: anewarray     #55                 // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: invokespecial #16                 // Method checkBindings:([Ljava/lang/String;)V
      16: aload_0
      17: getfield      #14                 // Field queues:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #112                // class org/apache/activemq/artemis/jms/client/ActiveMQQueue
      29: astore_3
      30: aload_3
      31: ifnonnull     44
      34: new           #100                // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #113                // String Queue does not exist
      40: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_3
      45: invokevirtual #114                // Method org/apache/activemq/artemis/jms/client/ActiveMQQueue.getQueueName:()Ljava/lang/String;
      48: ifnonnull     78
      51: new           #100                // class java/lang/IllegalArgumentException
      54: dup
      55: new           #104                // class java/lang/StringBuilder
      58: dup
      59: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      62: aload_1
      63: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #115                // String  is not a queue
      68: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: aload_2
      80: aload_3
      81: invokespecial #13                 // Method bindToBindings:(Ljava/lang/String;Ljava/lang/Object;)Z
      84: istore        4
      86: iload         4
      88: ifeq          129
      91: aload_0
      92: aload_0
      93: getfield      #12                 // Field queueBindings:Ljava/util/Map;
      96: aload_1
      97: iconst_1
      98: anewarray     #55                 // class java/lang/String
     101: dup
     102: iconst_0
     103: aload_2
     104: aastore
     105: invokespecial #11                 // Method addToBindings:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)V
     108: aload_0
     109: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
     112: getstatic     #116                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Queue:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     115: aload_1
     116: iconst_1
     117: anewarray     #55                 // class java/lang/String
     120: dup
     121: iconst_0
     122: aload_2
     123: aastore
     124: invokeinterface #110,  4          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.addBindings:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;[Ljava/lang/String;)V
     129: iload         4
     131: ireturn

  public boolean addConnectionFactoryToBindingRegistry(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: iconst_1
       6: anewarray     #55                 // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: invokespecial #16                 // Method checkBindings:([Ljava/lang/String;)V
      16: aload_0
      17: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #117                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      29: astore_3
      30: aload_3
      31: ifnonnull     44
      34: new           #100                // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #118                // String Factory does not exist
      40: invokespecial #102                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      48: aload_2
      49: invokeinterface #119,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      54: ifnull        67
      57: getstatic     #120                // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.BUNDLE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle;
      60: aload_1
      61: invokeinterface #121,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.cfBindingsExists:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/ActiveMQAddressExistsException;
      66: athrow
      67: aload_0
      68: aload_2
      69: aload_3
      70: invokespecial #13                 // Method bindToBindings:(Ljava/lang/String;Ljava/lang/Object;)Z
      73: istore        4
      75: iload         4
      77: ifeq          118
      80: aload_0
      81: aload_0
      82: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      85: aload_1
      86: iconst_1
      87: anewarray     #55                 // class java/lang/String
      90: dup
      91: iconst_0
      92: aload_2
      93: aastore
      94: invokespecial #11                 // Method addToBindings:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)V
      97: aload_0
      98: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
     101: getstatic     #122                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.ConnectionFactory:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     104: aload_1
     105: iconst_1
     106: anewarray     #55                 // class java/lang/String
     109: dup
     110: iconst_0
     111: aload_2
     112: aastore
     113: invokeinterface #110,  4          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.addBindings:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;[Ljava/lang/String;)V
     118: iload         4
     120: ireturn

  public boolean removeQueueFromBindingRegistry(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field queueBindings:Ljava/util/Map;
       9: aload_1
      10: aload_2
      11: invokespecial #123                // Method removeFromBindings:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Z
      14: istore_3
      15: iload_3
      16: ifeq          33
      19: aload_0
      20: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      23: getstatic     #116                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Queue:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
      26: aload_1
      27: aload_2
      28: invokeinterface #124,  4          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.deleteBindings:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;Ljava/lang/String;)V
      33: iload_3
      34: ireturn

  public boolean removeQueueFromBindingRegistry(java.lang.String) throws java.lang.Exception;
    Code:
       0: new           #125                // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #126                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore_2
       9: aload_0
      10: new           #127                // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$3
      13: dup
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #128                // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$3."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicBoolean;)V
      20: invokespecial #94                 // Method runAfterActive:(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$WrappedRunnable;)Z
      23: pop
      24: aload_2
      25: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      28: ireturn

  public boolean removeTopicFromBindingRegistry(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: aload_0
       6: getfield      #7                  // Field topicBindings:Ljava/util/Map;
       9: aload_1
      10: aload_2
      11: invokespecial #123                // Method removeFromBindings:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Z
      14: ifeq          33
      17: aload_0
      18: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      21: getstatic     #109                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Topic:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
      24: aload_1
      25: aload_2
      26: invokeinterface #124,  4          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.deleteBindings:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;Ljava/lang/String;)V
      31: iconst_1
      32: ireturn
      33: iconst_0
      34: ireturn

  public boolean removeTopicFromBindingRegistry(java.lang.String) throws java.lang.Exception;
    Code:
       0: new           #125                // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #126                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore_2
       9: aload_0
      10: new           #130                // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$4
      13: dup
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #131                // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$4."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicBoolean;)V
      20: invokespecial #94                 // Method runAfterActive:(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$WrappedRunnable;)Z
      23: pop
      24: aload_2
      25: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      28: ireturn

  public boolean removeConnectionFactoryFromBindingRegistry(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: aload_0
       6: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
       9: aload_1
      10: aload_2
      11: invokespecial #123                // Method removeFromBindings:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Z
      14: pop
      15: aload_0
      16: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      19: getstatic     #122                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.ConnectionFactory:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
      22: aload_1
      23: aload_2
      24: invokeinterface #124,  4          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.deleteBindings:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;Ljava/lang/String;)V
      29: iconst_1
      30: ireturn

  public boolean removeConnectionFactoryFromBindingRegistry(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: aload_0
       6: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
       9: aload_0
      10: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      13: aload_1
      14: invokespecial #5                  // Method removeFromBindings:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z
      17: pop
      18: aload_0
      19: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      22: aload_1
      23: invokeinterface #132,  2          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.deleteConnectionFactory:(Ljava/lang/String;)V
      28: iconst_1
      29: ireturn

  public synchronized boolean destroyQueue(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #133                // Method destroyQueue:(Ljava/lang/String;Z)Z
       6: ireturn

  public synchronized boolean destroyQueue(java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: aload_1
       9: invokestatic  #134                // Method org/apache/activemq/artemis/jms/client/ActiveMQDestination.createQueueAddressFromName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      12: aconst_null
      13: iload_2
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: iload_2
      23: invokeinterface #135,  5          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.destroyQueue:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/security/SecurityAuth;ZZ)V
      28: aload_0
      29: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      32: invokeinterface #136,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getPostOffice:()Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
      37: aload_1
      38: invokestatic  #134                // Method org/apache/activemq/artemis/jms/client/ActiveMQDestination.createQueueAddressFromName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      41: invokeinterface #137,  2          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/PostOffice.getBinding:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Lorg/apache/activemq/artemis/core/postoffice/Binding;
      46: ifnonnull     118
      49: aload_0
      50: aload_0
      51: getfield      #14                 // Field queues:Ljava/util/Map;
      54: aload_0
      55: getfield      #12                 // Field queueBindings:Ljava/util/Map;
      58: aload_1
      59: invokespecial #5                  // Method removeFromBindings:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z
      62: pop
      63: aload_0
      64: getfield      #14                 // Field queues:Ljava/util/Map;
      67: aload_1
      68: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: aload_0
      75: getfield      #12                 // Field queueBindings:Ljava/util/Map;
      78: aload_1
      79: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload_0
      86: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
      89: aload_1
      90: invokeinterface #138,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.unregisterQueue:(Ljava/lang/String;)V
      95: aload_0
      96: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      99: getstatic     #116                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Queue:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     102: aload_1
     103: invokeinterface #139,  3          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.deleteDestination:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;)V
     108: aload_0
     109: getstatic     #140                // Field org/apache/activemq/artemis/jms/server/management/JMSNotificationType.QUEUE_DESTROYED:Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;
     112: aload_1
     113: invokespecial #2                  // Method sendNotification:(Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;Ljava/lang/String;)V
     116: iconst_1
     117: ireturn
     118: iconst_0
     119: ireturn

  public synchronized boolean destroyTopic(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #141                // Method destroyTopic:(Ljava/lang/String;Z)Z
       6: ireturn

  public synchronized boolean destroyTopic(java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getManagementService:()Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      13: new           #104                // class java/lang/StringBuilder
      16: dup
      17: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #143                // String core.address.
      22: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokestatic  #144                // Method org/apache/activemq/artemis/jms/client/ActiveMQDestination.createTopicAddressFromName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      29: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #146,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.getResource:(Ljava/lang/String;)Ljava/lang/Object;
      40: checkcast     #147                // class org/apache/activemq/artemis/api/core/management/AddressControl
      43: astore_3
      44: aload_3
      45: ifnull        247
      48: aload_3
      49: invokeinterface #148,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/management/AddressControl.getQueueNames:()[Ljava/lang/String;
      54: astore        4
      56: aload         4
      58: arraylength
      59: istore        5
      61: iconst_0
      62: istore        6
      64: iload         6
      66: iload         5
      68: if_icmpge     166
      71: aload         4
      73: iload         6
      75: aaload
      76: astore        7
      78: aload_0
      79: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      82: invokeinterface #136,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getPostOffice:()Lorg/apache/activemq/artemis/core/postoffice/PostOffice;
      87: new           #149                // class org/apache/activemq/artemis/api/core/SimpleString
      90: dup
      91: aload         7
      93: invokespecial #150                // Method org/apache/activemq/artemis/api/core/SimpleString."<init>":(Ljava/lang/String;)V
      96: invokeinterface #137,  2          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/PostOffice.getBinding:(Lorg/apache/activemq/artemis/api/core/SimpleString;)Lorg/apache/activemq/artemis/core/postoffice/Binding;
     101: astore        8
     103: aload         8
     105: ifnonnull     122
     108: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
     111: aload         7
     113: aload_1
     114: invokeinterface #151,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.noQueueOnTopic:(Ljava/lang/String;Ljava/lang/String;)V
     119: goto          160
     122: aload         8
     124: invokeinterface #152,  1          // InterfaceMethod org/apache/activemq/artemis/core/postoffice/Binding.getType:()Lorg/apache/activemq/artemis/core/postoffice/BindingType;
     129: getstatic     #153                // Field org/apache/activemq/artemis/core/postoffice/BindingType.REMOTE_QUEUE:Lorg/apache/activemq/artemis/core/postoffice/BindingType;
     132: if_acmpeq     160
     135: aload_0
     136: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     139: aload         7
     141: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
     144: aconst_null
     145: iload_2
     146: ifne          153
     149: iconst_1
     150: goto          154
     153: iconst_0
     154: iload_2
     155: invokeinterface #135,  5          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.destroyQueue:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/security/SecurityAuth;ZZ)V
     160: iinc          6, 1
     163: goto          64
     166: aload_3
     167: invokeinterface #148,  1          // InterfaceMethod org/apache/activemq/artemis/api/core/management/AddressControl.getQueueNames:()[Ljava/lang/String;
     172: arraylength
     173: ifne          245
     176: aload_0
     177: aload_0
     178: getfield      #8                  // Field topics:Ljava/util/Map;
     181: aload_0
     182: getfield      #7                  // Field topicBindings:Ljava/util/Map;
     185: aload_1
     186: invokespecial #5                  // Method removeFromBindings:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z
     189: pop
     190: aload_0
     191: getfield      #8                  // Field topics:Ljava/util/Map;
     194: aload_1
     195: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     200: pop
     201: aload_0
     202: getfield      #7                  // Field topicBindings:Ljava/util/Map;
     205: aload_1
     206: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     211: pop
     212: aload_0
     213: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
     216: aload_1
     217: invokeinterface #155,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.unregisterTopic:(Ljava/lang/String;)V
     222: aload_0
     223: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
     226: getstatic     #109                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Topic:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     229: aload_1
     230: invokeinterface #139,  3          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.deleteDestination:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;)V
     235: aload_0
     236: getstatic     #156                // Field org/apache/activemq/artemis/jms/server/management/JMSNotificationType.TOPIC_DESTROYED:Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;
     239: aload_1
     240: invokespecial #2                  // Method sendNotification:(Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;Ljava/lang/String;)V
     243: iconst_1
     244: ireturn
     245: iconst_0
     246: ireturn
     247: iconst_0
     248: ireturn

  public synchronized void createConnectionFactory(java.lang.String, boolean, org.apache.activemq.artemis.api.jms.JMSFactoryType, java.util.List<java.lang.String>, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #117                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      17: astore        6
      19: aload         6
      21: ifnonnull     65
      24: new           #157                // class org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl
      27: dup
      28: invokespecial #158                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl."<init>":()V
      31: aload_1
      32: invokevirtual #159                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl.setName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      35: iload_2
      36: invokeinterface #160,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setHA:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      41: aload         4
      43: invokeinterface #161,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConnectorNames:(Ljava/util/List;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      48: aload_3
      49: invokeinterface #162,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setFactoryType:(Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      54: astore        7
      56: aload_0
      57: iconst_1
      58: aload         7
      60: aload         5
      62: invokevirtual #163                // Method createConnectionFactory:(ZLorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;[Ljava/lang/String;)V
      65: return

  public synchronized void createConnectionFactory(java.lang.String, boolean, org.apache.activemq.artemis.api.jms.JMSFactoryType, java.util.List<java.lang.String>, java.lang.String, long, long, long, long, boolean, int, boolean, int, int, int, int, int, boolean, boolean, boolean, boolean, boolean, java.lang.String, int, int, boolean, int, int, long, double, long, int, boolean, java.lang.String, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #117                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      17: astore        43
      19: aload         43
      21: ifnonnull     268
      24: new           #157                // class org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl
      27: dup
      28: invokespecial #158                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl."<init>":()V
      31: aload_1
      32: invokevirtual #159                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl.setName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      35: iload_2
      36: invokeinterface #160,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setHA:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      41: aload         4
      43: invokeinterface #161,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConnectorNames:(Ljava/util/List;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      48: aload         5
      50: invokeinterface #164,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setClientID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      55: lload         6
      57: invokeinterface #165,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setClientFailureCheckPeriod:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      62: lload         8
      64: invokeinterface #166,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConnectionTTL:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      69: aload_3
      70: invokeinterface #162,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setFactoryType:(Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      75: lload         10
      77: invokeinterface #167,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCallTimeout:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      82: lload         12
      84: invokeinterface #168,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCallFailoverTimeout:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      89: iload         14
      91: invokeinterface #169,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCacheLargeMessagesClient:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      96: iload         15
      98: invokeinterface #170,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setMinLargeMessageSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     103: iload         17
     105: invokeinterface #171,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConsumerWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     110: iload         18
     112: invokeinterface #172,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConsumerMaxRate:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     117: iload         19
     119: invokeinterface #173,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConfirmationWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     124: iload         20
     126: invokeinterface #174,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setProducerWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     131: iload         21
     133: invokeinterface #175,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setProducerMaxRate:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     138: iload         22
     140: invokeinterface #176,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnAcknowledge:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     145: iload         23
     147: invokeinterface #177,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnDurableSend:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     152: iload         24
     154: invokeinterface #178,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnNonDurableSend:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     159: iload         25
     161: invokeinterface #179,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setAutoGroup:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     166: iload         26
     168: invokeinterface #180,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setPreAcknowledge:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     173: aload         27
     175: invokeinterface #181,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setLoadBalancingPolicyClassName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     180: iload         28
     182: invokeinterface #182,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setTransactionBatchSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     187: iload         29
     189: invokeinterface #183,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setDupsOKBatchSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     194: iload         30
     196: invokeinterface #184,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setUseGlobalPools:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     201: iload         31
     203: invokeinterface #185,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setScheduledThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     208: iload         32
     210: invokeinterface #186,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     215: lload         33
     217: invokeinterface #187,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setRetryInterval:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     222: dload         35
     224: invokeinterface #188,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setRetryIntervalMultiplier:(D)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     229: lload         37
     231: invokeinterface #189,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setMaxRetryInterval:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     236: iload         39
     238: invokeinterface #190,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setReconnectAttempts:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     243: iload         40
     245: invokeinterface #191,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setFailoverOnInitialConnection:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     250: aload         41
     252: invokeinterface #192,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setGroupID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     257: astore        44
     259: aload_0
     260: iconst_1
     261: aload         44
     263: aload         42
     265: invokevirtual #163                // Method createConnectionFactory:(ZLorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;[Ljava/lang/String;)V
     268: return

  public synchronized void createConnectionFactory(java.lang.String, boolean, org.apache.activemq.artemis.api.jms.JMSFactoryType, java.lang.String, java.lang.String, long, long, long, long, boolean, int, boolean, int, int, int, int, int, boolean, boolean, boolean, boolean, boolean, java.lang.String, int, int, boolean, int, int, long, double, long, int, boolean, java.lang.String, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #117                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      17: astore        43
      19: aload         43
      21: ifnonnull     275
      24: new           #157                // class org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl
      27: dup
      28: invokespecial #158                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl."<init>":()V
      31: aload_1
      32: invokevirtual #159                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl.setName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      35: iload_2
      36: invokeinterface #160,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setHA:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      41: aload         42
      43: invokeinterface #193,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBindings:([Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      48: aload         4
      50: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setDiscoveryGroupName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      55: aload_3
      56: invokeinterface #162,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setFactoryType:(Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      61: aload         5
      63: invokeinterface #164,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setClientID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      68: lload         6
      70: invokeinterface #165,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setClientFailureCheckPeriod:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      75: lload         8
      77: invokeinterface #166,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConnectionTTL:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      82: lload         10
      84: invokeinterface #167,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCallTimeout:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      89: lload         12
      91: invokeinterface #168,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCallFailoverTimeout:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      96: iload         14
      98: invokeinterface #169,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCacheLargeMessagesClient:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     103: iload         15
     105: invokeinterface #170,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setMinLargeMessageSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     110: iload         16
     112: invokeinterface #195,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCompressLargeMessages:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     117: iload         17
     119: invokeinterface #171,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConsumerWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     124: iload         18
     126: invokeinterface #172,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConsumerMaxRate:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     131: iload         19
     133: invokeinterface #173,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConfirmationWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     138: iload         20
     140: invokeinterface #174,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setProducerWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     145: iload         21
     147: invokeinterface #175,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setProducerMaxRate:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     152: iload         22
     154: invokeinterface #176,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnAcknowledge:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     159: iload         23
     161: invokeinterface #177,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnDurableSend:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     166: iload         24
     168: invokeinterface #178,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnNonDurableSend:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     173: iload         25
     175: invokeinterface #179,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setAutoGroup:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     180: iload         26
     182: invokeinterface #180,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setPreAcknowledge:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     187: aload         27
     189: invokeinterface #181,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setLoadBalancingPolicyClassName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     194: iload         28
     196: invokeinterface #182,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setTransactionBatchSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     201: iload         29
     203: invokeinterface #183,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setDupsOKBatchSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     208: iload         30
     210: invokeinterface #184,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setUseGlobalPools:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     215: iload         31
     217: invokeinterface #185,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setScheduledThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     222: iload         32
     224: invokeinterface #186,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     229: lload         33
     231: invokeinterface #187,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setRetryInterval:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     236: dload         35
     238: invokeinterface #188,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setRetryIntervalMultiplier:(D)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     243: lload         37
     245: invokeinterface #189,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setMaxRetryInterval:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     250: iload         39
     252: invokeinterface #190,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setReconnectAttempts:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     257: iload         40
     259: invokeinterface #191,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setFailoverOnInitialConnection:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
     264: astore        44
     266: aload_0
     267: iconst_1
     268: aload         44
     270: aload         42
     272: invokevirtual #163                // Method createConnectionFactory:(ZLorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;[Ljava/lang/String;)V
     275: return

  public synchronized void createConnectionFactory(java.lang.String, boolean, org.apache.activemq.artemis.api.jms.JMSFactoryType, java.lang.String, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #117                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      17: astore        6
      19: aload         6
      21: ifnonnull     66
      24: new           #157                // class org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl
      27: dup
      28: invokespecial #158                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl."<init>":()V
      31: aload_1
      32: invokevirtual #159                // Method org/apache/activemq/artemis/jms/server/config/impl/ConnectionFactoryConfigurationImpl.setName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      35: iload_2
      36: invokeinterface #160,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setHA:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      41: aload         5
      43: invokeinterface #193,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBindings:([Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      48: aload         4
      50: invokeinterface #194,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setDiscoveryGroupName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      55: astore        7
      57: aload_0
      58: iconst_1
      59: aload         7
      61: aload         5
      63: invokevirtual #163                // Method createConnectionFactory:(ZLorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;[Ljava/lang/String;)V
      66: return

  public synchronized org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory recreateCF(java.lang.String, org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #62                 // class java/util/List
      13: astore_3
      14: aload_3
      15: ifnonnull     28
      18: getstatic     #120                // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.BUNDLE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle;
      21: aload_1
      22: invokeinterface #196,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.cfDoesntExist:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/ActiveMQInternalErrorException;
      27: athrow
      28: aload_3
      29: aload_3
      30: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
      35: anewarray     #55                 // class java/lang/String
      38: invokeinterface #197,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      43: checkcast     #198                // class "[Ljava/lang/String;"
      46: astore        4
      48: aload_0
      49: aload_2
      50: invokevirtual #199                // Method internalCreateCFPOJO:(Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      53: astore        5
      55: aload_2
      56: invokeinterface #200,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isPersisted:()Z
      61: ifeq          101
      64: aload_0
      65: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      68: new           #201                // class org/apache/activemq/artemis/jms/persistence/config/PersistedConnectionFactory
      71: dup
      72: aload_2
      73: invokespecial #202                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedConnectionFactory."<init>":(Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;)V
      76: invokeinterface #203,  2          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.storeConnectionFactory:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedConnectionFactory;)V
      81: aload_0
      82: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      85: getstatic     #122                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.ConnectionFactory:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
      88: aload_2
      89: invokeinterface #204,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getName:()Ljava/lang/String;
      94: aload         4
      96: invokeinterface #110,  4          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.addBindings:(Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;Ljava/lang/String;[Ljava/lang/String;)V
     101: aload         4
     103: astore        6
     105: aload         6
     107: arraylength
     108: istore        7
     110: iconst_0
     111: istore        8
     113: iload         8
     115: iload         7
     117: if_icmpge     142
     120: aload         6
     122: iload         8
     124: aaload
     125: astore        9
     127: aload_0
     128: aload         9
     130: aload         5
     132: invokespecial #13                 // Method bindToBindings:(Ljava/lang/String;Ljava/lang/Object;)Z
     135: pop
     136: iinc          8, 1
     139: goto          113
     142: aload         5
     144: areturn

  public synchronized void createConnectionFactory(boolean, org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration, java.lang.String...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #205                // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$5
       4: dup
       5: aload_0
       6: aload_2
       7: aload_3
       8: iload_1
       9: invokespecial #206                // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$5."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;[Ljava/lang/String;Z)V
      12: invokespecial #94                 // Method runAfterActive:(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$WrappedRunnable;)Z
      15: pop
      16: return

  private void sendNotification(org.apache.activemq.artemis.jms.server.management.JMSNotificationType, java.lang.String);
    Code:
       0: new           #207                // class org/apache/activemq/artemis/utils/TypedProperties
       3: dup
       4: invokespecial #208                // Method org/apache/activemq/artemis/utils/TypedProperties."<init>":()V
       7: astore_3
       8: aload_3
       9: getstatic     #209                // Field org/apache/activemq/artemis/jms/server/management/JMSNotificationType.MESSAGE:Lorg/apache/activemq/artemis/api/core/SimpleString;
      12: aload_2
      13: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      16: invokevirtual #210                // Method org/apache/activemq/artemis/utils/TypedProperties.putSimpleStringProperty:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;)V
      19: new           #211                // class org/apache/activemq/artemis/core/server/management/Notification
      22: dup
      23: aconst_null
      24: aload_1
      25: aload_3
      26: invokespecial #212                // Method org/apache/activemq/artemis/core/server/management/Notification."<init>":(Ljava/lang/String;Lorg/apache/activemq/artemis/api/core/management/NotificationType;Lorg/apache/activemq/artemis/utils/TypedProperties;)V
      29: astore        4
      31: aload_0
      32: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      35: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getManagementService:()Lorg/apache/activemq/artemis/core/server/management/ManagementService;
      40: aload         4
      42: invokeinterface #213,  2          // InterfaceMethod org/apache/activemq/artemis/core/server/management/ManagementService.sendNotification:(Lorg/apache/activemq/artemis/core/server/management/Notification;)V
      47: goto          65
      50: astore        5
      52: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
      55: aload         4
      57: invokevirtual #214                // Method org/apache/activemq/artemis/core/server/management/Notification.toString:()Ljava/lang/String;
      60: invokeinterface #215,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.failedToSendNotification:(Ljava/lang/String;)V
      65: return
    Exception table:
       from    to  target type
          31    47    50   Class java/lang/Exception

  public org.apache.activemq.artemis.jms.persistence.JMSStorageManager getJMSStorageManager();
    Code:
       0: aload_0
       1: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
       4: areturn

  public void replaceStorageManager(org.apache.activemq.artemis.jms.persistence.JMSStorageManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
       5: return

  private java.lang.String[] getBindingsList(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #62                 // class java/util/List
      10: astore_3
      11: aload_3
      12: ifnonnull     20
      15: iconst_0
      16: anewarray     #55                 // class java/lang/String
      19: areturn
      20: aload_3
      21: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
      26: anewarray     #55                 // class java/lang/String
      29: astore        4
      31: aload_3
      32: aload         4
      34: invokeinterface #197,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      39: pop
      40: aload         4
      42: areturn

  private boolean internalCreateQueue(java.lang.String, java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #14                 // Field queues:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: invokestatic  #216                // Method org/apache/activemq/artemis/jms/client/ActiveMQDestination.createQueue:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/client/ActiveMQQueue;
      19: astore        4
      21: aconst_null
      22: astore        5
      24: aload_2
      25: ifnull        34
      28: aload_2
      29: invokestatic  #217                // Method org/apache/activemq/artemis/jms/client/SelectorTranslator.convertToActiveMQFilterString:(Ljava/lang/String;)Ljava/lang/String;
      32: astore        5
      34: aload_0
      35: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      38: aload         4
      40: invokevirtual #218                // Method org/apache/activemq/artemis/jms/client/ActiveMQQueue.getAddress:()Ljava/lang/String;
      43: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      46: aload         4
      48: invokevirtual #218                // Method org/apache/activemq/artemis/jms/client/ActiveMQQueue.getAddress:()Ljava/lang/String;
      51: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      54: aload         5
      56: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      59: iload_3
      60: iconst_0
      61: invokeinterface #219,  6          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.deployQueue:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;ZZ)Lorg/apache/activemq/artemis/core/server/Queue;
      66: astore        6
      68: aload_0
      69: getfield      #14                 // Field queues:Ljava/util/Map;
      72: aload_1
      73: aload         4
      75: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: aload_0
      82: aload_1
      83: getstatic     #116                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Queue:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
      86: invokevirtual #220                // Method recoverregistryBindings:(Ljava/lang/String;Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;)V
      89: aload_0
      90: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
      93: aload         4
      95: aload         6
      97: invokeinterface #221,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.registerQueue:(Lorg/apache/activemq/artemis/jms/client/ActiveMQQueue;Lorg/apache/activemq/artemis/core/server/Queue;)V
     102: iconst_1
     103: ireturn

  private boolean internalCreateTopic(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field topics:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: invokestatic  #222                // Method org/apache/activemq/artemis/jms/client/ActiveMQDestination.createTopic:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/client/ActiveMQTopic;
      19: astore_2
      20: aload_0
      21: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      24: aload_2
      25: invokevirtual #223                // Method org/apache/activemq/artemis/jms/client/ActiveMQTopic.getAddress:()Ljava/lang/String;
      28: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      31: aload_2
      32: invokevirtual #223                // Method org/apache/activemq/artemis/jms/client/ActiveMQTopic.getAddress:()Ljava/lang/String;
      35: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      38: ldc           #225                // String __AMQX=-1
      40: invokestatic  #154                // Method org/apache/activemq/artemis/api/core/SimpleString.toSimpleString:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/SimpleString;
      43: iconst_1
      44: iconst_0
      45: invokeinterface #219,  6          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.deployQueue:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/api/core/SimpleString;ZZ)Lorg/apache/activemq/artemis/core/server/Queue;
      50: pop
      51: aload_0
      52: getfield      #8                  // Field topics:Ljava/util/Map;
      55: aload_1
      56: aload_2
      57: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: aload_0
      64: aload_1
      65: getstatic     #109                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Topic:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
      68: invokevirtual #220                // Method recoverregistryBindings:(Ljava/lang/String;Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;)V
      71: aload_0
      72: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
      75: aload_2
      76: invokeinterface #226,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.registerTopic:(Lorg/apache/activemq/artemis/jms/client/ActiveMQTopic;)V
      81: iconst_1
      82: ireturn

  private org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory internalCreateCF(org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #204,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getName:()Ljava/lang/String;
      14: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #117                // class org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory
      22: astore_2
      23: aload_2
      24: ifnonnull     33
      27: aload_0
      28: aload_1
      29: invokevirtual #199                // Method internalCreateCFPOJO:(Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      32: astore_2
      33: aload_0
      34: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
      37: aload_1
      38: invokeinterface #204,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getName:()Ljava/lang/String;
      43: aload_2
      44: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
      54: aload_1
      55: invokeinterface #204,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getName:()Ljava/lang/String;
      60: aload_1
      61: aload_2
      62: invokeinterface #227,  4          // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.registerConnectionFactory:(Ljava/lang/String;Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;)V
      67: aload_2
      68: areturn

  protected org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory internalCreateCFPOJO(org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_1
       1: invokeinterface #228,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
       6: ifnull        94
       9: aload_0
      10: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      13: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      18: invokeinterface #229,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getDiscoveryGroupConfigurations:()Ljava/util/Map;
      23: aload_1
      24: invokeinterface #228,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
      29: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #230                // class org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration
      37: astore_3
      38: aload_3
      39: ifnonnull     57
      42: getstatic     #120                // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.BUNDLE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle;
      45: aload_1
      46: invokeinterface #228,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
      51: invokeinterface #231,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.discoveryGroupDoesntExist:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
      56: athrow
      57: aload_1
      58: invokeinterface #232,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isHA:()Z
      63: ifeq          80
      66: aload_3
      67: aload_1
      68: invokeinterface #233,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getFactoryType:()Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
      73: invokestatic  #234                // Method org/apache/activemq/artemis/api/jms/ActiveMQJMSClient.createConnectionFactoryWithHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      76: astore_2
      77: goto          91
      80: aload_3
      81: aload_1
      82: invokeinterface #233,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getFactoryType:()Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
      87: invokestatic  #235                // Method org/apache/activemq/artemis/api/jms/ActiveMQJMSClient.createConnectionFactoryWithoutHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      90: astore_2
      91: goto          273
      94: aload_1
      95: invokeinterface #236,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConnectorNames:()Ljava/util/List;
     100: ifnull        117
     103: aload_1
     104: invokeinterface #236,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConnectorNames:()Ljava/util/List;
     109: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
     114: ifne          126
     117: getstatic     #120                // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.BUNDLE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle;
     120: invokeinterface #237,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.noConnectorNameOnCF:()Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
     125: athrow
     126: aload_1
     127: invokeinterface #236,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConnectorNames:()Ljava/util/List;
     132: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
     137: anewarray     #238                // class org/apache/activemq/artemis/api/core/TransportConfiguration
     140: astore_3
     141: iconst_0
     142: istore        4
     144: aload_1
     145: invokeinterface #236,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConnectorNames:()Ljava/util/List;
     150: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     155: astore        5
     157: aload         5
     159: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     164: ifeq          239
     167: aload         5
     169: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     174: checkcast     #55                 // class java/lang/String
     177: astore        6
     179: aload_0
     180: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
     183: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
     188: invokeinterface #239,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectorConfigurations:()Ljava/util/Map;
     193: aload         6
     195: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     200: checkcast     #238                // class org/apache/activemq/artemis/api/core/TransportConfiguration
     203: astore        7
     205: aload         7
     207: ifnonnull     221
     210: getstatic     #120                // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.BUNDLE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle;
     213: aload         6
     215: invokeinterface #240,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle.noConnectorNameConfiguredOnCF:(Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/ActiveMQIllegalStateException;
     220: athrow
     221: aload_0
     222: aload         7
     224: invokespecial #241                // Method correctInvalidNettyConnectorHost:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)V
     227: aload_3
     228: iload         4
     230: iinc          4, 1
     233: aload         7
     235: aastore
     236: goto          157
     239: aload_1
     240: invokeinterface #232,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isHA:()Z
     245: ifeq          262
     248: aload_1
     249: invokeinterface #233,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getFactoryType:()Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
     254: aload_3
     255: invokestatic  #242                // Method org/apache/activemq/artemis/api/jms/ActiveMQJMSClient.createConnectionFactoryWithHA:(Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
     258: astore_2
     259: goto          273
     262: aload_1
     263: invokeinterface #233,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getFactoryType:()Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
     268: aload_3
     269: invokestatic  #243                // Method org/apache/activemq/artemis/api/jms/ActiveMQJMSClient.createConnectionFactoryWithoutHA:(Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
     272: astore_2
     273: aload_2
     274: aload_1
     275: invokeinterface #244,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getClientID:()Ljava/lang/String;
     280: invokevirtual #245                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setClientID:(Ljava/lang/String;)V
     283: aload_2
     284: aload_1
     285: invokeinterface #246,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getClientFailureCheckPeriod:()J
     290: invokevirtual #247                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setClientFailureCheckPeriod:(J)V
     293: aload_2
     294: aload_1
     295: invokeinterface #248,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConnectionTTL:()J
     300: invokevirtual #249                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setConnectionTTL:(J)V
     303: aload_2
     304: aload_1
     305: invokeinterface #250,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getCallTimeout:()J
     310: invokevirtual #251                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setCallTimeout:(J)V
     313: aload_2
     314: aload_1
     315: invokeinterface #252,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getCallFailoverTimeout:()J
     320: invokevirtual #253                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setCallFailoverTimeout:(J)V
     323: aload_2
     324: aload_1
     325: invokeinterface #254,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isCacheLargeMessagesClient:()Z
     330: invokevirtual #255                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setCacheLargeMessagesClient:(Z)V
     333: aload_2
     334: aload_1
     335: invokeinterface #256,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getMinLargeMessageSize:()I
     340: invokevirtual #257                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setMinLargeMessageSize:(I)V
     343: aload_2
     344: aload_1
     345: invokeinterface #258,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConsumerWindowSize:()I
     350: invokevirtual #259                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setConsumerWindowSize:(I)V
     353: aload_2
     354: aload_1
     355: invokeinterface #260,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConsumerMaxRate:()I
     360: invokevirtual #261                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setConsumerMaxRate:(I)V
     363: aload_2
     364: aload_1
     365: invokeinterface #262,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConfirmationWindowSize:()I
     370: invokevirtual #263                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setConfirmationWindowSize:(I)V
     373: aload_2
     374: aload_1
     375: invokeinterface #264,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getProducerWindowSize:()I
     380: invokevirtual #265                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setProducerWindowSize:(I)V
     383: aload_2
     384: aload_1
     385: invokeinterface #266,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getProducerMaxRate:()I
     390: invokevirtual #267                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setProducerMaxRate:(I)V
     393: aload_2
     394: aload_1
     395: invokeinterface #268,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isBlockOnAcknowledge:()Z
     400: invokevirtual #269                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setBlockOnAcknowledge:(Z)V
     403: aload_2
     404: aload_1
     405: invokeinterface #270,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isBlockOnDurableSend:()Z
     410: invokevirtual #271                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setBlockOnDurableSend:(Z)V
     413: aload_2
     414: aload_1
     415: invokeinterface #272,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isBlockOnNonDurableSend:()Z
     420: invokevirtual #273                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setBlockOnNonDurableSend:(Z)V
     423: aload_2
     424: aload_1
     425: invokeinterface #274,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isAutoGroup:()Z
     430: invokevirtual #275                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setAutoGroup:(Z)V
     433: aload_2
     434: aload_1
     435: invokeinterface #276,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isPreAcknowledge:()Z
     440: invokevirtual #277                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setPreAcknowledge:(Z)V
     443: aload_2
     444: aload_1
     445: invokeinterface #278,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getLoadBalancingPolicyClassName:()Ljava/lang/String;
     450: invokevirtual #279                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setConnectionLoadBalancingPolicyClassName:(Ljava/lang/String;)V
     453: aload_2
     454: aload_1
     455: invokeinterface #280,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getTransactionBatchSize:()I
     460: invokevirtual #281                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setTransactionBatchSize:(I)V
     463: aload_2
     464: aload_1
     465: invokeinterface #282,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getDupsOKBatchSize:()I
     470: invokevirtual #283                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setDupsOKBatchSize:(I)V
     473: aload_2
     474: aload_1
     475: invokeinterface #284,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isUseGlobalPools:()Z
     480: invokevirtual #285                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setUseGlobalPools:(Z)V
     483: aload_2
     484: aload_1
     485: invokeinterface #286,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getScheduledThreadPoolMaxSize:()I
     490: invokevirtual #287                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setScheduledThreadPoolMaxSize:(I)V
     493: aload_2
     494: aload_1
     495: invokeinterface #288,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getThreadPoolMaxSize:()I
     500: invokevirtual #289                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setThreadPoolMaxSize:(I)V
     503: aload_2
     504: aload_1
     505: invokeinterface #290,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getRetryInterval:()J
     510: invokevirtual #291                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setRetryInterval:(J)V
     513: aload_2
     514: aload_1
     515: invokeinterface #292,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getRetryIntervalMultiplier:()D
     520: invokevirtual #293                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setRetryIntervalMultiplier:(D)V
     523: aload_2
     524: aload_1
     525: invokeinterface #294,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getMaxRetryInterval:()J
     530: invokevirtual #295                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setMaxRetryInterval:(J)V
     533: aload_2
     534: aload_1
     535: invokeinterface #296,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getReconnectAttempts:()I
     540: invokevirtual #297                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setReconnectAttempts:(I)V
     543: aload_2
     544: aload_1
     545: invokeinterface #298,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isFailoverOnInitialConnection:()Z
     550: invokevirtual #299                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setFailoverOnInitialConnection:(Z)V
     553: aload_2
     554: aload_1
     555: invokeinterface #300,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isCompressLargeMessages:()Z
     560: invokevirtual #301                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setCompressLargeMessage:(Z)V
     563: aload_2
     564: aload_1
     565: invokeinterface #302,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getGroupID:()Ljava/lang/String;
     570: invokevirtual #303                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setGroupID:(Ljava/lang/String;)V
     573: aload_2
     574: aload_1
     575: invokeinterface #304,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getProtocolManagerFactoryStr:()Ljava/lang/String;
     580: invokevirtual #305                // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.setProtocolManagerFactoryStr:(Ljava/lang/String;)V
     583: aload_2
     584: areturn

  public synchronized boolean destroyConnectionFactory(java.lang.String) throws java.lang.Exception;
    Code:
       0: new           #125                // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #126                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore_2
       9: aload_0
      10: new           #306                // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$6
      13: dup
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #307                // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$6."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicBoolean;)V
      20: invokespecial #94                 // Method runAfterActive:(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$WrappedRunnable;)Z
      23: pop
      24: aload_2
      25: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      28: ifeq          39
      31: aload_0
      32: getstatic     #308                // Field org/apache/activemq/artemis/jms/server/management/JMSNotificationType.CONNECTION_FACTORY_DESTROYED:Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;
      35: aload_1
      36: invokespecial #2                  // Method sendNotification:(Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;Ljava/lang/String;)V
      39: aload_2
      40: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      43: ireturn

  protected boolean shutdownConnectionFactory(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #62                 // class java/util/List
      17: astore_2
      18: aload_0
      19: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      22: ifnull        66
      25: aload_2
      26: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          66
      41: aload_3
      42: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #55                 // class java/lang/String
      50: astore        4
      52: aload_0
      53: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      56: aload         4
      58: invokeinterface #309,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.unbind:(Ljava/lang/String;)V
      63: goto          32
      66: aload_0
      67: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
      70: aload_1
      71: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_0
      78: getfield      #20                 // Field connectionFactories:Ljava/util/Map;
      81: aload_1
      82: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload_0
      89: getfield      #33                 // Field jmsManagementService:Lorg/apache/activemq/artemis/jms/server/management/JMSManagementService;
      92: aload_1
      93: invokeinterface #310,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/management/JMSManagementService.unregisterConnectionFactory:(Ljava/lang/String;)V
      98: iconst_1
      99: ireturn

  public java.lang.String[] listRemoteAddresses() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActiveMQServerControl:()Lorg/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl;
      13: invokevirtual #312                // Method org/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl.listRemoteAddresses:()[Ljava/lang/String;
      16: areturn

  public java.lang.String[] listRemoteAddresses(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActiveMQServerControl:()Lorg/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl;
      13: aload_1
      14: invokevirtual #313                // Method org/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl.listRemoteAddresses:(Ljava/lang/String;)[Ljava/lang/String;
      17: areturn

  public boolean closeConnectionsForAddress(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActiveMQServerControl:()Lorg/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl;
      13: aload_1
      14: invokevirtual #314                // Method org/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl.closeConnectionsForAddress:(Ljava/lang/String;)Z
      17: ireturn

  public boolean closeConsumerConnectionsForAddress(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActiveMQServerControl:()Lorg/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl;
      13: aload_1
      14: invokevirtual #315                // Method org/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl.closeConsumerConnectionsForAddress:(Ljava/lang/String;)Z
      17: ireturn

  public boolean closeConnectionsForUser(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActiveMQServerControl:()Lorg/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl;
      13: aload_1
      14: invokevirtual #316                // Method org/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl.closeConnectionsForUser:(Ljava/lang/String;)Z
      17: ireturn

  public java.lang.String[] listConnectionIDs() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActiveMQServerControl:()Lorg/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl;
       9: invokevirtual #317                // Method org/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl.listConnectionIDs:()[Ljava/lang/String;
      12: areturn

  public java.lang.String[] listSessions(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_0
       5: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       8: invokeinterface #311,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getActiveMQServerControl:()Lorg/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl;
      13: aload_1
      14: invokevirtual #318                // Method org/apache/activemq/artemis/core/management/impl/ActiveMQServerControlImpl.listSessions:(Ljava/lang/String;)[Ljava/lang/String;
      17: areturn

  public java.lang.String listPreparedTransactionDetailsAsJSON() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #319,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getResourceManager:()Lorg/apache/activemq/artemis/core/transaction/ResourceManager;
       9: astore_1
      10: aload_1
      11: invokeinterface #320,  1          // InterfaceMethod org/apache/activemq/artemis/core/transaction/ResourceManager.getPreparedTransactionsWithCreationTime:()Ljava/util/Map;
      16: astore_2
      17: aload_2
      18: ifnull        30
      21: aload_2
      22: invokeinterface #321,  1          // InterfaceMethod java/util/Map.size:()I
      27: ifne          34
      30: ldc_w         #322                // String
      33: areturn
      34: new           #21                 // class java/util/ArrayList
      37: dup
      38: aload_2
      39: invokeinterface #323,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      44: invokespecial #324                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      47: astore_3
      48: aload_3
      49: new           #325                // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$7
      52: dup
      53: aload_0
      54: invokespecial #326                // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$7."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;)V
      57: invokestatic  #327                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      60: new           #328                // class org/apache/activemq/artemis/utils/json/JSONArray
      63: dup
      64: invokespecial #329                // Method org/apache/activemq/artemis/utils/json/JSONArray."<init>":()V
      67: astore        4
      69: aload_3
      70: invokevirtual #330                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      73: astore        5
      75: aload         5
      77: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          164
      85: aload         5
      87: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      92: checkcast     #331                // class java/util/Map$Entry
      95: astore        6
      97: aload         6
      99: invokeinterface #332,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     104: checkcast     #333                // class javax/transaction/xa/Xid
     107: astore        7
     109: aload_1
     110: aload         7
     112: invokeinterface #334,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/ResourceManager.getTransaction:(Ljavax/transaction/xa/Xid;)Lorg/apache/activemq/artemis/core/transaction/Transaction;
     117: astore        8
     119: aload         8
     121: ifnonnull     127
     124: goto          75
     127: new           #335                // class org/apache/activemq/artemis/jms/transaction/JMSTransactionDetail
     130: dup
     131: aload         7
     133: aload         8
     135: aload         6
     137: invokeinterface #336,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     142: checkcast     #337                // class java/lang/Long
     145: invokespecial #338                // Method org/apache/activemq/artemis/jms/transaction/JMSTransactionDetail."<init>":(Ljavax/transaction/xa/Xid;Lorg/apache/activemq/artemis/core/transaction/Transaction;Ljava/lang/Long;)V
     148: astore        9
     150: aload         4
     152: aload         9
     154: invokevirtual #339                // Method org/apache/activemq/artemis/core/transaction/TransactionDetail.toJSON:()Lorg/apache/activemq/artemis/utils/json/JSONObject;
     157: invokevirtual #340                // Method org/apache/activemq/artemis/utils/json/JSONArray.put:(Ljava/lang/Object;)Lorg/apache/activemq/artemis/utils/json/JSONArray;
     160: pop
     161: goto          75
     164: aload         4
     166: invokevirtual #341                // Method org/apache/activemq/artemis/utils/json/JSONArray.toString:()Ljava/lang/String;
     169: areturn

  public java.lang.String listPreparedTransactionDetailsAsHTML() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: invokeinterface #319,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getResourceManager:()Lorg/apache/activemq/artemis/core/transaction/ResourceManager;
       9: astore_1
      10: aload_1
      11: invokeinterface #320,  1          // InterfaceMethod org/apache/activemq/artemis/core/transaction/ResourceManager.getPreparedTransactionsWithCreationTime:()Ljava/util/Map;
      16: astore_2
      17: aload_2
      18: ifnull        30
      21: aload_2
      22: invokeinterface #321,  1          // InterfaceMethod java/util/Map.size:()I
      27: ifne          34
      30: ldc_w         #342                // String <h3>*** Prepared Transaction Details ***</h3><p>No entry.</p>
      33: areturn
      34: new           #21                 // class java/util/ArrayList
      37: dup
      38: aload_2
      39: invokeinterface #323,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      44: invokespecial #324                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      47: astore_3
      48: aload_3
      49: new           #343                // class org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$8
      52: dup
      53: aload_0
      54: invokespecial #344                // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$8."<init>":(Lorg/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl;)V
      57: invokestatic  #327                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      60: new           #104                // class java/lang/StringBuilder
      63: dup
      64: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      67: astore        4
      69: aload         4
      71: ldc_w         #345                // String <h3>*** Prepared Transaction Details ***</h3>
      74: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: aload_3
      79: invokevirtual #330                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      82: astore        5
      84: aload         5
      86: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          732
      94: aload         5
      96: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #331                // class java/util/Map$Entry
     104: astore        6
     106: aload         6
     108: invokeinterface #332,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     113: checkcast     #333                // class javax/transaction/xa/Xid
     116: astore        7
     118: aload_1
     119: aload         7
     121: invokeinterface #334,  2          // InterfaceMethod org/apache/activemq/artemis/core/transaction/ResourceManager.getTransaction:(Ljavax/transaction/xa/Xid;)Lorg/apache/activemq/artemis/core/transaction/Transaction;
     126: astore        8
     128: aload         8
     130: ifnonnull     136
     133: goto          84
     136: new           #335                // class org/apache/activemq/artemis/jms/transaction/JMSTransactionDetail
     139: dup
     140: aload         7
     142: aload         8
     144: aload         6
     146: invokeinterface #336,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     151: checkcast     #337                // class java/lang/Long
     154: invokespecial #338                // Method org/apache/activemq/artemis/jms/transaction/JMSTransactionDetail."<init>":(Ljavax/transaction/xa/Xid;Lorg/apache/activemq/artemis/core/transaction/Transaction;Ljava/lang/Long;)V
     157: astore        9
     159: aload         9
     161: invokevirtual #339                // Method org/apache/activemq/artemis/core/transaction/TransactionDetail.toJSON:()Lorg/apache/activemq/artemis/utils/json/JSONObject;
     164: astore        10
     166: aload         4
     168: ldc_w         #346                // String <table border=\"1\">
     171: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: pop
     175: aload         4
     177: ldc_w         #347                // String <tr><th>creation_time</th>
     180: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: pop
     184: aload         4
     186: new           #104                // class java/lang/StringBuilder
     189: dup
     190: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     193: ldc_w         #348                // String <td>
     196: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload         10
     201: ldc_w         #350                // String creation_time
     204: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     207: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     210: ldc_w         #352                // String </td>
     213: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     219: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: pop
     223: aload         4
     225: ldc_w         #353                // String <th>xid_as_base_64</th>
     228: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: pop
     232: aload         4
     234: new           #104                // class java/lang/StringBuilder
     237: dup
     238: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     241: ldc_w         #354                // String <td colspan=\"3\">
     244: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: aload         10
     249: ldc_w         #355                // String xid_as_base64
     252: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     255: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     258: ldc_w         #356                // String </td></tr>
     261: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     267: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: pop
     271: aload         4
     273: ldc_w         #357                // String <tr><th>xid_format_id</th>
     276: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: pop
     280: aload         4
     282: new           #104                // class java/lang/StringBuilder
     285: dup
     286: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     289: ldc_w         #348                // String <td>
     292: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: aload         10
     297: ldc_w         #358                // String xid_format_id
     300: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     303: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     306: ldc_w         #352                // String </td>
     309: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     312: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     315: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     318: pop
     319: aload         4
     321: ldc_w         #359                // String <th>xid_global_txid</th>
     324: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     327: pop
     328: aload         4
     330: new           #104                // class java/lang/StringBuilder
     333: dup
     334: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     337: ldc_w         #348                // String <td>
     340: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     343: aload         10
     345: ldc_w         #360                // String xid_global_txid
     348: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     351: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     354: ldc_w         #352                // String </td>
     357: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     360: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     363: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     366: pop
     367: aload         4
     369: ldc_w         #361                // String <th>xid_branch_qual</th>
     372: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     375: pop
     376: aload         4
     378: new           #104                // class java/lang/StringBuilder
     381: dup
     382: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     385: ldc_w         #348                // String <td>
     388: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     391: aload         10
     393: ldc_w         #362                // String xid_branch_qual
     396: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     399: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     402: ldc_w         #356                // String </td></tr>
     405: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     408: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     411: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     414: pop
     415: aload         4
     417: ldc_w         #363                // String <tr><th colspan=\"6\">Message List</th></tr>
     420: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     423: pop
     424: aload         4
     426: ldc_w         #364                // String <tr><td colspan=\"6\">
     429: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: pop
     433: aload         4
     435: ldc_w         #365                // String <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">
     438: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     441: pop
     442: aload         10
     444: ldc_w         #366                // String tx_related_messages
     447: invokevirtual #367                // Method org/apache/activemq/artemis/utils/json/JSONObject.getJSONArray:(Ljava/lang/String;)Lorg/apache/activemq/artemis/utils/json/JSONArray;
     450: astore        11
     452: iconst_0
     453: istore        12
     455: iload         12
     457: aload         11
     459: invokevirtual #368                // Method org/apache/activemq/artemis/utils/json/JSONArray.length:()I
     462: if_icmpge     711
     465: aload         11
     467: iload         12
     469: invokevirtual #369                // Method org/apache/activemq/artemis/utils/json/JSONArray.getJSONObject:(I)Lorg/apache/activemq/artemis/utils/json/JSONObject;
     472: astore        13
     474: aload         13
     476: ldc_w         #370                // String message_properties
     479: invokevirtual #371                // Method org/apache/activemq/artemis/utils/json/JSONObject.getJSONObject:(Ljava/lang/String;)Lorg/apache/activemq/artemis/utils/json/JSONObject;
     482: astore        14
     484: new           #104                // class java/lang/StringBuilder
     487: dup
     488: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     491: astore        15
     493: aload         14
     495: invokevirtual #372                // Method org/apache/activemq/artemis/utils/json/JSONObject.keys:()Ljava/util/Iterator;
     498: astore        16
     500: aload         16
     502: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     507: ifeq          564
     510: aload         16
     512: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     517: checkcast     #55                 // class java/lang/String
     520: astore        17
     522: aload         15
     524: aload         17
     526: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     529: pop
     530: aload         15
     532: ldc_w         #373                // String =
     535: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     538: pop
     539: aload         15
     541: aload         14
     543: aload         17
     545: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     548: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     551: pop
     552: aload         15
     554: ldc_w         #374                // String ,
     557: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     560: pop
     561: goto          500
     564: aload         4
     566: ldc_w         #375                // String <th>operation_type</th>
     569: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     572: pop
     573: aload         4
     575: new           #104                // class java/lang/StringBuilder
     578: dup
     579: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     582: ldc_w         #348                // String <td>
     585: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     588: aload         13
     590: ldc_w         #376                // String message_operation_type
     593: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     596: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     599: ldc_w         #377                // String </th>
     602: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     605: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     608: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     611: pop
     612: aload         4
     614: ldc_w         #378                // String <th>message_type</th>
     617: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     620: pop
     621: aload         4
     623: new           #104                // class java/lang/StringBuilder
     626: dup
     627: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     630: ldc_w         #348                // String <td>
     633: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     636: aload         13
     638: ldc_w         #379                // String message_type
     641: invokevirtual #351                // Method org/apache/activemq/artemis/utils/json/JSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     644: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     647: ldc_w         #356                // String </td></tr>
     650: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     653: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     656: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     659: pop
     660: aload         4
     662: ldc_w         #380                // String <tr><th>properties</th>
     665: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     668: pop
     669: aload         4
     671: new           #104                // class java/lang/StringBuilder
     674: dup
     675: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     678: ldc_w         #354                // String <td colspan=\"3\">
     681: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     684: aload         15
     686: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     689: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     692: ldc_w         #356                // String </td></tr>
     695: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     701: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     704: pop
     705: iinc          12, 1
     708: goto          455
     711: aload         4
     713: ldc_w         #381                // String </table></td></tr>
     716: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     719: pop
     720: aload         4
     722: ldc_w         #382                // String </table><br/>
     725: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     728: pop
     729: goto          84
     732: aload         4
     734: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     737: areturn

  private synchronized void checkInitialised();
    Code:
       0: aload_0
       1: getfield      #35                 // Field active:Z
       4: ifne          18
       7: new           #383                // class java/lang/IllegalStateException
      10: dup
      11: ldc_w         #384                // String Cannot access JMS Server, core server is not active
      14: invokespecial #385                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: return

  private void addToBindings(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, java.lang.String, java.lang.String...);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #62                 // class java/util/List
      10: astore        4
      12: aload         4
      14: ifnonnull     36
      17: new           #21                 // class java/util/ArrayList
      20: dup
      21: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      24: astore        4
      26: aload_1
      27: aload_2
      28: aload         4
      30: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_3
      37: astore        5
      39: aload         5
      41: arraylength
      42: istore        6
      44: iconst_0
      45: istore        7
      47: iload         7
      49: iload         6
      51: if_icmpge     77
      54: aload         5
      56: iload         7
      58: aaload
      59: astore        8
      61: aload         4
      63: aload         8
      65: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: iinc          7, 1
      74: goto          47
      77: return

  private void checkBindings(java.lang.String...) throws javax.naming.NamingException;
    Code:
       0: aload_1
       1: ifnull        80
       4: aload_1
       5: astore_2
       6: aload_2
       7: arraylength
       8: istore_3
       9: iconst_0
      10: istore        4
      12: iload         4
      14: iload_3
      15: if_icmpge     80
      18: aload_2
      19: iload         4
      21: aaload
      22: astore        5
      24: aload_0
      25: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      28: ifnull        74
      31: aload_0
      32: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      35: aload         5
      37: invokeinterface #119,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      42: ifnull        74
      45: new           #386                // class javax/naming/NamingException
      48: dup
      49: new           #104                // class java/lang/StringBuilder
      52: dup
      53: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      56: aload         5
      58: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc_w         #387                // String  already has an object bound
      64: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #388                // Method javax/naming/NamingException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: iinc          4, 1
      77: goto          12
      80: return

  private boolean bindToBindings(java.lang.String, java.lang.Object) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
       4: ifnull        29
       7: aload_0
       8: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      11: aload_1
      12: invokeinterface #309,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.unbind:(Ljava/lang/String;)V
      17: aload_0
      18: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      21: aload_1
      22: aload_2
      23: invokeinterface #389,  3          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.bind:(Ljava/lang/String;Ljava/lang/Object;)Z
      28: pop
      29: iconst_1
      30: ireturn

  private void deploy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #28                 // Field config:Lorg/apache/activemq/artemis/jms/server/config/JMSConfiguration;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #28                 // Field config:Lorg/apache/activemq/artemis/jms/server/config/JMSConfiguration;
      12: invokeinterface #390,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/JMSConfiguration.getConnectionFactoryConfigurations:()Ljava/util/List;
      17: astore_1
      18: aload_1
      19: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          59
      34: aload_2
      35: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #391                // class org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration
      43: astore_3
      44: aload_0
      45: iconst_0
      46: aload_3
      47: aload_3
      48: invokeinterface #392,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getBindings:()[Ljava/lang/String;
      53: invokevirtual #163                // Method createConnectionFactory:(ZLorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;[Ljava/lang/String;)V
      56: goto          25
      59: aload_0
      60: getfield      #28                 // Field config:Lorg/apache/activemq/artemis/jms/server/config/JMSConfiguration;
      63: invokeinterface #393,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/JMSConfiguration.getQueueConfigurations:()Ljava/util/List;
      68: astore_2
      69: aload_2
      70: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore_3
      76: aload_3
      77: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          133
      85: aload_3
      86: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #394                // class org/apache/activemq/artemis/jms/server/config/JMSQueueConfiguration
      94: astore        4
      96: aload_0
      97: iconst_0
      98: aload         4
     100: invokeinterface #395,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/JMSQueueConfiguration.getName:()Ljava/lang/String;
     105: aload         4
     107: invokeinterface #396,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/JMSQueueConfiguration.getSelector:()Ljava/lang/String;
     112: aload         4
     114: invokeinterface #397,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/JMSQueueConfiguration.isDurable:()Z
     119: aload         4
     121: invokeinterface #398,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/JMSQueueConfiguration.getBindings:()[Ljava/lang/String;
     126: invokevirtual #399                // Method createQueue:(ZLjava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)Z
     129: pop
     130: goto          76
     133: aload_0
     134: getfield      #28                 // Field config:Lorg/apache/activemq/artemis/jms/server/config/JMSConfiguration;
     137: invokeinterface #400,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/JMSConfiguration.getTopicConfigurations:()Ljava/util/List;
     142: astore_3
     143: aload_3
     144: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     149: astore        4
     151: aload         4
     153: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     158: ifeq          196
     161: aload         4
     163: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     168: checkcast     #401                // class org/apache/activemq/artemis/jms/server/config/TopicConfiguration
     171: astore        5
     173: aload_0
     174: iconst_0
     175: aload         5
     177: invokeinterface #402,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/TopicConfiguration.getName:()Ljava/lang/String;
     182: aload         5
     184: invokeinterface #403,  1          // InterfaceMethod org/apache/activemq/artemis/jms/server/config/TopicConfiguration.getBindings:()[Ljava/lang/String;
     189: invokevirtual #404                // Method createTopic:(ZLjava/lang/String;[Ljava/lang/String;)Z
     192: pop
     193: goto          151
     196: return

  private void unbindBindings(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
       4: ifnull        102
       7: aload_1
       8: invokeinterface #405,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokeinterface #406,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          102
      28: aload_2
      29: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #62                 // class java/util/List
      37: astore_3
      38: aload_3
      39: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      44: astore        4
      46: aload         4
      48: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          99
      56: aload         4
      58: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #55                 // class java/lang/String
      66: astore        5
      68: aload_0
      69: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      72: aload         5
      74: invokeinterface #309,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.unbind:(Ljava/lang/String;)V
      79: goto          96
      82: astore        6
      84: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
      87: aload         6
      89: aload         5
      91: invokeinterface #407,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.bindingsUnbindError:(Ljava/lang/Exception;Ljava/lang/String;)V
      96: goto          46
      99: goto          19
     102: return
    Exception table:
       from    to  target type
          68    79    82   Class java/lang/Exception

  private void initJournal() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       5: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      10: putfield      #26                 // Field coreConfig:Lorg/apache/activemq/artemis/core/config/Configuration;
      13: aload_0
      14: invokespecial #408                // Method createJournal:()V
      17: aload_0
      18: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      21: invokeinterface #409,  1          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.load:()V
      26: aload_0
      27: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      30: invokeinterface #410,  1          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.recoverConnectionFactories:()Ljava/util/List;
      35: astore_1
      36: aload_1
      37: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          74
      52: aload_2
      53: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #201                // class org/apache/activemq/artemis/jms/persistence/config/PersistedConnectionFactory
      61: astore_3
      62: aload_0
      63: aload_3
      64: invokevirtual #411                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedConnectionFactory.getConfig:()Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      67: invokespecial #4                  // Method internalCreateCF:(Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      70: pop
      71: goto          43
      74: aload_0
      75: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      78: invokeinterface #412,  1          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.recoverDestinations:()Ljava/util/List;
      83: astore_2
      84: aload_2
      85: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      90: astore_3
      91: aload_3
      92: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      97: ifeq          169
     100: aload_3
     101: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #413                // class org/apache/activemq/artemis/jms/persistence/config/PersistedDestination
     109: astore        4
     111: aload         4
     113: invokevirtual #414                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedDestination.getType:()Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     116: getstatic     #116                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Queue:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     119: if_acmpne     145
     122: aload_0
     123: aload         4
     125: invokevirtual #415                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedDestination.getName:()Ljava/lang/String;
     128: aload         4
     130: invokevirtual #416                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedDestination.getSelector:()Ljava/lang/String;
     133: aload         4
     135: invokevirtual #417                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedDestination.isDurable:()Z
     138: invokespecial #15                 // Method internalCreateQueue:(Ljava/lang/String;Ljava/lang/String;Z)Z
     141: pop
     142: goto          166
     145: aload         4
     147: invokevirtual #414                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedDestination.getType:()Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     150: getstatic     #109                // Field org/apache/activemq/artemis/jms/persistence/config/PersistedType.Topic:Lorg/apache/activemq/artemis/jms/persistence/config/PersistedType;
     153: if_acmpne     166
     156: aload_0
     157: aload         4
     159: invokevirtual #415                // Method org/apache/activemq/artemis/jms/persistence/config/PersistedDestination.getName:()Ljava/lang/String;
     162: invokespecial #9                  // Method internalCreateTopic:(Ljava/lang/String;)Z
     165: pop
     166: goto          91
     169: return

  private void createJournal() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
       4: ifnonnull     72
       7: aload_0
       8: getfield      #26                 // Field coreConfig:Lorg/apache/activemq/artemis/core/config/Configuration;
      11: invokeinterface #418,  1          // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.isPersistenceEnabled:()Z
      16: ifeq          58
      19: aload_0
      20: new           #419                // class org/apache/activemq/artemis/jms/persistence/impl/journal/JMSJournalStorageManagerImpl
      23: dup
      24: new           #420                // class org/apache/activemq/artemis/utils/TimeAndCounterIDGenerator
      27: dup
      28: invokespecial #421                // Method org/apache/activemq/artemis/utils/TimeAndCounterIDGenerator."<init>":()V
      31: aload_0
      32: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      35: invokeinterface #25,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      40: aload_0
      41: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
      44: invokeinterface #422,  1          // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServer.getReplicationManager:()Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
      49: invokespecial #423                // Method org/apache/activemq/artemis/jms/persistence/impl/journal/JMSJournalStorageManagerImpl."<init>":(Lorg/apache/activemq/artemis/utils/IDGenerator;Lorg/apache/activemq/artemis/core/config/Configuration;Lorg/apache/activemq/artemis/core/replication/ReplicationManager;)V
      52: putfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      55: goto          93
      58: aload_0
      59: new           #424                // class org/apache/activemq/artemis/jms/persistence/impl/nullpm/NullJMSStorageManagerImpl
      62: dup
      63: invokespecial #425                // Method org/apache/activemq/artemis/jms/persistence/impl/nullpm/NullJMSStorageManagerImpl."<init>":()V
      66: putfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      69: goto          93
      72: aload_0
      73: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      76: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.isStarted:()Z
      81: ifeq          93
      84: aload_0
      85: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      88: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.stop:()V
      93: aload_0
      94: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
      97: invokeinterface #426,  1          // InterfaceMethod org/apache/activemq/artemis/jms/persistence/JMSStorageManager.start:()V
     102: return

  private synchronized boolean removeFromBindings(java.util.Map<java.lang.String, ?>, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_2
       5: aload_3
       6: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #62                 // class java/util/List
      14: astore        4
      16: aload         4
      18: ifnull        31
      21: aload         4
      23: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: aload_1
      34: aload_3
      35: invokeinterface #68,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      45: ifnull        100
      48: aload         4
      50: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: astore        5
      57: aload         5
      59: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          100
      67: aload         5
      69: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #55                 // class java/lang/String
      77: astore        6
      79: aload_0
      80: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      83: aload         6
      85: invokeinterface #309,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.unbind:(Ljava/lang/String;)V
      90: aload         5
      92: invokeinterface #427,  1          // InterfaceMethod java/util/Iterator.remove:()V
      97: goto          57
     100: iconst_1
     101: ireturn

  private synchronized boolean removeFromBindings(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: aload_1
       5: aload_2
       6: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #62                 // class java/util/List
      14: astore        4
      16: aload         4
      18: ifnull        31
      21: aload         4
      23: invokeinterface #63,  1           // InterfaceMethod java/util/List.size:()I
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: aload         4
      35: aload_3
      36: invokeinterface #428,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      41: ifeq          56
      44: aload_0
      45: getfield      #27                 // Field registry:Lorg/apache/activemq/artemis/spi/core/naming/BindingRegistry;
      48: aload_3
      49: invokeinterface #309,  2          // InterfaceMethod org/apache/activemq/artemis/spi/core/naming/BindingRegistry.unbind:(Ljava/lang/String;)V
      54: iconst_1
      55: ireturn
      56: iconst_0
      57: ireturn

  private boolean runAfterActive(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl$WrappedRunnable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #35                 // Field active:Z
       4: ifeq          13
       7: aload_1
       8: invokevirtual #429                // Method org/apache/activemq/artemis/jms/server/impl/JMSServerManagerImpl$WrappedRunnable.runException:()V
      11: iconst_1
      12: ireturn
      13: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
      16: aload_1
      17: invokeinterface #430,  2          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.serverCachingCommand:(Ljava/lang/Object;)V
      22: aload_0
      23: getfield      #23                 // Field cachedCommands:Ljava/util/List;
      26: aload_1
      27: invokeinterface #431,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      32: ifne          46
      35: aload_0
      36: getfield      #23                 // Field cachedCommands:Ljava/util/List;
      39: aload_1
      40: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: iconst_0
      47: ireturn

  private void correctInvalidNettyConnectorHost(org.apache.activemq.artemis.api.core.TransportConfiguration);
    Code:
       0: aload_1
       1: invokevirtual #432                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getParams:()Ljava/util/Map;
       4: astore_2
       5: aload_1
       6: invokevirtual #433                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getFactoryClassName:()Ljava/lang/String;
       9: ldc_w         #434                // class org/apache/activemq/artemis/core/remoting/impl/netty/NettyConnectorFactory
      12: invokevirtual #435                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      15: invokevirtual #436                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          99
      21: aload_2
      22: ldc_w         #438                // String host
      25: invokeinterface #439,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      30: ifeq          99
      33: aload_2
      34: ldc_w         #438                // String host
      37: invokeinterface #61,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: ldc_w         #440                // String 0.0.0.0
      45: invokevirtual #441                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          99
      51: invokestatic  #442                // Method java/net/InetAddress.getLocalHost:()Ljava/net/InetAddress;
      54: invokevirtual #443                // Method java/net/InetAddress.getHostName:()Ljava/lang/String;
      57: astore_3
      58: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
      61: aload_1
      62: invokevirtual #444                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getName:()Ljava/lang/String;
      65: aload_3
      66: invokeinterface #445,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.invalidHostForConnector:(Ljava/lang/String;Ljava/lang/String;)V
      71: aload_2
      72: ldc_w         #438                // String host
      75: aload_3
      76: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: goto          99
      85: astore_3
      86: getstatic     #42                 // Field org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.LOGGER:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger;
      89: aload_3
      90: aload_1
      91: invokevirtual #444                // Method org/apache/activemq/artemis/api/core/TransportConfiguration.getName:()Ljava/lang/String;
      94: invokeinterface #447,  3          // InterfaceMethod org/apache/activemq/artemis/jms/server/ActiveMQJMSServerLogger.failedToCorrectHost:(Ljava/lang/Exception;Ljava/lang/String;)V
      99: return
    Exception table:
       from    to  target type
          51    82    85   Class java/net/UnknownHostException

  static void access$100(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, java.lang.String[]) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method checkBindings:([Ljava/lang/String;)V
       5: return

  static boolean access$200(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, java.lang.String, java.lang.String, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #15                 // Method internalCreateQueue:(Ljava/lang/String;Ljava/lang/String;Z)Z
       7: ireturn

  static java.util.Map access$300(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: getfield      #14                 // Field queues:Ljava/util/Map;
       4: areturn

  static boolean access$400(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, java.lang.String, java.lang.Object) throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method bindToBindings:(Ljava/lang/String;Ljava/lang/Object;)Z
       6: ireturn

  static java.util.Map access$500(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: getfield      #12                 // Field queueBindings:Ljava/util/Map;
       4: areturn

  static void access$600(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, java.util.Map, java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #11                 // Method addToBindings:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;)V
       7: return

  static org.apache.activemq.artemis.jms.persistence.JMSStorageManager access$700(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: getfield      #10                 // Field storage:Lorg/apache/activemq/artemis/jms/persistence/JMSStorageManager;
       4: areturn

  static boolean access$800(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method internalCreateTopic:(Ljava/lang/String;)Z
       5: ireturn

  static java.util.Map access$900(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field topics:Ljava/util/Map;
       4: areturn

  static java.util.Map access$1000(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field topicBindings:Ljava/util/Map;
       4: areturn

  static void access$1100(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method checkInitialised:()V
       4: return

  static boolean access$1200(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, java.util.Map, java.util.Map, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method removeFromBindings:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z
       7: ireturn

  static org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory access$1300(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method internalCreateCF:(Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
       5: areturn

  static java.util.Map access$1400(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionFactoryBindings:Ljava/util/Map;
       4: areturn

  static void access$1500(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl, org.apache.activemq.artemis.jms.server.management.JMSNotificationType, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method sendNotification:(Lorg/apache/activemq/artemis/jms/server/management/JMSNotificationType;Ljava/lang/String;)V
       6: return

  static org.apache.activemq.artemis.core.server.ActiveMQServer access$1600(org.apache.activemq.artemis.jms.server.impl.JMSServerManagerImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field server:Lorg/apache/activemq/artemis/core/server/ActiveMQServer;
       4: areturn
}
