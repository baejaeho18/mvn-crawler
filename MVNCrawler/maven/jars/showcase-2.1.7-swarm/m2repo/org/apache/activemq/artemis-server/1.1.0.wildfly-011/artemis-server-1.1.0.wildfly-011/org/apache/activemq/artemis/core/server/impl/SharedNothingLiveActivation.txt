Compiled from "SharedNothingLiveActivation.java"
public class org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation extends org.apache.activemq.artemis.core.server.impl.LiveActivation {
  private org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy replicatedPolicy;

  private org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl activeMQServer;

  private org.apache.activemq.artemis.core.replication.ReplicationManager replicationManager;

  private final java.lang.Object replicationLock;

  public org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation(org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl, org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/activemq/artemis/core/server/impl/LiveActivation."<init>":()V
       4: aload_0
       5: new           #7                  // class java/lang/Object
       8: dup
       9: invokespecial #8                  // Method java/lang/Object."<init>":()V
      12: putfield      #1                  // Field replicationLock:Ljava/lang/Object;
      15: aload_0
      16: aload_1
      17: putfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      20: aload_0
      21: aload_2
      22: putfield      #2                  // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      25: return

  public void freezeConnections(org.apache.activemq.artemis.core.remoting.server.RemotingService);
    Code:
       0: aload_0
       1: getfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
       4: astore_2
       5: aload_1
       6: ifnull        27
       9: aload_2
      10: ifnull        27
      13: aload_1
      14: aconst_null
      15: aload_2
      16: invokevirtual #9                  // Method org/apache/activemq/artemis/core/replication/ReplicationManager.getBackupTransportConnection:()Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      19: invokeinterface #10,  3           // InterfaceMethod org/apache/activemq/artemis/core/remoting/server/RemotingService.freeze:(Ljava/lang/String;Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;)V
      24: goto          39
      27: aload_1
      28: ifnull        39
      31: aload_1
      32: aconst_null
      33: aconst_null
      34: invokeinterface #10,  3           // InterfaceMethod org/apache/activemq/artemis/core/remoting/server/RemotingService.freeze:(Ljava/lang/String;Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;)V
      39: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
       4: invokevirtual #11                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy.isCheckForLiveServer:()Z
       7: ifeq          46
      10: aload_0
      11: invokespecial #12                 // Method isNodeIdUsed:()Z
      14: ifeq          46
      17: aload_0
      18: getfield      #2                  // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      21: invokevirtual #13                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy.getReplicaPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      24: aload_0
      25: getfield      #2                  // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      28: invokevirtual #14                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy.setReplicatedPolicy:(Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;)V
      31: aload_0
      32: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      35: aload_0
      36: getfield      #2                  // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      39: invokevirtual #13                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy.getReplicaPolicy:()Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicaPolicy;
      42: invokevirtual #15                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.setHAPolicy:(Lorg/apache/activemq/artemis/core/server/cluster/ha/HAPolicy;)V
      45: return
      46: aload_0
      47: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      50: iconst_0
      51: invokevirtual #16                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart1:(Z)Z
      54: pop
      55: aload_0
      56: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      59: iconst_0
      60: invokevirtual #17                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.initialisePart2:(Z)V
      63: aload_0
      64: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      67: invokevirtual #18                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.completeActivation:()V
      70: aload_0
      71: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      74: invokevirtual #19                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getIdentity:()Ljava/lang/String;
      77: ifnull        98
      80: getstatic     #20                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      83: aload_0
      84: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      87: invokevirtual #19                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getIdentity:()Ljava/lang/String;
      90: invokeinterface #21,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.serverIsLive:(Ljava/lang/String;)V
      95: goto          106
      98: getstatic     #20                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     101: invokeinterface #22,  1           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.serverIsLive:()V
     106: goto          119
     109: astore_1
     110: getstatic     #20                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
     113: aload_1
     114: invokeinterface #24,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.initializationError:(Ljava/lang/Throwable;)V
     119: return
    Exception table:
       from    to  target type
           0    45   109   Class java/lang/Exception
          46   106   109   Class java/lang/Exception

  public org.apache.activemq.artemis.core.protocol.core.ChannelHandler getActivationChannelHandler(org.apache.activemq.artemis.core.protocol.core.Channel, org.apache.activemq.artemis.spi.core.remoting.Acceptor);
    Code:
       0: new           #25                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$1
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokespecial #26                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$1."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation;Lorg/apache/activemq/artemis/spi/core/remoting/Acceptor;Lorg/apache/activemq/artemis/core/protocol/core/Channel;)V
      10: areturn

  public void startReplication(org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection, org.apache.activemq.artemis.core.server.cluster.ClusterConnection, org.apache.activemq.artemis.api.core.Pair<org.apache.activemq.artemis.api.core.TransportConfiguration, org.apache.activemq.artemis.api.core.TransportConfiguration>, boolean) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
       4: ifnull        15
       7: new           #27                 // class org/apache/activemq/artemis/api/core/ActiveMQAlreadyReplicatingException
      10: dup
      11: invokespecial #28                 // Method org/apache/activemq/artemis/api/core/ActiveMQAlreadyReplicatingException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      19: invokevirtual #29                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.isStarted:()Z
      22: ifne          33
      25: new           #30                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
      28: dup
      29: invokespecial #31                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":()V
      32: athrow
      33: aload_0
      34: getfield      #1                  // Field replicationLock:Ljava/lang/Object;
      37: dup
      38: astore        5
      40: monitorenter
      41: aload_0
      42: getfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
      45: ifnull        56
      48: new           #27                 // class org/apache/activemq/artemis/api/core/ActiveMQAlreadyReplicatingException
      51: dup
      52: invokespecial #28                 // Method org/apache/activemq/artemis/api/core/ActiveMQAlreadyReplicatingException."<init>":()V
      55: athrow
      56: new           #32                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$ReplicationFailureListener
      59: dup
      60: aload_0
      61: aconst_null
      62: invokespecial #33                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$ReplicationFailureListener."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation;Lorg/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$1;)V
      65: astore        6
      67: aload_1
      68: aload         6
      70: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.addCloseListener:(Lorg/apache/activemq/artemis/core/remoting/CloseListener;)V
      75: aload_1
      76: aload         6
      78: invokeinterface #35,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.addFailureListener:(Lorg/apache/activemq/artemis/core/remoting/FailureListener;)V
      83: aload_0
      84: new           #36                 // class org/apache/activemq/artemis/core/replication/ReplicationManager
      87: dup
      88: aload_1
      89: aload_0
      90: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      93: invokevirtual #37                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getExecutorFactory:()Lorg/apache/activemq/artemis/utils/ExecutorFactory;
      96: invokespecial #38                 // Method org/apache/activemq/artemis/core/replication/ReplicationManager."<init>":(Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;Lorg/apache/activemq/artemis/utils/ExecutorFactory;)V
      99: putfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
     102: aload_0
     103: getfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
     106: invokevirtual #39                 // Method org/apache/activemq/artemis/core/replication/ReplicationManager.start:()V
     109: new           #40                 // class java/lang/Thread
     112: dup
     113: new           #41                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$2
     116: dup
     117: aload_0
     118: iload         4
     120: aload_2
     121: aload_3
     122: invokespecial #42                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$2."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation;ZLorg/apache/activemq/artemis/core/server/cluster/ClusterConnection;Lorg/apache/activemq/artemis/api/core/Pair;)V
     125: invokespecial #43                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
     128: astore        7
     130: aload         7
     132: invokevirtual #44                 // Method java/lang/Thread.start:()V
     135: aload         5
     137: monitorexit
     138: goto          149
     141: astore        8
     143: aload         5
     145: monitorexit
     146: aload         8
     148: athrow
     149: return
    Exception table:
       from    to  target type
          41   138   141   any
         141   146   141   any

  private org.apache.activemq.artemis.api.core.Pair<org.apache.activemq.artemis.api.core.TransportConfiguration, org.apache.activemq.artemis.api.core.TransportConfiguration> getPair(org.apache.activemq.artemis.api.core.TransportConfiguration, boolean);
    Code:
       0: iload_2
       1: ifeq          14
       4: new           #45                 // class org/apache/activemq/artemis/api/core/Pair
       7: dup
       8: aconst_null
       9: aload_1
      10: invokespecial #46                 // Method org/apache/activemq/artemis/api/core/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      13: areturn
      14: new           #45                 // class org/apache/activemq/artemis/api/core/Pair
      17: dup
      18: aload_1
      19: aconst_null
      20: invokespecial #46                 // Method org/apache/activemq/artemis/api/core/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      23: areturn

  private boolean isNodeIdUsed() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: invokevirtual #47                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
       7: invokeinterface #48,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getClusterConfigurations:()Ljava/util/List;
      12: invokeinterface #49,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      26: invokevirtual #50                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      29: invokevirtual #51                 // Method org/apache/activemq/artemis/core/server/NodeManager.readNodeId:()Lorg/apache/activemq/artemis/api/core/SimpleString;
      32: astore_1
      33: goto          39
      36: astore_2
      37: aconst_null
      38: astore_1
      39: aload_0
      40: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      43: invokevirtual #47                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      46: aload_0
      47: getfield      #2                  // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
      50: invokevirtual #52                 // Method org/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy.getClusterName:()Ljava/lang/String;
      53: invokestatic  #53                 // Method org/apache/activemq/artemis/core/config/ConfigurationUtils.getReplicationClusterConfiguration:(Lorg/apache/activemq/artemis/core/config/Configuration;Ljava/lang/String;)Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;
      56: astore_3
      57: aload_0
      58: aload_3
      59: invokespecial #54                 // Method getLocator:(Lorg/apache/activemq/artemis/core/config/ClusterConnectionConfiguration;)Lorg/apache/activemq/artemis/core/client/impl/ServerLocatorInternal;
      62: astore_2
      63: aconst_null
      64: astore        4
      66: new           #55                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$NodeIdListener
      69: dup
      70: aload_1
      71: invokespecial #56                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$NodeIdListener."<init>":(Lorg/apache/activemq/artemis/api/core/SimpleString;)V
      74: astore        5
      76: aload_2
      77: aload         5
      79: invokeinterface #57,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.addClusterTopologyListener:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      84: pop
      85: aload_2
      86: iconst_0
      87: invokeinterface #58,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.setReconnectAttempts:(I)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      92: pop
      93: aload_2
      94: aload         5
      96: invokeinterface #57,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.addClusterTopologyListener:(Lorg/apache/activemq/artemis/api/core/client/ClusterTopologyListener;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
     101: pop
     102: aload_2
     103: invokeinterface #59,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.connectNoWarnings:()Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
     108: astore        4
     110: goto          143
     113: astore        6
     115: iconst_0
     116: istore        7
     118: aload         4
     120: ifnull        130
     123: aload         4
     125: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
     130: aload_2
     131: ifnull        140
     134: aload_2
     135: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.close:()V
     140: iload         7
     142: ireturn
     143: aload         5
     145: invokestatic  #62                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$NodeIdListener.access$600:(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$NodeIdListener;)Ljava/util/concurrent/CountDownLatch;
     148: ldc2_w        #63                 // long 5l
     151: getstatic     #65                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     154: invokevirtual #66                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
     157: pop
     158: aload         5
     160: getfield      #67                 // Field org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$NodeIdListener.isNodePresent:Z
     163: istore        6
     165: aload         4
     167: ifnull        177
     170: aload         4
     172: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
     177: aload_2
     178: ifnull        187
     181: aload_2
     182: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.close:()V
     187: iload         6
     189: ireturn
     190: astore        8
     192: aload         4
     194: ifnull        204
     197: aload         4
     199: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.close:()V
     204: aload_2
     205: ifnull        214
     208: aload_2
     209: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal.close:()V
     214: aload         8
     216: athrow
    Exception table:
       from    to  target type
          22    33    36   Class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
          93   110   113   Class java/lang/Exception
          85   118   190   any
         143   165   190   any
         190   192   190   any

  public void close(boolean, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
       5: aload_0
       6: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       9: invokevirtual #50                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getNodeManager:()Lorg/apache/activemq/artemis/core/server/NodeManager;
      12: astore_3
      13: aload_3
      14: ifnull        32
      17: iload_1
      18: ifeq          28
      21: aload_3
      22: invokevirtual #68                 // Method org/apache/activemq/artemis/core/server/NodeManager.crashLiveServer:()V
      25: goto          32
      28: aload_3
      29: invokevirtual #69                 // Method org/apache/activemq/artemis/core/server/NodeManager.pauseLiveServer:()V
      32: return

  public void sendLiveIsStopping();
    Code:
       0: aload_0
       1: getfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
       4: astore_1
       5: aload_1
       6: ifnull        45
       9: aload_1
      10: getstatic     #70                 // Field org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping.STOP_CALLED:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;
      13: invokevirtual #71                 // Method org/apache/activemq/artemis/core/replication/ReplicationManager.sendLiveIsStopping:(Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;)Lorg/apache/activemq/artemis/core/persistence/OperationContext;
      16: pop
      17: aload_0
      18: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      21: invokevirtual #72                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getScheduledPool:()Ljava/util/concurrent/ScheduledExecutorService;
      24: new           #73                 // class org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$3
      27: dup
      28: aload_0
      29: aload_1
      30: invokespecial #74                 // Method org/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation$3."<init>":(Lorg/apache/activemq/artemis/core/server/impl/SharedNothingLiveActivation;Lorg/apache/activemq/artemis/core/replication/ReplicationManager;)V
      33: ldc2_w        #75                 // long 30l
      36: getstatic     #65                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      39: invokeinterface #77,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      44: pop
      45: return

  public org.apache.activemq.artemis.core.replication.ReplicationManager getReplicationManager();
    Code:
       0: aload_0
       1: getfield      #1                  // Field replicationLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
      11: aload_1
      12: monitorexit
      13: areturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  private org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal getLocator(org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration) throws org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_1
       1: invokevirtual #78                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
       4: ifnull        57
       7: aload_0
       8: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      11: invokevirtual #47                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      14: invokeinterface #79,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getDiscoveryGroupConfigurations:()Ljava/util/Map;
      19: aload_1
      20: invokevirtual #78                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getDiscoveryGroupName:()Ljava/lang/String;
      23: invokeinterface #80,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #81                 // class org/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration
      31: astore_3
      32: aload_3
      33: ifnonnull     46
      36: getstatic     #82                 // Field org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle;
      39: aload_3
      40: invokeinterface #83,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQMessageBundle.noDiscoveryGroupFound:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/api/core/ActiveMQException;
      45: athrow
      46: aload_3
      47: invokestatic  #84                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:(Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      50: checkcast     #85                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
      53: astore_2
      54: goto          85
      57: aload_1
      58: invokevirtual #86                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getStaticConnectors:()Ljava/util/List;
      61: ifnull        75
      64: aload_0
      65: aload_1
      66: invokevirtual #86                 // Method org/apache/activemq/artemis/core/config/ClusterConnectionConfiguration.getStaticConnectors:()Ljava/util/List;
      69: invokespecial #87                 // Method connectorNameListToArray:(Ljava/util/List;)[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
      72: goto          76
      75: aconst_null
      76: astore_3
      77: aload_3
      78: invokestatic  #88                 // Method org/apache/activemq/artemis/api/core/client/ActiveMQClient.createServerLocatorWithHA:([Lorg/apache/activemq/artemis/api/core/TransportConfiguration;)Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      81: checkcast     #85                 // class org/apache/activemq/artemis/core/client/impl/ServerLocatorInternal
      84: astore_2
      85: aload_2
      86: areturn

  private org.apache.activemq.artemis.api.core.TransportConfiguration[] connectorNameListToArray(java.util.List<java.lang.String>);
    Code:
       0: ldc           #89                 // class org/apache/activemq/artemis/api/core/TransportConfiguration
       2: aload_1
       3: invokeinterface #90,  1           // InterfaceMethod java/util/List.size:()I
       8: invokestatic  #91                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      11: checkcast     #92                 // class "[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;"
      14: checkcast     #92                 // class "[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;"
      17: astore_2
      18: iconst_0
      19: istore_3
      20: aload_1
      21: invokeinterface #93,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore        4
      28: aload         4
      30: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          102
      38: aload         4
      40: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #96                 // class java/lang/String
      48: astore        5
      50: aload_0
      51: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
      54: invokevirtual #47                 // Method org/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl.getConfiguration:()Lorg/apache/activemq/artemis/core/config/Configuration;
      57: invokeinterface #97,  1           // InterfaceMethod org/apache/activemq/artemis/core/config/Configuration.getConnectorConfigurations:()Ljava/util/Map;
      62: aload         5
      64: invokeinterface #80,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #89                 // class org/apache/activemq/artemis/api/core/TransportConfiguration
      72: astore        6
      74: aload         6
      76: ifnonnull     91
      79: getstatic     #20                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      82: aload         5
      84: invokeinterface #98,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.bridgeNoConnector:(Ljava/lang/String;)V
      89: aconst_null
      90: areturn
      91: aload_2
      92: iload_3
      93: iinc          3, 1
      96: aload         6
      98: aastore
      99: goto          28
     102: aload_2
     103: areturn

  static org.apache.activemq.artemis.api.core.Pair access$000(org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation, org.apache.activemq.artemis.api.core.TransportConfiguration, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #5                  // Method getPair:(Lorg/apache/activemq/artemis/api/core/TransportConfiguration;Z)Lorg/apache/activemq/artemis/api/core/Pair;
       6: areturn

  static org.apache.activemq.artemis.core.replication.ReplicationManager access$200(org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
       4: areturn

  static org.apache.activemq.artemis.core.server.impl.ActiveMQServerImpl access$300(org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeMQServer:Lorg/apache/activemq/artemis/core/server/impl/ActiveMQServerImpl;
       4: areturn

  static org.apache.activemq.artemis.core.server.cluster.ha.ReplicatedPolicy access$400(org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field replicatedPolicy:Lorg/apache/activemq/artemis/core/server/cluster/ha/ReplicatedPolicy;
       4: areturn

  static java.lang.Object access$500(org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation);
    Code:
       0: aload_0
       1: getfield      #1                  // Field replicationLock:Ljava/lang/Object;
       4: areturn

  static org.apache.activemq.artemis.core.replication.ReplicationManager access$202(org.apache.activemq.artemis.core.server.impl.SharedNothingLiveActivation, org.apache.activemq.artemis.core.replication.ReplicationManager);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field replicationManager:Lorg/apache/activemq/artemis/core/replication/ReplicationManager;
       6: areturn
}
