Compiled from "LibaioContext.java"
public class org.apache.activemq.artemis.jlibaio.LibaioContext<Callback extends org.apache.activemq.artemis.jlibaio.SubmitInfo> implements java.io.Closeable {
  private static final java.util.concurrent.atomic.AtomicLong totalMaxIO;

  private static final int EXPECTED_NATIVE_VERSION;

  private static boolean loaded;

  private static final java.util.concurrent.atomic.AtomicBoolean shuttingDown;

  private static final java.util.concurrent.atomic.AtomicInteger contexts;

  private final java.nio.ByteBuffer ioContext;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  final java.util.concurrent.Semaphore ioSpace;

  final int queueSize;

  public static boolean isLoaded();
    Code:
       0: getstatic     #3                  // Field loaded:Z
       3: ireturn

  private static boolean loadLibrary(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
       4: invokestatic  #5                  // Method getNativeVersion:()I
       7: bipush        6
       9: if_icmpeq     22
      12: getstatic     #7                  // Field org/apache/activemq/artemis/jlibaio/NativeLogger.LOGGER:Lorg/apache/activemq/artemis/jlibaio/NativeLogger;
      15: invokeinterface #8,  1            // InterfaceMethod org/apache/activemq/artemis/jlibaio/NativeLogger.incompatibleNativeLibrary:()V
      20: iconst_0
      21: ireturn
      22: iconst_1
      23: ireturn
      24: astore_1
      25: getstatic     #7                  // Field org/apache/activemq/artemis/jlibaio/NativeLogger.LOGGER:Lorg/apache/activemq/artemis/jlibaio/NativeLogger;
      28: new           #10                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      35: aload_0
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #13                 // String  -> error loading the native library
      41: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: aload_1
      48: invokeinterface #15,  3           // InterfaceMethod org/apache/activemq/artemis/jlibaio/NativeLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      53: iconst_0
      54: ireturn
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/Throwable
          22    23    24   Class java/lang/Throwable

  private static void checkShutdown();
    Code:
       0: getstatic     #16                 // Field contexts:Ljava/util/concurrent/atomic/AtomicInteger;
       3: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       6: ifne          21
       9: getstatic     #2                  // Field shuttingDown:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      15: ifeq          21
      18: invokestatic  #19                 // Method shutdownHook:()V
      21: return

  private static native void shutdownHook();

  public static long getTotalMaxIO();
    Code:
       0: getstatic     #20                 // Field totalMaxIO:Ljava/util/concurrent/atomic/AtomicLong;
       3: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       6: lreturn

  public void memsetBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #22                 // Method java/nio/ByteBuffer.limit:()I
       5: invokestatic  #23                 // Method memsetBuffer:(Ljava/nio/ByteBuffer;I)V
       8: return

  public static void resetMaxAIO();
    Code:
       0: getstatic     #20                 // Field totalMaxIO:Ljava/util/concurrent/atomic/AtomicLong;
       3: lconst_0
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       7: return

  public org.apache.activemq.artemis.jlibaio.LibaioContext(int, boolean);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #26                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #28                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: getstatic     #16                 // Field contexts:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      22: pop
      23: aload_0
      24: aload_0
      25: iload_1
      26: invokespecial #30                 // Method newContext:(I)Ljava/nio/ByteBuffer;
      29: putfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
      32: goto          38
      35: astore_3
      36: aload_3
      37: athrow
      38: aload_0
      39: iload_1
      40: putfield      #33                 // Field queueSize:I
      43: getstatic     #20                 // Field totalMaxIO:Ljava/util/concurrent/atomic/AtomicLong;
      46: iload_1
      47: i2l
      48: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      51: pop2
      52: iload_2
      53: ifeq          71
      56: aload_0
      57: new           #35                 // class java/util/concurrent/Semaphore
      60: dup
      61: iload_1
      62: invokespecial #36                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      65: putfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      68: goto          76
      71: aload_0
      72: aconst_null
      73: putfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      76: return
    Exception table:
       from    to  target type
          16    32    35   Class java/lang/Exception

  public void submitWrite(int, long, int, java.nio.ByteBuffer, Callback) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: new           #38                 // class java/io/IOException
      13: dup
      14: ldc           #39                 // String Libaio Context is closed!
      16: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      24: ifnull        34
      27: aload_0
      28: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      31: invokevirtual #41                 // Method java/util/concurrent/Semaphore.acquire:()V
      34: goto          60
      37: astore        7
      39: invokestatic  #43                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: invokevirtual #44                 // Method java/lang/Thread.interrupt:()V
      45: new           #38                 // class java/io/IOException
      48: dup
      49: aload         7
      51: invokevirtual #45                 // Method java/lang/InterruptedException.getMessage:()Ljava/lang/String;
      54: aload         7
      56: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: athrow
      60: aload_0
      61: iload_1
      62: aload_0
      63: getfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
      66: lload_2
      67: iload         4
      69: aload         5
      71: aload         6
      73: invokevirtual #47                 // Method submitWrite:(ILjava/nio/ByteBuffer;JILjava/nio/ByteBuffer;Lorg/apache/activemq/artemis/jlibaio/SubmitInfo;)V
      76: return
    Exception table:
       from    to  target type
          20    34    37   Class java/lang/InterruptedException

  public void submitRead(int, long, int, java.nio.ByteBuffer, Callback) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: new           #38                 // class java/io/IOException
      13: dup
      14: ldc           #39                 // String Libaio Context is closed!
      16: invokespecial #40                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      24: ifnull        34
      27: aload_0
      28: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      31: invokevirtual #41                 // Method java/util/concurrent/Semaphore.acquire:()V
      34: goto          60
      37: astore        7
      39: invokestatic  #43                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: invokevirtual #44                 // Method java/lang/Thread.interrupt:()V
      45: new           #38                 // class java/io/IOException
      48: dup
      49: aload         7
      51: invokevirtual #45                 // Method java/lang/InterruptedException.getMessage:()Ljava/lang/String;
      54: aload         7
      56: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: athrow
      60: aload_0
      61: iload_1
      62: aload_0
      63: getfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
      66: lload_2
      67: iload         4
      69: aload         5
      71: aload         6
      73: invokevirtual #48                 // Method submitRead:(ILjava/nio/ByteBuffer;JILjava/nio/ByteBuffer;Lorg/apache/activemq/artemis/jlibaio/SubmitInfo;)V
      76: return
    Exception table:
       from    to  target type
          20    34    37   Class java/lang/InterruptedException

  public void close();
    Code:
       0: aload_0
       1: getfield      #28                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifne          87
      11: aload_0
      12: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      15: ifnull        49
      18: aload_0
      19: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      22: aload_0
      23: getfield      #33                 // Field queueSize:I
      26: ldc2_w        #50                 // long 10l
      29: getstatic     #52                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      32: invokevirtual #53                 // Method java/util/concurrent/Semaphore.tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z
      35: pop
      36: goto          49
      39: astore_1
      40: getstatic     #7                  // Field org/apache/activemq/artemis/jlibaio/NativeLogger.LOGGER:Lorg/apache/activemq/artemis/jlibaio/NativeLogger;
      43: aload_1
      44: invokeinterface #54,  2           // InterfaceMethod org/apache/activemq/artemis/jlibaio/NativeLogger.error:(Ljava/lang/Object;)V
      49: getstatic     #20                 // Field totalMaxIO:Ljava/util/concurrent/atomic/AtomicLong;
      52: aload_0
      53: getfield      #33                 // Field queueSize:I
      56: ineg
      57: i2l
      58: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      61: pop2
      62: aload_0
      63: getfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
      66: ifnull        77
      69: aload_0
      70: aload_0
      71: getfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
      74: invokespecial #55                 // Method deleteContext:(Ljava/nio/ByteBuffer;)V
      77: getstatic     #16                 // Field contexts:Ljava/util/concurrent/atomic/AtomicInteger;
      80: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      83: pop
      84: invokestatic  #1                  // Method checkShutdown:()V
      87: return
    Exception table:
       from    to  target type
          18    36    39   Class java/lang/Exception

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #57                 // Method java/lang/Object.finalize:()V
       4: aload_0
       5: invokevirtual #58                 // Method close:()V
       8: return

  public org.apache.activemq.artemis.jlibaio.LibaioFile<Callback> openFile(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method java/io/File.getPath:()Ljava/lang/String;
       5: iload_2
       6: invokevirtual #60                 // Method openFile:(Ljava/lang/String;Z)Lorg/apache/activemq/artemis/jlibaio/LibaioFile;
       9: areturn

  public org.apache.activemq.artemis.jlibaio.LibaioFile<Callback> openFile(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #61                 // String path
       3: invokestatic  #62                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
      11: ldc           #63                 // String IOContext
      13: invokestatic  #62                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: pop
      17: aload_1
      18: iload_2
      19: invokestatic  #64                 // Method open:(Ljava/lang/String;Z)I
      22: istore_3
      23: new           #65                 // class org/apache/activemq/artemis/jlibaio/LibaioFile
      26: dup
      27: iload_3
      28: aload_0
      29: invokespecial #66                 // Method org/apache/activemq/artemis/jlibaio/LibaioFile."<init>":(ILorg/apache/activemq/artemis/jlibaio/LibaioContext;)V
      32: areturn

  public static org.apache.activemq.artemis.jlibaio.LibaioFile openControlFile(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #61                 // String path
       3: invokestatic  #62                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: iload_1
       9: invokestatic  #64                 // Method open:(Ljava/lang/String;Z)I
      12: istore_2
      13: new           #65                 // class org/apache/activemq/artemis/jlibaio/LibaioFile
      16: dup
      17: iload_2
      18: aconst_null
      19: invokespecial #66                 // Method org/apache/activemq/artemis/jlibaio/LibaioFile."<init>":(ILorg/apache/activemq/artemis/jlibaio/LibaioContext;)V
      22: areturn

  public int poll(Callback[], int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #67                 // Method poll:(Ljava/nio/ByteBuffer;[Lorg/apache/activemq/artemis/jlibaio/SubmitInfo;II)I
      11: istore        4
      13: aload_0
      14: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      17: ifnull        34
      20: iload         4
      22: ifle          34
      25: aload_0
      26: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      29: iload         4
      31: invokevirtual #68                 // Method java/util/concurrent/Semaphore.release:(I)V
      34: iload         4
      36: ireturn

  public void poll();
    Code:
       0: aload_0
       1: getfield      #28                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          18
      10: aload_0
      11: aload_0
      12: getfield      #31                 // Field ioContext:Ljava/nio/ByteBuffer;
      15: invokevirtual #69                 // Method blockedPoll:(Ljava/nio/ByteBuffer;)V
      18: return

  private void done(org.apache.activemq.artemis.jlibaio.SubmitInfo);
    Code:
       0: aload_1
       1: invokeinterface #70,  1           // InterfaceMethod org/apache/activemq/artemis/jlibaio/SubmitInfo.done:()V
       6: aload_0
       7: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      10: ifnull        20
      13: aload_0
      14: getfield      #37                 // Field ioSpace:Ljava/util/concurrent/Semaphore;
      17: invokevirtual #71                 // Method java/util/concurrent/Semaphore.release:()V
      20: return

  private native java.nio.ByteBuffer newContext(int);

  private native void deleteContext(java.nio.ByteBuffer);

  public static native int open(java.lang.String, boolean);

  static native void close(int);

  public static native java.nio.ByteBuffer newAlignedBuffer(int, int);

  public static native void freeBuffer(java.nio.ByteBuffer);

  native void submitWrite(int, java.nio.ByteBuffer, long, int, java.nio.ByteBuffer, Callback) throws java.io.IOException;

  native void submitRead(int, java.nio.ByteBuffer, long, int, java.nio.ByteBuffer, Callback) throws java.io.IOException;

  native int poll(java.nio.ByteBuffer, Callback[], int, int);

  native void blockedPoll(java.nio.ByteBuffer);

  static native int getNativeVersion();

  public static native boolean lock(int);

  public static native void memsetBuffer(java.nio.ByteBuffer, int);

  static native long getSize(int);

  static native int getBlockSizeFD(int);

  public static int getBlockSize(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       4: invokestatic  #73                 // Method getBlockSize:(Ljava/lang/String;)I
       7: ireturn

  public static native int getBlockSize(java.lang.String);

  static native void fallocate(int, long);

  static native void fill(int, long);

  static native void writeInternal(int, long, long, java.nio.ByteBuffer) throws java.io.IOException;

  static java.util.concurrent.atomic.AtomicBoolean access$000();
    Code:
       0: getstatic     #2                  // Field shuttingDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       3: areturn

  static void access$100();
    Code:
       0: invokestatic  #1                  // Method checkShutdown:()V
       3: return

  static {};
    Code:
       0: new           #74                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #75                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #20                 // Field totalMaxIO:Ljava/util/concurrent/atomic/AtomicLong;
      11: iconst_0
      12: putstatic     #3                  // Field loaded:Z
      15: new           #26                 // class java/util/concurrent/atomic/AtomicBoolean
      18: dup
      19: iconst_0
      20: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      23: putstatic     #2                  // Field shuttingDown:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: new           #76                 // class java/util/concurrent/atomic/AtomicInteger
      29: dup
      30: iconst_0
      31: invokespecial #77                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      34: putstatic     #16                 // Field contexts:Ljava/util/concurrent/atomic/AtomicInteger;
      37: iconst_2
      38: anewarray     #78                 // class java/lang/String
      41: dup
      42: iconst_0
      43: ldc           #79                 // String artemis-native-64
      45: aastore
      46: dup
      47: iconst_1
      48: ldc           #80                 // String artemis-native-32
      50: aastore
      51: astore_0
      52: aload_0
      53: astore_1
      54: aload_1
      55: arraylength
      56: istore_2
      57: iconst_0
      58: istore_3
      59: iload_3
      60: iload_2
      61: if_icmpge     136
      64: aload_1
      65: iload_3
      66: aaload
      67: astore        4
      69: aload         4
      71: invokestatic  #81                 // Method loadLibrary:(Ljava/lang/String;)Z
      74: ifeq          97
      77: iconst_1
      78: putstatic     #3                  // Field loaded:Z
      81: invokestatic  #82                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      84: new           #83                 // class org/apache/activemq/artemis/jlibaio/LibaioContext$1
      87: dup
      88: invokespecial #84                 // Method org/apache/activemq/artemis/jlibaio/LibaioContext$1."<init>":()V
      91: invokevirtual #85                 // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      94: goto          136
      97: getstatic     #7                  // Field org/apache/activemq/artemis/jlibaio/NativeLogger.LOGGER:Lorg/apache/activemq/artemis/jlibaio/NativeLogger;
     100: new           #10                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #86                 // String Library
     109: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload         4
     114: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #87                 // String  not found!
     119: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokeinterface #88,  2           // InterfaceMethod org/apache/activemq/artemis/jlibaio/NativeLogger.debug:(Ljava/lang/Object;)V
     130: iinc          3, 1
     133: goto          59
     136: getstatic     #3                  // Field loaded:Z
     139: ifne          152
     142: getstatic     #7                  // Field org/apache/activemq/artemis/jlibaio/NativeLogger.LOGGER:Lorg/apache/activemq/artemis/jlibaio/NativeLogger;
     145: ldc           #89                 // String Couldn\'t locate LibAIO Wrapper
     147: invokeinterface #88,  2           // InterfaceMethod org/apache/activemq/artemis/jlibaio/NativeLogger.debug:(Ljava/lang/Object;)V
     152: return
}
