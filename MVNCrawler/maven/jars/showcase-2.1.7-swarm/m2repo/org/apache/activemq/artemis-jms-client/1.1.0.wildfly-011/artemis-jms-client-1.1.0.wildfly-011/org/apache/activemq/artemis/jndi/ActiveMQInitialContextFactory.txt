Compiled from "ActiveMQInitialContextFactory.java"
public class org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory implements javax.naming.spi.InitialContextFactory {
  public static final java.lang.String REFRESH_TIMEOUT;

  public static final java.lang.String DISCOVERY_INITIAL_WAIT_TIMEOUT;

  public static final java.lang.String DYNAMIC_QUEUE_CONTEXT;

  public static final java.lang.String DYNAMIC_TOPIC_CONTEXT;

  private java.lang.String connectionFactoryPrefix;

  private java.lang.String queuePrefix;

  private java.lang.String topicPrefix;

  public org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String connectionFactory.
       7: putfield      #3                  // Field connectionFactoryPrefix:Ljava/lang/String;
      10: aload_0
      11: ldc           #4                  // String queue.
      13: putfield      #5                  // Field queuePrefix:Ljava/lang/String;
      16: aload_0
      17: ldc           #6                  // String topic.
      19: putfield      #7                  // Field topicPrefix:Ljava/lang/String;
      22: return

  public javax.naming.Context getInitialContext(java.util.Hashtable) throws javax.naming.NamingException;
    Code:
       0: new           #8                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #10                 // Method java/util/Hashtable.entrySet:()Ljava/util/Set;
      12: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          127
      27: aload_3
      28: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #14                 // class java/util/Map$Entry
      36: astore        4
      38: aload         4
      40: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      45: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
      48: astore        5
      50: aload         5
      52: aload_0
      53: getfield      #3                  // Field connectionFactoryPrefix:Ljava/lang/String;
      56: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      59: ifeq          124
      62: aload         5
      64: aload_0
      65: getfield      #3                  // Field connectionFactoryPrefix:Ljava/lang/String;
      68: invokevirtual #18                 // Method java/lang/String.length:()I
      71: invokevirtual #19                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      74: astore        6
      76: aload_0
      77: aload_1
      78: aload         5
      80: invokevirtual #20                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      83: checkcast     #21                 // class java/lang/String
      86: aload         6
      88: invokevirtual #22                 // Method createConnectionFactory:(Ljava/lang/String;Ljava/lang/String;)Ljavax/jms/ConnectionFactory;
      91: astore        7
      93: aload_2
      94: aload         6
      96: aload         7
      98: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          124
     107: astore        7
     109: aload         7
     111: invokevirtual #25                 // Method java/lang/Exception.printStackTrace:()V
     114: new           #26                 // class javax/naming/NamingException
     117: dup
     118: ldc           #27                 // String Invalid broker URL
     120: invokespecial #28                 // Method javax/naming/NamingException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: goto          18
     127: aload_0
     128: aload_2
     129: aload_1
     130: invokevirtual #29                 // Method createQueues:(Ljava/util/Map;Ljava/util/Hashtable;)V
     133: aload_0
     134: aload_2
     135: aload_1
     136: invokevirtual #30                 // Method createTopics:(Ljava/util/Map;Ljava/util/Hashtable;)V
     139: aload_2
     140: ldc           #32                 // String dynamicQueues
     142: new           #33                 // class org/apache/activemq/artemis/jndi/ActiveMQInitialContextFactory$1
     145: dup
     146: aload_0
     147: invokespecial #34                 // Method org/apache/activemq/artemis/jndi/ActiveMQInitialContextFactory$1."<init>":(Lorg/apache/activemq/artemis/jndi/ActiveMQInitialContextFactory;)V
     150: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     155: pop
     156: aload_2
     157: ldc           #35                 // String dynamicTopics
     159: new           #36                 // class org/apache/activemq/artemis/jndi/ActiveMQInitialContextFactory$2
     162: dup
     163: aload_0
     164: invokespecial #37                 // Method org/apache/activemq/artemis/jndi/ActiveMQInitialContextFactory$2."<init>":(Lorg/apache/activemq/artemis/jndi/ActiveMQInitialContextFactory;)V
     167: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     172: pop
     173: aload_0
     174: aload_1
     175: aload_2
     176: invokevirtual #38                 // Method createContext:(Ljava/util/Hashtable;Ljava/util/Map;)Lorg/apache/activemq/artemis/jndi/ReadOnlyContext;
     179: areturn
    Exception table:
       from    to  target type
          76   104   107   Class java/lang/Exception

  public java.lang.String getTopicPrefix();
    Code:
       0: aload_0
       1: getfield      #7                  // Field topicPrefix:Ljava/lang/String;
       4: areturn

  public void setTopicPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field topicPrefix:Ljava/lang/String;
       5: return

  public java.lang.String getQueuePrefix();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queuePrefix:Ljava/lang/String;
       4: areturn

  public void setQueuePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field queuePrefix:Ljava/lang/String;
       5: return

  protected org.apache.activemq.artemis.jndi.ReadOnlyContext createContext(java.util.Hashtable, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #39                 // class org/apache/activemq/artemis/jndi/ReadOnlyContext
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #40                 // Method org/apache/activemq/artemis/jndi/ReadOnlyContext."<init>":(Ljava/util/Hashtable;Ljava/util/Map;)V
       9: areturn

  protected void createQueues(java.util.Map<java.lang.String, java.lang.Object>, java.util.Hashtable);
    Code:
       0: aload_2
       1: invokevirtual #10                 // Method java/util/Hashtable.entrySet:()Ljava/util/Set;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          94
      19: aload_3
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #14                 // class java/util/Map$Entry
      28: astore        4
      30: aload         4
      32: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: aload_0
      45: getfield      #5                  // Field queuePrefix:Ljava/lang/String;
      48: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      51: ifeq          91
      54: aload         5
      56: aload_0
      57: getfield      #5                  // Field queuePrefix:Ljava/lang/String;
      60: invokevirtual #18                 // Method java/lang/String.length:()I
      63: invokevirtual #19                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      66: astore        6
      68: aload_1
      69: aload         6
      71: aload_0
      72: aload         4
      74: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      79: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
      82: invokevirtual #42                 // Method createQueue:(Ljava/lang/String;)Ljavax/jms/Queue;
      85: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: goto          10
      94: return

  protected void createTopics(java.util.Map<java.lang.String, java.lang.Object>, java.util.Hashtable);
    Code:
       0: aload_2
       1: invokevirtual #10                 // Method java/util/Hashtable.entrySet:()Ljava/util/Set;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          94
      19: aload_3
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #14                 // class java/util/Map$Entry
      28: astore        4
      30: aload         4
      32: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: aload_0
      45: getfield      #7                  // Field topicPrefix:Ljava/lang/String;
      48: invokevirtual #17                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      51: ifeq          91
      54: aload         5
      56: aload_0
      57: getfield      #7                  // Field topicPrefix:Ljava/lang/String;
      60: invokevirtual #18                 // Method java/lang/String.length:()I
      63: invokevirtual #19                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      66: astore        6
      68: aload_1
      69: aload         6
      71: aload_0
      72: aload         4
      74: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      79: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
      82: invokevirtual #43                 // Method createTopic:(Ljava/lang/String;)Ljavax/jms/Topic;
      85: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: goto          10
      94: return

  protected javax.jms.Queue createQueue(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #44                 // Method org/apache/activemq/artemis/api/jms/ActiveMQJMSClient.createQueue:(Ljava/lang/String;)Ljavax/jms/Queue;
       4: areturn

  protected javax.jms.Topic createTopic(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #45                 // Method org/apache/activemq/artemis/api/jms/ActiveMQJMSClient.createTopic:(Ljava/lang/String;)Ljavax/jms/Topic;
       4: areturn

  protected javax.jms.ConnectionFactory createConnectionFactory(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: new           #46                 // class org/apache/activemq/artemis/uri/ConnectionFactoryParser
       3: dup
       4: invokespecial #47                 // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_3
      10: aload_1
      11: invokevirtual #48                 // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser.expandURI:(Ljava/lang/String;)Ljava/net/URI;
      14: aload_2
      15: invokevirtual #49                 // Method org/apache/activemq/artemis/uri/ConnectionFactoryParser.newObject:(Ljava/net/URI;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #50                 // class javax/jms/ConnectionFactory
      21: areturn
}
