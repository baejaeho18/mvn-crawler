Compiled from "ActiveMQJMSServerBundle_$bundle.java"
public class org.apache.activemq.artemis.jms.server.ActiveMQJMSServerBundle_$bundle implements org.apache.activemq.artemis.jms.server.ActiveMQJMSServerBundle,java.io.Serializable {
  private static final long serialVersionUID;

  public static final org.apache.activemq.artemis.jms.server.ActiveMQJMSServerBundle_$bundle INSTANCE;

  private static final java.lang.String cfDoesntExist;

  private static final java.lang.String discoveryGroupDoesntExist;

  private static final java.lang.String noConnectorNameOnCF;

  private static final java.lang.String noConnectorNameConfiguredOnCF;

  private static final java.lang.String cfBindingsExists;

  private static final java.lang.String errorDecodingPassword;

  protected org.apache.activemq.artemis.jms.server.ActiveMQJMSServerBundle_$bundle();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected java.lang.Object readResolve();
    Code:
       0: getstatic     #2                  // Field INSTANCE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle_$bundle;
       3: areturn

  protected java.lang.String cfDoesntExist$str();
    Code:
       0: ldc           #4                  // String AMQ129000: Connection Factory {0} does not exist
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException cfDoesntExist(java.lang.String);
    Code:
       0: new           #5                  // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #6                  // Method cfDoesntExist$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #7                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #8                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #9                  // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #10                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #11                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #12                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #13                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String discoveryGroupDoesntExist$str();
    Code:
       0: ldc           #14                 // String AMQ129003: Discovery Group \'\'{0}\'\' does not exist on main config
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException discoveryGroupDoesntExist(java.lang.String);
    Code:
       0: new           #15                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #16                 // Method discoveryGroupDoesntExist$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #7                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #8                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #17                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #18                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #11                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #12                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #19                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String noConnectorNameOnCF$str();
    Code:
       0: ldc           #20                 // String AMQ129004: No Connector name configured on create ConnectionFactory
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException noConnectorNameOnCF();
    Code:
       0: new           #15                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #21                 // Method noConnectorNameOnCF$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #7                  // class java/lang/Object
      12: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #17                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #18                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #11                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #12                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #19                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String noConnectorNameConfiguredOnCF$str();
    Code:
       0: ldc           #23                 // String AMQ129005: Connector \'\'{0}\'\' not found on the main configuration file
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException noConnectorNameConfiguredOnCF(java.lang.String);
    Code:
       0: new           #15                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #24                 // Method noConnectorNameConfiguredOnCF$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #7                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #8                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #17                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #18                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #11                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #12                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #19                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String cfBindingsExists$str();
    Code:
       0: ldc           #25                 // String AMQ129006: Binding {0} is already being used by another connection factory
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQAddressExistsException cfBindingsExists(java.lang.String);
    Code:
       0: new           #26                 // class org/apache/activemq/artemis/api/core/ActiveMQAddressExistsException
       3: dup
       4: aload_0
       5: invokevirtual #27                 // Method cfBindingsExists$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #7                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #8                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #28                 // Method org/apache/activemq/artemis/api/core/ActiveMQAddressExistsException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #29                 // Method org/apache/activemq/artemis/api/core/ActiveMQAddressExistsException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #11                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #12                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #30                 // Method org/apache/activemq/artemis/api/core/ActiveMQAddressExistsException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String errorDecodingPassword$str();
    Code:
       0: ldc           #31                 // String AMQ129007: Error decoding password using codec instance
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException errorDecodingPassword(java.lang.Exception);
    Code:
       0: new           #15                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #32                 // Method errorDecodingPassword$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #7                  // class java/lang/Object
      12: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #17                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokevirtual #33                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      24: pop
      25: aload_2
      26: invokevirtual #18                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      29: astore_3
      30: aload_2
      31: aload_3
      32: iconst_1
      33: aload_3
      34: arraylength
      35: invokestatic  #11                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      38: checkcast     #12                 // class "[Ljava/lang/StackTraceElement;"
      41: invokevirtual #19                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      44: aload_2
      45: areturn

  static {};
    Code:
       0: new           #3                  // class org/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle_$bundle
       3: dup
       4: invokespecial #34                 // Method "<init>":()V
       7: putstatic     #2                  // Field INSTANCE:Lorg/apache/activemq/artemis/jms/server/ActiveMQJMSServerBundle_$bundle;
      10: return
}
