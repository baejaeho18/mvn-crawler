Compiled from "JMSConnectionFactoryControlImpl.java"
public class org.apache.activemq.artemis.jms.management.impl.JMSConnectionFactoryControlImpl extends javax.management.StandardMBean implements org.apache.activemq.artemis.api.jms.management.ConnectionFactoryControl {
  private final org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration cfConfig;

  private org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory cf;

  private final java.lang.String name;

  private final org.apache.activemq.artemis.jms.server.JMSServerManager jmsManager;

  public org.apache.activemq.artemis.jms.management.impl.JMSConnectionFactoryControlImpl(org.apache.activemq.artemis.jms.server.config.ConnectionFactoryConfiguration, org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory, org.apache.activemq.artemis.jms.server.JMSServerManager, java.lang.String) throws javax.management.NotCompliantMBeanException;
    Code:
       0: aload_0
       1: ldc           #1                  // class org/apache/activemq/artemis/api/jms/management/ConnectionFactoryControl
       3: invokespecial #2                  // Method javax/management/StandardMBean."<init>":(Ljava/lang/Class;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      11: aload_0
      12: aload_2
      13: putfield      #4                  // Field cf:Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      16: aload_0
      17: aload         4
      19: putfield      #5                  // Field name:Ljava/lang/String;
      22: aload_0
      23: aload_3
      24: putfield      #6                  // Field jmsManager:Lorg/apache/activemq/artemis/jms/server/JMSServerManager;
      27: return

  public java.lang.String[] getRegistryBindings();
    Code:
       0: aload_0
       1: getfield      #6                  // Field jmsManager:Lorg/apache/activemq/artemis/jms/server/JMSServerManager;
       4: aload_0
       5: getfield      #5                  // Field name:Ljava/lang/String;
       8: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/artemis/jms/server/JMSServerManager.getBindingsOnConnectionFactory:(Ljava/lang/String;)[Ljava/lang/String;
      13: areturn

  public boolean isCompressLargeMessages();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cf:Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
       4: invokevirtual #8                  // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.isCompressLargeMessage:()Z
       7: ireturn

  public void setCompressLargeMessages(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCompressLargeMessages:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public boolean isHA();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isHA:()Z
       9: ireturn

  public int getFactoryType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getFactoryType:()Lorg/apache/activemq/artemis/api/jms/JMSFactoryType;
       9: invokevirtual #13                 // Method org/apache/activemq/artemis/api/jms/JMSFactoryType.intValue:()I
      12: ireturn

  public java.lang.String getClientID();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getClientID:()Ljava/lang/String;
       9: areturn

  public long getClientFailureCheckPeriod();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getClientFailureCheckPeriod:()J
       9: lreturn

  public void setClientID(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setClientID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setDupsOKBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #17,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setDupsOKBatchSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setTransactionBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setTransactionBatchSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setClientFailureCheckPeriod(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: lload_1
       5: invokeinterface #19,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setClientFailureCheckPeriod:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setConnectionTTL(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: lload_1
       5: invokeinterface #20,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConnectionTTL:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setCallTimeout(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: lload_1
       5: invokeinterface #21,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCallTimeout:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setCallFailoverTimeout(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: lload_1
       5: invokeinterface #22,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCallFailoverTimeout:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setConsumerWindowSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConsumerWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setConsumerMaxRate(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #24,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConsumerMaxRate:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setConfirmationWindowSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setConfirmationWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setProducerMaxRate(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #26,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setProducerMaxRate:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public int getProducerWindowSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #27,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getProducerWindowSize:()I
       9: ireturn

  public void setProducerWindowSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #28,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setProducerWindowSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setCacheLargeMessagesClient(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #29,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setCacheLargeMessagesClient:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public boolean isCacheLargeMessagesClient();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isCacheLargeMessagesClient:()Z
       9: ireturn

  public void setMinLargeMessageSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #31,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setMinLargeMessageSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setBlockOnNonDurableSend(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #32,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnNonDurableSend:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setBlockOnAcknowledge(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #33,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnAcknowledge:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setBlockOnDurableSend(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #34,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setBlockOnDurableSend:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setAutoGroup(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #35,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setAutoGroup:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setPreAcknowledge(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #36,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setPreAcknowledge:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setMaxRetryInterval(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: lload_1
       5: invokeinterface #37,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setMaxRetryInterval:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setRetryIntervalMultiplier(double);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: dload_1
       5: invokeinterface #38,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setRetryIntervalMultiplier:(D)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setReconnectAttempts(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #39,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setReconnectAttempts:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public void setFailoverOnInitialConnection(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #40,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setFailoverOnInitialConnection:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public boolean isUseGlobalPools();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #41,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isUseGlobalPools:()Z
       9: ireturn

  public void setScheduledThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #42,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setScheduledThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public int getThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #43,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getThreadPoolMaxSize:()I
       9: ireturn

  public void setThreadPoolMaxSize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #44,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setThreadPoolMaxSize:(I)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public int getInitialMessagePacketSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cf:Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
       4: invokevirtual #45                 // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.getInitialMessagePacketSize:()I
       7: ireturn

  public void setGroupID(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setGroupID:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public java.lang.String getGroupID();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #47,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getGroupID:()Ljava/lang/String;
       9: areturn

  public void setUseGlobalPools(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: iload_1
       5: invokeinterface #48,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setUseGlobalPools:(Z)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public int getScheduledThreadPoolMaxSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #49,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getScheduledThreadPoolMaxSize:()I
       9: ireturn

  public void setRetryInterval(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: lload_1
       5: invokeinterface #50,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setRetryInterval:(J)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public long getMaxRetryInterval();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #51,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getMaxRetryInterval:()J
       9: lreturn

  public java.lang.String getConnectionLoadBalancingPolicyClassName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #52,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getLoadBalancingPolicyClassName:()Ljava/lang/String;
       9: areturn

  public void setConnectionLoadBalancingPolicyClassName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.setLoadBalancingPolicyClassName:(Ljava/lang/String;)Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      10: pop
      11: aload_0
      12: invokespecial #10                 // Method recreateCF:()V
      15: return

  public org.apache.activemq.artemis.api.core.TransportConfiguration[] getStaticConnectors();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cf:Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
       4: invokevirtual #54                 // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.getStaticConnectors:()[Lorg/apache/activemq/artemis/api/core/TransportConfiguration;
       7: areturn

  public org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration getDiscoveryGroupConfiguration();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cf:Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
       4: invokevirtual #55                 // Method org/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory.getDiscoveryGroupConfiguration:()Lorg/apache/activemq/artemis/api/core/DiscoveryGroupConfiguration;
       7: areturn

  public void addBinding(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field jmsManager:Lorg/apache/activemq/artemis/jms/server/JMSServerManager;
       4: aload_0
       5: getfield      #5                  // Field name:Ljava/lang/String;
       8: aload_1
       9: invokeinterface #56,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/JMSServerManager.addConnectionFactoryToBindingRegistry:(Ljava/lang/String;Ljava/lang/String;)Z
      14: pop
      15: return

  public void removeBinding(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field jmsManager:Lorg/apache/activemq/artemis/jms/server/JMSServerManager;
       4: aload_0
       5: getfield      #5                  // Field name:Ljava/lang/String;
       8: aload_1
       9: invokeinterface #57,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/JMSServerManager.removeConnectionFactoryFromBindingRegistry:(Ljava/lang/String;Ljava/lang/String;)Z
      14: pop
      15: return

  public long getCallTimeout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #58,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getCallTimeout:()J
       9: lreturn

  public long getCallFailoverTimeout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #59,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getCallFailoverTimeout:()J
       9: lreturn

  public int getConsumerMaxRate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #60,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConsumerMaxRate:()I
       9: ireturn

  public int getConsumerWindowSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #61,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConsumerWindowSize:()I
       9: ireturn

  public int getProducerMaxRate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #62,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getProducerMaxRate:()I
       9: ireturn

  public int getConfirmationWindowSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #63,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConfirmationWindowSize:()I
       9: ireturn

  public int getDupsOKBatchSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #64,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getDupsOKBatchSize:()I
       9: ireturn

  public boolean isBlockOnAcknowledge();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #65,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isBlockOnAcknowledge:()Z
       9: ireturn

  public boolean isBlockOnNonDurableSend();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #66,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isBlockOnNonDurableSend:()Z
       9: ireturn

  public boolean isBlockOnDurableSend();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isBlockOnDurableSend:()Z
       9: ireturn

  public boolean isPreAcknowledge();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #68,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isPreAcknowledge:()Z
       9: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public long getConnectionTTL();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #69,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getConnectionTTL:()J
       9: lreturn

  public int getReconnectAttempts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #70,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getReconnectAttempts:()I
       9: ireturn

  public boolean isFailoverOnInitialConnection();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isFailoverOnInitialConnection:()Z
       9: ireturn

  public int getMinLargeMessageSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #72,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getMinLargeMessageSize:()I
       9: ireturn

  public long getRetryInterval();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #73,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getRetryInterval:()J
       9: lreturn

  public double getRetryIntervalMultiplier();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #74,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getRetryIntervalMultiplier:()D
       9: dreturn

  public int getTransactionBatchSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #75,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.getTransactionBatchSize:()I
       9: ireturn

  public boolean isAutoGroup();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
       4: invokeinterface #76,  1           // InterfaceMethod org/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration.isAutoGroup:()Z
       9: ireturn

  public javax.management.MBeanInfo getMBeanInfo();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method javax/management/StandardMBean.getMBeanInfo:()Ljavax/management/MBeanInfo;
       4: astore_1
       5: new           #78                 // class javax/management/MBeanInfo
       8: dup
       9: aload_1
      10: invokevirtual #79                 // Method javax/management/MBeanInfo.getClassName:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #80                 // Method javax/management/MBeanInfo.getDescription:()Ljava/lang/String;
      17: aload_1
      18: invokevirtual #81                 // Method javax/management/MBeanInfo.getAttributes:()[Ljavax/management/MBeanAttributeInfo;
      21: aload_1
      22: invokevirtual #82                 // Method javax/management/MBeanInfo.getConstructors:()[Ljavax/management/MBeanConstructorInfo;
      25: ldc           #1                  // class org/apache/activemq/artemis/api/jms/management/ConnectionFactoryControl
      27: invokestatic  #83                 // Method org/apache/activemq/artemis/core/management/impl/MBeanInfoHelper.getMBeanOperationsInfo:(Ljava/lang/Class;)[Ljavax/management/MBeanOperationInfo;
      30: aload_1
      31: invokevirtual #84                 // Method javax/management/MBeanInfo.getNotifications:()[Ljavax/management/MBeanNotificationInfo;
      34: invokespecial #85                 // Method javax/management/MBeanInfo."<init>":(Ljava/lang/String;Ljava/lang/String;[Ljavax/management/MBeanAttributeInfo;[Ljavax/management/MBeanConstructorInfo;[Ljavax/management/MBeanOperationInfo;[Ljavax/management/MBeanNotificationInfo;)V
      37: areturn

  private void recreateCF();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field jmsManager:Lorg/apache/activemq/artemis/jms/server/JMSServerManager;
       5: aload_0
       6: getfield      #5                  // Field name:Ljava/lang/String;
       9: aload_0
      10: getfield      #3                  // Field cfConfig:Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;
      13: invokeinterface #86,  3           // InterfaceMethod org/apache/activemq/artemis/jms/server/JMSServerManager.recreateCF:(Ljava/lang/String;Lorg/apache/activemq/artemis/jms/server/config/ConnectionFactoryConfiguration;)Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      18: putfield      #4                  // Field cf:Lorg/apache/activemq/artemis/jms/client/ActiveMQConnectionFactory;
      21: goto          38
      24: astore_1
      25: new           #88                 // class java/lang/RuntimeException
      28: dup
      29: aload_1
      30: invokevirtual #89                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      33: aload_1
      34: invokespecial #90                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: athrow
      38: return
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/Exception
}
