Compiled from "AbstractSequentialFile.java"
public abstract class org.apache.activemq.artemis.core.io.AbstractSequentialFile implements org.apache.activemq.artemis.core.io.SequentialFile {
  private java.io.File file;

  protected final java.io.File directory;

  protected final org.apache.activemq.artemis.core.io.SequentialFileFactory factory;

  protected long fileSize;

  protected final java.util.concurrent.atomic.AtomicLong position;

  protected org.apache.activemq.artemis.core.io.buffer.TimedBuffer timedBuffer;

  protected final org.apache.activemq.artemis.core.io.buffer.TimedBufferObserver timedBufferObserver;

  protected final java.util.concurrent.Executor writerExecutor;

  public org.apache.activemq.artemis.core.io.AbstractSequentialFile(java.io.File, java.lang.String, org.apache.activemq.artemis.core.io.SequentialFileFactory, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field fileSize:J
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      13: dup
      14: lconst_0
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      18: putfield      #5                  // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      21: aload_0
      22: new           #6                  // class org/apache/activemq/artemis/core/io/AbstractSequentialFile$LocalBufferObserver
      25: dup
      26: aload_0
      27: invokespecial #7                  // Method org/apache/activemq/artemis/core/io/AbstractSequentialFile$LocalBufferObserver."<init>":(Lorg/apache/activemq/artemis/core/io/AbstractSequentialFile;)V
      30: putfield      #8                  // Field timedBufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
      33: aload_0
      34: new           #9                  // class java/io/File
      37: dup
      38: aload_1
      39: aload_2
      40: invokespecial #10                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      43: putfield      #11                 // Field file:Ljava/io/File;
      46: aload_0
      47: aload_1
      48: putfield      #12                 // Field directory:Ljava/io/File;
      51: aload_0
      52: aload_3
      53: putfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      56: aload_0
      57: aload         4
      59: putfield      #14                 // Field writerExecutor:Ljava/util/concurrent/Executor;
      62: return

  public final boolean exists();
    Code:
       0: aload_0
       1: getfield      #11                 // Field file:Ljava/io/File;
       4: invokevirtual #15                 // Method java/io/File.exists:()Z
       7: ireturn

  public final java.lang.String getFileName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field file:Ljava/io/File;
       4: invokevirtual #16                 // Method java/io/File.getName:()Ljava/lang/String;
       7: areturn

  public final void delete() throws java.io.IOException, java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method isOpen:()Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #18                 // Method close:()V
      11: aload_0
      12: getfield      #11                 // Field file:Ljava/io/File;
      15: invokevirtual #15                 // Method java/io/File.exists:()Z
      18: ifeq          40
      21: aload_0
      22: getfield      #11                 // Field file:Ljava/io/File;
      25: invokevirtual #19                 // Method java/io/File.delete:()Z
      28: ifne          40
      31: getstatic     #20                 // Field org/apache/activemq/artemis/journal/ActiveMQJournalLogger.LOGGER:Lorg/apache/activemq/artemis/journal/ActiveMQJournalLogger;
      34: aload_0
      35: invokeinterface #21,  2           // InterfaceMethod org/apache/activemq/artemis/journal/ActiveMQJournalLogger.errorDeletingFile:(Ljava/lang/Object;)V
      40: return

  public void copyTo(org.apache.activemq.artemis.core.io.SequentialFile) throws java.lang.Exception;
    Code:
       0: getstatic     #20                 // Field org/apache/activemq/artemis/journal/ActiveMQJournalLogger.LOGGER:Lorg/apache/activemq/artemis/journal/ActiveMQJournalLogger;
       3: new           #22                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #24                 // String Copying
      12: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #27                 // String  as
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokeinterface #29,  2           // InterfaceMethod org/apache/activemq/artemis/journal/ActiveMQJournalLogger.debug:(Ljava/lang/Object;)V
      36: aload_1
      37: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.isOpen:()Z
      42: ifne          51
      45: aload_1
      46: invokeinterface #31,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.open:()V
      51: aload_0
      52: invokevirtual #17                 // Method isOpen:()Z
      55: ifne          62
      58: aload_0
      59: invokevirtual #32                 // Method open:()V
      62: sipush        10240
      65: invokestatic  #33                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      68: astore_2
      69: aload_2
      70: invokevirtual #34                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      73: pop
      74: aload_0
      75: aload_2
      76: invokevirtual #35                 // Method read:(Ljava/nio/ByteBuffer;)I
      79: istore_3
      80: aload_1
      81: aload_2
      82: iconst_0
      83: invokeinterface #36,  3           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.writeDirect:(Ljava/nio/ByteBuffer;Z)V
      88: iload_3
      89: sipush        10240
      92: if_icmpge     98
      95: goto          101
      98: goto          69
     101: aload_1
     102: invokeinterface #37,  1           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFile.close:()V
     107: aload_0
     108: invokevirtual #18                 // Method close:()V
     111: goto          143
     114: astore_2
     115: aload_0
     116: getfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
     119: new           #39                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
     122: dup
     123: aload_2
     124: invokevirtual #40                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     127: aload_2
     128: invokespecial #41                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     131: aload_2
     132: invokevirtual #40                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     135: aload_0
     136: invokeinterface #42,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
     141: aload_2
     142: athrow
     143: return
    Exception table:
       from    to  target type
           0   111   114   Class java/io/IOException

  public void position(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field position:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  public long position();
    Code:
       0: aload_0
       1: getfield      #5                  // Field position:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public final void renameTo(java.lang.String) throws java.io.IOException, java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method close:()V
       4: goto          36
       7: astore_2
       8: aload_0
       9: getfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      12: new           #39                 // class org/apache/activemq/artemis/api/core/ActiveMQIOErrorException
      15: dup
      16: aload_2
      17: invokevirtual #40                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      20: aload_2
      21: invokespecial #41                 // Method org/apache/activemq/artemis/api/core/ActiveMQIOErrorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: aload_2
      25: invokevirtual #40                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      28: aload_0
      29: invokeinterface #42,  4           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.onIOError:(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/activemq/artemis/core/io/SequentialFile;)V
      34: aload_2
      35: athrow
      36: new           #9                  // class java/io/File
      39: dup
      40: new           #22                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_0
      48: getfield      #12                 // Field directory:Ljava/io/File;
      51: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: ldc           #45                 // String /
      56: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #46                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      69: astore_2
      70: aload_0
      71: getfield      #11                 // Field file:Ljava/io/File;
      74: aload_2
      75: invokevirtual #47                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      78: ifne          114
      81: aload_0
      82: getfield      #11                 // Field file:Ljava/io/File;
      85: aload_2
      86: invokevirtual #48                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      89: ifne          109
      92: getstatic     #49                 // Field org/apache/activemq/artemis/journal/ActiveMQJournalBundle.BUNDLE:Lorg/apache/activemq/artemis/journal/ActiveMQJournalBundle;
      95: aload_0
      96: getfield      #11                 // Field file:Ljava/io/File;
      99: invokevirtual #16                 // Method java/io/File.getName:()Ljava/lang/String;
     102: aload_1
     103: invokeinterface #50,  3           // InterfaceMethod org/apache/activemq/artemis/journal/ActiveMQJournalBundle.ioRenameFileError:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/activemq/artemis/api/core/ActiveMQIOErrorException;
     108: athrow
     109: aload_0
     110: aload_2
     111: putfield      #11                 // Field file:Ljava/io/File;
     114: return
    Exception table:
       from    to  target type
           0     4     7   Class java/io/IOException

  public synchronized void close() throws java.io.IOException, java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: new           #51                 // class java/util/concurrent/CountDownLatch
       3: dup
       4: iconst_1
       5: invokespecial #52                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
       8: astore_1
       9: aload_0
      10: getfield      #14                 // Field writerExecutor:Ljava/util/concurrent/Executor;
      13: ifnull        74
      16: aload_0
      17: getfield      #14                 // Field writerExecutor:Ljava/util/concurrent/Executor;
      20: new           #53                 // class org/apache/activemq/artemis/core/io/AbstractSequentialFile$1
      23: dup
      24: aload_0
      25: aload_1
      26: invokespecial #54                 // Method org/apache/activemq/artemis/core/io/AbstractSequentialFile$1."<init>":(Lorg/apache/activemq/artemis/core/io/AbstractSequentialFile;Ljava/util/concurrent/CountDownLatch;)V
      29: invokeinterface #55,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      34: aload_1
      35: ldc2_w        #56                 // long 60l
      38: getstatic     #58                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      41: invokevirtual #59                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      44: ifne          74
      47: getstatic     #20                 // Field org/apache/activemq/artemis/journal/ActiveMQJournalLogger.LOGGER:Lorg/apache/activemq/artemis/journal/ActiveMQJournalLogger;
      50: new           #60                 // class java/lang/Exception
      53: dup
      54: ldc           #61                 // String trace
      56: invokespecial #62                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      59: aload_0
      60: getfield      #11                 // Field file:Ljava/io/File;
      63: invokevirtual #16                 // Method java/io/File.getName:()Ljava/lang/String;
      66: invokeinterface #63,  3           // InterfaceMethod org/apache/activemq/artemis/journal/ActiveMQJournalLogger.couldNotCompleteTask:(Ljava/lang/Exception;Ljava/lang/String;)V
      71: goto          34
      74: return

  public final boolean fits(int);
    Code:
       0: aload_0
       1: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
       4: ifnonnull     31
       7: aload_0
       8: getfield      #5                  // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      14: iload_1
      15: i2l
      16: ladd
      17: aload_0
      18: getfield      #2                  // Field fileSize:J
      21: lcmp
      22: ifgt          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
      35: iload_1
      36: invokevirtual #65                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer.checkSize:(I)Z
      39: ireturn

  public void setTimedBuffer(org.apache.activemq.artemis.core.io.buffer.TimedBuffer);
    Code:
       0: aload_0
       1: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
       4: ifnull        15
       7: aload_0
       8: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
      11: aconst_null
      12: invokevirtual #66                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer.setObserver:(Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;)V
      15: aload_0
      16: aload_1
      17: putfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
      20: aload_1
      21: ifnull        32
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field timedBufferObserver:Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;
      29: invokevirtual #66                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer.setObserver:(Lorg/apache/activemq/artemis/core/io/buffer/TimedBufferObserver;)V
      32: return

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer, boolean, org.apache.activemq.artemis.core.io.IOCallback) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
       4: ifnull        33
       7: aload_1
       8: iconst_0
       9: aload_1
      10: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.capacity:()I
      15: invokeinterface #68,  3           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.setIndex:(II)V
      20: aload_0
      21: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
      24: aload_1
      25: iload_2
      26: aload_3
      27: invokevirtual #69                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer.addBytes:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      30: goto          79
      33: aload_0
      34: getfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      37: aload_1
      38: invokeinterface #67,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.capacity:()I
      43: invokeinterface #70,  2           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.newBuffer:(I)Ljava/nio/ByteBuffer;
      48: astore        4
      50: aload         4
      52: aload_1
      53: invokeinterface #71,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/ActiveMQBuffer.toByteBuffer:()Ljava/nio/ByteBuffer;
      58: invokevirtual #72                 // Method java/nio/ByteBuffer.array:()[B
      61: invokevirtual #73                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      64: pop
      65: aload         4
      67: invokevirtual #34                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      70: pop
      71: aload_0
      72: aload         4
      74: iload_2
      75: aload_3
      76: invokevirtual #74                 // Method writeDirect:(Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      79: return

  public void write(org.apache.activemq.artemis.api.core.ActiveMQBuffer, boolean) throws java.io.IOException, java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: iload_2
       1: ifeq          26
       4: new           #75                 // class org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback
       7: dup
       8: invokespecial #76                 // Method org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback."<init>":()V
      11: astore_3
      12: aload_0
      13: aload_1
      14: iconst_1
      15: aload_3
      16: invokevirtual #77                 // Method write:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      19: aload_3
      20: invokevirtual #78                 // Method org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback.waitCompletion:()V
      23: goto          35
      26: aload_0
      27: aload_1
      28: iconst_0
      29: invokestatic  #79                 // Method org/apache/activemq/artemis/core/io/DummyCallback.getInstance:()Lorg/apache/activemq/artemis/core/io/DummyCallback;
      32: invokevirtual #77                 // Method write:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      35: return

  public void write(org.apache.activemq.artemis.core.journal.EncodingSupport, boolean, org.apache.activemq.artemis.core.io.IOCallback);
    Code:
       0: aload_0
       1: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
       4: ifnull        20
       7: aload_0
       8: getfield      #64                 // Field timedBuffer:Lorg/apache/activemq/artemis/core/io/buffer/TimedBuffer;
      11: aload_1
      12: iload_2
      13: aload_3
      14: invokevirtual #80                 // Method org/apache/activemq/artemis/core/io/buffer/TimedBuffer.addBytes:(Lorg/apache/activemq/artemis/core/journal/EncodingSupport;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      17: goto          66
      20: aload_0
      21: getfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      24: aload_1
      25: invokeinterface #81,  1           // InterfaceMethod org/apache/activemq/artemis/core/journal/EncodingSupport.getEncodeSize:()I
      30: invokeinterface #70,  2           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.newBuffer:(I)Ljava/nio/ByteBuffer;
      35: astore        4
      37: aload         4
      39: invokestatic  #82                 // Method org/apache/activemq/artemis/api/core/ActiveMQBuffers.wrappedBuffer:(Ljava/nio/ByteBuffer;)Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;
      42: astore        5
      44: aload_1
      45: aload         5
      47: invokeinterface #83,  2           // InterfaceMethod org/apache/activemq/artemis/core/journal/EncodingSupport.encode:(Lorg/apache/activemq/artemis/api/core/ActiveMQBuffer;)V
      52: aload         4
      54: invokevirtual #34                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      57: pop
      58: aload_0
      59: aload         4
      61: iload_2
      62: aload_3
      63: invokevirtual #74                 // Method writeDirect:(Ljava/nio/ByteBuffer;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      66: return

  public void write(org.apache.activemq.artemis.core.journal.EncodingSupport, boolean) throws java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: iload_2
       1: ifeq          26
       4: new           #75                 // class org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback
       7: dup
       8: invokespecial #76                 // Method org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback."<init>":()V
      11: astore_3
      12: aload_0
      13: aload_1
      14: iconst_1
      15: aload_3
      16: invokevirtual #84                 // Method write:(Lorg/apache/activemq/artemis/core/journal/EncodingSupport;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      19: aload_3
      20: invokevirtual #78                 // Method org/apache/activemq/artemis/core/journal/impl/SimpleWaitIOCallback.waitCompletion:()V
      23: goto          35
      26: aload_0
      27: aload_1
      28: iconst_0
      29: invokestatic  #79                 // Method org/apache/activemq/artemis/core/io/DummyCallback.getInstance:()Lorg/apache/activemq/artemis/core/io/DummyCallback;
      32: invokevirtual #84                 // Method write:(Lorg/apache/activemq/artemis/core/journal/EncodingSupport;ZLorg/apache/activemq/artemis/core/io/IOCallback;)V
      35: return

  protected java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #11                 // Field file:Ljava/io/File;
       4: areturn

  protected java.nio.ByteBuffer newBuffer(int, int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
       4: iload_1
       5: invokeinterface #85,  2           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.calculateBlockSize:(I)I
      10: istore_1
      11: aload_0
      12: getfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      15: iload_2
      16: invokeinterface #85,  2           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.calculateBlockSize:(I)I
      21: istore_2
      22: aload_0
      23: getfield      #13                 // Field factory:Lorg/apache/activemq/artemis/core/io/SequentialFileFactory;
      26: iload_1
      27: invokeinterface #70,  2           // InterfaceMethod org/apache/activemq/artemis/core/io/SequentialFileFactory.newBuffer:(I)Ljava/nio/ByteBuffer;
      32: astore_3
      33: aload_3
      34: iload_2
      35: invokevirtual #86                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      38: pop
      39: aload_3
      40: areturn

  public java.io.File getJavaFile();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getFile:()Ljava/io/File;
       4: invokevirtual #88                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
       7: areturn
}
