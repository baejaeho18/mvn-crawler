Compiled from "ActiveMQMessageBundle_$bundle.java"
public class org.apache.activemq.artemis.core.server.ActiveMQMessageBundle_$bundle implements org.apache.activemq.artemis.core.server.ActiveMQMessageBundle,java.io.Serializable {
  private static final long serialVersionUID;

  public static final org.apache.activemq.artemis.core.server.ActiveMQMessageBundle_$bundle INSTANCE;

  private static final java.lang.String activationForServer;

  private static final java.lang.String generatingThreadDump;

  private static final java.lang.String threadDump;

  private static final java.lang.String endThreadDump;

  private static final java.lang.String serverDescribe;

  private static final java.lang.String connectionsClosedByManagement;

  private static final java.lang.String notJournalImpl;

  private static final java.lang.String replicationUnhandledError;

  private static final java.lang.String replicationTooManyJournals;

  private static final java.lang.String replicationUnhandledFileType;

  private static final java.lang.String replicationBackupUpToDate;

  private static final java.lang.String replicationUnhandledDataType;

  private static final java.lang.String noBindingForDivert;

  private static final java.lang.String bindingNotDivert;

  private static final java.lang.String clientExited;

  private static final java.lang.String noSuchQueue;

  private static final java.lang.String bindingAlreadyExists;

  private static final java.lang.String queueAlreadyExists;

  private static final java.lang.String invalidFilter;

  private static final java.lang.String messageIdNotAssigned;

  private static final java.lang.String journalsNotInSync;

  private static final java.lang.String serverNotBackupServer;

  private static final java.lang.String alreadyHaveReplicationServer;

  private static final java.lang.String cannotDeleteQueue;

  private static final java.lang.String backupServerNotInSync;

  private static final java.lang.String consumerNoReference;

  private static final java.lang.String consumerDoesntExist;

  private static final java.lang.String noAddress;

  private static final java.lang.String largeMessageNotInitialised;

  private static final java.lang.String unableToValidateUser;

  private static final java.lang.String userNoPermissions;

  private static final java.lang.String incompatibleClientServer;

  private static final java.lang.String serverNotStarted;

  private static final java.lang.String duplicateMetadata;

  private static final java.lang.String invalidType;

  private static final java.lang.String emptyOrNull;

  private static final java.lang.String greaterThanZero2;

  private static final java.lang.String notPercent;

  private static final java.lang.String greaterThanMinusOne;

  private static final java.lang.String greaterThanZeroOrMinusOne;

  private static final java.lang.String mustbeBetween;

  private static final java.lang.String invalidJournalType;

  private static final java.lang.String invalidAddressFullPolicyType;

  private static final java.lang.String greaterThanZero1;

  private static final java.lang.String invalidMessageCounterPeriod;

  private static final java.lang.String invalidNewPriority;

  private static final java.lang.String noQueueFound;

  private static final java.lang.String invalidJournal;

  private static final java.lang.String invalidJournalType2;

  private static final java.lang.String cannotCreateDir;

  private static final java.lang.String cannotConvertToInt;

  private static final java.lang.String routeNameIsNull;

  private static final java.lang.String clusterNameIsNull;

  private static final java.lang.String addressIsNull;

  private static final java.lang.String bindingTypeNotSpecified;

  private static final java.lang.String bindingIdNotSpecified;

  private static final java.lang.String distancenotSpecified;

  private static final java.lang.String connectionExists;

  private static final java.lang.String acceptorExists;

  private static final java.lang.String acceptorNotExists;

  private static final java.lang.String unknownProtocol;

  private static final java.lang.String nodeIdNull;

  private static final java.lang.String queueNameIsNull;

  private static final java.lang.String cannotFindResource;

  private static final java.lang.String noGetterMethod;

  private static final java.lang.String noOperation;

  private static final java.lang.String nullMatch;

  private static final java.lang.String invalidMatch;

  private static final java.lang.String nullUser;

  private static final java.lang.String nullPassword;

  private static final java.lang.String errorCreatingTransformerClass;

  private static final java.lang.String autoConvertError;

  private static final java.lang.String destroyConnectionWithSessionMetadataHeader;

  private static final java.lang.String destroyConnectionWithSessionMetadataClosingConnection;

  private static final java.lang.String destroyConnectionWithSessionMetadataSendException;

  private static final java.lang.String destroyConnectionWithSessionMetadataNoSessionFound;

  private static final java.lang.String invalidPageIO;

  private static final java.lang.String noDiscoveryGroupFound;

  private static final java.lang.String queueSubscriptionBelongsToDifferentAddress;

  private static final java.lang.String queueSubscriptionBelongsToDifferentFilter;

  private static final java.lang.String unableToValidateClusterUser;

  private static final java.lang.String journalDirIsFile;

  private static final java.lang.String couldNotMoveJournal;

  private static final java.lang.String addressIsFull;

  private static final java.lang.String noConfigurationFoundForScaleDown;

  private static final java.lang.String groupWhileStopping;

  private static final java.lang.String invalidSlowConsumerPolicyType;

  private static final java.lang.String consumerConnectionsClosedByManagement;

  private static final java.lang.String connectionsForUserClosedByManagement;

  private static final java.lang.String unsupportedHAPolicyConfiguration;

  private static final java.lang.String sessionLimitReached;

  private static final java.lang.String queueLimitReached;

  private static final java.lang.String cannotSetMBeanserver;

  private static final java.lang.String invalidMessageLoadBalancingType;

  private static final java.lang.String replicationSynchronizationTimeout;

  private static final java.lang.String liveBackupMismatch;

  protected org.apache.activemq.artemis.core.server.ActiveMQMessageBundle_$bundle();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected java.lang.Object readResolve();
    Code:
       0: getstatic     #2                  // Field INSTANCE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle_$bundle;
       3: areturn

  protected java.lang.String activationForServer$str();
    Code:
       0: ldc           #4                  // String AMQ119000: Activation for server {0}
       2: areturn

  public final java.lang.String activationForServer(org.apache.activemq.artemis.core.server.ActiveMQServer);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method activationForServer$str:()Ljava/lang/String;
       4: iconst_1
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String generatingThreadDump$str();
    Code:
       0: ldc           #8                  // String AMQ119001: Generating thread dump
       2: areturn

  public final java.lang.String generatingThreadDump();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method generatingThreadDump$str:()Ljava/lang/String;
       4: areturn

  protected java.lang.String threadDump$str();
    Code:
       0: ldc           #10                 // String AMQ119002: Thread {0} name = {1} id = {2} group = {3}
       2: areturn

  public final java.lang.String threadDump(java.lang.Thread, java.lang.String, java.lang.Long, java.lang.ThreadGroup);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method threadDump$str:()Ljava/lang/String;
       4: iconst_4
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: dup
      17: iconst_2
      18: aload_3
      19: aastore
      20: dup
      21: iconst_3
      22: aload         4
      24: aastore
      25: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: areturn

  protected java.lang.String endThreadDump$str();
    Code:
       0: ldc           #12                 // String AMQ119003: End Thread dump
       2: areturn

  public final java.lang.String endThreadDump();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method endThreadDump$str:()Ljava/lang/String;
       4: iconst_0
       5: anewarray     #6                  // class java/lang/Object
       8: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      11: areturn

  protected java.lang.String serverDescribe$str();
    Code:
       0: ldc           #15                 // String AMQ119004: Information about server {0}\nCluster Connection:{1}
       2: areturn

  public final java.lang.String serverDescribe(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method serverDescribe$str:()Ljava/lang/String;
       4: iconst_2
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String connectionsClosedByManagement$str();
    Code:
       0: ldc           #17                 // String AMQ119005: connections for {0} closed by management
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException connectionsClosedByManagement(java.lang.String);
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #19                 // Method connectionsClosedByManagement$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String notJournalImpl$str();
    Code:
       0: ldc           #25                 // String AMQ119006: journals are not JournalImpl. You can\'\'t set a replicator!
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException notJournalImpl();
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #26                 // Method notJournalImpl$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String replicationUnhandledError$str();
    Code:
       0: ldc           #27                 // String AMQ119007: unhandled error during replication
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException replicationUnhandledError(java.lang.Exception);
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #28                 // Method replicationUnhandledError$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: aload_1
      16: invokespecial #29                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      24: astore_3
      25: aload_2
      26: aload_3
      27: iconst_1
      28: aload_3
      29: arraylength
      30: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      33: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      36: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      39: aload_2
      40: areturn

  protected java.lang.String replicationTooManyJournals$str();
    Code:
       0: ldc           #30                 // String AMQ119008: Live Node contains more journals than the backup node. Probably a version match error
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException replicationTooManyJournals();
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #31                 // Method replicationTooManyJournals$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String replicationUnhandledFileType$str();
    Code:
       0: ldc           #32                 // String AMQ119009: Unhandled file type {0}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException replicationUnhandledFileType(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationSyncFileMessage$FileType);
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #33                 // Method replicationUnhandledFileType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String replicationBackupUpToDate$str();
    Code:
       0: ldc           #34                 // String AMQ119010: Remote Backup can not be up-to-date!
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException replicationBackupUpToDate();
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #35                 // Method replicationBackupUpToDate$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String replicationUnhandledDataType$str();
    Code:
       0: ldc           #36                 // String AMQ119011: unhandled data type!
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException replicationUnhandledDataType();
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #37                 // Method replicationUnhandledDataType$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String noBindingForDivert$str();
    Code:
       0: ldc           #38                 // String AMQ119012: No binding for divert {0}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException noBindingForDivert(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #39                 // Method noBindingForDivert$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String bindingNotDivert$str();
    Code:
       0: ldc           #40                 // String AMQ119013: Binding {0} is not a divert
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException bindingNotDivert(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #41                 // Method bindingNotDivert$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String clientExited$str();
    Code:
       0: ldc           #42                 // String AMQ119014: Did not receive data from {0}. It is likely the client has exited or crashed without closing its connection, or the network between the server and client has failed. You also might have configured connection-ttl and client-failure-check-period incorrectly. Please check user manual for more information. The connection will now be closed.
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQConnectionTimedOutException clientExited(java.lang.String);
    Code:
       0: new           #43                 // class org/apache/activemq/artemis/api/core/ActiveMQConnectionTimedOutException
       3: dup
       4: aload_0
       5: invokevirtual #44                 // Method clientExited$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #45                 // Method org/apache/activemq/artemis/api/core/ActiveMQConnectionTimedOutException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #46                 // Method org/apache/activemq/artemis/api/core/ActiveMQConnectionTimedOutException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #47                 // Method org/apache/activemq/artemis/api/core/ActiveMQConnectionTimedOutException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String noSuchQueue$str();
    Code:
       0: ldc           #48                 // String AMQ119017: Queue {0} does not exist
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQNonExistentQueueException noSuchQueue(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #49                 // class org/apache/activemq/artemis/api/core/ActiveMQNonExistentQueueException
       3: dup
       4: aload_0
       5: invokevirtual #50                 // Method noSuchQueue$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #51                 // Method org/apache/activemq/artemis/api/core/ActiveMQNonExistentQueueException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #52                 // Method org/apache/activemq/artemis/api/core/ActiveMQNonExistentQueueException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #53                 // Method org/apache/activemq/artemis/api/core/ActiveMQNonExistentQueueException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String bindingAlreadyExists$str();
    Code:
       0: ldc           #54                 // String AMQ119018: Binding already exists {0}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQQueueExistsException bindingAlreadyExists(org.apache.activemq.artemis.core.postoffice.Binding);
    Code:
       0: new           #55                 // class org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException
       3: dup
       4: aload_0
       5: invokevirtual #56                 // Method bindingAlreadyExists$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #57                 // Method org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #58                 // Method org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #59                 // Method org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String queueAlreadyExists$str();
    Code:
       0: ldc           #60                 // String AMQ119019: Queue already exists {0}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQQueueExistsException queueAlreadyExists(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #55                 // class org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException
       3: dup
       4: aload_0
       5: invokevirtual #61                 // Method queueAlreadyExists$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #57                 // Method org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #58                 // Method org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #59                 // Method org/apache/activemq/artemis/api/core/ActiveMQQueueExistsException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidFilter$str();
    Code:
       0: ldc           #62                 // String AMQ119020: Invalid filter: {0}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInvalidFilterExpressionException invalidFilter(java.lang.Throwable, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #63                 // class org/apache/activemq/artemis/api/core/ActiveMQInvalidFilterExpressionException
       3: dup
       4: aload_0
       5: invokevirtual #64                 // Method invalidFilter$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #65                 // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidFilterExpressionException."<init>":(Ljava/lang/String;)V
      22: astore_3
      23: aload_3
      24: aload_1
      25: invokevirtual #66                 // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidFilterExpressionException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      28: pop
      29: aload_3
      30: invokevirtual #67                 // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidFilterExpressionException.getStackTrace:()[Ljava/lang/StackTraceElement;
      33: astore        4
      35: aload_3
      36: aload         4
      38: iconst_1
      39: aload         4
      41: arraylength
      42: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      45: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      48: invokevirtual #68                 // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidFilterExpressionException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      51: aload_3
      52: areturn

  protected java.lang.String messageIdNotAssigned$str();
    Code:
       0: ldc           #69                 // String AMQ119021: MessageId was not assigned to Message
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException messageIdNotAssigned();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #71                 // Method messageIdNotAssigned$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String journalsNotInSync$str();
    Code:
       0: ldc           #75                 // String AMQ119022: Cannot compare journals if not in sync!
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException journalsNotInSync();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #76                 // Method journalsNotInSync$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String serverNotBackupServer$str();
    Code:
       0: ldc           #77                 // String AMQ119023: Connected server is not a backup server
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException serverNotBackupServer();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #78                 // Method serverNotBackupServer$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String alreadyHaveReplicationServer$str();
    Code:
       0: ldc           #79                 // String AMQ119024: Backup replication server is already connected to another server
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException alreadyHaveReplicationServer();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #80                 // Method alreadyHaveReplicationServer$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String cannotDeleteQueue$str();
    Code:
       0: ldc           #81                 // String AMQ119025: Cannot delete queue {0} on binding {1} - it has consumers = {2}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException cannotDeleteQueue(org.apache.activemq.artemis.api.core.SimpleString, org.apache.activemq.artemis.api.core.SimpleString, java.lang.String);
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #82                 // Method cannotDeleteQueue$str:()Ljava/lang/String;
       8: iconst_3
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: aastore
      24: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      30: astore        4
      32: aload         4
      34: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      37: astore        5
      39: aload         4
      41: aload         5
      43: iconst_1
      44: aload         5
      46: arraylength
      47: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      50: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      53: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      56: aload         4
      58: areturn

  protected java.lang.String backupServerNotInSync$str();
    Code:
       0: ldc           #83                 // String AMQ119026: Backup Server was not yet in sync with live
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException backupServerNotInSync();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #84                 // Method backupServerNotInSync$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String consumerNoReference$str();
    Code:
       0: ldc           #85                 // String AMQ119027: Could not find reference on consumer ID={0}, messageId = {1} queue = {2}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException consumerNoReference(java.lang.Long, java.lang.Long, org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #86                 // Method consumerNoReference$str:()Ljava/lang/String;
       8: iconst_3
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: aastore
      24: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      30: astore        4
      32: aload         4
      34: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      37: astore        5
      39: aload         4
      41: aload         5
      43: iconst_1
      44: aload         5
      46: arraylength
      47: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      50: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      53: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      56: aload         4
      58: areturn

  protected java.lang.String consumerDoesntExist$str();
    Code:
       0: ldc           #87                 // String AMQ119028: Consumer {0} doesn\'\'t exist on the server
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException consumerDoesntExist(long);
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #88                 // Method consumerDoesntExist$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: lload_1
      15: invokestatic  #89                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: aastore
      19: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      25: astore_3
      26: aload_3
      27: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      30: astore        4
      32: aload_3
      33: aload         4
      35: iconst_1
      36: aload         4
      38: arraylength
      39: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      42: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      45: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      48: aload_3
      49: areturn

  protected java.lang.String noAddress$str();
    Code:
       0: ldc           #90                 // String AMQ119029: No address configured on the Server\'\'s Session
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException noAddress();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #91                 // Method noAddress$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String largeMessageNotInitialised$str();
    Code:
       0: ldc           #92                 // String AMQ119030: large-message not initialized on server
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException largeMessageNotInitialised();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #93                 // Method largeMessageNotInitialised$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String unableToValidateUser$str();
    Code:
       0: ldc           #94                 // String AMQ119031: Unable to validate user: {0}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQSecurityException unableToValidateUser(java.lang.String);
    Code:
       0: new           #95                 // class org/apache/activemq/artemis/api/core/ActiveMQSecurityException
       3: dup
       4: aload_0
       5: invokevirtual #96                 // Method unableToValidateUser$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #97                 // Method org/apache/activemq/artemis/api/core/ActiveMQSecurityException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #98                 // Method org/apache/activemq/artemis/api/core/ActiveMQSecurityException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #99                 // Method org/apache/activemq/artemis/api/core/ActiveMQSecurityException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String userNoPermissions$str();
    Code:
       0: ldc           #100                // String AMQ119032: User: {0} does not have permission=\'\'{1}\'\' on address {2}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQSecurityException userNoPermissions(java.lang.String, org.apache.activemq.artemis.core.security.CheckType, java.lang.String);
    Code:
       0: new           #95                 // class org/apache/activemq/artemis/api/core/ActiveMQSecurityException
       3: dup
       4: aload_0
       5: invokevirtual #101                // Method userNoPermissions$str:()Ljava/lang/String;
       8: iconst_3
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: aastore
      24: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #97                 // Method org/apache/activemq/artemis/api/core/ActiveMQSecurityException."<init>":(Ljava/lang/String;)V
      30: astore        4
      32: aload         4
      34: invokevirtual #98                 // Method org/apache/activemq/artemis/api/core/ActiveMQSecurityException.getStackTrace:()[Ljava/lang/StackTraceElement;
      37: astore        5
      39: aload         4
      41: aload         5
      43: iconst_1
      44: aload         5
      46: arraylength
      47: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      50: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      53: invokevirtual #99                 // Method org/apache/activemq/artemis/api/core/ActiveMQSecurityException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      56: aload         4
      58: areturn

  protected java.lang.String incompatibleClientServer$str();
    Code:
       0: ldc           #102                // String AMQ119033: Server and client versions incompatible
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIncompatibleClientServerException incompatibleClientServer();
    Code:
       0: new           #103                // class org/apache/activemq/artemis/api/core/ActiveMQIncompatibleClientServerException
       3: dup
       4: aload_0
       5: invokevirtual #104                // Method incompatibleClientServer$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #105                // Method org/apache/activemq/artemis/api/core/ActiveMQIncompatibleClientServerException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #106                // Method org/apache/activemq/artemis/api/core/ActiveMQIncompatibleClientServerException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #107                // Method org/apache/activemq/artemis/api/core/ActiveMQIncompatibleClientServerException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String serverNotStarted$str();
    Code:
       0: ldc           #108                // String AMQ119034: Server not started
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQSessionCreationException serverNotStarted();
    Code:
       0: new           #109                // class org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException
       3: dup
       4: aload_0
       5: invokevirtual #110                // Method serverNotStarted$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #111                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #112                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #113                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String duplicateMetadata$str();
    Code:
       0: ldc           #114                // String AMQ119035: Metadata {0}={1} had been set already
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQDuplicateMetaDataException duplicateMetadata(java.lang.String, java.lang.String);
    Code:
       0: new           #115                // class org/apache/activemq/artemis/api/core/ActiveMQDuplicateMetaDataException
       3: dup
       4: aload_0
       5: invokevirtual #116                // Method duplicateMetadata$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #117                // Method org/apache/activemq/artemis/api/core/ActiveMQDuplicateMetaDataException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #118                // Method org/apache/activemq/artemis/api/core/ActiveMQDuplicateMetaDataException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #119                // Method org/apache/activemq/artemis/api/core/ActiveMQDuplicateMetaDataException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String invalidType$str();
    Code:
       0: ldc           #120                // String AMQ119036: Invalid type: {0}
       2: areturn

  public final java.lang.IllegalArgumentException invalidType(java.lang.Object);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #122                // Method invalidType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String emptyOrNull$str();
    Code:
       0: ldc           #126                // String AMQ119038: {0} must neither be null nor empty
       2: areturn

  public final java.lang.IllegalArgumentException emptyOrNull(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #127                // Method emptyOrNull$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String greaterThanZero2$str();
    Code:
       0: ldc           #128                // String AMQ119039: {0}  must be greater than 0 (actual value: {1})
       2: areturn

  public final java.lang.IllegalArgumentException greaterThanZero(java.lang.String, java.lang.Number);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #129                // Method greaterThanZero2$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String notPercent$str();
    Code:
       0: ldc           #130                // String AMQ119040: {0} must be a valid percentual value between 0 and 100 (actual value: {1})
       2: areturn

  public final java.lang.IllegalArgumentException notPercent(java.lang.String, java.lang.Number);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #131                // Method notPercent$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String greaterThanMinusOne$str();
    Code:
       0: ldc           #132                // String AMQ119041: {0}  must be equals to -1 or greater than 0 (actual value: {1})
       2: areturn

  public final java.lang.IllegalArgumentException greaterThanMinusOne(java.lang.String, java.lang.Number);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #133                // Method greaterThanMinusOne$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String greaterThanZeroOrMinusOne$str();
    Code:
       0: ldc           #134                // String AMQ119042: {0}  must be equals to -1 or greater or equals to 0 (actual value: {1})
       2: areturn

  public final java.lang.IllegalArgumentException greaterThanZeroOrMinusOne(java.lang.String, java.lang.Number);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #135                // Method greaterThanZeroOrMinusOne$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String mustbeBetween$str();
    Code:
       0: ldc           #136                // String AMQ119043: {0} must be between {1} and {2} inclusive (actual value: {3})
       2: areturn

  public final java.lang.IllegalArgumentException mustbeBetween(java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Object);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #137                // Method mustbeBetween$str:()Ljava/lang/String;
       8: iconst_4
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: aastore
      24: dup
      25: iconst_3
      26: aload         4
      28: aastore
      29: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: astore        5
      37: aload         5
      39: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      42: astore        6
      44: aload         5
      46: aload         6
      48: iconst_1
      49: aload         6
      51: arraylength
      52: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      55: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      58: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      61: aload         5
      63: areturn

  protected java.lang.String invalidJournalType$str();
    Code:
       0: ldc           #138                // String AMQ119044: Invalid journal type {0}
       2: areturn

  public final java.lang.IllegalArgumentException invalidJournalType(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #139                // Method invalidJournalType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidAddressFullPolicyType$str();
    Code:
       0: ldc           #140                // String AMQ119045: Invalid address full message policy type {0}
       2: areturn

  public final java.lang.IllegalArgumentException invalidAddressFullPolicyType(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #141                // Method invalidAddressFullPolicyType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String greaterThanZero1$str();
    Code:
       0: ldc           #142                // String AMQ119046: invalid value: {0} count must be greater than 0
       2: areturn

  public final java.lang.IllegalArgumentException greaterThanZero(java.lang.Integer);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #143                // Method greaterThanZero1$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidMessageCounterPeriod$str();
    Code:
       0: ldc           #144                // String AMQ119047: Cannot set Message Counter Sample Period < {0}ms
       2: areturn

  public final java.lang.IllegalArgumentException invalidMessageCounterPeriod(java.lang.Long);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #145                // Method invalidMessageCounterPeriod$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidNewPriority$str();
    Code:
       0: ldc           #146                // String AMQ119048: invalid new Priority value: {0}. It must be between 0 and 9 (both included)
       2: areturn

  public final java.lang.IllegalArgumentException invalidNewPriority(java.lang.Integer);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #147                // Method invalidNewPriority$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String noQueueFound$str();
    Code:
       0: ldc           #148                // String AMQ119049: No queue found for {0}
       2: areturn

  public final java.lang.IllegalArgumentException noQueueFound(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #149                // Method noQueueFound$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String invalidJournal$str();
    Code:
       0: ldc           #150                // String AMQ119050: Only NIO and AsyncIO are supported journals
       2: areturn

  public final java.lang.IllegalArgumentException invalidJournal();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #151                // Method invalidJournal$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String invalidJournalType2$str();
    Code:
       0: ldc           #152                // String AMQ119051: Invalid journal type {0}
       2: areturn

  public final java.lang.IllegalArgumentException invalidJournalType2(org.apache.activemq.artemis.core.server.JournalType);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #153                // Method invalidJournalType2$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String cannotCreateDir$str();
    Code:
       0: ldc           #154                // String AMQ119052: Directory {0} does not exist and cannot be created
       2: areturn

  public final java.lang.IllegalArgumentException cannotCreateDir(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #155                // Method cannotCreateDir$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String cannotConvertToInt$str();
    Code:
       0: ldc           #156                // String AMQ119054: Cannot convert to int
       2: areturn

  public final java.lang.IllegalArgumentException cannotConvertToInt();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #157                // Method cannotConvertToInt$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String routeNameIsNull$str();
    Code:
       0: ldc           #158                // String AMQ119055: Routing name is null
       2: areturn

  public final java.lang.IllegalArgumentException routeNameIsNull();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #159                // Method routeNameIsNull$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String clusterNameIsNull$str();
    Code:
       0: ldc           #160                // String AMQ119056: Cluster name is null
       2: areturn

  public final java.lang.IllegalArgumentException clusterNameIsNull();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #161                // Method clusterNameIsNull$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String addressIsNull$str();
    Code:
       0: ldc           #162                // String AMQ119057: Address is null
       2: areturn

  public final java.lang.IllegalArgumentException addressIsNull();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #163                // Method addressIsNull$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String bindingTypeNotSpecified$str();
    Code:
       0: ldc           #164                // String AMQ119058: Binding type not specified
       2: areturn

  public final java.lang.IllegalArgumentException bindingTypeNotSpecified();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #165                // Method bindingTypeNotSpecified$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String bindingIdNotSpecified$str();
    Code:
       0: ldc           #166                // String AMQ119059: Binding ID is null
       2: areturn

  public final java.lang.IllegalArgumentException bindingIdNotSpecified();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #167                // Method bindingIdNotSpecified$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String distancenotSpecified$str();
    Code:
       0: ldc           #168                // String AMQ119060: Distance is null
       2: areturn

  public final java.lang.IllegalArgumentException distancenotSpecified();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #169                // Method distancenotSpecified$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String connectionExists$str();
    Code:
       0: ldc           #170                // String AMQ119061: Connection already exists with id {0}
       2: areturn

  public final java.lang.IllegalArgumentException connectionExists(java.lang.Object);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #171                // Method connectionExists$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String acceptorExists$str();
    Code:
       0: ldc           #172                // String AMQ119062: Acceptor with id {0} already registered
       2: areturn

  public final java.lang.IllegalArgumentException acceptorExists(java.lang.Integer);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #173                // Method acceptorExists$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String acceptorNotExists$str();
    Code:
       0: ldc           #174                // String AMQ119063: Acceptor with id {0} not registered
       2: areturn

  public final java.lang.IllegalArgumentException acceptorNotExists(java.lang.Integer);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #175                // Method acceptorNotExists$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String unknownProtocol$str();
    Code:
       0: ldc           #176                // String AMQ119064: Unknown protocol {0}
       2: areturn

  public final java.lang.IllegalArgumentException unknownProtocol(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #177                // Method unknownProtocol$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String nodeIdNull$str();
    Code:
       0: ldc           #178                // String AMQ119065: node id is null
       2: areturn

  public final java.lang.IllegalArgumentException nodeIdNull();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #179                // Method nodeIdNull$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String queueNameIsNull$str();
    Code:
       0: ldc           #180                // String AMQ119066: Queue name is null
       2: areturn

  public final java.lang.IllegalArgumentException queueNameIsNull();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #181                // Method queueNameIsNull$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String cannotFindResource$str();
    Code:
       0: ldc           #182                // String AMQ119067: Cannot find resource with name {0}
       2: areturn

  public final java.lang.IllegalArgumentException cannotFindResource(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #183                // Method cannotFindResource$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String noGetterMethod$str();
    Code:
       0: ldc           #184                // String AMQ119068: no getter method for {0}
       2: areturn

  public final java.lang.IllegalArgumentException noGetterMethod(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #185                // Method noGetterMethod$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String noOperation$str();
    Code:
       0: ldc           #186                // String AMQ119069: no operation {0}/{1}
       2: areturn

  public final java.lang.IllegalArgumentException noOperation(java.lang.String, java.lang.Integer);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #187                // Method noOperation$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String nullMatch$str();
    Code:
       0: ldc           #188                // String AMQ119070: match can not be null
       2: areturn

  public final java.lang.IllegalArgumentException nullMatch();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #189                // Method nullMatch$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String invalidMatch$str();
    Code:
       0: ldc           #190                // String AMQ119071: # can only be at end of match
       2: areturn

  public final java.lang.IllegalArgumentException invalidMatch();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #191                // Method invalidMatch$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String nullUser$str();
    Code:
       0: ldc           #192                // String AMQ119072: User cannot be null
       2: areturn

  public final java.lang.IllegalArgumentException nullUser();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #193                // Method nullUser$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String nullPassword$str();
    Code:
       0: ldc           #194                // String AMQ119073: Password cannot be null
       2: areturn

  public final java.lang.IllegalArgumentException nullPassword();
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #195                // Method nullPassword$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String errorCreatingTransformerClass$str();
    Code:
       0: ldc           #196                // String AMQ119074: Error instantiating transformer class {0}
       2: areturn

  public final java.lang.IllegalArgumentException errorCreatingTransformerClass(java.lang.Exception, java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #197                // Method errorCreatingTransformerClass$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: aload_1
      20: invokespecial #198                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: astore_3
      24: aload_3
      25: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      28: astore        4
      30: aload_3
      31: aload         4
      33: iconst_1
      34: aload         4
      36: arraylength
      37: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      40: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      43: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      46: aload_3
      47: areturn

  protected java.lang.String autoConvertError$str();
    Code:
       0: ldc           #199                // String AMQ119075: method autoEncode doesn\'\'t know how to convert {0} yet
       2: areturn

  public final java.lang.IllegalArgumentException autoConvertError(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #200                // Method autoConvertError$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String destroyConnectionWithSessionMetadataHeader$str();
    Code:
       0: ldc           #201                // String AMQ119076: Executing destroyConnection with {0}={1} through management\'\'s request
       2: areturn

  public final java.lang.String destroyConnectionWithSessionMetadataHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #202                // Method destroyConnectionWithSessionMetadataHeader$str:()Ljava/lang/String;
       4: iconst_2
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String destroyConnectionWithSessionMetadataClosingConnection$str();
    Code:
       0: ldc           #203                // String AMQ119077: Closing connection {0}
       2: areturn

  public final java.lang.String destroyConnectionWithSessionMetadataClosingConnection(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #204                // Method destroyConnectionWithSessionMetadataClosingConnection$str:()Ljava/lang/String;
       4: iconst_1
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: areturn

  protected java.lang.String destroyConnectionWithSessionMetadataSendException$str();
    Code:
       0: ldc           #205                // String AMQ119078: Disconnected per admin\'\'s request on {0}={1}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQDisconnectedException destroyConnectionWithSessionMetadataSendException(java.lang.String, java.lang.String);
    Code:
       0: new           #206                // class org/apache/activemq/artemis/api/core/ActiveMQDisconnectedException
       3: dup
       4: aload_0
       5: invokevirtual #207                // Method destroyConnectionWithSessionMetadataSendException$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: aload_2
      19: aastore
      20: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #208                // Method org/apache/activemq/artemis/api/core/ActiveMQDisconnectedException."<init>":(Ljava/lang/String;)V
      26: astore_3
      27: aload_3
      28: invokevirtual #209                // Method org/apache/activemq/artemis/api/core/ActiveMQDisconnectedException.getStackTrace:()[Ljava/lang/StackTraceElement;
      31: astore        4
      33: aload_3
      34: aload         4
      36: iconst_1
      37: aload         4
      39: arraylength
      40: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      43: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      46: invokevirtual #210                // Method org/apache/activemq/artemis/api/core/ActiveMQDisconnectedException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: areturn

  protected java.lang.String destroyConnectionWithSessionMetadataNoSessionFound$str();
    Code:
       0: ldc           #211                // String AMQ119079: No session found with {0}={1}
       2: areturn

  public final java.lang.String destroyConnectionWithSessionMetadataNoSessionFound(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #212                // Method destroyConnectionWithSessionMetadataNoSessionFound$str:()Ljava/lang/String;
       4: iconst_2
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  protected java.lang.String invalidPageIO$str();
    Code:
       0: ldc           #213                // String AMQ119080: Invalid Page IO, PagingManager was stopped or closed
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException invalidPageIO();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #214                // Method invalidPageIO$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String noDiscoveryGroupFound$str();
    Code:
       0: ldc           #215                // String AMQ119081: No Discovery Group configuration named {0} found
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQException noDiscoveryGroupFound(org.apache.activemq.artemis.api.core.DiscoveryGroupConfiguration);
    Code:
       0: new           #216                // class org/apache/activemq/artemis/api/core/ActiveMQException
       3: dup
       4: aload_0
       5: invokevirtual #217                // Method noDiscoveryGroupFound$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #218                // Method org/apache/activemq/artemis/api/core/ActiveMQException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #219                // Method org/apache/activemq/artemis/api/core/ActiveMQException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #220                // Method org/apache/activemq/artemis/api/core/ActiveMQException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String queueSubscriptionBelongsToDifferentAddress$str();
    Code:
       0: ldc           #221                // String AMQ119082: Queue {0} already exists on another subscription
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInvalidTransientQueueUseException queueSubscriptionBelongsToDifferentAddress(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #222                // class org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException
       3: dup
       4: aload_0
       5: invokevirtual #223                // Method queueSubscriptionBelongsToDifferentAddress$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #224                // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #225                // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #226                // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String queueSubscriptionBelongsToDifferentFilter$str();
    Code:
       0: ldc           #227                // String AMQ119083: Queue {0} has a different filter than requested
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInvalidTransientQueueUseException queueSubscriptionBelongsToDifferentFilter(org.apache.activemq.artemis.api.core.SimpleString);
    Code:
       0: new           #222                // class org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException
       3: dup
       4: aload_0
       5: invokevirtual #228                // Method queueSubscriptionBelongsToDifferentFilter$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #224                // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #225                // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #226                // Method org/apache/activemq/artemis/api/core/ActiveMQInvalidTransientQueueUseException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String unableToValidateClusterUser$str();
    Code:
       0: ldc           #229                // String AMQ119099: Unable to authenticate cluster user: {0}
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQClusterSecurityException unableToValidateClusterUser(java.lang.String);
    Code:
       0: new           #230                // class org/apache/activemq/artemis/api/core/ActiveMQClusterSecurityException
       3: dup
       4: aload_0
       5: invokevirtual #231                // Method unableToValidateClusterUser$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #232                // Method org/apache/activemq/artemis/api/core/ActiveMQClusterSecurityException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #233                // Method org/apache/activemq/artemis/api/core/ActiveMQClusterSecurityException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #234                // Method org/apache/activemq/artemis/api/core/ActiveMQClusterSecurityException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String journalDirIsFile$str();
    Code:
       0: ldc           #235                // String AMQ119100: Trying to move a journal file that refers to a file instead of a directory: {0}
       2: areturn

  public final java.lang.IllegalStateException journalDirIsFile(java.io.File);
    Code:
       0: new           #236                // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #237                // Method journalDirIsFile$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #239                // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #240                // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String couldNotMoveJournal$str();
    Code:
       0: ldc           #241                // String AMQ119101: error trying to backup journal files at directory: {0}
       2: areturn

  public final java.lang.IllegalStateException couldNotMoveJournal(java.io.File);
    Code:
       0: new           #236                // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #242                // Method couldNotMoveJournal$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #239                // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #240                // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String addressIsFull$str();
    Code:
       0: ldc           #243                // String AMQ119102: Address \"{0}\" is full.
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQAddressFullException addressIsFull(java.lang.String);
    Code:
       0: new           #244                // class org/apache/activemq/artemis/api/core/ActiveMQAddressFullException
       3: dup
       4: aload_0
       5: invokevirtual #245                // Method addressIsFull$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #246                // Method org/apache/activemq/artemis/api/core/ActiveMQAddressFullException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #247                // Method org/apache/activemq/artemis/api/core/ActiveMQAddressFullException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #248                // Method org/apache/activemq/artemis/api/core/ActiveMQAddressFullException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String noConfigurationFoundForScaleDown$str();
    Code:
       0: ldc           #249                // String AMQ119103: No Connectors or Discovery Groups configured for Scale Down
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQException noConfigurationFoundForScaleDown();
    Code:
       0: new           #216                // class org/apache/activemq/artemis/api/core/ActiveMQException
       3: dup
       4: aload_0
       5: invokevirtual #250                // Method noConfigurationFoundForScaleDown$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #218                // Method org/apache/activemq/artemis/api/core/ActiveMQException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #219                // Method org/apache/activemq/artemis/api/core/ActiveMQException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #220                // Method org/apache/activemq/artemis/api/core/ActiveMQException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String groupWhileStopping$str();
    Code:
       0: ldc           #251                // String AMQ119104: Server is stopping. Message grouping not allowed
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQException groupWhileStopping();
    Code:
       0: new           #216                // class org/apache/activemq/artemis/api/core/ActiveMQException
       3: dup
       4: aload_0
       5: invokevirtual #252                // Method groupWhileStopping$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #218                // Method org/apache/activemq/artemis/api/core/ActiveMQException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #219                // Method org/apache/activemq/artemis/api/core/ActiveMQException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #220                // Method org/apache/activemq/artemis/api/core/ActiveMQException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String invalidSlowConsumerPolicyType$str();
    Code:
       0: ldc           #253                // String AMQ119106: Invalid slow consumer policy type {0}
       2: areturn

  public final java.lang.IllegalArgumentException invalidSlowConsumerPolicyType(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #254                // Method invalidSlowConsumerPolicyType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String consumerConnectionsClosedByManagement$str();
    Code:
       0: ldc           #255                // String AMQ119107: consumer connections for address {0} closed by management
       2: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException consumerConnectionsClosedByManagement(java.lang.String);
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #256                // Method consumerConnectionsClosedByManagement$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String connectionsForUserClosedByManagement$str();
    Code:
       0: ldc_w         #257                // String AMQ119108: connections for user {0} closed by management
       3: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQInternalErrorException connectionsForUserClosedByManagement(java.lang.String);
    Code:
       0: new           #18                 // class org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException
       3: dup
       4: aload_0
       5: invokevirtual #258                // Method connectionsForUserClosedByManagement$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #21                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #24                 // Method org/apache/activemq/artemis/api/core/ActiveMQInternalErrorException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String unsupportedHAPolicyConfiguration$str();
    Code:
       0: ldc_w         #259                // String AMQ119109: unsupported HA Policy Configuration {0}
       3: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException unsupportedHAPolicyConfiguration(java.lang.Object);
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #260                // Method unsupportedHAPolicyConfiguration$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String sessionLimitReached$str();
    Code:
       0: ldc_w         #261                // String AMQ119110: Too many sessions for user \'\'{0}\'\'. Sessions allowed: {1}.
       3: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQSessionCreationException sessionLimitReached(java.lang.String, int);
    Code:
       0: new           #109                // class org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException
       3: dup
       4: aload_0
       5: invokevirtual #262                // Method sessionLimitReached$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #263                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokespecial #111                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException."<init>":(Ljava/lang/String;)V
      29: astore_3
      30: aload_3
      31: invokevirtual #112                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException.getStackTrace:()[Ljava/lang/StackTraceElement;
      34: astore        4
      36: aload_3
      37: aload         4
      39: iconst_1
      40: aload         4
      42: arraylength
      43: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      46: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      49: invokevirtual #113                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      52: aload_3
      53: areturn

  protected java.lang.String queueLimitReached$str();
    Code:
       0: ldc_w         #264                // String AMQ119111: Too many queues created by user \'\'{0}\'\'. Queues allowed: {1}.
       3: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQSessionCreationException queueLimitReached(java.lang.String, int);
    Code:
       0: new           #109                // class org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException
       3: dup
       4: aload_0
       5: invokevirtual #265                // Method queueLimitReached$str:()Ljava/lang/String;
       8: iconst_2
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: dup
      17: iconst_1
      18: iload_2
      19: invokestatic  #263                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokespecial #111                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException."<init>":(Ljava/lang/String;)V
      29: astore_3
      30: aload_3
      31: invokevirtual #112                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException.getStackTrace:()[Ljava/lang/StackTraceElement;
      34: astore        4
      36: aload_3
      37: aload         4
      39: iconst_1
      40: aload         4
      42: arraylength
      43: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      46: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      49: invokevirtual #113                // Method org/apache/activemq/artemis/api/core/ActiveMQSessionCreationException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      52: aload_3
      53: areturn

  protected java.lang.String cannotSetMBeanserver$str();
    Code:
       0: ldc_w         #266                // String AMQ119112: Cannot set MBeanServer during startup or while started
       3: areturn

  public final java.lang.IllegalStateException cannotSetMBeanserver();
    Code:
       0: new           #236                // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #267                // Method cannotSetMBeanserver$str:()Ljava/lang/String;
       8: iconst_0
       9: anewarray     #6                  // class java/lang/Object
      12: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      15: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: astore_1
      19: aload_1
      20: invokevirtual #239                // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      23: astore_2
      24: aload_1
      25: aload_2
      26: iconst_1
      27: aload_2
      28: arraylength
      29: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      32: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      35: invokevirtual #240                // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: aload_1
      39: areturn

  protected java.lang.String invalidMessageLoadBalancingType$str();
    Code:
       0: ldc_w         #268                // String AMQ119113: Invalid message load balancing type {0}
       3: areturn

  public final java.lang.IllegalArgumentException invalidMessageLoadBalancingType(java.lang.String);
    Code:
       0: new           #121                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: invokevirtual #269                // Method invalidMessageLoadBalancingType$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: invokevirtual #124                // Method java/lang/IllegalArgumentException.getStackTrace:()[Ljava/lang/StackTraceElement;
      27: astore_3
      28: aload_2
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      36: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      39: invokevirtual #125                // Method java/lang/IllegalArgumentException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      42: aload_2
      43: areturn

  protected java.lang.String replicationSynchronizationTimeout$str();
    Code:
       0: ldc_w         #270                // String AMQ119114: Replication synchronization process timed out after waiting {0} milliseconds
       3: areturn

  public final java.lang.IllegalStateException replicationSynchronizationTimeout(long);
    Code:
       0: new           #236                // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #271                // Method replicationSynchronizationTimeout$str:()Ljava/lang/String;
       8: iconst_1
       9: anewarray     #6                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: lload_1
      15: invokestatic  #89                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: aastore
      19: invokestatic  #7                  // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: invokespecial #238                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: astore_3
      26: aload_3
      27: invokevirtual #239                // Method java/lang/IllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      30: astore        4
      32: aload_3
      33: aload         4
      35: iconst_1
      36: aload         4
      38: arraylength
      39: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      42: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      45: invokevirtual #240                // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      48: aload_3
      49: areturn

  protected java.lang.String liveBackupMismatch$str();
    Code:
       0: ldc_w         #272                // String AMQ119115: Colocated Policy hasn\'t different type live and backup
       3: areturn

  public final org.apache.activemq.artemis.api.core.ActiveMQIllegalStateException liveBackupMismatch();
    Code:
       0: new           #70                 // class org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #273                // Method liveBackupMismatch$str:()Ljava/lang/String;
       8: invokespecial #72                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: invokevirtual #73                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.getStackTrace:()[Ljava/lang/StackTraceElement;
      16: astore_2
      17: aload_1
      18: aload_2
      19: iconst_1
      20: aload_2
      21: arraylength
      22: invokestatic  #22                 // Method java/util/Arrays.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;
      25: checkcast     #23                 // class "[Ljava/lang/StackTraceElement;"
      28: invokevirtual #74                 // Method org/apache/activemq/artemis/api/core/ActiveMQIllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      31: aload_1
      32: areturn

  static {};
    Code:
       0: new           #3                  // class org/apache/activemq/artemis/core/server/ActiveMQMessageBundle_$bundle
       3: dup
       4: invokespecial #274                // Method "<init>":()V
       7: putstatic     #2                  // Field INSTANCE:Lorg/apache/activemq/artemis/core/server/ActiveMQMessageBundle_$bundle;
      10: return
}
