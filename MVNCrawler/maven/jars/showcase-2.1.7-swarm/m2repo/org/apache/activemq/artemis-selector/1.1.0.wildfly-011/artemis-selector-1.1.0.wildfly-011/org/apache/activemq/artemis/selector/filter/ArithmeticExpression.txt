Compiled from "ArithmeticExpression.java"
public abstract class org.apache.activemq.artemis.selector.filter.ArithmeticExpression extends org.apache.activemq.artemis.selector.filter.BinaryExpression {
  protected static final int INTEGER;

  protected static final int LONG;

  protected static final int DOUBLE;

  boolean convertStringExpressions;

  public org.apache.activemq.artemis.selector.filter.ArithmeticExpression(org.apache.activemq.artemis.selector.filter.Expression, org.apache.activemq.artemis.selector.filter.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/activemq/artemis/selector/filter/BinaryExpression."<init>":(Lorg/apache/activemq/artemis/selector/filter/Expression;Lorg/apache/activemq/artemis/selector/filter/Expression;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field convertStringExpressions:Z
      11: aload_0
      12: getstatic     #3                  // Field org/apache/activemq/artemis/selector/filter/ComparisonExpression.CONVERT_STRING_EXPRESSIONS:Ljava/lang/ThreadLocal;
      15: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: putfield      #2                  // Field convertStringExpressions:Z
      29: return

  public static org.apache.activemq.artemis.selector.filter.Expression createPlus(org.apache.activemq.artemis.selector.filter.Expression, org.apache.activemq.artemis.selector.filter.Expression);
    Code:
       0: new           #5                  // class org/apache/activemq/artemis/selector/filter/ArithmeticExpression$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #6                  // Method org/apache/activemq/artemis/selector/filter/ArithmeticExpression$1."<init>":(Lorg/apache/activemq/artemis/selector/filter/Expression;Lorg/apache/activemq/artemis/selector/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.artemis.selector.filter.Expression createMinus(org.apache.activemq.artemis.selector.filter.Expression, org.apache.activemq.artemis.selector.filter.Expression);
    Code:
       0: new           #7                  // class org/apache/activemq/artemis/selector/filter/ArithmeticExpression$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #8                  // Method org/apache/activemq/artemis/selector/filter/ArithmeticExpression$2."<init>":(Lorg/apache/activemq/artemis/selector/filter/Expression;Lorg/apache/activemq/artemis/selector/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.artemis.selector.filter.Expression createMultiply(org.apache.activemq.artemis.selector.filter.Expression, org.apache.activemq.artemis.selector.filter.Expression);
    Code:
       0: new           #9                  // class org/apache/activemq/artemis/selector/filter/ArithmeticExpression$3
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #10                 // Method org/apache/activemq/artemis/selector/filter/ArithmeticExpression$3."<init>":(Lorg/apache/activemq/artemis/selector/filter/Expression;Lorg/apache/activemq/artemis/selector/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.artemis.selector.filter.Expression createDivide(org.apache.activemq.artemis.selector.filter.Expression, org.apache.activemq.artemis.selector.filter.Expression);
    Code:
       0: new           #11                 // class org/apache/activemq/artemis/selector/filter/ArithmeticExpression$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #12                 // Method org/apache/activemq/artemis/selector/filter/ArithmeticExpression$4."<init>":(Lorg/apache/activemq/artemis/selector/filter/Expression;Lorg/apache/activemq/artemis/selector/filter/Expression;)V
       9: areturn

  public static org.apache.activemq.artemis.selector.filter.Expression createMod(org.apache.activemq.artemis.selector.filter.Expression, org.apache.activemq.artemis.selector.filter.Expression);
    Code:
       0: new           #13                 // class org/apache/activemq/artemis/selector/filter/ArithmeticExpression$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method org/apache/activemq/artemis/selector/filter/ArithmeticExpression$5."<init>":(Lorg/apache/activemq/artemis/selector/filter/Expression;Lorg/apache/activemq/artemis/selector/filter/Expression;)V
       9: areturn

  protected java.lang.Number plus(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method numberType:(Ljava/lang/Number;Ljava/lang/Number;)I
       6: lookupswitch  { // 2
                     1: 32
                     2: 49
               default: 66
          }
      32: new           #16                 // class java/lang/Integer
      35: dup
      36: aload_1
      37: invokevirtual #17                 // Method java/lang/Number.intValue:()I
      40: aload_2
      41: invokevirtual #17                 // Method java/lang/Number.intValue:()I
      44: iadd
      45: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      48: areturn
      49: new           #19                 // class java/lang/Long
      52: dup
      53: aload_1
      54: invokevirtual #20                 // Method java/lang/Number.longValue:()J
      57: aload_2
      58: invokevirtual #20                 // Method java/lang/Number.longValue:()J
      61: ladd
      62: invokespecial #21                 // Method java/lang/Long."<init>":(J)V
      65: areturn
      66: new           #22                 // class java/lang/Double
      69: dup
      70: aload_1
      71: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      74: aload_2
      75: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      78: dadd
      79: invokespecial #24                 // Method java/lang/Double."<init>":(D)V
      82: areturn

  protected java.lang.Number minus(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method numberType:(Ljava/lang/Number;Ljava/lang/Number;)I
       6: lookupswitch  { // 2
                     1: 32
                     2: 49
               default: 66
          }
      32: new           #16                 // class java/lang/Integer
      35: dup
      36: aload_1
      37: invokevirtual #17                 // Method java/lang/Number.intValue:()I
      40: aload_2
      41: invokevirtual #17                 // Method java/lang/Number.intValue:()I
      44: isub
      45: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      48: areturn
      49: new           #19                 // class java/lang/Long
      52: dup
      53: aload_1
      54: invokevirtual #20                 // Method java/lang/Number.longValue:()J
      57: aload_2
      58: invokevirtual #20                 // Method java/lang/Number.longValue:()J
      61: lsub
      62: invokespecial #21                 // Method java/lang/Long."<init>":(J)V
      65: areturn
      66: new           #22                 // class java/lang/Double
      69: dup
      70: aload_1
      71: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      74: aload_2
      75: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      78: dsub
      79: invokespecial #24                 // Method java/lang/Double."<init>":(D)V
      82: areturn

  protected java.lang.Number multiply(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method numberType:(Ljava/lang/Number;Ljava/lang/Number;)I
       6: lookupswitch  { // 2
                     1: 32
                     2: 49
               default: 66
          }
      32: new           #16                 // class java/lang/Integer
      35: dup
      36: aload_1
      37: invokevirtual #17                 // Method java/lang/Number.intValue:()I
      40: aload_2
      41: invokevirtual #17                 // Method java/lang/Number.intValue:()I
      44: imul
      45: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      48: areturn
      49: new           #19                 // class java/lang/Long
      52: dup
      53: aload_1
      54: invokevirtual #20                 // Method java/lang/Number.longValue:()J
      57: aload_2
      58: invokevirtual #20                 // Method java/lang/Number.longValue:()J
      61: lmul
      62: invokespecial #21                 // Method java/lang/Long."<init>":(J)V
      65: areturn
      66: new           #22                 // class java/lang/Double
      69: dup
      70: aload_1
      71: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      74: aload_2
      75: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      78: dmul
      79: invokespecial #24                 // Method java/lang/Double."<init>":(D)V
      82: areturn

  protected java.lang.Number divide(java.lang.Number, java.lang.Number);
    Code:
       0: new           #22                 // class java/lang/Double
       3: dup
       4: aload_1
       5: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
       8: aload_2
       9: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      12: ddiv
      13: invokespecial #24                 // Method java/lang/Double."<init>":(D)V
      16: areturn

  protected java.lang.Number mod(java.lang.Number, java.lang.Number);
    Code:
       0: new           #22                 // class java/lang/Double
       3: dup
       4: aload_1
       5: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
       8: aload_2
       9: invokevirtual #23                 // Method java/lang/Number.doubleValue:()D
      12: drem
      13: invokespecial #24                 // Method java/lang/Double."<init>":(D)V
      16: areturn

  private int numberType(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method isDouble:(Ljava/lang/Number;)Z
       5: ifne          16
       8: aload_0
       9: aload_2
      10: invokespecial #25                 // Method isDouble:(Ljava/lang/Number;)Z
      13: ifeq          18
      16: iconst_3
      17: ireturn
      18: aload_1
      19: instanceof    #19                 // class java/lang/Long
      22: ifne          32
      25: aload_2
      26: instanceof    #19                 // class java/lang/Long
      29: ifeq          34
      32: iconst_2
      33: ireturn
      34: iconst_1
      35: ireturn

  private boolean isDouble(java.lang.Number);
    Code:
       0: aload_1
       1: instanceof    #27                 // class java/lang/Float
       4: ifne          14
       7: aload_1
       8: instanceof    #22                 // class java/lang/Double
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected java.lang.Number asNumber(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #28                 // class java/lang/Number
       4: ifeq          12
       7: aload_1
       8: checkcast     #28                 // class java/lang/Number
      11: areturn
      12: aload_0
      13: getfield      #2                  // Field convertStringExpressions:Z
      16: ifeq          91
      19: aload_1
      20: instanceof    #29                 // class java/lang/String
      23: ifeq          91
      26: aload_1
      27: checkcast     #29                 // class java/lang/String
      30: astore_2
      31: aload_2
      32: ldc           #30                 // String .
      34: invokevirtual #31                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      37: ifeq          49
      40: new           #22                 // class java/lang/Double
      43: dup
      44: aload_2
      45: invokespecial #32                 // Method java/lang/Double."<init>":(Ljava/lang/String;)V
      48: areturn
      49: new           #19                 // class java/lang/Long
      52: dup
      53: aload_2
      54: invokespecial #33                 // Method java/lang/Long."<init>":(Ljava/lang/String;)V
      57: areturn
      58: astore_3
      59: new           #35                 // class java/lang/RuntimeException
      62: dup
      63: new           #36                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #38                 // String Cannot convert value:
      72: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #41                 // String  into a number
      81: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: new           #35                 // class java/lang/RuntimeException
      94: dup
      95: new           #36                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #38                 // String Cannot convert value:
     104: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: ldc           #41                 // String  into a number
     113: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     122: athrow
    Exception table:
       from    to  target type
          31    48    58   Class java/lang/NumberFormatException
          49    57    58   Class java/lang/NumberFormatException

  public java.lang.Object evaluate(org.apache.activemq.artemis.selector.filter.Filterable) throws org.apache.activemq.artemis.selector.filter.FilterException;
    Code:
       0: aload_0
       1: getfield      #44                 // Field left:Lorg/apache/activemq/artemis/selector/filter/Expression;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod org/apache/activemq/artemis/selector/filter/Expression.evaluate:(Lorg/apache/activemq/artemis/selector/filter/Filterable;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: getfield      #46                 // Field right:Lorg/apache/activemq/artemis/selector/filter/Expression;
      21: aload_1
      22: invokeinterface #45,  2           // InterfaceMethod org/apache/activemq/artemis/selector/filter/Expression.evaluate:(Lorg/apache/activemq/artemis/selector/filter/Filterable;)Ljava/lang/Object;
      27: astore_3
      28: aload_3
      29: ifnonnull     34
      32: aconst_null
      33: areturn
      34: aload_0
      35: aload_2
      36: aload_3
      37: invokevirtual #47                 // Method evaluate:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: areturn

  protected abstract java.lang.Object evaluate(java.lang.Object, java.lang.Object);
}
