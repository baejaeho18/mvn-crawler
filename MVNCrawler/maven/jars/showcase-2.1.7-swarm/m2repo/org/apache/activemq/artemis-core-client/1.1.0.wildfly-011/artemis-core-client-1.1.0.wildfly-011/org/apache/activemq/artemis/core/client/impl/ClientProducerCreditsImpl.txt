Compiled from "ClientProducerCreditsImpl.java"
public class org.apache.activemq.artemis.core.client.impl.ClientProducerCreditsImpl implements org.apache.activemq.artemis.core.client.impl.ClientProducerCredits {
  private final java.util.concurrent.Semaphore semaphore;

  private final int windowSize;

  private volatile boolean closed;

  private boolean blocked;

  private final org.apache.activemq.artemis.api.core.SimpleString address;

  private final org.apache.activemq.artemis.core.client.impl.ClientSessionInternal session;

  private int pendingCredits;

  private int arriving;

  private int refCount;

  private boolean serverRespondedWithFail;

  private org.apache.activemq.artemis.spi.core.remoting.SessionContext sessionContext;

  public org.apache.activemq.artemis.core.client.impl.ClientProducerCreditsImpl(org.apache.activemq.artemis.core.client.impl.ClientSessionInternal, org.apache.activemq.artemis.api.core.SimpleString, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field session:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionInternal;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field address:Lorg/apache/activemq/artemis/api/core/SimpleString;
      14: aload_0
      15: iload_3
      16: iconst_2
      17: idiv
      18: putfield      #4                  // Field windowSize:I
      21: aload_0
      22: new           #5                  // class java/util/concurrent/Semaphore
      25: dup
      26: iconst_0
      27: iconst_0
      28: invokespecial #6                  // Method java/util/concurrent/Semaphore."<init>":(IZ)V
      31: putfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      34: return

  public void init(org.apache.activemq.artemis.spi.core.remoting.SessionContext);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field windowSize:I
       5: invokespecial #8                  // Method checkCredits:(I)V
       8: aload_0
       9: aload_1
      10: putfield      #9                  // Field sessionContext:Lorg/apache/activemq/artemis/spi/core/remoting/SessionContext;
      13: aload_0
      14: getfield      #9                  // Field sessionContext:Lorg/apache/activemq/artemis/spi/core/remoting/SessionContext;
      17: aload_0
      18: getfield      #3                  // Field address:Lorg/apache/activemq/artemis/api/core/SimpleString;
      21: aload_0
      22: invokevirtual #10                 // Method org/apache/activemq/artemis/spi/core/remoting/SessionContext.linkFlowControl:(Lorg/apache/activemq/artemis/api/core/SimpleString;Lorg/apache/activemq/artemis/core/client/impl/ClientProducerCreditsImpl;)V
      25: return

  public void acquireCredits(int) throws java.lang.InterruptedException, org.apache.activemq.artemis.api.core.ActiveMQException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #8                  // Method checkCredits:(I)V
       5: aload_0
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_0
      10: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      13: iload_1
      14: invokevirtual #11                 // Method java/util/concurrent/Semaphore.tryAcquire:(I)Z
      17: istore_2
      18: aload_3
      19: monitorexit
      20: goto          30
      23: astore        4
      25: aload_3
      26: monitorexit
      27: aload         4
      29: athrow
      30: iload_2
      31: ifne          114
      34: aload_0
      35: getfield      #12                 // Field closed:Z
      38: ifne          114
      41: aload_0
      42: iconst_1
      43: putfield      #13                 // Field blocked:Z
      46: aload_0
      47: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      50: iload_1
      51: ldc2_w        #14                 // long 10l
      54: getstatic     #16                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      57: invokevirtual #17                 // Method java/util/concurrent/Semaphore.tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z
      60: ifne          96
      63: getstatic     #18                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientLogger.LOGGER:Lorg/apache/activemq/artemis/core/client/ActiveMQClientLogger;
      66: new           #19                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #21                 // String
      75: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: getfield      #3                  // Field address:Lorg/apache/activemq/artemis/api/core/SimpleString;
      82: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokeinterface #25,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientLogger.outOfCreditOnFlowControl:(Ljava/lang/String;)V
      93: goto          46
      96: aload_0
      97: iconst_0
      98: putfield      #13                 // Field blocked:Z
     101: goto          114
     104: astore        5
     106: aload_0
     107: iconst_0
     108: putfield      #13                 // Field blocked:Z
     111: aload         5
     113: athrow
     114: aload_0
     115: dup
     116: astore_3
     117: monitorenter
     118: aload_0
     119: dup
     120: getfield      #26                 // Field pendingCredits:I
     123: iload_1
     124: isub
     125: putfield      #26                 // Field pendingCredits:I
     128: aload_3
     129: monitorexit
     130: goto          140
     133: astore        6
     135: aload_3
     136: monitorexit
     137: aload         6
     139: athrow
     140: aload_0
     141: dup
     142: astore_3
     143: monitorenter
     144: aload_0
     145: getfield      #27                 // Field serverRespondedWithFail:Z
     148: ifeq          191
     151: aload_0
     152: iconst_0
     153: putfield      #27                 // Field serverRespondedWithFail:Z
     156: aload_0
     157: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
     160: invokevirtual #28                 // Method java/util/concurrent/Semaphore.drainPermits:()I
     163: pop
     164: aload_0
     165: iconst_0
     166: putfield      #26                 // Field pendingCredits:I
     169: aload_0
     170: iconst_0
     171: putfield      #29                 // Field arriving:I
     174: getstatic     #30                 // Field org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.BUNDLE:Lorg/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle;
     177: aload_0
     178: getfield      #3                  // Field address:Lorg/apache/activemq/artemis/api/core/SimpleString;
     181: invokevirtual #31                 // Method org/apache/activemq/artemis/api/core/SimpleString.toString:()Ljava/lang/String;
     184: iload_1
     185: invokeinterface #32,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/ActiveMQClientMessageBundle.addressIsFull:(Ljava/lang/String;I)Lorg/apache/activemq/artemis/api/core/ActiveMQAddressFullException;
     190: athrow
     191: aload_3
     192: monitorexit
     193: goto          203
     196: astore        7
     198: aload_3
     199: monitorexit
     200: aload         7
     202: athrow
     203: return
    Exception table:
       from    to  target type
           9    20    23   any
          23    27    23   any
          46    96   104   any
         104   106   104   any
         118   130   133   any
         133   137   133   any
         144   193   196   any
         196   200   196   any

  public boolean isBlocked();
    Code:
       0: aload_0
       1: getfield      #13                 // Field blocked:Z
       4: ireturn

  public int getBalance();
    Code:
       0: aload_0
       1: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #33                 // Method java/util/concurrent/Semaphore.availablePermits:()I
       7: ireturn

  public void receiveCredits(int);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: dup
       6: getfield      #29                 // Field arriving:I
       9: iload_1
      10: isub
      11: putfield      #29                 // Field arriving:I
      14: aload_2
      15: monitorexit
      16: goto          24
      19: astore_3
      20: aload_2
      21: monitorexit
      22: aload_3
      23: athrow
      24: aload_0
      25: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      28: iload_1
      29: invokevirtual #34                 // Method java/util/concurrent/Semaphore.release:(I)V
      32: return
    Exception table:
       from    to  target type
           4    16    19   any
          19    22    19   any

  public void receiveFailCredits(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #27                 // Field serverRespondedWithFail:Z
       5: aload_0
       6: iload_1
       7: invokevirtual #35                 // Method receiveCredits:(I)V
      10: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #28                 // Method java/util/concurrent/Semaphore.drainPermits:()I
       7: pop
       8: aload_0
       9: getfield      #26                 // Field pendingCredits:I
      12: istore_1
      13: aload_0
      14: iconst_0
      15: putfield      #26                 // Field pendingCredits:I
      18: aload_0
      19: iconst_0
      20: putfield      #29                 // Field arriving:I
      23: aload_0
      24: aload_0
      25: getfield      #4                  // Field windowSize:I
      28: iconst_2
      29: imul
      30: iload_1
      31: invokestatic  #36                 // Method java/lang/Math.max:(II)I
      34: invokespecial #8                  // Method checkCredits:(I)V
      37: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field closed:Z
       5: aload_0
       6: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       9: ldc           #38                 // int 1073741823
      11: invokevirtual #34                 // Method java/util/concurrent/Semaphore.release:(I)V
      14: return

  public synchronized void incrementRefCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #39                 // Field refCount:I
       5: iconst_1
       6: iadd
       7: putfield      #39                 // Field refCount:I
      10: return

  public synchronized int decrementRefCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #39                 // Field refCount:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #39                 // Field refCount:I
      11: ireturn

  public synchronized void releaseOutstanding();
    Code:
       0: aload_0
       1: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #28                 // Method java/util/concurrent/Semaphore.drainPermits:()I
       7: pop
       8: return

  private void checkCredits(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field windowSize:I
       5: invokestatic  #36                 // Method java/lang/Math.max:(II)I
       8: istore_2
       9: iconst_m1
      10: istore_3
      11: aload_0
      12: dup
      13: astore        4
      15: monitorenter
      16: aload_0
      17: getfield      #7                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      20: invokevirtual #33                 // Method java/util/concurrent/Semaphore.availablePermits:()I
      23: aload_0
      24: getfield      #29                 // Field arriving:I
      27: iadd
      28: iload_2
      29: if_icmpge     59
      32: iload_2
      33: aload_0
      34: getfield      #29                 // Field arriving:I
      37: isub
      38: istore_3
      39: aload_0
      40: dup
      41: getfield      #26                 // Field pendingCredits:I
      44: iload_3
      45: iadd
      46: putfield      #26                 // Field pendingCredits:I
      49: aload_0
      50: dup
      51: getfield      #29                 // Field arriving:I
      54: iload_3
      55: iadd
      56: putfield      #29                 // Field arriving:I
      59: aload         4
      61: monitorexit
      62: goto          73
      65: astore        5
      67: aload         4
      69: monitorexit
      70: aload         5
      72: athrow
      73: iload_3
      74: iconst_m1
      75: if_icmpeq     83
      78: aload_0
      79: iload_3
      80: invokespecial #40                 // Method requestCredits:(I)V
      83: return
    Exception table:
       from    to  target type
          16    62    65   any
          65    70    65   any

  private void requestCredits(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field session:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionInternal;
       4: iload_1
       5: aload_0
       6: getfield      #3                  // Field address:Lorg/apache/activemq/artemis/api/core/SimpleString;
       9: invokeinterface #41,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionInternal.sendProducerCreditsMessage:(ILorg/apache/activemq/artemis/api/core/SimpleString;)V
      14: return
}
