Compiled from "ClientProtocolManager.java"
public interface org.apache.activemq.artemis.spi.core.remoting.ClientProtocolManager {
  public abstract org.apache.activemq.artemis.spi.core.protocol.RemotingConnection connect(org.apache.activemq.artemis.spi.core.remoting.Connection, long, long, java.util.List<org.apache.activemq.artemis.api.core.Interceptor>, java.util.List<org.apache.activemq.artemis.api.core.Interceptor>, org.apache.activemq.artemis.spi.core.remoting.TopologyResponseHandler);

  public abstract org.apache.activemq.artemis.spi.core.protocol.RemotingConnection getCurrentConnection();

  public abstract java.util.concurrent.locks.Lock lockSessionCreation();

  public abstract boolean waitOnLatch(long) throws java.lang.InterruptedException;

  public abstract void stop();

  public abstract boolean isAlive();

  public abstract void addChannelHandlers(io.netty.channel.ChannelPipeline);

  public abstract void sendSubscribeTopology(boolean);

  public abstract void ping(long);

  public abstract org.apache.activemq.artemis.spi.core.remoting.SessionContext createSessionContext(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean, int, int) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract boolean cleanupBeforeFailover(org.apache.activemq.artemis.api.core.ActiveMQException);

  public abstract boolean checkForFailover(java.lang.String) throws org.apache.activemq.artemis.api.core.ActiveMQException;

  public abstract void setSessionFactory(org.apache.activemq.artemis.api.core.client.ClientSessionFactory);

  public abstract org.apache.activemq.artemis.api.core.client.ClientSessionFactory getSessionFactory();

  public abstract java.lang.String getName();
}
