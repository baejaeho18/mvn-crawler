Compiled from "SharedNothingBackupQuorum.java"
public class org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum implements org.apache.activemq.artemis.core.server.cluster.qourum.Quorum,org.apache.activemq.artemis.api.core.client.SessionFailureListener {
  private org.apache.activemq.artemis.core.server.cluster.qourum.QuorumManager quorumManager;

  private java.lang.String targetServerID;

  private final org.apache.activemq.artemis.core.server.NodeManager nodeManager;

  private final org.apache.activemq.artemis.core.persistence.StorageManager storageManager;

  private final java.util.concurrent.ScheduledExecutorService scheduledPool;

  private java.util.concurrent.CountDownLatch latch;

  private org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal sessionFactory;

  private org.apache.activemq.artemis.core.protocol.core.CoreRemotingConnection connection;

  public static final int WAIT_TIME_AFTER_FIRST_LIVE_STOPPING_MSG;

  private volatile org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum$BACKUP_ACTIVATION signal;

  private static final int LATCH_TIMEOUT;

  private static final int RECONNECT_ATTEMPTS;

  private final java.lang.Object decisionGuard;

  public org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum(org.apache.activemq.artemis.core.persistence.StorageManager, org.apache.activemq.artemis.core.server.NodeManager, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String
       7: putfield      #3                  // Field targetServerID:Ljava/lang/String;
      10: aload_0
      11: new           #4                  // class java/lang/Object
      14: dup
      15: invokespecial #1                  // Method java/lang/Object."<init>":()V
      18: putfield      #5                  // Field decisionGuard:Ljava/lang/Object;
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field scheduledPool:Ljava/util/concurrent/ScheduledExecutorService;
      31: aload_0
      32: new           #8                  // class java/util/concurrent/CountDownLatch
      35: dup
      36: iconst_1
      37: invokespecial #9                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      40: putfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      43: aload_0
      44: aload_2
      45: putfield      #11                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
      48: return

  public java.lang.String getName();
    Code:
       0: ldc           #12                 // String SharedNothingBackupQuorum
       2: areturn

  public void decideOnAction(org.apache.activemq.artemis.core.client.impl.Topology);
    Code:
       0: aload_0
       1: getfield      #5                  // Field decisionGuard:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #13                 // Field signal:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      11: getstatic     #14                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.FAIL_OVER:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      14: if_acmpne     20
      17: aload_2
      18: monitorexit
      19: return
      20: aload_0
      21: invokespecial #15                 // Method isLiveDown:()Z
      24: ifne          61
      27: aload_0
      28: getfield      #16                 // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
      31: iconst_5
      32: iconst_0
      33: invokeinterface #18,  3           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.connect:(IZ)V
      38: aload_2
      39: monitorexit
      40: return
      41: astore_3
      42: aload_3
      43: invokevirtual #20                 // Method org/apache/activemq/artemis/api/core/ActiveMQException.getType:()Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
      46: getstatic     #21                 // Field org/apache/activemq/artemis/api/core/ActiveMQExceptionType.NOT_CONNECTED:Lorg/apache/activemq/artemis/api/core/ActiveMQExceptionType;
      49: if_acmpeq     61
      52: getstatic     #22                 // Field org/apache/activemq/artemis/core/server/ActiveMQServerLogger.LOGGER:Lorg/apache/activemq/artemis/core/server/ActiveMQServerLogger;
      55: aload_3
      56: invokeinterface #23,  2           // InterfaceMethod org/apache/activemq/artemis/core/server/ActiveMQServerLogger.errorReConnecting:(Ljava/lang/Exception;)V
      61: aload_0
      62: getstatic     #14                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.FAIL_OVER:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      65: putfield      #13                 // Field signal:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      68: aload_2
      69: monitorexit
      70: goto          80
      73: astore        4
      75: aload_2
      76: monitorexit
      77: aload         4
      79: athrow
      80: aload_0
      81: getfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      84: invokevirtual #24                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      87: return
    Exception table:
       from    to  target type
          27    38    41   Class org/apache/activemq/artemis/api/core/ActiveMQException
           7    19    73   any
          20    40    73   any
          41    70    73   any
          73    77    73   any

  public void liveIDSet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field targetServerID:Ljava/lang/String;
       5: aload_0
       6: getfield      #11                 // Field nodeManager:Lorg/apache/activemq/artemis/core/server/NodeManager;
       9: aload_1
      10: invokevirtual #25                 // Method org/apache/activemq/artemis/core/server/NodeManager.setNodeID:(Ljava/lang/String;)V
      13: return

  public void setQuorumManager(org.apache.activemq.artemis.core.server.cluster.qourum.QuorumManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
       5: return

  public void nodeDown(org.apache.activemq.artemis.core.client.impl.Topology, long, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field targetServerID:Ljava/lang/String;
       4: aload         4
       6: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          17
      12: aload_0
      13: aload_1
      14: invokevirtual #28                 // Method decideOnAction:(Lorg/apache/activemq/artemis/core/client/impl/Topology;)V
      17: return

  public void nodeUp(org.apache.activemq.artemis.core.client.impl.Topology);
    Code:
       0: return

  public void connectionFailed(org.apache.activemq.artemis.api.core.ActiveMQException, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       5: invokeinterface #29,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getServerLocator:()Lorg/apache/activemq/artemis/api/core/client/ServerLocator;
      10: invokeinterface #30,  1           // InterfaceMethod org/apache/activemq/artemis/api/core/client/ServerLocator.getTopology:()Lorg/apache/activemq/artemis/core/client/impl/Topology;
      15: invokevirtual #28                 // Method decideOnAction:(Lorg/apache/activemq/artemis/core/client/impl/Topology;)V
      18: return

  public void connectionFailed(org.apache.activemq.artemis.api.core.ActiveMQException, boolean, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #31                 // Method connectionFailed:(Lorg/apache/activemq/artemis/api/core/ActiveMQException;Z)V
       6: return

  public void beforeReconnect(org.apache.activemq.artemis.api.core.ActiveMQException);
    Code:
       0: return

  public void close();
    Code:
       0: aload_0
       1: getstatic     #32                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.STOP:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
       4: invokevirtual #33                 // Method causeExit:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;)V
       7: return

  public void setSessionFactory(org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryInternal);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field sessionFactory:Lorg/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal;
       5: aload_0
       6: aload_1
       7: invokeinterface #34,  1           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.getConnection:()Lorg/apache/activemq/artemis/spi/core/protocol/RemotingConnection;
      12: checkcast     #35                 // class org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection
      15: putfield      #36                 // Field connection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      18: aload_0
      19: getfield      #36                 // Field connection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      22: aload_0
      23: invokeinterface #37,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.addFailureListener:(Lorg/apache/activemq/artemis/core/remoting/FailureListener;)V
      28: aload_1
      29: aload_0
      30: invokeinterface #38,  2           // InterfaceMethod org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryInternal.addFailureListener:(Lorg/apache/activemq/artemis/api/core/client/SessionFailureListener;)V
      35: return

  public synchronized void failOver(org.apache.activemq.artemis.core.protocol.core.impl.wireformat.ReplicationLiveIsStoppingMessage$LiveStopping);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method removeListener:()V
       4: aload_0
       5: getstatic     #14                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.FAIL_OVER:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
       8: putfield      #13                 // Field signal:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      11: aload_1
      12: getstatic     #40                 // Field org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping.FAIL_OVER:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;
      15: if_acmpne     25
      18: aload_0
      19: getfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      22: invokevirtual #24                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      25: aload_1
      26: getstatic     #41                 // Field org/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping.STOP_CALLED:Lorg/apache/activemq/artemis/core/protocol/core/impl/wireformat/ReplicationLiveIsStoppingMessage$LiveStopping;
      29: if_acmpne     62
      32: aload_0
      33: getfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      36: astore_2
      37: aload_0
      38: getfield      #7                  // Field scheduledPool:Ljava/util/concurrent/ScheduledExecutorService;
      41: new           #42                 // class org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$1
      44: dup
      45: aload_0
      46: aload_2
      47: invokespecial #43                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$1."<init>":(Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum;Ljava/util/concurrent/CountDownLatch;)V
      50: ldc2_w        #44                 // long 60l
      53: getstatic     #46                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      56: invokeinterface #47,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      61: pop
      62: return

  public void notifyRegistrationFailed();
    Code:
       0: aload_0
       1: getstatic     #48                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.FAILURE_REPLICATING:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
       4: putfield      #13                 // Field signal:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
       7: aload_0
       8: getfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      11: invokevirtual #24                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      14: return

  public void notifyAlreadyReplicating();
    Code:
       0: aload_0
       1: getstatic     #49                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.ALREADY_REPLICATING:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
       4: putfield      #13                 // Field signal:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
       7: aload_0
       8: getfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      11: invokevirtual #24                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      14: return

  private void removeListener();
    Code:
       0: aload_0
       1: getfield      #36                 // Field connection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
       4: ifnull        18
       7: aload_0
       8: getfield      #36                 // Field connection:Lorg/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection;
      11: aload_0
      12: invokeinterface #50,  2           // InterfaceMethod org/apache/activemq/artemis/core/protocol/core/CoreRemotingConnection.removeFailureListener:(Lorg/apache/activemq/artemis/core/remoting/FailureListener;)Z
      17: pop
      18: return

  public org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum$BACKUP_ACTIVATION waitForStatusChange();
    Code:
       0: aload_0
       1: getfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
       4: invokevirtual #51                 // Method java/util/concurrent/CountDownLatch.await:()V
       7: goto          15
      10: astore_1
      11: getstatic     #32                 // Field org/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION.STOP:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      14: areturn
      15: aload_0
      16: getfield      #13                 // Field signal:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
      19: areturn
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/InterruptedException

  public synchronized void causeExit(org.apache.activemq.artemis.core.server.cluster.qourum.SharedNothingBackupQuorum$BACKUP_ACTIVATION);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method removeListener:()V
       4: aload_0
       5: aload_1
       6: putfield      #13                 // Field signal:Lorg/apache/activemq/artemis/core/server/cluster/qourum/SharedNothingBackupQuorum$BACKUP_ACTIVATION;
       9: aload_0
      10: getfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      13: invokevirtual #24                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      16: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: new           #8                  // class java/util/concurrent/CountDownLatch
       4: dup
       5: iconst_1
       6: invokespecial #9                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
       9: putfield      #10                 // Field latch:Ljava/util/concurrent/CountDownLatch;
      12: return

  private boolean isLiveDown();
    Code:
       0: aload_0
       1: getfield      #26                 // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
       4: invokevirtual #53                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.getMaxClusterSize:()I
       7: iconst_1
       8: isub
       9: istore_1
      10: new           #54                 // class org/apache/activemq/artemis/core/server/cluster/qourum/QuorumVoteServerConnect
      13: dup
      14: iload_1
      15: aload_0
      16: getfield      #6                  // Field storageManager:Lorg/apache/activemq/artemis/core/persistence/StorageManager;
      19: invokespecial #55                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumVoteServerConnect."<init>":(ILorg/apache/activemq/artemis/core/persistence/StorageManager;)V
      22: astore_2
      23: aload_0
      24: getfield      #26                 // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
      27: aload_2
      28: invokevirtual #56                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.vote:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumVote;)V
      31: aload_2
      32: bipush        30
      34: getstatic     #46                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      37: invokevirtual #57                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumVoteServerConnect.await:(ILjava/util/concurrent/TimeUnit;)V
      40: goto          44
      43: astore_3
      44: aload_0
      45: getfield      #26                 // Field quorumManager:Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager;
      48: aload_2
      49: invokevirtual #58                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumManager.voteComplete:(Lorg/apache/activemq/artemis/core/server/cluster/qourum/QuorumVoteServerConnect;)V
      52: aload_2
      53: invokevirtual #59                 // Method org/apache/activemq/artemis/core/server/cluster/qourum/QuorumVoteServerConnect.getDecision:()Ljava/lang/Boolean;
      56: invokevirtual #60                 // Method java/lang/Boolean.booleanValue:()Z
      59: ireturn
    Exception table:
       from    to  target type
          31    40    43   Class java/lang/InterruptedException
}
